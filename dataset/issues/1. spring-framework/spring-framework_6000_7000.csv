"#","No","Issue Title","Issue Details","State","Labels","User name","created","Updated"
"","22509","Lambda Converter not support","work good is  ```` @Configuration public class MappingConverterConfig {      @Bean     public Converter stringLocalDateConverter() {         return new Converter() {             @Override             public LocalDate convert(String source) {                 return LocalDate.parse(source);             }         };     }  } ```` work bad is: ```` @Bean     public Converter stringLocalDateConverter() {         return LocalDate::parse;     } ```` log is  ```` ""C:\Program Files\Java\jdk-11.0.2\bin\java.exe"" -agentlib:jdwp=transport=dt_socket,address=127.0.0.1:54901,suspend=y,server=n -XX:TieredStopAtLevel=1 -noverify -Dspring.output.ansi.enabled=always -Dcom.sun.management.jmxremote -Dspring.liveBeansView.mbeanDomain -Dspring.application.admin.enabled=true -javaagent:C:\Users\Sofior\.IntelliJIdea2018.3\system\captureAgent\debugger-agent.jar -Dfile.encoding=UTF-8 -classpath ""C:\Users\Sofior\#code\private\house\target\classes;C:\Users\Sofior\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.1.3.RELEASE\spring-boot-starter-aop-2.1.3.RELEASE.jar;C:\Users\Sofior\.m2\repository\org\springframework\boot\spring-boot-starter\2.1.3.RELEASE\spring-boot-starter-2.1.3.RELEASE.jar;C:\Users\Sofior\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.1.3.RELEASE\spring-boot-starter-logging-2.1.3.RELEASE.jar;C:\Users\Sofior\.m2\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;C:\Users\Sofior\.m2\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;C:\Users\Sofior\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.11.2\log4j-to-slf4j-2.11.2.jar;C:\Users\Sofior\.m2\repository\org\apache\logging\log4j\log4j-api\2.11.2\log4j-api-2.11.2.jar;C:\Users\Sofior\.m2\repository\org\slf4j\jul-to-slf4j\1.7.25\jul-to-slf4j-1.7.25.jar;C:\Users\Sofior\.m2\repository\javax\annotation\javax.annotation-api\1.3.2\javax.annotation-api-1.3.2.jar;C:\Users\Sofior\.m2\repository\org\yaml\snakeyaml\1.23\snakeyaml-1.23.jar;C:\Users\Sofior\.m2\repository\org\springframework\spring-aop\5.1.5.RELEASE\spring-aop-5.1.5.RELEASE.jar;C:\Users\Sofior\.m2\repository\org\springframework\spring-beans\5.1.5.RELEASE\spring-beans-5.1.5.RELEASE.jar;C:\Users\Sofior\.m2\repository\org\aspectj\aspectjweaver\1.9.2\aspectjweaver-1.9.2.jar;C:\Users\Sofior\.m2\repository\org\springframework\boot\spring-boot-starter-validation\2.1.3.RELEASE\spring-boot-starter-validation-2.1.3.RELEASE.jar;C:\Users\Sofior\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.16\tomcat-embed-el-9.0.16.jar;C:\Users\Sofior\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.14.Final\hibernate-validator-6.0.14.Final.jar;C:\Users\Sofior\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\Sofior\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Sofior\.m2\repository\com\fasterxml\classmate\1.4.0\classmate-1.4.0.jar;C:\Users\Sofior\.m2\repository\org\springframework\boot\spring-boot-starter-webflux\2.1.3.RELEASE\spring-boot-starter-webflux-2.1.3.RELEASE.jar;C:\Users\Sofior\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.1.3.RELEASE\spring-boot-starter-json-2.1.3.RELEASE.jar;C:\Users\Sofior\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.8\jackson-databind-2.9.8.jar;C:\Users\Sofior\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Sofior\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.8\jackson-core-2.9.8.jar;C:\Users\Sofior\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.9.8\jackson-datatype-jdk8-2.9.8.jar;C:\Users\Sofior\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.9.8\jackson-datatype-jsr310-2.9.8.jar;C:\Users\Sofior\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.9.8\jackson-module-parameter-names-2.9.8.jar;C:\Users\Sofior\.m2\repository\org\springframework\boot\spring-boot-starter-reactor-netty\2.1.3.RELEASE\spring-boot-starter-reactor-netty-2.1.3.RELEASE.jar;C:\Users\Sofior\.m2\repository\io\projectreactor\netty\reactor-netty\0.8.5.RELEASE\reactor-netty-0.8.5.RELEASE.jar;C:\Users\Sofior\.m2\repository\io\netty\netty-codec-http\4.1.33.Final\netty-codec-http-4.1.33.Final.jar;C:\Users\Sofior\.m2\repository\io\netty\netty-common\4.1.33.Final\netty-common-4.1.33.Final.jar;C:\Users\Sofior\.m2\repository\io\netty\netty-buffer\4.1.33.Final\netty-buffer-4.1.33.Final.jar;C:\Users\Sofior\.m2\repository\io\netty\netty-transport\4.1.33.Final\netty-transport-4.1.33.Final.jar;C:\Users\Sofior\.m2\repository\io\netty\netty-resolver\4.1.33.Final\netty-resolver-4.1.33.Final.jar;C:\Users\Sofior\.m2\repository\io\netty\netty-codec\4.1.33.Final\netty-codec-4.1.33.Final.jar;C:\Users\Sofior\.m2\repository\io\netty\netty-codec-http2\4.1.33.Final\netty-codec-http2-4.1.33.Final.jar;C:\Users\Sofior\.m2\repository\io\netty\netty-handler\4.1.33.Final\netty-handler-4.1.33.Final.jar;C:\Users\Sofior\.m2\repository\io\netty\netty-handler-proxy\4.1.33.Final\netty-handler-proxy-4.1.33.Final.jar;C:\Users\Sofior\.m2\repository\io\netty\netty-codec-socks\4.1.33.Final\netty-codec-socks-4.1.33.Final.jar;C:\Users\Sofior\.m2\repository\io\netty\netty-transport-native-epoll\4.1.33.Final\netty-transport-native-epoll-4.1.33.Final-linux-x86_64.jar;C:\Users\Sofior\.m2\repository\io\netty\netty-transport-native-unix-common\4.1.33.Final\netty-transport-native-unix-common-4.1.33.Final.jar;C:\Users\Sofior\.m2\repository\org\springframework\spring-web\5.1.5.RELEASE\spring-web-5.1.5.RELEASE.jar;C:\Users\Sofior\.m2\repository\org\springframework\spring-webflux\5.1.5.RELEASE\spring-webflux-5.1.5.RELEASE.jar;C:\Users\Sofior\.m2\repository\org\synchronoss\cloud\nio-multipart-parser\1.1.0\nio-multipart-parser-1.1.0.jar;C:\Users\Sofior\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\Sofior\.m2\repository\org\synchronoss\cloud\nio-stream-storage\1.1.3\nio-stream-storage-1.1.3.jar;C:\Users\Sofior\.m2\repository\org\springframework\boot\spring-boot-devtools\2.1.3.RELEASE\spring-boot-devtools-2.1.3.RELEASE.jar;C:\Users\Sofior\.m2\repository\org\springframework\boot\spring-boot\2.1.3.RELEASE\spring-boot-2.1.3.RELEASE.jar;C:\Users\Sofior\.m2\repository\org\springframework\spring-context\5.1.5.RELEASE\spring-context-5.1.5.RELEASE.jar;C:\Users\Sofior\.m2\repository\org\springframework\spring-expression\5.1.5.RELEASE\spring-expression-5.1.5.RELEASE.jar;C:\Users\Sofior\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.1.3.RELEASE\spring-boot-autoconfigure-2.1.3.RELEASE.jar;C:\Users\Sofior\.m2\repository\org\springframework\boot\spring-boot-configuration-processor\2.1.3.RELEASE\spring-boot-configuration-processor-2.1.3.RELEASE.jar;C:\Users\Sofior\.m2\repository\org\projectlombok\lombok\1.18.6\lombok-1.18.6.jar;C:\Users\Sofior\.m2\repository\org\springframework\spring-core\5.1.5.RELEASE\spring-core-5.1.5.RELEASE.jar;C:\Users\Sofior\.m2\repository\org\springframework\spring-jcl\5.1.5.RELEASE\spring-jcl-5.1.5.RELEASE.jar;C:\Users\Sofior\.m2\repository\io\projectreactor\reactor-core\3.2.6.RELEASE\reactor-core-3.2.6.RELEASE.jar;C:\Users\Sofior\.m2\repository\org\reactivestreams\reactive-streams\1.0.2\reactive-streams-1.0.2.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2018.3\lib\idea_rt.jar"" site.ownw.micro.house.HouseApplication Connected to the target VM, address: '127.0.0.1:54901', transport: 'socket'    .   ____          _            __ _ _  /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \ ( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \  \\/  ___)| |_)| | | | | || (_| |  ) ) ) )   '  |____| .__|_| |_|_| |_\__, | / / / /  =========|_|==============|___/=/_/_/_/  :: Spring Boot ::        (v2.1.3.RELEASE)  2019-03-05 14:59:16.454  INFO 18492 --- [  restartedMain] site.ownw.micro.house.HouseApplication   : Starting HouseApplication on Sofior-XYD with PID 18492 (started by Sofior in C:\Users\Sofior\#code\private\house) 2019-03-05 14:59:16.456  INFO 18492 --- [  restartedMain] site.ownw.micro.house.HouseApplication   : No active profile set, falling back to default profiles: default 2019-03-05 14:59:16.491  INFO 18492 --- [  restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable 2019-03-05 14:59:16.492  INFO 18492 --- [  restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG' 2019-03-05 14:59:20.500  WARN 18492 --- [  restartedMain] onfigReactiveWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'webFluxConversionService' defined in class path resource [org/springframework/boot/autoconfigure/web/reactive/WebFluxAutoConfiguration$EnableWebFluxConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.format.support.FormattingConversionService]: Factory method 'webFluxConversionService' threw exception; nested exception is java.lang.IllegalArgumentException: Unable to determine source type  and target type  for your Converter [site.ownw.micro.house.config.MappingConverterConfig$$Lambda$380/0x00000008003e4840]; does the class parameterize those types? 2019-03-05 14:59:20.523  INFO 18492 --- [  restartedMain] ConditionEvaluationReportLoggingListener :   Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled. 2019-03-05 14:59:20.534 ERROR 18492 --- [  restartedMain] o.s.boot.SpringApplication               : Application run failed  org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'webFluxConversionService' defined in class path resource [org/springframework/boot/autoconfigure/web/reactive/WebFluxAutoConfiguration$EnableWebFluxConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.format.support.FormattingConversionService]: Factory method 'webFluxConversionService' threw exception; nested exception is java.lang.IllegalArgumentException: Unable to determine source type  and target type  for your Converter [site.ownw.micro.house.config.MappingConverterConfig$$Lambda$380/0x00000008003e4840]; does the class parameterize those types? 	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:627) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE] 	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:607) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE] 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE] 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE] 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE] 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE] 	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE] 	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE] 	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE] 	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE] 	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE] 	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877) ~[spring-context-5.1.5.RELEASE.jar:5.1.5.RELEASE] 	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549) ~[spring-context-5.1.5.RELEASE.jar:5.1.5.RELEASE] 	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:67) ~[spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE] 	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775) ~[spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE] 	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) ~[spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE] 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316) ~[spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE] 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260) ~[spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE] 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248) ~[spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE] 	at site.ownw.micro.house.HouseApplication.main(HouseApplication.java:10) ~[classes/:na] 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na] 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:na] 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na] 	at java.base/java.lang.reflect.Method.invoke(Method.java:566) ~[na:na] 	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) ~[spring-boot-devtools-2.1.3.RELEASE.jar:2.1.3.RELEASE] Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.format.support.FormattingConversionService]: Factory method 'webFluxConversionService' threw exception; nested exception is java.lang.IllegalArgumentException: Unable to determine source type  and target type  for your Converter [site.ownw.micro.house.config.MappingConverterConfig$$Lambda$380/0x00000008003e4840]; does the class parameterize those types? 	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE] 	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE] 	... 24 common frames omitted Caused by: java.lang.IllegalArgumentException: Unable to determine source type  and target type  for your Converter [site.ownw.micro.house.config.MappingConverterConfig$$Lambda$380/0x00000008003e4840]; does the class parameterize those types? 	at org.springframework.core.convert.support.GenericConversionService.addConverter(GenericConversionService.java:92) ~[spring-core-5.1.5.RELEASE.jar:5.1.5.RELEASE] 	at org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$WebFluxConfig.addFormatters(WebFluxAutoConfiguration.java:186) ~[spring-boot-autoconfigure-2.1.3.RELEASE.jar:2.1.3.RELEASE] 	at org.springframework.web.reactive.config.WebFluxConfigurerComposite.lambda$addFormatters$6(WebFluxConfigurerComposite.java:85) ~[spring-webflux-5.1.5.RELEASE.jar:5.1.5.RELEASE] 	at java.base/java.util.ArrayList.forEach(ArrayList.java:1540) ~[na:na] 	at org.springframework.web.reactive.config.WebFluxConfigurerComposite.addFormatters(WebFluxConfigurerComposite.java:85) ~[spring-webflux-5.1.5.RELEASE.jar:5.1.5.RELEASE] 	at org.springframework.web.reactive.config.DelegatingWebFluxConfiguration.addFormatters(DelegatingWebFluxConfiguration.java:84) ~[spring-webflux-5.1.5.RELEASE.jar:5.1.5.RELEASE] 	at org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$EnableWebFluxConfiguration.webFluxConversionService(WebFluxAutoConfiguration.java:232) ~[spring-boot-autoconfigure-2.1.3.RELEASE.jar:2.1.3.RELEASE] 	at org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$EnableWebFluxConfiguration$$EnhancerBySpringCGLIB$$17b2456c.CGLIB$webFluxConversionService$3() ~[spring-boot-autoconfigure-2.1.3.RELEASE.jar:2.1.3.RELEASE] 	at org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$EnableWebFluxConfiguration$$EnhancerBySpringCGLIB$$17b2456c$$FastClassBySpringCGLIB$$cf090196.invoke() ~[spring-boot-autoconfigure-2.1.3.RELEASE.jar:2.1.3.RELEASE] 	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244) ~[spring-core-5.1.5.RELEASE.jar:5.1.5.RELEASE] 	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363) ~[spring-context-5.1.5.RELEASE.jar:5.1.5.RELEASE] 	at org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$EnableWebFluxConfiguration$$EnhancerBySpringCGLIB$$17b2456c.webFluxConversionService() ~[spring-boot-autoconfigure-2.1.3.RELEASE.jar:2.1.3.RELEASE] 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na] 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:na] 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na] 	at java.base/java.lang.reflect.Method.invoke(Method.java:566) ~[na:na] 	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE] 	... 25 common frames omitted  Disconnected from the target VM, address: '127.0.0.1:54901', transport: 'socket'  Process finished with exit code 0  ````","closed","","sheiy","2019-03-05T07:03:27Z","2019-03-05T08:49:36Z"
"","22740","Jackson2ObjectMapperBuilder prevents the registration of multiple modules with a null typeId","With Spring Boot 2.1.3 I registered custom serializers as follows ```   @Bean   public SimpleModule debugProviderJacksonModule(DebugProvider debugProvider)   {     SimpleModule module = new SimpleModule(""debugProviderJacksonModule"", Version.unknownVersion());     module.addSerializer(new UUIDSerializer(debugProvider));     module.addKeySerializer(UUID.class, new UUIDKeySerializer(debugProvider));     return module;   } ``` After updating to 2.1.4 the bean is still found and created but the serializers are not used. I've had to refactor use `Jackson2ObjectMapperBuilderCustomizer` as a workaround.","closed","type: regression,","manderson23","2019-04-04T14:02:56Z","2019-04-08T16:13:03Z"
"","2034","Update StreamUtils.java","why many InputStream in this file function, needn't close?","closed","","liaohang122","2018-11-30T15:13:55Z","2018-11-30T15:18:44Z"
"","2033","in.close();","why inputstream in copyToString function needn't close???","closed","","liaohang122","2018-11-30T15:10:24Z","2018-11-30T15:19:36Z"
"","22340","Avoid MimeType garbage creation","While profiling Spring web applications (MVC and WebFlux), it seems that `MimeType` (through `MediaType`) is creating a significant amount of garbage that could be avoided.  - [x] Caching the `toString()` result of `MimeType` instances, since it cannot change and this method is called many times on hot paths - [x] `MediaType.parseMediaType` is called multiple times, for each request; this could be backed by a simple LRU cache implementation to avoid re-parsing known media types - [ ] `MimeTypeUtils.parseMimeType` parsing code can be improved; a draft implementation shows +40% throughput and -10% allocation. - [x] `MimeTypeUtils` and `MediaType` both have static sections where well-known types are parsed; changing those from `APPLICATION_JSON = MimeType.valueOf(APPLICATION_JSON_VALUE);` to `APPLICATION_JSON = new MimeType(""application"", ""json"");` leads to a bit of duplication but consistently reduces garbage and CPU usage at startup time (approx. 10ms).","closed","type: enhancement,","bclozel","2019-02-04T09:45:43Z","2019-02-05T13:35:03Z"
"","22491","JdbcTemplate.extractOutputParameters should preserve order of parameters","While JdbcTemplate.call returns a LinkedHashMap created by createResultsMap() in order to preserve the order of output parameters of a stored procedure call, the method extractOutputParameters uses just a HashMap thus loosing the order of declared SqlOutParameters. Please replace the HashMap my a LinkedHashMap so that the Map returned by call() uses the order of declared parameters. Version: spring-jdbc:5.1.5","closed","type: enhancement,","rhandsch","2019-02-28T08:40:35Z","2019-02-28T12:46:36Z"
"","22337","Small fix in DeferredResultReturnValueHandlerTests regarding CompletableFuture tests","While I was investigating regarding A problem I am facing (asked as [SO](https://stackoverflow.com/q/54507134/171950) question here), I noticed that there's some small issue that regarding using `SettableListenableFuture` in `CompletableFuture` test cases.","closed","type: task,","mhewedy","2019-02-03T20:55:23Z","2019-02-04T09:36:03Z"
"","2016","SPR-17492: FastByteArrayOutputStream.read byte-to-int conversion","While evaluating FastByteArrayOutputStream I have noticed that it doesn't behave correctly when negative bytes are encountered in the read() method.  Quoting from InputStream javadoc:  > The value byte is returned as an int in the range 0 to 255  To make the situation more obvious in the test I have deliberately used another InputStream implementation to make the situation clear and avoided using constant that could be confusing.","closed","","janotav","2018-11-13T21:11:30Z","2018-11-20T16:08:02Z"
"","22425","getBean(Class) lookup performance degredation on upgrade","When upgrading spring versions from 4.2.3 to 4.3.18 I experienced severe performance degradation in some parts of an application that happens to call `ApplicationContext.getBean(Class)`.  Same code with 4.2.3 is returning results in 2sec, and with 4.3.18 we see around 2-3 minutes.  Any help is appreciated.  ```     Time difference: 4.3.18 - > Start : --- End : ----- Sun Feb 17 09:**40:09** PST 2019 --- Sun Feb 17 09:**43:22** PST 2019      4.2.3 -> Start : --- End : ----- Sun Feb 17 09:19:02 MST 2019 --- Sun Feb 17 09:19:03 MST 2019 ```","open","in: core,","Srikanth249","2019-02-18T06:29:48Z","2021-11-01T11:50:01Z"
"","1994","SPR-17390  - Increase the preprocessing when executing asynchronous calls","When the method is marked @async, it allows developers to customize the pre-processing to meet functional requirements when performing asynchronous calls through a thread pool.  For example, you can customize ThreadFactory to pass information from ThreadLocal to asynchronous threads as ThreadName when you create a thread, and then perform pre-processing at the asynchronous call.  jira: [https://jira.spring.io/browse/SPR-17390](https://jira.spring.io/browse/SPR-17390)","closed","","hqch0708","2018-10-16T11:14:46Z","2018-10-18T07:23:07Z"
"","1993","Increase the preprocessing when executing asynchronous calls.","When the method is marked @Async, it allows developers to customize the pre-processing to meet functional requirements when performing asynchronous calls through a thread pool.  For example, you can customize ThreadFactory to pass information from ThreadLocal to asynchronous threads as ThreadName when you create a thread, and then perform pre-processing at the asynchronous call.   ``` public class ThreadTrace {      private static ThreadLocal traceId = new ThreadLocal<>();      public static void addTrace(String uuid){         traceId.remove();         traceId.set(uuid);     }      public static String getTrace(){         return traceId.get();     } } ```  ``` private AtomicInteger count = new AtomicInteger(0);      @Bean     public AsyncTaskExecutor myTaskExecutor() {         ThreadPoolTaskExecutor executor = new ThreadPoolTaskExecutor();         executor.setMaxPoolSize(100);         executor.setQueueCapacity(50);         executor.setThreadFactory(new ThreadFactory() {             @Override             public Thread newThread(Runnable r) {                 Thread thread = new Thread(r);                 thread.setName(""AsyncThread-"" + count.incrementAndGet() + ""|"" + ThreadTrace.getTrace());                 System.out.println(Thread.currentThread().getName() + ""-----create---"" + ThreadTrace.getTrace());                 return thread;             }         });         return executor;     } ```   ``` @Configuration public class TradeIdAsyncExecutionPreProcessor implements AsyncExecutionPreProcessor {      @Override     public void preProcessBeforeAsyncExecution(MethodInvocation invocation) {         String threadName = Thread.currentThread().getName();         System.out.println(threadName + ""----submit---"" + ThreadTrace.getTrace());         if (threadName.contains(""|"")){             String[] str = Thread.currentThread().getName().split(""\\|"");             ThreadTrace.addTrace(str[1]);             Thread.currentThread().setName(str[0]);         }     } }  ```  Thanks very much. You have reviewed about this pull request.","closed","","hqch0708","2018-10-16T09:19:23Z","2018-10-16T11:38:21Z"
"","22734","How to make the content type application/x-www-form-urlencoded work with @RequestBody annotation?","When the content-type is application/json, `@RequestBody` can read the request body and deserialized into an Object, but the content-type is application/x-www-form-urlencoded, spring-mvc can not support this content-type with `@RequestBody`annotation.  In my project, I encountered this problem, I want to support both of them at the same time, but I don't want to lose the convenience of `@RequestBody`.  Spring mvc supports the deserialization of application/x-www-form-urlencoded and also supports the deserialization of application/json. Why not do it at the same time? I am very confused.  Is there another way to support these two content-type and like `@RequestBody` can auto deserialized request body into an Object?  ```java @RequestMapping(value = ""/test"") public String test(@RequestBody User user) {   return user.toString(); } ```","closed","status: declined,","TGhoul","2019-04-04T03:58:53Z","2022-06-01T08:41:09Z"
"","1999","fix exception chain loss","When the application initialization fails, the wrong log method call causes exception chain loss.","closed","","severloh","2018-10-25T12:29:29Z","2018-10-25T12:51:00Z"
"","22748","DataBinder using constructor parameter should use path variables","When the `DataBinder` uses **setters** it uses request parameters **and path variables** to fill the object. 😃  Given a class `Customer`:  ```java class Customer {   private int id;   private String name;     public void setId(int id) {	this.id = id;}     public void setName(String name) {this.name = name;}     @Override public String toString() {return id + "":"" + name;} } ```  and a class `CustomerController`:  ```java @RestController @RequestMapping(""customers"") class CustomerController {   @PostMapping(""{id}"")   void create(Customer customer) {     System.out.println(customer);   } } ```  when you do a POST request to `localhost:8080/customers/1?name=rod`, the `Customer` is nicely filled and `1:rod` appears on the console.  When the `DataBinder` uses a **parametrized constructor** it does **not use path variables**.  😟  Given a class `Supplier`:  ```java class Supplier {   private final int id;   private final String name;   Supplier(int id, String name) {this.id = id; this.name = name;}   @Override public String toString() {return id + "":"" + name;}   } } ```  and a class `SupplierController`:  ```java @RestController @RequestMapping(""suppliers"") class SupplierController {   @PostMapping(""{id}"")   void create(Supplier supplier) {     System.out.println(supplier);   } } ```  when you do a POST request to `localhost:8080/suppliers/1?name=rod`, you get `java.lang.NoSuchMethodException: org.example.databinder.Supplier.()`.","open","in: core,","desmethans","2019-04-05T13:12:12Z","2019-04-07T11:37:54Z"
"","22777","Update Scheduled.java Javadoc to explicitly include cron element order","When stumbling upon https://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/scheduling/annotation/Scheduled.html I realised that the order is quite difficult to parse for the human eye.  Thus I shortened the initial/first sentence and added the explicit order of the elements for easier reference.","closed","type: documentation,","ottlinger","2019-04-09T15:57:11Z","2019-04-09T17:03:48Z"
"","22612","Custom WebFlux encoders/decoders are placed below defaults","When registering custom encoders and decoders to handle media types (e.g. `application/hal+json`) inside https://github.com/spring-projects/spring-hateoas/blob/master/src/main/java/org/springframework/hateoas/config/WebClientConfigurer.java, they are placed too far down to get read.  The default decoders includes a `DecoderHttpMessageReader` with mime types `application/json` and `application/*+json`.  `application/json` is okay, because that is quite specific. However, putting a pattern matcher for `application/*+json` ahead of `application/hal+json` causes the default one to always get selected. And this will happen for any other media type that registers a JSON-based media type (e.g. HAL-FORMS at `application/prs.hal-forms+json`).  I don't know if this means custom encoders and decoders should be moved to the front, or if something more sophisticated is needed, like putting wildcard-based patterns _after_ non-wildcard-based ones.  For now, it forces us to disable the default registry just to get operational, which in turn causes headache for downstream projects like Spring Cloud Sleuth that are having their own `WebClient` post processing trounced by Spring HATEAOS.","closed","type: enhancement,","gregturn","2019-03-19T14:39:57Z","2019-03-21T00:58:46Z"
"","22449","The for loop in AspectJProxyUtils should add break","When local variable 'foundAspectJAdvice' is set to true, there is no need to continue checking, it should end with break.  ![image](https://user-images.githubusercontent.com/13413715/53161843-b9b69d80-3605-11e9-8988-56197c4c06ce.png)","closed","type: task,","brucelwl","2019-02-21T10:23:17Z","2019-02-25T16:59:21Z"
"","22744","MergedAnnotation does not consider plain annotations","When introspecting `AnnotatedElement`, we are required to work with different APIs to obtain annotation values. Before `MergedAnnotations` was introduced, we used `AnnotationUtils.getAnnotationAttributes(…)` and `AnnotatedElementUtils.getAllAnnotationAttributes(…)`.  From a caller perspective, it would be decent if `MergedAnnotations` would consider also non-meta annotations when creating `MergedAnnotations` from `Annotation` or `AnnotatedElement`. The introspecting code would not need to distinguish whether the annotation is a meta-annotation or directly the annotation being searched for and ideally `MergedAnnotations` is created once to benefit from lookup optimizations.  Using `AnnotatedElementUtils` and `AnnotationUtils` independently loses context of `MergedAnnotations`.  Example code of a class that is typically introspected:  ```java public interface NullableAnnotatedType {  	@org.springframework.lang.Nullable 	String nullableReturn();  	@javax.annotation.Nullable 	String jsr305NullableReturn();  	@javax.annotation.Nonnull(when = When.MAYBE) 	String jsr305NullableReturnWhen(); } ```","closed","","mp911de","2019-04-05T11:28:23Z","2019-04-05T13:17:39Z"
"","22399","Webflux functional endpoints can't handle nesting and pathvariables","When I'm creating nested routes and have a pathVariable in the parent route, the root call to the nested paths goes to the handler in the parent route.  ``` @Bean     public RouterFunction testRoutes(){         return nest(path(""/test""),                 route(GET(""/""), serverRequest -> ServerResponse.ok().syncBody(""TEST""))                         .andRoute(GET(""/{id}""), serverRequest -> ServerResponse.ok().syncBody(""TEST WITH ID""))                         .andNest(path(""/other""),                                 route(GET(""/{id}""), serverRequest -> ServerResponse.ok().syncBody(""OTHER WITH ID""))                                         .andRoute(GET(""/""), serverRequest -> ServerResponse.ok().syncBody(""OTHER""))));     } ```  I would expect a get call to ""/test/other"" would return ""OTHER"" instead it returns ""TEST WITH ID""","closed","status: invalid,","MOES-Media","2019-02-11T11:48:36Z","2019-02-11T16:49:06Z"
"","4735","WebClient.ResponseSpec.onStatus, Unexpected behavior when response body empty","When I use the WebClient.ResponseSpec.onStatus method and try to create an exception that requires the response body content but the response body is empty, the Flux returned by a subsequent bodyToFlux call actually receives an onComplete instead of the expected onError.  To illustrate the behavior, I've created a sample project which reproduces the unexpected behavior in a test case here: https://github.com/danielra/webclient_response_spec_onstatus_empty_response_body_issue_repro The project uses spring boot version `2.1.1.RELEASE` as seen [here](https://github.com/danielra/webclient_response_spec_onstatus_empty_response_body_issue_repro/blob/master/build.gradle#L3).  When run via `./gradlew test --debug` the test case ([here](https://github.com/danielra/webclient_response_spec_onstatus_empty_response_body_issue_repro/blob/master/src/test/java/com/example/demo/DemoApplicationTests.java#L52)) which has at least one character of response body content passes as expected - but the test case which has an empty response body ([here](https://github.com/danielra/webclient_response_spec_onstatus_empty_response_body_issue_repro/blob/master/src/test/java/com/example/demo/DemoApplicationTests.java#L38)) unexpectedly fails.  Please let me know if any further information would be useful.","closed","status: superseded,","danielra","2019-01-10T21:49:05Z","2019-11-15T09:21:56Z"
"","22729","Make StompSession.Subscription.unsubscribe() to return Receiptable","When I use `WebSocketStompClient`, then `StompSession.subscribe` method returns `Subscription` which extends `Receiptable`. The `StompSession.send` is also returns `Receiptable`.  This allows to call `Receiptable.getReceiptId()`, `Receiptable.addReceiptTask(Runnable runnable)` and `Receiptable.addReceiptLostTask(Runnable runnable)`. These methods is useful to for example do `send` only when `subscription` is already created by broker (and not just called on client side).  But `StompSession.Subscription.unsubscribe()` method returns `void`. It also doesn't send `receipt` STOMP header even when `StompSession.setAutoReceipt(true)`.  This prevents to check if unsubscription is already done on broker side (by waiting `RECEIPT` frame after `UNSUBSCRIBE` was sent).  It would be useful if `StompSession.Subscription.unsubscribe()` and `StompSession.Subscription.unsubscribe(StompHeaders headers)` will return `Receiptable` instead of `void`. It can also use `StompSession.autoReceipt` flag to automatically add a `receipt` header, as other methods do.","open","type: enhancement,","xak2000","2019-04-03T10:15:03Z","2019-06-25T16:42:37Z"
"","22714","why are @Configuration classes wraped by the cglib proxy with the ConfigurationClassEnhancer class","when i read and debug spring source, I find that the @Configuration classes are wraped by the cglib proxy with the ConfigurationClassEnhancer class, I don`t understand the reason of the design,, thanks","closed","for: stackoverflow,","yaoyuanyy","2019-03-31T12:38:24Z","2019-03-31T13:24:04Z"
"","22747","Clarify Jackson2ObjectMapper.modulesToInstall override semantics","When calling `Jackson2ObjectMapper.modulesToInstall` this overwrites the complete list of modules whereas methods like `serializers`, `deserializers` and `mixins` can be called multiple times and will append to their collections.","closed","type: task,","manderson23","2019-04-05T12:11:26Z","2019-05-06T23:50:17Z"
"","22640","Strange BeanFactory#isPrototype side effects","When calling `BeanFactory#isPrototype` during bean post-processing, beans seem to disappear, causing the context to fail to finish startup. I am not 100% sure if one is allowed to call this method at this point of time, but neither the Javadoc says that this is forbidden nor does the method name suggest that the context/bean factory gets modified as a side effect of calling this method.  Steps to reproduce: Create an empty spring-boot application with latest version (2.1.3) using initializr and drop in the following post processor:  ```java @Component public class LogPrototypeBeansPostProcessor implements BeanFactoryAware, BeanPostProcessor {      private BeanFactory beanFactory;      @Override     public void setBeanFactory(BeanFactory beanFactory) {         this.beanFactory = beanFactory;     }      @Override     public Object postProcessAfterInitialization(Object bean, String beanName) {         if (beanFactory.isPrototype(beanName)) {             System.out.println(beanName);         }         return bean;     } } ```","open","in: core,","slinstaedt","2019-03-22T11:40:07Z","2019-04-03T12:08:49Z"
"","22428","Cannot define custom XmlFactory with Jackson2ObjectMapperBuilder.xml()","When building an `XMLMapper` thanks to `Jackson2ObjectMapperBuilder.xml()`, it seems to be impossible to supply a custom `XmlFactory`. In the following snippet: ```java Jackson2ObjectMapperBuilder.xml()                 .factory(new MyXmlFactory())                 .build(); ``` A `XmlMapper` will be constructed, but with the default `XmlFactory`, not the supplied instance of `MyXmlFactory`. Reproduced in spring-web 5.1.3","closed","type: enhancement,","ndionisi","2019-02-19T08:47:34Z","2019-03-27T16:15:03Z"
"","22643","Introduce copyProperties() in BeanUtils for copying specific properties","When a bean has a lot of properties, copyProperties() by ignore ones is not convenient if we want to copy a few of fields.","closed","in: core,","matoujun","2019-03-22T15:41:32Z","2021-12-02T15:10:55Z"
"","22251","Typo in cache abstraction chapter","When  i read cache chapter, i find this issues about introduce of cache  algorithm, the last one should be ""if more than one param ..."" ,  but the author wrote ""if more the on param"" .  The Address as below :   https://docs.spring.io/spring/docs/current/spring-framework-reference/integration.html#cache","closed","status: superseded,","yinuo16","2019-01-14T10:59:33Z","2019-01-15T11:25:44Z"
"","22787","Clean up test property values registration in SimpleWebApplicationContext","What is previous `pvs` for since it'll be reassigned?  ```java         @Override 	public void refresh() throws BeansException { 		MutablePropertyValues pvs = new MutablePropertyValues(); 		pvs.add(""commandClass"", ""org.springframework.tests.sample.beans.TestBean""); 		pvs.add(""formView"", ""form""); 		registerSingleton(""/locale.do"", LocaleChecker.class); 		addMessage(""test"", Locale.ENGLISH, ""test message""); 		addMessage(""test"", Locale.CANADA, ""Canadian & test message""); 		addMessage(""testArgs"", Locale.ENGLISH, ""test {0} message {1}""); 		addMessage(""testArgsFormat"", Locale.ENGLISH, ""test {0} message {1,number,#.##} X"");  		registerSingleton(UiApplicationContextUtils.THEME_SOURCE_BEAN_NAME, DummyThemeSource.class);  		// 注册handlerMapping和viewRosolver 		registerSingleton(""handlerMapping"", BeanNameUrlHandlerMapping.class); 		registerSingleton(""viewResolver"", InternalResourceViewResolver.class);  		// 这是什么操作？？？ 		pvs = new MutablePropertyValues(); 		pvs.add(""location"", ""org/springframework/web/context/WEB-INF/sessionContext.xml""); 		registerSingleton(""viewResolver2"", XmlViewResolver.class, pvs);  		super.refresh(); 	} ```","closed","type: task,","ZengYueWei","2019-04-12T03:31:24Z","2019-04-15T14:44:20Z"
"","22736","Avoid exposing (Co)RouterFunctionDsl#invoke","WebFlux.fn `RouterFunctionDsl#invoke` and `CoRouterFunctionDsl#invoke` were wrongly exposed on public API and have never been designed to be used by end users, but rather only invoked from `router { }` or `coRouter { }` builders.  To fix that, avoiding this method being accessible from the DSL and for the sake of consistency with WebMvc.fn `RouterFunctionDsl`, Spring Framework 5.2 turns public `fun invoke()` method to an `internal fun build()` one.  As a consequence `RouterFunctionDsl` and `CoRouterFunctionDsl` are not `open` anymore, they are expected to be extended via Kotlin extensions if needed.","closed","","sdeleuze","2019-04-04T09:53:44Z","2019-04-04T10:17:56Z"
"","22263","DefaultListableBeanFactory.getBean(Class) may throw NoSuchBeanDefinitionException when removeBeanDefinition is being called simultaneously to remove an unrelated bean","We're seeing sporadic NoSuchBeanDefinitionException exceptions out of ApplicationContext's getBean(Class) when in another thread DefaultListableBeanFactory.removeBeanDefinition(String) is being called, for unrelated/different beans. It appears to be a synchronization issue in DefaultListableBeanFactory's implementation (across use of fields beanDefinitionMap and beanDefinitionNames.) I have included a Spring Boot application that reproduces the issue. Having more beans seems to exacerbate the issue, I presume because it increases time to copy beanDefinitionNames in removeBeanDefinition.   We're seeing this with spring-beans-5.1.4 and 5.1.3, unknown about older versions than that.  Here's an unrealistic application that reproduces the condition, which we ran with spring-boot-starter-parent 2.1.2.RELEASE (spring-beans-5.1.4):  ``` package com.example.demo;  import org.springframework.beans.factory.NoSuchBeanDefinitionException; import org.springframework.beans.factory.support.BeanDefinitionBuilder; import org.springframework.beans.factory.support.BeanDefinitionRegistry; import org.springframework.boot.SpringApplication; import org.springframework.boot.autoconfigure.SpringBootApplication; import org.springframework.context.ApplicationContext; import org.springframework.context.ApplicationContextAware; import org.springframework.context.annotation.Bean; import org.springframework.context.annotation.Configuration; import org.springframework.scheduling.annotation.EnableScheduling; import org.springframework.scheduling.annotation.Scheduled; import org.springframework.scheduling.annotation.SchedulingConfigurer; import org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler; import org.springframework.scheduling.config.ScheduledTaskRegistrar;  @Configuration @EnableScheduling @SpringBootApplication public class DemoApplication implements ApplicationContextAware, SchedulingConfigurer {      public static void main(String[] args) {         SpringApplication.run(DemoApplication.class, args);     }      private ApplicationContext context;      public static class Volatile { }      @Scheduled(fixedRate = 400)     public void addAndRemove() {          BeanDefinitionRegistry factory = (BeanDefinitionRegistry)context.getAutowireCapableBeanFactory();          // Simulate add/remove of some beans in one background thread.         // Using larger numbers here makes the exception increasingly easier to hit in get().         for (int i = 0; i < 1000; i++) {             String beanName = ""volatile"" + i;             if (factory.containsBeanDefinition(beanName)) {                 factory.removeBeanDefinition(beanName);             }             factory.registerBeanDefinition(beanName, BeanDefinitionBuilder.genericBeanDefinition(Volatile.class).getBeanDefinition());         }     }      public static class Stable { }      @Bean     public Stable stable()     {         return new Stable();     }      @Scheduled(fixedRate = 1)     public void get() {         try {             // Here get a bean that is not the one(s) being added/removed. Expect to be able to get             // it every time.             context.getBean(Stable.class);          } catch (NoSuchBeanDefinitionException e) {              // Eventually NoSuchBeanDefinitionException occurs (the missing bean being one of the Volatile ones!)             // In DefaultListableBeanFactory.removeBeanDefinition the map is modified, then it starts replacing             // the list w/ new copy. Meanwhile in getBean it iterates across that list in doGetBeanNamesForType,             // but then gets from the map. They're not in the map anymore.              throw new RuntimeException(""This is the problem"", e);         }     }      @Override     public void setApplicationContext(ApplicationContext applicationContext) {         context = applicationContext;     }      @Override     public void configureTasks(ScheduledTaskRegistrar scheduledTaskRegistrar) {         ThreadPoolTaskScheduler threadPoolTaskScheduler = new ThreadPoolTaskScheduler();          // It's necessary to have get() and addAndRemove running on separate threads         threadPoolTaskScheduler.setPoolSize(2);         threadPoolTaskScheduler.initialize();         scheduledTaskRegistrar.setTaskScheduler(threadPoolTaskScheduler);     } } ```","closed","in: core,","waded","2019-01-15T23:15:53Z","2020-07-19T18:02:32Z"
"","22566","Make ConcurrentReferenceHashMap a bit more JIT friendly","We use `ConcurrentReferenceHashMap` for quite a few caches and JITWatch highlighted a few methods that are not that inline friendly. I'm not sure that it makes a big difference in practice, but we could refactor it a little.","closed","in: core,","philwebb","2019-03-11T22:55:10Z","2019-03-23T18:38:01Z"
"","22400","Improve Kotlin documentation","We should update Kotlin documentation to improve how `beans { }` is explained, recommend explicitly JUnit 5 and [Mockk](https://mockk.io/), document constructor based injection in tests, update linked issues, etc.","closed","type: documentation,","sdeleuze","2019-02-11T11:56:25Z","2019-02-13T16:40:12Z"
"","2078","SPR-17645: Fix ClassCastException in FormHttpMessageConverter","We should not cast MultiValueMap to MultiValueMap","closed","","wsy","2019-01-08T06:03:06Z","2019-01-08T11:19:52Z"
"","22468","Lazy Session initialisation for JmsTransactionManager","We have two transaction managers in our application: JPA and JMS. In order to just use `@Transactional` on every possible method we are using _ChainedTransactionManager_:  ``` @Bean @Primary public PlatformTransactionManager transactionManager() {   return new ChainedTransactionManager(jmsTransactionManager, jpaTransactionManager); } ```  This is working as expected, however there is a one problem, that could be solved on Spring side. Every interaction with our application requires DB connection, but only few JMS. Because we've used such simplified transaction configuration, Spring starts both transactions every time.  `JmsTransactionManager#doBegin` creates JMS Session right on the beginning of each transaction. We would prefer to postpone creation of JMS Session until first message has to be send. This could be configurable.  Here is my implementation: https://gist.github.com/maciejmiklas/d5f61703e045792e6a54819c749f6252  It's based on original `JmsTransactionManager` with two modifications:  *  `JmsTransactionManager#doBegin` does not start JMS Session  * `JmsResourceHolder` has been overwritten, and method `getSession()` starts now JMS Session  I did not find a better way to implement it, so there is no pull request, but it gives an idea how it could work.","closed","type: enhancement,","maciejmiklas","2019-02-25T14:31:04Z","2019-02-26T19:43:25Z"
"","21855","Correctly parse property name in path ""map[key[foo]]""","We have a `Bean` that contains a `Map`. In this `Map` we want to save properties with property names which contain an index that is relevant for our application only, like `key5[foo]`. For spring that index doesn't matter, it should just treat `key5[foo]` as property name. However spring-bean is not able to correctly retrieve the property name, it tries to retrieve `key5[foo` (missing square bracket at the end). That's because spring just looks for the first occurrence of `]` and thinks it's the closing square bracket of the property name, however in our case that square bracket is part of the property name, and the relevant square bracket for spring (to actually close the property name) comes afterwards.  - [x] Added tests - [x] Signed the CLA.  Would be nice if this could be backported to `5.1.x`. Thanks!","closed","type: enhancement,","mkurz","2019-01-11T10:47:06Z","2019-04-02T13:16:27Z"
"","22469","Instantiate ArrayList class with a exact initial capacity","We can instantiate ArrayList class with a exact initial capacity to improve performance according to the context.","closed","type: task,","rupertw","2019-02-25T16:06:26Z","2019-02-25T23:12:52Z"
"","22295","simpMessagingTemplate convertAndSendToUser lot of waiting threads blocking other functionality","We are using Stomp, SpringBoot, and WebSockets in our application. The server application is doing the following:  **1)** Generating messages to be pushed to the users,  **2)** Accepting WebSocket connections and  **3)** pushing messages to ActiveMQ stomp broker.  Thread dump shows a lot of waiting threads associated with the simpMessagingTemplate convertAndSendToUser API call.  Two instances of the application are running in a cloud. This application generates messages and pushes to ActiveMQ stomp broker (running separately) using simpMessagingTemplate convertAndSendToUser API.  We use Gatling for simulating user WebSocket connections for load testing. The Gatling runs on a separate instance. The application works fine for 2000 user connections with a load of 20,000 messages per minute. Once we increase the users to 4000 we see that the message generation thread stops. Users are getting connected to the same servers without any problem though.  If we comment the simpMessagingTemplate convertAndSendToUser API call then everything works perfectly fine (both generate messages and new WebSocket connections). So we doubt the issue with convertAndSendToUser API.     We have created the same issue is StackOverflow as well.  [Stackoverflow Question Link](https://stackoverflow.com/questions/54284576/simpmessagingtemplate-convertandsendtouser-lot-of-waiting-threads-blocking-other)  **Environment Details:**   ``` java version ""1.8.0_192"" Java(TM) SE Runtime Environment (build 1.8.0_192-b12) Java HotSpot(TM) 64-Bit Server VM (build 25.192-b12, mixed mode) de-root-centos7-64 de-base-centos7-120 ```  **Spring Version:**  ```  org.springframework : 5.1.3.RELEASE  Spring-boot: 2.1.1.RELEASE ```  **Dependency which we are using:**  ```   org.springframework  spring-websocket  compile     io.projectreactor.netty  reactor-netty    io.netty  netty-all     org.webjars  webjars-locator-core    org.webjars  sockjs-client  1.0.2    org.webjars  stomp-websocket  2.3.3    org.webjars  bootstrap  3.3.7    org.webjars  jquery  3.1.0  ``` **Below one is the heap dump snippet which we get it from the server** ``` ""ForkJoinPool-1-worker-246"" #577 daemon prio=5 os_prio=0 tid=0x00007f7a28005000 nid=0x329c sleeping[0x00007f7978008000]  java.lang.Thread.State: TIMED_WAITING (sleeping)  at java.lang.Thread.sleep(Native Method)  at reactor.util.concurrent.WaitStrategy$Sleeping.waitFor(WaitStrategy.java:319)  at reactor.core.publisher.MonoProcessor.block(MonoProcessor.java:211)  at reactor.core.publisher.MonoProcessor.block(MonoProcessor.java:176)  at org.springframework.util.concurrent.MonoToListenableFutureAdapter.get(MonoToListenableFutureAdapter.java:55)  at org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler$SystemStompConnectionHandler.forward(StompBrokerRelayMessageHandler.java:990)  at org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.handleMessageInternal(StompBrokerRelayMessageHandler.java:559)  at org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler.handleMessage(AbstractBrokerMessageHandler.java:256)  at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:144)  at org.springframework.messaging.support.ExecutorSubscribableChannel.sendInternal(ExecutorSubscribableChannel.java:100)  at org.springframework.messaging.support.AbstractMessageChannel.send(AbstractMessageChannel.java:136)  at org.springframework.messaging.support.AbstractMessageChannel.send(AbstractMessageChannel.java:122)  at org.springframework.messaging.simp.SimpMessagingTemplate.sendInternal(SimpMessagingTemplate.java:187)  at org.springframework.messaging.simp.SimpMessagingTemplate.doSend(SimpMessagingTemplate.java:162)  at org.springframework.messaging.simp.SimpMessagingTemplate.doSend(SimpMessagingTemplate.java:48)  at org.springframework.messaging.core.AbstractMessageSendingTemplate.send(AbstractMessageSendingTemplate.java:109)  at org.springframework.messaging.simp.user.UserDestinationMessageHandler.handleMessage(UserDestinationMessageHandler.java:217)  at org.springframework.messaging.support.ExecutorSubscribableChannel$SendTask.run(ExecutorSubscribableChannel.java:144)  at org.springframework.messaging.support.ExecutorSubscribableChannel.sendInternal(ExecutorSubscribableChannel.java:100)  at org.springframework.messaging.support.AbstractMessageChannel.send(AbstractMessageChannel.java:136)  at org.springframework.messaging.simp.SimpMessagingTemplate.sendInternal(SimpMessagingTemplate.java:187)  at org.springframework.messaging.simp.SimpMessagingTemplate.doSend(SimpMessagingTemplate.java:162)  at org.springframework.messaging.simp.SimpMessagingTemplate.doSend(SimpMessagingTemplate.java:48)  at org.springframework.messaging.core.AbstractMessageSendingTemplate.send(AbstractMessageSendingTemplate.java:109)  at org.springframework.messaging.core.AbstractMessageSendingTemplate.convertAndSend(AbstractMessageSendingTemplate.java:151)  at org.springframework.messaging.simp.SimpMessagingTemplate.convertAndSendToUser(SimpMessagingTemplate.java:229)  at org.springframework.messaging.simp.SimpMessagingTemplate.convertAndSendToUser(SimpMessagingTemplate.java:218)  at org.springframework.messaging.simp.SimpMessagingTemplate.convertAndSendToUser(SimpMessagingTemplate.java:204)  at com.test.test1.websocket.domain.PushMessageManager.lambda$sendMDSMessage$2(PushMessageManager.java:84) ```","closed","for: stackoverflow,","sarathpetec","2019-01-23T05:14:19Z","2019-01-23T14:32:58Z"
"","22598","Performance improvement in RequestMappingInfo","We are using `spring-cloud-gateway` integrated with `spring-boot-starter-actuator`,  we run a load test on it(using jmeter, and my gateway program runs on a linux server with 4 cores/2GB) and found that `RequestMappingInfo` have some performance problem.  Scene 1: We added a `Http Header Manager` into `jmeter` with the header `Accept:text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8`,(default value of chrome)  then I run jmeter and let my gateway program run  to 2000 qps, the cpu usage is about 60%: ![image](https://user-images.githubusercontent.com/3961789/54422559-bff1f280-4749-11e9-82a1-61dd80095d32.png)  Scene 2: We added a `Http Header Manager` into `jmeter` with the header `Accept:`, then I run jmeter and let my gateway program run  to 2000 qps, the cpu usage is about 35%: ![image](https://user-images.githubusercontent.com/3961789/54424256-73a8b180-474d-11e9-8046-5505e913f8f7.png)  As you can see, the performance is affected by the length of `Accept` header,  maybe hackers can use this performance problem to make ddos attack easier.  I use `async-profiler`(https://github.com/jvm-profiling-tools/async-profiler) to profile my program, and this is the result: [aaa.txt](https://github.com/spring-projects/spring-framework/files/2970632/aaa.txt) there are many stacktraces like the following costs too much cpu:  ``` Total: 2777057399 (3.74%)  samples: 2766   [ 0] java.util.HashMap.putVal   [ 1] java.util.HashMap.put   [ 2] org.springframework.util.MimeTypeUtils.parseMimeType   [ 3] org.springframework.http.MediaType.parseMediaType   [ 4] org.springframework.http.MediaType.parseMediaTypes   [ 5] org.springframework.http.MediaType.parseMediaTypes   [ 6] org.springframework.http.HttpHeaders.getAccept   [ 7] org.springframework.web.reactive.accept.HeaderContentTypeResolver.resolveMediaTypes   [ 8] org.springframework.web.reactive.result.condition.ProducesRequestCondition.getAcceptedMediaTypes   [ 9] org.springframework.web.reactive.result.condition.ProducesRequestCondition.access$000   [10] org.springframework.web.reactive.result.condition.ProducesRequestCondition$ProduceMediaTypeExpression.matchMediaType   [11] org.springframework.web.reactive.result.condition.AbstractMediaTypeExpression.match   [12] org.springframework.web.reactive.result.condition.ProducesRequestCondition.lambda$getMatchingCondition$0   [13] org.springframework.web.reactive.result.condition.ProducesRequestCondition$$Lambda$656.1800605879.test   [14] java.util.Collection.removeIf   [15] org.springframework.web.reactive.result.condition.ProducesRequestCondition.getMatchingCondition   [16] org.springframework.web.reactive.result.method.RequestMappingInfo.getMatchingCondition   [17] org.springframework.web.reactive.result.method.RequestMappingInfoHandlerMapping.getMatchingMapping   [18] org.springframework.web.reactive.result.method.RequestMappingInfoHandlerMapping.getMatchingMapping   [19] org.springframework.web.reactive.result.method.AbstractHandlerMethodMapping.addMatchingMappings   [20] org.springframework.web.reactive.result.method.AbstractHandlerMethodMapping.lookupHandlerMethod   [21] org.springframework.web.reactive.result.method.AbstractHandlerMethodMapping.getHandlerInternal   [22] org.springframework.web.reactive.handler.AbstractHandlerMapping.getHandler   [23] org.springframework.web.reactive.DispatcherHandler.lambda$handle$0   [24] org.springframework.web.reactive.DispatcherHandler$$Lambda$653.1915333739.apply   [25] reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain   [26] reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe   [27] reactor.core.publisher.FluxIterable.subscribe   [28] reactor.core.publisher.FluxIterable.subscribe   [29] reactor.core.publisher.FluxConcatMap.subscribe   [30] reactor.core.publisher.MonoNext.subscribe   [31] reactor.core.publisher.MonoSwitchIfEmpty.subscribe   [32] reactor.core.publisher.MonoFlatMap.subscribe   [33] reactor.core.publisher.MonoFlatMap.subscribe   [34] reactor.core.publisher.MonoDefer.subscribe   [35] reactor.core.publisher.MonoDefer.subscribe   [36] reactor.core.publisher.MonoPeekTerminal.subscribe   [37] reactor.core.publisher.MonoDefer.subscribe   [38] reactor.core.publisher.MonoPeekTerminal.subscribe   [39] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext   [40] reactor.core.publisher.Operators$MonoSubscriber.complete   [41] reactor.core.publisher.MonoZip$ZipCoordinator.signal   [42] reactor.core.publisher.MonoZip$ZipInner.onNext   [43] reactor.core.publisher.Operators$ScalarSubscription.request   [44] reactor.core.publisher.MonoZip$ZipInner.onSubscribe   [45] reactor.core.publisher.MonoJust.subscribe   [46] reactor.core.publisher.Mono.subscribe   [47] reactor.core.publisher.MonoZip.subscribe   [48] reactor.core.publisher.MonoFlatMap.subscribe   [49] reactor.core.publisher.MonoDefer.subscribe   [50] reactor.core.publisher.MonoDefer.subscribe   [51] reactor.core.publisher.MonoDefer.subscribe   [52] reactor.core.publisher.MonoDefer.subscribe   [53] reactor.core.publisher.MonoDefer.subscribe   [54] reactor.core.publisher.MonoDefer.subscribe   [55] reactor.core.publisher.MonoDefer.subscribe   [56] reactor.core.publisher.MonoDefer.subscribe   [57] reactor.core.publisher.MonoDefer.subscribe   [58] reactor.core.publisher.MonoOnErrorResume.subscribe   [59] reactor.core.publisher.MonoOnErrorResume.subscribe   [60] reactor.core.publisher.MonoOnErrorResume.subscribe   [61] reactor.core.publisher.Mono.subscribe   [62] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain   [63] reactor.core.publisher.MonoIgnoreThen.subscribe   [64] reactor.core.publisher.MonoPeekFuseable.subscribe   [65] reactor.core.publisher.MonoPeekTerminal.subscribe   [66] reactor.ipc.netty.channel.ChannelOperations.applyHandler   [67] reactor.ipc.netty.http.server.HttpServerOperations.onHandlerStart   [68] reactor.ipc.netty.channel.ContextHandler$$Lambda$633.1255094246.run   [69] io.netty.util.concurrent.AbstractEventExecutor.safeExecute   [70] io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks   [71] io.netty.channel.epoll.EpollEventLoop.run   [72] io.netty.util.concurrent.SingleThreadEventExecutor$5.run   [73] java.lang.Thread.run ```    I found that the key point is that `MediaType.parseMediaType` is invoked too many times(more than 400) in one http request, this will cost too much cpu, so I change the order of the code, and test it again(also run to 2000 qps), this time the cpu usage is no more than 35%, the cpu usage will not be affected by the length of `Accept` header any more.","closed","type: enhancement,","aftersss","2019-03-15T09:00:25Z","2019-03-22T19:33:20Z"
"","22796","java.lang.IllegalStateException: COMPLETED occur with non netty for proxy with WebClient","version: spring boot 2.1.4.RELEASE  I use WebClient proxy the upstream , when server use non netty(undertow for example), cause java.lang.IllegalStateException: COMPLETED in high load balance. ```java java.lang.IllegalStateException: COMPLETED 	at org.springframework.http.server.reactive.AbstractListenerReadPublisher$State.subscribe(AbstractListenerReadPublisher.java:419) ~[spring-web-5.1.6.RELEASE.jar:5.1.6.RELEASE] 	at org.springframework.http.server.reactive.AbstractListenerReadPublisher.subscribe(AbstractListenerReadPublisher.java:105) ~[spring-web-5.1.6.RELEASE.jar:5.1.6.RELEASE] 	at reactor.core.publisher.FluxSource.subscribe(FluxSource.java:52) ~[reactor-core-3.2.8.RELEASE.jar:3.2.8.RELEASE] 	at reactor.core.publisher.FluxMap.subscribe(FluxMap.java:62) ~[reactor-core-3.2.8.RELEASE.jar:3.2.8.RELEASE] 	at reactor.core.publisher.MonoCollect.subscribe(MonoCollect.java:66) ~[reactor-core-3.2.8.RELEASE.jar:3.2.8.RELEASE] 	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60) ~[reactor-core-3.2.8.RELEASE.jar:3.2.8.RELEASE] 	at reactor.core.publisher.MonoSubscriberContext.subscribe(MonoSubscriberContext.java:47) ~[reactor-core-3.2.8.RELEASE.jar:3.2.8.RELEASE] 	at reactor.core.publisher.Mono.subscribe(Mono.java:3710) ~[reactor-core-3.2.8.RELEASE.jar:3.2.8.RELEASE] 	at reactor.core.publisher.FluxConcatIterable$ConcatIterableSubscriber.onComplete(FluxConcatIterable.java:146) ~[reactor-core-3.2.8.RELEASE.jar:3.2.8.RELEASE] 	at reactor.core.publisher.FluxConcatIterable.subscribe(FluxConcatIterable.java:60) ~[reactor-core-3.2.8.RELEASE.jar:3.2.8.RELEASE] 	at reactor.core.publisher.MonoIgnoreElements.subscribe(MonoIgnoreElements.java:37) ~[reactor-core-3.2.8.RELEASE.jar:3.2.8.RELEASE] 	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52) ~[reactor-core-3.2.8.RELEASE.jar:3.2.8.RELEASE] 	at reactor.netty.http.client.HttpClientConnect$HttpObserver.onStateChange(HttpClientConnect.java:425) ~[reactor-netty-0.8.6.RELEASE.jar:0.8.6.RELEASE] 	at reactor.netty.resources.PooledConnectionProvider$DisposableAcquire.onStateChange(PooledConnectionProvider.java:511) ~[reactor-netty-0.8.6.RELEASE.jar:0.8.6.RELEASE] 	at reactor.netty.resources.PooledConnectionProvider$PooledConnection.onStateChange(PooledConnectionProvider.java:453) ~[reactor-netty-0.8.6.RELEASE.jar:0.8.6.RELEASE] 	at reactor.netty.channel.ChannelOperationsHandler.channelActive(ChannelOperationsHandler.java:112) ~[reactor-netty-0.8.6.RELEASE.jar:0.8.6.RELEASE] 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:210) ~[netty-transport-4.1.34.Final.jar:4.1.34.Final] 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:196) ~[netty-transport-4.1.34.Final.jar:4.1.34.Final] 	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:189) ~[netty-transport-4.1.34.Final.jar:4.1.34.Final] 	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64) ~[netty-transport-4.1.34.Final.jar:4.1.34.Final] 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:210) ~[netty-transport-4.1.34.Final.jar:4.1.34.Final] 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:196) ~[netty-transport-4.1.34.Final.jar:4.1.34.Final] 	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:189) ~[netty-transport-4.1.34.Final.jar:4.1.34.Final] 	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelActive(CombinedChannelDuplexHandler.java:414) ~[netty-transport-4.1.34.Final.jar:4.1.34.Final] 	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64) ~[netty-transport-4.1.34.Final.jar:4.1.34.Final] 	at io.netty.channel.CombinedChannelDuplexHandler.channelActive(CombinedChannelDuplexHandler.java:213) ~[netty-transport-4.1.34.Final.jar:4.1.34.Final] 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:210) ~[netty-transport-4.1.34.Final.jar:4.1.34.Final] 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:196) ~[netty-transport-4.1.34.Final.jar:4.1.34.Final] 	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:189) ~[netty-transport-4.1.34.Final.jar:4.1.34.Final] 	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1396) ~[netty-transport-4.1.34.Final.jar:4.1.34.Final] 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:210) ~[netty-transport-4.1.34.Final.jar:4.1.34.Final] 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:196) ~[netty-transport-4.1.34.Final.jar:4.1.34.Final] 	at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:906) ~[netty-transport-4.1.34.Final.jar:4.1.34.Final] 	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:311) ~[netty-transport-4.1.34.Final.jar:4.1.34.Final] 	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:341) ~[netty-transport-4.1.34.Final.jar:4.1.34.Final] 	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:665) ~[netty-transport-4.1.34.Final.jar:4.1.34.Final] 	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:612) ~[netty-transport-4.1.34.Final.jar:4.1.34.Final] 	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:529) ~[netty-transport-4.1.34.Final.jar:4.1.34.Final] 	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:491) ~[netty-transport-4.1.34.Final.jar:4.1.34.Final] 	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:905) ~[netty-common-4.1.34.Final.jar:4.1.34.Final] 	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_201] ```  here is the code: ``` @Controller public class SimpleProxyController{      WebClient webClient = WebClient.builder().build();      @RequestMapping(""proxy"")     public Mono proxy(ServerWebExchange exchange){         Thread thread = Thread.currentThread();         Flux content = webClient                 .method(exchange.getRequest().getMethod())                 .uri(""http://localhost:8080/upstream"")                 .body(exchange.getRequest().getBody(),DataBuffer.class)                 .exchange()                 .flatMapMany(resp -> resp.bodyToFlux(DataBuffer.class));         content = content.publishOn(Schedulers.fromExecutor((Executor) thread));         return exchange.getResponse().writeWith(content);     }      @RequestMapping(""upstream"")     @ResponseBody     public Flux upstream(){         return Flux.just(""ok"");     } } ``` code file [issue-reproduce.tar.gz](https://github.com/spring-projects/spring-framework/files/3078843/issue-reproduce.tar.gz)  reproduce step: - start the server - use wrk to send request. *wrk -t 50 -c 5000  http://localhost:8080/proxy -d 1000* - wait a minue, the Exception occur.  I guest the Exception occur for reason that WebClient will retry on some IOException, cause the body(Flux) be subscribe again, but the STATE of AbstractListenerReadPublisher become COMPLETED by first subscribe. but how could I resolve the this?","closed","in: web,","gung-rgb","2019-04-15T07:20:28Z","2020-03-12T17:13:22Z"
"","22693","Upgrade to reactor-netty 0.8.6 for Webflux","Version 0.8.6 fixes an important issue with IPv6:  https://github.com/reactor/reactor-netty/issues/625  Here are the full release notes:  https://github.com/reactor/reactor-netty/releases","closed","type: dependency-upgrade,","lpellegr","2019-03-27T16:29:07Z","2019-03-27T18:41:00Z"
"","22441","Spring WebClient reading JSON from Wiremock (newer than 2.17) sometimes freezes","Using WireMock 2.21 (2.18-2.21 seem to be affected) when repeatedely sending http requests which request and decode JSON using the spring WebClient to WireMock the requests sometimes freezes and fail to reply.  The issue does not occur when using Wiremock 2.17 and it does not occur when requesting Strings (and not decoding JSON). I'm not entirely certain whether this is a WireMock or a Spring WebClient issue, I'm therefore raising this issue with both projects.  The failing test setup can be found here: https://github.com/FrzMe/wiremock-spring-webclient-block/blob/master/src/test/java/webclientblock/WebClientBlockTest.java#L49  Reasons why it could be a spring issue:  * when requesting ""String"" via the WebClient the issue does not occur (-> it occurs only when json decoding) (see https://github.com/FrzMe/wiremock-spring-webclient-block/blob/master/src/test/java/webclientblock/WebClientBlockTest.java#L102) * when using the RestTemplate instead of the WebClient the issue does not occur (see https://github.com/FrzMe/wiremock-spring-webclient-block/blob/master/src/test/java/webclientblock/WebClientBlockTest.java#L80 )  Reasons why it could be a WireMock issue:  * when requesting from other sources (local nginx, other spring service, etc.) the issue does not occur. * the issue does not occur in WireMock 2.17  The Issue can be reproduced when running the WebClientBlockTest from https://github.com/FrzMe/wiremock-spring-webclient-block - there the test testWiremockServiceGetJsonDecode fails consistently for me (no later than ~8000 iterations - sometimes much earlier)  The test also shows that the same problem can not be reproduced when making http requests using the spring RestTemplate.  Both WireMock and WebClient are set up completely self contained within the test.","closed","status: declined,","frzme","2019-02-20T12:47:58Z","2019-03-13T12:38:30Z"
"","22464","PrematureCloseException when using connection pooling and server returns ""Connection: Close""","Using Spring Boot 2.1.3-RELEASE, I consistently get the following exception when doing two consecutive requests to the Nominatim OpenStreetMap API using WebClient.  Disabling the pooling of connections makes it work. I have no idea if this is a WebClient bug, or a reactor-netty bug, or a bug in the remote host. But it took me some time to at least find the workaround, and if it's a downstream bug, I guess WebClient and/or reactor-netty could at least give a hint about how to workaround the issue in the exception message.  Here's a complete Spring Boot 2.1.3 application reproducing the issue:  ```java package com.example.webclientissue;  import java.util.List; import java.util.Map;  import com.fasterxml.jackson.annotation.JsonProperty; import org.springframework.boot.CommandLineRunner; import org.springframework.boot.SpringApplication; import org.springframework.boot.WebApplicationType; import org.springframework.boot.autoconfigure.SpringBootApplication; import org.springframework.web.reactive.function.client.WebClient; import reactor.core.publisher.Mono;  @SpringBootApplication public class WebclientissueApplication implements CommandLineRunner {      private final WebClient webClient;      public WebclientissueApplication(WebClient.Builder webClientBuilder) {         this.webClient = webClientBuilder             .baseUrl(""https://nominatim.openstreetmap.org"")             // .clientConnector(new ReactorClientHttpConnector(HttpClient.newConnection().compress(true)))             .build();     }      @Override     public void run(String... args) throws Exception {         DetailsResult details = details(44, 1.5);         System.out.println(""details = "" + details);     }      public static void main(String[] args) {         SpringApplication app = new SpringApplication(WebclientissueApplication.class);         app.setWebApplicationType(WebApplicationType.NONE);         app.run(args);     }      private DetailsResult details(double latitude, double longitude) {         return loadReverse(latitude, longitude).flatMap(it -> loadDetails(it)).block();     }      private Mono loadReverse(double latitude, double longitude) {         return webClient.get().uri(builder ->             builder.path(""/reverse"")                    .queryParam(""format"", ""json"")                    .queryParam(""lat"", Double.toString(latitude))                    .queryParam(""lon"", Double.toString(longitude))                    .build()         ).retrieve().bodyToMono(ReverseResult.class);     }      private Mono loadDetails(ReverseResult reverseResult) {         return webClient.get().uri(builder ->             builder.path(""/details"")                    .queryParam(""format"", ""json"")                    .queryParam(""osmtype"", reverseResult.getOsmType().substring(0, 1).toUpperCase())                    .queryParam(""osmid"", reverseResult.getOsmId().toString())                    .queryParam(""hierarchy"", ""0"")                    .queryParam(""addressdetails"", ""1"")                    .build()         ).retrieve().bodyToMono(DetailsResult.class);     }      public static class DetailsResult {         private List> address;          public List> getAddress() {             return address;         }          public void setAddress(List> address) {             this.address = address;         }          @Override         public String toString() {             return ""DetailsResult{"" +                 ""address="" + address +                 '}';         }     }      public static class ReverseResult {         @JsonProperty(""osm_id"")         private Long osmId;          @JsonProperty(""osm_type"")         private String osmType;          public Long getOsmId() {             return osmId;         }          public void setOsmId(Long osmId) {             this.osmId = osmId;         }          public String getOsmType() {             return osmType;         }          public void setOsmType(String osmType) {             this.osmType = osmType;         }     } } ```  You can uncomment the line  ```             // .clientConnector(new ReactorClientHttpConnector(HttpClient.newConnection().compress(true))) ```  to make the code run without any exception.  Here's the full stack trace of the exception:  ``` java.lang.IllegalStateException: Failed to execute CommandLineRunner 	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:816) ~[spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE] 	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:797) ~[spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE] 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:324) ~[spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE] 	at com.example.webclientissue.WebclientissueApplication.main(WebclientissueApplication.java:35) [classes/:na] Caused by: reactor.core.Exceptions$ReactiveException: reactor.netty.http.client.PrematureCloseException: Connection prematurely closed BEFORE response 	at reactor.core.Exceptions.propagate(Exceptions.java:326) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE] 	at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:91) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE] 	at reactor.core.publisher.Mono.block(Mono.java:1494) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE] 	at com.example.webclientissue.WebclientissueApplication.details(WebclientissueApplication.java:39) [classes/:na] 	at com.example.webclientissue.WebclientissueApplication.run(WebclientissueApplication.java:28) [classes/:na] 	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:813) ~[spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE] 	... 3 common frames omitted 	Suppressed: java.lang.Exception: #block terminated with an error 		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:93) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE] 		... 7 common frames omitted Caused by: reactor.netty.http.client.PrematureCloseException: Connection prematurely closed BEFORE response ```","closed","for: external-project,","jnizet","2019-02-24T16:41:58Z","2019-08-01T20:13:49Z"
"","22774","PrematureCloseException: Connection prematurely closed BEFORE when running UnitTests","Using Spring Boot 2.1.3-RELEASE and 0.8.6.RELEASE of reactor-netty i'm using webClient and using StepVerifier for testing. All the tests are ok, but when im using DynamicTest it returns the exception.  ```java public Mono> getObject(String name) {     return webClient.get().uri(buildUri(name))         .exchange()         .flatMap(clientResponse -> `handleClientResponse(clientResponse)); }  private Mono> handleClientResponse(ClientResponse clientResponse, String name) {     if (clientResponse.statusCode().isError()) {       if (clientResponse.statusCode().equals(HttpStatus.NOT_FOUND)) {         return Mono.just(Optional.empty());       } else {         throw new BadGatewayException(             format(""Unable to retrieve external object with name: '{%s}'"",                 name));       }     }     return clientResponse.bodyToMono(new ParameterizedTypeReference>() {     })         .map(r -> Optional.ofNullable(r.getData().getItem()));   } ```  Test  ```java @TestFactory @DisplayName(""Get Object With Random HTTP Responses"") public Collection getObjectWithInvalidHttpResponseTest() {        return Stream.of(RANDOM_DATA_THEN_CLOSE, CONNECTION_RESET_BY_PEER, EMPTY_RESPONSE, MALFORMED_RESPONSE_CHUNK)           .map(fault -> DynamicTest.dynamicTest(fault.toString(), () -> {             stubFor(get(urlEqualTo(OBJECT_URL))                 .willReturn(aResponse()                     .withFault(fault)                     .withStatus(HttpStatus.OK.value())));              StepVerifier.create(objectGateway.getObject(OBJECT_NAME))                 .expectErrorMatches(throwable -> throwable instanceof BadGatewayException &&                     throwable.getMessage()                         .equals(""Unexpected response retrieving Object with name [xxxxx]"")                 ).verify();            })).collect(Collectors.toList());   } ``` Stack tracer  ``` 2019-04-09 10:46:51.121  WARN   --- [ctor-http-nio-4] r.netty.http.client.HttpClientConnect    : [id: 0xeea96051, L:0.0.0.0/0.0.0.0:63355] The connection observed an error  reactor.netty.http.client.PrematureCloseException: Connection prematurely closed BEFORE response   java.lang.AssertionError: expectation ""expectErrorMatches"" failed (predicate failed on exception: reactor.netty.http.client.PrematureCloseException: Connection prematurely closed BEFORE response)  	at reactor.test.ErrorFormatter.assertionError(ErrorFormatter.java:105) 	at reactor.test.ErrorFormatter.failPrefix(ErrorFormatter.java:94) 	at reactor.test.ErrorFormatter.fail(ErrorFormatter.java:64) 	at reactor.test.ErrorFormatter.failOptional(ErrorFormatter.java:79) 	at reactor.test.DefaultStepVerifierBuilder.lambda$expectErrorMatches$8(DefaultStepVerifierBuilder.java:399) 	at reactor.test.DefaultStepVerifierBuilder$SignalEvent.test(DefaultStepVerifierBuilder.java:2112) 	at reactor.test.DefaultStepVerifierBuilder$DefaultVerifySubscriber.onSignal(DefaultStepVerifierBuilder.java:1408) 	at reactor.test.DefaultStepVerifierBuilder$DefaultVerifySubscriber.onExpectation(DefaultStepVerifierBuilder.java:1356) 	at reactor.test.DefaultStepVerifierBuilder$DefaultVerifySubscriber.onError(DefaultStepVerifierBuilder.java:1030) 	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:165) 	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onError(Operators.java:1747) 	at org.springframework.cloud.sleuth.instrument.web.client.TraceExchangeFilterFunction$MonoWebClientTrace$WebClientTracerSubscriber.onError(TraceWebClientBeanPostProcessor.java:276) 	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:126) 	at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:214) 	at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:214) 	at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:87) 	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:193) 	at reactor.core.publisher.FluxRetryPredicate$RetryPredicateSubscriber.onError(FluxRetryPredicate.java:100) 	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onError(ScopePassingSpanSubscriber.java:105) 	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:167) 	at reactor.netty.http.client.HttpClientConnect$HttpObserver.onUncaughtException(HttpClientConnect.java:404) 	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onUncaughtException(ReactorNetty.java:351) 	at reactor.netty.resources.PooledConnectionProvider$DisposableAcquire.onUncaughtException(PooledConnectionProvider.java:503) 	at reactor.netty.resources.PooledConnectionProvider$PooledConnection.onUncaughtException(PooledConnectionProvider.java:412) 	at reactor.netty.http.client.HttpClientOperations.onInboundClose(HttpClientOperations.java:254) 	at reactor.netty.channel.ChannelOperationsHandler.channelInactive(ChannelOperationsHandler.java:121) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:245) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:231) 	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:224) 	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:75) 	at io.netty.handler.timeout.IdleStateHandler.channelInactive(IdleStateHandler.java:277) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:245) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:231) 	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:224) 	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:75) 	at io.netty.handler.codec.http.HttpContentDecoder.channelInactive(HttpContentDecoder.java:206) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:245) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:231) 	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:224) 	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelInactive(CombinedChannelDuplexHandler.java:420) 	at io.netty.handler.codec.ByteToMessageDecoder.channelInputClosed(ByteToMessageDecoder.java:390) 	at io.netty.handler.codec.ByteToMessageDecoder.channelInactive(ByteToMessageDecoder.java:355) 	at io.netty.handler.codec.http.HttpClientCodec$Decoder.channelInactive(HttpClientCodec.java:282) 	at io.netty.channel.CombinedChannelDuplexHandler.channelInactive(CombinedChannelDuplexHandler.java:223) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:245) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:231) 	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:224) 	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1403) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:245) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:231) 	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:912) 	at io.netty.channel.AbstractChannel$AbstractUnsafe$8.run(AbstractChannel.java:826) 	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) 	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404) 	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:495) 	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:905) 	at java.base/java.lang.Thread.run(Thread.java:834) 	Suppressed: reactor.netty.http.client.PrematureCloseException: Connection prematurely closed BEFORE response ```  Thanks in advance! ---","closed","status: invalid,","xDouglasx","2019-04-09T09:48:24Z","2019-05-08T13:09:10Z"
"","22743","MergedAnnotation.from(AnnotatedElement, SearchStrategy, …) skips annotations in org.springframework.lang","Using `MergedAnnotation` with an `AnnotatedElement` skips annotations such as `org.springframework.lang.NonNull`.   A workaround is using `MergedAnnotations.from(Annotation)` to process each declared annotation individually.","closed","","mp911de","2019-04-05T11:18:41Z","2019-04-05T11:38:54Z"
"","22727","Use more efficient Reactor operators","Use `handle` / `flatMapIterable` instead of `flatMap` / `flatMapMany` when possible.","closed","type: enhancement,","sdeleuze","2019-04-02T13:13:41Z","2019-04-02T14:09:29Z"
"","22710","Merge pull request #1 from spring-projects/master","Update Forks","closed","","wwpbjing","2019-03-30T12:48:48Z","2019-03-30T12:49:15Z"
"","22711","Primary resolution against FactoryBean instances","Transform the beanName in method DefaultListableBeanFactory.isPrimary. Add the corresponding test cases. Fixes #22675.","closed","type: enhancement,","lgxbslgx","2019-03-30T12:55:33Z","2019-04-02T13:06:14Z"
"","22487","Integrate CheckStyle checks in PR build","Today, when submitting a PR, there is no community feedback if proposed code does not comply with checkstyle rules.  Only the core team can detect such an oversight and provides a feedback to external commiters. It is time consuming for the core team (I assume :smile:), and does not avoid code containing new violations from being merged.  A quick action _could be_ to integrate a Travis build running `gradle check` to PR workflow.","closed","status: superseded,","ledoyen","2019-02-27T22:52:39Z","2019-02-28T11:03:58Z"
"","22421","LinkedMultiValueMap.getFirst - check that values is not empty","To avoid situation when values is Empty and we trying get first element without checking that this element exists","closed","in: core,","olszewskimichal","2019-02-16T10:59:57Z","2019-05-07T10:59:07Z"
"","22705","WebClient option with both URI template and UriBuilder","This pull request is related to #22371 opened issue. It is basically implemented as discussed in the issue conversation and will allow to export metrics even when using UriBuilder to construct uri when using WebClient.","closed","type: enhancement,","jhaeyaert","2019-03-28T21:26:21Z","2019-04-04T21:16:33Z"
"","2064","Fix typo","This pull request fix a typo into WebSocket Handshake section of the documentation.","closed","","pierDipi","2018-12-31T18:41:32Z","2019-01-01T10:11:18Z"
"","22559","Evaluate ""clever"" lazy bean initialization","This proposal intend to make Spring applications startup time and memory consumption stable regardless of the amount of user classes and beans.  The idea would be to use compile-time indexing of annotations like `@RequestMapping` (and others) to avoid (when lazy loading is activated) loading transitively all the classes of the application ""just"" to scan annotations on beans like the mapping ones.  One solution could be to improve `spring-context-indexer` to index annotations (like handler methods mappings) at compile time and make this data available in `META-INF`. That would allow methods like `AbstractHandlerMethodMapping#initHandlerMethods` avoiding to load all classes at startup.","closed","type: enhancement,","sdeleuze","2019-03-11T11:26:57Z","2019-03-18T15:59:56Z"
"","22472","Polish","This PR simply changes plural to singular.","closed","type: task,","izeye","2019-02-25T22:59:30Z","2019-02-26T09:07:05Z"
"","2022","Remove an unnecessary local variable","This PR removes an unnecessary local variable in `RequestMappingInfo.combineNames()`.","closed","","izeye","2018-11-22T11:58:35Z","2018-11-22T13:00:56Z"
"","22645","Polish docs","This PR polishes docs a bit.","closed","type: documentation,","izeye","2019-03-23T13:57:42Z","2019-03-23T15:03:40Z"
"","22283","Polish AutowireUtils.EXECUTABLE_COMPARATOR","This PR polishes `AutowireUtils.EXECUTABLE_COMPARATOR` a bit.","closed","type: task,","izeye","2019-01-20T01:28:21Z","2019-01-20T17:19:32Z"
"","2024","Uses Function.identity instead of n->n","This PR just polishes `DefaultServerResponseBuilder` - it replaces all uses of  ``` .map(entityResponse -> entityResponse) ```  To:  ``` .map(Function.identity()) ```","closed","type: task,","bijukunjummen","2018-11-23T17:04:30Z","2019-11-11T15:05:26Z"
"","2065","SPR-16886 Provide two mechanisms for SQL Server sequence incrementers.","This PR is to address a deadlocking issue with MS SQL Server and is related to https://jira.spring.io/browse/SPR-16886. Please see that issue for details.  I tried to ensure that this fix does not break downstream projects that leverage the incrementer on SQL Server.  This means that all versions of SQL Server are still going to use a sequence table with the difference being that the incrementer uses a reaper interval to delete records out of the sequence table.  I have also included an incrementer that can leverage native database sequences in 2012 and higher. It will be at the discretion of each downstream project as to when/if they want to leverage the new incrementer.  I am open to any feedback or changes you might want to make. I had toyed with requiring a platform transaction manager being injected into the incrementer (and creating a new transaction when the reaping interval was reached) as an alternative to using a thread, but I felt that was a more invasive change to downstream projects.  I have also updated my little test harness to use ""copies"" of the incrementers I have submitted in this pull request: https://github.com/tkvangorder/jdbc-sqlserver-incrementer","open","in: data,","tkvangorder","2018-12-31T23:21:47Z","2021-11-10T11:38:06Z"
"","22540","Introduce WebMvc.fn","This PR introduces Servlet.fn, a servlet-based version of HandlerFunctions and RouterFunctions.  To make it easier to review, I've split the PR into four commits:  1. the introduction of the core framework 2. tests 3. integration with DispatcherServlet and configuration 4. some polishing on related files  I will set up a meeting for the review.","closed","","poutsma","2019-03-07T11:13:29Z","2019-04-10T13:34:26Z"
"","22482","Polish","This PR fixes some typos and polishes trivial stuff.","closed","type: task,","izeye","2019-02-27T12:39:35Z","2019-02-27T13:06:03Z"
"","22443","Polish","This PR fixes some typos and polishes trivial stuff.","closed","type: task,","izeye","2019-02-20T16:42:50Z","2019-02-25T11:31:11Z"
"","22373","Fix casing for GitHub in the contributing guide","This PR fixes casing for GitHub in the contributing guide.","closed","type: task,","izeye","2019-02-07T12:03:28Z","2019-02-08T07:47:33Z"
"","2026","The name of the parameter is misleading","This method sends a message to the application through the  inboundChannel instead of outChannel. This parameter is confusing to developers who read the source code. Thank you for your contribution.","closed","","liuhuagui","2018-11-24T10:18:43Z","2018-11-25T08:26:06Z"
"","22637","URL Cleanup","This merges the URL Cleanup PRs along with fixes.  Closes gh-22617 gh-22622 gh-22635","closed","type: task,","rwinch","2019-03-22T05:44:22Z","2019-03-23T12:42:40Z"
"","22560","Overhaul annotation handling code","This issue collects the various tasks and ideas related to overhauling our annotation handling code. This issue will be edited as addition ideas arise.  ## Prerequisites These tasks will generally help with implementing the new API: * [x] Introduce AssertJ for tests (#22561)  ## API Improvements These are the core API related tasks: * [x] Create replacement API for handling merged annotations (#21697) * [x] Migrate existing AnnotationUtils and AnnotatedElementUtils to use new API (#22562)  ## Minor Performance Improvements Initially the new API will cause an additional overhead. We can reclaim a few milliseconds in a few other areas of the framework to help: * [x] Use less memory and be try to skip more classes when processing `@Configuration` (#22563) * [x] Skip more classes when processing `EventListener` methods (#22564) * [x] Increase ASM Frame `StringBuilder` default size (#22565) * [x] Make ConcurrentReferenceHashMap a bit more JIT friendly (#22566) * [x] Use shared zero length arrays in `ReflectionUtils` (#22567) * [x] Optimize `StringUtils.cleanPath` (#22568) * [x]  Use shared InjectionMetadata instance for beans skipped by AutowiredAnnotationBeanPostProcessor (#22570) * [x] Cache BridgeMethodResolver results (#22579) * [x] Add public getDeclaredMethods method to ReflectionUtils (#22580)  ## Migrate classes to use the new API directly A few classes would benefit from using the new annotations API directly. Especially relevant are any areas of the code that make several utils calls, when they could hold onto a `MergedAnnotations` instance: * [x] Migrate AnnotationAwareOrderComparator (#22581) * [x] Migrate AutowiredAnnotationBeanPostProcessor (#22582) * [x] Migrate DefaultListableBeanFactory (#22584) * [x] Migrate AnnotationJmxAttributeSource (#22657)  ## Make use of annotation index Indexing annotations to do less work may help performance * [x] Minimize need for existing code to iterate all methods (#22420) * [ ]  Add `finder` methods to `MergedAnnotations` (#22569) * [ ] Investigate an annotation presence registry and annotation index formats (#22578) * [ ] Investigate logic based annotation indexes (e.g. Jackson classes won't have Spring annotations)  ## Overhaul metadata code The existing ASM based meta-data reader code currently recursively processes annotations. The new `MergedAnnotations` API may be suitable to expose directly. It might also be possible to not use ASM when reading meta-annotations and instead just use standard reflection. * [x] Refactor ASM annotation reading code * [x] Expose `MergedAnnotations` from meta-data classes (#22884)  # Accidentally introduced regressions * [x]  Regression in merged annotation resolution (#22654) * [x]  AnnotationsScanner throws NPE due to because AnnotatedElement proxy is not cloning arrays (#22655) * [x] AnnotationUtils.isAnnotationMetaPresent(…) no longer considers javax.annotation.Nonnull (#22685) * [x] AnnotatedElementUtils.getAllAnnotationAttributes(…, ""javax.annotation.Nonnull"") returns null (#22696)","open","in: core,","philwebb","2019-03-11T21:28:04Z","2020-10-23T07:21:12Z"
"","22452","@RequestMapping content negotiation should not impact error responses formats","This issue a follow-up issue to #20865.  In #20865, the negotiated content-type during the request mapping phase would impact the content type chosen for the `@ExceptionHandler` error response instead of restarting the content negotiation phase. This has been fixed by removing the negotiated content type before handling errors.  In this case, the negotiated content type information is kept in a different place.  When setting up the reactive pipeline with the chosen `EncoderHttpMessageWriter`, the response content type is set before the subscription happens. Later when the returned value from the error handling phase is handled in `HandlerResultHandlerSupport.selectMediaType`, the response content-type is already set and chosen directly.  The only difference with #20865 is that the content type is set before the subscription happens and is not cleared before handling the error response.","closed","type: bug,","bclozel","2019-02-21T16:23:19Z","2019-02-21T16:53:30Z"
"","22586","Initial set of MergedAnnotations commits","This is the initial set of work in introducing a new `MergedAnnotations` API to Spring Framework. See #22560 for more background.  It seemed more sensible to send a single PR covering a number of issues, rather than creating distinct PRs for each subtask.  In order to reduce the likelihood of regressions, I've ran a complete build of both Spring Framework and Spring Boot which calls both the original and new code and compares the results. I've left these commits in this PR as I figure they might be a useful reference.  I've also used https://github.com/wilkinsona/spring-boot-benchmark-harness to check that there are no _major_ performance implications with the new code. The following shows the Spring Boot Tomcat sample application running against a baseline from c0ddaae5c0272af8b4eeb330bb8660da7411e99d.  ``` Main method:  |       | Baseline |  New  | | ----- | -------: | ----: | |       |    1.725 | 1.671 | |       |    1.731 | 1.680 | |       |    1.648 | 1.684 | |       |    1.684 | 1.775 | |       |    1.707 | 1.730 | |       |    1.667 | 1.722 | |       |    1.689 | 1.713 | |       |    1.691 | 1.737 | |       |    1.697 | 1.723 | |       |    1.688 | 1.725 | |  Mean |    1.693 | 1.716 | | Range |    0.083 | 0.104 | |  Diff =    0.023      ```  Special thanks should go to @wilkinsona who helped profile and identify several performance improvements.","closed","in: core,","philwebb","2019-03-13T05:41:04Z","2019-03-23T11:15:57Z"
"","22242","Illegal reflective access by SpEL ReflectivePropertyAccessor","This is technically a request to re-open [SPR-17480](https://github.com/spring-projects/spring-framework/issues/22012) (JDK 11: Illegal reflective access by org.springframework.util.ReflectionUtils), since the problem has nothing to do with Thymeleaf.  Problem can be reproduced using Java 11.0.1 and Spring Expression 5.1.3.RELEASE with the following code:  ```java 	public class Test { 		public static void main(String[] args) { 			String expr = ""entry.key""; 			new SpelExpressionParser().parseExpression(expr).getValue(new Test()); 		} 		public Map.Entry getEntry() { 			return Map.of(""foo"", ""bar"").entrySet().iterator().next(); 		} 	} ```  Running with `--illegal-access=debug` produces the following output:  ``` 	WARNING: Illegal reflective access by org.springframework.util.ReflectionUtils (file:/C:/Users/Andreas/.gradle/caches/modules-2/files-2.1/org.springframework/spring-core/5.1.3.RELEASE/b1e5325d35bfb27e42d57e9295510cad54ed8fdf/spring-core-5.1.3.RELEASE.jar) to method java.util.KeyValueHolder.getKey() 		at org.springframework.util.ReflectionUtils.makeAccessible(ReflectionUtils.java:499) 		at org.springframework.expression.spel.support.ReflectivePropertyAccessor$OptimalPropertyAccessor.read(ReflectivePropertyAccessor.java:691) 		at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:204) 		at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104) 		at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51) 		at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406) 		at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:90) 		at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:111) 		at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:201) 		at test.Test.main(Test.java:10) ```  The code in SPR-17480 tries to access `java.util.HashMap$Node.getKey()`, while the code above tries to access `java.util.KeyValueHolder.getKey()`, simply because a different `Map` implementation is used. The issue is the same.  The problem is that although the value returned by `getEntry()` is an interface with public methods (`Map.Entry`), the real object returned is a non-public class implementing the interface. Since the `ReflectivePropertyAccessor` logic resolves to the method of the non-public class, not to the method of the interface, `ReflectionUtils.makeAccessible(Method method)` ends up calling `method.setAccessible(true)`.  *Possible solution:* Enhance `ReflectivePropertyAccessor` to search for the accessor method in public interfaces and public (super-)classes. Default to current logic if method cannot be located in a public type.","closed","type: enhancement,","ahagerup","2019-01-11T23:30:01Z","2019-06-11T21:25:57Z"
"","22369","stomp with rabbitmq broker relay","This is related to the issue https://github.com/spring-projects/spring-framework/issues/21182, and to overcome I was using a relay broker, rabbitmq.  When the client subscribes for the topic `/topic/FORMS/{id}`, `""SessionSubscribeEvent""` at the Server receives the request and starts streaming the data. There is a race condition where the subscription isn’t ready yet but the message is published through the broker and hence client misses the data packet. Should I be publishing the data for a different event listener? Its important for the first data goes immediately after subscription and later updates are published on the same topic once additional from server. Please suggest.","closed","status: invalid,","vidyas78","2019-02-06T22:02:04Z","2019-02-08T16:29:42Z"
"","22592","Customize Content-Type with Webflux in Spring Boot 2.1.2","This is a follow up to gh-22588.  I am trying to post via `WebClient` to get Microsoft token:  ```java public WebClient getWebclient() {         TcpClient client = TcpClient.create()                 .option(ChannelOption.CONNECT_TIMEOUT_MILLIS, 10000)                 .doOnConnected(connection -> connection.addHandlerLast(new ReadTimeoutHandler(15)).addHandlerLast(new WriteTimeoutHandler(15)));          ExchangeStrategies strategies = ExchangeStrategies.builder()                 .codecs(configurer -> {                     configurer.registerDefaults(true);                     FormHttpMessageReader formHttpMessageReader = new FormHttpMessageReader();                     formHttpMessageReader.setEnableLoggingRequestDetails(true);                     configurer.customCodecs().reader(formHttpMessageReader);                     configurer.customCodecs().writer(new FormHttpMessageWriter());                 })                 .build();          return WebClient.builder()                 .clientConnector(new ReactorClientHttpConnector(HttpClient.from(client).followRedirect(true)))                 .exchangeStrategies(strategies)                 .filter(logRequest())                 .filter(logResponse())                 .build();     } ```  The problem ist, that microsoft cannot handle a **Content-type: application/x-www-form-urlencoded;charset=UTF-8**.  Spring is automatically adding the charset=UTF-8 to the request. I need to get rid of this additional charset. I need a **Content-Type: application/x-www-form-urlencoded**. Is this possible? Otherwise i need to downgrade my Spring Boot version to 2.0.0 where the charset is not automatically be added.  My Debug Logs print:  ``` 2019-03-14 10:08:42 DEBUG [reactor.netty.channel.ChannelOperationsHandler]: [id: 0x5d6effce, L:/192.168.148.14:52285 - R:login.microsoftonline.de/51.4.136.42:443] Writing object DefaultHttpRequest(decodeResult: success, version: HTTP/1.1) POST /common/oauth2/token HTTP/1.1 user-agent: ReactorNetty/0.8.4.RELEASE host: login.microsoftonline.de accept: */* Content-Type: application/x-www-form-urlencoded;charset=UTF-8 Content-Length: 205 2019-03-14 10:08:42 DEBUG [reactor.netty.channel.ChannelOperationsHandler]: [id: 0x5d6effce, L:/192.168.148.14:52285 - R:login.microsoftonline.de/51.4.136.42:443] Writing object  ```  I tested this with Spring Boot version 2.0.0 and there the charset is not added as in the new version.","closed","in: web,","Plankton93","2019-03-14T10:36:01Z","2019-03-20T13:13:24Z"
"","22594","IllegalReferenceCountException happens when the operation was canceled","This is a follow up to #22384   The following exception is observed  ``` 2019-03-14 08:09:37.211 ERROR 13233 --- [r-http-kqueue-7] reactor.core.publisher.Operators         : Operator called default onErrorDropped  io.netty.util.IllegalReferenceCountException: refCnt: 0     at io.netty.buffer.AbstractByteBuf.ensureAccessible(AbstractByteBuf.java:1441)     at io.netty.buffer.AbstractByteBuf.checkIndex(AbstractByteBuf.java:1373)     at io.netty.buffer.PooledHeapByteBuf.nioBuffer(PooledHeapByteBuf.java:298)     at io.netty.buffer.AbstractByteBuf.nioBuffer(AbstractByteBuf.java:1224)     at io.netty.buffer.WrappedByteBuf.nioBuffer(WrappedByteBuf.java:919)     at io.netty.buffer.AdvancedLeakAwareByteBuf.nioBuffer(AdvancedLeakAwareByteBuf.java:713)     at org.springframework.core.io.buffer.NettyDataBuffer.asByteBuffer(NettyDataBuffer.java:266)     at org.springframework.core.codec.StringDecoder.decodeDataBuffer(StringDecoder.java:207)     at org.springframework.core.codec.StringDecoder.decodeDataBuffer(StringDecoder.java:59)     at org.springframework.core.codec.AbstractDataBufferDecoder.lambda$decodeToMono$1(AbstractDataBufferDecoder.java:68)     at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:107)     at reactor.core.publisher.FluxContextStart$ContextStartSubscriber.onNext(FluxContextStart.java:103)     at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:287)     at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:331)     at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1505)     at reactor.core.publisher.MonoCollectList$MonoBufferAllSubscriber.onComplete(MonoCollectList.java:123)     at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:136)     at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:252)     at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:252)     at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:136)     at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:372) ```  The cause is the following: https://github.com/spring-projects/spring-framework/blob/master/spring-core/src/main/java/org/springframework/core/codec/AbstractDataBufferDecoder.java#L67  `DataBufferUtils.join(InputStream)` declares `doOnDiscard`, when such event happens the buffer will be recycled then when the `StringDecoder` tries to do the actual decoding the exception above will be observed  https://github.com/spring-projects/spring-framework/blob/master/spring-core/src/main/java/org/springframework/core/codec/StringDecoder.java#L207","closed","type: bug,","violetagg","2019-03-14T13:16:05Z","2020-06-22T15:12:42Z"
"","22692","Deprecate GenericApplicationContext { } Kotlin extension","This extension is not idiomatic, causes autocomplete problems and is confusing since `beans { }` DSL is a better alternative for those who want an idiomatic Kotlin declaration. `GenericApplicationContext().apply { }` should be used instead.","closed","type: task,","sdeleuze","2019-03-27T14:05:04Z","2019-03-27T14:14:39Z"
"","22514","URL Cleanup","This commit updates URLs to prefer the https protocol. Redirects are not followed to avoid accidentally expanding intentionally shortened URLs (i.e. if using a URL shortner).  # Fixed URLs  ## Fixed Success  These URLs were fixed successfully.  * http://docs.jboss.org/jbossas/javadoc/4.0.5/connector/ migrated to:     https://docs.jboss.org/jbossas/javadoc/4.0.5/connector/ ([https](https://docs.jboss.org/jbossas/javadoc/4.0.5/connector/) result 200). * http://docs.jboss.org/jbossas/javadoc/7.1.2.Final/ migrated to:     https://docs.jboss.org/jbossas/javadoc/7.1.2.Final/ ([https](https://docs.jboss.org/jbossas/javadoc/7.1.2.Final/) result 200). * http://docs.oracle.com/javaee/7/api/ migrated to:     https://docs.oracle.com/javaee/7/api/ ([https](https://docs.oracle.com/javaee/7/api/) result 200). * http://docs.oracle.com/javase/8/docs/api/ migrated to:     https://docs.oracle.com/javase/8/docs/api/ ([https](https://docs.oracle.com/javase/8/docs/api/) result 200). * http://fasterxml.github.io/jackson-core/javadoc/2.9/ migrated to:     https://fasterxml.github.io/jackson-core/javadoc/2.9/ ([https](https://fasterxml.github.io/jackson-core/javadoc/2.9/) result 200). * http://fasterxml.github.io/jackson-databind/javadoc/2.9/ migrated to:     https://fasterxml.github.io/jackson-databind/javadoc/2.9/ ([https](https://fasterxml.github.io/jackson-databind/javadoc/2.9/) result 200). * http://fasterxml.github.io/jackson-dataformat-xml/javadoc/2.9/ migrated to:     https://fasterxml.github.io/jackson-dataformat-xml/javadoc/2.9/ ([https](https://fasterxml.github.io/jackson-dataformat-xml/javadoc/2.9/) result 200). * http://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs/ migrated to:     https://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs/ ([https](https://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs/) result 200). * http://issues.gradle.org/browse/GRADLE-1116 migrated to:     https://issues.gradle.org/browse/GRADLE-1116 ([https](https://issues.gradle.org/browse/GRADLE-1116) result 200). * http://projectreactor.io/docs/core/release/api/ migrated to:     https://projectreactor.io/docs/core/release/api/ ([https](https://projectreactor.io/docs/core/release/api/) result 200). * http://tiles.apache.org/framework/apidocs/ migrated to:     https://tiles.apache.org/framework/apidocs/ ([https](https://tiles.apache.org/framework/apidocs/) result 200). * http://tiles.apache.org/tiles-request/apidocs/ migrated to:     https://tiles.apache.org/tiles-request/apidocs/ ([https](https://tiles.apache.org/tiles-request/apidocs/) result 200). * http://www.apache.org/licenses/LICENSE-2.0 migrated to:     https://www.apache.org/licenses/LICENSE-2.0 ([https](https://www.apache.org/licenses/LICENSE-2.0) result 200). * http://www.eclipse.org/aspectj/doc/released/aspectj5rt-api/ migrated to:     https://www.eclipse.org/aspectj/doc/released/aspectj5rt-api/ ([https](https://www.eclipse.org/aspectj/doc/released/aspectj5rt-api/) result 200). * http://www.reactive-streams.org/reactive-streams-1.0.1-javadoc/ migrated to:     https://www.reactive-streams.org/reactive-streams-1.0.1-javadoc/ ([https](https://www.reactive-streams.org/reactive-streams-1.0.1-javadoc/) result 200). * http://docs.spring.io/spring-framework/docs migrated to:     https://docs.spring.io/spring-framework/docs ([https](https://docs.spring.io/spring-framework/docs) result 301). * http://glassfish.java.net/nonav/docs/v3/api/ migrated to:     https://glassfish.java.net/nonav/docs/v3/api/ ([https](https://glassfish.java.net/nonav/docs/v3/api/) result 301). * http://projects.spring.io/spring-framework migrated to:     https://projects.spring.io/spring-framework ([https](https://projects.spring.io/spring-framework) result 301). * http://springframework.org/schema migrated to:     https://springframework.org/schema ([https](https://springframework.org/schema) result 301). * http://www.ehcache.org/apidocs/2.10.4 migrated to:     https://www.ehcache.org/apidocs/2.10.4 ([https](https://www.ehcache.org/apidocs/2.10.4) result 301).","closed","type: task,","spring-operator","2019-03-05T18:13:49Z","2019-03-05T21:42:16Z"
"","22515","URL Cleanup","This commit updates URLs to prefer the https protocol. Redirects are not followed to avoid accidentally expanding intentionally shortened URLs (i.e. if using a URL shortner).  # Fixed URLs  ## Fixed Success  These URLs were fixed successfully.  * http://docs.jboss.org/jbossas/javadoc/4.0.5/connector/ migrated to:     https://docs.jboss.org/jbossas/javadoc/4.0.5/connector/ ([https](https://docs.jboss.org/jbossas/javadoc/4.0.5/connector/) result 200). * http://docs.jboss.org/jbossas/javadoc/7.1.2.Final/ migrated to:     https://docs.jboss.org/jbossas/javadoc/7.1.2.Final/ ([https](https://docs.jboss.org/jbossas/javadoc/7.1.2.Final/) result 200). * http://docs.oracle.com/javaee/7/api/ migrated to:     https://docs.oracle.com/javaee/7/api/ ([https](https://docs.oracle.com/javaee/7/api/) result 200). * http://docs.oracle.com/javase/8/docs/api/ migrated to:     https://docs.oracle.com/javase/8/docs/api/ ([https](https://docs.oracle.com/javase/8/docs/api/) result 200). * http://fasterxml.github.io/jackson-core/javadoc/2.9/ migrated to:     https://fasterxml.github.io/jackson-core/javadoc/2.9/ ([https](https://fasterxml.github.io/jackson-core/javadoc/2.9/) result 200). * http://fasterxml.github.io/jackson-databind/javadoc/2.9/ migrated to:     https://fasterxml.github.io/jackson-databind/javadoc/2.9/ ([https](https://fasterxml.github.io/jackson-databind/javadoc/2.9/) result 200). * http://fasterxml.github.io/jackson-dataformat-xml/javadoc/2.9/ migrated to:     https://fasterxml.github.io/jackson-dataformat-xml/javadoc/2.9/ ([https](https://fasterxml.github.io/jackson-dataformat-xml/javadoc/2.9/) result 200). * http://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs/ migrated to:     https://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs/ ([https](https://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs/) result 200). * http://issues.gradle.org/browse/GRADLE-1116 migrated to:     https://issues.gradle.org/browse/GRADLE-1116 ([https](https://issues.gradle.org/browse/GRADLE-1116) result 200). * http://projectreactor.io/docs/core/release/api/ migrated to:     https://projectreactor.io/docs/core/release/api/ ([https](https://projectreactor.io/docs/core/release/api/) result 200). * http://tiles.apache.org/framework/apidocs/ migrated to:     https://tiles.apache.org/framework/apidocs/ ([https](https://tiles.apache.org/framework/apidocs/) result 200). * http://tiles.apache.org/tiles-request/apidocs/ migrated to:     https://tiles.apache.org/tiles-request/apidocs/ ([https](https://tiles.apache.org/tiles-request/apidocs/) result 200). * http://www.apache.org/licenses/LICENSE-2.0 migrated to:     https://www.apache.org/licenses/LICENSE-2.0 ([https](https://www.apache.org/licenses/LICENSE-2.0) result 200). * http://www.eclipse.org/aspectj/doc/released/aspectj5rt-api/ migrated to:     https://www.eclipse.org/aspectj/doc/released/aspectj5rt-api/ ([https](https://www.eclipse.org/aspectj/doc/released/aspectj5rt-api/) result 200). * http://www.reactive-streams.org/reactive-streams-1.0.1-javadoc/ migrated to:     https://www.reactive-streams.org/reactive-streams-1.0.1-javadoc/ ([https](https://www.reactive-streams.org/reactive-streams-1.0.1-javadoc/) result 200). * http://docs.spring.io/spring-framework/docs migrated to:     https://docs.spring.io/spring-framework/docs ([https](https://docs.spring.io/spring-framework/docs) result 301). * http://glassfish.java.net/nonav/docs/v3/api/ migrated to:     https://glassfish.java.net/nonav/docs/v3/api/ ([https](https://glassfish.java.net/nonav/docs/v3/api/) result 301). * http://projects.spring.io/spring-framework migrated to:     https://projects.spring.io/spring-framework ([https](https://projects.spring.io/spring-framework) result 301). * http://springframework.org/schema migrated to:     https://springframework.org/schema ([https](https://springframework.org/schema) result 301). * http://ehcache.org/apidocs/2.10.4 (301) migrated to:     https://www.ehcache.org/apidocs/2.10.4 ([https](https://ehcache.org/apidocs/2.10.4) result 301).","closed","type: task,","spring-operator","2019-03-05T21:40:54Z","2019-03-05T22:21:37Z"
"","22617","URL Cleanup","This commit updates URLs to prefer the https protocol. Redirects are not followed to avoid accidentally expanding intentionally shortened URLs (i.e. if using a URL shortener).  # HTTP URLs that Could Not Be Fixed These URLs were unable to be fixed. Please review them to see if they can be manually resolved.  * http://www.foo.com/schema/component/component.xsd (404) with 1 occurrences could not be migrated:      ([https](https://www.foo.com/schema/component/component.xsd) result SSLHandshakeException).  # Fixed URLs  ## Fixed But Review Recommended These URLs were fixed, but the https status was not OK. However, the https status was the same as the http request or http redirected to an https URL, so they were migrated. Your review is recommended.  * http://www.kbcafe.com/rss/atom.xsd.xml (ConnectTimeoutException) with 1 occurrences migrated to:     https://www.kbcafe.com/rss/atom.xsd.xml ([https](https://www.kbcafe.com/rss/atom.xsd.xml) result ConnectTimeoutException). * http://domain1.com (UnknownHostException) with 2 occurrences migrated to:     https://domain1.com ([https](https://domain1.com) result UnknownHostException). * http://domain2.com (UnknownHostException) with 1 occurrences migrated to:     https://domain2.com ([https](https://domain2.com) result UnknownHostException). * http://mydomain1.com,http://mydomain2.com (UnknownHostException) with 1 occurrences migrated to:     https://mydomain1.com,http://mydomain2.com ([https](https://mydomain1.com,https://mydomain2.com) result UnknownHostException). * http://mydomain2.com (UnknownHostException) with 2 occurrences migrated to:     https://mydomain2.com ([https](https://mydomain2.com) result UnknownHostException). * http://mydomain3.com,http://mydomain4.com (UnknownHostException) with 1 occurrences migrated to:     https://mydomain3.com,http://mydomain4.com ([https](https://mydomain3.com,https://mydomain4.com) result UnknownHostException). * http://www.springframework.org/schema/beans/factory/xml/support/CustomNamespaceHandlerTests.xsd (404) with 1 occurrences migrated to:     https://www.springframework.org/schema/beans/factory/xml/support/CustomNamespaceHandlerTests.xsd ([https](https://www.springframework.org/schema/beans/factory/xml/support/CustomNamespaceHandlerTests.xsd) result 404).  ## Fixed Success  These URLs were switched to an https URL with a 2xx status. While the status was successful, your review is still recommended.  * http://example.com with 1 occurrences migrated to:     https://example.com ([https](https://example.com) result 200). * http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd (301) with 2 occurrences migrated to:     https://hibernate.org/dtd/hibernate-mapping-3.0.dtd ([https](https://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd) result 200). * http://testng.org/testng-1.0.dtd with 3 occurrences migrated to:     https://testng.org/testng-1.0.dtd ([https](https://testng.org/testng-1.0.dtd) result 200). * http://tiles.apache.org/dtds/tiles-config_2_0.dtd with 2 occurrences migrated to:     https://tiles.apache.org/dtds/tiles-config_2_0.dtd ([https](https://tiles.apache.org/dtds/tiles-config_2_0.dtd) result 200). * http://tiles.apache.org/dtds/tiles-config_2_1.dtd with 2 occurrences migrated to:     https://tiles.apache.org/dtds/tiles-config_2_1.dtd ([https](https://tiles.apache.org/dtds/tiles-config_2_1.dtd) result 200). * http://tiles.apache.org/dtds/tiles-config_3_0.dtd with 4 occurrences migrated to:     https://tiles.apache.org/dtds/tiles-config_3_0.dtd ([https](https://tiles.apache.org/dtds/tiles-config_3_0.dtd) result 200). * http://www.quartz-scheduler.org/xml/job_scheduling_data_1_8.xsd with 1 occurrences migrated to:     https://www.quartz-scheduler.org/xml/job_scheduling_data_1_8.xsd ([https](https://www.quartz-scheduler.org/xml/job_scheduling_data_1_8.xsd) result 200). * http://www.springframework.org/dtd/spring-beans-2.0.dtd with 168 occurrences migrated to:     https://www.springframework.org/dtd/spring-beans-2.0.dtd ([https](https://www.springframework.org/dtd/spring-beans-2.0.dtd) result 200). * http://www.springframework.org/schema/aop/spring-aop-2.0.xsd with 68 occurrences migrated to:     https://www.springframework.org/schema/aop/spring-aop-2.0.xsd ([https](https://www.springframework.org/schema/aop/spring-aop-2.0.xsd) result 200). * http://www.springframework.org/schema/aop/spring-aop-2.5.xsd with 11 occurrences migrated to:     https://www.springframework.org/schema/aop/spring-aop-2.5.xsd ([https](https://www.springframework.org/schema/aop/spring-aop-2.5.xsd) result 200). * http://www.springframework.org/schema/aop/spring-aop-3.0.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/aop/spring-aop-3.0.xsd ([https](https://www.springframework.org/schema/aop/spring-aop-3.0.xsd) result 200). * http://www.springframework.org/schema/aop/spring-aop.xsd with 7 occurrences migrated to:     https://www.springframework.org/schema/aop/spring-aop.xsd ([https](https://www.springframework.org/schema/aop/spring-aop.xsd) result 200). * http://www.springframework.org/schema/beans/spring-beans-2.0.xsd with 112 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-2.0.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-2.0.xsd) result 200). * http://www.springframework.org/schema/beans/spring-beans-2.5.xsd with 46 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-2.5.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-2.5.xsd) result 200). * http://www.springframework.org/schema/beans/spring-beans-3.0.xsd with 10 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-3.0.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-3.0.xsd) result 200). * http://www.springframework.org/schema/beans/spring-beans-3.1.xsd with 33 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-3.1.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-3.1.xsd) result 200). * http://www.springframework.org/schema/beans/spring-beans-3.2.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-3.2.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-3.2.xsd) result 200). * http://www.springframework.org/schema/beans/spring-beans-4.0.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-4.0.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-4.0.xsd) result 200). * http://www.springframework.org/schema/beans/spring-beans-4.1.xsd with 3 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-4.1.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-4.1.xsd) result 200). * http://www.springframework.org/schema/beans/spring-beans-4.2.xsd with 4 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-4.2.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-4.2.xsd) result 200). * http://www.springframework.org/schema/beans/spring-beans-4.3.xsd with 4 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-4.3.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-4.3.xsd) result 200). * http://www.springframework.org/schema/beans/spring-beans.xsd with 142 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans.xsd ([https](https://www.springframework.org/schema/beans/spring-beans.xsd) result 200). * http://www.springframework.org/schema/cache/spring-cache.xsd with 10 occurrences migrated to:     https://www.springframework.org/schema/cache/spring-cache.xsd ([https](https://www.springframework.org/schema/cache/spring-cache.xsd) result 200). * http://www.springframework.org/schema/context/spring-context-2.5.xsd with 41 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-2.5.xsd ([https](https://www.springframework.org/schema/context/spring-context-2.5.xsd) result 200). * http://www.springframework.org/schema/context/spring-context-3.0.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-3.0.xsd ([https](https://www.springframework.org/schema/context/spring-context-3.0.xsd) result 200). * http://www.springframework.org/schema/context/spring-context-3.1.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-3.1.xsd ([https](https://www.springframework.org/schema/context/spring-context-3.1.xsd) result 200). * http://www.springframework.org/schema/context/spring-context-3.2.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-3.2.xsd ([https](https://www.springframework.org/schema/context/spring-context-3.2.xsd) result 200). * http://www.springframework.org/schema/context/spring-context-4.0.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-4.0.xsd ([https](https://www.springframework.org/schema/context/spring-context-4.0.xsd) result 200). * http://www.springframework.org/schema/context/spring-context-4.2.xsd with 4 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-4.2.xsd ([https](https://www.springframework.org/schema/context/spring-context-4.2.xsd) result 200). * http://www.springframework.org/schema/context/spring-context-4.3.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-4.3.xsd ([https](https://www.springframework.org/schema/context/spring-context-4.3.xsd) result 200). * http://www.springframework.org/schema/context/spring-context.xsd with 10 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context.xsd ([https](https://www.springframework.org/schema/context/spring-context.xsd) result 200). * http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd with 9 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd ([https](https://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd) result 200). * http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd with 5 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd ([https](https://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd) result 200). * http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd with 9 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd ([https](https://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd) result 200). * http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd ([https](https://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd) result 200). * http://www.springframework.org/schema/jdbc/spring-jdbc.xsd with 8 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-jdbc.xsd ([https](https://www.springframework.org/schema/jdbc/spring-jdbc.xsd) result 200). * http://www.springframework.org/schema/jee/spring-jee-3.1.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/jee/spring-jee-3.1.xsd ([https](https://www.springframework.org/schema/jee/spring-jee-3.1.xsd) result 200). * http://www.springframework.org/schema/jms/spring-jms-4.1.xsd with 9 occurrences migrated to:     https://www.springframework.org/schema/jms/spring-jms-4.1.xsd ([https](https://www.springframework.org/schema/jms/spring-jms-4.1.xsd) result 200). * http://www.springframework.org/schema/jms/spring-jms-4.2.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/jms/spring-jms-4.2.xsd ([https](https://www.springframework.org/schema/jms/spring-jms-4.2.xsd) result 200). * http://www.springframework.org/schema/lang/spring-lang-2.0.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang-2.0.xsd ([https](https://www.springframework.org/schema/lang/spring-lang-2.0.xsd) result 200). * http://www.springframework.org/schema/lang/spring-lang-2.5.xsd with 3 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang-2.5.xsd ([https](https://www.springframework.org/schema/lang/spring-lang-2.5.xsd) result 200). * http://www.springframework.org/schema/lang/spring-lang-3.0.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang-3.0.xsd ([https](https://www.springframework.org/schema/lang/spring-lang-3.0.xsd) result 200). * http://www.springframework.org/schema/lang/spring-lang-3.1.xsd with 5 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang-3.1.xsd ([https](https://www.springframework.org/schema/lang/spring-lang-3.1.xsd) result 200). * http://www.springframework.org/schema/lang/spring-lang-4.2.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang-4.2.xsd ([https](https://www.springframework.org/schema/lang/spring-lang-4.2.xsd) result 200). * http://www.springframework.org/schema/lang/spring-lang.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang.xsd ([https](https://www.springframework.org/schema/lang/spring-lang.xsd) result 200). * http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd ([https](https://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd) result 200). * http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd ([https](https://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd) result 200). * http://www.springframework.org/schema/mvc/spring-mvc.xsd with 26 occurrences migrated to:     https://www.springframework.org/schema/mvc/spring-mvc.xsd ([https](https://www.springframework.org/schema/mvc/spring-mvc.xsd) result 200). * http://www.springframework.org/schema/oxm/spring-oxm.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/oxm/spring-oxm.xsd ([https](https://www.springframework.org/schema/oxm/spring-oxm.xsd) result 200). * http://www.springframework.org/schema/task/spring-task-4.1.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/task/spring-task-4.1.xsd ([https](https://www.springframework.org/schema/task/spring-task-4.1.xsd) result 200). * http://www.springframework.org/schema/task/spring-task.xsd with 6 occurrences migrated to:     https://www.springframework.org/schema/task/spring-task.xsd ([https](https://www.springframework.org/schema/task/spring-task.xsd) result 200). * http://www.springframework.org/schema/tx/spring-tx-2.5.xsd with 3 occurrences migrated to:     https://www.springframework.org/schema/tx/spring-tx-2.5.xsd ([https](https://www.springframework.org/schema/tx/spring-tx-2.5.xsd) result 200). * http://www.springframework.org/schema/tx/spring-tx-4.0.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/tx/spring-tx-4.0.xsd ([https](https://www.springframework.org/schema/tx/spring-tx-4.0.xsd) result 200). * http://www.springframework.org/schema/tx/spring-tx.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/tx/spring-tx.xsd ([https](https://www.springframework.org/schema/tx/spring-tx.xsd) result 200). * http://www.springframework.org/schema/util/spring-util-2.0.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-2.0.xsd ([https](https://www.springframework.org/schema/util/spring-util-2.0.xsd) result 200). * http://www.springframework.org/schema/util/spring-util-2.5.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-2.5.xsd ([https](https://www.springframework.org/schema/util/spring-util-2.5.xsd) result 200). * http://www.springframework.org/schema/util/spring-util-3.0.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-3.0.xsd ([https](https://www.springframework.org/schema/util/spring-util-3.0.xsd) result 200). * http://www.springframework.org/schema/util/spring-util-3.1.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-3.1.xsd ([https](https://www.springframework.org/schema/util/spring-util-3.1.xsd) result 200). * http://www.springframework.org/schema/util/spring-util-4.1.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-4.1.xsd ([https](https://www.springframework.org/schema/util/spring-util-4.1.xsd) result 200). * http://www.springframework.org/schema/util/spring-util-4.2.xsd with 4 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-4.2.xsd ([https](https://www.springframework.org/schema/util/spring-util-4.2.xsd) result 200). * http://www.springframework.org/schema/util/spring-util.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util.xsd ([https](https://www.springframework.org/schema/util/spring-util.xsd) result 200). * http://www.springframework.org/schema/websocket/spring-websocket.xsd with 11 occurrences migrated to:     https://www.springframework.org/schema/websocket/spring-websocket.xsd ([https](https://www.springframework.org/schema/websocket/spring-websocket.xsd) result 200). * http://mydomain1.com with 2 occurrences migrated to:     https://mydomain1.com ([https](https://mydomain1.com) result 301). * http://www.springframework.org with 1 occurrences migrated to:     https://www.springframework.org ([https](https://www.springframework.org) result 301). * http://help.sap.com/saphelp_hanaplatform/helpdata/en/20/a78d3275191014b41bae7c4a46d835/content.htm with 1 occurrences migrated to:     https://help.sap.com/saphelp_hanaplatform/helpdata/en/20/a78d3275191014b41bae7c4a46d835/content.htm ([https](https://help.sap.com/saphelp_hanaplatform/helpdata/en/20/a78d3275191014b41bae7c4a46d835/content.htm) result 302). * http://java.sun.com/dtd/properties.dtd with 4 occurrences migrated to:     https://java.sun.com/dtd/properties.dtd ([https](https://java.sun.com/dtd/properties.dtd) result 302). * http://java.sun.com/xml/ns/j2ee/connector_1_5.xsd with 1 occurrences migrated to:     https://java.sun.com/xml/ns/j2ee/connector_1_5.xsd ([https](https://java.sun.com/xml/ns/j2ee/connector_1_5.xsd) result 302). * http://java.sun.com/xml/ns/javaee/web-fragment_3_0.xsd with 1 occurrences migrated to:     https://java.sun.com/xml/ns/javaee/web-fragment_3_0.xsd ([https](https://java.sun.com/xml/ns/javaee/web-fragment_3_0.xsd) result 302). * http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd with 12 occurrences migrated to:     https://java.sun.com/xml/ns/persistence/persistence_1_0.xsd ([https](https://java.sun.com/xml/ns/persistence/persistence_1_0.xsd) result 302). * http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd with 1 occurrences migrated to:     https://java.sun.com/xml/ns/persistence/persistence_2_0.xsd ([https](https://java.sun.com/xml/ns/persistence/persistence_2_0.xsd) result 302).  # Ignored These URLs were intentionally ignored.  * http://java.sun.com/xml/ns/j2ee with 2 occurrences * http://java.sun.com/xml/ns/javaee with 2 occurrences * http://java.sun.com/xml/ns/persistence with 27 occurrences * http://localhost:8080 with 3 occurrences * http://samples.springframework.org/flight with 3 occurrences * http://www.foo.com/schema/component with 2 occurrences * http://www.greeting.com/goodbye/ with 1 occurrences * http://www.greeting.com/hello/ with 1 occurrences * http://www.quartz-scheduler.org/xml/JobSchedulingData with 2 occurrences * http://www.springframework.org/schema/aop with 176 occurrences * http://www.springframework.org/schema/beans with 715 occurrences * http://www.springframework.org/schema/beans/test with 2 occurrences * http://www.springframework.org/schema/c with 9 occurrences * http://www.springframework.org/schema/cache with 20 occurrences * http://www.springframework.org/schema/context with 126 occurrences * http://www.springframework.org/schema/jdbc with 66 occurrences * http://www.springframework.org/schema/jee with 2 occurrences * http://www.springframework.org/schema/jms with 20 occurrences * http://www.springframework.org/schema/lang with 27 occurrences * http://www.springframework.org/schema/mvc with 58 occurrences * http://www.springframework.org/schema/oxm with 2 occurrences * http://www.springframework.org/schema/p with 16 occurrences * http://www.springframework.org/schema/task with 14 occurrences * http://www.springframework.org/schema/tx with 12 occurrences * http://www.springframework.org/schema/util with 28 occurrences * http://www.springframework.org/schema/websocket with 22 occurrences * http://www.w3.org/2001/XMLSchema-instance with 375 occurrences * http://www.w3.org/2005/Atom with 2 occurrences","closed","type: task,","spring-operator","2019-03-20T03:31:33Z","2019-03-23T12:37:56Z"
"","22519","URL Cleanup","This commit updates URLs to prefer the https protocol. Redirects are not followed to avoid accidentally expanding intentionally shortened URLs (i.e. if using a URL shortener).  # HTTP URLs that Could Not Be Fixed These URLs were unable to be fixed. Please review them to see if they can be manually resolved.  * http://aopalliance.sourceforge.net/doc/ (200) migrated to:     http://aopalliance.sourceforge.net/doc/ ([https](https://aopalliance.sourceforge.net/doc/) result AnnotatedConnectException).  # Fixed URLs  ## Fixed But Review Recommended These URLs were fixed, but the https status was not OK. However, the https status was the same as the http request or http redirected to an https URL, so they were migrated. Your review is recommended.  * http://jira.codehaus.org/browse/JIBX-465 (UnknownHostException) migrated to:     https://jira.codehaus.org/browse/JIBX-465 ([https](https://jira.codehaus.org/browse/JIBX-465) result UnknownHostException). * http://quartz-scheduler.org/api/2.2.1/ (301) migrated to:     https://www.quartz-scheduler.org/api/2.2.1/ ([https](https://quartz-scheduler.org/api/2.2.1/) result 404).  ## Fixed Success  These URLs were fixed successfully.  * http://commons.apache.org/proper/commons-codec/apidocs/ migrated to:     https://commons.apache.org/proper/commons-codec/apidocs/ ([https](https://commons.apache.org/proper/commons-codec/apidocs/) result 200). * http://commons.apache.org/proper/commons-dbcp/apidocs/ migrated to:     https://commons.apache.org/proper/commons-dbcp/apidocs/ ([https](https://commons.apache.org/proper/commons-dbcp/apidocs/) result 200). * http://commons.apache.org/proper/commons-lang/javadocs/api-2.5/ migrated to:     https://commons.apache.org/proper/commons-lang/javadocs/api-2.5/ ([https](https://commons.apache.org/proper/commons-lang/javadocs/api-2.5/) result 200). * http://dist.springsource.com/snapshot/STS/nightly-distributions.html migrated to:     https://dist.springsource.com/snapshot/STS/nightly-distributions.html ([https](https://dist.springsource.com/snapshot/STS/nightly-distributions.html) result 200). * http://docs.jboss.org/jbossas/javadoc/4.0.5/connector/ migrated to:     https://docs.jboss.org/jbossas/javadoc/4.0.5/connector/ ([https](https://docs.jboss.org/jbossas/javadoc/4.0.5/connector/) result 200). * http://docs.jboss.org/jbossas/javadoc/7.1.2.Final/ migrated to:     https://docs.jboss.org/jbossas/javadoc/7.1.2.Final/ ([https](https://docs.jboss.org/jbossas/javadoc/7.1.2.Final/) result 200). * http://docs.oracle.com/cd/E13222_01/wls/docs90/javadocs/ migrated to:     https://docs.oracle.com/cd/E13222_01/wls/docs90/javadocs/ ([https](https://docs.oracle.com/cd/E13222_01/wls/docs90/javadocs/) result 200). * http://docs.oracle.com/javaee/7/api/ migrated to:     https://docs.oracle.com/javaee/7/api/ ([https](https://docs.oracle.com/javaee/7/api/) result 200). * http://docs.oracle.com/javase/8/docs/api/ migrated to:     https://docs.oracle.com/javase/8/docs/api/ ([https](https://docs.oracle.com/javase/8/docs/api/) result 200). * http://fasterxml.github.io/jackson-dataformat-xml/javadoc/2.3.0/ migrated to:     https://fasterxml.github.io/jackson-dataformat-xml/javadoc/2.3.0/ ([https](https://fasterxml.github.io/jackson-dataformat-xml/javadoc/2.3.0/) result 200). * http://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs/ migrated to:     https://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs/ ([https](https://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs/) result 200). * http://issues.gradle.org/browse/GRADLE-1116 migrated to:     https://issues.gradle.org/browse/GRADLE-1116 ([https](https://issues.gradle.org/browse/GRADLE-1116) result 200). * http://portals.apache.org/pluto/portlet-2.0-apidocs/ migrated to:     https://portals.apache.org/pluto/portlet-2.0-apidocs/ ([https](https://portals.apache.org/pluto/portlet-2.0-apidocs/) result 200). * http://tiles.apache.org/framework/apidocs/ migrated to:     https://tiles.apache.org/framework/apidocs/ ([https](https://tiles.apache.org/framework/apidocs/) result 200). * http://tiles.apache.org/tiles-request/apidocs/ migrated to:     https://tiles.apache.org/tiles-request/apidocs/ ([https](https://tiles.apache.org/tiles-request/apidocs/) result 200). * http://www.apache.org/licenses/LICENSE-2.0.txt migrated to:     https://www.apache.org/licenses/LICENSE-2.0.txt ([https](https://www.apache.org/licenses/LICENSE-2.0.txt) result 200). * http://www.eclipse.org/aspectj/doc/released/aspectj5rt-api/ migrated to:     https://www.eclipse.org/aspectj/doc/released/aspectj5rt-api/ ([https](https://www.eclipse.org/aspectj/doc/released/aspectj5rt-api/) result 200). * http://ehcache.org/apidocs/ (301) migrated to:     https://www.ehcache.org/apidocs/ ([https](https://ehcache.org/apidocs/) result 200). * http://static.springframework.org/spring-framework/docs (301) migrated to:     https://docs.spring.io/spring-framework/docs ([https](https://static.springframework.org/spring-framework/docs) result 301). * http://download.eclipse.org/eclipse/downloads migrated to:     https://download.eclipse.org/eclipse/downloads ([https](https://download.eclipse.org/eclipse/downloads) result 301). * http://fasterxml.github.com/jackson-core/javadoc/2.3.0/ migrated to:     https://fasterxml.github.com/jackson-core/javadoc/2.3.0/ ([https](https://fasterxml.github.com/jackson-core/javadoc/2.3.0/) result 301). * http://fasterxml.github.com/jackson-databind/javadoc/2.3.0/ migrated to:     https://fasterxml.github.com/jackson-databind/javadoc/2.3.0/ ([https](https://fasterxml.github.com/jackson-databind/javadoc/2.3.0/) result 301). * http://glassfish.java.net/nonav/docs/v3/api/ migrated to:     https://glassfish.java.net/nonav/docs/v3/api/ ([https](https://glassfish.java.net/nonav/docs/v3/api/) result 301). * http://pic.dhe.ibm.com/infocenter/wasinfo/v7r0/topic/com.ibm.websphere.javadoc.doc/web/apidocs/ migrated to:     https://pic.dhe.ibm.com/infocenter/wasinfo/v7r0/topic/com.ibm.websphere.javadoc.doc/web/apidocs/ ([https](https://pic.dhe.ibm.com/infocenter/wasinfo/v7r0/topic/com.ibm.websphere.javadoc.doc/web/apidocs/) result 301). * http://projects.spring.io/spring-framework migrated to:     https://projects.spring.io/spring-framework ([https](https://projects.spring.io/spring-framework) result 301). * http://springframework.org/schema migrated to:     https://springframework.org/schema ([https](https://springframework.org/schema) result 301). * http://spring.io/tools/sts/all migrated to:     https://spring.io/tools/sts/all ([https](https://spring.io/tools/sts/all) result 302).","closed","type: task,","spring-operator","2019-03-06T03:56:35Z","2019-03-12T14:01:24Z"
"","22518","URL Cleanup","This commit updates URLs to prefer the https protocol. Redirects are not followed to avoid accidentally expanding intentionally shortened URLs (i.e. if using a URL shortener).  # HTTP URLs that Could Not Be Fixed These URLs were unable to be fixed. Please review them to see if they can be manually resolved.  * http://aopalliance.sourceforge.net/doc/ (200) migrated to:     http://aopalliance.sourceforge.net/doc/ ([https](https://aopalliance.sourceforge.net/doc/) result AnnotatedConnectException).  # Fixed URLs  ## Fixed But Review Recommended These URLs were fixed, but the https status was not OK. However, the https status was the same as the http request or http redirected to an https URL, so they were migrated. Your review is recommended.  * http://jira.codehaus.org/browse/JIBX-465 (UnknownHostException) migrated to:     https://jira.codehaus.org/browse/JIBX-465 ([https](https://jira.codehaus.org/browse/JIBX-465) result UnknownHostException). * http://quartz-scheduler.org/api/2.2.0/ (301) migrated to:     https://www.quartz-scheduler.org/api/2.2.0/ ([https](https://quartz-scheduler.org/api/2.2.0/) result 404).  ## Fixed Success  These URLs were fixed successfully.  * http://commons.apache.org/proper/commons-codec/apidocs/ migrated to:     https://commons.apache.org/proper/commons-codec/apidocs/ ([https](https://commons.apache.org/proper/commons-codec/apidocs/) result 200). * http://commons.apache.org/proper/commons-dbcp/apidocs/ migrated to:     https://commons.apache.org/proper/commons-dbcp/apidocs/ ([https](https://commons.apache.org/proper/commons-dbcp/apidocs/) result 200). * http://commons.apache.org/proper/commons-lang/javadocs/api-2.5/ migrated to:     https://commons.apache.org/proper/commons-lang/javadocs/api-2.5/ ([https](https://commons.apache.org/proper/commons-lang/javadocs/api-2.5/) result 200). * http://dist.springsource.com/snapshot/STS/nightly-distributions.html migrated to:     https://dist.springsource.com/snapshot/STS/nightly-distributions.html ([https](https://dist.springsource.com/snapshot/STS/nightly-distributions.html) result 200). * http://docs.jboss.org/jbossas/javadoc/4.0.5/connector/ migrated to:     https://docs.jboss.org/jbossas/javadoc/4.0.5/connector/ ([https](https://docs.jboss.org/jbossas/javadoc/4.0.5/connector/) result 200). * http://docs.jboss.org/jbossas/javadoc/7.1.2.Final/ migrated to:     https://docs.jboss.org/jbossas/javadoc/7.1.2.Final/ ([https](https://docs.jboss.org/jbossas/javadoc/7.1.2.Final/) result 200). * http://docs.oracle.com/cd/E13222_01/wls/docs90/javadocs/ migrated to:     https://docs.oracle.com/cd/E13222_01/wls/docs90/javadocs/ ([https](https://docs.oracle.com/cd/E13222_01/wls/docs90/javadocs/) result 200). * http://docs.oracle.com/javaee/7/api/ migrated to:     https://docs.oracle.com/javaee/7/api/ ([https](https://docs.oracle.com/javaee/7/api/) result 200). * http://docs.oracle.com/javase/8/docs/api/ migrated to:     https://docs.oracle.com/javase/8/docs/api/ ([https](https://docs.oracle.com/javase/8/docs/api/) result 200). * http://fasterxml.github.io/jackson-dataformat-xml/javadoc/2.3.0/ migrated to:     https://fasterxml.github.io/jackson-dataformat-xml/javadoc/2.3.0/ ([https](https://fasterxml.github.io/jackson-dataformat-xml/javadoc/2.3.0/) result 200). * http://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs/ migrated to:     https://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs/ ([https](https://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs/) result 200). * http://issues.gradle.org/browse/GRADLE-1116 migrated to:     https://issues.gradle.org/browse/GRADLE-1116 ([https](https://issues.gradle.org/browse/GRADLE-1116) result 200). * http://portals.apache.org/pluto/portlet-2.0-apidocs/ migrated to:     https://portals.apache.org/pluto/portlet-2.0-apidocs/ ([https](https://portals.apache.org/pluto/portlet-2.0-apidocs/) result 200). * http://tiles.apache.org/framework/apidocs/ migrated to:     https://tiles.apache.org/framework/apidocs/ ([https](https://tiles.apache.org/framework/apidocs/) result 200). * http://tiles.apache.org/tiles-request/apidocs/ migrated to:     https://tiles.apache.org/tiles-request/apidocs/ ([https](https://tiles.apache.org/tiles-request/apidocs/) result 200). * http://www.apache.org/licenses/LICENSE-2.0.txt migrated to:     https://www.apache.org/licenses/LICENSE-2.0.txt ([https](https://www.apache.org/licenses/LICENSE-2.0.txt) result 200). * http://www.eclipse.org/aspectj/doc/released/aspectj5rt-api/ migrated to:     https://www.eclipse.org/aspectj/doc/released/aspectj5rt-api/ ([https](https://www.eclipse.org/aspectj/doc/released/aspectj5rt-api/) result 200). * http://ehcache.org/apidocs/ (301) migrated to:     https://www.ehcache.org/apidocs/ ([https](https://ehcache.org/apidocs/) result 200). * http://static.springframework.org/spring-framework/docs (301) migrated to:     https://docs.spring.io/spring-framework/docs ([https](https://static.springframework.org/spring-framework/docs) result 301). * http://download.eclipse.org/eclipse/downloads migrated to:     https://download.eclipse.org/eclipse/downloads ([https](https://download.eclipse.org/eclipse/downloads) result 301). * http://fasterxml.github.com/jackson-core/javadoc/2.3.0/ migrated to:     https://fasterxml.github.com/jackson-core/javadoc/2.3.0/ ([https](https://fasterxml.github.com/jackson-core/javadoc/2.3.0/) result 301). * http://fasterxml.github.com/jackson-databind/javadoc/2.3.0/ migrated to:     https://fasterxml.github.com/jackson-databind/javadoc/2.3.0/ ([https](https://fasterxml.github.com/jackson-databind/javadoc/2.3.0/) result 301). * http://glassfish.java.net/nonav/docs/v3/api/ migrated to:     https://glassfish.java.net/nonav/docs/v3/api/ ([https](https://glassfish.java.net/nonav/docs/v3/api/) result 301). * http://pic.dhe.ibm.com/infocenter/wasinfo/v7r0/topic/com.ibm.websphere.javadoc.doc/web/apidocs/ migrated to:     https://pic.dhe.ibm.com/infocenter/wasinfo/v7r0/topic/com.ibm.websphere.javadoc.doc/web/apidocs/ ([https](https://pic.dhe.ibm.com/infocenter/wasinfo/v7r0/topic/com.ibm.websphere.javadoc.doc/web/apidocs/) result 301). * http://projects.spring.io/spring-framework migrated to:     https://projects.spring.io/spring-framework ([https](https://projects.spring.io/spring-framework) result 301). * http://springframework.org/schema migrated to:     https://springframework.org/schema ([https](https://springframework.org/schema) result 301). * http://spring.io/tools/sts/all migrated to:     https://spring.io/tools/sts/all ([https](https://spring.io/tools/sts/all) result 302).","closed","type: task,","spring-operator","2019-03-06T03:56:17Z","2019-03-12T13:35:25Z"
"","22516","URL Cleanup","This commit updates URLs to prefer the https protocol. Redirects are not followed to avoid accidentally expanding intentionally shortened URLs (i.e. if using a URL shortener).  # HTTP URLs that Could Not Be Fixed These URLs were unable to be fixed. Please review them to see if they can be manually resolved.  * http://aopalliance.sourceforge.net/doc/ (200) migrated to:     http://aopalliance.sourceforge.net/doc/ ([https](https://aopalliance.sourceforge.net/doc/) result AnnotatedConnectException).  # Fixed URLs  ## Fixed But Review Recommended These URLs were fixed, but the https status was not OK. However, the https status was the same as the http request or http redirected to an https URL, so they were migrated. Your review is recommended.  * http://jackson.codehaus.org/1.9.4/javadoc/ (UnknownHostException) migrated to:     https://jackson.codehaus.org/1.9.4/javadoc/ ([https](https://jackson.codehaus.org/1.9.4/javadoc/) result UnknownHostException). * http://jira.codehaus.org/browse/JIBX-465 (UnknownHostException) migrated to:     https://jira.codehaus.org/browse/JIBX-465 ([https](https://jira.codehaus.org/browse/JIBX-465) result UnknownHostException). * http://springsource.org/downloads/sts (302) migrated to:     https://spring.io/projectss/sts ([https](https://springsource.org/downloads/sts) result 404). * http://quartz-scheduler.org/api/2.2.0/ (301) migrated to:     https://www.quartz-scheduler.org/api/2.2.0/ ([https](https://quartz-scheduler.org/api/2.2.0/) result 404).  ## Fixed Success  These URLs were fixed successfully.  * http://commons.apache.org/proper/commons-codec/apidocs/ migrated to:     https://commons.apache.org/proper/commons-codec/apidocs/ ([https](https://commons.apache.org/proper/commons-codec/apidocs/) result 200). * http://commons.apache.org/proper/commons-dbcp/apidocs/ migrated to:     https://commons.apache.org/proper/commons-dbcp/apidocs/ ([https](https://commons.apache.org/proper/commons-dbcp/apidocs/) result 200). * http://commons.apache.org/proper/commons-lang/javadocs/api-2.5/ migrated to:     https://commons.apache.org/proper/commons-lang/javadocs/api-2.5/ ([https](https://commons.apache.org/proper/commons-lang/javadocs/api-2.5/) result 200). * http://docs.jboss.org/jbossas/javadoc/4.0.5/connector/ migrated to:     https://docs.jboss.org/jbossas/javadoc/4.0.5/connector/ ([https](https://docs.jboss.org/jbossas/javadoc/4.0.5/connector/) result 200). * http://docs.jboss.org/jbossas/javadoc/7.1.2.Final/ migrated to:     https://docs.jboss.org/jbossas/javadoc/7.1.2.Final/ ([https](https://docs.jboss.org/jbossas/javadoc/7.1.2.Final/) result 200). * http://docs.oracle.com/cd/E13222_01/wls/docs90/javadocs/ migrated to:     https://docs.oracle.com/cd/E13222_01/wls/docs90/javadocs/ ([https](https://docs.oracle.com/cd/E13222_01/wls/docs90/javadocs/) result 200). * http://docs.oracle.com/javaee/6/api/ migrated to:     https://docs.oracle.com/javaee/6/api/ ([https](https://docs.oracle.com/javaee/6/api/) result 200). * http://docs.oracle.com/javase/7/docs/api/ migrated to:     https://docs.oracle.com/javase/7/docs/api/ ([https](https://docs.oracle.com/javase/7/docs/api/) result 200). * http://ibatis.apache.org/docs/java/dev/ migrated to:     https://ibatis.apache.org/docs/java/dev/ ([https](https://ibatis.apache.org/docs/java/dev/) result 200). * http://portals.apache.org/pluto/portlet-2.0-apidocs/ migrated to:     https://portals.apache.org/pluto/portlet-2.0-apidocs/ ([https](https://portals.apache.org/pluto/portlet-2.0-apidocs/) result 200). * http://tiles.apache.org/framework/apidocs/ migrated to:     https://tiles.apache.org/framework/apidocs/ ([https](https://tiles.apache.org/framework/apidocs/) result 200). * http://tiles.apache.org/tiles-request/apidocs/ migrated to:     https://tiles.apache.org/tiles-request/apidocs/ ([https](https://tiles.apache.org/tiles-request/apidocs/) result 200). * http://www.apache.org/licenses/LICENSE-2.0.txt migrated to:     https://www.apache.org/licenses/LICENSE-2.0.txt ([https](https://www.apache.org/licenses/LICENSE-2.0.txt) result 200). * http://www.eclipse.org/aspectj/doc/released/aspectj5rt-api/ migrated to:     https://www.eclipse.org/aspectj/doc/released/aspectj5rt-api/ ([https](https://www.eclipse.org/aspectj/doc/released/aspectj5rt-api/) result 200). * http://ehcache.org/apidocs/ (301) migrated to:     https://www.ehcache.org/apidocs/ ([https](https://ehcache.org/apidocs/) result 200). * http://static.springframework.org/spring-framework/docs (301) migrated to:     https://docs.spring.io/spring-framework/docs ([https](https://static.springframework.org/spring-framework/docs) result 301). * http://fasterxml.github.com/jackson-core/javadoc/2.3.0/ migrated to:     https://fasterxml.github.com/jackson-core/javadoc/2.3.0/ ([https](https://fasterxml.github.com/jackson-core/javadoc/2.3.0/) result 301). * http://fasterxml.github.com/jackson-databind/javadoc/2.3.0/ migrated to:     https://fasterxml.github.com/jackson-databind/javadoc/2.3.0/ ([https](https://fasterxml.github.com/jackson-databind/javadoc/2.3.0/) result 301). * http://glassfish.java.net/nonav/docs/v3/api/ migrated to:     https://glassfish.java.net/nonav/docs/v3/api/ ([https](https://glassfish.java.net/nonav/docs/v3/api/) result 301). * http://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs migrated to:     https://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs ([https](https://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs) result 301). * http://pic.dhe.ibm.com/infocenter/wasinfo/v7r0/topic/com.ibm.websphere.javadoc.doc/web/apidocs/ migrated to:     https://pic.dhe.ibm.com/infocenter/wasinfo/v7r0/topic/com.ibm.websphere.javadoc.doc/web/apidocs/ ([https](https://pic.dhe.ibm.com/infocenter/wasinfo/v7r0/topic/com.ibm.websphere.javadoc.doc/web/apidocs/) result 301). * http://springsource.org/spring-framework (301) migrated to:     https://projects.spring.io/spring-framework ([https](https://springsource.org/spring-framework) result 301). * http://springframework.org/schema migrated to:     https://springframework.org/schema ([https](https://springframework.org/schema) result 301).","closed","type: task,","spring-operator","2019-03-06T03:55:39Z","2019-03-06T18:13:32Z"
"","22517","URL Cleanup","This commit updates URLs to prefer the https protocol. Redirects are not followed to avoid accidentally expanding intentionally shortened URLs (i.e. if using a URL shortener).  # HTTP URLs that Could Not Be Fixed These URLs were unable to be fixed. Please review them to see if they can be manually resolved.  * http://aopalliance.sourceforge.net/doc/ (200) migrated to:     http://aopalliance.sourceforge.net/doc/ ([https](https://aopalliance.sourceforge.net/doc/) result AnnotatedConnectException).  # Fixed URLs  ## Fixed But Review Recommended These URLs were fixed, but the https status was not OK. However, the https status was the same as the http request or http redirected to an https URL, so they were migrated. Your review is recommended.  * http://jackson.codehaus.org/1.9.4/javadoc/ (UnknownHostException) migrated to:     https://jackson.codehaus.org/1.9.4/javadoc/ ([https](https://jackson.codehaus.org/1.9.4/javadoc/) result UnknownHostException). * http://jira.codehaus.org/browse/JIBX-465 (UnknownHostException) migrated to:     https://jira.codehaus.org/browse/JIBX-465 ([https](https://jira.codehaus.org/browse/JIBX-465) result UnknownHostException). * http://quartz-scheduler.org/api/2.2.0/ (301) migrated to:     https://www.quartz-scheduler.org/api/2.2.0/ ([https](https://quartz-scheduler.org/api/2.2.0/) result 404).  ## Fixed Success  These URLs were fixed successfully.  * http://commons.apache.org/proper/commons-codec/apidocs/ migrated to:     https://commons.apache.org/proper/commons-codec/apidocs/ ([https](https://commons.apache.org/proper/commons-codec/apidocs/) result 200). * http://commons.apache.org/proper/commons-dbcp/apidocs/ migrated to:     https://commons.apache.org/proper/commons-dbcp/apidocs/ ([https](https://commons.apache.org/proper/commons-dbcp/apidocs/) result 200). * http://commons.apache.org/proper/commons-lang/javadocs/api-2.5/ migrated to:     https://commons.apache.org/proper/commons-lang/javadocs/api-2.5/ ([https](https://commons.apache.org/proper/commons-lang/javadocs/api-2.5/) result 200). * http://docs.jboss.org/jbossas/javadoc/4.0.5/connector/ migrated to:     https://docs.jboss.org/jbossas/javadoc/4.0.5/connector/ ([https](https://docs.jboss.org/jbossas/javadoc/4.0.5/connector/) result 200). * http://docs.jboss.org/jbossas/javadoc/7.1.2.Final/ migrated to:     https://docs.jboss.org/jbossas/javadoc/7.1.2.Final/ ([https](https://docs.jboss.org/jbossas/javadoc/7.1.2.Final/) result 200). * http://docs.oracle.com/cd/E13222_01/wls/docs90/javadocs/ migrated to:     https://docs.oracle.com/cd/E13222_01/wls/docs90/javadocs/ ([https](https://docs.oracle.com/cd/E13222_01/wls/docs90/javadocs/) result 200). * http://docs.oracle.com/javaee/7/api/ migrated to:     https://docs.oracle.com/javaee/7/api/ ([https](https://docs.oracle.com/javaee/7/api/) result 200). * http://docs.oracle.com/javase/7/docs/api/ migrated to:     https://docs.oracle.com/javase/7/docs/api/ ([https](https://docs.oracle.com/javase/7/docs/api/) result 200). * http://portals.apache.org/pluto/portlet-2.0-apidocs/ migrated to:     https://portals.apache.org/pluto/portlet-2.0-apidocs/ ([https](https://portals.apache.org/pluto/portlet-2.0-apidocs/) result 200). * http://tiles.apache.org/framework/apidocs/ migrated to:     https://tiles.apache.org/framework/apidocs/ ([https](https://tiles.apache.org/framework/apidocs/) result 200). * http://tiles.apache.org/tiles-request/apidocs/ migrated to:     https://tiles.apache.org/tiles-request/apidocs/ ([https](https://tiles.apache.org/tiles-request/apidocs/) result 200). * http://www.apache.org/licenses/LICENSE-2.0.txt migrated to:     https://www.apache.org/licenses/LICENSE-2.0.txt ([https](https://www.apache.org/licenses/LICENSE-2.0.txt) result 200). * http://www.eclipse.org/aspectj/doc/released/aspectj5rt-api/ migrated to:     https://www.eclipse.org/aspectj/doc/released/aspectj5rt-api/ ([https](https://www.eclipse.org/aspectj/doc/released/aspectj5rt-api/) result 200). * http://ehcache.org/apidocs/ (301) migrated to:     https://www.ehcache.org/apidocs/ ([https](https://ehcache.org/apidocs/) result 200). * http://static.springframework.org/spring-framework/docs (301) migrated to:     https://docs.spring.io/spring-framework/docs ([https](https://static.springframework.org/spring-framework/docs) result 301). * http://fasterxml.github.com/jackson-core/javadoc/2.3.0/ migrated to:     https://fasterxml.github.com/jackson-core/javadoc/2.3.0/ ([https](https://fasterxml.github.com/jackson-core/javadoc/2.3.0/) result 301). * http://fasterxml.github.com/jackson-databind/javadoc/2.3.0/ migrated to:     https://fasterxml.github.com/jackson-databind/javadoc/2.3.0/ ([https](https://fasterxml.github.com/jackson-databind/javadoc/2.3.0/) result 301). * http://glassfish.java.net/nonav/docs/v3/api/ migrated to:     https://glassfish.java.net/nonav/docs/v3/api/ ([https](https://glassfish.java.net/nonav/docs/v3/api/) result 301). * http://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs migrated to:     https://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs ([https](https://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs) result 301). * http://pic.dhe.ibm.com/infocenter/wasinfo/v7r0/topic/com.ibm.websphere.javadoc.doc/web/apidocs/ migrated to:     https://pic.dhe.ibm.com/infocenter/wasinfo/v7r0/topic/com.ibm.websphere.javadoc.doc/web/apidocs/ ([https](https://pic.dhe.ibm.com/infocenter/wasinfo/v7r0/topic/com.ibm.websphere.javadoc.doc/web/apidocs/) result 301). * http://projects.spring.io/spring-framework migrated to:     https://projects.spring.io/spring-framework ([https](https://projects.spring.io/spring-framework) result 301). * http://springframework.org/schema migrated to:     https://springframework.org/schema ([https](https://springframework.org/schema) result 301). * http://spring.io/tools/sts/all migrated to:     https://spring.io/tools/sts/all ([https](https://spring.io/tools/sts/all) result 302).","closed","type: task,","spring-operator","2019-03-06T03:55:57Z","2019-03-11T21:42:11Z"
"","22672","URL Cleanup","This commit updates URLs to prefer the https protocol. Redirects are not followed to avoid accidentally expanding intentionally shortened URLs (i.e. if using a URL shortener).  # HTTP URLs that Could Not Be Fixed These URLs were unable to be fixed. Please review them to see if they can be manually resolved.  * [x] http://castor.org/mapping.dtd (301) with 1 occurrences could not be migrated:      ([https](https://castor.org/mapping.dtd) result AnnotatedConnectException). * [x] http://mydomain2.com (302) with 2 occurrences could not be migrated:      ([https](https://mydomain2.com) result ConnectTimeoutException). * [x] http://www.foo.com/schema/component/component.xsd (404) with 1 occurrences could not be migrated:      ([https](https://www.foo.com/schema/component/component.xsd) result SSLHandshakeException).  # Fixed URLs  ## Fixed But Review Recommended These URLs were fixed, but the https status was not OK. However, the https status was the same as the http request or http redirected to an https URL, so they were migrated. Your review is recommended.  * [ ] http://www.kbcafe.com/rss/atom.xsd.xml (ConnectTimeoutException) with 1 occurrences migrated to:     https://www.kbcafe.com/rss/atom.xsd.xml ([https](https://www.kbcafe.com/rss/atom.xsd.xml) result ConnectTimeoutException). * [ ] http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd (ReadTimeoutException) with 5 occurrences migrated to:     https://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd ([https](https://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd) result ReadTimeoutException). * [ ] http://domain1.com (UnknownHostException) with 2 occurrences migrated to:     https://domain1.com ([https](https://domain1.com) result UnknownHostException). * [ ] http://domain2.com (UnknownHostException) with 1 occurrences migrated to:     https://domain2.com ([https](https://domain2.com) result UnknownHostException). * [ ] http://mydomain1.com,http://mydomain2.com (UnknownHostException) with 1 occurrences migrated to:     https://mydomain1.com,http://mydomain2.com ([https](https://mydomain1.com,https://mydomain2.com) result UnknownHostException). * [ ] http://mydomain3.com,http://mydomain4.com (UnknownHostException) with 1 occurrences migrated to:     https://mydomain3.com,http://mydomain4.com ([https](https://mydomain3.com,https://mydomain4.com) result UnknownHostException). * [ ] http://www.springframework.org/schema/beans/factory/xml/support/CustomNamespaceHandlerTests.xsd (404) with 1 occurrences migrated to:     https://www.springframework.org/schema/beans/factory/xml/support/CustomNamespaceHandlerTests.xsd ([https](https://www.springframework.org/schema/beans/factory/xml/support/CustomNamespaceHandlerTests.xsd) result 404).  ## Fixed Success  These URLs were switched to an https URL with a 2xx status. While the status was successful, your review is still recommended.  * [ ] http://example.com with 1 occurrences migrated to:     https://example.com ([https](https://example.com) result 200). * [ ] http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd (301) with 2 occurrences migrated to:     https://hibernate.org/dtd/hibernate-mapping-3.0.dtd ([https](https://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd) result 200). * [ ] http://testng.org/testng-1.0.dtd with 3 occurrences migrated to:     https://testng.org/testng-1.0.dtd ([https](https://testng.org/testng-1.0.dtd) result 200). * [ ] http://tiles.apache.org/dtds/tiles-config_2_0.dtd with 3 occurrences migrated to:     https://tiles.apache.org/dtds/tiles-config_2_0.dtd ([https](https://tiles.apache.org/dtds/tiles-config_2_0.dtd) result 200). * [ ] http://tiles.apache.org/dtds/tiles-config_2_1.dtd with 2 occurrences migrated to:     https://tiles.apache.org/dtds/tiles-config_2_1.dtd ([https](https://tiles.apache.org/dtds/tiles-config_2_1.dtd) result 200). * [ ] http://tiles.apache.org/dtds/tiles-config_3_0.dtd with 4 occurrences migrated to:     https://tiles.apache.org/dtds/tiles-config_3_0.dtd ([https](https://tiles.apache.org/dtds/tiles-config_3_0.dtd) result 200). * [ ] http://www.quartz-scheduler.org/xml/job_scheduling_data_1_8.xsd with 1 occurrences migrated to:     https://www.quartz-scheduler.org/xml/job_scheduling_data_1_8.xsd ([https](https://www.quartz-scheduler.org/xml/job_scheduling_data_1_8.xsd) result 200). * [ ] http://www.springframework.org/dtd/spring-beans-2.0.dtd with 214 occurrences migrated to:     https://www.springframework.org/dtd/spring-beans-2.0.dtd ([https](https://www.springframework.org/dtd/spring-beans-2.0.dtd) result 200). * [ ] http://www.springframework.org/schema/aop/spring-aop-2.0.xsd with 69 occurrences migrated to:     https://www.springframework.org/schema/aop/spring-aop-2.0.xsd ([https](https://www.springframework.org/schema/aop/spring-aop-2.0.xsd) result 200). * [ ] http://www.springframework.org/schema/aop/spring-aop-2.5.xsd with 11 occurrences migrated to:     https://www.springframework.org/schema/aop/spring-aop-2.5.xsd ([https](https://www.springframework.org/schema/aop/spring-aop-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/aop/spring-aop-3.0.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/aop/spring-aop-3.0.xsd ([https](https://www.springframework.org/schema/aop/spring-aop-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/aop/spring-aop.xsd with 7 occurrences migrated to:     https://www.springframework.org/schema/aop/spring-aop.xsd ([https](https://www.springframework.org/schema/aop/spring-aop.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-2.0.xsd with 115 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-2.0.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-2.0.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-2.5.xsd with 44 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-2.5.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-3.0.xsd with 10 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-3.0.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-3.1.xsd with 34 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-3.1.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-3.2.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-3.2.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-3.2.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-4.0.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-4.0.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-4.0.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-4.1.xsd with 3 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-4.1.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-4.1.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-4.2.xsd with 6 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-4.2.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-4.2.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-4.3.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-4.3.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-4.3.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans.xsd with 141 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans.xsd ([https](https://www.springframework.org/schema/beans/spring-beans.xsd) result 200). * [ ] http://www.springframework.org/schema/cache/spring-cache.xsd with 10 occurrences migrated to:     https://www.springframework.org/schema/cache/spring-cache.xsd ([https](https://www.springframework.org/schema/cache/spring-cache.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-2.5.xsd with 42 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-2.5.xsd ([https](https://www.springframework.org/schema/context/spring-context-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-3.0.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-3.0.xsd ([https](https://www.springframework.org/schema/context/spring-context-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-3.1.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-3.1.xsd ([https](https://www.springframework.org/schema/context/spring-context-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-3.2.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-3.2.xsd ([https](https://www.springframework.org/schema/context/spring-context-3.2.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-4.0.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-4.0.xsd ([https](https://www.springframework.org/schema/context/spring-context-4.0.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-4.2.xsd with 4 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-4.2.xsd ([https](https://www.springframework.org/schema/context/spring-context-4.2.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-4.3.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-4.3.xsd ([https](https://www.springframework.org/schema/context/spring-context-4.3.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context.xsd with 11 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context.xsd ([https](https://www.springframework.org/schema/context/spring-context.xsd) result 200). * [ ] http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd with 9 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd ([https](https://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd with 5 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd ([https](https://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd with 9 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd ([https](https://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd) result 200). * [ ] http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd ([https](https://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd) result 200). * [ ] http://www.springframework.org/schema/jdbc/spring-jdbc.xsd with 8 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-jdbc.xsd ([https](https://www.springframework.org/schema/jdbc/spring-jdbc.xsd) result 200). * [ ] http://www.springframework.org/schema/jee/spring-jee-3.1.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/jee/spring-jee-3.1.xsd ([https](https://www.springframework.org/schema/jee/spring-jee-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/jms/spring-jms-4.1.xsd with 9 occurrences migrated to:     https://www.springframework.org/schema/jms/spring-jms-4.1.xsd ([https](https://www.springframework.org/schema/jms/spring-jms-4.1.xsd) result 200). * [ ] http://www.springframework.org/schema/jms/spring-jms-4.2.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/jms/spring-jms-4.2.xsd ([https](https://www.springframework.org/schema/jms/spring-jms-4.2.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang-2.0.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang-2.0.xsd ([https](https://www.springframework.org/schema/lang/spring-lang-2.0.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang-2.5.xsd with 4 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang-2.5.xsd ([https](https://www.springframework.org/schema/lang/spring-lang-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang-3.0.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang-3.0.xsd ([https](https://www.springframework.org/schema/lang/spring-lang-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang-3.1.xsd with 5 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang-3.1.xsd ([https](https://www.springframework.org/schema/lang/spring-lang-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang-4.2.xsd with 3 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang-4.2.xsd ([https](https://www.springframework.org/schema/lang/spring-lang-4.2.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang.xsd ([https](https://www.springframework.org/schema/lang/spring-lang.xsd) result 200). * [ ] http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd ([https](https://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd ([https](https://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd) result 200). * [ ] http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd ([https](https://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd) result 200). * [ ] http://www.springframework.org/schema/mvc/spring-mvc.xsd with 26 occurrences migrated to:     https://www.springframework.org/schema/mvc/spring-mvc.xsd ([https](https://www.springframework.org/schema/mvc/spring-mvc.xsd) result 200). * [ ] http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd ([https](https://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/task/spring-task-4.1.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/task/spring-task-4.1.xsd ([https](https://www.springframework.org/schema/task/spring-task-4.1.xsd) result 200). * [ ] http://www.springframework.org/schema/task/spring-task.xsd with 6 occurrences migrated to:     https://www.springframework.org/schema/task/spring-task.xsd ([https](https://www.springframework.org/schema/task/spring-task.xsd) result 200). * [ ] http://www.springframework.org/schema/tx/spring-tx-2.5.xsd with 3 occurrences migrated to:     https://www.springframework.org/schema/tx/spring-tx-2.5.xsd ([https](https://www.springframework.org/schema/tx/spring-tx-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/tx/spring-tx-4.0.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/tx/spring-tx-4.0.xsd ([https](https://www.springframework.org/schema/tx/spring-tx-4.0.xsd) result 200). * [ ] http://www.springframework.org/schema/tx/spring-tx.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/tx/spring-tx.xsd ([https](https://www.springframework.org/schema/tx/spring-tx.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-2.0.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-2.0.xsd ([https](https://www.springframework.org/schema/util/spring-util-2.0.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-2.5.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-2.5.xsd ([https](https://www.springframework.org/schema/util/spring-util-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-3.0.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-3.0.xsd ([https](https://www.springframework.org/schema/util/spring-util-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-3.1.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-3.1.xsd ([https](https://www.springframework.org/schema/util/spring-util-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-4.1.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-4.1.xsd ([https](https://www.springframework.org/schema/util/spring-util-4.1.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-4.2.xsd with 4 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-4.2.xsd ([https](https://www.springframework.org/schema/util/spring-util-4.2.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util.xsd ([https](https://www.springframework.org/schema/util/spring-util.xsd) result 200). * [ ] http://www.springframework.org/schema/websocket/spring-websocket.xsd with 11 occurrences migrated to:     https://www.springframework.org/schema/websocket/spring-websocket.xsd ([https](https://www.springframework.org/schema/websocket/spring-websocket.xsd) result 200). * [ ] http://www.w3.org/1999/02/22-rdf-syntax-ns with 2 occurrences migrated to:     https://www.w3.org/1999/02/22-rdf-syntax-ns ([https](https://www.w3.org/1999/02/22-rdf-syntax-ns) result 200). * [ ] http://mydomain1.com with 2 occurrences migrated to:     https://mydomain1.com ([https](https://mydomain1.com) result 301). * [ ] http://www.springframework.org with 1 occurrences migrated to:     https://www.springframework.org ([https](https://www.springframework.org) result 301). * [ ] http://help.sap.com/saphelp_hanaplatform/helpdata/en/20/a78d3275191014b41bae7c4a46d835/content.htm with 1 occurrences migrated to:     https://help.sap.com/saphelp_hanaplatform/helpdata/en/20/a78d3275191014b41bae7c4a46d835/content.htm ([https](https://help.sap.com/saphelp_hanaplatform/helpdata/en/20/a78d3275191014b41bae7c4a46d835/content.htm) result 302). * [ ] http://java.sun.com/xml/ns/j2ee/connector_1_5.xsd with 1 occurrences migrated to:     https://java.sun.com/xml/ns/j2ee/connector_1_5.xsd ([https](https://java.sun.com/xml/ns/j2ee/connector_1_5.xsd) result 302). * [ ] http://java.sun.com/xml/ns/javaee/web-fragment_3_0.xsd with 1 occurrences migrated to:     https://java.sun.com/xml/ns/javaee/web-fragment_3_0.xsd ([https](https://java.sun.com/xml/ns/javaee/web-fragment_3_0.xsd) result 302). * [ ] http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd with 12 occurrences migrated to:     https://java.sun.com/xml/ns/persistence/persistence_1_0.xsd ([https](https://java.sun.com/xml/ns/persistence/persistence_1_0.xsd) result 302). * [ ] http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd with 1 occurrences migrated to:     https://java.sun.com/xml/ns/persistence/persistence_2_0.xsd ([https](https://java.sun.com/xml/ns/persistence/persistence_2_0.xsd) result 302). * [ ] http://purl.org/dc/dcmitype/StillImage with 2 occurrences migrated to:     https://purl.org/dc/dcmitype/StillImage ([https](https://purl.org/dc/dcmitype/StillImage) result 302).  # Ignored These URLs were intentionally ignored.  * http://creativecommons.org/ns with 2 occurrences * http://java.sun.com/dtd/properties.dtd with 4 occurrences * http://java.sun.com/xml/ns/j2ee with 2 occurrences * http://java.sun.com/xml/ns/javaee with 2 occurrences * http://java.sun.com/xml/ns/persistence with 27 occurrences * http://localhost:8080 with 3 occurrences * http://purl.org/dc/elements/1.1/ with 2 occurrences * http://samples.springframework.org/flight with 7 occurrences * http://schemas.microsoft.com/visio/2003/SVGExtensions/ with 7 occurrences * http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd with 2 occurrences * http://www.foo.com/schema/component with 2 occurrences * http://www.greeting.com/goodbye/ with 1 occurrences * http://www.greeting.com/hello/ with 1 occurrences * http://www.inkscape.org/namespaces/inkscape with 2 occurrences * http://www.quartz-scheduler.org/xml/JobSchedulingData with 2 occurrences * http://www.springframework.org/schema/aop with 178 occurrences * http://www.springframework.org/schema/beans with 717 occurrences * http://www.springframework.org/schema/beans/test with 2 occurrences * http://www.springframework.org/schema/c with 9 occurrences * http://www.springframework.org/schema/cache with 20 occurrences * http://www.springframework.org/schema/context with 130 occurrences * http://www.springframework.org/schema/jdbc with 66 occurrences * http://www.springframework.org/schema/jee with 2 occurrences * http://www.springframework.org/schema/jms with 20 occurrences * http://www.springframework.org/schema/lang with 33 occurrences * http://www.springframework.org/schema/mvc with 60 occurrences * http://www.springframework.org/schema/oxm with 2 occurrences * http://www.springframework.org/schema/p with 16 occurrences * http://www.springframework.org/schema/task with 14 occurrences * http://www.springframework.org/schema/tx with 12 occurrences * http://www.springframework.org/schema/util with 28 occurrences * http://www.springframework.org/schema/websocket with 22 occurrences * http://www.w3.org/2000/svg with 9 occurrences * http://www.w3.org/2001/XMLSchema-instance with 376 occurrences * http://www.w3.org/2005/Atom with 2 occurrences","closed","type: task,","spring-operator","2019-03-26T05:36:51Z","2019-03-27T12:08:43Z"
"","22671","URL Cleanup","This commit updates URLs to prefer the https protocol. Redirects are not followed to avoid accidentally expanding intentionally shortened URLs (i.e. if using a URL shortener).  # HTTP URLs that Could Not Be Fixed These URLs were unable to be fixed. Please review them to see if they can be manually resolved.  * [x] http://castor.org/mapping.dtd (301) with 1 occurrences could not be migrated:      ([https](https://castor.org/mapping.dtd) result AnnotatedConnectException). * [x] http://mydomain2.com (302) with 2 occurrences could not be migrated:      ([https](https://mydomain2.com) result ConnectTimeoutException). * [x] http://www.foo.com/schema/component/component.xsd (404) with 1 occurrences could not be migrated:      ([https](https://www.foo.com/schema/component/component.xsd) result SSLHandshakeException).  # Fixed URLs  ## Fixed But Review Recommended These URLs were fixed, but the https status was not OK. However, the https status was the same as the http request or http redirected to an https URL, so they were migrated. Your review is recommended.  * [ ] http://www.kbcafe.com/rss/atom.xsd.xml (ConnectTimeoutException) with 1 occurrences migrated to:     https://www.kbcafe.com/rss/atom.xsd.xml ([https](https://www.kbcafe.com/rss/atom.xsd.xml) result ConnectTimeoutException). * [ ] http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd (ReadTimeoutException) with 5 occurrences migrated to:     https://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd ([https](https://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd) result ReadTimeoutException). * [ ] http://domain1.com (UnknownHostException) with 2 occurrences migrated to:     https://domain1.com ([https](https://domain1.com) result UnknownHostException). * [ ] http://domain2.com (UnknownHostException) with 1 occurrences migrated to:     https://domain2.com ([https](https://domain2.com) result UnknownHostException). * [ ] http://mydomain1.com,http://mydomain2.com (UnknownHostException) with 1 occurrences migrated to:     https://mydomain1.com,http://mydomain2.com ([https](https://mydomain1.com,https://mydomain2.com) result UnknownHostException). * [ ] http://mydomain3.com,http://mydomain4.com (UnknownHostException) with 1 occurrences migrated to:     https://mydomain3.com,http://mydomain4.com ([https](https://mydomain3.com,https://mydomain4.com) result UnknownHostException). * [ ] http://www.springframework.org/schema/beans/factory/xml/support/CustomNamespaceHandlerTests.xsd (404) with 1 occurrences migrated to:     https://www.springframework.org/schema/beans/factory/xml/support/CustomNamespaceHandlerTests.xsd ([https](https://www.springframework.org/schema/beans/factory/xml/support/CustomNamespaceHandlerTests.xsd) result 404).  ## Fixed Success  These URLs were switched to an https URL with a 2xx status. While the status was successful, your review is still recommended.  * [ ] http://example.com with 1 occurrences migrated to:     https://example.com ([https](https://example.com) result 200). * [ ] http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd (301) with 2 occurrences migrated to:     https://hibernate.org/dtd/hibernate-mapping-3.0.dtd ([https](https://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd) result 200). * [ ] http://testng.org/testng-1.0.dtd with 3 occurrences migrated to:     https://testng.org/testng-1.0.dtd ([https](https://testng.org/testng-1.0.dtd) result 200). * [ ] http://tiles.apache.org/dtds/tiles-config_2_0.dtd with 3 occurrences migrated to:     https://tiles.apache.org/dtds/tiles-config_2_0.dtd ([https](https://tiles.apache.org/dtds/tiles-config_2_0.dtd) result 200). * [ ] http://tiles.apache.org/dtds/tiles-config_2_1.dtd with 2 occurrences migrated to:     https://tiles.apache.org/dtds/tiles-config_2_1.dtd ([https](https://tiles.apache.org/dtds/tiles-config_2_1.dtd) result 200). * [ ] http://tiles.apache.org/dtds/tiles-config_3_0.dtd with 4 occurrences migrated to:     https://tiles.apache.org/dtds/tiles-config_3_0.dtd ([https](https://tiles.apache.org/dtds/tiles-config_3_0.dtd) result 200). * [ ] http://www.quartz-scheduler.org/xml/job_scheduling_data_1_8.xsd with 1 occurrences migrated to:     https://www.quartz-scheduler.org/xml/job_scheduling_data_1_8.xsd ([https](https://www.quartz-scheduler.org/xml/job_scheduling_data_1_8.xsd) result 200). * [ ] http://www.springframework.org/dtd/spring-beans-2.0.dtd with 214 occurrences migrated to:     https://www.springframework.org/dtd/spring-beans-2.0.dtd ([https](https://www.springframework.org/dtd/spring-beans-2.0.dtd) result 200). * [ ] http://www.springframework.org/dtd/spring-beans.dtd with 1 occurrences migrated to:     https://www.springframework.org/dtd/spring-beans.dtd ([https](https://www.springframework.org/dtd/spring-beans.dtd) result 200). * [ ] http://www.springframework.org/schema/aop/spring-aop-2.0.xsd with 69 occurrences migrated to:     https://www.springframework.org/schema/aop/spring-aop-2.0.xsd ([https](https://www.springframework.org/schema/aop/spring-aop-2.0.xsd) result 200). * [ ] http://www.springframework.org/schema/aop/spring-aop-2.5.xsd with 11 occurrences migrated to:     https://www.springframework.org/schema/aop/spring-aop-2.5.xsd ([https](https://www.springframework.org/schema/aop/spring-aop-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/aop/spring-aop-3.0.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/aop/spring-aop-3.0.xsd ([https](https://www.springframework.org/schema/aop/spring-aop-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/aop/spring-aop.xsd with 7 occurrences migrated to:     https://www.springframework.org/schema/aop/spring-aop.xsd ([https](https://www.springframework.org/schema/aop/spring-aop.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-2.0.xsd with 116 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-2.0.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-2.0.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-2.5.xsd with 44 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-2.5.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-3.0.xsd with 11 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-3.0.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-3.1.xsd with 33 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-3.1.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-3.2.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-3.2.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-3.2.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-4.0.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-4.0.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-4.0.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-4.1.xsd with 3 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-4.1.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-4.1.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-4.2.xsd with 4 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-4.2.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-4.2.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans.xsd with 141 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans.xsd ([https](https://www.springframework.org/schema/beans/spring-beans.xsd) result 200). * [ ] http://www.springframework.org/schema/cache/spring-cache.xsd with 10 occurrences migrated to:     https://www.springframework.org/schema/cache/spring-cache.xsd ([https](https://www.springframework.org/schema/cache/spring-cache.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-2.5.xsd with 42 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-2.5.xsd ([https](https://www.springframework.org/schema/context/spring-context-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-3.0.xsd with 3 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-3.0.xsd ([https](https://www.springframework.org/schema/context/spring-context-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-3.1.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-3.1.xsd ([https](https://www.springframework.org/schema/context/spring-context-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-3.2.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-3.2.xsd ([https](https://www.springframework.org/schema/context/spring-context-3.2.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-4.0.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-4.0.xsd ([https](https://www.springframework.org/schema/context/spring-context-4.0.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-4.2.xsd with 4 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-4.2.xsd ([https](https://www.springframework.org/schema/context/spring-context-4.2.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context.xsd with 11 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context.xsd ([https](https://www.springframework.org/schema/context/spring-context.xsd) result 200). * [ ] http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd with 9 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd ([https](https://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd with 5 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd ([https](https://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd with 9 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd ([https](https://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd) result 200). * [ ] http://www.springframework.org/schema/jdbc/spring-jdbc.xsd with 8 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-jdbc.xsd ([https](https://www.springframework.org/schema/jdbc/spring-jdbc.xsd) result 200). * [ ] http://www.springframework.org/schema/jee/spring-jee-3.1.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/jee/spring-jee-3.1.xsd ([https](https://www.springframework.org/schema/jee/spring-jee-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/jms/spring-jms-4.1.xsd with 9 occurrences migrated to:     https://www.springframework.org/schema/jms/spring-jms-4.1.xsd ([https](https://www.springframework.org/schema/jms/spring-jms-4.1.xsd) result 200). * [ ] http://www.springframework.org/schema/jms/spring-jms-4.2.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/jms/spring-jms-4.2.xsd ([https](https://www.springframework.org/schema/jms/spring-jms-4.2.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang-2.0.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang-2.0.xsd ([https](https://www.springframework.org/schema/lang/spring-lang-2.0.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang-2.5.xsd with 4 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang-2.5.xsd ([https](https://www.springframework.org/schema/lang/spring-lang-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang-3.0.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang-3.0.xsd ([https](https://www.springframework.org/schema/lang/spring-lang-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang-3.1.xsd with 5 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang-3.1.xsd ([https](https://www.springframework.org/schema/lang/spring-lang-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang-4.2.xsd with 3 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang-4.2.xsd ([https](https://www.springframework.org/schema/lang/spring-lang-4.2.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang.xsd ([https](https://www.springframework.org/schema/lang/spring-lang.xsd) result 200). * [ ] http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd ([https](https://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd ([https](https://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd) result 200). * [ ] http://www.springframework.org/schema/mvc/spring-mvc.xsd with 28 occurrences migrated to:     https://www.springframework.org/schema/mvc/spring-mvc.xsd ([https](https://www.springframework.org/schema/mvc/spring-mvc.xsd) result 200). * [ ] http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd ([https](https://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/task/spring-task-4.1.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/task/spring-task-4.1.xsd ([https](https://www.springframework.org/schema/task/spring-task-4.1.xsd) result 200). * [ ] http://www.springframework.org/schema/task/spring-task.xsd with 6 occurrences migrated to:     https://www.springframework.org/schema/task/spring-task.xsd ([https](https://www.springframework.org/schema/task/spring-task.xsd) result 200). * [ ] http://www.springframework.org/schema/tx/spring-tx-2.5.xsd with 3 occurrences migrated to:     https://www.springframework.org/schema/tx/spring-tx-2.5.xsd ([https](https://www.springframework.org/schema/tx/spring-tx-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/tx/spring-tx-4.0.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/tx/spring-tx-4.0.xsd ([https](https://www.springframework.org/schema/tx/spring-tx-4.0.xsd) result 200). * [ ] http://www.springframework.org/schema/tx/spring-tx.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/tx/spring-tx.xsd ([https](https://www.springframework.org/schema/tx/spring-tx.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-2.0.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-2.0.xsd ([https](https://www.springframework.org/schema/util/spring-util-2.0.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-2.5.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-2.5.xsd ([https](https://www.springframework.org/schema/util/spring-util-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-3.0.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-3.0.xsd ([https](https://www.springframework.org/schema/util/spring-util-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-3.1.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-3.1.xsd ([https](https://www.springframework.org/schema/util/spring-util-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-4.1.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-4.1.xsd ([https](https://www.springframework.org/schema/util/spring-util-4.1.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-4.2.xsd with 4 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-4.2.xsd ([https](https://www.springframework.org/schema/util/spring-util-4.2.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util.xsd ([https](https://www.springframework.org/schema/util/spring-util.xsd) result 200). * [ ] http://www.springframework.org/schema/websocket/spring-websocket.xsd with 11 occurrences migrated to:     https://www.springframework.org/schema/websocket/spring-websocket.xsd ([https](https://www.springframework.org/schema/websocket/spring-websocket.xsd) result 200). * [ ] http://www.w3.org/1999/02/22-rdf-syntax-ns with 2 occurrences migrated to:     https://www.w3.org/1999/02/22-rdf-syntax-ns ([https](https://www.w3.org/1999/02/22-rdf-syntax-ns) result 200). * [ ] http://mydomain1.com with 2 occurrences migrated to:     https://mydomain1.com ([https](https://mydomain1.com) result 301). * [ ] http://www.springframework.org with 1 occurrences migrated to:     https://www.springframework.org ([https](https://www.springframework.org) result 301). * [ ] http://help.sap.com/saphelp_hanaplatform/helpdata/en/20/a78d3275191014b41bae7c4a46d835/content.htm with 1 occurrences migrated to:     https://help.sap.com/saphelp_hanaplatform/helpdata/en/20/a78d3275191014b41bae7c4a46d835/content.htm ([https](https://help.sap.com/saphelp_hanaplatform/helpdata/en/20/a78d3275191014b41bae7c4a46d835/content.htm) result 302). * [ ] http://java.sun.com/xml/ns/j2ee/connector_1_5.xsd with 1 occurrences migrated to:     https://java.sun.com/xml/ns/j2ee/connector_1_5.xsd ([https](https://java.sun.com/xml/ns/j2ee/connector_1_5.xsd) result 302). * [ ] http://java.sun.com/xml/ns/javaee/web-fragment_3_0.xsd with 1 occurrences migrated to:     https://java.sun.com/xml/ns/javaee/web-fragment_3_0.xsd ([https](https://java.sun.com/xml/ns/javaee/web-fragment_3_0.xsd) result 302). * [ ] http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd with 12 occurrences migrated to:     https://java.sun.com/xml/ns/persistence/persistence_1_0.xsd ([https](https://java.sun.com/xml/ns/persistence/persistence_1_0.xsd) result 302). * [ ] http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd with 1 occurrences migrated to:     https://java.sun.com/xml/ns/persistence/persistence_2_0.xsd ([https](https://java.sun.com/xml/ns/persistence/persistence_2_0.xsd) result 302). * [ ] http://purl.org/dc/dcmitype/StillImage with 2 occurrences migrated to:     https://purl.org/dc/dcmitype/StillImage ([https](https://purl.org/dc/dcmitype/StillImage) result 302).  # Ignored These URLs were intentionally ignored.  * http://creativecommons.org/ns with 2 occurrences * http://java.sun.com/dtd/properties.dtd with 4 occurrences * http://java.sun.com/xml/ns/j2ee with 2 occurrences * http://java.sun.com/xml/ns/javaee with 2 occurrences * http://java.sun.com/xml/ns/persistence with 27 occurrences * http://localhost:8080 with 3 occurrences * http://purl.org/dc/elements/1.1/ with 2 occurrences * http://samples.springframework.org/flight with 7 occurrences * http://schemas.microsoft.com/visio/2003/SVGExtensions/ with 7 occurrences * http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd with 2 occurrences * http://www.foo.com/schema/component with 2 occurrences * http://www.greeting.com/goodbye/ with 1 occurrences * http://www.greeting.com/hello/ with 1 occurrences * http://www.inkscape.org/namespaces/inkscape with 2 occurrences * http://www.quartz-scheduler.org/xml/JobSchedulingData with 2 occurrences * http://www.springframework.org/schema/aop with 178 occurrences * http://www.springframework.org/schema/beans with 709 occurrences * http://www.springframework.org/schema/beans/test with 2 occurrences * http://www.springframework.org/schema/c with 9 occurrences * http://www.springframework.org/schema/cache with 20 occurrences * http://www.springframework.org/schema/context with 128 occurrences * http://www.springframework.org/schema/jdbc with 62 occurrences * http://www.springframework.org/schema/jee with 2 occurrences * http://www.springframework.org/schema/jms with 20 occurrences * http://www.springframework.org/schema/lang with 33 occurrences * http://www.springframework.org/schema/mvc with 60 occurrences * http://www.springframework.org/schema/oxm with 2 occurrences * http://www.springframework.org/schema/p with 16 occurrences * http://www.springframework.org/schema/task with 14 occurrences * http://www.springframework.org/schema/tx with 12 occurrences * http://www.springframework.org/schema/util with 28 occurrences * http://www.springframework.org/schema/websocket with 22 occurrences * http://www.w3.org/2000/svg with 9 occurrences * http://www.w3.org/2001/XMLSchema-instance with 372 occurrences * http://www.w3.org/2005/Atom with 2 occurrences","closed","type: task,","spring-operator","2019-03-26T05:36:27Z","2019-03-29T16:25:47Z"
"","22676","URL Cleanup","This commit updates URLs to prefer the https protocol. Redirects are not followed to avoid accidentally expanding intentionally shortened URLs (i.e. if using a URL shortener).  # HTTP URLs that Could Not Be Fixed These URLs were unable to be fixed. Please review them to see if they can be manually resolved.  * [x] http://aopalliance.sourceforge.net (200) with 1 occurrences could not be migrated:      ([https](https://aopalliance.sourceforge.net) result AnnotatedConnectException). * [x] http://cglib.sourceforge.net (200) with 1 occurrences could not be migrated:      ([https](https://cglib.sourceforge.net) result AnnotatedConnectException). * [x] http://classdoc.sourceforge.net (200) with 1 occurrences could not be migrated:      ([https](https://classdoc.sourceforge.net) result AnnotatedConnectException). * [x] http://gee.cs.oswego.edu/dl/concurrency-interest/ (200) with 1 occurrences could not be migrated:      ([https](https://gee.cs.oswego.edu/dl/concurrency-interest/) result AnnotatedConnectException). * [x] http://hsqldb.org (200) with 1 occurrences could not be migrated:      ([https](https://hsqldb.org) result SSLHandshakeException). * [x] http://jasperreports.sourceforge.net (200) with 2 occurrences could not be migrated:      ([https](https://jasperreports.sourceforge.net) result AnnotatedConnectException). * [x] http://jasperreports.sourceforge.net/dtds/jasperreport.dtd (200) with 6 occurrences could not be migrated:      ([https](https://jasperreports.sourceforge.net/dtds/jasperreport.dtd) result AnnotatedConnectException). * [x] http://javadiff.cvs.sourceforge.net/ (200) with 3 occurrences could not be migrated:      ([https](https://javadiff.cvs.sourceforge.net/) result SSLHandshakeException). * [ ] http://jibx.sourceforge.net/ (200) with 1 occurrences could not be migrated:      ([https](https://jibx.sourceforge.net/) result AnnotatedConnectException). * [ ] http://www.andykhan.com/jexcelapi/ (200) with 2 occurrences could not be migrated:      ([https](https://www.andykhan.com/jexcelapi/) result ConnectTimeoutException). * [ ] http://www.beanshell.org (200) with 1 occurrences could not be migrated:      ([https](https://www.beanshell.org) result SSLHandshakeException). * [ ] http://www.doclet.com (200) with 1 occurrences could not be migrated:      ([https](https://www.doclet.com) result AnnotatedConnectException). * [ ] http://www.jasperassistant.com (200) with 6 occurrences could not be migrated:      ([https](https://www.jasperassistant.com) result SSLHandshakeException). * [ ] http://www.jensgulden.de (200) with 1 occurrences could not be migrated:      ([https](https://www.jensgulden.de) result AnnotatedConnectException). * [ ] http://www.mockobjects.com (200) with 1 occurrences could not be migrated:      ([https](https://www.mockobjects.com) result ClosedChannelException). * [ ] http://xmlunit.sourceforge.net/ (200) with 3 occurrences could not be migrated:      ([https](https://xmlunit.sourceforge.net/) result AnnotatedConnectException). * [ ] http://cglib.sourceforge.net/apidocs (301) with 1 occurrences could not be migrated:      ([https](https://cglib.sourceforge.net/apidocs) result AnnotatedConnectException). * [ ] http://www.easymock.org (301) with 3 occurrences could not be migrated:      ([https](https://www.easymock.org) result SSLHandshakeException). * [ ] http://struts.sourceforge.net/struts-spring (301) with 2 occurrences could not be migrated:      ([https](https://struts.sourceforge.net/struts-spring) result AnnotatedConnectException). * [ ] http://foo.com/bar (301) with 4 occurrences could not be migrated:      ([https](https://foo.com/bar) result SSLHandshakeException). * [ ] http://foo.com/wrong (301) with 1 occurrences could not be migrated:      ([https](https://foo.com/wrong) result SSLHandshakeException). * [ ] http://www.caucho.com/hessian (302) with 6 occurrences could not be migrated:      ([https](https://www.caucho.com/hessian) result SSLHandshakeException). * [ ] http://www.jdiff.org (302) with 1 occurrences could not be migrated:      ([https](https://www.jdiff.org) result ConnectTimeoutException). * [ ] http://www.jpox.org (404) with 1 occurrences could not be migrated:      ([https](https://www.jpox.org) result ClosedChannelException).  # Fixed URLs  ## Fixed But Review Recommended These URLs were fixed, but the https status was not OK. However, the https status was the same as the http request or http redirected to an https URL, so they were migrated. Your review is recommended.  * [ ] http://bugs.sun.com/view_bug.do?bug_id=6342411 (302) with 1 occurrences migrated to:     https://bugs.java.com/view_bug.do?bug_id=6342411 ([https](https://bugs.sun.com/view_bug.do?bug_id=6342411) result SSLHandshakeException). * [ ] http://bugs.sun.com/view_bug.do?bug_id=7023180 (302) with 2 occurrences migrated to:     https://bugs.java.com/view_bug.do?bug_id=7023180 ([https](https://bugs.sun.com/view_bug.do?bug_id=7023180) result SSLHandshakeException). * [ ] http://www.freemarker.org (301) with 2 occurrences migrated to:     https://freemarker.apache.org/ ([https](https://www.freemarker.org) result ConnectTimeoutException). * [ ] http://progit.org/book/ch5-2.html (301) with 1 occurrences migrated to:     https://progit.org/book/ch5-2.html ([https](https://progit.org/book/ch5-2.html) result SSLHandshakeException). * [ ] http://www.caucho.com/burlap (302) with 6 occurrences migrated to:     https://www.caucho.com/burlap ([https](https://www.caucho.com/burlap) result SSLHandshakeException). * [ ] http://192.168.28.42/1.jsp (ConnectTimeoutException) with 2 occurrences migrated to:     https://192.168.28.42/1.jsp ([https](https://192.168.28.42/1.jsp) result ConnectTimeoutException). * [ ] http://dcl.mathcs.emory.edu/util/backport-util-concurrent/ (ConnectTimeoutException) with 1 occurrences migrated to:     https://dcl.mathcs.emory.edu/util/backport-util-concurrent/ ([https](https://dcl.mathcs.emory.edu/util/backport-util-concurrent/) result ConnectTimeoutException). * [ ] http://wwws.sun.com/software/xml/developers/diffmk/ (ConnectTimeoutException) with 1 occurrences migrated to:     https://wwws.sun.com/software/xml/developers/diffmk/ ([https](https://wwws.sun.com/software/xml/developers/diffmk/) result ConnectTimeoutException). * [ ] http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=5041784 (ReadTimeoutException) with 1 occurrences migrated to:     https://bugs.sun.com/bugdatabase/view_bug.do?bug_id=5041784 ([https](https://bugs.sun.com/bugdatabase/view_bug.do?bug_id=5041784) result SSLHandshakeException). * [ ] http://www.w3.org/TR/html4/loose.dtd (ReadTimeoutException) with 3 occurrences migrated to:     https://www.w3.org/TR/html4/loose.dtd ([https](https://www.w3.org/TR/html4/loose.dtd) result ReadTimeoutException). * [ ] http://arjen:foobar@java.sun.com:80/javase/6/docs/api/java/util/BitSet.html?foo=bar (UnknownHostException) with 5 occurrences migrated to:     https://arjen:foobar@java.sun.com:80/javase/6/docs/api/java/util/BitSet.html?foo=bar ([https](https://arjen:foobar@java.sun.com:80/javase/6/docs/api/java/util/BitSet.html?foo=bar) result UnknownHostException). * [ ] http://castor.codehaus.org/xml-mapping.html (UnknownHostException) with 1 occurrences migrated to:     https://castor.codehaus.org/xml-mapping.html ([https](https://castor.codehaus.org/xml-mapping.html) result UnknownHostException). * [ ] http://example.com"",HttpMethod.GET (UnknownHostException) with 3 occurrences migrated to:     https://example.com"",HttpMethod.GET ([https](https://example.com"",HttpMethod.GET) result UnknownHostException). * [ ] http://groovy.codehaus.org (UnknownHostException) with 1 occurrences migrated to:     https://groovy.codehaus.org ([https](https://groovy.codehaus.org) result UnknownHostException). * [ ] http://jackson.codehaus.org/ (UnknownHostException) with 4 occurrences migrated to:     https://jackson.codehaus.org/ ([https](https://jackson.codehaus.org/) result UnknownHostException). * [ ] http://nagoya.apache.org/bugzilla/show_bug.cgi?id=16014 (UnknownHostException) with 2 occurrences migrated to:     https://nagoya.apache.org/bugzilla/show_bug.cgi?id=16014 ([https](https://nagoya.apache.org/bugzilla/show_bug.cgi?id=16014) result UnknownHostException). * [ ] http://samples.springframework.org/order (UnknownHostException) with 2 occurrences migrated to:     https://samples.springframework.org/order ([https](https://samples.springframework.org/order) result UnknownHostException). * [ ] http://url.somewhere.com (UnknownHostException) with 24 occurrences migrated to:     https://url.somewhere.com ([https](https://url.somewhere.com) result UnknownHostException). * [ ] http://url.somewhere.com/path (UnknownHostException) with 1 occurrences migrated to:     https://url.somewhere.com/path ([https](https://url.somewhere.com/path) result UnknownHostException). * [ ] http://url.somewhere.com/path?id=1 (UnknownHostException) with 1 occurrences migrated to:     https://url.somewhere.com/path?id=1 ([https](https://url.somewhere.com/path?id=1) result UnknownHostException). * [ ] http://url.somewhere.com/test.htm (UnknownHostException) with 2 occurrences migrated to:     https://url.somewhere.com/test.htm ([https](https://url.somewhere.com/test.htm) result UnknownHostException). * [ ] http://ws.geonames.org/searchJSON?q=T (UnknownHostException) with 1 occurrences migrated to:     https://ws.geonames.org/searchJSON?q=T ([https](https://ws.geonames.org/searchJSON?q=T) result UnknownHostException). * [ ] http://ws.geonames.org/searchJSON?q=T%C5%8Dky%C5%8D&style=FULL&maxRows=300 (UnknownHostException) with 1 occurrences migrated to:     https://ws.geonames.org/searchJSON?q=T%C5%8Dky%C5%8D&style=FULL&maxRows=300 ([https](https://ws.geonames.org/searchJSON?q=T%C5%8Dky%C5%8D&style=FULL&maxRows=300) result UnknownHostException). * [ ] http://xstream.codehaus.org/ (UnknownHostException) with 1 occurrences migrated to:     https://xstream.codehaus.org/ ([https](https://xstream.codehaus.org/) result UnknownHostException). * [ ] http://bitworking.org/projects/URI-Templates/ (302) with 1 occurrences migrated to:     https://bitworking.org/projects/URI-Templates/ ([https](https://bitworking.org/projects/URI-Templates/) result 404). * [ ] http://book.git-scm.com/4_interactive_rebasing.html (301) with 1 occurrences migrated to:     https://book.git-scm.com/4_interactive_rebasing.html ([https](https://book.git-scm.com/4_interactive_rebasing.html) result 404). * [ ] http://example.com/-foo (404) with 2 occurrences migrated to:     https://example.com/-foo ([https](https://example.com/-foo) result 404). * [ ] http://example.com/1 (404) with 1 occurrences migrated to:     https://example.com/1 ([https](https://example.com/1) result 404). * [ ] http://example.com/2 (404) with 1 occurrences migrated to:     https://example.com/2 ([https](https://example.com/2) result 404). * [ ] http://example.com/abc/ (404) with 4 occurrences migrated to:     https://example.com/abc/ ([https](https://example.com/abc/) result 404). * [ ] http://example.com/abc/x/y (404) with 1 occurrences migrated to:     https://example.com/abc/x/y ([https](https://example.com/abc/x/y) result 404). * [ ] http://example.com/abc/x/y/z (404) with 3 occurrences migrated to:     https://example.com/abc/x/y/z ([https](https://example.com/abc/x/y/z) result 404). * [ ] http://example.com/bar (404) with 1 occurrences migrated to:     https://example.com/bar ([https](https://example.com/bar) result 404). * [ ] http://example.com/context.xml (404) with 4 occurrences migrated to:     https://example.com/context.xml ([https](https://example.com/context.xml) result 404). * [ ] http://example.com/foo (404) with 2 occurrences migrated to:     https://example.com/foo ([https](https://example.com/foo) result 404). * [ ] http://example.com/foo/../bar (404) with 8 occurrences migrated to:     https://example.com/foo/../bar ([https](https://example.com/foo/../bar) result 404). * [ ] http://example.com/foo/foo2?bar (404) with 1 occurrences migrated to:     https://example.com/foo/foo2?bar ([https](https://example.com/foo/foo2?bar) result 404). * [ ] http://example.com/foo?bar (404) with 4 occurrences migrated to:     https://example.com/foo?bar ([https](https://example.com/foo?bar) result 404). * [ ] http://example.com/foo?bar= (404) with 2 occurrences migrated to:     https://example.com/foo?bar= ([https](https://example.com/foo?bar=) result 404). * [ ] http://example.com/foo?bar=baz (404) with 2 occurrences migrated to:     https://example.com/foo?bar=baz ([https](https://example.com/foo?bar=baz) result 404). * [ ] http://example.com/foo?baz=42 (404) with 1 occurrences migrated to:     https://example.com/foo?baz=42 ([https](https://example.com/foo?baz=42) result 404). * [ ] http://example.com/foo?foo=bar&baz=qux (404) with 2 occurrences migrated to:     https://example.com/foo?foo=bar&baz=qux ([https](https://example.com/foo?foo=bar&baz=qux) result 404). * [ ] http://example.com/hotel (404) with 5 occurrences migrated to:     https://example.com/hotel ([https](https://example.com/hotel) result 404). * [ ] http://example.com/hotel%20list (404) with 2 occurrences migrated to:     https://example.com/hotel%20list ([https](https://example.com/hotel%20list) result 404). * [ ] http://example.com/hotel%20list/Z (404) with 1 occurrences migrated to:     https://example.com/hotel%20list/Z ([https](https://example.com/hotel%20list/Z) result 404). * [ ] http://example.com/hotel%20list/Z%C3%BCrich (404) with 3 occurrences migrated to:     https://example.com/hotel%20list/Z%C3%BCrich ([https](https://example.com/hotel%20list/Z%C3%BCrich) result 404). * [ ] http://example.com/hotel%2520list (404) with 1 occurrences migrated to:     https://example.com/hotel%2520list ([https](https://example.com/hotel%2520list) result 404). * [ ] http://example.com/hotels (404) with 3 occurrences migrated to:     https://example.com/hotels ([https](https://example.com/hotels) result 404). * [ ] http://example.com/hotels/ (404) with 17 occurrences migrated to:     https://example.com/hotels/ ([https](https://example.com/hotels/) result 404). * [ ] http://example.com/hotels/1/bookings/42 (404) with 7 occurrences migrated to:     https://example.com/hotels/1/bookings/42 ([https](https://example.com/hotels/1/bookings/42) result 404). * [ ] http://example.com/hotels/42 (404) with 1 occurrences migrated to:     https://example.com/hotels/42 ([https](https://example.com/hotels/42) result 404). * [ ] http://example.com/hotels/42/bookings/21 (404) with 2 occurrences migrated to:     https://example.com/hotels/42/bookings/21 ([https](https://example.com/hotels/42/bookings/21) result 404). * [ ] http://example.com/hotels/42/bookings/42 (404) with 1 occurrences migrated to:     https://example.com/hotels/42/bookings/42 ([https](https://example.com/hotels/42/bookings/42) result 404). * [ ] http://example.com/hotels/42/rooms/42 (404) with 1 occurrences migrated to:     https://example.com/hotels/42/rooms/42 ([https](https://example.com/hotels/42/rooms/42) result 404). * [ ] http://example.com/hotels/Rest%20%26%20Relax/bookings/42 (404) with 2 occurrences migrated to:     https://example.com/hotels/Rest%20%26%20Relax/bookings/42 ([https](https://example.com/hotels/Rest%20%26%20Relax/bookings/42) result 404). * [ ] http://example.com/hotels/bookings (404) with 1 occurrences migrated to:     https://example.com/hotels/bookings ([https](https://example.com/hotels/bookings) result 404). * [ ] http://example.com/hotels/foo (404) with 1 occurrences migrated to:     https://example.com/hotels/foo ([https](https://example.com/hotels/foo) result 404). * [ ] http://example.com/myFileUpload (404) with 1 occurrences migrated to:     https://example.com/myFileUpload ([https](https://example.com/myFileUpload) result 404). * [ ] http://example.com/myForm (404) with 1 occurrences migrated to:     https://example.com/myForm ([https](https://example.com/myForm) result 404). * [ ] http://example.com/path?query (404) with 2 occurrences migrated to:     https://example.com/path?query ([https](https://example.com/path?query) result 404). * [ ] http://example.com/query=foo@bar (404) with 4 occurrences migrated to:     https://example.com/query=foo@bar ([https](https://example.com/query=foo@bar) result 404). * [ ] http://example.com/resource (404) with 3 occurrences migrated to:     https://example.com/resource ([https](https://example.com/resource) result 404). * [ ] http://example.com/spaces (404) with 1 occurrences migrated to:     https://example.com/spaces ([https](https://example.com/spaces) result 404). * [ ] http://example.com/spaces%20and%20%E2%82%AC (404) with 3 occurrences migrated to:     https://example.com/spaces%20and%20%E2%82%AC ([https](https://example.com/spaces%20and%20%E2%82%AC) result 404). * [ ] http://example.org/music/people (404) with 4 occurrences migrated to:     https://example.org/music/people ([https](https://example.org/music/people) result 404). * [ ] http://help.github.com/send-pull-requests (404) with 2 occurrences migrated to:     https://help.github.com/send-pull-requests ([https](https://help.github.com/send-pull-requests) result 404). * [ ] http://springframework.org/oxm-test (404) with 2 occurrences migrated to:     https://springframework.org/oxm-test ([https](https://springframework.org/oxm-test) result 404). * [ ] http://www.example.com/hotels (404) with 2 occurrences migrated to:     https://www.example.com/hotels ([https](https://www.example.com/hotels) result 404). * [ ] http://www.ibm.com/developerworks/websphere/library/techarticles/0404_tang/0404_tang.html (301) with 1 occurrences migrated to:     https://www.ibm.com/developerworks/websphere/library/techarticles/0404_tang/0404_tang.html ([https](https://www.ibm.com/developerworks/websphere/library/techarticles/0404_tang/0404_tang.html) result 404). * [ ] http://www.quartz-scheduler.org/documentation/quartz-2.1.x/tutorials/tutorial-lesson-03 (404) with 1 occurrences migrated to:     https://www.quartz-scheduler.org/documentation/quartz-2.1.x/tutorials/tutorial-lesson-03 ([https](https://www.quartz-scheduler.org/documentation/quartz-2.1.x/tutorials/tutorial-lesson-03) result 404). * [ ] http://www.redbooks.ibm.com/Redbooks.nsf/RedbookAbstracts/tips0243.html (404) with 1 occurrences migrated to:     https://www.redbooks.ibm.com/Redbooks.nsf/RedbookAbstracts/tips0243.html ([https](https://www.redbooks.ibm.com/Redbooks.nsf/RedbookAbstracts/tips0243.html) result 404). * [ ] http://www.utoronto.ca/webdocs/HTMLdocs/Book/Book-3ed/appb/mimetype.html (301) with 1 occurrences migrated to:     https://www.utoronto.ca/webdocs/HTMLdocs/Book/Book-3ed/appb/mimetype.html ([https](https://www.utoronto.ca/webdocs/HTMLdocs/Book/Book-3ed/appb/mimetype.html) result 404). * [ ] http://xml.apache.org/xslt (404) with 3 occurrences migrated to:     https://xml.apache.org/xslt ([https](https://xml.apache.org/xslt) result 404). * [ ] http://search.twitter.com/search.atom?q= (410) with 1 occurrences migrated to:     https://search.twitter.com/search.atom?q= ([https](https://search.twitter.com/search.atom?q=) result 410). * [ ] http://search.twitter.com/search.atom?q=%23avatar (410) with 1 occurrences migrated to:     https://search.twitter.com/search.atom?q=%23avatar ([https](https://search.twitter.com/search.atom?q=%23avatar) result 410).  ## Fixed Success  These URLs were switched to an https URL with a 2xx status. While the status was successful, your review is still recommended.  * [ ] http://ant.apache.org with 1 occurrences migrated to:     https://ant.apache.org ([https](https://ant.apache.org) result 200). * [ ] http://docs.oracle.com/javaee/6/api/javax/servlet/http/HttpServletRequest.html with 3 occurrences migrated to:     https://docs.oracle.com/javaee/6/api/javax/servlet/http/HttpServletRequest.html ([https](https://docs.oracle.com/javaee/6/api/javax/servlet/http/HttpServletRequest.html) result 200). * [ ] http://docs.oracle.com/javase/7/docs/api/java/util/concurrent/ForkJoinPool.html with 1 occurrences migrated to:     https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/ForkJoinPool.html ([https](https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/ForkJoinPool.html) result 200). * [ ] http://docs.oracle.com/javase/tutorial/javabeans/writing/properties.html with 1 occurrences migrated to:     https://docs.oracle.com/javase/tutorial/javabeans/writing/properties.html ([https](https://docs.oracle.com/javase/tutorial/javabeans/writing/properties.html) result 200). * [ ] http://download.oracle.com/otn_hosted_doc/jdeveloper/905/jdbc-javadoc/oracle/jdbc/OracleConnection.html with 1 occurrences migrated to:     https://download.oracle.com/otn_hosted_doc/jdeveloper/905/jdbc-javadoc/oracle/jdbc/OracleConnection.html ([https](https://download.oracle.com/otn_hosted_doc/jdeveloper/905/jdbc-javadoc/oracle/jdbc/OracleConnection.html) result 200). * [ ] http://download.oracle.com/otn_hosted_doc/jdeveloper/905/jdbc-javadoc/oracle/sql/BLOB.html with 7 occurrences migrated to:     https://download.oracle.com/otn_hosted_doc/jdeveloper/905/jdbc-javadoc/oracle/sql/BLOB.html ([https](https://download.oracle.com/otn_hosted_doc/jdeveloper/905/jdbc-javadoc/oracle/sql/BLOB.html) result 200). * [ ] http://download.oracle.com/otn_hosted_doc/jdeveloper/905/jdbc-javadoc/oracle/sql/CLOB.html with 7 occurrences migrated to:     https://download.oracle.com/otn_hosted_doc/jdeveloper/905/jdbc-javadoc/oracle/sql/CLOB.html ([https](https://download.oracle.com/otn_hosted_doc/jdeveloper/905/jdbc-javadoc/oracle/sql/CLOB.html) result 200). * [ ] http://en.wikipedia.org/wiki/Halting_Problem with 1 occurrences migrated to:     https://en.wikipedia.org/wiki/Halting_Problem ([https](https://en.wikipedia.org/wiki/Halting_Problem) result 200). * [ ] http://en.wikipedia.org/wiki/List_of_HTTP_status_codes with 1 occurrences migrated to:     https://en.wikipedia.org/wiki/List_of_HTTP_status_codes ([https](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes) result 200). * [ ] http://example.com with 64 occurrences migrated to:     https://example.com ([https](https://example.com) result 200). * [ ] http://example.com/ with 3 occurrences migrated to:     https://example.com/ ([https](https://example.com/) result 200). * [ ] http://example.com?foo=bar@baz with 1 occurrences migrated to:     https://example.com?foo=bar@baz ([https](https://example.com?foo=bar@baz) result 200). * [ ] http://example.org?format=json&url=http://another.com?foo=bar with 2 occurrences migrated to:     https://example.org?format=json&url=http://another.com?foo=bar ([https](https://example.org?format=json&url=https://another.com?foo=bar) result 200). * [ ] http://goessner.net/articles/JsonPath/ with 8 occurrences migrated to:     https://goessner.net/articles/JsonPath/ ([https](https://goessner.net/articles/JsonPath/) result 200). * [ ] http://gradle.org with 1 occurrences migrated to:     https://gradle.org ([https](https://gradle.org) result 200). * [ ] http://h2database.com with 1 occurrences migrated to:     https://h2database.com ([https](https://h2database.com) result 200). * [ ] http://hc.apache.org/httpcomponents-client-ga/ with 1 occurrences migrated to:     https://hc.apache.org/httpcomponents-client-ga/ ([https](https://hc.apache.org/httpcomponents-client-ga/) result 200). * [ ] http://hc.apache.org/httpcomponents-client-ga/httpclient/ with 1 occurrences migrated to:     https://hc.apache.org/httpcomponents-client-ga/httpclient/ ([https](https://hc.apache.org/httpcomponents-client-ga/httpclient/) result 200). * [ ] http://www.hibernate.org (301) with 2 occurrences migrated to:     https://hibernate.org/ ([https](https://www.hibernate.org) result 200). * [ ] http://ibatis.apache.org with 1 occurrences migrated to:     https://ibatis.apache.org ([https](https://ibatis.apache.org) result 200). * [ ] http://jira.pentaho.com/browse/PDI-5031 with 1 occurrences migrated to:     https://jira.pentaho.com/browse/PDI-5031 ([https](https://jira.pentaho.com/browse/PDI-5031) result 200). * [ ] http://pivotal.io/security/cve-2015-5211 with 1 occurrences migrated to:     https://pivotal.io/security/cve-2015-5211 ([https](https://pivotal.io/security/cve-2015-5211) result 200). * [ ] http://poi.apache.org with 1 occurrences migrated to:     https://poi.apache.org ([https](https://poi.apache.org) result 200). * [ ] http://sourceforge.net with 1 occurrences migrated to:     https://sourceforge.net ([https](https://sourceforge.net) result 200). * [ ] http://sourceforge.net/projects/javadiff/ with 1 occurrences migrated to:     https://sourceforge.net/projects/javadiff/ ([https](https://sourceforge.net/projects/javadiff/) result 200). * [ ] http://sourceforge.net/sflogo.php?group_id=37160 with 1 occurrences migrated to:     https://sourceforge.net/sflogo.php?group_id=37160 ([https](https://sourceforge.net/sflogo.php?group_id=37160) result 200). * [ ] http://stackoverflow.com/faq with 1 occurrences migrated to:     https://stackoverflow.com/faq ([https](https://stackoverflow.com/faq) result 200). * [ ] http://stackoverflow.com/questions/tagged/spring with 1 occurrences migrated to:     https://stackoverflow.com/questions/tagged/spring ([https](https://stackoverflow.com/questions/tagged/spring) result 200). * [ ] http://stackoverflow.com/questions/tagged/spring-mvc with 1 occurrences migrated to:     https://stackoverflow.com/questions/tagged/spring-mvc ([https](https://stackoverflow.com/questions/tagged/spring-mvc) result 200). * [ ] http://stas-blogspot.blogspot.com/2010/03/java-bridge-methods-explained.html with 1 occurrences migrated to:     https://stas-blogspot.blogspot.com/2010/03/java-bridge-methods-explained.html ([https](https://stas-blogspot.blogspot.com/2010/03/java-bridge-methods-explained.html) result 200). * [ ] http://struts.apache.org with 2 occurrences migrated to:     https://struts.apache.org ([https](https://struts.apache.org) result 200). * [ ] http://tiles.apache.org with 6 occurrences migrated to:     https://tiles.apache.org ([https](https://tiles.apache.org) result 200). * [ ] http://tomcat.apache.org/tomcat-5.5-doc/config/context.html with 1 occurrences migrated to:     https://tomcat.apache.org/tomcat-5.5-doc/config/context.html ([https](https://tomcat.apache.org/tomcat-5.5-doc/config/context.html) result 200). * [ ] http://tomcat.apache.org/tomcat-5.5-doc/config/loader.html with 1 occurrences migrated to:     https://tomcat.apache.org/tomcat-5.5-doc/config/loader.html ([https](https://tomcat.apache.org/tomcat-5.5-doc/config/loader.html) result 200). * [ ] http://tools.ietf.org/html/rfc1945 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc1945 ([https](https://tools.ietf.org/html/rfc1945) result 200). * [ ] http://tools.ietf.org/html/rfc2295 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc2295 ([https](https://tools.ietf.org/html/rfc2295) result 200). * [ ] http://tools.ietf.org/html/rfc2324 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc2324 ([https](https://tools.ietf.org/html/rfc2324) result 200). * [ ] http://tools.ietf.org/html/rfc2518 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc2518 ([https](https://tools.ietf.org/html/rfc2518) result 200). * [ ] http://tools.ietf.org/html/rfc2616 with 43 occurrences migrated to:     https://tools.ietf.org/html/rfc2616 ([https](https://tools.ietf.org/html/rfc2616) result 200). * [ ] http://tools.ietf.org/html/rfc2774 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc2774 ([https](https://tools.ietf.org/html/rfc2774) result 200). * [ ] http://tools.ietf.org/html/rfc2817 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc2817 ([https](https://tools.ietf.org/html/rfc2817) result 200). * [ ] http://tools.ietf.org/html/rfc3229 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc3229 ([https](https://tools.ietf.org/html/rfc3229) result 200). * [ ] http://tools.ietf.org/html/rfc3986 with 2 occurrences migrated to:     https://tools.ietf.org/html/rfc3986 ([https](https://tools.ietf.org/html/rfc3986) result 200). * [ ] http://tools.ietf.org/html/rfc4918 with 5 occurrences migrated to:     https://tools.ietf.org/html/rfc4918 ([https](https://tools.ietf.org/html/rfc4918) result 200). * [ ] http://tools.ietf.org/html/rfc5842 with 2 occurrences migrated to:     https://tools.ietf.org/html/rfc5842 ([https](https://tools.ietf.org/html/rfc5842) result 200). * [ ] http://tools.ietf.org/html/rfc6585 with 4 occurrences migrated to:     https://tools.ietf.org/html/rfc6585 ([https](https://tools.ietf.org/html/rfc6585) result 200). * [ ] http://tools.ietf.org/rfcdiff?difftype=--hwdiff&url2=draft-ietf-webdav-protocol-06.txt with 3 occurrences migrated to:     https://tools.ietf.org/rfcdiff?difftype=--hwdiff&url2=draft-ietf-webdav-protocol-06.txt ([https](https://tools.ietf.org/rfcdiff?difftype=--hwdiff&url2=draft-ietf-webdav-protocol-06.txt) result 200). * [ ] http://twitter.com/springframework with 1 occurrences migrated to:     https://twitter.com/springframework ([https](https://twitter.com/springframework) result 200). * [ ] http://velocity.apache.org with 2 occurrences migrated to:     https://velocity.apache.org ([https](https://velocity.apache.org) result 200). * [ ] http://vimeo.com/34436402 with 1 occurrences migrated to:     https://vimeo.com/34436402 ([https](https://vimeo.com/34436402) result 200). * [ ] http://www.amazon.com/exec/obidos/tg/detail/-/0764543857/ with 10 occurrences migrated to:     https://www.amazon.com/exec/obidos/tg/detail/-/0764543857/ ([https](https://www.amazon.com/exec/obidos/tg/detail/-/0764543857/) result 200). * [ ] http://www.apache.org with 1 occurrences migrated to:     https://www.apache.org ([https](https://www.apache.org) result 200). * [ ] http://www.apple.com/DTDs/PropertyList-1.0.dtd with 6 occurrences migrated to:     https://www.apple.com/DTDs/PropertyList-1.0.dtd ([https](https://www.apple.com/DTDs/PropertyList-1.0.dtd) result 200). * [ ] http://ehcache.sourceforge.net (301) with 1 occurrences migrated to:     https://www.ehcache.org/ ([https](https://ehcache.sourceforge.net) result 200). * [ ] http://www.example.org/?param=aGVsbG9Xb3JsZA%3D%3D with 1 occurrences migrated to:     https://www.example.org/?param=aGVsbG9Xb3JsZA%3D%3D ([https](https://www.example.org/?param=aGVsbG9Xb3JsZA%3D%3D) result 200). * [ ] http://www.google.com/?q=Z with 2 occurrences migrated to:     https://www.google.com/?q=Z ([https](https://www.google.com/?q=Z) result 200). * [ ] http://www.google.com/?q=Z%C3%BCrich with 2 occurrences migrated to:     https://www.google.com/?q=Z%C3%BCrich ([https](https://www.google.com/?q=Z%C3%BCrich) result 200). * [ ] http://www.ietf.org with 1 occurrences migrated to:     https://www.ietf.org ([https](https://www.ietf.org) result 200). * [ ] http://www.ietf.org/rfc/rfc1867.txt with 2 occurrences migrated to:     https://www.ietf.org/rfc/rfc1867.txt ([https](https://www.ietf.org/rfc/rfc1867.txt) result 200). * [ ] http://www.ietf.org/rfc/rfc2396.txt with 2 occurrences migrated to:     https://www.ietf.org/rfc/rfc2396.txt ([https](https://www.ietf.org/rfc/rfc2396.txt) result 200). * [ ] http://www.ietf.org/rfc/rfc3986.txt with 15 occurrences migrated to:     https://www.ietf.org/rfc/rfc3986.txt ([https](https://www.ietf.org/rfc/rfc3986.txt) result 200). * [ ] http://jruby.sourceforge.net (302) with 1 occurrences migrated to:     https://www.jruby.org/ ([https](https://jruby.sourceforge.net) result 200). * [ ] http://www.lowagie.com/iText with 1 occurrences migrated to:     https://www.lowagie.com/iText ([https](https://www.lowagie.com/iText) result 200). * [ ] http://www.manpagez.com/man/5/crontab/ with 1 occurrences migrated to:     https://www.manpagez.com/man/5/crontab/ ([https](https://www.manpagez.com/man/5/crontab/) result 200). * [ ] http://www.oracle.com/technetwork/java/javase/tech/download-jsp-141676.html with 1 occurrences migrated to:     https://www.oracle.com/technetwork/java/javase/tech/download-jsp-141676.html ([https](https://www.oracle.com/technetwork/java/javase/tech/download-jsp-141676.html) result 200). * [ ] http://www.ow2.org/ with 1 occurrences migrated to:     https://www.ow2.org/ ([https](https://www.ow2.org/) result 200). * [ ] http://quartz-scheduler.org (301) with 1 occurrences migrated to:     https://www.quartz-scheduler.org/ ([https](https://quartz-scheduler.org) result 200). * [ ] http://www.springbyexample.org/examples/custom-thread-scope-module.html with 1 occurrences migrated to:     https://www.springbyexample.org/examples/custom-thread-scope-module.html ([https](https://www.springbyexample.org/examples/custom-thread-scope-module.html) result 200). * [ ] http://www.springframework.org/dtd/spring-beans-2.0.dtd with 8 occurrences migrated to:     https://www.springframework.org/dtd/spring-beans-2.0.dtd ([https](https://www.springframework.org/dtd/spring-beans-2.0.dtd) result 200). * [ ] http://www.springframework.org/dtd/spring-beans.dtd with 1 occurrences migrated to:     https://www.springframework.org/dtd/spring-beans.dtd ([https](https://www.springframework.org/dtd/spring-beans.dtd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-2.0.xsd with 5 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-2.0.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-2.0.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-2.5.xsd with 6 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-2.5.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-3.0.xsd with 10 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-3.0.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-3.1.xsd with 11 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-3.1.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-3.2.xsd with 11 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-3.2.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-3.2.xsd) result 200). * [ ] http://www.springframework.org/schema/tool/spring-tool-2.0.xsd with 5 occurrences migrated to:     https://www.springframework.org/schema/tool/spring-tool-2.0.xsd ([https](https://www.springframework.org/schema/tool/spring-tool-2.0.xsd) result 200). * [ ] http://www.springframework.org/schema/tool/spring-tool-2.5.xsd with 7 occurrences migrated to:     https://www.springframework.org/schema/tool/spring-tool-2.5.xsd ([https](https://www.springframework.org/schema/tool/spring-tool-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/tool/spring-tool-3.0.xsd with 11 occurrences migrated to:     https://www.springframework.org/schema/tool/spring-tool-3.0.xsd ([https](https://www.springframework.org/schema/tool/spring-tool-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/tool/spring-tool-3.1.xsd with 12 occurrences migrated to:     https://www.springframework.org/schema/tool/spring-tool-3.1.xsd ([https](https://www.springframework.org/schema/tool/spring-tool-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/tool/spring-tool-3.2.xsd with 12 occurrences migrated to:     https://www.springframework.org/schema/tool/spring-tool-3.2.xsd ([https](https://www.springframework.org/schema/tool/spring-tool-3.2.xsd) result 200). * [ ] http://www.w3.org/2000/xmlns/ with 2 occurrences migrated to:     https://www.w3.org/2000/xmlns/ ([https](https://www.w3.org/2000/xmlns/) result 200). * [ ] http://www.w3.org/2004/08/xop/include with 2 occurrences migrated to:     https://www.w3.org/2004/08/xop/include ([https](https://www.w3.org/2004/08/xop/include) result 200). * [ ] http://www.w3.org/TR/2004/WD-soap12-mtom-20040608/ with 2 occurrences migrated to:     https://www.w3.org/TR/2004/WD-soap12-mtom-20040608/ ([https](https://www.w3.org/TR/2004/WD-soap12-mtom-20040608/) result 200). * [ ] http://www.w3.org/TR/2005/REC-xop10-20050125/ with 6 occurrences migrated to:     https://www.w3.org/TR/2005/REC-xop10-20050125/ ([https](https://www.w3.org/TR/2005/REC-xop10-20050125/) result 200). * [ ] http://www.w3.org/TR/xhtml1/diffs.html with 1 occurrences migrated to:     https://www.w3.org/TR/xhtml1/diffs.html ([https](https://www.w3.org/TR/xhtml1/diffs.html) result 200). * [ ] http://xmlbeans.apache.org/ with 1 occurrences migrated to:     https://xmlbeans.apache.org/ ([https](https://xmlbeans.apache.org/) result 200). * [ ] http://youtrack.jetbrains.com/issue/IDEA-53476 with 1 occurrences migrated to:     https://youtrack.jetbrains.com/issue/IDEA-53476 ([https](https://youtrack.jetbrains.com/issue/IDEA-53476) result 200). * [ ] http://youtrack.jetbrains.com/issue/IDEA-64446 with 1 occurrences migrated to:     https://youtrack.jetbrains.com/issue/IDEA-64446 ([https](https://youtrack.jetbrains.com/issue/IDEA-64446) result 200). * [ ] http://asm.ow2.org with 1 occurrences migrated to:     https://asm.ow2.org ([https](https://asm.ow2.org) result 301). * [ ] http://asm.ow2.org/asm50/javadoc/user with 1 occurrences migrated to:     https://asm.ow2.org/asm50/javadoc/user ([https](https://asm.ow2.org/asm50/javadoc/user) result 301). * [ ] http://bit.ly/TRlX2r with 1 occurrences migrated to:     https://bit.ly/TRlX2r ([https](https://bit.ly/TRlX2r) result 301). * [ ] http://bit.ly/UzccDt with 1 occurrences migrated to:     https://bit.ly/UzccDt ([https](https://bit.ly/UzccDt) result 301). * [ ] http://bit.ly/p9rIvx with 1 occurrences migrated to:     https://bit.ly/p9rIvx ([https](https://bit.ly/p9rIvx) result 301). * [ ] http://bit.ly/qUwvwz with 1 occurrences migrated to:     https://bit.ly/qUwvwz ([https](https://bit.ly/qUwvwz) result 301). * [ ] http://blog.springsource.org with 1 occurrences migrated to:     https://blog.springsource.org ([https](https://blog.springsource.org) result 301). * [ ] http://build.springframework.org/browse/SPR-TRUNKQUICK-908 with 1 occurrences migrated to:     https://build.springframework.org/browse/SPR-TRUNKQUICK-908 ([https](https://build.springframework.org/browse/SPR-TRUNKQUICK-908) result 301). * [ ] http://code.google.com/p/gears/wiki/ResumableHttpRequestsProposal with 2 occurrences migrated to:     https://code.google.com/p/gears/wiki/ResumableHttpRequestsProposal ([https](https://code.google.com/p/gears/wiki/ResumableHttpRequestsProposal) result 301). * [ ] http://code.google.com/p/mybatis/ with 9 occurrences migrated to:     https://code.google.com/p/mybatis/ ([https](https://code.google.com/p/mybatis/) result 301). * [ ] http://code.google.com/p/xml-matchers/ with 4 occurrences migrated to:     https://code.google.com/p/xml-matchers/ ([https](https://code.google.com/p/xml-matchers/) result 301). * [ ] http://commons.apache.org/proper/commons-fileupload with 2 occurrences migrated to:     https://commons.apache.org/proper/commons-fileupload ([https](https://commons.apache.org/proper/commons-fileupload) result 301). * [ ] http://confluence.jetbrains.net/display/IDEADEV/Gradle+integration with 1 occurrences migrated to:     https://confluence.jetbrains.net/display/IDEADEV/Gradle+integration ([https](https://confluence.jetbrains.net/display/IDEADEV/Gradle+integration) result 301). * [ ] http://db.apache.org/derby with 1 occurrences migrated to:     https://db.apache.org/derby ([https](https://db.apache.org/derby) result 301). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api) result 301). * [ ] http://static.springsource.org/spring-framework/docs/current/spring-framework-reference (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/spring-framework-reference ([https](https://static.springsource.org/spring-framework/docs/current/spring-framework-reference) result 301). * [ ] http://forum.springsource.org (301) with 1 occurrences migrated to:     https://forum.spring.io/ ([https](https://forum.springsource.org) result 301). * [ ] http://forum.springframework.org/showthread.php?t=41350 with 1 occurrences migrated to:     https://forum.springframework.org/showthread.php?t=41350 ([https](https://forum.springframework.org/showthread.php?t=41350) result 301). * [ ] http://github.com/SpringSource/spring-framework with 1 occurrences migrated to:     https://github.com/SpringSource/spring-framework ([https](https://github.com/SpringSource/spring-framework) result 301). * [ ] http://help.github.com/set-up-git-redirect with 1 occurrences migrated to:     https://help.github.com/set-up-git-redirect ([https](https://help.github.com/set-up-git-redirect) result 301). * [ ] http://jakarta.apache.org/commons/dbcp with 2 occurrences migrated to:     https://jakarta.apache.org/commons/dbcp ([https](https://jakarta.apache.org/commons/dbcp) result 301). * [ ] http://jakarta.apache.org/commons/fileupload with 1 occurrences migrated to:     https://jakarta.apache.org/commons/fileupload ([https](https://jakarta.apache.org/commons/fileupload) result 301). * [ ] http://jakarta.apache.org/commons/httpclient with 2 occurrences migrated to:     https://jakarta.apache.org/commons/httpclient ([https](https://jakarta.apache.org/commons/httpclient) result 301). * [ ] http://jakarta.apache.org/commons/lang/ with 1 occurrences migrated to:     https://jakarta.apache.org/commons/lang/ ([https](https://jakarta.apache.org/commons/lang/) result 301). * [ ] http://jakarta.apache.org/commons/logging.html with 1 occurrences migrated to:     https://jakarta.apache.org/commons/logging.html ([https](https://jakarta.apache.org/commons/logging.html) result 301). * [ ] http://jira.springframework.org/browse/SPR-5708 with 1 occurrences migrated to:     https://jira.springframework.org/browse/SPR-5708 ([https](https://jira.springframework.org/browse/SPR-5708) result 301). * [ ] http://jira.springframework.org/browse/SPR-6011 with 1 occurrences migrated to:     https://jira.springframework.org/browse/SPR-6011 ([https](https://jira.springframework.org/browse/SPR-6011) result 301). * [ ] http://jira.springframework.org/browse/SPR-6124 with 1 occurrences migrated to:     https://jira.springframework.org/browse/SPR-6124 ([https](https://jira.springframework.org/browse/SPR-6124) result 301). * [ ] http://jira.springframework.org/browse/SPR-6128 with 1 occurrences migrated to:     https://jira.springframework.org/browse/SPR-6128 ([https](https://jira.springframework.org/browse/SPR-6128) result 301). * [ ] http://jira.springframework.org/browse/SPR-7064 with 1 occurrences migrated to:     https://jira.springframework.org/browse/SPR-7064 ([https](https://jira.springframework.org/browse/SPR-7064) result 301). * [ ] http://jira.springsource.org/browse/SPR with 1 occurrences migrated to:     https://jira.springsource.org/browse/SPR ([https](https://jira.springsource.org/browse/SPR) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-2645 with 1 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-2645 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-2645) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-2660 with 1 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-2660 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-2660) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-2728 with 3 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-2728 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-2728) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-2754 with 1 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-2754 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-2754) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-2788 with 5 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-2788 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-2788) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-2789 with 1 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-2789 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-2789) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-2866 with 3 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-2866 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-2866) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-3026 with 1 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-3026 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-3026) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-3038 with 1 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-3038 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-3038) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-3127 with 2 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-3127 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-3127) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-3264 with 2 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-3264 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-3264) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-3550 with 1 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-3550 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-3550) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-3775 with 1 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-3775 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-3775) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-3880 with 1 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-3880 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-3880) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-3896 with 8 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-3896 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-3896) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-3949 with 1 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-3949 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-3949) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-3960 with 3 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-3960 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-3960) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-4005 with 1 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-4005 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-4005) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-4008 with 2 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-4008 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-4008) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-4040 with 3 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-4040 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-4040) result 301). * [ ] http://publib.boulder.ibm.com/infocenter/wasinfo/v5r1//topic/com.ibm.websphere.base.doc/info/aes/ae/rdat_extiapi.html with 1 occurrences migrated to:     https://publib.boulder.ibm.com/infocenter/wasinfo/v5r1//topic/com.ibm.websphere.base.doc/info/aes/ae/rdat_extiapi.html ([https](https://publib.boulder.ibm.com/infocenter/wasinfo/v5r1//topic/com.ibm.websphere.base.doc/info/aes/ae/rdat_extiapi.html) result 301). * [ ] http://publib.boulder.ibm.com/infocenter/wasinfo/v6r0/topic/com.ibm.websphere.javadoc.doc/public_html/api/com/ibm/websphere/rsadapter/JDBCConnectionSpec.html with 1 occurrences migrated to:     https://publib.boulder.ibm.com/infocenter/wasinfo/v6r0/topic/com.ibm.websphere.javadoc.doc/public_html/api/com/ibm/websphere/rsadapter/JDBCConnectionSpec.html ([https](https://publib.boulder.ibm.com/infocenter/wasinfo/v6r0/topic/com.ibm.websphere.javadoc.doc/public_html/api/com/ibm/websphere/rsadapter/JDBCConnectionSpec.html) result 301). * [ ] http://sourceforge.net/projects/c3p0 with 2 occurrences migrated to:     https://sourceforge.net/projects/c3p0 ([https](https://sourceforge.net/projects/c3p0) result 301). * [ ] http://sourceforge.net/projects/javadiff with 1 occurrences migrated to:     https://sourceforge.net/projects/javadiff ([https](https://sourceforge.net/projects/javadiff) result 301). * [ ] http://springframework.org with 2 occurrences migrated to:     https://springframework.org ([https](https://springframework.org) result 301). * [ ] http://springsource.org/projects with 1 occurrences migrated to:     https://springsource.org/projects ([https](https://springsource.org/projects) result 301). * [ ] http://www.atomenabled.org/developers/syndication/ with 1 occurrences migrated to:     https://www.atomenabled.org/developers/syndication/ ([https](https://www.atomenabled.org/developers/syndication/) result 301). * [ ] http://www.google.com/ig/calculator?q=1USD=?EUR with 1 occurrences migrated to:     https://www.google.com/ig/calculator?q=1USD=?EUR ([https](https://www.google.com/ig/calculator?q=1USD=?EUR) result 301). * [ ] http://www.lifl.fr/~dumoulin/tiles with 1 occurrences migrated to:     https://www.lifl.fr/~dumoulin/tiles ([https](https://www.lifl.fr/~dumoulin/tiles) result 301). * [ ] http://www.mnot.net/cache_docs with 2 occurrences migrated to:     https://www.mnot.net/cache_docs ([https](https://www.mnot.net/cache_docs) result 301). * [ ] http://www.spring.io with 1 occurrences migrated to:     https://www.spring.io ([https](https://www.spring.io) result 301). * [ ] http://www.springframework.org with 7 occurrences migrated to:     https://www.springframework.org ([https](https://www.springframework.org) result 301). * [ ] http://www.springframework.org/ with 3 occurrences migrated to:     https://www.springframework.org/ ([https](https://www.springframework.org/) result 301). * [ ] http://www.springframework.org/webflow with 1 occurrences migrated to:     https://www.springframework.org/webflow ([https](https://www.springframework.org/webflow) result 301). * [ ] http://www.springsource.org/news-events with 1 occurrences migrated to:     https://www.springsource.org/news-events ([https](https://www.springsource.org/news-events) result 301). * [ ] http://www.springsource.org/spring-framework with 1 occurrences migrated to:     https://www.springsource.org/spring-framework ([https](https://www.springsource.org/spring-framework) result 301). * [ ] http://commons.apache.org/codec/ with 1 occurrences migrated to:     https://commons.apache.org/codec/ ([https](https://commons.apache.org/codec/) result 302). * [ ] http://download.oracle.com/javase/1.5.0/docs/api/java/lang/System.html with 4 occurrences migrated to:     https://download.oracle.com/javase/1.5.0/docs/api/java/lang/System.html ([https](https://download.oracle.com/javase/1.5.0/docs/api/java/lang/System.html) result 302). * [ ] http://download.oracle.com/javase/6/docs/technotes/guides/jar/jar.html with 1 occurrences migrated to:     https://download.oracle.com/javase/6/docs/technotes/guides/jar/jar.html ([https](https://download.oracle.com/javase/6/docs/technotes/guides/jar/jar.html) result 302). * [ ] http://download.oracle.com/javase/jndi/tutorial/beyond/misc/policy.html with 1 occurrences migrated to:     https://download.oracle.com/javase/jndi/tutorial/beyond/misc/policy.html ([https](https://download.oracle.com/javase/jndi/tutorial/beyond/misc/policy.html) result 302). * [ ] http://gafter.blogspot.nl/2006/12/super-type-tokens.html with 1 occurrences migrated to:     https://gafter.blogspot.nl/2006/12/super-type-tokens.html ([https](https://gafter.blogspot.nl/2006/12/super-type-tokens.html) result 302). * [ ] http://java.sun.com with 3 occurrences migrated to:     https://java.sun.com ([https](https://java.sun.com) result 302). * [ ] http://java.sun.com/docs/books/jls/third_edition/html/conversions.html with 1 occurrences migrated to:     https://java.sun.com/docs/books/jls/third_edition/html/conversions.html ([https](https://java.sun.com/docs/books/jls/third_edition/html/conversions.html) result 302). * [ ] http://java.sun.com/docs/books/jls/third_edition/html/expressions.html with 1 occurrences migrated to:     https://java.sun.com/docs/books/jls/third_edition/html/expressions.html ([https](https://java.sun.com/docs/books/jls/third_edition/html/expressions.html) result 302). * [ ] http://java.sun.com/j2se/ with 2 occurrences migrated to:     https://java.sun.com/j2se/ ([https](https://java.sun.com/j2se/) result 302). * [ ] http://java.sun.com/j2se/1.3/ with 4 occurrences migrated to:     https://java.sun.com/j2se/1.3/ ([https](https://java.sun.com/j2se/1.3/) result 302). * [ ] http://java.sun.com/j2se/1.4.1/docs/tooldocs/solaris/javadoc.html with 1 occurrences migrated to:     https://java.sun.com/j2se/1.4.1/docs/tooldocs/solaris/javadoc.html ([https](https://java.sun.com/j2se/1.4.1/docs/tooldocs/solaris/javadoc.html) result 302). * [ ] http://java.sun.com/j2se/1.4.2/docs/api/java/text/SimpleDateFormat.html with 1 occurrences migrated to:     https://java.sun.com/j2se/1.4.2/docs/api/java/text/SimpleDateFormat.html ([https](https://java.sun.com/j2se/1.4.2/docs/api/java/text/SimpleDateFormat.html) result 302). * [ ] http://java.sun.com/j2se/javadoc with 1 occurrences migrated to:     https://java.sun.com/j2se/javadoc ([https](https://java.sun.com/j2se/javadoc) result 302). * [ ] http://java.sun.com/j2se/javadoc/ with 1 occurrences migrated to:     https://java.sun.com/j2se/javadoc/ ([https](https://java.sun.com/j2se/javadoc/) result 302). * [ ] http://java.sun.com/j2se/javadoc/faq.html with 1 occurrences migrated to:     https://java.sun.com/j2se/javadoc/faq.html ([https](https://java.sun.com/j2se/javadoc/faq.html) result 302). * [ ] http://java.sun.com/webservices/jaxb/ with 1 occurrences migrated to:     https://java.sun.com/webservices/jaxb/ ([https](https://java.sun.com/webservices/jaxb/) result 302). * [ ] http://java.sun.com/xml/ns/j2ee/connector_1_5.xsd with 1 occurrences migrated to:     https://java.sun.com/xml/ns/j2ee/connector_1_5.xsd ([https](https://java.sun.com/xml/ns/j2ee/connector_1_5.xsd) result 302). * [ ] http://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd with 2 occurrences migrated to:     https://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd ([https](https://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd) result 302). * [ ] http://sourceforge.net/projects/cglib/files/cglib3/3.0/cglib-3.0.jar/download with 1 occurrences migrated to:     https://sourceforge.net/projects/cglib/files/cglib3/3.0/cglib-3.0.jar/download ([https](https://sourceforge.net/projects/cglib/files/cglib3/3.0/cglib-3.0.jar/download) result 302). * [ ] http://springsource.com/support/springsupport with 1 occurrences migrated to:     https://springsource.com/support/springsupport ([https](https://springsource.com/support/springsupport) result 302). * [ ] http://twitter.com/springframework/team/members with 1 occurrences migrated to:     https://twitter.com/springframework/team/members ([https](https://twitter.com/springframework/team/members) result 302). * [ ] http://www.iana.org/assignments/http-status-codes with 1 occurrences migrated to:     https://www.iana.org/assignments/http-status-codes ([https](https://www.iana.org/assignments/http-status-codes) result 302). * [ ] http://www.springsource.org/download with 1 occurrences migrated to:     https://www.springsource.org/download ([https](https://www.springsource.org/download) result 302). * [ ] http://www.sys-con.com/java with 1 occurrences migrated to:     https://www.sys-con.com/java ([https](https://www.sys-con.com/java) result 302).  # Ignored These URLs were intentionally ignored.  * http://anotherHost/mvc-showcase/data/param?foo=123 with 1 occurrences * http://apache.org/xml/features/disallow-doctype-decl with 14 occurrences * http://java.sun.com/xml/jaxp/properties/schemaLanguage with 1 occurrences * http://java.sun.com/xml/ns/j2ee with 6 occurrences * http://java.sun.com/xml/stream/properties/report-cdata-event with 1 occurrences * http://jaxws.remoting.springframework.org/ with 4 occurrences * http://localhost with 3 occurrences * http://localhost/contextPath/main/path with 1 occurrences * http://localhost/mvc-showcase with 1 occurrences * http://localhost/mvc-showcase/app with 1 occurrences * http://localhost/mvc-showcase/data/foo%20bar with 1 occurrences * http://localhost/mvc-showcase/data/param with 1 occurrences * http://localhost/mvc-showcase/data/param?foo=123 with 2 occurrences * http://localhost/myapp/main with 1 occurrences * http://localhost/query= with 1 occurrences * http://localhost/query=foo@bar with 1 occurrences * http://localhost:7070/example/adminhandle.vm with 1 occurrences * http://localhost:7070/example/bingo.html with 1 occurrences * http://localhost:8080 with 28 occurrences * http://localhost:8080/ with 3 occurrences * http://localhost:8080/OrderService with 3 occurrences * http://localhost:8080/gamecast/admin/index.html with 1 occurrences * http://localhost:8080/gamecast/display.html with 1 occurrences * http://localhost:8080/gamecast/displayShoppingCart.html with 1 occurrences * http://localhost:8080/test/ with 1 occurrences * http://localhost:8080/test/Jason/logo.jpg with 1 occurrences * http://localhost:8889/hessian with 1 occurrences * http://localhost:9090 with 18 occurrences * http://localhost:9999/ with 1 occurrences * http://localhost:9999/OrderService?wsdl with 4 occurrences * http://localhosta/testbean with 6 occurrences * http://myUrl1 with 6 occurrences * http://myserver with 1 occurrences * http://myurl with 12 occurrences * http://samples.springframework.org/flight with 42 occurrences * http://springframework.org/spring-ws with 17 occurrences * http://tiles.apache.org/tags-tiles with 1 occurrences * http://www.foo.com/schema/component with 2 occurrences * http://www.springframework.org/schema/aop with 10 occurrences * http://www.springframework.org/schema/beans with 100 occurrences * http://www.springframework.org/schema/beans/test with 2 occurrences * http://www.springframework.org/schema/cache with 4 occurrences * http://www.springframework.org/schema/context with 8 occurrences * http://www.springframework.org/schema/jdbc with 6 occurrences * http://www.springframework.org/schema/jee with 10 occurrences * http://www.springframework.org/schema/jms with 8 occurrences * http://www.springframework.org/schema/lang with 11 occurrences * http://www.springframework.org/schema/mvc with 6 occurrences * http://www.springframework.org/schema/oxm with 8 occurrences * http://www.springframework.org/schema/task with 6 occurrences * http://www.springframework.org/schema/tool with 106 occurrences * http://www.springframework.org/schema/tx with 10 occurrences * http://www.springframework.org/schema/util with 12 occurrences * http://www.springframework.org/tags with 1 occurrences * http://www.springframework.org/tags/form with 1 occurrences * http://www.w3.org/1999/XSL/Transform with 7 occurrences * http://www.w3.org/2001/XMLSchema with 64 occurrences * http://www.w3.org/2001/XMLSchema-instance with 12 occurrences * http://www.w3.org/2005/Atom with 2 occurrences * http://www.w3.org/TR/html4/charset.html with 5 occurrences * http://www.w3.org/TR/html4/sgml/entities.html with 8 occurrences * http://www.w3.org/XML/1998/namespace with 10 occurrences * http://xml.org/sax/features/external-general-entities with 14 occurrences * http://xml.org/sax/features/is-standalone with 1 occurrences * http://xml.org/sax/features/namespace-prefixes with 11 occurrences * http://xml.org/sax/features/namespaces with 8 occurrences * http://xml.org/sax/features/namespaces-prefixes with 1 occurrences * http://xml.org/sax/properties/lexical-handler with 9 occurrences","closed","type: task,","spring-operator","2019-03-26T09:19:35Z","2019-03-29T15:04:27Z"
"","22670","URL Cleanup","This commit updates URLs to prefer the https protocol. Redirects are not followed to avoid accidentally expanding intentionally shortened URLs (i.e. if using a URL shortener).  # HTTP URLs that Could Not Be Fixed These URLs were unable to be fixed. Please review them to see if they can be manually resolved.  * [ ] http://dbunit.sourceforge.net/ (200) with 1 occurrences could not be migrated:      ([https](https://dbunit.sourceforge.net/) result AnnotatedConnectException). * [ ] http://grinder.sourceforge.net/ (200) with 1 occurrences could not be migrated:      ([https](https://grinder.sourceforge.net/) result AnnotatedConnectException). * [ ] http://jasperreports.sourceforge.net (200) with 1 occurrences could not be migrated:      ([https](https://jasperreports.sourceforge.net) result AnnotatedConnectException). * [ ] http://jibx.sourceforge.net/ (200) with 1 occurrences could not be migrated:      ([https](https://jibx.sourceforge.net/) result AnnotatedConnectException). * [ ] http://joda-time.sourceforge.net (200) with 1 occurrences could not be migrated:      ([https](https://joda-time.sourceforge.net) result AnnotatedConnectException). * [ ] http://jotm.objectweb.org/ (200) with 1 occurrences could not be migrated:      ([https](https://jotm.objectweb.org/) result NotSslRecordException). * [ ] http://mx4j.sourceforge.net (200) with 1 occurrences could not be migrated:      ([https](https://mx4j.sourceforge.net) result AnnotatedConnectException). * [ ] http://mx4j.sourceforge.net/ (200) with 1 occurrences could not be migrated:      ([https](https://mx4j.sourceforge.net/) result AnnotatedConnectException). * [ ] http://schemas.xmlsoap.org/soap/encoding/ (200) with 1 occurrences could not be migrated:      ([https](https://schemas.xmlsoap.org/soap/encoding/) result AnnotatedConnectException). * [ ] http://www.beanshell.org/ (200) with 1 occurrences could not be migrated:      ([https](https://www.beanshell.org/) result SSLHandshakeException). * [ ] http://www.caucho.com/resin-3.0/xml/jaxp.xtp (200) with 2 occurrences could not be migrated:      ([https](https://www.caucho.com/resin-3.0/xml/jaxp.xtp) result SSLHandshakeException). * [ ] http://www.datanucleus.org/ (200) with 2 occurrences could not be migrated:      ([https](https://www.datanucleus.org/) result AnnotatedConnectException). * [ ] http://www.hsqldb.org (200) with 1 occurrences could not be migrated:      ([https](https://www.hsqldb.org) result SSLHandshakeException). * [ ] http://www.mockobjects.com (200) with 1 occurrences could not be migrated:      ([https](https://www.mockobjects.com) result ClosedChannelException). * [ ] http://www.mockobjects.com/ (200) with 1 occurrences could not be migrated:      ([https](https://www.mockobjects.com/) result ClosedChannelException). * [ ] http://www.easymock.org (301) with 1 occurrences could not be migrated:      ([https](https://www.easymock.org) result SSLHandshakeException). * [ ] http://www.easymock.org/ (301) with 1 occurrences could not be migrated:      ([https](https://www.easymock.org/) result SSLHandshakeException). * [ ] http://www.jmock.org/ (301) with 1 occurrences could not be migrated:      ([https](https://www.jmock.org/) result SSLHandshakeException). * [ ] http://www.objectmentor.com/resources/articles/ocp.pdf (302) with 1 occurrences could not be migrated:      ([https](https://www.objectmentor.com/resources/articles/ocp.pdf) result ConnectTimeoutException). * [ ] http://blog.arendsen.net/index.php/2006/10/05/on-the-servicelocatorfactorybean-dlas-and-the-sustainability-of-code-and-design/ (403) with 1 occurrences could not be migrated:      ([https](https://blog.arendsen.net/index.php/2006/10/05/on-the-servicelocatorfactorybean-dlas-and-the-sustainability-of-code-and-design/) result SSLHandshakeException). * [ ] http://howardlewisship.com/blog/ (404) with 1 occurrences could not be migrated:      ([https](https://howardlewisship.com/blog/) result SSLHandshakeException). * [ ] http://howardlewisship.com/tapestry-javaforge/tapestry-spring/ (404) with 1 occurrences could not be migrated:      ([https](https://howardlewisship.com/tapestry-javaforge/tapestry-spring/) result SSLHandshakeException). * [ ] http://www.foo.com/schema/component/component.xsd (404) with 2 occurrences could not be migrated:      ([https](https://www.foo.com/schema/component/component.xsd) result SSLHandshakeException). * [ ] http://www.foo.com/schema/jcache (404) with 2 occurrences could not be migrated:      ([https](https://www.foo.com/schema/jcache) result SSLHandshakeException). * [ ] http://www.mularien.com/blog/2008/04/24/how-to-reference-and-use-jstl-in-your-web-application/ (404) with 1 occurrences could not be migrated:      ([https](https://www.mularien.com/blog/2008/04/24/how-to-reference-and-use-jstl-in-your-web-application/) result SSLHandshakeException). * [ ] http://www.mycompany.com/schema/myns/myns.xsd (404) with 1 occurrences could not be migrated:      ([https](https://www.mycompany.com/schema/myns/myns.xsd) result ConnectTimeoutException). * [ ] http://xunitpatterns.com/Test%20Spy.html (404) with 1 occurrences could not be migrated:      ([https](https://xunitpatterns.com/Test%20Spy.html) result AnnotatedConnectException).  # Fixed URLs  ## Fixed But Review Recommended These URLs were fixed, but the https status was not OK. However, the https status was the same as the http request or http redirected to an https URL, so they were migrated. Your review is recommended.  * [ ] http://www.freemarker.org (301) with 2 occurrences migrated to:     https://freemarker.apache.org/ ([https](https://www.freemarker.org) result ConnectTimeoutException). * [ ] http://www.caucho.com/ (302) with 1 occurrences migrated to:     https://www.caucho.com/ ([https](https://www.caucho.com/) result SSLHandshakeException). * [ ] http://www.caucho.com (302) with 1 occurrences migrated to:     https://www.caucho.com/ ([https](https://www.caucho.com) result SSLHandshakeException). * [ ] http://springide.org/blog/ (AnnotatedConnectException) with 1 occurrences migrated to:     https://springide.org/blog/ ([https](https://springide.org/blog/) result AnnotatedConnectException). * [ ] http://springide.org/project/wiki/SpringideInstall (AnnotatedConnectException) with 1 occurrences migrated to:     https://springide.org/project/wiki/SpringideInstall ([https](https://springide.org/project/wiki/SpringideInstall) result AnnotatedConnectException). * [ ] http://eclipse-plugins.2y.net/eclipse/plugins.jsp?category=XML (ConnectTimeoutException) with 1 occurrences migrated to:     https://eclipse-plugins.2y.net/eclipse/plugins.jsp?category=XML ([https](https://eclipse-plugins.2y.net/eclipse/plugins.jsp?category=XML) result ConnectTimeoutException). * [ ] http://wiki.opensymphony.com/display/WW/WebWork (ConnectTimeoutException) with 1 occurrences migrated to:     https://wiki.opensymphony.com/display/WW/WebWork ([https](https://wiki.opensymphony.com/display/WW/WebWork) result ConnectTimeoutException). * [ ] http://www.kbcafe.com/rss/atom.xsd.xml (ConnectTimeoutException) with 1 occurrences migrated to:     https://www.kbcafe.com/rss/atom.xsd.xml ([https](https://www.kbcafe.com/rss/atom.xsd.xml) result ConnectTimeoutException). * [ ] http://www.opensymphony.com/quartz/JobSchedulingData (ConnectTimeoutException) with 2 occurrences migrated to:     https://www.opensymphony.com/quartz/JobSchedulingData ([https](https://www.opensymphony.com/quartz/JobSchedulingData) result ConnectTimeoutException). * [ ] http://www.opensymphony.com/quartz/xml/job_scheduling_data_1_5.xsd (ConnectTimeoutException) with 1 occurrences migrated to:     https://www.opensymphony.com/quartz/xml/job_scheduling_data_1_5.xsd ([https](https://www.opensymphony.com/quartz/xml/job_scheduling_data_1_5.xsd) result ConnectTimeoutException). * [ ] http://www.opensymphony.com/webwork/ (ConnectTimeoutException) with 3 occurrences migrated to:     https://www.opensymphony.com/webwork/ ([https](https://www.opensymphony.com/webwork/) result ConnectTimeoutException). * [ ] http://www.opensymphony.com/webwork/wikidocs/IoC%20Overview.html (ConnectTimeoutException) with 1 occurrences migrated to:     https://www.opensymphony.com/webwork/wikidocs/IoC%20Overview.html ([https](https://www.opensymphony.com/webwork/wikidocs/IoC%20Overview.html) result ConnectTimeoutException). * [ ] http://www.opensymphony.com/webwork/wikidocs/Spring.html (ConnectTimeoutException) with 1 occurrences migrated to:     https://www.opensymphony.com/webwork/wikidocs/Spring.html ([https](https://www.opensymphony.com/webwork/wikidocs/Spring.html) result ConnectTimeoutException). * [ ] http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd (ReadTimeoutException) with 5 occurrences migrated to:     https://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd ([https](https://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd) result ReadTimeoutException). * [ ] http://castor.codehaus.org/mapping.dtd (UnknownHostException) with 1 occurrences migrated to:     https://castor.codehaus.org/mapping.dtd ([https](https://castor.codehaus.org/mapping.dtd) result UnknownHostException). * [ ] http://castor.codehaus.org/xml-framework.html (UnknownHostException) with 1 occurrences migrated to:     https://castor.codehaus.org/xml-framework.html ([https](https://castor.codehaus.org/xml-framework.html) result UnknownHostException). * [ ] http://castor.codehaus.org/xml-mapping.html (UnknownHostException) with 1 occurrences migrated to:     https://castor.codehaus.org/xml-mapping.html ([https](https://castor.codehaus.org/xml-mapping.html) result UnknownHostException). * [ ] http://groovy.codehaus.org/ (UnknownHostException) with 1 occurrences migrated to:     https://groovy.codehaus.org/ ([https](https://groovy.codehaus.org/) result UnknownHostException). * [ ] http://groovy.codehaus.org/Operators (UnknownHostException) with 2 occurrences migrated to:     https://groovy.codehaus.org/Operators ([https](https://groovy.codehaus.org/Operators) result UnknownHostException). * [ ] http://jruby.codehaus.org/ (UnknownHostException) with 1 occurrences migrated to:     https://jruby.codehaus.org/ ([https](https://jruby.codehaus.org/) result UnknownHostException). * [ ] http://lingo.codehaus.org/ (UnknownHostException) with 1 occurrences migrated to:     https://lingo.codehaus.org/ ([https](https://lingo.codehaus.org/) result UnknownHostException). * [ ] http://myserver/logo.png (UnknownHostException) with 1 occurrences migrated to:     https://myserver/logo.png ([https](https://myserver/logo.png) result UnknownHostException). * [ ] http://xstream.codehaus.org/ (UnknownHostException) with 1 occurrences migrated to:     https://xstream.codehaus.org/ ([https](https://xstream.codehaus.org/) result UnknownHostException). * [ ] http://bitworking.org/projects/URI-Templates/ (302) with 1 occurrences migrated to:     https://bitworking.org/projects/URI-Templates/ ([https](https://bitworking.org/projects/URI-Templates/) result 404). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.BUILD-SNAPSHOT/api/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMapping.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.BUILD-SNAPSHOT/api/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMapping.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.BUILD-SNAPSHOT/api/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMapping.html) result 404). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/web/servlet/mvc/annotation/ServletAnnotationMappingUtils.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/web/servlet/mvc/annotation/ServletAnnotationMappingUtils.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/web/servlet/mvc/annotation/ServletAnnotationMappingUtils.html) result 404). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/ui/velocity/VelocityEngineFactory.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/ui/velocity/VelocityEngineFactory.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/ui/velocity/VelocityEngineFactory.html) result 404). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/web/jsf/DelegatingVariableResolver.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/jsf/DelegatingVariableResolver.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/web/jsf/DelegatingVariableResolver.html) result 404). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/web/struts/ActionSupport.html (301) with 2 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/struts/ActionSupport.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/web/struts/ActionSupport.html) result 404). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/web/struts/ContextLoaderPlugIn.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/struts/ContextLoaderPlugIn.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/web/struts/ContextLoaderPlugIn.html) result 404). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/web/struts/DelegatingActionProxy.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/struts/DelegatingActionProxy.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/web/struts/DelegatingActionProxy.html) result 404). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/web/struts/DelegatingRequestProcessor.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/struts/DelegatingRequestProcessor.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/web/struts/DelegatingRequestProcessor.html) result 404). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/web/struts/DelegatingTilesRequestProcessor.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/struts/DelegatingTilesRequestProcessor.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/web/struts/DelegatingTilesRequestProcessor.html) result 404). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/web/struts/DispatchActionSupport.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/struts/DispatchActionSupport.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/web/struts/DispatchActionSupport.html) result 404). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/web/struts/LookupDispatchActionSupport.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/struts/LookupDispatchActionSupport.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/web/struts/LookupDispatchActionSupport.html) result 404). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/web/struts/MappingDispatchActionSupport.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/struts/MappingDispatchActionSupport.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/web/struts/MappingDispatchActionSupport.html) result 404). * [ ] http://static.springsource.org/spring/docs/current/api/org/springframework/context/access/ContextSingletonBeanFactoryLocator.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring/docs/current/api/org/springframework/context/access/ContextSingletonBeanFactoryLocator.html ([https](https://static.springsource.org/spring/docs/current/api/org/springframework/context/access/ContextSingletonBeanFactoryLocator.html) result 404). * [ ] http://static.springsource.org/spring/docs/current/api/org/springframework/context/support/ClassPathXmlApplicationContext.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring/docs/current/api/org/springframework/context/support/ClassPathXmlApplicationContext.html ([https](https://static.springsource.org/spring/docs/current/api/org/springframework/context/support/ClassPathXmlApplicationContext.html) result 404). * [ ] http://static.springsource.org/spring/docs/current/api/org/springframework/context/support/FileSystemXmlApplicationContext.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring/docs/current/api/org/springframework/context/support/FileSystemXmlApplicationContext.html ([https](https://static.springsource.org/spring/docs/current/api/org/springframework/context/support/FileSystemXmlApplicationContext.html) result 404). * [ ] http://static.springsource.org/spring/docs/current/api/org/springframework/context/support/SimpleThreadScope.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring/docs/current/api/org/springframework/context/support/SimpleThreadScope.html ([https](https://static.springsource.org/spring/docs/current/api/org/springframework/context/support/SimpleThreadScope.html) result 404). * [ ] http://static.springsource.org/spring/docs/current/api/org/springframework/oxm/xstream/XStreamMarshaller.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring/docs/current/api/org/springframework/oxm/xstream/XStreamMarshaller.html ([https](https://static.springsource.org/spring/docs/current/api/org/springframework/oxm/xstream/XStreamMarshaller.html) result 404). * [ ] http://static.springsource.org/spring/docs/current/api/org/springframework/web/client/RestTemplate.html (301) with 8 occurrences migrated to:     https://docs.spring.io/spring/docs/current/api/org/springframework/web/client/RestTemplate.html ([https](https://static.springsource.org/spring/docs/current/api/org/springframework/web/client/RestTemplate.html) result 404). * [ ] http://example.com/hotel (404) with 1 occurrences migrated to:     https://example.com/hotel ([https](https://example.com/hotel) result 404). * [ ] http://example.com/hotel%20list (404) with 2 occurrences migrated to:     https://example.com/hotel%20list ([https](https://example.com/hotel%20list) result 404). * [ ] http://example.com/hotel%2520list (404) with 1 occurrences migrated to:     https://example.com/hotel%2520list ([https](https://example.com/hotel%2520list) result 404). * [ ] http://example.com/hotels/ (404) with 6 occurrences migrated to:     https://example.com/hotels/ ([https](https://example.com/hotels/) result 404). * [ ] http://example.com/hotels/1/bookings (404) with 1 occurrences migrated to:     https://example.com/hotels/1/bookings ([https](https://example.com/hotels/1/bookings) result 404). * [ ] http://host.com/outsideOfficeHours.html (404) with 1 occurrences migrated to:     https://host.com/outsideOfficeHours.html ([https](https://host.com/outsideOfficeHours.html) result 404). * [ ] http://repository.springsource.com/maven/bundles/release/</url> (404) with 1 occurrences migrated to:     https://repository.springsource.com/maven/bundles/release/</url> ([https](https://repository.springsource.com/maven/bundles/release/</url>) result 404). * [ ] http://blog.springsource.com/2009/03/16/adding-an-atom-view-to-an-application-using-springs-rest-support/ (301) with 1 occurrences migrated to:     https://spring.io/blog/2009/03/16/adding-an-atom-view-to-an-application-using-springs-rest-support/ ([https](https://blog.springsource.com/2009/03/16/adding-an-atom-view-to-an-application-using-springs-rest-support/) result 404). * [ ] http://blog.springsource.com/2011/02/23/spring-3-1-m1-caching/ (301) with 1 occurrences migrated to:     https://spring.io/blog/2011/02/23/spring-3-1-m1-caching/ ([https](https://blog.springsource.com/2011/02/23/spring-3-1-m1-caching/) result 404). * [ ] http://www.example.com/users/ (404) with 1 occurrences migrated to:     https://www.example.com/users/ ([https](https://www.example.com/users/) result 404). * [ ] http://www.example.com/users/fred (404) with 3 occurrences migrated to:     https://www.example.com/users/fred ([https](https://www.example.com/users/fred) result 404). * [ ] http://www.example.com/users/fred.pdf (404) with 1 occurrences migrated to:     https://www.example.com/users/fred.pdf ([https](https://www.example.com/users/fred.pdf) result 404). * [ ] http://www.example.com/users/fred.xml (404) with 1 occurrences migrated to:     https://www.example.com/users/fred.xml ([https](https://www.example.com/users/fred.xml) result 404). * [ ] http://www.springframework.org/schema/beans/factory/xml/support/CustomNamespaceHandlerTests.xsd (404) with 1 occurrences migrated to:     https://www.springframework.org/schema/beans/factory/xml/support/CustomNamespaceHandlerTests.xsd ([https](https://www.springframework.org/schema/beans/factory/xml/support/CustomNamespaceHandlerTests.xsd) result 404). * [ ] http://www.springframework.org/schema/jdbc/spring-cache.xsd (404) with 1 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-cache.xsd ([https](https://www.springframework.org/schema/jdbc/spring-cache.xsd) result 404). * [ ] http://myhost.com/resource/path/myTemplate.txt (500) with 1 occurrences migrated to:     https://myhost.com/resource/path/myTemplate.txt ([https](https://myhost.com/resource/path/myTemplate.txt) result 500). * [ ] http://myhost.com/some/arbitrary/path (500) with 1 occurrences migrated to:     https://myhost.com/some/arbitrary/path ([https](https://myhost.com/some/arbitrary/path) result 500).  ## Fixed Success  These URLs were switched to an https URL with a 2xx status. While the status was successful, your review is still recommended.  * [ ] http://docs.oracle.com/javase/tutorial/javabeans/advanced/customization.html with 1 occurrences migrated to:     https://docs.oracle.com/javase/tutorial/javabeans/advanced/customization.html ([https](https://docs.oracle.com/javase/tutorial/javabeans/advanced/customization.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/deprecated-list.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/deprecated-list.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/deprecated-list.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/beans/factory/config/BeanReferenceFactoryBean.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/beans/factory/config/BeanReferenceFactoryBean.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/beans/factory/config/BeanReferenceFactoryBean.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/beans/factory/config/CommonsLogFactoryBean.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/beans/factory/config/CommonsLogFactoryBean.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/beans/factory/config/CommonsLogFactoryBean.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/ejb/support/package-summary.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/ejb/support/package-summary.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/ejb/support/package-summary.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/http/HttpStatus.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/http/HttpStatus.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/http/HttpStatus.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/http/converter/xml/XmlAwareFormHttpMessageConverter.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/http/converter/xml/XmlAwareFormHttpMessageConverter.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/http/converter/xml/XmlAwareFormHttpMessageConverter.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/instrument/classloading/oc4j/OC4JLoadTimeWeaver.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/instrument/classloading/oc4j/OC4JLoadTimeWeaver.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/instrument/classloading/oc4j/OC4JLoadTimeWeaver.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/jmx/support/MBeanRegistrationSupport.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/jmx/support/MBeanRegistrationSupport.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/jmx/support/MBeanRegistrationSupport.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/orm/ibatis/package-summary.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/orm/ibatis/package-summary.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/orm/ibatis/package-summary.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/orm/jpa/vendor/TopLinkJpaDialect.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/orm/jpa/vendor/TopLinkJpaDialect.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/orm/jpa/vendor/TopLinkJpaDialect.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/orm/jpa/vendor/TopLinkJpaVendorAdapter.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/orm/jpa/vendor/TopLinkJpaVendorAdapter.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/orm/jpa/vendor/TopLinkJpaVendorAdapter.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/scheduling/backportconcurrent/package-summary.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/scheduling/backportconcurrent/package-summary.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/scheduling/backportconcurrent/package-summary.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/test/context/ContextConfigurationAttributes.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/test/context/ContextConfigurationAttributes.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/test/context/ContextConfigurationAttributes.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/test/context/junit4/AbstractTransactionalJUnit4SpringContextTests.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/test/context/junit4/AbstractTransactionalJUnit4SpringContextTests.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/test/context/junit4/AbstractTransactionalJUnit4SpringContextTests.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/test/context/testng/AbstractTransactionalTestNGSpringContextTests.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/test/context/testng/AbstractTransactionalTestNGSpringContextTests.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/test/context/testng/AbstractTransactionalTestNGSpringContextTests.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/test/jdbc/SimpleJdbcTestUtils.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/test/jdbc/SimpleJdbcTestUtils.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/test/jdbc/SimpleJdbcTestUtils.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/transaction/interceptor/TransactionAspectUtils.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/transaction/interceptor/TransactionAspectUtils.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/transaction/interceptor/TransactionAspectUtils.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/transaction/jta/OC4JJtaTransactionManager.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/transaction/jta/OC4JJtaTransactionManager.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/transaction/jta/OC4JJtaTransactionManager.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/ui/velocity/CommonsLoggingLogSystem.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/ui/velocity/CommonsLoggingLogSystem.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/ui/velocity/CommonsLoggingLogSystem.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/ui/velocity/VelocityEngineUtils.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/ui/velocity/VelocityEngineUtils.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/ui/velocity/VelocityEngineUtils.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/util/CachingMapDecorator.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/util/CachingMapDecorator.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/util/CachingMapDecorator.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/web/jsf/DelegatingVariableResolver.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/web/jsf/DelegatingVariableResolver.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/web/jsf/DelegatingVariableResolver.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/web/jsf/SpringBeanVariableResolver.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/web/jsf/SpringBeanVariableResolver.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/web/jsf/SpringBeanVariableResolver.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerExceptionResolver.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerExceptionResolver.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerExceptionResolver.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/web/servlet/mvc/annotation/DefaultAnnotationHandlerMapping.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/web/servlet/mvc/annotation/DefaultAnnotationHandlerMapping.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/web/servlet/mvc/annotation/DefaultAnnotationHandlerMapping.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/web/servlet/view/ContentNegotiatingViewResolver.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/web/servlet/view/ContentNegotiatingViewResolver.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/web/servlet/view/ContentNegotiatingViewResolver.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/web/util/ExpressionEvaluationUtils.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/web/util/ExpressionEvaluationUtils.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/web/util/ExpressionEvaluationUtils.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/web/util/UriUtils.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/web/util/UriUtils.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/web/util/UriUtils.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/BeanFactory.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/BeanFactory.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/BeanFactory.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/annotation/CustomAutowireConfigurer.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/annotation/CustomAutowireConfigurer.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/annotation/CustomAutowireConfigurer.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/annotation/RequiredAnnotationBeanPostProcessor.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/annotation/RequiredAnnotationBeanPostProcessor.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/annotation/RequiredAnnotationBeanPostProcessor.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/config/FieldRetrievingFactoryBean.html (301) with 3 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/config/FieldRetrievingFactoryBean.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/config/FieldRetrievingFactoryBean.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/config/Scope.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/config/Scope.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/config/Scope.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/support/BeanNameGenerator.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/support/BeanNameGenerator.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/support/BeanNameGenerator.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/context/ApplicationContext.html (301) with 2 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/context/ApplicationContext.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/context/ApplicationContext.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/context/annotation/ScopeMetadataResolver.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/context/annotation/ScopeMetadataResolver.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/context/annotation/ScopeMetadataResolver.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/jca/context/SpringContextResourceAdapter.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/jca/context/SpringContextResourceAdapter.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/jca/context/SpringContextResourceAdapter.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/jndi/support/SimpleJndiBeanFactory.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/jndi/support/SimpleJndiBeanFactory.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/jndi/support/SimpleJndiBeanFactory.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/scheduling/quartz/SchedulerFactoryBean.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/scheduling/quartz/SchedulerFactoryBean.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/scheduling/quartz/SchedulerFactoryBean.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/validation/DefaultMessageCodesResolver.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/validation/DefaultMessageCodesResolver.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/validation/DefaultMessageCodesResolver.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/validation/MessageCodesResolver.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/validation/MessageCodesResolver.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/validation/MessageCodesResolver.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/web/context/ContextLoaderListener.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/context/ContextLoaderListener.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/web/context/ContextLoaderListener.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/web/context/WebApplicationContext.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/context/WebApplicationContext.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/web/context/WebApplicationContext.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/web/context/support/WebApplicationContextUtils.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/context/support/WebApplicationContextUtils.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/web/context/support/WebApplicationContextUtils.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/web/jsf/FacesContextUtils.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/jsf/FacesContextUtils.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/web/jsf/FacesContextUtils.html) result 200). * [ ] http://static.springsource.org/spring-gemfire/docs/1.0.0.RELEASE/reference/html/ (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-gemfire/docs/1.0.0.RELEASE/reference/html/ ([https](https://static.springsource.org/spring-gemfire/docs/1.0.0.RELEASE/reference/html/) result 200). * [ ] http://static.springsource.org/spring-security/site/ (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-security/site/ ([https](https://static.springsource.org/spring-security/site/) result 200). * [ ] http://en.wikipedia.org/wiki/Adapter_pattern with 1 occurrences migrated to:     https://en.wikipedia.org/wiki/Adapter_pattern ([https](https://en.wikipedia.org/wiki/Adapter_pattern) result 200). * [ ] http://en.wikipedia.org/wiki/Cache with 1 occurrences migrated to:     https://en.wikipedia.org/wiki/Cache ([https](https://en.wikipedia.org/wiki/Cache) result 200). * [ ] http://en.wikipedia.org/wiki/Content_negotiation with 1 occurrences migrated to:     https://en.wikipedia.org/wiki/Content_negotiation ([https](https://en.wikipedia.org/wiki/Content_negotiation) result 200). * [ ] http://en.wikipedia.org/wiki/HTTP_ETag with 1 occurrences migrated to:     https://en.wikipedia.org/wiki/HTTP_ETag ([https](https://en.wikipedia.org/wiki/HTTP_ETag) result 200). * [ ] http://en.wikipedia.org/wiki/Internet_media_type with 1 occurrences migrated to:     https://en.wikipedia.org/wiki/Internet_media_type ([https](https://en.wikipedia.org/wiki/Internet_media_type) result 200). * [ ] http://en.wikipedia.org/wiki/Mock_Object with 1 occurrences migrated to:     https://en.wikipedia.org/wiki/Mock_Object ([https](https://en.wikipedia.org/wiki/Mock_Object) result 200). * [ ] http://example.com with 1 occurrences migrated to:     https://example.com ([https](https://example.com) result 200). * [ ] http://www.hibernate.org/ (301) with 1 occurrences migrated to:     https://hibernate.org/ ([https](https://www.hibernate.org/) result 200). * [ ] http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd (301) with 2 occurrences migrated to:     https://hibernate.org/dtd/hibernate-mapping-3.0.dtd ([https](https://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd) result 200). * [ ] http://ibatis.apache.org/ with 1 occurrences migrated to:     https://ibatis.apache.org/ ([https](https://ibatis.apache.org/) result 200). * [ ] http://jcp.org/aboutJava/communityprocess/final/jsr003/index3.html with 1 occurrences migrated to:     https://jcp.org/aboutJava/communityprocess/final/jsr003/index3.html ([https](https://jcp.org/aboutJava/communityprocess/final/jsr003/index3.html) result 200). * [ ] http://jcp.org/aboutJava/communityprocess/final/jsr160/index.html with 1 occurrences migrated to:     https://jcp.org/aboutJava/communityprocess/final/jsr160/index.html ([https](https://jcp.org/aboutJava/communityprocess/final/jsr160/index.html) result 200). * [ ] http://jcp.org/en/jsr/detail?id=107 with 1 occurrences migrated to:     https://jcp.org/en/jsr/detail?id=107 ([https](https://jcp.org/en/jsr/detail?id=107) result 200). * [ ] http://jcp.org/en/jsr/detail?id=303 with 1 occurrences migrated to:     https://jcp.org/en/jsr/detail?id=303 ([https](https://jcp.org/en/jsr/detail?id=303) result 200). * [ ] http://logback.qos.ch with 1 occurrences migrated to:     https://logback.qos.ch ([https](https://logback.qos.ch) result 200). * [ ] http://martinfowler.com/articles/injection.html with 2 occurrences migrated to:     https://martinfowler.com/articles/injection.html ([https](https://martinfowler.com/articles/injection.html) result 200). * [ ] http://myfaces.apache.org/ with 1 occurrences migrated to:     https://myfaces.apache.org/ ([https](https://myfaces.apache.org/) result 200). * [ ] http://myfaces.apache.org/orchestra/ with 1 occurrences migrated to:     https://myfaces.apache.org/orchestra/ ([https](https://myfaces.apache.org/orchestra/) result 200). * [ ] http://repo1.maven.org/maven2/javax/inject/javax.inject/1/ with 2 occurrences migrated to:     https://repo1.maven.org/maven2/javax/inject/javax.inject/1/ ([https](https://repo1.maven.org/maven2/javax/inject/javax.inject/1/) result 200). * [ ] http://repository.springsource.com/ivy/bundles/external/ with 2 occurrences migrated to:     https://repository.springsource.com/ivy/bundles/external/ ([https](https://repository.springsource.com/ivy/bundles/external/) result 200). * [ ] http://repository.springsource.com/ivy/bundles/release/ with 2 occurrences migrated to:     https://repository.springsource.com/ivy/bundles/release/ ([https](https://repository.springsource.com/ivy/bundles/release/) result 200). * [ ] http://static.springsource.org/schema/mvc/spring-mvc.xsd (301) with 1 occurrences migrated to:     https://schema.spring.io/mvc/spring-mvc.xsd ([https](https://static.springsource.org/schema/mvc/spring-mvc.xsd) result 200). * [ ] http://blog.springsource.com/2004/08/06/method-injection/ (301) with 1 occurrences migrated to:     https://spring.io/blog/2004/08/06/method-injection/ ([https](https://blog.springsource.com/2004/08/06/method-injection/) result 200). * [ ] http://blog.springsource.com/2007/06/11/using-a-shared-parent-application-context-in-a-multi-war-spring-application/ (301) with 1 occurrences migrated to:     https://spring.io/blog/2007/06/11/using-a-shared-parent-application-context-in-a-multi-war-spring-application/ ([https](https://blog.springsource.com/2007/06/11/using-a-shared-parent-application-context-in-a-multi-war-spring-application/) result 200). * [ ] http://blog.springsource.com/2011/02/11/spring-framework-3-1-m1-released/ (301) with 2 occurrences migrated to:     https://spring.io/blog/2011/02/11/spring-framework-3-1-m1-released/ ([https](https://blog.springsource.com/2011/02/11/spring-framework-3-1-m1-released/) result 200). * [ ] http://blog.springsource.com/2011/02/14/spring-3-1-m1-introducing-profile/ (301) with 1 occurrences migrated to:     https://spring.io/blog/2011/02/14/spring-3-1-m1-introducing-profile/ ([https](https://blog.springsource.com/2011/02/14/spring-3-1-m1-introducing-profile/) result 200). * [ ] http://blog.springsource.com/2011/02/15/spring-3-1-m1-unified-property-management/ (301) with 1 occurrences migrated to:     https://spring.io/blog/2011/02/15/spring-3-1-m1-unified-property-management/ ([https](https://blog.springsource.com/2011/02/15/spring-3-1-m1-unified-property-management/) result 200). * [ ] http://blog.springsource.com/2011/06/21/spring-3-1-m2-testing-with-configuration-classes-and-profiles/ (301) with 1 occurrences migrated to:     https://spring.io/blog/2011/06/21/spring-3-1-m2-testing-with-configuration-classes-and-profiles/ ([https](https://blog.springsource.com/2011/06/21/spring-3-1-m2-testing-with-configuration-classes-and-profiles/) result 200). * [ ] http://struts.apache.org with 1 occurrences migrated to:     https://struts.apache.org ([https](https://struts.apache.org) result 200). * [ ] http://struts.apache.org/ with 2 occurrences migrated to:     https://struts.apache.org/ ([https](https://struts.apache.org/) result 200). * [ ] http://subversion.apache.org/ with 1 occurrences migrated to:     https://subversion.apache.org/ ([https](https://subversion.apache.org/) result 200). * [ ] http://tapestry.apache.org/ with 3 occurrences migrated to:     https://tapestry.apache.org/ ([https](https://tapestry.apache.org/) result 200). * [ ] http://tiles.apache.org with 1 occurrences migrated to:     https://tiles.apache.org ([https](https://tiles.apache.org) result 200). * [ ] http://tiles.apache.org/dtds/tiles-config_2_0.dtd with 1 occurrences migrated to:     https://tiles.apache.org/dtds/tiles-config_2_0.dtd ([https](https://tiles.apache.org/dtds/tiles-config_2_0.dtd) result 200). * [ ] http://tiles.apache.org/dtds/tiles-config_2_1.dtd with 2 occurrences migrated to:     https://tiles.apache.org/dtds/tiles-config_2_1.dtd ([https](https://tiles.apache.org/dtds/tiles-config_2_1.dtd) result 200). * [ ] http://tiles.apache.org/dtds/tiles-config_3_0.dtd with 3 occurrences migrated to:     https://tiles.apache.org/dtds/tiles-config_3_0.dtd ([https](https://tiles.apache.org/dtds/tiles-config_3_0.dtd) result 200). * [ ] http://tomcat.apache.org/ with 1 occurrences migrated to:     https://tomcat.apache.org/ ([https](https://tomcat.apache.org/) result 200). * [ ] http://tomcat.apache.org/tomcat-5.5-doc/config/context.html with 1 occurrences migrated to:     https://tomcat.apache.org/tomcat-5.5-doc/config/context.html ([https](https://tomcat.apache.org/tomcat-5.5-doc/config/context.html) result 200). * [ ] http://tomcat.apache.org/tomcat-6.0-doc/config/context.html with 1 occurrences migrated to:     https://tomcat.apache.org/tomcat-6.0-doc/config/context.html ([https](https://tomcat.apache.org/tomcat-6.0-doc/config/context.html) result 200). * [ ] http://tools.ietf.org/html/rfc3986 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc3986 ([https](https://tools.ietf.org/html/rfc3986) result 200). * [ ] http://velocity.apache.org with 2 occurrences migrated to:     https://velocity.apache.org ([https](https://velocity.apache.org) result 200). * [ ] http://www.atomikos.com/ with 1 occurrences migrated to:     https://www.atomikos.com/ ([https](https://www.atomikos.com/) result 200). * [ ] http://www.eclipse.org/ with 1 occurrences migrated to:     https://www.eclipse.org/ ([https](https://www.eclipse.org/) result 200). * [ ] http://www.eclipse.org/ajdt/ with 1 occurrences migrated to:     https://www.eclipse.org/ajdt/ ([https](https://www.eclipse.org/ajdt/) result 200). * [ ] http://www.eclipse.org/aspectj/doc/next/progguide/index.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/next/progguide/index.html ([https](https://www.eclipse.org/aspectj/doc/next/progguide/index.html) result 200). * [ ] http://www.eclipse.org/aspectj/doc/next/progguide/semantics-joinPoints.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/next/progguide/semantics-joinPoints.html ([https](https://www.eclipse.org/aspectj/doc/next/progguide/semantics-joinPoints.html) result 200). * [ ] http://www.eclipse.org/aspectj/doc/released/adk15notebook/index.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/released/adk15notebook/index.html ([https](https://www.eclipse.org/aspectj/doc/released/adk15notebook/index.html) result 200). * [ ] http://www.eclipse.org/aspectj/doc/released/devguide/antTasks.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/released/devguide/antTasks.html ([https](https://www.eclipse.org/aspectj/doc/released/devguide/antTasks.html) result 200). * [ ] http://www.eclipse.org/aspectj/doc/released/devguide/index.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/released/devguide/index.html ([https](https://www.eclipse.org/aspectj/doc/released/devguide/index.html) result 200). * [ ] http://www.eclipse.org/aspectj/doc/released/devguide/ltw-configuration.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/released/devguide/ltw-configuration.html ([https](https://www.eclipse.org/aspectj/doc/released/devguide/ltw-configuration.html) result 200). * [ ] http://www.eclipse.org/aspectj/doc/released/devguide/ltw.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/released/devguide/ltw.html ([https](https://www.eclipse.org/aspectj/doc/released/devguide/ltw.html) result 200). * [ ] http://www.eclipse.org/aspectj/doc/released/progguide/index.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/released/progguide/index.html ([https](https://www.eclipse.org/aspectj/doc/released/progguide/index.html) result 200). * [ ] http://www.eclipse.org/aspectj/doc/released/progguide/semantics-pointcuts.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/released/progguide/semantics-pointcuts.html ([https](https://www.eclipse.org/aspectj/doc/released/progguide/semantics-pointcuts.html) result 200). * [ ] http://www.eclipse.org/aspectj/dtd/aspectj.dtd with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/dtd/aspectj.dtd ([https](https://www.eclipse.org/aspectj/dtd/aspectj.dtd) result 200). * [ ] http://www.eclipse.org/jetty/ with 1 occurrences migrated to:     https://www.eclipse.org/jetty/ ([https](https://www.eclipse.org/jetty/) result 200). * [ ] http://www.eclipse.org/webtools/ with 1 occurrences migrated to:     https://www.eclipse.org/webtools/ ([https](https://www.eclipse.org/webtools/) result 200). * [ ] http://ehcache.org/ (301) with 1 occurrences migrated to:     https://www.ehcache.org/ ([https](https://ehcache.org/) result 200). * [ ] http://www.enterpriseintegrationpatterns.com with 1 occurrences migrated to:     https://www.enterpriseintegrationpatterns.com ([https](https://www.enterpriseintegrationpatterns.com) result 200). * [ ] http://www.h2database.com with 1 occurrences migrated to:     https://www.h2database.com ([https](https://www.h2database.com) result 200). * [ ] http://www.infoq.com/ with 1 occurrences migrated to:     https://www.infoq.com/ ([https](https://www.infoq.com/) result 200). * [ ] http://www.infoq.com/minibooks/JTDS with 1 occurrences migrated to:     https://www.infoq.com/minibooks/JTDS ([https](https://www.infoq.com/minibooks/JTDS) result 200). * [ ] http://www.jetbrains.com/idea/ with 2 occurrences migrated to:     https://www.jetbrains.com/idea/ ([https](https://www.jetbrains.com/idea/) result 200). * [ ] http://quartz-scheduler.org (301) with 2 occurrences migrated to:     https://www.quartz-scheduler.org/ ([https](https://quartz-scheduler.org) result 200). * [ ] http://www.slf4j.org with 1 occurrences migrated to:     https://www.slf4j.org ([https](https://www.slf4j.org) result 200). * [ ] http://www.springframework.org/dtd/spring-beans-2.0.dtd with 213 occurrences migrated to:     https://www.springframework.org/dtd/spring-beans-2.0.dtd ([https](https://www.springframework.org/dtd/spring-beans-2.0.dtd) result 200). * [ ] http://www.springframework.org/dtd/spring-beans.dtd with 3 occurrences migrated to:     https://www.springframework.org/dtd/spring-beans.dtd ([https](https://www.springframework.org/dtd/spring-beans.dtd) result 200). * [ ] http://www.springframework.org/schema/aop/spring-aop-2.0.xsd with 71 occurrences migrated to:     https://www.springframework.org/schema/aop/spring-aop-2.0.xsd ([https](https://www.springframework.org/schema/aop/spring-aop-2.0.xsd) result 200). * [ ] http://www.springframework.org/schema/aop/spring-aop-2.5.xsd with 14 occurrences migrated to:     https://www.springframework.org/schema/aop/spring-aop-2.5.xsd ([https](https://www.springframework.org/schema/aop/spring-aop-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/aop/spring-aop-3.0.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/aop/spring-aop-3.0.xsd ([https](https://www.springframework.org/schema/aop/spring-aop-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/aop/spring-aop.xsd with 24 occurrences migrated to:     https://www.springframework.org/schema/aop/spring-aop.xsd ([https](https://www.springframework.org/schema/aop/spring-aop.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-2.0.xsd with 119 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-2.0.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-2.0.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-2.5.xsd with 61 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-2.5.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-3.0.xsd with 11 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-3.0.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-3.1.xsd with 35 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-3.1.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-3.2.xsd with 3 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-3.2.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-3.2.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans.xsd with 150 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans.xsd ([https](https://www.springframework.org/schema/beans/spring-beans.xsd) result 200). * [ ] http://www.springframework.org/schema/cache/spring-cache.xsd with 5 occurrences migrated to:     https://www.springframework.org/schema/cache/spring-cache.xsd ([https](https://www.springframework.org/schema/cache/spring-cache.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-2.5.xsd with 44 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-2.5.xsd ([https](https://www.springframework.org/schema/context/spring-context-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-3.0.xsd with 5 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-3.0.xsd ([https](https://www.springframework.org/schema/context/spring-context-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-3.1.xsd with 7 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-3.1.xsd ([https](https://www.springframework.org/schema/context/spring-context-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context.xsd with 26 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context.xsd ([https](https://www.springframework.org/schema/context/spring-context.xsd) result 200). * [ ] http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd with 12 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd ([https](https://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd with 5 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd ([https](https://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/jdbc/spring-jdbc.xsd with 5 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-jdbc.xsd ([https](https://www.springframework.org/schema/jdbc/spring-jdbc.xsd) result 200). * [ ] http://www.springframework.org/schema/jee/spring-jee-3.1.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/jee/spring-jee-3.1.xsd ([https](https://www.springframework.org/schema/jee/spring-jee-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/jee/spring-jee.xsd with 3 occurrences migrated to:     https://www.springframework.org/schema/jee/spring-jee.xsd ([https](https://www.springframework.org/schema/jee/spring-jee.xsd) result 200). * [ ] http://www.springframework.org/schema/jms/spring-jms-3.1.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/jms/spring-jms-3.1.xsd ([https](https://www.springframework.org/schema/jms/spring-jms-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/jms/spring-jms.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/jms/spring-jms.xsd ([https](https://www.springframework.org/schema/jms/spring-jms.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang-2.0.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang-2.0.xsd ([https](https://www.springframework.org/schema/lang/spring-lang-2.0.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang-2.5.xsd with 4 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang-2.5.xsd ([https](https://www.springframework.org/schema/lang/spring-lang-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang-3.0.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang-3.0.xsd ([https](https://www.springframework.org/schema/lang/spring-lang-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang-3.1.xsd with 7 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang-3.1.xsd ([https](https://www.springframework.org/schema/lang/spring-lang-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang.xsd with 5 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang.xsd ([https](https://www.springframework.org/schema/lang/spring-lang.xsd) result 200). * [ ] http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd with 9 occurrences migrated to:     https://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd ([https](https://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd with 5 occurrences migrated to:     https://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd ([https](https://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd with 5 occurrences migrated to:     https://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd ([https](https://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd) result 200). * [ ] http://www.springframework.org/schema/mvc/spring-mvc.xsd with 8 occurrences migrated to:     https://www.springframework.org/schema/mvc/spring-mvc.xsd ([https](https://www.springframework.org/schema/mvc/spring-mvc.xsd) result 200). * [ ] http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd ([https](https://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/oxm/spring-oxm.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/oxm/spring-oxm.xsd ([https](https://www.springframework.org/schema/oxm/spring-oxm.xsd) result 200). * [ ] http://www.springframework.org/schema/security/spring-security-3.1.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/security/spring-security-3.1.xsd ([https](https://www.springframework.org/schema/security/spring-security-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/task/spring-task-3.0.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/task/spring-task-3.0.xsd ([https](https://www.springframework.org/schema/task/spring-task-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/task/spring-task.xsd with 5 occurrences migrated to:     https://www.springframework.org/schema/task/spring-task.xsd ([https](https://www.springframework.org/schema/task/spring-task.xsd) result 200). * [ ] http://www.springframework.org/schema/tx/spring-tx-2.0.xsd with 4 occurrences migrated to:     https://www.springframework.org/schema/tx/spring-tx-2.0.xsd ([https](https://www.springframework.org/schema/tx/spring-tx-2.0.xsd) result 200). * [ ] http://www.springframework.org/schema/tx/spring-tx-2.5.xsd with 7 occurrences migrated to:     https://www.springframework.org/schema/tx/spring-tx-2.5.xsd ([https](https://www.springframework.org/schema/tx/spring-tx-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/tx/spring-tx.xsd with 16 occurrences migrated to:     https://www.springframework.org/schema/tx/spring-tx.xsd ([https](https://www.springframework.org/schema/tx/spring-tx.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-2.0.xsd with 3 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-2.0.xsd ([https](https://www.springframework.org/schema/util/spring-util-2.0.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-2.5.xsd with 9 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-2.5.xsd ([https](https://www.springframework.org/schema/util/spring-util-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-3.0.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-3.0.xsd ([https](https://www.springframework.org/schema/util/spring-util-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-3.1.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-3.1.xsd ([https](https://www.springframework.org/schema/util/spring-util-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util.xsd with 5 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util.xsd ([https](https://www.springframework.org/schema/util/spring-util.xsd) result 200). * [ ] http://www.w3.org/DesignIssues/MatrixURIs.html with 1 occurrences migrated to:     https://www.w3.org/DesignIssues/MatrixURIs.html ([https](https://www.w3.org/DesignIssues/MatrixURIs.html) result 200). * [ ] http://www.w3.org/TR/2004/REC-xmlschema-1-20041028/ with 1 occurrences migrated to:     https://www.w3.org/TR/2004/REC-xmlschema-1-20041028/ ([https](https://www.w3.org/TR/2004/REC-xmlschema-1-20041028/) result 200). * [ ] http://www.w3.org/TR/2004/REC-xmlschema-2-20041028/ with 1 occurrences migrated to:     https://www.w3.org/TR/2004/REC-xmlschema-2-20041028/ ([https](https://www.w3.org/TR/2004/REC-xmlschema-2-20041028/) result 200). * [ ] http://www.w3.org/TR/xhtml1/ with 2 occurrences migrated to:     https://www.w3.org/TR/xhtml1/ ([https](https://www.w3.org/TR/xhtml1/) result 200). * [ ] http://www.w3.org/TR/xhtml1/dtds.html with 2 occurrences migrated to:     https://www.w3.org/TR/xhtml1/dtds.html ([https](https://www.w3.org/TR/xhtml1/dtds.html) result 200). * [ ] http://xmlbeans.apache.org/ with 1 occurrences migrated to:     https://xmlbeans.apache.org/ ([https](https://xmlbeans.apache.org/) result 200). * [ ] http://ant.apache.org/ivy with 1 occurrences migrated to:     https://ant.apache.org/ivy ([https](https://ant.apache.org/ivy) result 301). * [ ] http://bit.ly/lrDHja with 1 occurrences migrated to:     https://bit.ly/lrDHja ([https](https://bit.ly/lrDHja) result 301). * [ ] http://blog.springsource.org/2012/05/06/spring-mvc-3-2-preview-introducing-servlet-3-async-support/ with 1 occurrences migrated to:     https://blog.springsource.org/2012/05/06/spring-mvc-3-2-preview-introducing-servlet-3-async-support/ ([https](https://blog.springsource.org/2012/05/06/spring-mvc-3-2-preview-introducing-servlet-3-async-support/) result 301). * [ ] http://db.apache.org/derby with 1 occurrences migrated to:     https://db.apache.org/derby ([https](https://db.apache.org/derby) result 301). * [ ] http://static.springsource.org/spring-framework/docs/3.1.3.RELEASE_to_3.2.0.RELEASE (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.1.3.RELEASE_to_3.2.0.RELEASE ([https](https://static.springsource.org/spring-framework/docs/3.1.3.RELEASE_to_3.2.0.RELEASE) result 301). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RC2_to_3.2.0.RELEASE (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RC2_to_3.2.0.RELEASE ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RC2_to_3.2.0.RELEASE) result 301). * [ ] http://forum.springsource.org/ (301) with 2 occurrences migrated to:     https://forum.spring.io/ ([https](https://forum.springsource.org/) result 301). * [ ] http://forum.springframework.org/forumdisplay.php?f=25 with 1 occurrences migrated to:     https://forum.springframework.org/forumdisplay.php?f=25 ([https](https://forum.springframework.org/forumdisplay.php?f=25) result 301). * [ ] http://issues.apache.org/bugzilla/show_bug.cgi?id=39704 with 1 occurrences migrated to:     https://issues.apache.org/bugzilla/show_bug.cgi?id=39704 ([https](https://issues.apache.org/bugzilla/show_bug.cgi?id=39704) result 301). * [ ] http://jakarta.apache.org/commons/fileupload with 2 occurrences migrated to:     https://jakarta.apache.org/commons/fileupload ([https](https://jakarta.apache.org/commons/fileupload) result 301). * [ ] http://jakarta.apache.org/commons/httpclient with 1 occurrences migrated to:     https://jakarta.apache.org/commons/httpclient ([https](https://jakarta.apache.org/commons/httpclient) result 301). * [ ] http://jakarta.apache.org/struts/dtds/tiles-config_1_1.dtd with 1 occurrences migrated to:     https://jakarta.apache.org/struts/dtds/tiles-config_1_1.dtd ([https](https://jakarta.apache.org/struts/dtds/tiles-config_1_1.dtd) result 301). * [ ] http://jakarta.apache.org/tapestry/dtd/Tapestry_3_0.dtd with 2 occurrences migrated to:     https://jakarta.apache.org/tapestry/dtd/Tapestry_3_0.dtd ([https](https://jakarta.apache.org/tapestry/dtd/Tapestry_3_0.dtd) result 301). * [ ] http://jira.springframework.org with 2 occurrences migrated to:     https://jira.springframework.org ([https](https://jira.springframework.org) result 301). * [ ] http://jira.springframework.org/ with 1 occurrences migrated to:     https://jira.springframework.org/ ([https](https://jira.springframework.org/) result 301). * [ ] http://jira.springsource.org/SPR with 1 occurrences migrated to:     https://jira.springsource.org/SPR ([https](https://jira.springsource.org/SPR) result 301). * [ ] http://logging.apache.org/log4j with 1 occurrences migrated to:     https://logging.apache.org/log4j ([https](https://logging.apache.org/log4j) result 301). * [ ] http://maven.apache.org/plugins/maven-surefire-plugin/test-mojo.html with 1 occurrences migrated to:     https://maven.apache.org/plugins/maven-surefire-plugin/test-mojo.html ([https](https://maven.apache.org/plugins/maven-surefire-plugin/test-mojo.html) result 301). * [ ] http://mockito.org/ (301) with 1 occurrences migrated to:     https://mockito.github.io ([https](https://mockito.org/) result 301). * [ ] http://opensource.atlassian.com/projects/spring/secure/Dashboard.jspa with 3 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/secure/Dashboard.jspa ([https](https://opensource.atlassian.com/projects/spring/secure/Dashboard.jspa) result 301). * [ ] http://repo.springsource.org/milestone/</url> with 1 occurrences migrated to:     https://repo.springsource.org/milestone/</url> ([https](https://repo.springsource.org/milestone/</url>) result 301). * [ ] http://repo.springsource.org/release/</url> with 1 occurrences migrated to:     https://repo.springsource.org/release/</url> ([https](https://repo.springsource.org/release/</url>) result 301). * [ ] http://repo.springsource.org/snapshot/</url> with 1 occurrences migrated to:     https://repo.springsource.org/snapshot/</url> ([https](https://repo.springsource.org/snapshot/</url>) result 301). * [ ] http://sourceforge.net/tracker/index.php?func=detail&aid=1088866&group_id=39190&atid=424562 with 1 occurrences migrated to:     https://sourceforge.net/tracker/index.php?func=detail&aid=1088866&group_id=39190&atid=424562 ([https](https://sourceforge.net/tracker/index.php?func=detail&aid=1088866&group_id=39190&atid=424562) result 301). * [ ] http://springsource.org/spring-integration with 1 occurrences migrated to:     https://springsource.org/spring-integration ([https](https://springsource.org/spring-integration) result 301). * [ ] http://www-01.ibm.com/software/webservers/appserv/was/ with 1 occurrences migrated to:     https://www-01.ibm.com/software/webservers/appserv/was/ ([https](https://www-01.ibm.com/software/webservers/appserv/was/) result 301). * [ ] http://www.docbook.org/xml/5.0/xsd/docbook.xsd with 49 occurrences migrated to:     https://www.docbook.org/xml/5.0/xsd/docbook.xsd ([https](https://www.docbook.org/xml/5.0/xsd/docbook.xsd) result 301). * [ ] http://www.docbook.org/xml/5.0/xsd/xlink.xsd with 49 occurrences migrated to:     https://www.docbook.org/xml/5.0/xsd/xlink.xsd ([https](https://www.docbook.org/xml/5.0/xsd/xlink.xsd) result 301). * [ ] http://www.eclipse.org/aspectj with 2 occurrences migrated to:     https://www.eclipse.org/aspectj ([https](https://www.eclipse.org/aspectj) result 301). * [ ] http://www.javaworld.com/javaworld/jw-01-2009/jw-01-spring-transactions.html with 1 occurrences migrated to:     https://www.javaworld.com/javaworld/jw-01-2009/jw-01-spring-transactions.html ([https](https://www.javaworld.com/javaworld/jw-01-2009/jw-01-spring-transactions.html) result 301). * [ ] http://www.jboss.org/jbossas/ with 1 occurrences migrated to:     https://www.jboss.org/jbossas/ ([https](https://www.jboss.org/jbossas/) result 301). * [ ] http://www.junit.org/ with 1 occurrences migrated to:     https://www.junit.org/ ([https](https://www.junit.org/) result 301). * [ ] http://www.bea.com/framework.jsp?CNT=index.htm&FP=/content/products/weblogic/server (301) with 1 occurrences migrated to:     https://www.oracle.com/bea/index.html?CNT=index.htm&FP=/content/products/weblogic/server ([https](https://www.bea.com/framework.jsp?CNT=index.htm&FP=/content/products/weblogic/server) result 301). * [ ] http://www.oracle.com/technology/products/oc4j/index.html with 1 occurrences migrated to:     https://www.oracle.com/technology/products/oc4j/index.html ([https](https://www.oracle.com/technology/products/oc4j/index.html) result 301). * [ ] http://www.sf.net/home.view?siteLanguage=nl with 1 occurrences migrated to:     https://www.sf.net/home.view?siteLanguage=nl ([https](https://www.sf.net/home.view?siteLanguage=nl) result 301). * [ ] http://www.springframework.org with 1 occurrences migrated to:     https://www.springframework.org ([https](https://www.springframework.org) result 301). * [ ] http://www.springframework.org/webflow with 2 occurrences migrated to:     https://www.springframework.org/webflow ([https](https://www.springframework.org/webflow) result 301). * [ ] http://www.springsource.com/products/sts with 4 occurrences migrated to:     https://www.springsource.com/products/sts ([https](https://www.springsource.com/products/sts) result 301). * [ ] http://www.springsource.com/repository with 4 occurrences migrated to:     https://www.springsource.com/repository ([https](https://www.springsource.com/repository) result 301). * [ ] http://www.springsource.com/repository/app/faq with 1 occurrences migrated to:     https://www.springsource.com/repository/app/faq ([https](https://www.springsource.com/repository/app/faq) result 301). * [ ] http://www.springsource.org/documentation with 2 occurrences migrated to:     https://www.springsource.org/documentation ([https](https://www.springsource.org/documentation) result 301). * [ ] http://www.springsource.org/javaconfig with 3 occurrences migrated to:     https://www.springsource.org/javaconfig ([https](https://www.springsource.org/javaconfig) result 301). * [ ] http://www.springsource.org/roo with 1 occurrences migrated to:     https://www.springsource.org/roo ([https](https://www.springsource.org/roo) result 301). * [ ] http://www.springsource.org/springframework-ebr with 1 occurrences migrated to:     https://www.springsource.org/springframework-ebr ([https](https://www.springsource.org/springframework-ebr) result 301). * [ ] http://download.oracle.com/javaee/6/api/javax/inject/Scope.html with 1 occurrences migrated to:     https://download.oracle.com/javaee/6/api/javax/inject/Scope.html ([https](https://download.oracle.com/javaee/6/api/javax/inject/Scope.html) result 302). * [ ] http://download.oracle.com/javase/6/docs/api/java/beans/ConstructorProperties.html with 1 occurrences migrated to:     https://download.oracle.com/javase/6/docs/api/java/beans/ConstructorProperties.html ([https](https://download.oracle.com/javase/6/docs/api/java/beans/ConstructorProperties.html) result 302). * [ ] http://glassfish.dev.java.net/ with 1 occurrences migrated to:     https://glassfish.dev.java.net/ ([https](https://glassfish.dev.java.net/) result 302). * [ ] http://java.sun.com/developer/technicalArticles/J2EE/jpa/index.html with 1 occurrences migrated to:     https://java.sun.com/developer/technicalArticles/J2EE/jpa/index.html ([https](https://java.sun.com/developer/technicalArticles/J2EE/jpa/index.html) result 302). * [ ] http://java.sun.com/developer/technicalArticles/J2SE/jmx.html with 1 occurrences migrated to:     https://java.sun.com/developer/technicalArticles/J2SE/jmx.html ([https](https://java.sun.com/developer/technicalArticles/J2SE/jmx.html) result 302). * [ ] http://java.sun.com/j2se/1.5.0/docs/api/java/io/Serializable.html with 1 occurrences migrated to:     https://java.sun.com/j2se/1.5.0/docs/api/java/io/Serializable.html ([https](https://java.sun.com/j2se/1.5.0/docs/api/java/io/Serializable.html) result 302). * [ ] http://java.sun.com/j2se/1.5.0/docs/api/java/lang/instrument/package-summary.html with 2 occurrences migrated to:     https://java.sun.com/j2se/1.5.0/docs/api/java/lang/instrument/package-summary.html ([https](https://java.sun.com/j2se/1.5.0/docs/api/java/lang/instrument/package-summary.html) result 302). * [ ] http://java.sun.com/javaee/javaserverfaces/ with 2 occurrences migrated to:     https://java.sun.com/javaee/javaserverfaces/ ([https](https://java.sun.com/javaee/javaserverfaces/) result 302). * [ ] http://java.sun.com/javase/6/docs/api/java/util/concurrent/ThreadPoolExecutor.html with 1 occurrences migrated to:     https://java.sun.com/javase/6/docs/api/java/util/concurrent/ThreadPoolExecutor.html ([https](https://java.sun.com/javase/6/docs/api/java/util/concurrent/ThreadPoolExecutor.html) result 302). * [ ] http://java.sun.com/products/JavaManagement/ with 1 occurrences migrated to:     https://java.sun.com/products/JavaManagement/ ([https](https://java.sun.com/products/JavaManagement/) result 302). * [ ] http://java.sun.com/products/javabeans/ with 1 occurrences migrated to:     https://java.sun.com/products/javabeans/ ([https](https://java.sun.com/products/javabeans/) result 302). * [ ] http://java.sun.com/products/javabeans/docs/spec.html with 1 occurrences migrated to:     https://java.sun.com/products/javabeans/docs/spec.html ([https](https://java.sun.com/products/javabeans/docs/spec.html) result 302). * [ ] http://java.sun.com/products/javabeans/jaf/downloads/index.html with 1 occurrences migrated to:     https://java.sun.com/products/javabeans/jaf/downloads/index.html ([https](https://java.sun.com/products/javabeans/jaf/downloads/index.html) result 302). * [ ] http://java.sun.com/products/javamail/ with 1 occurrences migrated to:     https://java.sun.com/products/javamail/ ([https](https://java.sun.com/products/javamail/) result 302). * [ ] http://java.sun.com/xml/ns/j2ee/connector_1_5.xsd with 1 occurrences migrated to:     https://java.sun.com/xml/ns/j2ee/connector_1_5.xsd ([https](https://java.sun.com/xml/ns/j2ee/connector_1_5.xsd) result 302). * [ ] http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd with 1 occurrences migrated to:     https://java.sun.com/xml/ns/javaee/web-app_3_0.xsd ([https](https://java.sun.com/xml/ns/javaee/web-app_3_0.xsd) result 302). * [ ] http://java.sun.com/xml/ns/javaee/web-fragment_3_0.xsd with 1 occurrences migrated to:     https://java.sun.com/xml/ns/javaee/web-fragment_3_0.xsd ([https](https://java.sun.com/xml/ns/javaee/web-fragment_3_0.xsd) result 302). * [ ] http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd with 12 occurrences migrated to:     https://java.sun.com/xml/ns/persistence/persistence_1_0.xsd ([https](https://java.sun.com/xml/ns/persistence/persistence_1_0.xsd) result 302). * [ ] http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd with 1 occurrences migrated to:     https://java.sun.com/xml/ns/persistence/persistence_2_0.xsd ([https](https://java.sun.com/xml/ns/persistence/persistence_2_0.xsd) result 302). * [ ] http://struts.apache.org/2.x/docs/spring-plugin.html with 1 occurrences migrated to:     https://struts.apache.org/2.x/docs/spring-plugin.html ([https](https://struts.apache.org/2.x/docs/spring-plugin.html) result 302). * [ ] http://www.springsource.com/produts/sts with 1 occurrences migrated to:     https://www.springsource.com/produts/sts ([https](https://www.springsource.com/produts/sts) result 302). * [ ] http://www.springsource.org/download/community with 2 occurrences migrated to:     https://www.springsource.org/download/community ([https](https://www.springsource.org/download/community) result 302).  # Ignored These URLs were intentionally ignored.  * http://HOST:8080/remoting/AccountService with 1 occurrences * http://docbook.org/ns/docbook with 100 occurrences * http://example/ with 1 occurrences * http://jakarta.apache.org/log4j/ with 19 occurrences * http://java.sun.com/dtd/properties.dtd with 4 occurrences * http://java.sun.com/xml/ns/j2ee with 2 occurrences * http://java.sun.com/xml/ns/javaee with 4 occurrences * http://java.sun.com/xml/ns/persistence with 28 occurrences * http://localhost/content with 1 occurrences * http://localhost/content.atom with 1 occurrences * http://localhost/registration.html with 1 occurrences * http://localhost:8080 with 3 occurrences * http://localhost:8080/ with 1 occurrences * http://localhost:8080/account/services/accountService with 2 occurrences * http://localhost:8080/account/services/accountService?WSDL with 1 occurrences * http://localhost:8080/people with 2 occurrences * http://localhost:8888/AccountServiceEndpoint?WSDL with 1 occurrences * http://remotehost:8080/remoting/AccountService with 2 occurrences * http://samples.springframework.org/flight with 7 occurrences * http://schemas.microsoft.com/visio/2003/SVGExtensions/ with 5 occurrences * http://testng.org/ with 1 occurrences * http://www.foo.com/schema/component with 6 occurrences * http://www.greeting.com/goodbye/ with 1 occurrences * http://www.greeting.com/hello/ with 1 occurrences * http://www.mycompany.com/schema/myns with 4 occurrences * http://www.springframework.org/schema/aop with 221 occurrences * http://www.springframework.org/schema/beans with 762 occurrences * http://www.springframework.org/schema/beans/test with 2 occurrences * http://www.springframework.org/schema/c with 11 occurrences * http://www.springframework.org/schema/cache with 12 occurrences * http://www.springframework.org/schema/context with 164 occurrences * http://www.springframework.org/schema/jdbc with 45 occurrences * http://www.springframework.org/schema/jee with 9 occurrences * http://www.springframework.org/schema/jms with 6 occurrences * http://www.springframework.org/schema/lang with 38 occurrences * http://www.springframework.org/schema/mvc with 54 occurrences * http://www.springframework.org/schema/oxm with 4 occurrences * http://www.springframework.org/schema/p with 29 occurrences * http://www.springframework.org/schema/security with 2 occurrences * http://www.springframework.org/schema/task with 12 occurrences * http://www.springframework.org/schema/tx with 54 occurrences * http://www.springframework.org/schema/util with 43 occurrences * http://www.springframework.org/spring-ws with 1 occurrences * http://www.springframework.org/tags with 1 occurrences * http://www.springframework.org/tags/form with 1 occurrences * http://www.w3.org/1998/Math/MathML with 1 occurrences * http://www.w3.org/1999/XSL/Transform with 1 occurrences * http://www.w3.org/1999/xlink with 99 occurrences * http://www.w3.org/2000/svg with 5 occurrences * http://www.w3.org/2001/XInclude with 97 occurrences * http://www.w3.org/2001/XMLSchema with 5 occurrences * http://www.w3.org/2001/XMLSchema-instance with 448 occurrences * http://www.w3.org/2005/Atom with 3 occurrences","closed","type: task,","spring-operator","2019-03-26T05:35:56Z","2019-03-28T18:19:36Z"
"","22664","URL Cleanup","This commit updates URLs to prefer the https protocol. Redirects are not followed to avoid accidentally expanding intentionally shortened URLs (i.e. if using a URL shortener).  # HTTP URLs that Could Not Be Fixed These URLs were unable to be fixed. Please review them to see if they can be manually resolved.  * [ ] http://dbunit.sourceforge.net/ (200) with 1 occurrences could not be migrated:      ([https](https://dbunit.sourceforge.net/) result AnnotatedConnectException). * [ ] http://grinder.sourceforge.net/ (200) with 1 occurrences could not be migrated:      ([https](https://grinder.sourceforge.net/) result AnnotatedConnectException). * [ ] http://jasperreports.sourceforge.net (200) with 1 occurrences could not be migrated:      ([https](https://jasperreports.sourceforge.net) result AnnotatedConnectException). * [ ] http://jibx.sourceforge.net/ (200) with 1 occurrences could not be migrated:      ([https](https://jibx.sourceforge.net/) result AnnotatedConnectException). * [ ] http://joda-time.sourceforge.net (200) with 1 occurrences could not be migrated:      ([https](https://joda-time.sourceforge.net) result AnnotatedConnectException). * [ ] http://jotm.objectweb.org/ (200) with 1 occurrences could not be migrated:      ([https](https://jotm.objectweb.org/) result NotSslRecordException). * [ ] http://mx4j.sourceforge.net (200) with 1 occurrences could not be migrated:      ([https](https://mx4j.sourceforge.net) result AnnotatedConnectException). * [ ] http://mx4j.sourceforge.net/ (200) with 1 occurrences could not be migrated:      ([https](https://mx4j.sourceforge.net/) result AnnotatedConnectException). * [ ] http://schemas.xmlsoap.org/soap/encoding/ (200) with 1 occurrences could not be migrated:      ([https](https://schemas.xmlsoap.org/soap/encoding/) result AnnotatedConnectException). * [ ] http://www.beanshell.org/ (200) with 1 occurrences could not be migrated:      ([https](https://www.beanshell.org/) result SSLHandshakeException). * [ ] http://www.caucho.com/resin-3.0/xml/jaxp.xtp (200) with 2 occurrences could not be migrated:      ([https](https://www.caucho.com/resin-3.0/xml/jaxp.xtp) result SSLHandshakeException). * [ ] http://www.datanucleus.org/ (200) with 2 occurrences could not be migrated:      ([https](https://www.datanucleus.org/) result AnnotatedConnectException). * [ ] http://www.hsqldb.org (200) with 1 occurrences could not be migrated:      ([https](https://www.hsqldb.org) result SSLHandshakeException). * [ ] http://www.mockobjects.com (200) with 1 occurrences could not be migrated:      ([https](https://www.mockobjects.com) result ClosedChannelException). * [ ] http://www.mockobjects.com/ (200) with 1 occurrences could not be migrated:      ([https](https://www.mockobjects.com/) result ClosedChannelException). * [ ] http://www.easymock.org (301) with 1 occurrences could not be migrated:      ([https](https://www.easymock.org) result SSLHandshakeException). * [ ] http://www.easymock.org/ (301) with 1 occurrences could not be migrated:      ([https](https://www.easymock.org/) result SSLHandshakeException). * [ ] http://www.jmock.org/ (301) with 1 occurrences could not be migrated:      ([https](https://www.jmock.org/) result SSLHandshakeException). * [ ] http://blog.arendsen.net/index.php/2006/10/05/on-the-servicelocatorfactorybean-dlas-and-the-sustainability-of-code-and-design/ (403) with 1 occurrences could not be migrated:      ([https](https://blog.arendsen.net/index.php/2006/10/05/on-the-servicelocatorfactorybean-dlas-and-the-sustainability-of-code-and-design/) result SSLHandshakeException). * [ ] http://howardlewisship.com/blog/ (404) with 1 occurrences could not be migrated:      ([https](https://howardlewisship.com/blog/) result SSLHandshakeException). * [ ] http://howardlewisship.com/tapestry-javaforge/tapestry-spring/ (404) with 1 occurrences could not be migrated:      ([https](https://howardlewisship.com/tapestry-javaforge/tapestry-spring/) result SSLHandshakeException). * [ ] http://schemas.microsoft.com/visio/2003/SVGExtensions/ (404) with 5 occurrences could not be migrated:      ([https](https://schemas.microsoft.com/visio/2003/SVGExtensions/) result AnnotatedConnectException). * [ ] http://www.foo.com/schema/component (404) with 6 occurrences could not be migrated:      ([https](https://www.foo.com/schema/component) result SSLHandshakeException). * [ ] http://www.foo.com/schema/component/component.xsd (404) with 2 occurrences could not be migrated:      ([https](https://www.foo.com/schema/component/component.xsd) result SSLHandshakeException). * [ ] http://www.foo.com/schema/jcache (404) with 2 occurrences could not be migrated:      ([https](https://www.foo.com/schema/jcache) result SSLHandshakeException). * [ ] http://www.mularien.com/blog/2008/04/24/how-to-reference-and-use-jstl-in-your-web-application/ (404) with 1 occurrences could not be migrated:      ([https](https://www.mularien.com/blog/2008/04/24/how-to-reference-and-use-jstl-in-your-web-application/) result SSLHandshakeException). * [ ] http://www.mycompany.com/schema/myns (404) with 4 occurrences could not be migrated:      ([https](https://www.mycompany.com/schema/myns) result ConnectTimeoutException). * [ ] http://www.mycompany.com/schema/myns/myns.xsd (404) with 1 occurrences could not be migrated:      ([https](https://www.mycompany.com/schema/myns/myns.xsd) result ConnectTimeoutException). * [ ] http://xunitpatterns.com/Test%20Spy.html (404) with 1 occurrences could not be migrated:      ([https](https://xunitpatterns.com/Test%20Spy.html) result AnnotatedConnectException).  # Fixed URLs  ## Fixed But Review Recommended These URLs were fixed, but the https status was not OK. However, the https status was the same as the http request or http redirected to an https URL, so they were migrated. Your review is recommended.  * [ ] http://www.objectmentor.com/resources/articles/ocp.pdf (302) with 1 occurrences migrated to:     /VUQKZ/resources/articles/ocp.pdf ([https](https://www.objectmentor.com/resources/articles/ocp.pdf) result IllegalArgumentException). * [ ] http://www.freemarker.org (301) with 2 occurrences migrated to:     https://freemarker.apache.org/ ([https](https://www.freemarker.org) result ConnectTimeoutException). * [ ] http://www.greeting.com/hello/ (302) with 1 occurrences migrated to:     https://venture.com/domains/greeting.com ([https](https://www.greeting.com/hello/) result SSLHandshakeException). * [ ] http://www.greeting.com/goodbye/ (302) with 1 occurrences migrated to:     https://venture.com/domains/greeting.com ([https](https://www.greeting.com/goodbye/) result SSLHandshakeException). * [ ] http://www.caucho.com/ (302) with 1 occurrences migrated to:     https://www.caucho.com/ ([https](https://www.caucho.com/) result SSLHandshakeException). * [ ] http://www.caucho.com (302) with 1 occurrences migrated to:     https://www.caucho.com/ ([https](https://www.caucho.com) result SSLHandshakeException). * [ ] http://localhost/content (AnnotatedConnectException) with 1 occurrences migrated to:     https://localhost/content ([https](https://localhost/content) result AnnotatedConnectException). * [ ] http://localhost/content.atom (AnnotatedConnectException) with 1 occurrences migrated to:     https://localhost/content.atom ([https](https://localhost/content.atom) result AnnotatedConnectException). * [ ] http://localhost/registration.html (AnnotatedConnectException) with 1 occurrences migrated to:     https://localhost/registration.html ([https](https://localhost/registration.html) result AnnotatedConnectException). * [ ] http://localhost:8080 (AnnotatedConnectException) with 3 occurrences migrated to:     https://localhost:8080 ([https](https://localhost:8080) result AnnotatedConnectException). * [ ] http://localhost:8080/account/services/accountService (AnnotatedConnectException) with 2 occurrences migrated to:     https://localhost:8080/account/services/accountService ([https](https://localhost:8080/account/services/accountService) result AnnotatedConnectException). * [ ] http://localhost:8080/account/services/accountService?WSDL (AnnotatedConnectException) with 1 occurrences migrated to:     https://localhost:8080/account/services/accountService?WSDL ([https](https://localhost:8080/account/services/accountService?WSDL) result AnnotatedConnectException). * [ ] http://localhost:8080/people (AnnotatedConnectException) with 2 occurrences migrated to:     https://localhost:8080/people ([https](https://localhost:8080/people) result AnnotatedConnectException). * [ ] http://localhost:8888/AccountServiceEndpoint?WSDL (AnnotatedConnectException) with 1 occurrences migrated to:     https://localhost:8888/AccountServiceEndpoint?WSDL ([https](https://localhost:8888/AccountServiceEndpoint?WSDL) result AnnotatedConnectException). * [ ] http://springide.org/blog/ (AnnotatedConnectException) with 1 occurrences migrated to:     https://springide.org/blog/ ([https](https://springide.org/blog/) result AnnotatedConnectException). * [ ] http://springide.org/project/wiki/SpringideInstall (AnnotatedConnectException) with 1 occurrences migrated to:     https://springide.org/project/wiki/SpringideInstall ([https](https://springide.org/project/wiki/SpringideInstall) result AnnotatedConnectException). * [ ] http://eclipse-plugins.2y.net/eclipse/plugins.jsp?category=XML (ConnectTimeoutException) with 1 occurrences migrated to:     https://eclipse-plugins.2y.net/eclipse/plugins.jsp?category=XML ([https](https://eclipse-plugins.2y.net/eclipse/plugins.jsp?category=XML) result ConnectTimeoutException). * [ ] http://wiki.opensymphony.com/display/WW/WebWork (ConnectTimeoutException) with 1 occurrences migrated to:     https://wiki.opensymphony.com/display/WW/WebWork ([https](https://wiki.opensymphony.com/display/WW/WebWork) result ConnectTimeoutException). * [ ] http://www.kbcafe.com/rss/atom.xsd.xml (ConnectTimeoutException) with 1 occurrences migrated to:     https://www.kbcafe.com/rss/atom.xsd.xml ([https](https://www.kbcafe.com/rss/atom.xsd.xml) result ConnectTimeoutException). * [ ] http://www.opensymphony.com/quartz/JobSchedulingData (ConnectTimeoutException) with 2 occurrences migrated to:     https://www.opensymphony.com/quartz/JobSchedulingData ([https](https://www.opensymphony.com/quartz/JobSchedulingData) result ConnectTimeoutException). * [ ] http://www.opensymphony.com/quartz/xml/job_scheduling_data_1_5.xsd (ConnectTimeoutException) with 1 occurrences migrated to:     https://www.opensymphony.com/quartz/xml/job_scheduling_data_1_5.xsd ([https](https://www.opensymphony.com/quartz/xml/job_scheduling_data_1_5.xsd) result ConnectTimeoutException). * [ ] http://www.opensymphony.com/webwork/ (ConnectTimeoutException) with 3 occurrences migrated to:     https://www.opensymphony.com/webwork/ ([https](https://www.opensymphony.com/webwork/) result ConnectTimeoutException). * [ ] http://www.opensymphony.com/webwork/wikidocs/IoC%20Overview.html (ConnectTimeoutException) with 1 occurrences migrated to:     https://www.opensymphony.com/webwork/wikidocs/IoC%20Overview.html ([https](https://www.opensymphony.com/webwork/wikidocs/IoC%20Overview.html) result ConnectTimeoutException). * [ ] http://www.opensymphony.com/webwork/wikidocs/Spring.html (ConnectTimeoutException) with 1 occurrences migrated to:     https://www.opensymphony.com/webwork/wikidocs/Spring.html ([https](https://www.opensymphony.com/webwork/wikidocs/Spring.html) result ConnectTimeoutException). * [ ] http://www.w3.org/1999/XSL/Transform (ReadTimeoutException) with 1 occurrences migrated to:     https://www.w3.org/1999/XSL/Transform ([https](https://www.w3.org/1999/XSL/Transform) result ReadTimeoutException). * [ ] http://www.w3.org/2005/Atom (ReadTimeoutException) with 3 occurrences migrated to:     https://www.w3.org/2005/Atom ([https](https://www.w3.org/2005/Atom) result ReadTimeoutException). * [ ] http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd (ReadTimeoutException) with 5 occurrences migrated to:     https://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd ([https](https://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd) result ReadTimeoutException). * [ ] http://HOST:8080/remoting/AccountService (UnknownHostException) with 1 occurrences migrated to:     https://HOST:8080/remoting/AccountService ([https](https://HOST:8080/remoting/AccountService) result UnknownHostException). * [ ] http://castor.codehaus.org/mapping.dtd (UnknownHostException) with 1 occurrences migrated to:     https://castor.codehaus.org/mapping.dtd ([https](https://castor.codehaus.org/mapping.dtd) result UnknownHostException). * [ ] http://castor.codehaus.org/xml-framework.html (UnknownHostException) with 1 occurrences migrated to:     https://castor.codehaus.org/xml-framework.html ([https](https://castor.codehaus.org/xml-framework.html) result UnknownHostException). * [ ] http://castor.codehaus.org/xml-mapping.html (UnknownHostException) with 1 occurrences migrated to:     https://castor.codehaus.org/xml-mapping.html ([https](https://castor.codehaus.org/xml-mapping.html) result UnknownHostException). * [ ] http://groovy.codehaus.org/ (UnknownHostException) with 1 occurrences migrated to:     https://groovy.codehaus.org/ ([https](https://groovy.codehaus.org/) result UnknownHostException). * [ ] http://groovy.codehaus.org/Operators (UnknownHostException) with 2 occurrences migrated to:     https://groovy.codehaus.org/Operators ([https](https://groovy.codehaus.org/Operators) result UnknownHostException). * [ ] http://jruby.codehaus.org/ (UnknownHostException) with 1 occurrences migrated to:     https://jruby.codehaus.org/ ([https](https://jruby.codehaus.org/) result UnknownHostException). * [ ] http://lingo.codehaus.org/ (UnknownHostException) with 1 occurrences migrated to:     https://lingo.codehaus.org/ ([https](https://lingo.codehaus.org/) result UnknownHostException). * [ ] http://myserver/logo.png (UnknownHostException) with 1 occurrences migrated to:     https://myserver/logo.png ([https](https://myserver/logo.png) result UnknownHostException). * [ ] http://remotehost:8080/remoting/AccountService (UnknownHostException) with 2 occurrences migrated to:     https://remotehost:8080/remoting/AccountService ([https](https://remotehost:8080/remoting/AccountService) result UnknownHostException). * [ ] http://samples.springframework.org/flight (UnknownHostException) with 7 occurrences migrated to:     https://samples.springframework.org/flight ([https](https://samples.springframework.org/flight) result UnknownHostException). * [ ] http://xstream.codehaus.org/ (UnknownHostException) with 1 occurrences migrated to:     https://xstream.codehaus.org/ ([https](https://xstream.codehaus.org/) result UnknownHostException). * [ ] http://bitworking.org/projects/URI-Templates/ (302) with 1 occurrences migrated to:     https://bitworking.org/projects/URI-Templates/ ([https](https://bitworking.org/projects/URI-Templates/) result 404). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.BUILD-SNAPSHOT/api/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMapping.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.BUILD-SNAPSHOT/api/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMapping.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.BUILD-SNAPSHOT/api/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMapping.html) result 404). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/web/servlet/mvc/annotation/ServletAnnotationMappingUtils.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/web/servlet/mvc/annotation/ServletAnnotationMappingUtils.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/web/servlet/mvc/annotation/ServletAnnotationMappingUtils.html) result 404). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/ui/velocity/VelocityEngineFactory.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/ui/velocity/VelocityEngineFactory.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/ui/velocity/VelocityEngineFactory.html) result 404). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/web/jsf/DelegatingVariableResolver.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/jsf/DelegatingVariableResolver.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/web/jsf/DelegatingVariableResolver.html) result 404). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/web/struts/ActionSupport.html (301) with 2 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/struts/ActionSupport.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/web/struts/ActionSupport.html) result 404). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/web/struts/ContextLoaderPlugIn.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/struts/ContextLoaderPlugIn.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/web/struts/ContextLoaderPlugIn.html) result 404). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/web/struts/DelegatingActionProxy.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/struts/DelegatingActionProxy.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/web/struts/DelegatingActionProxy.html) result 404). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/web/struts/DelegatingRequestProcessor.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/struts/DelegatingRequestProcessor.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/web/struts/DelegatingRequestProcessor.html) result 404). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/web/struts/DelegatingTilesRequestProcessor.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/struts/DelegatingTilesRequestProcessor.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/web/struts/DelegatingTilesRequestProcessor.html) result 404). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/web/struts/DispatchActionSupport.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/struts/DispatchActionSupport.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/web/struts/DispatchActionSupport.html) result 404). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/web/struts/LookupDispatchActionSupport.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/struts/LookupDispatchActionSupport.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/web/struts/LookupDispatchActionSupport.html) result 404). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/web/struts/MappingDispatchActionSupport.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/struts/MappingDispatchActionSupport.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/web/struts/MappingDispatchActionSupport.html) result 404). * [ ] http://static.springsource.org/spring/docs/current/api/org/springframework/context/access/ContextSingletonBeanFactoryLocator.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring/docs/current/api/org/springframework/context/access/ContextSingletonBeanFactoryLocator.html ([https](https://static.springsource.org/spring/docs/current/api/org/springframework/context/access/ContextSingletonBeanFactoryLocator.html) result 404). * [ ] http://static.springsource.org/spring/docs/current/api/org/springframework/context/support/ClassPathXmlApplicationContext.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring/docs/current/api/org/springframework/context/support/ClassPathXmlApplicationContext.html ([https](https://static.springsource.org/spring/docs/current/api/org/springframework/context/support/ClassPathXmlApplicationContext.html) result 404). * [ ] http://static.springsource.org/spring/docs/current/api/org/springframework/context/support/FileSystemXmlApplicationContext.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring/docs/current/api/org/springframework/context/support/FileSystemXmlApplicationContext.html ([https](https://static.springsource.org/spring/docs/current/api/org/springframework/context/support/FileSystemXmlApplicationContext.html) result 404). * [ ] http://static.springsource.org/spring/docs/current/api/org/springframework/context/support/SimpleThreadScope.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring/docs/current/api/org/springframework/context/support/SimpleThreadScope.html ([https](https://static.springsource.org/spring/docs/current/api/org/springframework/context/support/SimpleThreadScope.html) result 404). * [ ] http://static.springsource.org/spring/docs/current/api/org/springframework/oxm/xstream/XStreamMarshaller.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring/docs/current/api/org/springframework/oxm/xstream/XStreamMarshaller.html ([https](https://static.springsource.org/spring/docs/current/api/org/springframework/oxm/xstream/XStreamMarshaller.html) result 404). * [ ] http://static.springsource.org/spring/docs/current/api/org/springframework/web/client/RestTemplate.html (301) with 8 occurrences migrated to:     https://docs.spring.io/spring/docs/current/api/org/springframework/web/client/RestTemplate.html ([https](https://static.springsource.org/spring/docs/current/api/org/springframework/web/client/RestTemplate.html) result 404). * [ ] http://example.com/hotel (404) with 1 occurrences migrated to:     https://example.com/hotel ([https](https://example.com/hotel) result 404). * [ ] http://example.com/hotel%20list (404) with 2 occurrences migrated to:     https://example.com/hotel%20list ([https](https://example.com/hotel%20list) result 404). * [ ] http://example.com/hotel%2520list (404) with 1 occurrences migrated to:     https://example.com/hotel%2520list ([https](https://example.com/hotel%2520list) result 404). * [ ] http://example.com/hotels/ (404) with 6 occurrences migrated to:     https://example.com/hotels/ ([https](https://example.com/hotels/) result 404). * [ ] http://example.com/hotels/1/bookings (404) with 1 occurrences migrated to:     https://example.com/hotels/1/bookings ([https](https://example.com/hotels/1/bookings) result 404). * [ ] http://host.com/outsideOfficeHours.html (404) with 1 occurrences migrated to:     https://host.com/outsideOfficeHours.html ([https](https://host.com/outsideOfficeHours.html) result 404). * [ ] http://repository.springsource.com/maven/bundles/release/</url> (404) with 1 occurrences migrated to:     https://repository.springsource.com/maven/bundles/release/</url> ([https](https://repository.springsource.com/maven/bundles/release/</url>) result 404). * [ ] http://blog.springsource.com/2009/03/16/adding-an-atom-view-to-an-application-using-springs-rest-support/ (301) with 1 occurrences migrated to:     https://spring.io/blog/2009/03/16/adding-an-atom-view-to-an-application-using-springs-rest-support/ ([https](https://blog.springsource.com/2009/03/16/adding-an-atom-view-to-an-application-using-springs-rest-support/) result 404). * [ ] http://blog.springsource.com/2011/02/23/spring-3-1-m1-caching/ (301) with 1 occurrences migrated to:     https://spring.io/blog/2011/02/23/spring-3-1-m1-caching/ ([https](https://blog.springsource.com/2011/02/23/spring-3-1-m1-caching/) result 404). * [ ] http://www.example.com/users/ (404) with 1 occurrences migrated to:     https://www.example.com/users/ ([https](https://www.example.com/users/) result 404). * [ ] http://www.example.com/users/fred (404) with 3 occurrences migrated to:     https://www.example.com/users/fred ([https](https://www.example.com/users/fred) result 404). * [ ] http://www.example.com/users/fred.pdf (404) with 1 occurrences migrated to:     https://www.example.com/users/fred.pdf ([https](https://www.example.com/users/fred.pdf) result 404). * [ ] http://www.example.com/users/fred.xml (404) with 1 occurrences migrated to:     https://www.example.com/users/fred.xml ([https](https://www.example.com/users/fred.xml) result 404). * [ ] http://www.springframework.org/schema/beans/factory/xml/support/CustomNamespaceHandlerTests.xsd (404) with 1 occurrences migrated to:     https://www.springframework.org/schema/beans/factory/xml/support/CustomNamespaceHandlerTests.xsd ([https](https://www.springframework.org/schema/beans/factory/xml/support/CustomNamespaceHandlerTests.xsd) result 404). * [ ] http://www.springframework.org/schema/beans/test (404) with 2 occurrences migrated to:     https://www.springframework.org/schema/beans/test ([https](https://www.springframework.org/schema/beans/test) result 404). * [ ] http://www.springframework.org/schema/c (404) with 11 occurrences migrated to:     https://www.springframework.org/schema/c ([https](https://www.springframework.org/schema/c) result 404). * [ ] http://www.springframework.org/schema/jdbc/spring-cache.xsd (404) with 1 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-cache.xsd ([https](https://www.springframework.org/schema/jdbc/spring-cache.xsd) result 404). * [ ] http://www.springframework.org/schema/p (404) with 29 occurrences migrated to:     https://www.springframework.org/schema/p ([https](https://www.springframework.org/schema/p) result 404). * [ ] http://www.springframework.org/spring-ws (404) with 1 occurrences migrated to:     https://www.springframework.org/spring-ws ([https](https://www.springframework.org/spring-ws) result 404). * [ ] http://www.springframework.org/tags (404) with 1 occurrences migrated to:     https://www.springframework.org/tags ([https](https://www.springframework.org/tags) result 404). * [ ] http://www.springframework.org/tags/form (404) with 1 occurrences migrated to:     https://www.springframework.org/tags/form ([https](https://www.springframework.org/tags/form) result 404). * [ ] http://myhost.com/resource/path/myTemplate.txt (500) with 1 occurrences migrated to:     https://myhost.com/resource/path/myTemplate.txt ([https](https://myhost.com/resource/path/myTemplate.txt) result 500). * [ ] http://myhost.com/some/arbitrary/path (500) with 1 occurrences migrated to:     https://myhost.com/some/arbitrary/path ([https](https://myhost.com/some/arbitrary/path) result 500).  ## Fixed Success  These URLs were switched to an https URL with a 2xx status. While the status was successful, your review is still recommended.  * [ ] http://docbook.org/ns/docbook with 100 occurrences migrated to:     https://docbook.org/ns/docbook ([https](https://docbook.org/ns/docbook) result 200). * [ ] http://docs.oracle.com/javase/tutorial/javabeans/advanced/customization.html with 1 occurrences migrated to:     https://docs.oracle.com/javase/tutorial/javabeans/advanced/customization.html ([https](https://docs.oracle.com/javase/tutorial/javabeans/advanced/customization.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/deprecated-list.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/deprecated-list.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/deprecated-list.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/beans/factory/config/BeanReferenceFactoryBean.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/beans/factory/config/BeanReferenceFactoryBean.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/beans/factory/config/BeanReferenceFactoryBean.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/beans/factory/config/CommonsLogFactoryBean.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/beans/factory/config/CommonsLogFactoryBean.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/beans/factory/config/CommonsLogFactoryBean.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/ejb/support/package-summary.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/ejb/support/package-summary.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/ejb/support/package-summary.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/http/HttpStatus.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/http/HttpStatus.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/http/HttpStatus.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/http/converter/xml/XmlAwareFormHttpMessageConverter.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/http/converter/xml/XmlAwareFormHttpMessageConverter.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/http/converter/xml/XmlAwareFormHttpMessageConverter.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/instrument/classloading/oc4j/OC4JLoadTimeWeaver.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/instrument/classloading/oc4j/OC4JLoadTimeWeaver.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/instrument/classloading/oc4j/OC4JLoadTimeWeaver.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/jmx/support/MBeanRegistrationSupport.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/jmx/support/MBeanRegistrationSupport.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/jmx/support/MBeanRegistrationSupport.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/orm/ibatis/package-summary.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/orm/ibatis/package-summary.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/orm/ibatis/package-summary.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/orm/jpa/vendor/TopLinkJpaDialect.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/orm/jpa/vendor/TopLinkJpaDialect.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/orm/jpa/vendor/TopLinkJpaDialect.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/orm/jpa/vendor/TopLinkJpaVendorAdapter.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/orm/jpa/vendor/TopLinkJpaVendorAdapter.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/orm/jpa/vendor/TopLinkJpaVendorAdapter.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/scheduling/backportconcurrent/package-summary.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/scheduling/backportconcurrent/package-summary.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/scheduling/backportconcurrent/package-summary.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/test/context/ContextConfigurationAttributes.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/test/context/ContextConfigurationAttributes.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/test/context/ContextConfigurationAttributes.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/test/context/junit4/AbstractTransactionalJUnit4SpringContextTests.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/test/context/junit4/AbstractTransactionalJUnit4SpringContextTests.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/test/context/junit4/AbstractTransactionalJUnit4SpringContextTests.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/test/context/testng/AbstractTransactionalTestNGSpringContextTests.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/test/context/testng/AbstractTransactionalTestNGSpringContextTests.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/test/context/testng/AbstractTransactionalTestNGSpringContextTests.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/test/jdbc/SimpleJdbcTestUtils.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/test/jdbc/SimpleJdbcTestUtils.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/test/jdbc/SimpleJdbcTestUtils.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/transaction/interceptor/TransactionAspectUtils.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/transaction/interceptor/TransactionAspectUtils.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/transaction/interceptor/TransactionAspectUtils.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/transaction/jta/OC4JJtaTransactionManager.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/transaction/jta/OC4JJtaTransactionManager.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/transaction/jta/OC4JJtaTransactionManager.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/ui/velocity/CommonsLoggingLogSystem.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/ui/velocity/CommonsLoggingLogSystem.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/ui/velocity/CommonsLoggingLogSystem.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/ui/velocity/VelocityEngineUtils.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/ui/velocity/VelocityEngineUtils.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/ui/velocity/VelocityEngineUtils.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/util/CachingMapDecorator.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/util/CachingMapDecorator.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/util/CachingMapDecorator.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/web/jsf/DelegatingVariableResolver.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/web/jsf/DelegatingVariableResolver.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/web/jsf/DelegatingVariableResolver.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/web/jsf/SpringBeanVariableResolver.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/web/jsf/SpringBeanVariableResolver.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/web/jsf/SpringBeanVariableResolver.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerExceptionResolver.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerExceptionResolver.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerExceptionResolver.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/web/servlet/mvc/annotation/DefaultAnnotationHandlerMapping.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/web/servlet/mvc/annotation/DefaultAnnotationHandlerMapping.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/web/servlet/mvc/annotation/DefaultAnnotationHandlerMapping.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/web/servlet/view/ContentNegotiatingViewResolver.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/web/servlet/view/ContentNegotiatingViewResolver.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/web/servlet/view/ContentNegotiatingViewResolver.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/web/util/ExpressionEvaluationUtils.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/web/util/ExpressionEvaluationUtils.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/web/util/ExpressionEvaluationUtils.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/web/util/UriUtils.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/web/util/UriUtils.html ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RELEASE/javadoc-api/org/springframework/web/util/UriUtils.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/BeanFactory.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/BeanFactory.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/BeanFactory.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/annotation/CustomAutowireConfigurer.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/annotation/CustomAutowireConfigurer.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/annotation/CustomAutowireConfigurer.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/annotation/RequiredAnnotationBeanPostProcessor.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/annotation/RequiredAnnotationBeanPostProcessor.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/annotation/RequiredAnnotationBeanPostProcessor.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/config/FieldRetrievingFactoryBean.html (301) with 3 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/config/FieldRetrievingFactoryBean.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/config/FieldRetrievingFactoryBean.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/config/Scope.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/config/Scope.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/config/Scope.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/support/BeanNameGenerator.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/support/BeanNameGenerator.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/support/BeanNameGenerator.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/context/ApplicationContext.html (301) with 2 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/context/ApplicationContext.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/context/ApplicationContext.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/context/annotation/ScopeMetadataResolver.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/context/annotation/ScopeMetadataResolver.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/context/annotation/ScopeMetadataResolver.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/jca/context/SpringContextResourceAdapter.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/jca/context/SpringContextResourceAdapter.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/jca/context/SpringContextResourceAdapter.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/jndi/support/SimpleJndiBeanFactory.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/jndi/support/SimpleJndiBeanFactory.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/jndi/support/SimpleJndiBeanFactory.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/scheduling/quartz/SchedulerFactoryBean.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/scheduling/quartz/SchedulerFactoryBean.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/scheduling/quartz/SchedulerFactoryBean.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/validation/DefaultMessageCodesResolver.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/validation/DefaultMessageCodesResolver.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/validation/DefaultMessageCodesResolver.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/validation/MessageCodesResolver.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/validation/MessageCodesResolver.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/validation/MessageCodesResolver.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/web/context/ContextLoaderListener.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/context/ContextLoaderListener.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/web/context/ContextLoaderListener.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/web/context/WebApplicationContext.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/context/WebApplicationContext.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/web/context/WebApplicationContext.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/web/context/support/WebApplicationContextUtils.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/context/support/WebApplicationContextUtils.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/web/context/support/WebApplicationContextUtils.html) result 200). * [ ] http://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/web/jsf/FacesContextUtils.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/jsf/FacesContextUtils.html ([https](https://static.springsource.org/spring-framework/docs/current/javadoc-api/org/springframework/web/jsf/FacesContextUtils.html) result 200). * [ ] http://static.springsource.org/spring-gemfire/docs/1.0.0.RELEASE/reference/html/ (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-gemfire/docs/1.0.0.RELEASE/reference/html/ ([https](https://static.springsource.org/spring-gemfire/docs/1.0.0.RELEASE/reference/html/) result 200). * [ ] http://static.springsource.org/spring-security/site/ (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-security/site/ ([https](https://static.springsource.org/spring-security/site/) result 200). * [ ] http://en.wikipedia.org/wiki/Adapter_pattern with 1 occurrences migrated to:     https://en.wikipedia.org/wiki/Adapter_pattern ([https](https://en.wikipedia.org/wiki/Adapter_pattern) result 200). * [ ] http://en.wikipedia.org/wiki/Cache with 1 occurrences migrated to:     https://en.wikipedia.org/wiki/Cache ([https](https://en.wikipedia.org/wiki/Cache) result 200). * [ ] http://en.wikipedia.org/wiki/Content_negotiation with 1 occurrences migrated to:     https://en.wikipedia.org/wiki/Content_negotiation ([https](https://en.wikipedia.org/wiki/Content_negotiation) result 200). * [ ] http://en.wikipedia.org/wiki/HTTP_ETag with 1 occurrences migrated to:     https://en.wikipedia.org/wiki/HTTP_ETag ([https](https://en.wikipedia.org/wiki/HTTP_ETag) result 200). * [ ] http://en.wikipedia.org/wiki/Internet_media_type with 1 occurrences migrated to:     https://en.wikipedia.org/wiki/Internet_media_type ([https](https://en.wikipedia.org/wiki/Internet_media_type) result 200). * [ ] http://en.wikipedia.org/wiki/Mock_Object with 1 occurrences migrated to:     https://en.wikipedia.org/wiki/Mock_Object ([https](https://en.wikipedia.org/wiki/Mock_Object) result 200). * [ ] http://example.com with 1 occurrences migrated to:     https://example.com ([https](https://example.com) result 200). * [ ] http://www.hibernate.org/ (301) with 1 occurrences migrated to:     https://hibernate.org/ ([https](https://www.hibernate.org/) result 200). * [ ] http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd (301) with 2 occurrences migrated to:     https://hibernate.org/dtd/hibernate-mapping-3.0.dtd ([https](https://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd) result 200). * [ ] http://ibatis.apache.org/ with 1 occurrences migrated to:     https://ibatis.apache.org/ ([https](https://ibatis.apache.org/) result 200). * [ ] http://jcp.org/aboutJava/communityprocess/final/jsr003/index3.html with 1 occurrences migrated to:     https://jcp.org/aboutJava/communityprocess/final/jsr003/index3.html ([https](https://jcp.org/aboutJava/communityprocess/final/jsr003/index3.html) result 200). * [ ] http://jcp.org/aboutJava/communityprocess/final/jsr160/index.html with 1 occurrences migrated to:     https://jcp.org/aboutJava/communityprocess/final/jsr160/index.html ([https](https://jcp.org/aboutJava/communityprocess/final/jsr160/index.html) result 200). * [ ] http://jcp.org/en/jsr/detail?id=107 with 1 occurrences migrated to:     https://jcp.org/en/jsr/detail?id=107 ([https](https://jcp.org/en/jsr/detail?id=107) result 200). * [ ] http://jcp.org/en/jsr/detail?id=303 with 1 occurrences migrated to:     https://jcp.org/en/jsr/detail?id=303 ([https](https://jcp.org/en/jsr/detail?id=303) result 200). * [ ] http://logback.qos.ch with 1 occurrences migrated to:     https://logback.qos.ch ([https](https://logback.qos.ch) result 200). * [ ] http://martinfowler.com/articles/injection.html with 2 occurrences migrated to:     https://martinfowler.com/articles/injection.html ([https](https://martinfowler.com/articles/injection.html) result 200). * [ ] http://myfaces.apache.org/ with 1 occurrences migrated to:     https://myfaces.apache.org/ ([https](https://myfaces.apache.org/) result 200). * [ ] http://myfaces.apache.org/orchestra/ with 1 occurrences migrated to:     https://myfaces.apache.org/orchestra/ ([https](https://myfaces.apache.org/orchestra/) result 200). * [ ] http://repo1.maven.org/maven2/javax/inject/javax.inject/1/ with 2 occurrences migrated to:     https://repo1.maven.org/maven2/javax/inject/javax.inject/1/ ([https](https://repo1.maven.org/maven2/javax/inject/javax.inject/1/) result 200). * [ ] http://repository.springsource.com/ivy/bundles/external/ with 2 occurrences migrated to:     https://repository.springsource.com/ivy/bundles/external/ ([https](https://repository.springsource.com/ivy/bundles/external/) result 200). * [ ] http://repository.springsource.com/ivy/bundles/release/ with 2 occurrences migrated to:     https://repository.springsource.com/ivy/bundles/release/ ([https](https://repository.springsource.com/ivy/bundles/release/) result 200). * [ ] http://static.springsource.org/schema/mvc/spring-mvc.xsd (301) with 1 occurrences migrated to:     https://schema.spring.io/mvc/spring-mvc.xsd ([https](https://static.springsource.org/schema/mvc/spring-mvc.xsd) result 200). * [ ] http://blog.springsource.com/2004/08/06/method-injection/ (301) with 1 occurrences migrated to:     https://spring.io/blog/2004/08/06/method-injection/ ([https](https://blog.springsource.com/2004/08/06/method-injection/) result 200). * [ ] http://blog.springsource.com/2007/06/11/using-a-shared-parent-application-context-in-a-multi-war-spring-application/ (301) with 1 occurrences migrated to:     https://spring.io/blog/2007/06/11/using-a-shared-parent-application-context-in-a-multi-war-spring-application/ ([https](https://blog.springsource.com/2007/06/11/using-a-shared-parent-application-context-in-a-multi-war-spring-application/) result 200). * [ ] http://blog.springsource.com/2011/02/11/spring-framework-3-1-m1-released/ (301) with 2 occurrences migrated to:     https://spring.io/blog/2011/02/11/spring-framework-3-1-m1-released/ ([https](https://blog.springsource.com/2011/02/11/spring-framework-3-1-m1-released/) result 200). * [ ] http://blog.springsource.com/2011/02/14/spring-3-1-m1-introducing-profile/ (301) with 1 occurrences migrated to:     https://spring.io/blog/2011/02/14/spring-3-1-m1-introducing-profile/ ([https](https://blog.springsource.com/2011/02/14/spring-3-1-m1-introducing-profile/) result 200). * [ ] http://blog.springsource.com/2011/02/15/spring-3-1-m1-unified-property-management/ (301) with 1 occurrences migrated to:     https://spring.io/blog/2011/02/15/spring-3-1-m1-unified-property-management/ ([https](https://blog.springsource.com/2011/02/15/spring-3-1-m1-unified-property-management/) result 200). * [ ] http://blog.springsource.com/2011/06/21/spring-3-1-m2-testing-with-configuration-classes-and-profiles/ (301) with 1 occurrences migrated to:     https://spring.io/blog/2011/06/21/spring-3-1-m2-testing-with-configuration-classes-and-profiles/ ([https](https://blog.springsource.com/2011/06/21/spring-3-1-m2-testing-with-configuration-classes-and-profiles/) result 200). * [ ] http://struts.apache.org with 1 occurrences migrated to:     https://struts.apache.org ([https](https://struts.apache.org) result 200). * [ ] http://struts.apache.org/ with 2 occurrences migrated to:     https://struts.apache.org/ ([https](https://struts.apache.org/) result 200). * [ ] http://subversion.apache.org/ with 1 occurrences migrated to:     https://subversion.apache.org/ ([https](https://subversion.apache.org/) result 200). * [ ] http://tapestry.apache.org/ with 3 occurrences migrated to:     https://tapestry.apache.org/ ([https](https://tapestry.apache.org/) result 200). * [ ] http://testng.org/ with 1 occurrences migrated to:     https://testng.org/ ([https](https://testng.org/) result 200). * [ ] http://tiles.apache.org with 1 occurrences migrated to:     https://tiles.apache.org ([https](https://tiles.apache.org) result 200). * [ ] http://tiles.apache.org/dtds/tiles-config_2_0.dtd with 1 occurrences migrated to:     https://tiles.apache.org/dtds/tiles-config_2_0.dtd ([https](https://tiles.apache.org/dtds/tiles-config_2_0.dtd) result 200). * [ ] http://tiles.apache.org/dtds/tiles-config_2_1.dtd with 2 occurrences migrated to:     https://tiles.apache.org/dtds/tiles-config_2_1.dtd ([https](https://tiles.apache.org/dtds/tiles-config_2_1.dtd) result 200). * [ ] http://tiles.apache.org/dtds/tiles-config_3_0.dtd with 3 occurrences migrated to:     https://tiles.apache.org/dtds/tiles-config_3_0.dtd ([https](https://tiles.apache.org/dtds/tiles-config_3_0.dtd) result 200). * [ ] http://tomcat.apache.org/ with 1 occurrences migrated to:     https://tomcat.apache.org/ ([https](https://tomcat.apache.org/) result 200). * [ ] http://tomcat.apache.org/tomcat-5.5-doc/config/context.html with 1 occurrences migrated to:     https://tomcat.apache.org/tomcat-5.5-doc/config/context.html ([https](https://tomcat.apache.org/tomcat-5.5-doc/config/context.html) result 200). * [ ] http://tomcat.apache.org/tomcat-6.0-doc/config/context.html with 1 occurrences migrated to:     https://tomcat.apache.org/tomcat-6.0-doc/config/context.html ([https](https://tomcat.apache.org/tomcat-6.0-doc/config/context.html) result 200). * [ ] http://tools.ietf.org/html/rfc3986 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc3986 ([https](https://tools.ietf.org/html/rfc3986) result 200). * [ ] http://velocity.apache.org with 2 occurrences migrated to:     https://velocity.apache.org ([https](https://velocity.apache.org) result 200). * [ ] http://www.atomikos.com/ with 1 occurrences migrated to:     https://www.atomikos.com/ ([https](https://www.atomikos.com/) result 200). * [ ] http://www.eclipse.org/ with 1 occurrences migrated to:     https://www.eclipse.org/ ([https](https://www.eclipse.org/) result 200). * [ ] http://www.eclipse.org/ajdt/ with 1 occurrences migrated to:     https://www.eclipse.org/ajdt/ ([https](https://www.eclipse.org/ajdt/) result 200). * [ ] http://www.eclipse.org/aspectj/doc/next/progguide/index.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/next/progguide/index.html ([https](https://www.eclipse.org/aspectj/doc/next/progguide/index.html) result 200). * [ ] http://www.eclipse.org/aspectj/doc/next/progguide/semantics-joinPoints.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/next/progguide/semantics-joinPoints.html ([https](https://www.eclipse.org/aspectj/doc/next/progguide/semantics-joinPoints.html) result 200). * [ ] http://www.eclipse.org/aspectj/doc/released/adk15notebook/index.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/released/adk15notebook/index.html ([https](https://www.eclipse.org/aspectj/doc/released/adk15notebook/index.html) result 200). * [ ] http://www.eclipse.org/aspectj/doc/released/devguide/antTasks.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/released/devguide/antTasks.html ([https](https://www.eclipse.org/aspectj/doc/released/devguide/antTasks.html) result 200). * [ ] http://www.eclipse.org/aspectj/doc/released/devguide/index.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/released/devguide/index.html ([https](https://www.eclipse.org/aspectj/doc/released/devguide/index.html) result 200). * [ ] http://www.eclipse.org/aspectj/doc/released/devguide/ltw-configuration.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/released/devguide/ltw-configuration.html ([https](https://www.eclipse.org/aspectj/doc/released/devguide/ltw-configuration.html) result 200). * [ ] http://www.eclipse.org/aspectj/doc/released/devguide/ltw.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/released/devguide/ltw.html ([https](https://www.eclipse.org/aspectj/doc/released/devguide/ltw.html) result 200). * [ ] http://www.eclipse.org/aspectj/doc/released/progguide/index.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/released/progguide/index.html ([https](https://www.eclipse.org/aspectj/doc/released/progguide/index.html) result 200). * [ ] http://www.eclipse.org/aspectj/doc/released/progguide/semantics-pointcuts.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/released/progguide/semantics-pointcuts.html ([https](https://www.eclipse.org/aspectj/doc/released/progguide/semantics-pointcuts.html) result 200). * [ ] http://www.eclipse.org/aspectj/dtd/aspectj.dtd with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/dtd/aspectj.dtd ([https](https://www.eclipse.org/aspectj/dtd/aspectj.dtd) result 200). * [ ] http://www.eclipse.org/jetty/ with 1 occurrences migrated to:     https://www.eclipse.org/jetty/ ([https](https://www.eclipse.org/jetty/) result 200). * [ ] http://www.eclipse.org/webtools/ with 1 occurrences migrated to:     https://www.eclipse.org/webtools/ ([https](https://www.eclipse.org/webtools/) result 200). * [ ] http://ehcache.org/ (301) with 1 occurrences migrated to:     https://www.ehcache.org/ ([https](https://ehcache.org/) result 200). * [ ] http://www.enterpriseintegrationpatterns.com with 1 occurrences migrated to:     https://www.enterpriseintegrationpatterns.com ([https](https://www.enterpriseintegrationpatterns.com) result 200). * [ ] http://www.h2database.com with 1 occurrences migrated to:     https://www.h2database.com ([https](https://www.h2database.com) result 200). * [ ] http://www.infoq.com/ with 1 occurrences migrated to:     https://www.infoq.com/ ([https](https://www.infoq.com/) result 200). * [ ] http://www.infoq.com/minibooks/JTDS with 1 occurrences migrated to:     https://www.infoq.com/minibooks/JTDS ([https](https://www.infoq.com/minibooks/JTDS) result 200). * [ ] http://www.jetbrains.com/idea/ with 2 occurrences migrated to:     https://www.jetbrains.com/idea/ ([https](https://www.jetbrains.com/idea/) result 200). * [ ] http://quartz-scheduler.org (301) with 2 occurrences migrated to:     https://www.quartz-scheduler.org/ ([https](https://quartz-scheduler.org) result 200). * [ ] http://www.slf4j.org with 1 occurrences migrated to:     https://www.slf4j.org ([https](https://www.slf4j.org) result 200). * [ ] http://www.springframework.org/dtd/spring-beans-2.0.dtd with 213 occurrences migrated to:     https://www.springframework.org/dtd/spring-beans-2.0.dtd ([https](https://www.springframework.org/dtd/spring-beans-2.0.dtd) result 200). * [ ] http://www.springframework.org/dtd/spring-beans.dtd with 3 occurrences migrated to:     https://www.springframework.org/dtd/spring-beans.dtd ([https](https://www.springframework.org/dtd/spring-beans.dtd) result 200). * [ ] http://www.springframework.org/schema/aop/spring-aop-2.0.xsd with 71 occurrences migrated to:     https://www.springframework.org/schema/aop/spring-aop-2.0.xsd ([https](https://www.springframework.org/schema/aop/spring-aop-2.0.xsd) result 200). * [ ] http://www.springframework.org/schema/aop/spring-aop-2.5.xsd with 14 occurrences migrated to:     https://www.springframework.org/schema/aop/spring-aop-2.5.xsd ([https](https://www.springframework.org/schema/aop/spring-aop-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/aop/spring-aop-3.0.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/aop/spring-aop-3.0.xsd ([https](https://www.springframework.org/schema/aop/spring-aop-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/aop/spring-aop.xsd with 24 occurrences migrated to:     https://www.springframework.org/schema/aop/spring-aop.xsd ([https](https://www.springframework.org/schema/aop/spring-aop.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-2.0.xsd with 119 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-2.0.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-2.0.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-2.5.xsd with 61 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-2.5.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-3.0.xsd with 11 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-3.0.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-3.1.xsd with 35 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-3.1.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-3.2.xsd with 3 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-3.2.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-3.2.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans.xsd with 150 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans.xsd ([https](https://www.springframework.org/schema/beans/spring-beans.xsd) result 200). * [ ] http://www.springframework.org/schema/cache/spring-cache.xsd with 5 occurrences migrated to:     https://www.springframework.org/schema/cache/spring-cache.xsd ([https](https://www.springframework.org/schema/cache/spring-cache.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-2.5.xsd with 44 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-2.5.xsd ([https](https://www.springframework.org/schema/context/spring-context-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-3.0.xsd with 5 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-3.0.xsd ([https](https://www.springframework.org/schema/context/spring-context-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-3.1.xsd with 7 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-3.1.xsd ([https](https://www.springframework.org/schema/context/spring-context-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context.xsd with 26 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context.xsd ([https](https://www.springframework.org/schema/context/spring-context.xsd) result 200). * [ ] http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd with 12 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd ([https](https://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd with 5 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd ([https](https://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/jdbc/spring-jdbc.xsd with 5 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-jdbc.xsd ([https](https://www.springframework.org/schema/jdbc/spring-jdbc.xsd) result 200). * [ ] http://www.springframework.org/schema/jee/spring-jee-3.1.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/jee/spring-jee-3.1.xsd ([https](https://www.springframework.org/schema/jee/spring-jee-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/jee/spring-jee.xsd with 3 occurrences migrated to:     https://www.springframework.org/schema/jee/spring-jee.xsd ([https](https://www.springframework.org/schema/jee/spring-jee.xsd) result 200). * [ ] http://www.springframework.org/schema/jms/spring-jms-3.1.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/jms/spring-jms-3.1.xsd ([https](https://www.springframework.org/schema/jms/spring-jms-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/jms/spring-jms.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/jms/spring-jms.xsd ([https](https://www.springframework.org/schema/jms/spring-jms.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang-2.0.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang-2.0.xsd ([https](https://www.springframework.org/schema/lang/spring-lang-2.0.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang-2.5.xsd with 4 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang-2.5.xsd ([https](https://www.springframework.org/schema/lang/spring-lang-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang-3.0.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang-3.0.xsd ([https](https://www.springframework.org/schema/lang/spring-lang-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang-3.1.xsd with 7 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang-3.1.xsd ([https](https://www.springframework.org/schema/lang/spring-lang-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang.xsd with 5 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang.xsd ([https](https://www.springframework.org/schema/lang/spring-lang.xsd) result 200). * [ ] http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd with 9 occurrences migrated to:     https://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd ([https](https://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd with 5 occurrences migrated to:     https://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd ([https](https://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd with 5 occurrences migrated to:     https://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd ([https](https://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd) result 200). * [ ] http://www.springframework.org/schema/mvc/spring-mvc.xsd with 8 occurrences migrated to:     https://www.springframework.org/schema/mvc/spring-mvc.xsd ([https](https://www.springframework.org/schema/mvc/spring-mvc.xsd) result 200). * [ ] http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd ([https](https://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/oxm/spring-oxm.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/oxm/spring-oxm.xsd ([https](https://www.springframework.org/schema/oxm/spring-oxm.xsd) result 200). * [ ] http://www.springframework.org/schema/security/spring-security-3.1.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/security/spring-security-3.1.xsd ([https](https://www.springframework.org/schema/security/spring-security-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/task/spring-task-3.0.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/task/spring-task-3.0.xsd ([https](https://www.springframework.org/schema/task/spring-task-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/task/spring-task.xsd with 5 occurrences migrated to:     https://www.springframework.org/schema/task/spring-task.xsd ([https](https://www.springframework.org/schema/task/spring-task.xsd) result 200). * [ ] http://www.springframework.org/schema/tx/spring-tx-2.0.xsd with 4 occurrences migrated to:     https://www.springframework.org/schema/tx/spring-tx-2.0.xsd ([https](https://www.springframework.org/schema/tx/spring-tx-2.0.xsd) result 200). * [ ] http://www.springframework.org/schema/tx/spring-tx-2.5.xsd with 7 occurrences migrated to:     https://www.springframework.org/schema/tx/spring-tx-2.5.xsd ([https](https://www.springframework.org/schema/tx/spring-tx-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/tx/spring-tx.xsd with 16 occurrences migrated to:     https://www.springframework.org/schema/tx/spring-tx.xsd ([https](https://www.springframework.org/schema/tx/spring-tx.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-2.0.xsd with 3 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-2.0.xsd ([https](https://www.springframework.org/schema/util/spring-util-2.0.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-2.5.xsd with 9 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-2.5.xsd ([https](https://www.springframework.org/schema/util/spring-util-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-3.0.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-3.0.xsd ([https](https://www.springframework.org/schema/util/spring-util-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-3.1.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-3.1.xsd ([https](https://www.springframework.org/schema/util/spring-util-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util.xsd with 5 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util.xsd ([https](https://www.springframework.org/schema/util/spring-util.xsd) result 200). * [ ] http://www.w3.org/1999/xlink with 99 occurrences migrated to:     https://www.w3.org/1999/xlink ([https](https://www.w3.org/1999/xlink) result 200). * [ ] http://www.w3.org/2000/svg with 5 occurrences migrated to:     https://www.w3.org/2000/svg ([https](https://www.w3.org/2000/svg) result 200). * [ ] http://www.w3.org/2001/XMLSchema with 5 occurrences migrated to:     https://www.w3.org/2001/XMLSchema ([https](https://www.w3.org/2001/XMLSchema) result 200). * [ ] http://www.w3.org/2001/XMLSchema-instance with 448 occurrences migrated to:     https://www.w3.org/2001/XMLSchema-instance ([https](https://www.w3.org/2001/XMLSchema-instance) result 200). * [ ] http://www.w3.org/DesignIssues/MatrixURIs.html with 1 occurrences migrated to:     https://www.w3.org/DesignIssues/MatrixURIs.html ([https](https://www.w3.org/DesignIssues/MatrixURIs.html) result 200). * [ ] http://www.w3.org/TR/2004/REC-xmlschema-1-20041028/ with 1 occurrences migrated to:     https://www.w3.org/TR/2004/REC-xmlschema-1-20041028/ ([https](https://www.w3.org/TR/2004/REC-xmlschema-1-20041028/) result 200). * [ ] http://www.w3.org/TR/2004/REC-xmlschema-2-20041028/ with 1 occurrences migrated to:     https://www.w3.org/TR/2004/REC-xmlschema-2-20041028/ ([https](https://www.w3.org/TR/2004/REC-xmlschema-2-20041028/) result 200). * [ ] http://www.w3.org/TR/xhtml1/ with 2 occurrences migrated to:     https://www.w3.org/TR/xhtml1/ ([https](https://www.w3.org/TR/xhtml1/) result 200). * [ ] http://www.w3.org/TR/xhtml1/dtds.html with 2 occurrences migrated to:     https://www.w3.org/TR/xhtml1/dtds.html ([https](https://www.w3.org/TR/xhtml1/dtds.html) result 200). * [ ] http://xmlbeans.apache.org/ with 1 occurrences migrated to:     https://xmlbeans.apache.org/ ([https](https://xmlbeans.apache.org/) result 200). * [ ] http://ant.apache.org/ivy with 1 occurrences migrated to:     https://ant.apache.org/ivy ([https](https://ant.apache.org/ivy) result 301). * [ ] http://bit.ly/lrDHja with 1 occurrences migrated to:     https://bit.ly/lrDHja ([https](https://bit.ly/lrDHja) result 301). * [ ] http://blog.springsource.org/2012/05/06/spring-mvc-3-2-preview-introducing-servlet-3-async-support/ with 1 occurrences migrated to:     https://blog.springsource.org/2012/05/06/spring-mvc-3-2-preview-introducing-servlet-3-async-support/ ([https](https://blog.springsource.org/2012/05/06/spring-mvc-3-2-preview-introducing-servlet-3-async-support/) result 301). * [ ] http://db.apache.org/derby with 1 occurrences migrated to:     https://db.apache.org/derby ([https](https://db.apache.org/derby) result 301). * [ ] http://static.springsource.org/spring-framework/docs/3.1.3.RELEASE_to_3.2.0.RELEASE (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.1.3.RELEASE_to_3.2.0.RELEASE ([https](https://static.springsource.org/spring-framework/docs/3.1.3.RELEASE_to_3.2.0.RELEASE) result 301). * [ ] http://static.springsource.org/spring-framework/docs/3.2.0.RC2_to_3.2.0.RELEASE (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.0.RC2_to_3.2.0.RELEASE ([https](https://static.springsource.org/spring-framework/docs/3.2.0.RC2_to_3.2.0.RELEASE) result 301). * [ ] http://forum.springsource.org/ (301) with 2 occurrences migrated to:     https://forum.spring.io/ ([https](https://forum.springsource.org/) result 301). * [ ] http://forum.springframework.org/forumdisplay.php?f=25 with 1 occurrences migrated to:     https://forum.springframework.org/forumdisplay.php?f=25 ([https](https://forum.springframework.org/forumdisplay.php?f=25) result 301). * [ ] http://issues.apache.org/bugzilla/show_bug.cgi?id=39704 with 1 occurrences migrated to:     https://issues.apache.org/bugzilla/show_bug.cgi?id=39704 ([https](https://issues.apache.org/bugzilla/show_bug.cgi?id=39704) result 301). * [ ] http://jakarta.apache.org/commons/fileupload with 2 occurrences migrated to:     https://jakarta.apache.org/commons/fileupload ([https](https://jakarta.apache.org/commons/fileupload) result 301). * [ ] http://jakarta.apache.org/commons/httpclient with 1 occurrences migrated to:     https://jakarta.apache.org/commons/httpclient ([https](https://jakarta.apache.org/commons/httpclient) result 301). * [ ] http://jakarta.apache.org/log4j/ with 19 occurrences migrated to:     https://jakarta.apache.org/log4j/ ([https](https://jakarta.apache.org/log4j/) result 301). * [ ] http://jakarta.apache.org/struts/dtds/tiles-config_1_1.dtd with 1 occurrences migrated to:     https://jakarta.apache.org/struts/dtds/tiles-config_1_1.dtd ([https](https://jakarta.apache.org/struts/dtds/tiles-config_1_1.dtd) result 301). * [ ] http://jakarta.apache.org/tapestry/dtd/Tapestry_3_0.dtd with 2 occurrences migrated to:     https://jakarta.apache.org/tapestry/dtd/Tapestry_3_0.dtd ([https](https://jakarta.apache.org/tapestry/dtd/Tapestry_3_0.dtd) result 301). * [ ] http://jira.springframework.org with 2 occurrences migrated to:     https://jira.springframework.org ([https](https://jira.springframework.org) result 301). * [ ] http://jira.springframework.org/ with 1 occurrences migrated to:     https://jira.springframework.org/ ([https](https://jira.springframework.org/) result 301). * [ ] http://jira.springsource.org/SPR with 1 occurrences migrated to:     https://jira.springsource.org/SPR ([https](https://jira.springsource.org/SPR) result 301). * [ ] http://logging.apache.org/log4j with 1 occurrences migrated to:     https://logging.apache.org/log4j ([https](https://logging.apache.org/log4j) result 301). * [ ] http://maven.apache.org/plugins/maven-surefire-plugin/test-mojo.html with 1 occurrences migrated to:     https://maven.apache.org/plugins/maven-surefire-plugin/test-mojo.html ([https](https://maven.apache.org/plugins/maven-surefire-plugin/test-mojo.html) result 301). * [ ] http://mockito.org/ (301) with 1 occurrences migrated to:     https://mockito.github.io ([https](https://mockito.org/) result 301). * [ ] http://opensource.atlassian.com/projects/spring/secure/Dashboard.jspa with 3 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/secure/Dashboard.jspa ([https](https://opensource.atlassian.com/projects/spring/secure/Dashboard.jspa) result 301). * [ ] http://repo.springsource.org/milestone/</url> with 1 occurrences migrated to:     https://repo.springsource.org/milestone/</url> ([https](https://repo.springsource.org/milestone/</url>) result 301). * [ ] http://repo.springsource.org/release/</url> with 1 occurrences migrated to:     https://repo.springsource.org/release/</url> ([https](https://repo.springsource.org/release/</url>) result 301). * [ ] http://repo.springsource.org/snapshot/</url> with 1 occurrences migrated to:     https://repo.springsource.org/snapshot/</url> ([https](https://repo.springsource.org/snapshot/</url>) result 301). * [ ] http://sourceforge.net/tracker/index.php?func=detail&aid=1088866&group_id=39190&atid=424562 with 1 occurrences migrated to:     https://sourceforge.net/tracker/index.php?func=detail&aid=1088866&group_id=39190&atid=424562 ([https](https://sourceforge.net/tracker/index.php?func=detail&aid=1088866&group_id=39190&atid=424562) result 301). * [ ] http://springsource.org/spring-integration with 1 occurrences migrated to:     https://springsource.org/spring-integration ([https](https://springsource.org/spring-integration) result 301). * [ ] http://www-01.ibm.com/software/webservers/appserv/was/ with 1 occurrences migrated to:     https://www-01.ibm.com/software/webservers/appserv/was/ ([https](https://www-01.ibm.com/software/webservers/appserv/was/) result 301). * [ ] http://www.docbook.org/xml/5.0/xsd/docbook.xsd with 49 occurrences migrated to:     https://www.docbook.org/xml/5.0/xsd/docbook.xsd ([https](https://www.docbook.org/xml/5.0/xsd/docbook.xsd) result 301). * [ ] http://www.docbook.org/xml/5.0/xsd/xlink.xsd with 49 occurrences migrated to:     https://www.docbook.org/xml/5.0/xsd/xlink.xsd ([https](https://www.docbook.org/xml/5.0/xsd/xlink.xsd) result 301). * [ ] http://www.eclipse.org/aspectj with 2 occurrences migrated to:     https://www.eclipse.org/aspectj ([https](https://www.eclipse.org/aspectj) result 301). * [ ] http://www.javaworld.com/javaworld/jw-01-2009/jw-01-spring-transactions.html with 1 occurrences migrated to:     https://www.javaworld.com/javaworld/jw-01-2009/jw-01-spring-transactions.html ([https](https://www.javaworld.com/javaworld/jw-01-2009/jw-01-spring-transactions.html) result 301). * [ ] http://www.jboss.org/jbossas/ with 1 occurrences migrated to:     https://www.jboss.org/jbossas/ ([https](https://www.jboss.org/jbossas/) result 301). * [ ] http://www.junit.org/ with 1 occurrences migrated to:     https://www.junit.org/ ([https](https://www.junit.org/) result 301). * [ ] http://www.bea.com/framework.jsp?CNT=index.htm&FP=/content/products/weblogic/server (301) with 1 occurrences migrated to:     https://www.oracle.com/bea/index.html?CNT=index.htm&FP=/content/products/weblogic/server ([https](https://www.bea.com/framework.jsp?CNT=index.htm&FP=/content/products/weblogic/server) result 301). * [ ] http://www.oracle.com/technology/products/oc4j/index.html with 1 occurrences migrated to:     https://www.oracle.com/technology/products/oc4j/index.html ([https](https://www.oracle.com/technology/products/oc4j/index.html) result 301). * [ ] http://www.sf.net/home.view?siteLanguage=nl with 1 occurrences migrated to:     https://www.sf.net/home.view?siteLanguage=nl ([https](https://www.sf.net/home.view?siteLanguage=nl) result 301). * [ ] http://www.springframework.org with 1 occurrences migrated to:     https://www.springframework.org ([https](https://www.springframework.org) result 301). * [ ] http://www.springframework.org/schema/aop with 221 occurrences migrated to:     https://www.springframework.org/schema/aop ([https](https://www.springframework.org/schema/aop) result 301). * [ ] http://www.springframework.org/schema/beans with 762 occurrences migrated to:     https://www.springframework.org/schema/beans ([https](https://www.springframework.org/schema/beans) result 301). * [ ] http://www.springframework.org/schema/cache with 12 occurrences migrated to:     https://www.springframework.org/schema/cache ([https](https://www.springframework.org/schema/cache) result 301). * [ ] http://www.springframework.org/schema/context with 164 occurrences migrated to:     https://www.springframework.org/schema/context ([https](https://www.springframework.org/schema/context) result 301). * [ ] http://www.springframework.org/schema/jdbc with 45 occurrences migrated to:     https://www.springframework.org/schema/jdbc ([https](https://www.springframework.org/schema/jdbc) result 301). * [ ] http://www.springframework.org/schema/jee with 9 occurrences migrated to:     https://www.springframework.org/schema/jee ([https](https://www.springframework.org/schema/jee) result 301). * [ ] http://www.springframework.org/schema/jms with 6 occurrences migrated to:     https://www.springframework.org/schema/jms ([https](https://www.springframework.org/schema/jms) result 301). * [ ] http://www.springframework.org/schema/lang with 38 occurrences migrated to:     https://www.springframework.org/schema/lang ([https](https://www.springframework.org/schema/lang) result 301). * [ ] http://www.springframework.org/schema/mvc with 54 occurrences migrated to:     https://www.springframework.org/schema/mvc ([https](https://www.springframework.org/schema/mvc) result 301). * [ ] http://www.springframework.org/schema/oxm with 4 occurrences migrated to:     https://www.springframework.org/schema/oxm ([https](https://www.springframework.org/schema/oxm) result 301). * [ ] http://www.springframework.org/schema/security with 2 occurrences migrated to:     https://www.springframework.org/schema/security ([https](https://www.springframework.org/schema/security) result 301). * [ ] http://www.springframework.org/schema/task with 12 occurrences migrated to:     https://www.springframework.org/schema/task ([https](https://www.springframework.org/schema/task) result 301). * [ ] http://www.springframework.org/schema/tx with 54 occurrences migrated to:     https://www.springframework.org/schema/tx ([https](https://www.springframework.org/schema/tx) result 301). * [ ] http://www.springframework.org/schema/util with 43 occurrences migrated to:     https://www.springframework.org/schema/util ([https](https://www.springframework.org/schema/util) result 301). * [ ] http://www.springframework.org/webflow with 2 occurrences migrated to:     https://www.springframework.org/webflow ([https](https://www.springframework.org/webflow) result 301). * [ ] http://www.springsource.com/products/sts with 4 occurrences migrated to:     https://www.springsource.com/products/sts ([https](https://www.springsource.com/products/sts) result 301). * [ ] http://www.springsource.com/repository with 4 occurrences migrated to:     https://www.springsource.com/repository ([https](https://www.springsource.com/repository) result 301). * [ ] http://www.springsource.com/repository/app/faq with 1 occurrences migrated to:     https://www.springsource.com/repository/app/faq ([https](https://www.springsource.com/repository/app/faq) result 301). * [ ] http://www.springsource.org/documentation with 2 occurrences migrated to:     https://www.springsource.org/documentation ([https](https://www.springsource.org/documentation) result 301). * [ ] http://www.springsource.org/javaconfig with 3 occurrences migrated to:     https://www.springsource.org/javaconfig ([https](https://www.springsource.org/javaconfig) result 301). * [ ] http://www.springsource.org/roo with 1 occurrences migrated to:     https://www.springsource.org/roo ([https](https://www.springsource.org/roo) result 301). * [ ] http://www.springsource.org/springframework-ebr with 1 occurrences migrated to:     https://www.springsource.org/springframework-ebr ([https](https://www.springsource.org/springframework-ebr) result 301). * [ ] http://www.w3.org/1998/Math/MathML with 1 occurrences migrated to:     https://www.w3.org/1998/Math/MathML ([https](https://www.w3.org/1998/Math/MathML) result 301). * [ ] http://www.w3.org/2001/XInclude with 97 occurrences migrated to:     https://www.w3.org/2001/XInclude ([https](https://www.w3.org/2001/XInclude) result 301). * [ ] http://download.oracle.com/javaee/6/api/javax/inject/Scope.html with 1 occurrences migrated to:     https://download.oracle.com/javaee/6/api/javax/inject/Scope.html ([https](https://download.oracle.com/javaee/6/api/javax/inject/Scope.html) result 302). * [ ] http://download.oracle.com/javase/6/docs/api/java/beans/ConstructorProperties.html with 1 occurrences migrated to:     https://download.oracle.com/javase/6/docs/api/java/beans/ConstructorProperties.html ([https](https://download.oracle.com/javase/6/docs/api/java/beans/ConstructorProperties.html) result 302). * [ ] http://glassfish.dev.java.net/ with 1 occurrences migrated to:     https://glassfish.dev.java.net/ ([https](https://glassfish.dev.java.net/) result 302). * [ ] http://java.sun.com/developer/technicalArticles/J2EE/jpa/index.html with 1 occurrences migrated to:     https://java.sun.com/developer/technicalArticles/J2EE/jpa/index.html ([https](https://java.sun.com/developer/technicalArticles/J2EE/jpa/index.html) result 302). * [ ] http://java.sun.com/developer/technicalArticles/J2SE/jmx.html with 1 occurrences migrated to:     https://java.sun.com/developer/technicalArticles/J2SE/jmx.html ([https](https://java.sun.com/developer/technicalArticles/J2SE/jmx.html) result 302). * [ ] http://java.sun.com/dtd/properties.dtd with 4 occurrences migrated to:     https://java.sun.com/dtd/properties.dtd ([https](https://java.sun.com/dtd/properties.dtd) result 302). * [ ] http://java.sun.com/j2se/1.5.0/docs/api/java/io/Serializable.html with 1 occurrences migrated to:     https://java.sun.com/j2se/1.5.0/docs/api/java/io/Serializable.html ([https](https://java.sun.com/j2se/1.5.0/docs/api/java/io/Serializable.html) result 302). * [ ] http://java.sun.com/j2se/1.5.0/docs/api/java/lang/instrument/package-summary.html with 2 occurrences migrated to:     https://java.sun.com/j2se/1.5.0/docs/api/java/lang/instrument/package-summary.html ([https](https://java.sun.com/j2se/1.5.0/docs/api/java/lang/instrument/package-summary.html) result 302). * [ ] http://java.sun.com/javaee/javaserverfaces/ with 2 occurrences migrated to:     https://java.sun.com/javaee/javaserverfaces/ ([https](https://java.sun.com/javaee/javaserverfaces/) result 302). * [ ] http://java.sun.com/javase/6/docs/api/java/util/concurrent/ThreadPoolExecutor.html with 1 occurrences migrated to:     https://java.sun.com/javase/6/docs/api/java/util/concurrent/ThreadPoolExecutor.html ([https](https://java.sun.com/javase/6/docs/api/java/util/concurrent/ThreadPoolExecutor.html) result 302). * [ ] http://java.sun.com/products/JavaManagement/ with 1 occurrences migrated to:     https://java.sun.com/products/JavaManagement/ ([https](https://java.sun.com/products/JavaManagement/) result 302). * [ ] http://java.sun.com/products/javabeans/ with 1 occurrences migrated to:     https://java.sun.com/products/javabeans/ ([https](https://java.sun.com/products/javabeans/) result 302). * [ ] http://java.sun.com/products/javabeans/docs/spec.html with 1 occurrences migrated to:     https://java.sun.com/products/javabeans/docs/spec.html ([https](https://java.sun.com/products/javabeans/docs/spec.html) result 302). * [ ] http://java.sun.com/products/javabeans/jaf/downloads/index.html with 1 occurrences migrated to:     https://java.sun.com/products/javabeans/jaf/downloads/index.html ([https](https://java.sun.com/products/javabeans/jaf/downloads/index.html) result 302). * [ ] http://java.sun.com/products/javamail/ with 1 occurrences migrated to:     https://java.sun.com/products/javamail/ ([https](https://java.sun.com/products/javamail/) result 302). * [ ] http://java.sun.com/xml/ns/j2ee with 2 occurrences migrated to:     https://java.sun.com/xml/ns/j2ee ([https](https://java.sun.com/xml/ns/j2ee) result 302). * [ ] http://java.sun.com/xml/ns/j2ee/connector_1_5.xsd with 1 occurrences migrated to:     https://java.sun.com/xml/ns/j2ee/connector_1_5.xsd ([https](https://java.sun.com/xml/ns/j2ee/connector_1_5.xsd) result 302). * [ ] http://java.sun.com/xml/ns/javaee with 4 occurrences migrated to:     https://java.sun.com/xml/ns/javaee ([https](https://java.sun.com/xml/ns/javaee) result 302). * [ ] http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd with 1 occurrences migrated to:     https://java.sun.com/xml/ns/javaee/web-app_3_0.xsd ([https](https://java.sun.com/xml/ns/javaee/web-app_3_0.xsd) result 302). * [ ] http://java.sun.com/xml/ns/javaee/web-fragment_3_0.xsd with 1 occurrences migrated to:     https://java.sun.com/xml/ns/javaee/web-fragment_3_0.xsd ([https](https://java.sun.com/xml/ns/javaee/web-fragment_3_0.xsd) result 302). * [ ] http://java.sun.com/xml/ns/persistence with 28 occurrences migrated to:     https://java.sun.com/xml/ns/persistence ([https](https://java.sun.com/xml/ns/persistence) result 302). * [ ] http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd with 12 occurrences migrated to:     https://java.sun.com/xml/ns/persistence/persistence_1_0.xsd ([https](https://java.sun.com/xml/ns/persistence/persistence_1_0.xsd) result 302). * [ ] http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd with 1 occurrences migrated to:     https://java.sun.com/xml/ns/persistence/persistence_2_0.xsd ([https](https://java.sun.com/xml/ns/persistence/persistence_2_0.xsd) result 302). * [ ] http://struts.apache.org/2.x/docs/spring-plugin.html with 1 occurrences migrated to:     https://struts.apache.org/2.x/docs/spring-plugin.html ([https](https://struts.apache.org/2.x/docs/spring-plugin.html) result 302). * [ ] http://www.springsource.com/produts/sts with 1 occurrences migrated to:     https://www.springsource.com/produts/sts ([https](https://www.springsource.com/produts/sts) result 302). * [ ] http://www.springsource.org/download/community with 2 occurrences migrated to:     https://www.springsource.org/download/community ([https](https://www.springsource.org/download/community) result 302).  # Ignored These URLs were intentionally ignored.  * http://example/ with 1 occurrences * http://localhost:8080/ with 1 occurrences","closed","","spring-operator","2019-03-25T23:34:11Z","2022-02-18T19:10:00Z"
"","22665","URL Cleanup","This commit updates URLs to prefer the https protocol. Redirects are not followed to avoid accidentally expanding intentionally shortened URLs (i.e. if using a URL shortener).  # HTTP URLs that Could Not Be Fixed These URLs were unable to be fixed. Please review them to see if they can be manually resolved.  * [ ] http://castor.org/mapping.dtd (301) with 1 occurrences could not be migrated:      ([https](https://castor.org/mapping.dtd) result AnnotatedConnectException). * [ ] http://schemas.microsoft.com/visio/2003/SVGExtensions/ (404) with 7 occurrences could not be migrated:      ([https](https://schemas.microsoft.com/visio/2003/SVGExtensions/) result AnnotatedConnectException). * [ ] http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd (404) with 2 occurrences could not be migrated:      ([https](https://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd) result AnnotatedConnectException). * [ ] http://www.foo.com/schema/component (404) with 2 occurrences could not be migrated:      ([https](https://www.foo.com/schema/component) result SSLHandshakeException). * [ ] http://www.foo.com/schema/component/component.xsd (404) with 1 occurrences could not be migrated:      ([https](https://www.foo.com/schema/component/component.xsd) result SSLHandshakeException).  # Fixed URLs  ## Fixed But Review Recommended These URLs were fixed, but the https status was not OK. However, the https status was the same as the http request or http redirected to an https URL, so they were migrated. Your review is recommended.  * [ ] http://mydomain2.com (302) with 2 occurrences migrated to:     /QTifZ/ ([https](https://mydomain2.com) result IllegalArgumentException). * [ ] http://www.greeting.com/hello/ (302) with 1 occurrences migrated to:     https://venture.com/domains/greeting.com ([https](https://www.greeting.com/hello/) result SSLHandshakeException). * [ ] http://www.greeting.com/goodbye/ (302) with 1 occurrences migrated to:     https://venture.com/domains/greeting.com ([https](https://www.greeting.com/goodbye/) result SSLHandshakeException). * [ ] http://localhost:8080 (AnnotatedConnectException) with 3 occurrences migrated to:     https://localhost:8080 ([https](https://localhost:8080) result AnnotatedConnectException). * [ ] http://www.kbcafe.com/rss/atom.xsd.xml (ConnectTimeoutException) with 1 occurrences migrated to:     https://www.kbcafe.com/rss/atom.xsd.xml ([https](https://www.kbcafe.com/rss/atom.xsd.xml) result ConnectTimeoutException). * [ ] http://www.w3.org/2005/Atom (ReadTimeoutException) with 2 occurrences migrated to:     https://www.w3.org/2005/Atom ([https](https://www.w3.org/2005/Atom) result ReadTimeoutException). * [ ] http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd (ReadTimeoutException) with 5 occurrences migrated to:     https://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd ([https](https://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd) result ReadTimeoutException). * [ ] http://domain1.com (UnknownHostException) with 2 occurrences migrated to:     https://domain1.com ([https](https://domain1.com) result UnknownHostException). * [ ] http://domain2.com (UnknownHostException) with 1 occurrences migrated to:     https://domain2.com ([https](https://domain2.com) result UnknownHostException). * [ ] http://mydomain1.com,http://mydomain2.com (UnknownHostException) with 1 occurrences migrated to:     https://mydomain1.com,http://mydomain2.com ([https](https://mydomain1.com,https://mydomain2.com) result UnknownHostException). * [ ] http://mydomain3.com,http://mydomain4.com (UnknownHostException) with 1 occurrences migrated to:     https://mydomain3.com,http://mydomain4.com ([https](https://mydomain3.com,https://mydomain4.com) result UnknownHostException). * [ ] http://samples.springframework.org/flight (UnknownHostException) with 7 occurrences migrated to:     https://samples.springframework.org/flight ([https](https://samples.springframework.org/flight) result UnknownHostException). * [ ] http://www.quartz-scheduler.org/xml/JobSchedulingData (404) with 2 occurrences migrated to:     https://www.quartz-scheduler.org/xml/JobSchedulingData ([https](https://www.quartz-scheduler.org/xml/JobSchedulingData) result 404). * [ ] http://www.springframework.org/schema/beans/factory/xml/support/CustomNamespaceHandlerTests.xsd (404) with 1 occurrences migrated to:     https://www.springframework.org/schema/beans/factory/xml/support/CustomNamespaceHandlerTests.xsd ([https](https://www.springframework.org/schema/beans/factory/xml/support/CustomNamespaceHandlerTests.xsd) result 404). * [ ] http://www.springframework.org/schema/beans/test (404) with 2 occurrences migrated to:     https://www.springframework.org/schema/beans/test ([https](https://www.springframework.org/schema/beans/test) result 404). * [ ] http://www.springframework.org/schema/c (404) with 9 occurrences migrated to:     https://www.springframework.org/schema/c ([https](https://www.springframework.org/schema/c) result 404). * [ ] http://www.springframework.org/schema/p (404) with 16 occurrences migrated to:     https://www.springframework.org/schema/p ([https](https://www.springframework.org/schema/p) result 404).  ## Fixed Success  These URLs were switched to an https URL with a 2xx status. While the status was successful, your review is still recommended.  * [ ] http://creativecommons.org/ns with 2 occurrences migrated to:     https://creativecommons.org/ns ([https](https://creativecommons.org/ns) result 200). * [ ] http://example.com with 1 occurrences migrated to:     https://example.com ([https](https://example.com) result 200). * [ ] http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd (301) with 2 occurrences migrated to:     https://hibernate.org/dtd/hibernate-mapping-3.0.dtd ([https](https://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd) result 200). * [ ] http://testng.org/testng-1.0.dtd with 3 occurrences migrated to:     https://testng.org/testng-1.0.dtd ([https](https://testng.org/testng-1.0.dtd) result 200). * [ ] http://tiles.apache.org/dtds/tiles-config_2_0.dtd with 3 occurrences migrated to:     https://tiles.apache.org/dtds/tiles-config_2_0.dtd ([https](https://tiles.apache.org/dtds/tiles-config_2_0.dtd) result 200). * [ ] http://tiles.apache.org/dtds/tiles-config_2_1.dtd with 2 occurrences migrated to:     https://tiles.apache.org/dtds/tiles-config_2_1.dtd ([https](https://tiles.apache.org/dtds/tiles-config_2_1.dtd) result 200). * [ ] http://tiles.apache.org/dtds/tiles-config_3_0.dtd with 4 occurrences migrated to:     https://tiles.apache.org/dtds/tiles-config_3_0.dtd ([https](https://tiles.apache.org/dtds/tiles-config_3_0.dtd) result 200). * [ ] http://www.quartz-scheduler.org/xml/job_scheduling_data_1_8.xsd with 1 occurrences migrated to:     https://www.quartz-scheduler.org/xml/job_scheduling_data_1_8.xsd ([https](https://www.quartz-scheduler.org/xml/job_scheduling_data_1_8.xsd) result 200). * [ ] http://www.springframework.org/dtd/spring-beans-2.0.dtd with 214 occurrences migrated to:     https://www.springframework.org/dtd/spring-beans-2.0.dtd ([https](https://www.springframework.org/dtd/spring-beans-2.0.dtd) result 200). * [ ] http://www.springframework.org/schema/aop/spring-aop-2.0.xsd with 69 occurrences migrated to:     https://www.springframework.org/schema/aop/spring-aop-2.0.xsd ([https](https://www.springframework.org/schema/aop/spring-aop-2.0.xsd) result 200). * [ ] http://www.springframework.org/schema/aop/spring-aop-2.5.xsd with 11 occurrences migrated to:     https://www.springframework.org/schema/aop/spring-aop-2.5.xsd ([https](https://www.springframework.org/schema/aop/spring-aop-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/aop/spring-aop-3.0.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/aop/spring-aop-3.0.xsd ([https](https://www.springframework.org/schema/aop/spring-aop-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/aop/spring-aop.xsd with 7 occurrences migrated to:     https://www.springframework.org/schema/aop/spring-aop.xsd ([https](https://www.springframework.org/schema/aop/spring-aop.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-2.0.xsd with 115 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-2.0.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-2.0.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-2.5.xsd with 44 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-2.5.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-3.0.xsd with 10 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-3.0.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-3.1.xsd with 34 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-3.1.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-3.2.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-3.2.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-3.2.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-4.0.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-4.0.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-4.0.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-4.1.xsd with 3 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-4.1.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-4.1.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-4.2.xsd with 6 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-4.2.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-4.2.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-4.3.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-4.3.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-4.3.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans.xsd with 141 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans.xsd ([https](https://www.springframework.org/schema/beans/spring-beans.xsd) result 200). * [ ] http://www.springframework.org/schema/cache/spring-cache.xsd with 10 occurrences migrated to:     https://www.springframework.org/schema/cache/spring-cache.xsd ([https](https://www.springframework.org/schema/cache/spring-cache.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-2.5.xsd with 42 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-2.5.xsd ([https](https://www.springframework.org/schema/context/spring-context-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-3.0.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-3.0.xsd ([https](https://www.springframework.org/schema/context/spring-context-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-3.1.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-3.1.xsd ([https](https://www.springframework.org/schema/context/spring-context-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-3.2.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-3.2.xsd ([https](https://www.springframework.org/schema/context/spring-context-3.2.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-4.0.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-4.0.xsd ([https](https://www.springframework.org/schema/context/spring-context-4.0.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-4.2.xsd with 4 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-4.2.xsd ([https](https://www.springframework.org/schema/context/spring-context-4.2.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-4.3.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-4.3.xsd ([https](https://www.springframework.org/schema/context/spring-context-4.3.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context.xsd with 11 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context.xsd ([https](https://www.springframework.org/schema/context/spring-context.xsd) result 200). * [ ] http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd with 9 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd ([https](https://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd with 5 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd ([https](https://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd with 9 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd ([https](https://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd) result 200). * [ ] http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd ([https](https://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd) result 200). * [ ] http://www.springframework.org/schema/jdbc/spring-jdbc.xsd with 8 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-jdbc.xsd ([https](https://www.springframework.org/schema/jdbc/spring-jdbc.xsd) result 200). * [ ] http://www.springframework.org/schema/jee/spring-jee-3.1.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/jee/spring-jee-3.1.xsd ([https](https://www.springframework.org/schema/jee/spring-jee-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/jms/spring-jms-4.1.xsd with 9 occurrences migrated to:     https://www.springframework.org/schema/jms/spring-jms-4.1.xsd ([https](https://www.springframework.org/schema/jms/spring-jms-4.1.xsd) result 200). * [ ] http://www.springframework.org/schema/jms/spring-jms-4.2.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/jms/spring-jms-4.2.xsd ([https](https://www.springframework.org/schema/jms/spring-jms-4.2.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang-2.0.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang-2.0.xsd ([https](https://www.springframework.org/schema/lang/spring-lang-2.0.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang-2.5.xsd with 4 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang-2.5.xsd ([https](https://www.springframework.org/schema/lang/spring-lang-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang-3.0.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang-3.0.xsd ([https](https://www.springframework.org/schema/lang/spring-lang-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang-3.1.xsd with 5 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang-3.1.xsd ([https](https://www.springframework.org/schema/lang/spring-lang-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang-4.2.xsd with 3 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang-4.2.xsd ([https](https://www.springframework.org/schema/lang/spring-lang-4.2.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang.xsd ([https](https://www.springframework.org/schema/lang/spring-lang.xsd) result 200). * [ ] http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd ([https](https://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd ([https](https://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd) result 200). * [ ] http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd ([https](https://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd) result 200). * [ ] http://www.springframework.org/schema/mvc/spring-mvc.xsd with 26 occurrences migrated to:     https://www.springframework.org/schema/mvc/spring-mvc.xsd ([https](https://www.springframework.org/schema/mvc/spring-mvc.xsd) result 200). * [ ] http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd ([https](https://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/task/spring-task-4.1.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/task/spring-task-4.1.xsd ([https](https://www.springframework.org/schema/task/spring-task-4.1.xsd) result 200). * [ ] http://www.springframework.org/schema/task/spring-task.xsd with 6 occurrences migrated to:     https://www.springframework.org/schema/task/spring-task.xsd ([https](https://www.springframework.org/schema/task/spring-task.xsd) result 200). * [ ] http://www.springframework.org/schema/tx/spring-tx-2.5.xsd with 3 occurrences migrated to:     https://www.springframework.org/schema/tx/spring-tx-2.5.xsd ([https](https://www.springframework.org/schema/tx/spring-tx-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/tx/spring-tx-4.0.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/tx/spring-tx-4.0.xsd ([https](https://www.springframework.org/schema/tx/spring-tx-4.0.xsd) result 200). * [ ] http://www.springframework.org/schema/tx/spring-tx.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/tx/spring-tx.xsd ([https](https://www.springframework.org/schema/tx/spring-tx.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-2.0.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-2.0.xsd ([https](https://www.springframework.org/schema/util/spring-util-2.0.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-2.5.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-2.5.xsd ([https](https://www.springframework.org/schema/util/spring-util-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-3.0.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-3.0.xsd ([https](https://www.springframework.org/schema/util/spring-util-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-3.1.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-3.1.xsd ([https](https://www.springframework.org/schema/util/spring-util-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-4.1.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-4.1.xsd ([https](https://www.springframework.org/schema/util/spring-util-4.1.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-4.2.xsd with 4 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-4.2.xsd ([https](https://www.springframework.org/schema/util/spring-util-4.2.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util.xsd ([https](https://www.springframework.org/schema/util/spring-util.xsd) result 200). * [ ] http://www.springframework.org/schema/websocket/spring-websocket.xsd with 11 occurrences migrated to:     https://www.springframework.org/schema/websocket/spring-websocket.xsd ([https](https://www.springframework.org/schema/websocket/spring-websocket.xsd) result 200). * [ ] http://www.w3.org/1999/02/22-rdf-syntax-ns with 2 occurrences migrated to:     https://www.w3.org/1999/02/22-rdf-syntax-ns ([https](https://www.w3.org/1999/02/22-rdf-syntax-ns) result 200). * [ ] http://www.w3.org/2000/svg with 9 occurrences migrated to:     https://www.w3.org/2000/svg ([https](https://www.w3.org/2000/svg) result 200). * [ ] http://www.w3.org/2001/XMLSchema-instance with 376 occurrences migrated to:     https://www.w3.org/2001/XMLSchema-instance ([https](https://www.w3.org/2001/XMLSchema-instance) result 200). * [ ] http://mydomain1.com with 2 occurrences migrated to:     https://mydomain1.com ([https](https://mydomain1.com) result 301). * [ ] http://www.inkscape.org/namespaces/inkscape with 2 occurrences migrated to:     https://www.inkscape.org/namespaces/inkscape ([https](https://www.inkscape.org/namespaces/inkscape) result 301). * [ ] http://www.springframework.org with 1 occurrences migrated to:     https://www.springframework.org ([https](https://www.springframework.org) result 301). * [ ] http://www.springframework.org/schema/aop with 178 occurrences migrated to:     https://www.springframework.org/schema/aop ([https](https://www.springframework.org/schema/aop) result 301). * [ ] http://www.springframework.org/schema/beans with 717 occurrences migrated to:     https://www.springframework.org/schema/beans ([https](https://www.springframework.org/schema/beans) result 301). * [ ] http://www.springframework.org/schema/cache with 20 occurrences migrated to:     https://www.springframework.org/schema/cache ([https](https://www.springframework.org/schema/cache) result 301). * [ ] http://www.springframework.org/schema/context with 130 occurrences migrated to:     https://www.springframework.org/schema/context ([https](https://www.springframework.org/schema/context) result 301). * [ ] http://www.springframework.org/schema/jdbc with 66 occurrences migrated to:     https://www.springframework.org/schema/jdbc ([https](https://www.springframework.org/schema/jdbc) result 301). * [ ] http://www.springframework.org/schema/jee with 2 occurrences migrated to:     https://www.springframework.org/schema/jee ([https](https://www.springframework.org/schema/jee) result 301). * [ ] http://www.springframework.org/schema/jms with 20 occurrences migrated to:     https://www.springframework.org/schema/jms ([https](https://www.springframework.org/schema/jms) result 301). * [ ] http://www.springframework.org/schema/lang with 33 occurrences migrated to:     https://www.springframework.org/schema/lang ([https](https://www.springframework.org/schema/lang) result 301). * [ ] http://www.springframework.org/schema/mvc with 60 occurrences migrated to:     https://www.springframework.org/schema/mvc ([https](https://www.springframework.org/schema/mvc) result 301). * [ ] http://www.springframework.org/schema/oxm with 2 occurrences migrated to:     https://www.springframework.org/schema/oxm ([https](https://www.springframework.org/schema/oxm) result 301). * [ ] http://www.springframework.org/schema/task with 14 occurrences migrated to:     https://www.springframework.org/schema/task ([https](https://www.springframework.org/schema/task) result 301). * [ ] http://www.springframework.org/schema/tx with 12 occurrences migrated to:     https://www.springframework.org/schema/tx ([https](https://www.springframework.org/schema/tx) result 301). * [ ] http://www.springframework.org/schema/util with 28 occurrences migrated to:     https://www.springframework.org/schema/util ([https](https://www.springframework.org/schema/util) result 301). * [ ] http://www.springframework.org/schema/websocket with 22 occurrences migrated to:     https://www.springframework.org/schema/websocket ([https](https://www.springframework.org/schema/websocket) result 301). * [ ] http://help.sap.com/saphelp_hanaplatform/helpdata/en/20/a78d3275191014b41bae7c4a46d835/content.htm with 1 occurrences migrated to:     https://help.sap.com/saphelp_hanaplatform/helpdata/en/20/a78d3275191014b41bae7c4a46d835/content.htm ([https](https://help.sap.com/saphelp_hanaplatform/helpdata/en/20/a78d3275191014b41bae7c4a46d835/content.htm) result 302). * [ ] http://java.sun.com/dtd/properties.dtd with 4 occurrences migrated to:     https://java.sun.com/dtd/properties.dtd ([https](https://java.sun.com/dtd/properties.dtd) result 302). * [ ] http://java.sun.com/xml/ns/j2ee with 2 occurrences migrated to:     https://java.sun.com/xml/ns/j2ee ([https](https://java.sun.com/xml/ns/j2ee) result 302). * [ ] http://java.sun.com/xml/ns/j2ee/connector_1_5.xsd with 1 occurrences migrated to:     https://java.sun.com/xml/ns/j2ee/connector_1_5.xsd ([https](https://java.sun.com/xml/ns/j2ee/connector_1_5.xsd) result 302). * [ ] http://java.sun.com/xml/ns/javaee with 2 occurrences migrated to:     https://java.sun.com/xml/ns/javaee ([https](https://java.sun.com/xml/ns/javaee) result 302). * [ ] http://java.sun.com/xml/ns/javaee/web-fragment_3_0.xsd with 1 occurrences migrated to:     https://java.sun.com/xml/ns/javaee/web-fragment_3_0.xsd ([https](https://java.sun.com/xml/ns/javaee/web-fragment_3_0.xsd) result 302). * [ ] http://java.sun.com/xml/ns/persistence with 27 occurrences migrated to:     https://java.sun.com/xml/ns/persistence ([https](https://java.sun.com/xml/ns/persistence) result 302). * [ ] http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd with 12 occurrences migrated to:     https://java.sun.com/xml/ns/persistence/persistence_1_0.xsd ([https](https://java.sun.com/xml/ns/persistence/persistence_1_0.xsd) result 302). * [ ] http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd with 1 occurrences migrated to:     https://java.sun.com/xml/ns/persistence/persistence_2_0.xsd ([https](https://java.sun.com/xml/ns/persistence/persistence_2_0.xsd) result 302). * [ ] http://purl.org/dc/dcmitype/StillImage with 2 occurrences migrated to:     https://purl.org/dc/dcmitype/StillImage ([https](https://purl.org/dc/dcmitype/StillImage) result 302). * [ ] http://purl.org/dc/elements/1.1/ with 2 occurrences migrated to:     https://purl.org/dc/elements/1.1/ ([https](https://purl.org/dc/elements/1.1/) result 302).","closed","","spring-operator","2019-03-26T00:51:40Z","2022-02-18T19:10:02Z"
"","22667","URL Cleanup","This commit updates URLs to prefer the https protocol. Redirects are not followed to avoid accidentally expanding intentionally shortened URLs (i.e. if using a URL shortener).  # HTTP URLs that Could Not Be Fixed These URLs were unable to be fixed. Please review them to see if they can be manually resolved.  * [ ] http://castor.org/mapping.dtd (301) with 1 occurrences could not be migrated:      ([https](https://castor.org/mapping.dtd) result AnnotatedConnectException). * [ ] http://schemas.microsoft.com/visio/2003/SVGExtensions/ (404) with 7 occurrences could not be migrated:      ([https](https://schemas.microsoft.com/visio/2003/SVGExtensions/) result AnnotatedConnectException). * [ ] http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd (404) with 2 occurrences could not be migrated:      ([https](https://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd) result AnnotatedConnectException). * [ ] http://www.foo.com/schema/component (404) with 2 occurrences could not be migrated:      ([https](https://www.foo.com/schema/component) result SSLHandshakeException). * [ ] http://www.foo.com/schema/component/component.xsd (404) with 1 occurrences could not be migrated:      ([https](https://www.foo.com/schema/component/component.xsd) result SSLHandshakeException).  # Fixed URLs  ## Fixed But Review Recommended These URLs were fixed, but the https status was not OK. However, the https status was the same as the http request or http redirected to an https URL, so they were migrated. Your review is recommended.  * [ ] http://mydomain2.com (302) with 2 occurrences migrated to:     /QTifZ/ ([https](https://mydomain2.com) result IllegalArgumentException). * [ ] http://www.greeting.com/hello/ (302) with 1 occurrences migrated to:     https://venture.com/domains/greeting.com ([https](https://www.greeting.com/hello/) result SSLHandshakeException). * [ ] http://www.greeting.com/goodbye/ (302) with 1 occurrences migrated to:     https://venture.com/domains/greeting.com ([https](https://www.greeting.com/goodbye/) result SSLHandshakeException). * [ ] http://localhost:8080 (AnnotatedConnectException) with 3 occurrences migrated to:     https://localhost:8080 ([https](https://localhost:8080) result AnnotatedConnectException). * [ ] http://www.kbcafe.com/rss/atom.xsd.xml (ConnectTimeoutException) with 1 occurrences migrated to:     https://www.kbcafe.com/rss/atom.xsd.xml ([https](https://www.kbcafe.com/rss/atom.xsd.xml) result ConnectTimeoutException). * [ ] http://www.w3.org/2005/Atom (ReadTimeoutException) with 2 occurrences migrated to:     https://www.w3.org/2005/Atom ([https](https://www.w3.org/2005/Atom) result ReadTimeoutException). * [ ] http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd (ReadTimeoutException) with 5 occurrences migrated to:     https://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd ([https](https://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd) result ReadTimeoutException). * [ ] http://domain1.com (UnknownHostException) with 2 occurrences migrated to:     https://domain1.com ([https](https://domain1.com) result UnknownHostException). * [ ] http://domain2.com (UnknownHostException) with 1 occurrences migrated to:     https://domain2.com ([https](https://domain2.com) result UnknownHostException). * [ ] http://mydomain1.com,http://mydomain2.com (UnknownHostException) with 1 occurrences migrated to:     https://mydomain1.com,http://mydomain2.com ([https](https://mydomain1.com,https://mydomain2.com) result UnknownHostException). * [ ] http://mydomain3.com,http://mydomain4.com (UnknownHostException) with 1 occurrences migrated to:     https://mydomain3.com,http://mydomain4.com ([https](https://mydomain3.com,https://mydomain4.com) result UnknownHostException). * [ ] http://samples.springframework.org/flight (UnknownHostException) with 7 occurrences migrated to:     https://samples.springframework.org/flight ([https](https://samples.springframework.org/flight) result UnknownHostException). * [ ] http://www.quartz-scheduler.org/xml/JobSchedulingData (404) with 2 occurrences migrated to:     https://www.quartz-scheduler.org/xml/JobSchedulingData ([https](https://www.quartz-scheduler.org/xml/JobSchedulingData) result 404). * [ ] http://www.springframework.org/schema/beans/factory/xml/support/CustomNamespaceHandlerTests.xsd (404) with 1 occurrences migrated to:     https://www.springframework.org/schema/beans/factory/xml/support/CustomNamespaceHandlerTests.xsd ([https](https://www.springframework.org/schema/beans/factory/xml/support/CustomNamespaceHandlerTests.xsd) result 404). * [ ] http://www.springframework.org/schema/beans/test (404) with 2 occurrences migrated to:     https://www.springframework.org/schema/beans/test ([https](https://www.springframework.org/schema/beans/test) result 404). * [ ] http://www.springframework.org/schema/c (404) with 9 occurrences migrated to:     https://www.springframework.org/schema/c ([https](https://www.springframework.org/schema/c) result 404). * [ ] http://www.springframework.org/schema/p (404) with 16 occurrences migrated to:     https://www.springframework.org/schema/p ([https](https://www.springframework.org/schema/p) result 404).  ## Fixed Success  These URLs were switched to an https URL with a 2xx status. While the status was successful, your review is still recommended.  * [ ] http://creativecommons.org/ns with 2 occurrences migrated to:     https://creativecommons.org/ns ([https](https://creativecommons.org/ns) result 200). * [ ] http://example.com with 1 occurrences migrated to:     https://example.com ([https](https://example.com) result 200). * [ ] http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd (301) with 2 occurrences migrated to:     https://hibernate.org/dtd/hibernate-mapping-3.0.dtd ([https](https://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd) result 200). * [ ] http://testng.org/testng-1.0.dtd with 3 occurrences migrated to:     https://testng.org/testng-1.0.dtd ([https](https://testng.org/testng-1.0.dtd) result 200). * [ ] http://tiles.apache.org/dtds/tiles-config_2_0.dtd with 2 occurrences migrated to:     https://tiles.apache.org/dtds/tiles-config_2_0.dtd ([https](https://tiles.apache.org/dtds/tiles-config_2_0.dtd) result 200). * [ ] http://tiles.apache.org/dtds/tiles-config_2_1.dtd with 2 occurrences migrated to:     https://tiles.apache.org/dtds/tiles-config_2_1.dtd ([https](https://tiles.apache.org/dtds/tiles-config_2_1.dtd) result 200). * [ ] http://tiles.apache.org/dtds/tiles-config_3_0.dtd with 4 occurrences migrated to:     https://tiles.apache.org/dtds/tiles-config_3_0.dtd ([https](https://tiles.apache.org/dtds/tiles-config_3_0.dtd) result 200). * [ ] http://www.quartz-scheduler.org/xml/job_scheduling_data_1_8.xsd with 1 occurrences migrated to:     https://www.quartz-scheduler.org/xml/job_scheduling_data_1_8.xsd ([https](https://www.quartz-scheduler.org/xml/job_scheduling_data_1_8.xsd) result 200). * [ ] http://www.springframework.org/dtd/spring-beans-2.0.dtd with 176 occurrences migrated to:     https://www.springframework.org/dtd/spring-beans-2.0.dtd ([https](https://www.springframework.org/dtd/spring-beans-2.0.dtd) result 200). * [ ] http://www.springframework.org/schema/aop/spring-aop-2.0.xsd with 68 occurrences migrated to:     https://www.springframework.org/schema/aop/spring-aop-2.0.xsd ([https](https://www.springframework.org/schema/aop/spring-aop-2.0.xsd) result 200). * [ ] http://www.springframework.org/schema/aop/spring-aop-2.5.xsd with 11 occurrences migrated to:     https://www.springframework.org/schema/aop/spring-aop-2.5.xsd ([https](https://www.springframework.org/schema/aop/spring-aop-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/aop/spring-aop-3.0.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/aop/spring-aop-3.0.xsd ([https](https://www.springframework.org/schema/aop/spring-aop-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/aop/spring-aop.xsd with 7 occurrences migrated to:     https://www.springframework.org/schema/aop/spring-aop.xsd ([https](https://www.springframework.org/schema/aop/spring-aop.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-2.0.xsd with 112 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-2.0.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-2.0.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-2.5.xsd with 46 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-2.5.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-3.0.xsd with 10 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-3.0.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-3.1.xsd with 33 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-3.1.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-3.2.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-3.2.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-3.2.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-4.0.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-4.0.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-4.0.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-4.1.xsd with 3 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-4.1.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-4.1.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-4.2.xsd with 4 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-4.2.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-4.2.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-4.3.xsd with 4 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-4.3.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-4.3.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans.xsd with 142 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans.xsd ([https](https://www.springframework.org/schema/beans/spring-beans.xsd) result 200). * [ ] http://www.springframework.org/schema/cache/spring-cache.xsd with 10 occurrences migrated to:     https://www.springframework.org/schema/cache/spring-cache.xsd ([https](https://www.springframework.org/schema/cache/spring-cache.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-2.5.xsd with 41 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-2.5.xsd ([https](https://www.springframework.org/schema/context/spring-context-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-3.0.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-3.0.xsd ([https](https://www.springframework.org/schema/context/spring-context-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-3.1.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-3.1.xsd ([https](https://www.springframework.org/schema/context/spring-context-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-3.2.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-3.2.xsd ([https](https://www.springframework.org/schema/context/spring-context-3.2.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-4.0.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-4.0.xsd ([https](https://www.springframework.org/schema/context/spring-context-4.0.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-4.2.xsd with 4 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-4.2.xsd ([https](https://www.springframework.org/schema/context/spring-context-4.2.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-4.3.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-4.3.xsd ([https](https://www.springframework.org/schema/context/spring-context-4.3.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context.xsd with 10 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context.xsd ([https](https://www.springframework.org/schema/context/spring-context.xsd) result 200). * [ ] http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd with 9 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd ([https](https://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd with 5 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd ([https](https://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd with 9 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd ([https](https://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd) result 200). * [ ] http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd ([https](https://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd) result 200). * [ ] http://www.springframework.org/schema/jdbc/spring-jdbc.xsd with 8 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-jdbc.xsd ([https](https://www.springframework.org/schema/jdbc/spring-jdbc.xsd) result 200). * [ ] http://www.springframework.org/schema/jee/spring-jee-3.1.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/jee/spring-jee-3.1.xsd ([https](https://www.springframework.org/schema/jee/spring-jee-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/jms/spring-jms-4.1.xsd with 9 occurrences migrated to:     https://www.springframework.org/schema/jms/spring-jms-4.1.xsd ([https](https://www.springframework.org/schema/jms/spring-jms-4.1.xsd) result 200). * [ ] http://www.springframework.org/schema/jms/spring-jms-4.2.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/jms/spring-jms-4.2.xsd ([https](https://www.springframework.org/schema/jms/spring-jms-4.2.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang-2.0.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang-2.0.xsd ([https](https://www.springframework.org/schema/lang/spring-lang-2.0.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang-2.5.xsd with 3 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang-2.5.xsd ([https](https://www.springframework.org/schema/lang/spring-lang-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang-3.0.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang-3.0.xsd ([https](https://www.springframework.org/schema/lang/spring-lang-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang-3.1.xsd with 5 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang-3.1.xsd ([https](https://www.springframework.org/schema/lang/spring-lang-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang-4.2.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang-4.2.xsd ([https](https://www.springframework.org/schema/lang/spring-lang-4.2.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang.xsd ([https](https://www.springframework.org/schema/lang/spring-lang.xsd) result 200). * [ ] http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd ([https](https://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd ([https](https://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd) result 200). * [ ] http://www.springframework.org/schema/mvc/spring-mvc.xsd with 26 occurrences migrated to:     https://www.springframework.org/schema/mvc/spring-mvc.xsd ([https](https://www.springframework.org/schema/mvc/spring-mvc.xsd) result 200). * [ ] http://www.springframework.org/schema/oxm/spring-oxm.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/oxm/spring-oxm.xsd ([https](https://www.springframework.org/schema/oxm/spring-oxm.xsd) result 200). * [ ] http://www.springframework.org/schema/task/spring-task-4.1.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/task/spring-task-4.1.xsd ([https](https://www.springframework.org/schema/task/spring-task-4.1.xsd) result 200). * [ ] http://www.springframework.org/schema/task/spring-task.xsd with 6 occurrences migrated to:     https://www.springframework.org/schema/task/spring-task.xsd ([https](https://www.springframework.org/schema/task/spring-task.xsd) result 200). * [ ] http://www.springframework.org/schema/tx/spring-tx-2.5.xsd with 3 occurrences migrated to:     https://www.springframework.org/schema/tx/spring-tx-2.5.xsd ([https](https://www.springframework.org/schema/tx/spring-tx-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/tx/spring-tx-4.0.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/tx/spring-tx-4.0.xsd ([https](https://www.springframework.org/schema/tx/spring-tx-4.0.xsd) result 200). * [ ] http://www.springframework.org/schema/tx/spring-tx.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/tx/spring-tx.xsd ([https](https://www.springframework.org/schema/tx/spring-tx.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-2.0.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-2.0.xsd ([https](https://www.springframework.org/schema/util/spring-util-2.0.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-2.5.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-2.5.xsd ([https](https://www.springframework.org/schema/util/spring-util-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-3.0.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-3.0.xsd ([https](https://www.springframework.org/schema/util/spring-util-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-3.1.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-3.1.xsd ([https](https://www.springframework.org/schema/util/spring-util-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-4.1.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-4.1.xsd ([https](https://www.springframework.org/schema/util/spring-util-4.1.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-4.2.xsd with 4 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-4.2.xsd ([https](https://www.springframework.org/schema/util/spring-util-4.2.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util.xsd ([https](https://www.springframework.org/schema/util/spring-util.xsd) result 200). * [ ] http://www.springframework.org/schema/websocket/spring-websocket.xsd with 11 occurrences migrated to:     https://www.springframework.org/schema/websocket/spring-websocket.xsd ([https](https://www.springframework.org/schema/websocket/spring-websocket.xsd) result 200). * [ ] http://www.w3.org/1999/02/22-rdf-syntax-ns with 2 occurrences migrated to:     https://www.w3.org/1999/02/22-rdf-syntax-ns ([https](https://www.w3.org/1999/02/22-rdf-syntax-ns) result 200). * [ ] http://www.w3.org/2000/svg with 9 occurrences migrated to:     https://www.w3.org/2000/svg ([https](https://www.w3.org/2000/svg) result 200). * [ ] http://www.w3.org/2001/XMLSchema-instance with 375 occurrences migrated to:     https://www.w3.org/2001/XMLSchema-instance ([https](https://www.w3.org/2001/XMLSchema-instance) result 200). * [ ] http://mydomain1.com with 2 occurrences migrated to:     https://mydomain1.com ([https](https://mydomain1.com) result 301). * [ ] http://www.inkscape.org/namespaces/inkscape with 2 occurrences migrated to:     https://www.inkscape.org/namespaces/inkscape ([https](https://www.inkscape.org/namespaces/inkscape) result 301). * [ ] http://www.springframework.org with 1 occurrences migrated to:     https://www.springframework.org ([https](https://www.springframework.org) result 301). * [ ] http://www.springframework.org/schema/aop with 176 occurrences migrated to:     https://www.springframework.org/schema/aop ([https](https://www.springframework.org/schema/aop) result 301). * [ ] http://www.springframework.org/schema/beans with 715 occurrences migrated to:     https://www.springframework.org/schema/beans ([https](https://www.springframework.org/schema/beans) result 301). * [ ] http://www.springframework.org/schema/cache with 20 occurrences migrated to:     https://www.springframework.org/schema/cache ([https](https://www.springframework.org/schema/cache) result 301). * [ ] http://www.springframework.org/schema/context with 126 occurrences migrated to:     https://www.springframework.org/schema/context ([https](https://www.springframework.org/schema/context) result 301). * [ ] http://www.springframework.org/schema/jdbc with 66 occurrences migrated to:     https://www.springframework.org/schema/jdbc ([https](https://www.springframework.org/schema/jdbc) result 301). * [ ] http://www.springframework.org/schema/jee with 2 occurrences migrated to:     https://www.springframework.org/schema/jee ([https](https://www.springframework.org/schema/jee) result 301). * [ ] http://www.springframework.org/schema/jms with 20 occurrences migrated to:     https://www.springframework.org/schema/jms ([https](https://www.springframework.org/schema/jms) result 301). * [ ] http://www.springframework.org/schema/lang with 27 occurrences migrated to:     https://www.springframework.org/schema/lang ([https](https://www.springframework.org/schema/lang) result 301). * [ ] http://www.springframework.org/schema/mvc with 58 occurrences migrated to:     https://www.springframework.org/schema/mvc ([https](https://www.springframework.org/schema/mvc) result 301). * [ ] http://www.springframework.org/schema/oxm with 2 occurrences migrated to:     https://www.springframework.org/schema/oxm ([https](https://www.springframework.org/schema/oxm) result 301). * [ ] http://www.springframework.org/schema/task with 14 occurrences migrated to:     https://www.springframework.org/schema/task ([https](https://www.springframework.org/schema/task) result 301). * [ ] http://www.springframework.org/schema/tx with 12 occurrences migrated to:     https://www.springframework.org/schema/tx ([https](https://www.springframework.org/schema/tx) result 301). * [ ] http://www.springframework.org/schema/util with 28 occurrences migrated to:     https://www.springframework.org/schema/util ([https](https://www.springframework.org/schema/util) result 301). * [ ] http://www.springframework.org/schema/websocket with 22 occurrences migrated to:     https://www.springframework.org/schema/websocket ([https](https://www.springframework.org/schema/websocket) result 301). * [ ] http://help.sap.com/saphelp_hanaplatform/helpdata/en/20/a78d3275191014b41bae7c4a46d835/content.htm with 1 occurrences migrated to:     https://help.sap.com/saphelp_hanaplatform/helpdata/en/20/a78d3275191014b41bae7c4a46d835/content.htm ([https](https://help.sap.com/saphelp_hanaplatform/helpdata/en/20/a78d3275191014b41bae7c4a46d835/content.htm) result 302). * [ ] http://java.sun.com/dtd/properties.dtd with 4 occurrences migrated to:     https://java.sun.com/dtd/properties.dtd ([https](https://java.sun.com/dtd/properties.dtd) result 302). * [ ] http://java.sun.com/xml/ns/j2ee with 2 occurrences migrated to:     https://java.sun.com/xml/ns/j2ee ([https](https://java.sun.com/xml/ns/j2ee) result 302). * [ ] http://java.sun.com/xml/ns/j2ee/connector_1_5.xsd with 1 occurrences migrated to:     https://java.sun.com/xml/ns/j2ee/connector_1_5.xsd ([https](https://java.sun.com/xml/ns/j2ee/connector_1_5.xsd) result 302). * [ ] http://java.sun.com/xml/ns/javaee with 2 occurrences migrated to:     https://java.sun.com/xml/ns/javaee ([https](https://java.sun.com/xml/ns/javaee) result 302). * [ ] http://java.sun.com/xml/ns/javaee/web-fragment_3_0.xsd with 1 occurrences migrated to:     https://java.sun.com/xml/ns/javaee/web-fragment_3_0.xsd ([https](https://java.sun.com/xml/ns/javaee/web-fragment_3_0.xsd) result 302). * [ ] http://java.sun.com/xml/ns/persistence with 27 occurrences migrated to:     https://java.sun.com/xml/ns/persistence ([https](https://java.sun.com/xml/ns/persistence) result 302). * [ ] http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd with 12 occurrences migrated to:     https://java.sun.com/xml/ns/persistence/persistence_1_0.xsd ([https](https://java.sun.com/xml/ns/persistence/persistence_1_0.xsd) result 302). * [ ] http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd with 1 occurrences migrated to:     https://java.sun.com/xml/ns/persistence/persistence_2_0.xsd ([https](https://java.sun.com/xml/ns/persistence/persistence_2_0.xsd) result 302). * [ ] http://purl.org/dc/dcmitype/StillImage with 2 occurrences migrated to:     https://purl.org/dc/dcmitype/StillImage ([https](https://purl.org/dc/dcmitype/StillImage) result 302). * [ ] http://purl.org/dc/elements/1.1/ with 2 occurrences migrated to:     https://purl.org/dc/elements/1.1/ ([https](https://purl.org/dc/elements/1.1/) result 302).","closed","","spring-operator","2019-03-26T00:52:36Z","2022-02-18T19:10:05Z"
"","22666","URL Cleanup","This commit updates URLs to prefer the https protocol. Redirects are not followed to avoid accidentally expanding intentionally shortened URLs (i.e. if using a URL shortener).  # HTTP URLs that Could Not Be Fixed These URLs were unable to be fixed. Please review them to see if they can be manually resolved.  * [ ] http://castor.org/mapping.dtd (301) with 1 occurrences could not be migrated:      ([https](https://castor.org/mapping.dtd) result AnnotatedConnectException). * [ ] http://schemas.microsoft.com/visio/2003/SVGExtensions/ (404) with 7 occurrences could not be migrated:      ([https](https://schemas.microsoft.com/visio/2003/SVGExtensions/) result AnnotatedConnectException). * [ ] http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd (404) with 2 occurrences could not be migrated:      ([https](https://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd) result AnnotatedConnectException). * [ ] http://www.foo.com/schema/component (404) with 2 occurrences could not be migrated:      ([https](https://www.foo.com/schema/component) result SSLHandshakeException). * [ ] http://www.foo.com/schema/component/component.xsd (404) with 1 occurrences could not be migrated:      ([https](https://www.foo.com/schema/component/component.xsd) result SSLHandshakeException).  # Fixed URLs  ## Fixed But Review Recommended These URLs were fixed, but the https status was not OK. However, the https status was the same as the http request or http redirected to an https URL, so they were migrated. Your review is recommended.  * [ ] http://mydomain2.com (302) with 2 occurrences migrated to:     /QTifZ/ ([https](https://mydomain2.com) result IllegalArgumentException). * [ ] http://www.greeting.com/hello/ (302) with 1 occurrences migrated to:     https://venture.com/domains/greeting.com ([https](https://www.greeting.com/hello/) result SSLHandshakeException). * [ ] http://www.greeting.com/goodbye/ (302) with 1 occurrences migrated to:     https://venture.com/domains/greeting.com ([https](https://www.greeting.com/goodbye/) result SSLHandshakeException). * [ ] http://localhost:8080 (AnnotatedConnectException) with 3 occurrences migrated to:     https://localhost:8080 ([https](https://localhost:8080) result AnnotatedConnectException). * [ ] http://www.kbcafe.com/rss/atom.xsd.xml (ConnectTimeoutException) with 1 occurrences migrated to:     https://www.kbcafe.com/rss/atom.xsd.xml ([https](https://www.kbcafe.com/rss/atom.xsd.xml) result ConnectTimeoutException). * [ ] http://www.w3.org/2005/Atom (ReadTimeoutException) with 2 occurrences migrated to:     https://www.w3.org/2005/Atom ([https](https://www.w3.org/2005/Atom) result ReadTimeoutException). * [ ] http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd (ReadTimeoutException) with 5 occurrences migrated to:     https://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd ([https](https://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd) result ReadTimeoutException). * [ ] http://domain1.com (UnknownHostException) with 2 occurrences migrated to:     https://domain1.com ([https](https://domain1.com) result UnknownHostException). * [ ] http://domain2.com (UnknownHostException) with 1 occurrences migrated to:     https://domain2.com ([https](https://domain2.com) result UnknownHostException). * [ ] http://mydomain1.com,http://mydomain2.com (UnknownHostException) with 1 occurrences migrated to:     https://mydomain1.com,http://mydomain2.com ([https](https://mydomain1.com,https://mydomain2.com) result UnknownHostException). * [ ] http://mydomain3.com,http://mydomain4.com (UnknownHostException) with 1 occurrences migrated to:     https://mydomain3.com,http://mydomain4.com ([https](https://mydomain3.com,https://mydomain4.com) result UnknownHostException). * [ ] http://samples.springframework.org/flight (UnknownHostException) with 7 occurrences migrated to:     https://samples.springframework.org/flight ([https](https://samples.springframework.org/flight) result UnknownHostException). * [ ] http://www.quartz-scheduler.org/xml/JobSchedulingData (404) with 2 occurrences migrated to:     https://www.quartz-scheduler.org/xml/JobSchedulingData ([https](https://www.quartz-scheduler.org/xml/JobSchedulingData) result 404). * [ ] http://www.springframework.org/schema/beans/factory/xml/support/CustomNamespaceHandlerTests.xsd (404) with 1 occurrences migrated to:     https://www.springframework.org/schema/beans/factory/xml/support/CustomNamespaceHandlerTests.xsd ([https](https://www.springframework.org/schema/beans/factory/xml/support/CustomNamespaceHandlerTests.xsd) result 404). * [ ] http://www.springframework.org/schema/beans/test (404) with 2 occurrences migrated to:     https://www.springframework.org/schema/beans/test ([https](https://www.springframework.org/schema/beans/test) result 404). * [ ] http://www.springframework.org/schema/c (404) with 9 occurrences migrated to:     https://www.springframework.org/schema/c ([https](https://www.springframework.org/schema/c) result 404). * [ ] http://www.springframework.org/schema/p (404) with 16 occurrences migrated to:     https://www.springframework.org/schema/p ([https](https://www.springframework.org/schema/p) result 404).  ## Fixed Success  These URLs were switched to an https URL with a 2xx status. While the status was successful, your review is still recommended.  * [ ] http://creativecommons.org/ns with 2 occurrences migrated to:     https://creativecommons.org/ns ([https](https://creativecommons.org/ns) result 200). * [ ] http://example.com with 1 occurrences migrated to:     https://example.com ([https](https://example.com) result 200). * [ ] http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd (301) with 2 occurrences migrated to:     https://hibernate.org/dtd/hibernate-mapping-3.0.dtd ([https](https://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd) result 200). * [ ] http://testng.org/testng-1.0.dtd with 3 occurrences migrated to:     https://testng.org/testng-1.0.dtd ([https](https://testng.org/testng-1.0.dtd) result 200). * [ ] http://tiles.apache.org/dtds/tiles-config_2_0.dtd with 2 occurrences migrated to:     https://tiles.apache.org/dtds/tiles-config_2_0.dtd ([https](https://tiles.apache.org/dtds/tiles-config_2_0.dtd) result 200). * [ ] http://tiles.apache.org/dtds/tiles-config_2_1.dtd with 2 occurrences migrated to:     https://tiles.apache.org/dtds/tiles-config_2_1.dtd ([https](https://tiles.apache.org/dtds/tiles-config_2_1.dtd) result 200). * [ ] http://tiles.apache.org/dtds/tiles-config_3_0.dtd with 4 occurrences migrated to:     https://tiles.apache.org/dtds/tiles-config_3_0.dtd ([https](https://tiles.apache.org/dtds/tiles-config_3_0.dtd) result 200). * [ ] http://www.quartz-scheduler.org/xml/job_scheduling_data_1_8.xsd with 1 occurrences migrated to:     https://www.quartz-scheduler.org/xml/job_scheduling_data_1_8.xsd ([https](https://www.quartz-scheduler.org/xml/job_scheduling_data_1_8.xsd) result 200). * [ ] http://www.springframework.org/dtd/spring-beans-2.0.dtd with 175 occurrences migrated to:     https://www.springframework.org/dtd/spring-beans-2.0.dtd ([https](https://www.springframework.org/dtd/spring-beans-2.0.dtd) result 200). * [ ] http://www.springframework.org/schema/aop/spring-aop-2.0.xsd with 68 occurrences migrated to:     https://www.springframework.org/schema/aop/spring-aop-2.0.xsd ([https](https://www.springframework.org/schema/aop/spring-aop-2.0.xsd) result 200). * [ ] http://www.springframework.org/schema/aop/spring-aop-2.5.xsd with 11 occurrences migrated to:     https://www.springframework.org/schema/aop/spring-aop-2.5.xsd ([https](https://www.springframework.org/schema/aop/spring-aop-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/aop/spring-aop-3.0.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/aop/spring-aop-3.0.xsd ([https](https://www.springframework.org/schema/aop/spring-aop-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/aop/spring-aop.xsd with 7 occurrences migrated to:     https://www.springframework.org/schema/aop/spring-aop.xsd ([https](https://www.springframework.org/schema/aop/spring-aop.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-2.0.xsd with 112 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-2.0.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-2.0.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-2.5.xsd with 44 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-2.5.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-3.0.xsd with 10 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-3.0.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-3.1.xsd with 33 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-3.1.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-3.2.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-3.2.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-3.2.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-4.0.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-4.0.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-4.0.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-4.1.xsd with 3 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-4.1.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-4.1.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-4.2.xsd with 4 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-4.2.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-4.2.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-4.3.xsd with 4 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-4.3.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-4.3.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans.xsd with 142 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans.xsd ([https](https://www.springframework.org/schema/beans/spring-beans.xsd) result 200). * [ ] http://www.springframework.org/schema/cache/spring-cache.xsd with 10 occurrences migrated to:     https://www.springframework.org/schema/cache/spring-cache.xsd ([https](https://www.springframework.org/schema/cache/spring-cache.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-2.5.xsd with 40 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-2.5.xsd ([https](https://www.springframework.org/schema/context/spring-context-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-3.0.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-3.0.xsd ([https](https://www.springframework.org/schema/context/spring-context-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-3.1.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-3.1.xsd ([https](https://www.springframework.org/schema/context/spring-context-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-3.2.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-3.2.xsd ([https](https://www.springframework.org/schema/context/spring-context-3.2.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-4.0.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-4.0.xsd ([https](https://www.springframework.org/schema/context/spring-context-4.0.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-4.2.xsd with 4 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-4.2.xsd ([https](https://www.springframework.org/schema/context/spring-context-4.2.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-4.3.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-4.3.xsd ([https](https://www.springframework.org/schema/context/spring-context-4.3.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context.xsd with 10 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context.xsd ([https](https://www.springframework.org/schema/context/spring-context.xsd) result 200). * [ ] http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd with 9 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd ([https](https://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd with 5 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd ([https](https://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd with 9 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd ([https](https://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd) result 200). * [ ] http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd ([https](https://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd) result 200). * [ ] http://www.springframework.org/schema/jdbc/spring-jdbc.xsd with 8 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-jdbc.xsd ([https](https://www.springframework.org/schema/jdbc/spring-jdbc.xsd) result 200). * [ ] http://www.springframework.org/schema/jee/spring-jee-3.1.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/jee/spring-jee-3.1.xsd ([https](https://www.springframework.org/schema/jee/spring-jee-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/jms/spring-jms-4.1.xsd with 9 occurrences migrated to:     https://www.springframework.org/schema/jms/spring-jms-4.1.xsd ([https](https://www.springframework.org/schema/jms/spring-jms-4.1.xsd) result 200). * [ ] http://www.springframework.org/schema/jms/spring-jms-4.2.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/jms/spring-jms-4.2.xsd ([https](https://www.springframework.org/schema/jms/spring-jms-4.2.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang-2.0.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang-2.0.xsd ([https](https://www.springframework.org/schema/lang/spring-lang-2.0.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang-2.5.xsd with 3 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang-2.5.xsd ([https](https://www.springframework.org/schema/lang/spring-lang-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang-3.0.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang-3.0.xsd ([https](https://www.springframework.org/schema/lang/spring-lang-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang-3.1.xsd with 5 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang-3.1.xsd ([https](https://www.springframework.org/schema/lang/spring-lang-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang-4.2.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang-4.2.xsd ([https](https://www.springframework.org/schema/lang/spring-lang-4.2.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang.xsd ([https](https://www.springframework.org/schema/lang/spring-lang.xsd) result 200). * [ ] http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd ([https](https://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd ([https](https://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd) result 200). * [ ] http://www.springframework.org/schema/mvc/spring-mvc.xsd with 26 occurrences migrated to:     https://www.springframework.org/schema/mvc/spring-mvc.xsd ([https](https://www.springframework.org/schema/mvc/spring-mvc.xsd) result 200). * [ ] http://www.springframework.org/schema/oxm/spring-oxm.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/oxm/spring-oxm.xsd ([https](https://www.springframework.org/schema/oxm/spring-oxm.xsd) result 200). * [ ] http://www.springframework.org/schema/task/spring-task-4.1.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/task/spring-task-4.1.xsd ([https](https://www.springframework.org/schema/task/spring-task-4.1.xsd) result 200). * [ ] http://www.springframework.org/schema/task/spring-task.xsd with 6 occurrences migrated to:     https://www.springframework.org/schema/task/spring-task.xsd ([https](https://www.springframework.org/schema/task/spring-task.xsd) result 200). * [ ] http://www.springframework.org/schema/tx/spring-tx-2.5.xsd with 3 occurrences migrated to:     https://www.springframework.org/schema/tx/spring-tx-2.5.xsd ([https](https://www.springframework.org/schema/tx/spring-tx-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/tx/spring-tx-4.0.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/tx/spring-tx-4.0.xsd ([https](https://www.springframework.org/schema/tx/spring-tx-4.0.xsd) result 200). * [ ] http://www.springframework.org/schema/tx/spring-tx.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/tx/spring-tx.xsd ([https](https://www.springframework.org/schema/tx/spring-tx.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-2.0.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-2.0.xsd ([https](https://www.springframework.org/schema/util/spring-util-2.0.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-2.5.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-2.5.xsd ([https](https://www.springframework.org/schema/util/spring-util-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-3.0.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-3.0.xsd ([https](https://www.springframework.org/schema/util/spring-util-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-3.1.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-3.1.xsd ([https](https://www.springframework.org/schema/util/spring-util-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-4.1.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-4.1.xsd ([https](https://www.springframework.org/schema/util/spring-util-4.1.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-4.2.xsd with 4 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-4.2.xsd ([https](https://www.springframework.org/schema/util/spring-util-4.2.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util.xsd ([https](https://www.springframework.org/schema/util/spring-util.xsd) result 200). * [ ] http://www.springframework.org/schema/websocket/spring-websocket.xsd with 11 occurrences migrated to:     https://www.springframework.org/schema/websocket/spring-websocket.xsd ([https](https://www.springframework.org/schema/websocket/spring-websocket.xsd) result 200). * [ ] http://www.w3.org/1999/02/22-rdf-syntax-ns with 2 occurrences migrated to:     https://www.w3.org/1999/02/22-rdf-syntax-ns ([https](https://www.w3.org/1999/02/22-rdf-syntax-ns) result 200). * [ ] http://www.w3.org/2000/svg with 9 occurrences migrated to:     https://www.w3.org/2000/svg ([https](https://www.w3.org/2000/svg) result 200). * [ ] http://www.w3.org/2001/XMLSchema-instance with 373 occurrences migrated to:     https://www.w3.org/2001/XMLSchema-instance ([https](https://www.w3.org/2001/XMLSchema-instance) result 200). * [ ] http://mydomain1.com with 2 occurrences migrated to:     https://mydomain1.com ([https](https://mydomain1.com) result 301). * [ ] http://www.inkscape.org/namespaces/inkscape with 2 occurrences migrated to:     https://www.inkscape.org/namespaces/inkscape ([https](https://www.inkscape.org/namespaces/inkscape) result 301). * [ ] http://www.springframework.org with 1 occurrences migrated to:     https://www.springframework.org ([https](https://www.springframework.org) result 301). * [ ] http://www.springframework.org/schema/aop with 176 occurrences migrated to:     https://www.springframework.org/schema/aop ([https](https://www.springframework.org/schema/aop) result 301). * [ ] http://www.springframework.org/schema/beans with 711 occurrences migrated to:     https://www.springframework.org/schema/beans ([https](https://www.springframework.org/schema/beans) result 301). * [ ] http://www.springframework.org/schema/cache with 20 occurrences migrated to:     https://www.springframework.org/schema/cache ([https](https://www.springframework.org/schema/cache) result 301). * [ ] http://www.springframework.org/schema/context with 124 occurrences migrated to:     https://www.springframework.org/schema/context ([https](https://www.springframework.org/schema/context) result 301). * [ ] http://www.springframework.org/schema/jdbc with 66 occurrences migrated to:     https://www.springframework.org/schema/jdbc ([https](https://www.springframework.org/schema/jdbc) result 301). * [ ] http://www.springframework.org/schema/jee with 2 occurrences migrated to:     https://www.springframework.org/schema/jee ([https](https://www.springframework.org/schema/jee) result 301). * [ ] http://www.springframework.org/schema/jms with 20 occurrences migrated to:     https://www.springframework.org/schema/jms ([https](https://www.springframework.org/schema/jms) result 301). * [ ] http://www.springframework.org/schema/lang with 27 occurrences migrated to:     https://www.springframework.org/schema/lang ([https](https://www.springframework.org/schema/lang) result 301). * [ ] http://www.springframework.org/schema/mvc with 58 occurrences migrated to:     https://www.springframework.org/schema/mvc ([https](https://www.springframework.org/schema/mvc) result 301). * [ ] http://www.springframework.org/schema/oxm with 2 occurrences migrated to:     https://www.springframework.org/schema/oxm ([https](https://www.springframework.org/schema/oxm) result 301). * [ ] http://www.springframework.org/schema/task with 14 occurrences migrated to:     https://www.springframework.org/schema/task ([https](https://www.springframework.org/schema/task) result 301). * [ ] http://www.springframework.org/schema/tx with 12 occurrences migrated to:     https://www.springframework.org/schema/tx ([https](https://www.springframework.org/schema/tx) result 301). * [ ] http://www.springframework.org/schema/util with 28 occurrences migrated to:     https://www.springframework.org/schema/util ([https](https://www.springframework.org/schema/util) result 301). * [ ] http://www.springframework.org/schema/websocket with 22 occurrences migrated to:     https://www.springframework.org/schema/websocket ([https](https://www.springframework.org/schema/websocket) result 301). * [ ] http://help.sap.com/saphelp_hanaplatform/helpdata/en/20/a78d3275191014b41bae7c4a46d835/content.htm with 1 occurrences migrated to:     https://help.sap.com/saphelp_hanaplatform/helpdata/en/20/a78d3275191014b41bae7c4a46d835/content.htm ([https](https://help.sap.com/saphelp_hanaplatform/helpdata/en/20/a78d3275191014b41bae7c4a46d835/content.htm) result 302). * [ ] http://java.sun.com/dtd/properties.dtd with 4 occurrences migrated to:     https://java.sun.com/dtd/properties.dtd ([https](https://java.sun.com/dtd/properties.dtd) result 302). * [ ] http://java.sun.com/xml/ns/j2ee with 2 occurrences migrated to:     https://java.sun.com/xml/ns/j2ee ([https](https://java.sun.com/xml/ns/j2ee) result 302). * [ ] http://java.sun.com/xml/ns/j2ee/connector_1_5.xsd with 1 occurrences migrated to:     https://java.sun.com/xml/ns/j2ee/connector_1_5.xsd ([https](https://java.sun.com/xml/ns/j2ee/connector_1_5.xsd) result 302). * [ ] http://java.sun.com/xml/ns/javaee with 2 occurrences migrated to:     https://java.sun.com/xml/ns/javaee ([https](https://java.sun.com/xml/ns/javaee) result 302). * [ ] http://java.sun.com/xml/ns/javaee/web-fragment_3_0.xsd with 1 occurrences migrated to:     https://java.sun.com/xml/ns/javaee/web-fragment_3_0.xsd ([https](https://java.sun.com/xml/ns/javaee/web-fragment_3_0.xsd) result 302). * [ ] http://java.sun.com/xml/ns/persistence with 27 occurrences migrated to:     https://java.sun.com/xml/ns/persistence ([https](https://java.sun.com/xml/ns/persistence) result 302). * [ ] http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd with 12 occurrences migrated to:     https://java.sun.com/xml/ns/persistence/persistence_1_0.xsd ([https](https://java.sun.com/xml/ns/persistence/persistence_1_0.xsd) result 302). * [ ] http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd with 1 occurrences migrated to:     https://java.sun.com/xml/ns/persistence/persistence_2_0.xsd ([https](https://java.sun.com/xml/ns/persistence/persistence_2_0.xsd) result 302). * [ ] http://purl.org/dc/dcmitype/StillImage with 2 occurrences migrated to:     https://purl.org/dc/dcmitype/StillImage ([https](https://purl.org/dc/dcmitype/StillImage) result 302). * [ ] http://purl.org/dc/elements/1.1/ with 2 occurrences migrated to:     https://purl.org/dc/elements/1.1/ ([https](https://purl.org/dc/elements/1.1/) result 302).","closed","","spring-operator","2019-03-26T00:52:11Z","2022-02-18T19:10:04Z"
"","22669","URL Cleanup","This commit updates URLs to prefer the https protocol. Redirects are not followed to avoid accidentally expanding intentionally shortened URLs (i.e. if using a URL shortener).  # HTTP URLs that Could Not Be Fixed These URLs were unable to be fixed. Please review them to see if they can be manually resolved.  * [ ] http://castor.org/mapping.dtd (301) with 1 occurrences could not be migrated:      ([https](https://castor.org/mapping.dtd) result AnnotatedConnectException). * [ ] http://mydomain2.com (302) with 2 occurrences could not be migrated:      ([https](https://mydomain2.com) result ConnectTimeoutException). * [ ] http://www.foo.com/schema/component/component.xsd (404) with 1 occurrences could not be migrated:      ([https](https://www.foo.com/schema/component/component.xsd) result SSLHandshakeException).  # Fixed URLs  ## Fixed But Review Recommended These URLs were fixed, but the https status was not OK. However, the https status was the same as the http request or http redirected to an https URL, so they were migrated. Your review is recommended.  * [ ] http://www.kbcafe.com/rss/atom.xsd.xml (ConnectTimeoutException) with 1 occurrences migrated to:     https://www.kbcafe.com/rss/atom.xsd.xml ([https](https://www.kbcafe.com/rss/atom.xsd.xml) result ConnectTimeoutException). * [ ] http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd (ReadTimeoutException) with 5 occurrences migrated to:     https://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd ([https](https://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd) result ReadTimeoutException). * [ ] http://domain1.com (UnknownHostException) with 2 occurrences migrated to:     https://domain1.com ([https](https://domain1.com) result UnknownHostException). * [ ] http://domain2.com (UnknownHostException) with 1 occurrences migrated to:     https://domain2.com ([https](https://domain2.com) result UnknownHostException). * [ ] http://mydomain1.com,http://mydomain2.com (UnknownHostException) with 1 occurrences migrated to:     https://mydomain1.com,http://mydomain2.com ([https](https://mydomain1.com,https://mydomain2.com) result UnknownHostException). * [ ] http://mydomain3.com,http://mydomain4.com (UnknownHostException) with 1 occurrences migrated to:     https://mydomain3.com,http://mydomain4.com ([https](https://mydomain3.com,https://mydomain4.com) result UnknownHostException). * [ ] http://www.springframework.org/schema/beans/factory/xml/support/CustomNamespaceHandlerTests.xsd (404) with 1 occurrences migrated to:     https://www.springframework.org/schema/beans/factory/xml/support/CustomNamespaceHandlerTests.xsd ([https](https://www.springframework.org/schema/beans/factory/xml/support/CustomNamespaceHandlerTests.xsd) result 404).  ## Fixed Success  These URLs were switched to an https URL with a 2xx status. While the status was successful, your review is still recommended.  * [ ] http://example.com with 1 occurrences migrated to:     https://example.com ([https](https://example.com) result 200). * [ ] http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd (301) with 2 occurrences migrated to:     https://hibernate.org/dtd/hibernate-mapping-3.0.dtd ([https](https://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd) result 200). * [ ] http://testng.org/testng-1.0.dtd with 3 occurrences migrated to:     https://testng.org/testng-1.0.dtd ([https](https://testng.org/testng-1.0.dtd) result 200). * [ ] http://tiles.apache.org/dtds/tiles-config_2_0.dtd with 2 occurrences migrated to:     https://tiles.apache.org/dtds/tiles-config_2_0.dtd ([https](https://tiles.apache.org/dtds/tiles-config_2_0.dtd) result 200). * [ ] http://tiles.apache.org/dtds/tiles-config_2_1.dtd with 2 occurrences migrated to:     https://tiles.apache.org/dtds/tiles-config_2_1.dtd ([https](https://tiles.apache.org/dtds/tiles-config_2_1.dtd) result 200). * [ ] http://tiles.apache.org/dtds/tiles-config_3_0.dtd with 4 occurrences migrated to:     https://tiles.apache.org/dtds/tiles-config_3_0.dtd ([https](https://tiles.apache.org/dtds/tiles-config_3_0.dtd) result 200). * [ ] http://www.quartz-scheduler.org/xml/job_scheduling_data_1_8.xsd with 1 occurrences migrated to:     https://www.quartz-scheduler.org/xml/job_scheduling_data_1_8.xsd ([https](https://www.quartz-scheduler.org/xml/job_scheduling_data_1_8.xsd) result 200). * [ ] http://www.springframework.org/dtd/spring-beans-2.0.dtd with 176 occurrences migrated to:     https://www.springframework.org/dtd/spring-beans-2.0.dtd ([https](https://www.springframework.org/dtd/spring-beans-2.0.dtd) result 200). * [ ] http://www.springframework.org/schema/aop/spring-aop-2.0.xsd with 68 occurrences migrated to:     https://www.springframework.org/schema/aop/spring-aop-2.0.xsd ([https](https://www.springframework.org/schema/aop/spring-aop-2.0.xsd) result 200). * [ ] http://www.springframework.org/schema/aop/spring-aop-2.5.xsd with 11 occurrences migrated to:     https://www.springframework.org/schema/aop/spring-aop-2.5.xsd ([https](https://www.springframework.org/schema/aop/spring-aop-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/aop/spring-aop-3.0.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/aop/spring-aop-3.0.xsd ([https](https://www.springframework.org/schema/aop/spring-aop-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/aop/spring-aop.xsd with 7 occurrences migrated to:     https://www.springframework.org/schema/aop/spring-aop.xsd ([https](https://www.springframework.org/schema/aop/spring-aop.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-2.0.xsd with 112 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-2.0.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-2.0.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-2.5.xsd with 46 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-2.5.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-3.0.xsd with 10 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-3.0.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-3.1.xsd with 33 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-3.1.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-3.2.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-3.2.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-3.2.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-4.0.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-4.0.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-4.0.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-4.1.xsd with 3 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-4.1.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-4.1.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-4.2.xsd with 4 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-4.2.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-4.2.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-4.3.xsd with 4 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-4.3.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-4.3.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans.xsd with 142 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans.xsd ([https](https://www.springframework.org/schema/beans/spring-beans.xsd) result 200). * [ ] http://www.springframework.org/schema/cache/spring-cache.xsd with 10 occurrences migrated to:     https://www.springframework.org/schema/cache/spring-cache.xsd ([https](https://www.springframework.org/schema/cache/spring-cache.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-2.5.xsd with 41 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-2.5.xsd ([https](https://www.springframework.org/schema/context/spring-context-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-3.0.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-3.0.xsd ([https](https://www.springframework.org/schema/context/spring-context-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-3.1.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-3.1.xsd ([https](https://www.springframework.org/schema/context/spring-context-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-3.2.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-3.2.xsd ([https](https://www.springframework.org/schema/context/spring-context-3.2.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-4.0.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-4.0.xsd ([https](https://www.springframework.org/schema/context/spring-context-4.0.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-4.2.xsd with 4 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-4.2.xsd ([https](https://www.springframework.org/schema/context/spring-context-4.2.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-4.3.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-4.3.xsd ([https](https://www.springframework.org/schema/context/spring-context-4.3.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context.xsd with 10 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context.xsd ([https](https://www.springframework.org/schema/context/spring-context.xsd) result 200). * [ ] http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd with 9 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd ([https](https://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd with 5 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd ([https](https://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd with 9 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd ([https](https://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd) result 200). * [ ] http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd ([https](https://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd) result 200). * [ ] http://www.springframework.org/schema/jdbc/spring-jdbc.xsd with 8 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-jdbc.xsd ([https](https://www.springframework.org/schema/jdbc/spring-jdbc.xsd) result 200). * [ ] http://www.springframework.org/schema/jee/spring-jee-3.1.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/jee/spring-jee-3.1.xsd ([https](https://www.springframework.org/schema/jee/spring-jee-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/jms/spring-jms-4.1.xsd with 9 occurrences migrated to:     https://www.springframework.org/schema/jms/spring-jms-4.1.xsd ([https](https://www.springframework.org/schema/jms/spring-jms-4.1.xsd) result 200). * [ ] http://www.springframework.org/schema/jms/spring-jms-4.2.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/jms/spring-jms-4.2.xsd ([https](https://www.springframework.org/schema/jms/spring-jms-4.2.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang-2.0.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang-2.0.xsd ([https](https://www.springframework.org/schema/lang/spring-lang-2.0.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang-2.5.xsd with 3 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang-2.5.xsd ([https](https://www.springframework.org/schema/lang/spring-lang-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang-3.0.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang-3.0.xsd ([https](https://www.springframework.org/schema/lang/spring-lang-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang-3.1.xsd with 5 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang-3.1.xsd ([https](https://www.springframework.org/schema/lang/spring-lang-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang-4.2.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang-4.2.xsd ([https](https://www.springframework.org/schema/lang/spring-lang-4.2.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang.xsd ([https](https://www.springframework.org/schema/lang/spring-lang.xsd) result 200). * [ ] http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd ([https](https://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd ([https](https://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd) result 200). * [ ] http://www.springframework.org/schema/mvc/spring-mvc.xsd with 26 occurrences migrated to:     https://www.springframework.org/schema/mvc/spring-mvc.xsd ([https](https://www.springframework.org/schema/mvc/spring-mvc.xsd) result 200). * [ ] http://www.springframework.org/schema/oxm/spring-oxm.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/oxm/spring-oxm.xsd ([https](https://www.springframework.org/schema/oxm/spring-oxm.xsd) result 200). * [ ] http://www.springframework.org/schema/task/spring-task-4.1.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/task/spring-task-4.1.xsd ([https](https://www.springframework.org/schema/task/spring-task-4.1.xsd) result 200). * [ ] http://www.springframework.org/schema/task/spring-task.xsd with 6 occurrences migrated to:     https://www.springframework.org/schema/task/spring-task.xsd ([https](https://www.springframework.org/schema/task/spring-task.xsd) result 200). * [ ] http://www.springframework.org/schema/tx/spring-tx-2.5.xsd with 3 occurrences migrated to:     https://www.springframework.org/schema/tx/spring-tx-2.5.xsd ([https](https://www.springframework.org/schema/tx/spring-tx-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/tx/spring-tx-4.0.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/tx/spring-tx-4.0.xsd ([https](https://www.springframework.org/schema/tx/spring-tx-4.0.xsd) result 200). * [ ] http://www.springframework.org/schema/tx/spring-tx.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/tx/spring-tx.xsd ([https](https://www.springframework.org/schema/tx/spring-tx.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-2.0.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-2.0.xsd ([https](https://www.springframework.org/schema/util/spring-util-2.0.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-2.5.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-2.5.xsd ([https](https://www.springframework.org/schema/util/spring-util-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-3.0.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-3.0.xsd ([https](https://www.springframework.org/schema/util/spring-util-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-3.1.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-3.1.xsd ([https](https://www.springframework.org/schema/util/spring-util-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-4.1.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-4.1.xsd ([https](https://www.springframework.org/schema/util/spring-util-4.1.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-4.2.xsd with 4 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-4.2.xsd ([https](https://www.springframework.org/schema/util/spring-util-4.2.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util.xsd ([https](https://www.springframework.org/schema/util/spring-util.xsd) result 200). * [ ] http://www.springframework.org/schema/websocket/spring-websocket.xsd with 11 occurrences migrated to:     https://www.springframework.org/schema/websocket/spring-websocket.xsd ([https](https://www.springframework.org/schema/websocket/spring-websocket.xsd) result 200). * [ ] http://www.w3.org/1999/02/22-rdf-syntax-ns with 2 occurrences migrated to:     https://www.w3.org/1999/02/22-rdf-syntax-ns ([https](https://www.w3.org/1999/02/22-rdf-syntax-ns) result 200). * [ ] http://mydomain1.com with 2 occurrences migrated to:     https://mydomain1.com ([https](https://mydomain1.com) result 301). * [ ] http://www.springframework.org with 1 occurrences migrated to:     https://www.springframework.org ([https](https://www.springframework.org) result 301). * [ ] http://help.sap.com/saphelp_hanaplatform/helpdata/en/20/a78d3275191014b41bae7c4a46d835/content.htm with 1 occurrences migrated to:     https://help.sap.com/saphelp_hanaplatform/helpdata/en/20/a78d3275191014b41bae7c4a46d835/content.htm ([https](https://help.sap.com/saphelp_hanaplatform/helpdata/en/20/a78d3275191014b41bae7c4a46d835/content.htm) result 302). * [ ] http://java.sun.com/xml/ns/j2ee/connector_1_5.xsd with 1 occurrences migrated to:     https://java.sun.com/xml/ns/j2ee/connector_1_5.xsd ([https](https://java.sun.com/xml/ns/j2ee/connector_1_5.xsd) result 302). * [ ] http://java.sun.com/xml/ns/javaee/web-fragment_3_0.xsd with 1 occurrences migrated to:     https://java.sun.com/xml/ns/javaee/web-fragment_3_0.xsd ([https](https://java.sun.com/xml/ns/javaee/web-fragment_3_0.xsd) result 302). * [ ] http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd with 12 occurrences migrated to:     https://java.sun.com/xml/ns/persistence/persistence_1_0.xsd ([https](https://java.sun.com/xml/ns/persistence/persistence_1_0.xsd) result 302). * [ ] http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd with 1 occurrences migrated to:     https://java.sun.com/xml/ns/persistence/persistence_2_0.xsd ([https](https://java.sun.com/xml/ns/persistence/persistence_2_0.xsd) result 302). * [ ] http://purl.org/dc/dcmitype/StillImage with 2 occurrences migrated to:     https://purl.org/dc/dcmitype/StillImage ([https](https://purl.org/dc/dcmitype/StillImage) result 302).  # Ignored These URLs were intentionally ignored.  * http://creativecommons.org/ns with 2 occurrences * http://java.sun.com/dtd/properties.dtd with 4 occurrences * http://java.sun.com/xml/ns/j2ee with 2 occurrences * http://java.sun.com/xml/ns/javaee with 2 occurrences * http://java.sun.com/xml/ns/persistence with 27 occurrences * http://localhost:8080 with 3 occurrences * http://purl.org/dc/elements/1.1/ with 2 occurrences * http://samples.springframework.org/flight with 7 occurrences * http://schemas.microsoft.com/visio/2003/SVGExtensions/ with 7 occurrences * http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd with 2 occurrences * http://www.foo.com/schema/component with 2 occurrences * http://www.greeting.com/goodbye/ with 1 occurrences * http://www.greeting.com/hello/ with 1 occurrences * http://www.inkscape.org/namespaces/inkscape with 2 occurrences * http://www.quartz-scheduler.org/xml/JobSchedulingData with 2 occurrences * http://www.springframework.org/schema/aop with 176 occurrences * http://www.springframework.org/schema/beans with 715 occurrences * http://www.springframework.org/schema/beans/test with 2 occurrences * http://www.springframework.org/schema/c with 9 occurrences * http://www.springframework.org/schema/cache with 20 occurrences * http://www.springframework.org/schema/context with 126 occurrences * http://www.springframework.org/schema/jdbc with 66 occurrences * http://www.springframework.org/schema/jee with 2 occurrences * http://www.springframework.org/schema/jms with 20 occurrences * http://www.springframework.org/schema/lang with 27 occurrences * http://www.springframework.org/schema/mvc with 58 occurrences * http://www.springframework.org/schema/oxm with 2 occurrences * http://www.springframework.org/schema/p with 16 occurrences * http://www.springframework.org/schema/task with 14 occurrences * http://www.springframework.org/schema/tx with 12 occurrences * http://www.springframework.org/schema/util with 28 occurrences * http://www.springframework.org/schema/websocket with 22 occurrences * http://www.w3.org/2000/svg with 9 occurrences * http://www.w3.org/2001/XMLSchema-instance with 375 occurrences * http://www.w3.org/2005/Atom with 2 occurrences","closed","type: task,","spring-operator","2019-03-26T04:14:51Z","2019-03-27T18:08:02Z"
"","22673","URL Cleanup","This commit updates URLs to prefer the https protocol. Redirects are not followed to avoid accidentally expanding intentionally shortened URLs (i.e. if using a URL shortener).  # HTTP URLs that Could Not Be Fixed These URLs were unable to be fixed. Please review them to see if they can be manually resolved.  * [ ] http://castor.org/mapping.dtd (301) with 1 occurrences could not be migrated:      ([https](https://castor.org/mapping.dtd) result AnnotatedConnectException). * [ ] http://mydomain2.com (302) with 2 occurrences could not be migrated:      ([https](https://mydomain2.com) result ConnectTimeoutException). * [ ] http://www.foo.com/schema/component/component.xsd (404) with 1 occurrences could not be migrated:      ([https](https://www.foo.com/schema/component/component.xsd) result SSLHandshakeException).  # Fixed URLs  ## Fixed But Review Recommended These URLs were fixed, but the https status was not OK. However, the https status was the same as the http request or http redirected to an https URL, so they were migrated. Your review is recommended.  * [ ] http://www.kbcafe.com/rss/atom.xsd.xml (ConnectTimeoutException) with 1 occurrences migrated to:     https://www.kbcafe.com/rss/atom.xsd.xml ([https](https://www.kbcafe.com/rss/atom.xsd.xml) result ConnectTimeoutException). * [ ] http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd (ReadTimeoutException) with 5 occurrences migrated to:     https://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd ([https](https://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd) result ReadTimeoutException). * [ ] http://domain1.com (UnknownHostException) with 2 occurrences migrated to:     https://domain1.com ([https](https://domain1.com) result UnknownHostException). * [ ] http://domain2.com (UnknownHostException) with 1 occurrences migrated to:     https://domain2.com ([https](https://domain2.com) result UnknownHostException). * [ ] http://mydomain1.com,http://mydomain2.com (UnknownHostException) with 1 occurrences migrated to:     https://mydomain1.com,http://mydomain2.com ([https](https://mydomain1.com,https://mydomain2.com) result UnknownHostException). * [ ] http://mydomain3.com,http://mydomain4.com (UnknownHostException) with 1 occurrences migrated to:     https://mydomain3.com,http://mydomain4.com ([https](https://mydomain3.com,https://mydomain4.com) result UnknownHostException). * [ ] http://www.springframework.org/schema/beans/factory/xml/support/CustomNamespaceHandlerTests.xsd (404) with 1 occurrences migrated to:     https://www.springframework.org/schema/beans/factory/xml/support/CustomNamespaceHandlerTests.xsd ([https](https://www.springframework.org/schema/beans/factory/xml/support/CustomNamespaceHandlerTests.xsd) result 404).  ## Fixed Success  These URLs were switched to an https URL with a 2xx status. While the status was successful, your review is still recommended.  * [ ] http://example.com with 1 occurrences migrated to:     https://example.com ([https](https://example.com) result 200). * [ ] http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd (301) with 2 occurrences migrated to:     https://hibernate.org/dtd/hibernate-mapping-3.0.dtd ([https](https://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd) result 200). * [ ] http://testng.org/testng-1.0.dtd with 3 occurrences migrated to:     https://testng.org/testng-1.0.dtd ([https](https://testng.org/testng-1.0.dtd) result 200). * [ ] http://tiles.apache.org/dtds/tiles-config_2_0.dtd with 2 occurrences migrated to:     https://tiles.apache.org/dtds/tiles-config_2_0.dtd ([https](https://tiles.apache.org/dtds/tiles-config_2_0.dtd) result 200). * [ ] http://tiles.apache.org/dtds/tiles-config_2_1.dtd with 2 occurrences migrated to:     https://tiles.apache.org/dtds/tiles-config_2_1.dtd ([https](https://tiles.apache.org/dtds/tiles-config_2_1.dtd) result 200). * [ ] http://tiles.apache.org/dtds/tiles-config_3_0.dtd with 4 occurrences migrated to:     https://tiles.apache.org/dtds/tiles-config_3_0.dtd ([https](https://tiles.apache.org/dtds/tiles-config_3_0.dtd) result 200). * [ ] http://www.quartz-scheduler.org/xml/job_scheduling_data_1_8.xsd with 1 occurrences migrated to:     https://www.quartz-scheduler.org/xml/job_scheduling_data_1_8.xsd ([https](https://www.quartz-scheduler.org/xml/job_scheduling_data_1_8.xsd) result 200). * [ ] http://www.springframework.org/dtd/spring-beans-2.0.dtd with 175 occurrences migrated to:     https://www.springframework.org/dtd/spring-beans-2.0.dtd ([https](https://www.springframework.org/dtd/spring-beans-2.0.dtd) result 200). * [ ] http://www.springframework.org/schema/aop/spring-aop-2.0.xsd with 68 occurrences migrated to:     https://www.springframework.org/schema/aop/spring-aop-2.0.xsd ([https](https://www.springframework.org/schema/aop/spring-aop-2.0.xsd) result 200). * [ ] http://www.springframework.org/schema/aop/spring-aop-2.5.xsd with 11 occurrences migrated to:     https://www.springframework.org/schema/aop/spring-aop-2.5.xsd ([https](https://www.springframework.org/schema/aop/spring-aop-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/aop/spring-aop-3.0.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/aop/spring-aop-3.0.xsd ([https](https://www.springframework.org/schema/aop/spring-aop-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/aop/spring-aop.xsd with 7 occurrences migrated to:     https://www.springframework.org/schema/aop/spring-aop.xsd ([https](https://www.springframework.org/schema/aop/spring-aop.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-2.0.xsd with 112 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-2.0.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-2.0.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-2.5.xsd with 44 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-2.5.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-3.0.xsd with 10 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-3.0.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-3.1.xsd with 33 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-3.1.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-3.2.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-3.2.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-3.2.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-4.0.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-4.0.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-4.0.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-4.1.xsd with 3 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-4.1.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-4.1.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-4.2.xsd with 4 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-4.2.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-4.2.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-4.3.xsd with 4 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-4.3.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-4.3.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans.xsd with 142 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans.xsd ([https](https://www.springframework.org/schema/beans/spring-beans.xsd) result 200). * [ ] http://www.springframework.org/schema/cache/spring-cache.xsd with 10 occurrences migrated to:     https://www.springframework.org/schema/cache/spring-cache.xsd ([https](https://www.springframework.org/schema/cache/spring-cache.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-2.5.xsd with 40 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-2.5.xsd ([https](https://www.springframework.org/schema/context/spring-context-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-3.0.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-3.0.xsd ([https](https://www.springframework.org/schema/context/spring-context-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-3.1.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-3.1.xsd ([https](https://www.springframework.org/schema/context/spring-context-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-3.2.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-3.2.xsd ([https](https://www.springframework.org/schema/context/spring-context-3.2.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-4.0.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-4.0.xsd ([https](https://www.springframework.org/schema/context/spring-context-4.0.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-4.2.xsd with 4 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-4.2.xsd ([https](https://www.springframework.org/schema/context/spring-context-4.2.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-4.3.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-4.3.xsd ([https](https://www.springframework.org/schema/context/spring-context-4.3.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context.xsd with 10 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context.xsd ([https](https://www.springframework.org/schema/context/spring-context.xsd) result 200). * [ ] http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd with 9 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd ([https](https://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd with 5 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd ([https](https://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd with 9 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd ([https](https://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd) result 200). * [ ] http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd ([https](https://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd) result 200). * [ ] http://www.springframework.org/schema/jdbc/spring-jdbc.xsd with 8 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-jdbc.xsd ([https](https://www.springframework.org/schema/jdbc/spring-jdbc.xsd) result 200). * [ ] http://www.springframework.org/schema/jee/spring-jee-3.1.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/jee/spring-jee-3.1.xsd ([https](https://www.springframework.org/schema/jee/spring-jee-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/jms/spring-jms-4.1.xsd with 9 occurrences migrated to:     https://www.springframework.org/schema/jms/spring-jms-4.1.xsd ([https](https://www.springframework.org/schema/jms/spring-jms-4.1.xsd) result 200). * [ ] http://www.springframework.org/schema/jms/spring-jms-4.2.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/jms/spring-jms-4.2.xsd ([https](https://www.springframework.org/schema/jms/spring-jms-4.2.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang-2.0.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang-2.0.xsd ([https](https://www.springframework.org/schema/lang/spring-lang-2.0.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang-2.5.xsd with 3 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang-2.5.xsd ([https](https://www.springframework.org/schema/lang/spring-lang-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang-3.0.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang-3.0.xsd ([https](https://www.springframework.org/schema/lang/spring-lang-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang-3.1.xsd with 5 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang-3.1.xsd ([https](https://www.springframework.org/schema/lang/spring-lang-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang-4.2.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang-4.2.xsd ([https](https://www.springframework.org/schema/lang/spring-lang-4.2.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang.xsd ([https](https://www.springframework.org/schema/lang/spring-lang.xsd) result 200). * [ ] http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd ([https](https://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd ([https](https://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd) result 200). * [ ] http://www.springframework.org/schema/mvc/spring-mvc.xsd with 26 occurrences migrated to:     https://www.springframework.org/schema/mvc/spring-mvc.xsd ([https](https://www.springframework.org/schema/mvc/spring-mvc.xsd) result 200). * [ ] http://www.springframework.org/schema/oxm/spring-oxm.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/oxm/spring-oxm.xsd ([https](https://www.springframework.org/schema/oxm/spring-oxm.xsd) result 200). * [ ] http://www.springframework.org/schema/task/spring-task-4.1.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/task/spring-task-4.1.xsd ([https](https://www.springframework.org/schema/task/spring-task-4.1.xsd) result 200). * [ ] http://www.springframework.org/schema/task/spring-task.xsd with 6 occurrences migrated to:     https://www.springframework.org/schema/task/spring-task.xsd ([https](https://www.springframework.org/schema/task/spring-task.xsd) result 200). * [ ] http://www.springframework.org/schema/tx/spring-tx-2.5.xsd with 3 occurrences migrated to:     https://www.springframework.org/schema/tx/spring-tx-2.5.xsd ([https](https://www.springframework.org/schema/tx/spring-tx-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/tx/spring-tx-4.0.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/tx/spring-tx-4.0.xsd ([https](https://www.springframework.org/schema/tx/spring-tx-4.0.xsd) result 200). * [ ] http://www.springframework.org/schema/tx/spring-tx.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/tx/spring-tx.xsd ([https](https://www.springframework.org/schema/tx/spring-tx.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-2.0.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-2.0.xsd ([https](https://www.springframework.org/schema/util/spring-util-2.0.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-2.5.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-2.5.xsd ([https](https://www.springframework.org/schema/util/spring-util-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-3.0.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-3.0.xsd ([https](https://www.springframework.org/schema/util/spring-util-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-3.1.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-3.1.xsd ([https](https://www.springframework.org/schema/util/spring-util-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-4.1.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-4.1.xsd ([https](https://www.springframework.org/schema/util/spring-util-4.1.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-4.2.xsd with 4 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-4.2.xsd ([https](https://www.springframework.org/schema/util/spring-util-4.2.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util.xsd ([https](https://www.springframework.org/schema/util/spring-util.xsd) result 200). * [ ] http://www.springframework.org/schema/websocket/spring-websocket.xsd with 11 occurrences migrated to:     https://www.springframework.org/schema/websocket/spring-websocket.xsd ([https](https://www.springframework.org/schema/websocket/spring-websocket.xsd) result 200). * [ ] http://www.w3.org/1999/02/22-rdf-syntax-ns with 2 occurrences migrated to:     https://www.w3.org/1999/02/22-rdf-syntax-ns ([https](https://www.w3.org/1999/02/22-rdf-syntax-ns) result 200). * [ ] http://mydomain1.com with 2 occurrences migrated to:     https://mydomain1.com ([https](https://mydomain1.com) result 301). * [ ] http://www.springframework.org with 1 occurrences migrated to:     https://www.springframework.org ([https](https://www.springframework.org) result 301). * [ ] http://help.sap.com/saphelp_hanaplatform/helpdata/en/20/a78d3275191014b41bae7c4a46d835/content.htm with 1 occurrences migrated to:     https://help.sap.com/saphelp_hanaplatform/helpdata/en/20/a78d3275191014b41bae7c4a46d835/content.htm ([https](https://help.sap.com/saphelp_hanaplatform/helpdata/en/20/a78d3275191014b41bae7c4a46d835/content.htm) result 302). * [ ] http://java.sun.com/xml/ns/j2ee/connector_1_5.xsd with 1 occurrences migrated to:     https://java.sun.com/xml/ns/j2ee/connector_1_5.xsd ([https](https://java.sun.com/xml/ns/j2ee/connector_1_5.xsd) result 302). * [ ] http://java.sun.com/xml/ns/javaee/web-fragment_3_0.xsd with 1 occurrences migrated to:     https://java.sun.com/xml/ns/javaee/web-fragment_3_0.xsd ([https](https://java.sun.com/xml/ns/javaee/web-fragment_3_0.xsd) result 302). * [ ] http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd with 12 occurrences migrated to:     https://java.sun.com/xml/ns/persistence/persistence_1_0.xsd ([https](https://java.sun.com/xml/ns/persistence/persistence_1_0.xsd) result 302). * [ ] http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd with 1 occurrences migrated to:     https://java.sun.com/xml/ns/persistence/persistence_2_0.xsd ([https](https://java.sun.com/xml/ns/persistence/persistence_2_0.xsd) result 302). * [ ] http://purl.org/dc/dcmitype/StillImage with 2 occurrences migrated to:     https://purl.org/dc/dcmitype/StillImage ([https](https://purl.org/dc/dcmitype/StillImage) result 302).  # Ignored These URLs were intentionally ignored.  * http://creativecommons.org/ns with 2 occurrences * http://java.sun.com/dtd/properties.dtd with 4 occurrences * http://java.sun.com/xml/ns/j2ee with 2 occurrences * http://java.sun.com/xml/ns/javaee with 2 occurrences * http://java.sun.com/xml/ns/persistence with 27 occurrences * http://localhost:8080 with 3 occurrences * http://purl.org/dc/elements/1.1/ with 2 occurrences * http://samples.springframework.org/flight with 7 occurrences * http://schemas.microsoft.com/visio/2003/SVGExtensions/ with 7 occurrences * http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd with 2 occurrences * http://www.foo.com/schema/component with 2 occurrences * http://www.greeting.com/goodbye/ with 1 occurrences * http://www.greeting.com/hello/ with 1 occurrences * http://www.inkscape.org/namespaces/inkscape with 2 occurrences * http://www.quartz-scheduler.org/xml/JobSchedulingData with 2 occurrences * http://www.springframework.org/schema/aop with 176 occurrences * http://www.springframework.org/schema/beans with 711 occurrences * http://www.springframework.org/schema/beans/test with 2 occurrences * http://www.springframework.org/schema/c with 9 occurrences * http://www.springframework.org/schema/cache with 20 occurrences * http://www.springframework.org/schema/context with 124 occurrences * http://www.springframework.org/schema/jdbc with 66 occurrences * http://www.springframework.org/schema/jee with 2 occurrences * http://www.springframework.org/schema/jms with 20 occurrences * http://www.springframework.org/schema/lang with 27 occurrences * http://www.springframework.org/schema/mvc with 58 occurrences * http://www.springframework.org/schema/oxm with 2 occurrences * http://www.springframework.org/schema/p with 16 occurrences * http://www.springframework.org/schema/task with 14 occurrences * http://www.springframework.org/schema/tx with 12 occurrences * http://www.springframework.org/schema/util with 28 occurrences * http://www.springframework.org/schema/websocket with 22 occurrences * http://www.w3.org/2000/svg with 9 occurrences * http://www.w3.org/2001/XMLSchema-instance with 373 occurrences * http://www.w3.org/2005/Atom with 2 occurrences","closed","type: task,","spring-operator","2019-03-26T05:37:19Z","2019-03-27T16:44:55Z"
"","22668","URL Cleanup","This commit updates URLs to prefer the https protocol. Redirects are not followed to avoid accidentally expanding intentionally shortened URLs (i.e. if using a URL shortener).  # HTTP URLs that Could Not Be Fixed These URLs were unable to be fixed. Please review them to see if they can be manually resolved.  * [ ] http://castor.org/mapping.dtd (301) with 1 occurrences could not be migrated:      ([https](https://castor.org/mapping.dtd) result AnnotatedConnectException). * [ ] http://mydomain2.com (302) with 2 occurrences could not be migrated:      ([https](https://mydomain2.com) result ConnectTimeoutException). * [ ] http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd (404) with 2 occurrences could not be migrated:      ([https](https://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd) result AnnotatedConnectException). * [ ] http://www.foo.com/schema/component/component.xsd (404) with 1 occurrences could not be migrated:      ([https](https://www.foo.com/schema/component/component.xsd) result SSLHandshakeException).  # Fixed URLs  ## Fixed But Review Recommended These URLs were fixed, but the https status was not OK. However, the https status was the same as the http request or http redirected to an https URL, so they were migrated. Your review is recommended.  * [ ] http://www.kbcafe.com/rss/atom.xsd.xml (ConnectTimeoutException) with 1 occurrences migrated to:     https://www.kbcafe.com/rss/atom.xsd.xml ([https](https://www.kbcafe.com/rss/atom.xsd.xml) result ConnectTimeoutException). * [ ] http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd (ReadTimeoutException) with 5 occurrences migrated to:     https://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd ([https](https://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd) result ReadTimeoutException). * [ ] http://domain1.com (UnknownHostException) with 2 occurrences migrated to:     https://domain1.com ([https](https://domain1.com) result UnknownHostException). * [ ] http://domain2.com (UnknownHostException) with 1 occurrences migrated to:     https://domain2.com ([https](https://domain2.com) result UnknownHostException). * [ ] http://mydomain1.com,http://mydomain2.com (UnknownHostException) with 1 occurrences migrated to:     https://mydomain1.com,http://mydomain2.com ([https](https://mydomain1.com,https://mydomain2.com) result UnknownHostException). * [ ] http://mydomain3.com,http://mydomain4.com (UnknownHostException) with 1 occurrences migrated to:     https://mydomain3.com,http://mydomain4.com ([https](https://mydomain3.com,https://mydomain4.com) result UnknownHostException). * [ ] http://www.springframework.org/schema/beans/factory/xml/support/CustomNamespaceHandlerTests.xsd (404) with 1 occurrences migrated to:     https://www.springframework.org/schema/beans/factory/xml/support/CustomNamespaceHandlerTests.xsd ([https](https://www.springframework.org/schema/beans/factory/xml/support/CustomNamespaceHandlerTests.xsd) result 404).  ## Fixed Success  These URLs were switched to an https URL with a 2xx status. While the status was successful, your review is still recommended.  * [ ] http://creativecommons.org/ns with 2 occurrences migrated to:     https://creativecommons.org/ns ([https](https://creativecommons.org/ns) result 200). * [ ] http://example.com with 1 occurrences migrated to:     https://example.com ([https](https://example.com) result 200). * [ ] http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd (301) with 2 occurrences migrated to:     https://hibernate.org/dtd/hibernate-mapping-3.0.dtd ([https](https://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd) result 200). * [ ] http://testng.org/testng-1.0.dtd with 3 occurrences migrated to:     https://testng.org/testng-1.0.dtd ([https](https://testng.org/testng-1.0.dtd) result 200). * [ ] http://tiles.apache.org/dtds/tiles-config_2_0.dtd with 2 occurrences migrated to:     https://tiles.apache.org/dtds/tiles-config_2_0.dtd ([https](https://tiles.apache.org/dtds/tiles-config_2_0.dtd) result 200). * [ ] http://tiles.apache.org/dtds/tiles-config_2_1.dtd with 2 occurrences migrated to:     https://tiles.apache.org/dtds/tiles-config_2_1.dtd ([https](https://tiles.apache.org/dtds/tiles-config_2_1.dtd) result 200). * [ ] http://tiles.apache.org/dtds/tiles-config_3_0.dtd with 4 occurrences migrated to:     https://tiles.apache.org/dtds/tiles-config_3_0.dtd ([https](https://tiles.apache.org/dtds/tiles-config_3_0.dtd) result 200). * [ ] http://www.quartz-scheduler.org/xml/job_scheduling_data_1_8.xsd with 1 occurrences migrated to:     https://www.quartz-scheduler.org/xml/job_scheduling_data_1_8.xsd ([https](https://www.quartz-scheduler.org/xml/job_scheduling_data_1_8.xsd) result 200). * [ ] http://www.springframework.org/dtd/spring-beans-2.0.dtd with 176 occurrences migrated to:     https://www.springframework.org/dtd/spring-beans-2.0.dtd ([https](https://www.springframework.org/dtd/spring-beans-2.0.dtd) result 200). * [ ] http://www.springframework.org/schema/aop/spring-aop-2.0.xsd with 68 occurrences migrated to:     https://www.springframework.org/schema/aop/spring-aop-2.0.xsd ([https](https://www.springframework.org/schema/aop/spring-aop-2.0.xsd) result 200). * [ ] http://www.springframework.org/schema/aop/spring-aop-2.5.xsd with 11 occurrences migrated to:     https://www.springframework.org/schema/aop/spring-aop-2.5.xsd ([https](https://www.springframework.org/schema/aop/spring-aop-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/aop/spring-aop-3.0.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/aop/spring-aop-3.0.xsd ([https](https://www.springframework.org/schema/aop/spring-aop-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/aop/spring-aop.xsd with 7 occurrences migrated to:     https://www.springframework.org/schema/aop/spring-aop.xsd ([https](https://www.springframework.org/schema/aop/spring-aop.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-2.0.xsd with 112 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-2.0.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-2.0.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-2.5.xsd with 46 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-2.5.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-3.0.xsd with 10 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-3.0.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-3.1.xsd with 33 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-3.1.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-3.2.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-3.2.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-3.2.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-4.0.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-4.0.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-4.0.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-4.1.xsd with 3 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-4.1.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-4.1.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-4.2.xsd with 4 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-4.2.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-4.2.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-4.3.xsd with 4 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-4.3.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-4.3.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans.xsd with 142 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans.xsd ([https](https://www.springframework.org/schema/beans/spring-beans.xsd) result 200). * [ ] http://www.springframework.org/schema/cache/spring-cache.xsd with 10 occurrences migrated to:     https://www.springframework.org/schema/cache/spring-cache.xsd ([https](https://www.springframework.org/schema/cache/spring-cache.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-2.5.xsd with 41 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-2.5.xsd ([https](https://www.springframework.org/schema/context/spring-context-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-3.0.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-3.0.xsd ([https](https://www.springframework.org/schema/context/spring-context-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-3.1.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-3.1.xsd ([https](https://www.springframework.org/schema/context/spring-context-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-3.2.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-3.2.xsd ([https](https://www.springframework.org/schema/context/spring-context-3.2.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-4.0.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-4.0.xsd ([https](https://www.springframework.org/schema/context/spring-context-4.0.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-4.2.xsd with 4 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-4.2.xsd ([https](https://www.springframework.org/schema/context/spring-context-4.2.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context-4.3.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context-4.3.xsd ([https](https://www.springframework.org/schema/context/spring-context-4.3.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context.xsd with 10 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context.xsd ([https](https://www.springframework.org/schema/context/spring-context.xsd) result 200). * [ ] http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd with 9 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd ([https](https://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd with 5 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd ([https](https://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd with 9 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd ([https](https://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd) result 200). * [ ] http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd ([https](https://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd) result 200). * [ ] http://www.springframework.org/schema/jdbc/spring-jdbc.xsd with 8 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-jdbc.xsd ([https](https://www.springframework.org/schema/jdbc/spring-jdbc.xsd) result 200). * [ ] http://www.springframework.org/schema/jee/spring-jee-3.1.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/jee/spring-jee-3.1.xsd ([https](https://www.springframework.org/schema/jee/spring-jee-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/jms/spring-jms-4.1.xsd with 9 occurrences migrated to:     https://www.springframework.org/schema/jms/spring-jms-4.1.xsd ([https](https://www.springframework.org/schema/jms/spring-jms-4.1.xsd) result 200). * [ ] http://www.springframework.org/schema/jms/spring-jms-4.2.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/jms/spring-jms-4.2.xsd ([https](https://www.springframework.org/schema/jms/spring-jms-4.2.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang-2.0.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang-2.0.xsd ([https](https://www.springframework.org/schema/lang/spring-lang-2.0.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang-2.5.xsd with 3 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang-2.5.xsd ([https](https://www.springframework.org/schema/lang/spring-lang-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang-3.0.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang-3.0.xsd ([https](https://www.springframework.org/schema/lang/spring-lang-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang-3.1.xsd with 5 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang-3.1.xsd ([https](https://www.springframework.org/schema/lang/spring-lang-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang-4.2.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang-4.2.xsd ([https](https://www.springframework.org/schema/lang/spring-lang-4.2.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang.xsd ([https](https://www.springframework.org/schema/lang/spring-lang.xsd) result 200). * [ ] http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd ([https](https://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd ([https](https://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd) result 200). * [ ] http://www.springframework.org/schema/mvc/spring-mvc.xsd with 26 occurrences migrated to:     https://www.springframework.org/schema/mvc/spring-mvc.xsd ([https](https://www.springframework.org/schema/mvc/spring-mvc.xsd) result 200). * [ ] http://www.springframework.org/schema/oxm/spring-oxm.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/oxm/spring-oxm.xsd ([https](https://www.springframework.org/schema/oxm/spring-oxm.xsd) result 200). * [ ] http://www.springframework.org/schema/task/spring-task-4.1.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/task/spring-task-4.1.xsd ([https](https://www.springframework.org/schema/task/spring-task-4.1.xsd) result 200). * [ ] http://www.springframework.org/schema/task/spring-task.xsd with 6 occurrences migrated to:     https://www.springframework.org/schema/task/spring-task.xsd ([https](https://www.springframework.org/schema/task/spring-task.xsd) result 200). * [ ] http://www.springframework.org/schema/tx/spring-tx-2.5.xsd with 3 occurrences migrated to:     https://www.springframework.org/schema/tx/spring-tx-2.5.xsd ([https](https://www.springframework.org/schema/tx/spring-tx-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/tx/spring-tx-4.0.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/tx/spring-tx-4.0.xsd ([https](https://www.springframework.org/schema/tx/spring-tx-4.0.xsd) result 200). * [ ] http://www.springframework.org/schema/tx/spring-tx.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/tx/spring-tx.xsd ([https](https://www.springframework.org/schema/tx/spring-tx.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-2.0.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-2.0.xsd ([https](https://www.springframework.org/schema/util/spring-util-2.0.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-2.5.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-2.5.xsd ([https](https://www.springframework.org/schema/util/spring-util-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-3.0.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-3.0.xsd ([https](https://www.springframework.org/schema/util/spring-util-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-3.1.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-3.1.xsd ([https](https://www.springframework.org/schema/util/spring-util-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-4.1.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-4.1.xsd ([https](https://www.springframework.org/schema/util/spring-util-4.1.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util-4.2.xsd with 4 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util-4.2.xsd ([https](https://www.springframework.org/schema/util/spring-util-4.2.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util.xsd ([https](https://www.springframework.org/schema/util/spring-util.xsd) result 200). * [ ] http://www.springframework.org/schema/websocket/spring-websocket.xsd with 11 occurrences migrated to:     https://www.springframework.org/schema/websocket/spring-websocket.xsd ([https](https://www.springframework.org/schema/websocket/spring-websocket.xsd) result 200). * [ ] http://www.w3.org/1999/02/22-rdf-syntax-ns with 2 occurrences migrated to:     https://www.w3.org/1999/02/22-rdf-syntax-ns ([https](https://www.w3.org/1999/02/22-rdf-syntax-ns) result 200). * [ ] http://mydomain1.com with 2 occurrences migrated to:     https://mydomain1.com ([https](https://mydomain1.com) result 301). * [ ] http://www.springframework.org with 1 occurrences migrated to:     https://www.springframework.org ([https](https://www.springframework.org) result 301). * [ ] http://help.sap.com/saphelp_hanaplatform/helpdata/en/20/a78d3275191014b41bae7c4a46d835/content.htm with 1 occurrences migrated to:     https://help.sap.com/saphelp_hanaplatform/helpdata/en/20/a78d3275191014b41bae7c4a46d835/content.htm ([https](https://help.sap.com/saphelp_hanaplatform/helpdata/en/20/a78d3275191014b41bae7c4a46d835/content.htm) result 302). * [ ] http://java.sun.com/dtd/properties.dtd with 4 occurrences migrated to:     https://java.sun.com/dtd/properties.dtd ([https](https://java.sun.com/dtd/properties.dtd) result 302). * [ ] http://java.sun.com/xml/ns/j2ee/connector_1_5.xsd with 1 occurrences migrated to:     https://java.sun.com/xml/ns/j2ee/connector_1_5.xsd ([https](https://java.sun.com/xml/ns/j2ee/connector_1_5.xsd) result 302). * [ ] http://java.sun.com/xml/ns/javaee/web-fragment_3_0.xsd with 1 occurrences migrated to:     https://java.sun.com/xml/ns/javaee/web-fragment_3_0.xsd ([https](https://java.sun.com/xml/ns/javaee/web-fragment_3_0.xsd) result 302). * [ ] http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd with 12 occurrences migrated to:     https://java.sun.com/xml/ns/persistence/persistence_1_0.xsd ([https](https://java.sun.com/xml/ns/persistence/persistence_1_0.xsd) result 302). * [ ] http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd with 1 occurrences migrated to:     https://java.sun.com/xml/ns/persistence/persistence_2_0.xsd ([https](https://java.sun.com/xml/ns/persistence/persistence_2_0.xsd) result 302). * [ ] http://purl.org/dc/dcmitype/StillImage with 2 occurrences migrated to:     https://purl.org/dc/dcmitype/StillImage ([https](https://purl.org/dc/dcmitype/StillImage) result 302).  # Ignored These URLs were intentionally ignored.  * http://java.sun.com/xml/ns/j2ee with 2 occurrences * http://java.sun.com/xml/ns/javaee with 2 occurrences * http://java.sun.com/xml/ns/persistence with 27 occurrences * http://localhost:8080 with 3 occurrences * http://purl.org/dc/elements/1.1/ with 2 occurrences * http://samples.springframework.org/flight with 7 occurrences * http://schemas.microsoft.com/visio/2003/SVGExtensions/ with 7 occurrences * http://www.foo.com/schema/component with 2 occurrences * http://www.greeting.com/goodbye/ with 1 occurrences * http://www.greeting.com/hello/ with 1 occurrences * http://www.inkscape.org/namespaces/inkscape with 2 occurrences * http://www.quartz-scheduler.org/xml/JobSchedulingData with 2 occurrences * http://www.springframework.org/schema/aop with 176 occurrences * http://www.springframework.org/schema/beans with 715 occurrences * http://www.springframework.org/schema/beans/test with 2 occurrences * http://www.springframework.org/schema/c with 9 occurrences * http://www.springframework.org/schema/cache with 20 occurrences * http://www.springframework.org/schema/context with 126 occurrences * http://www.springframework.org/schema/jdbc with 66 occurrences * http://www.springframework.org/schema/jee with 2 occurrences * http://www.springframework.org/schema/jms with 20 occurrences * http://www.springframework.org/schema/lang with 27 occurrences * http://www.springframework.org/schema/mvc with 58 occurrences * http://www.springframework.org/schema/oxm with 2 occurrences * http://www.springframework.org/schema/p with 16 occurrences * http://www.springframework.org/schema/task with 14 occurrences * http://www.springframework.org/schema/tx with 12 occurrences * http://www.springframework.org/schema/util with 28 occurrences * http://www.springframework.org/schema/websocket with 22 occurrences * http://www.w3.org/2000/svg with 9 occurrences * http://www.w3.org/2001/XMLSchema-instance with 375 occurrences * http://www.w3.org/2005/Atom with 2 occurrences","closed","","spring-operator","2019-03-26T03:52:42Z","2022-02-18T19:10:06Z"
"","22679","URL Cleanup","This commit updates URLs to prefer the https protocol. Redirects are not followed to avoid accidentally expanding intentionally shortened URLs (i.e. if using a URL shortener).  # HTTP URLs that Could Not Be Fixed These URLs were unable to be fixed. Please review them to see if they can be manually resolved.  * [ ] http://aopalliance.sourceforge.net (200) with 1 occurrences could not be migrated:      ([https](https://aopalliance.sourceforge.net) result AnnotatedConnectException). * [ ] http://classdoc.sourceforge.net (200) with 1 occurrences could not be migrated:      ([https](https://classdoc.sourceforge.net) result AnnotatedConnectException). * [ ] http://code.jquery.com:80/jquery.js (200) with 1 occurrences could not be migrated:      ([https](https://code.jquery.com:80/jquery.js) result SSLException). * [ ] http://dbunit.sourceforge.net/ (200) with 1 occurrences could not be migrated:      ([https](https://dbunit.sourceforge.net/) result AnnotatedConnectException). * [ ] http://docs.groovy-lang.org/docs/next/html/documentation/template-engines.html (200) with 1 occurrences could not be migrated:      ([https](https://docs.groovy-lang.org/docs/next/html/documentation/template-engines.html) result SSLProtocolException). * [ ] http://domain3.com (200) with 6 occurrences could not be migrated:      ([https](https://domain3.com) result ConnectTimeoutException). * [ ] http://forum.thymeleaf.org/Thymeleaf-3-0-8-JUST-PUBLISHED-td4030687.html (200) with 1 occurrences could not be migrated:      ([https](https://forum.thymeleaf.org/Thymeleaf-3-0-8-JUST-PUBLISHED-td4030687.html) result SSLHandshakeException). * [ ] http://gregfranko.com/jquery.tocify.js/ (200) with 1 occurrences could not be migrated:      ([https](https://gregfranko.com/jquery.tocify.js/) result SSLHandshakeException). * [ ] http://grinder.sourceforge.net/ (200) with 1 occurrences could not be migrated:      ([https](https://grinder.sourceforge.net/) result AnnotatedConnectException). * [ ] http://groovy-lang.org/templating.html (200) with 3 occurrences could not be migrated:      ([https](https://groovy-lang.org/templating.html) result SSLProtocolException). * [ ] http://hsqldb.org (200) with 1 occurrences could not be migrated:      ([https](https://hsqldb.org) result SSLHandshakeException). * [ ] http://htmlunit.sourceforge.net/ (200) with 3 occurrences could not be migrated:      ([https](https://htmlunit.sourceforge.net/) result AnnotatedConnectException). * [ ] http://htmlunit.sourceforge.net/gettingStarted.html (200) with 1 occurrences could not be migrated:      ([https](https://htmlunit.sourceforge.net/gettingStarted.html) result AnnotatedConnectException). * [ ] http://htmlunit.sourceforge.net/javascript.html (200) with 1 occurrences could not be migrated:      ([https](https://htmlunit.sourceforge.net/javascript.html) result AnnotatedConnectException). * [ ] http://javadiff.cvs.sourceforge.net/ (200) with 3 occurrences could not be migrated:      ([https](https://javadiff.cvs.sourceforge.net/) result SSLHandshakeException). * [ ] http://jibx.sourceforge.net/ (200) with 2 occurrences could not be migrated:      ([https](https://jibx.sourceforge.net/) result AnnotatedConnectException). * [ ] http://joda-time.sourceforge.net (200) with 1 occurrences could not be migrated:      ([https](https://joda-time.sourceforge.net) result AnnotatedConnectException). * [ ] http://jotm.objectweb.org/ (200) with 1 occurrences could not be migrated:      ([https](https://jotm.objectweb.org/) result NotSslRecordException). * [ ] http://json-b.net/ (200) with 1 occurrences could not be migrated:      ([https](https://json-b.net/) result SSLHandshakeException). * [ ] http://mx4j.sourceforge.net (200) with 1 occurrences could not be migrated:      ([https](https://mx4j.sourceforge.net) result AnnotatedConnectException). * [ ] http://mx4j.sourceforge.net/ (200) with 1 occurrences could not be migrated:      ([https](https://mx4j.sourceforge.net/) result AnnotatedConnectException). * [ ] http://mydomain3.com (200) with 9 occurrences could not be migrated:      ([https](https://mydomain3.com) result ConnectTimeoutException). * [ ] http://objenesis.org (200) with 1 occurrences could not be migrated:      ([https](https://objenesis.org) result SSLHandshakeException). * [ ] http://objenesis.org/tutorial.html (200) with 1 occurrences could not be migrated:      ([https](https://objenesis.org/tutorial.html) result SSLHandshakeException). * [ ] http://other.com/ (200) with 2 occurrences could not be migrated:      ([https](https://other.com/) result SSLHandshakeException). * [ ] http://reactivex.io/ (200) with 1 occurrences could not be migrated:      ([https](https://reactivex.io/) result SSLHandshakeException). * [ ] http://reactivex.io/documentation/operators.html (200) with 1 occurrences could not be migrated:      ([https](https://reactivex.io/documentation/operators.html) result SSLHandshakeException). * [ ] http://url.somewhereelse.com (200) with 4 occurrences could not be migrated:      ([https](https://url.somewhereelse.com) result SSLHandshakeException). * [ ] http://www.beanshell.org (200) with 1 occurrences could not be migrated:      ([https](https://www.beanshell.org) result SSLHandshakeException). * [ ] http://www.beanshell.org/ (200) with 1 occurrences could not be migrated:      ([https](https://www.beanshell.org/) result SSLHandshakeException). * [ ] http://www.doclet.com (200) with 1 occurrences could not be migrated:      ([https](https://www.doclet.com) result AnnotatedConnectException). * [ ] http://www.gebish.org/ (200) with 1 occurrences could not be migrated:      ([https](https://www.gebish.org/) result SSLHandshakeException). * [ ] http://www.gebish.org/manual/current/ (200) with 2 occurrences could not be migrated:      ([https](https://www.gebish.org/manual/current/) result SSLHandshakeException). * [ ] http://www.groovy-lang.org/ (200) with 2 occurrences could not be migrated:      ([https](https://www.groovy-lang.org/) result SSLProtocolException). * [ ] http://www.groovy-lang.org/operators.html (200) with 2 occurrences could not be migrated:      ([https](https://www.groovy-lang.org/operators.html) result SSLProtocolException). * [ ] http://www.hsqldb.org (200) with 1 occurrences could not be migrated:      ([https](https://www.hsqldb.org) result SSLHandshakeException). * [ ] http://www.jensgulden.de (200) with 1 occurrences could not be migrated:      ([https](https://www.jensgulden.de) result AnnotatedConnectException). * [ ] http://www.mockobjects.com (200) with 2 occurrences could not be migrated:      ([https](https://www.mockobjects.com) result ClosedChannelException). * [ ] http://www.mockobjects.com/ (200) with 1 occurrences could not be migrated:      ([https](https://www.mockobjects.com/) result ClosedChannelException). * [ ] http://xmlunit.sourceforge.net/ (200) with 2 occurrences could not be migrated:      ([https](https://xmlunit.sourceforge.net/) result AnnotatedConnectException). * [ ] http://192.168.0.1/mvc-showcase (301) with 1 occurrences could not be migrated:      ([https](https://192.168.0.1/mvc-showcase) result ConnectTimeoutException). * [ ] http://www.easymock.org (301) with 2 occurrences could not be migrated:      ([https](https://www.easymock.org) result SSLHandshakeException). * [ ] http://www.easymock.org/ (301) with 1 occurrences could not be migrated:      ([https](https://www.easymock.org/) result SSLHandshakeException). * [ ] http://www.jmock.org/ (301) with 1 occurrences could not be migrated:      ([https](https://www.jmock.org/) result SSLHandshakeException). * [ ] http://foo.com (301) with 4 occurrences could not be migrated:      ([https](https://foo.com) result SSLHandshakeException). * [ ] http://foo.com/ (301) with 1 occurrences could not be migrated:      ([https](https://foo.com/) result SSLHandshakeException). * [ ] http://foo.com/a (301) with 1 occurrences could not be migrated:      ([https](https://foo.com/a) result SSLHandshakeException). * [ ] http://foo.com/a?foo=bar&foo=baz (301) with 4 occurrences could not be migrated:      ([https](https://foo.com/a?foo=bar&foo=baz) result SSLHandshakeException). * [ ] http://foo.com/bar (301) with 5 occurrences could not be migrated:      ([https](https://foo.com/bar) result SSLHandshakeException). * [ ] http://foo.com/baz (301) with 1 occurrences could not be migrated:      ([https](https://foo.com/baz) result SSLHandshakeException). * [ ] http://foo.com/rest/books/6.json (301) with 1 occurrences could not be migrated:      ([https](https://foo.com/rest/books/6.json) result SSLHandshakeException). * [ ] http://foo.com/rest/books/6/pages/1.json (301) with 1 occurrences could not be migrated:      ([https](https://foo.com/rest/books/6/pages/1.json) result SSLHandshakeException). * [ ] http://foo.com/v1 (301) with 1 occurrences could not be migrated:      ([https](https://foo.com/v1) result SSLHandshakeException). * [ ] http://foo.com/v1/123 (301) with 1 occurrences could not be migrated:      ([https](https://foo.com/v1/123) result SSLHandshakeException). * [ ] http://foo.com/v1/bar (301) with 1 occurrences could not be migrated:      ([https](https://foo.com/v1/bar) result SSLHandshakeException). * [ ] http://foo.com/v1?id=123 (301) with 2 occurrences could not be migrated:      ([https](https://foo.com/v1?id=123) result SSLHandshakeException). * [ ] http://foo.com/wrong (301) with 1 occurrences could not be migrated:      ([https](https://foo.com/wrong) result SSLHandshakeException). * [ ] http://mydomain4.com (301) with 3 occurrences could not be migrated:      ([https](https://mydomain4.com) result SSLHandshakeException). * [ ] http://www.caucho.com/hessian (302) with 6 occurrences could not be migrated:      ([https](https://www.caucho.com/hessian) result SSLHandshakeException). * [ ] http://mydomain2.com (302) with 22 occurrences could not be migrated:      ([https](https://mydomain2.com) result ConnectTimeoutException). * [ ] http://www.jdiff.org (302) with 1 occurrences could not be migrated:      ([https](https://www.jdiff.org) result ConnectTimeoutException). * [ ] http://example.com:80/test/this/here (404) with 3 occurrences could not be migrated:      ([https](https://example.com:80/test/this/here) result NotSslRecordException). * [ ] http://www.foo.com/schema/component/component.xsd (404) with 1 occurrences could not be migrated:      ([https](https://www.foo.com/schema/component/component.xsd) result SSLHandshakeException). * [ ] http://www.foo.com/schema/jcache (404) with 2 occurrences could not be migrated:      ([https](https://www.foo.com/schema/jcache) result SSLHandshakeException). * [ ] http://www.gebish.org/manual/current/testing.html (404) with 1 occurrences could not be migrated:      ([https](https://www.gebish.org/manual/current/testing.html) result SSLHandshakeException). * [ ] http://www.mycompany.com/schema/myns/myns.xsd (404) with 1 occurrences could not be migrated:      ([https](https://www.mycompany.com/schema/myns/myns.xsd) result ConnectTimeoutException). * [ ] http://xunitpatterns.com/Test%20Spy.html (404) with 1 occurrences could not be migrated:      ([https](https://xunitpatterns.com/Test%20Spy.html) result AnnotatedConnectException).  # Fixed URLs  ## Fixed But Review Recommended These URLs were fixed, but the https status was not OK. However, the https status was the same as the http request or http redirected to an https URL, so they were migrated. Your review is recommended.  * [ ] http://bugs.sun.com/view_bug.do?bug_id=6342411 (302) with 1 occurrences migrated to:     https://bugs.java.com/view_bug.do?bug_id=6342411 ([https](https://bugs.sun.com/view_bug.do?bug_id=6342411) result SSLHandshakeException). * [ ] http://bugs.sun.com/view_bug.do?bug_id=7023180 (302) with 2 occurrences migrated to:     https://bugs.java.com/view_bug.do?bug_id=7023180 ([https](https://bugs.sun.com/view_bug.do?bug_id=7023180) result SSLHandshakeException). * [ ] http://www.freemarker.org (301) with 5 occurrences migrated to:     https://freemarker.apache.org/ ([https](https://www.freemarker.org) result ConnectTimeoutException). * [ ] http://sockjs.org (303) with 2 occurrences migrated to:     https://github.com/sockjs/sockjs-client ([https](https://sockjs.org) result AnnotatedConnectException). * [ ] http://network.pivotal.io/open-source (301) with 1 occurrences migrated to:     https://network.pivotal.io/open-source ([https](https://network.pivotal.io/open-source) result ReadTimeoutException). * [ ] http://aaa.org:8080/a (301) with 1 occurrences migrated to:     https://www.aaa.org/articles/ ([https](https://aaa.org:8080/a) result NotSslRecordException). * [ ] http://aaa.org:8080/b/c/d (301) with 1 occurrences migrated to:     https://www.aaa.org/b/c/d ([https](https://aaa.org:8080/b/c/d) result ReadTimeoutException). * [ ] http://www.caucho.com/ (302) with 1 occurrences migrated to:     https://www.caucho.com/ ([https](https://www.caucho.com/) result SSLHandshakeException). * [ ] http://www.caucho.com (302) with 1 occurrences migrated to:     https://www.caucho.com/ ([https](https://www.caucho.com) result SSLHandshakeException). * [ ] http://jruby.org (301) with 4 occurrences migrated to:     https://www.jruby.org ([https](https://jruby.org) result SSLHandshakeException). * [ ] http://jruby.org/ (301) with 1 occurrences migrated to:     https://www.jruby.org ([https](https://jruby.org/) result SSLHandshakeException). * [ ] http://bbb.org:9090/b (AnnotatedConnectException) with 2 occurrences migrated to:     https://bbb.org:9090/b ([https](https://bbb.org:9090/b) result AnnotatedConnectException). * [ ] http://192.168.28.42/1.jsp (ConnectTimeoutException) with 3 occurrences migrated to:     https://192.168.28.42/1.jsp ([https](https://192.168.28.42/1.jsp) result ConnectTimeoutException). * [ ] http://example.com:8080/ (ConnectTimeoutException) with 1 occurrences migrated to:     https://example.com:8080/ ([https](https://example.com:8080/) result ConnectTimeoutException). * [ ] http://example.com:8080/bar (ConnectTimeoutException) with 5 occurrences migrated to:     https://example.com:8080/bar ([https](https://example.com:8080/bar) result ConnectTimeoutException). * [ ] http://example.org:9090 (ConnectTimeoutException) with 2 occurrences migrated to:     https://example.org:9090 ([https](https://example.org:9090) result ConnectTimeoutException). * [ ] http://example.org:9090/base (ConnectTimeoutException) with 12 occurrences migrated to:     https://example.org:9090/base ([https](https://example.org:9090/base) result ConnectTimeoutException). * [ ] http://example.org:9090/base/people (ConnectTimeoutException) with 2 occurrences migrated to:     https://example.org:9090/base/people ([https](https://example.org:9090/base/people) result ConnectTimeoutException). * [ ] http://example.org:9090/base/something/1/foo (ConnectTimeoutException) with 2 occurrences migrated to:     https://example.org:9090/base/something/1/foo ([https](https://example.org:9090/base/something/1/foo) result ConnectTimeoutException). * [ ] http://example.org:9090/base/something/else (ConnectTimeoutException) with 2 occurrences migrated to:     https://example.org:9090/base/something/else ([https](https://example.org:9090/base/something/else) result ConnectTimeoutException). * [ ] http://example.org:9999/base (ConnectTimeoutException) with 1 occurrences migrated to:     https://example.org:9999/base ([https](https://example.org:9999/base) result ConnectTimeoutException). * [ ] http://example.org:9999/base/people/123/addresses/DE (ConnectTimeoutException) with 1 occurrences migrated to:     https://example.org:9999/base/people/123/addresses/DE ([https](https://example.org:9999/base/people/123/addresses/DE) result ConnectTimeoutException). * [ ] http://example.org:9999/next (ConnectTimeoutException) with 1 occurrences migrated to:     https://example.org:9999/next ([https](https://example.org:9999/next) result ConnectTimeoutException). * [ ] http://example.org:9999/path?q=foo (ConnectTimeoutException) with 1 occurrences migrated to:     https://example.org:9999/path?q=foo ([https](https://example.org:9999/path?q=foo) result ConnectTimeoutException). * [ ] http://foo.com:8080/v1/bar?id=123 (ConnectTimeoutException) with 1 occurrences migrated to:     https://foo.com:8080/v1/bar?id=123 ([https](https://foo.com:8080/v1/bar?id=123) result ConnectTimeoutException). * [ ] http://mydomain1.com:123 (ConnectTimeoutException) with 1 occurrences migrated to:     https://mydomain1.com:123 ([https](https://mydomain1.com:123) result ConnectTimeoutException). * [ ] http://site1.com (ConnectTimeoutException) with 13 occurrences migrated to:     https://site1.com ([https](https://site1.com) result ConnectTimeoutException). * [ ] http://wwws.sun.com/software/xml/developers/diffmk/ (ConnectTimeoutException) with 1 occurrences migrated to:     https://wwws.sun.com/software/xml/developers/diffmk/ ([https](https://wwws.sun.com/software/xml/developers/diffmk/) result ConnectTimeoutException). * [ ] http://www.w3.org/TR/html4/loose.dtd (ReadTimeoutException) with 5 occurrences migrated to:     https://www.w3.org/TR/html4/loose.dtd ([https](https://www.w3.org/TR/html4/loose.dtd) result ReadTimeoutException). * [ ] http://DOMAIN2.com (UnknownHostException) with 2 occurrences migrated to:     https://DOMAIN2.com ([https](https://DOMAIN2.com) result UnknownHostException). * [ ] http://a.example.org/mvc-showcase (UnknownHostException) with 1 occurrences migrated to:     https://a.example.org/mvc-showcase ([https](https://a.example.org/mvc-showcase) result UnknownHostException). * [ ] http://arjen:foobar@java.sun.com:80 (UnknownHostException) with 1 occurrences migrated to:     https://arjen:foobar@java.sun.com:80 ([https](https://arjen:foobar@java.sun.com:80) result UnknownHostException). * [ ] http://dev.bar.com (UnknownHostException) with 3 occurrences migrated to:     https://dev.bar.com ([https](https://dev.bar.com) result UnknownHostException). * [ ] http://domain1.com (UnknownHostException) with 25 occurrences migrated to:     https://domain1.com ([https](https://domain1.com) result UnknownHostException). * [ ] http://domain1.com/test.html (UnknownHostException) with 4 occurrences migrated to:     https://domain1.com/test.html ([https](https://domain1.com/test.html) result UnknownHostException). * [ ] http://domain2.com (UnknownHostException) with 92 occurrences migrated to:     https://domain2.com ([https](https://domain2.com) result UnknownHostException). * [ ] http://example.com"",HttpMethod.GET (UnknownHostException) with 6 occurrences migrated to:     https://example.com"",HttpMethod.GET ([https](https://example.com"",HttpMethod.GET) result UnknownHostException). * [ ] http://foo.bar.com (UnknownHostException) with 4 occurrences migrated to:     https://foo.bar.com ([https](https://foo.bar.com) result UnknownHostException). * [ ] http://joe.openid.example.org/ (UnknownHostException) with 2 occurrences migrated to:     https://joe.openid.example.org/ ([https](https://joe.openid.example.org/) result UnknownHostException). * [ ] http://myserver/logo.png (UnknownHostException) with 1 occurrences migrated to:     https://myserver/logo.png ([https](https://myserver/logo.png) result UnknownHostException). * [ ] http://samples.springframework.org/order (UnknownHostException) with 2 occurrences migrated to:     https://samples.springframework.org/order ([https](https://samples.springframework.org/order) result UnknownHostException). * [ ] http://url.somewhere.com (UnknownHostException) with 25 occurrences migrated to:     https://url.somewhere.com ([https](https://url.somewhere.com) result UnknownHostException). * [ ] http://url.somewhere.com/path (UnknownHostException) with 1 occurrences migrated to:     https://url.somewhere.com/path ([https](https://url.somewhere.com/path) result UnknownHostException). * [ ] http://url.somewhere.com/path?id=1 (UnknownHostException) with 1 occurrences migrated to:     https://url.somewhere.com/path?id=1 ([https](https://url.somewhere.com/path?id=1) result UnknownHostException). * [ ] http://url.somewhere.com/test.htm (UnknownHostException) with 2 occurrences migrated to:     https://url.somewhere.com/test.htm ([https](https://url.somewhere.com/test.htm) result UnknownHostException). * [ ] http://url.somewhere.com?a=b&c=d (UnknownHostException) with 1 occurrences migrated to:     https://url.somewhere.com?a=b&c=d ([https](https://url.somewhere.com?a=b&c=d) result UnknownHostException). * [ ] http://url.somewhere.com?foo= (UnknownHostException) with 2 occurrences migrated to:     https://url.somewhere.com?foo= ([https](https://url.somewhere.com?foo=) result UnknownHostException). * [ ] http://url.somewhere.com?foo=bar (UnknownHostException) with 4 occurrences migrated to:     https://url.somewhere.com?foo=bar ([https](https://url.somewhere.com?foo=bar) result UnknownHostException). * [ ] http://url.somewhere.com?foo=bar&a=b&c=d (UnknownHostException) with 2 occurrences migrated to:     https://url.somewhere.com?foo=bar&a=b&c=d ([https](https://url.somewhere.com?foo=bar&a=b&c=d) result UnknownHostException). * [ ] http://wiki.fasterxml.com/JacksonHome (UnknownHostException) with 3 occurrences migrated to:     https://wiki.fasterxml.com/JacksonHome ([https](https://wiki.fasterxml.com/JacksonHome) result UnknownHostException). * [ ] http://wiki.fasterxml.com/JacksonJsonViews (UnknownHostException) with 4 occurrences migrated to:     https://wiki.fasterxml.com/JacksonJsonViews ([https](https://wiki.fasterxml.com/JacksonJsonViews) result UnknownHostException). * [ ] http://x.y.z (UnknownHostException) with 2 occurrences migrated to:     https://x.y.z ([https](https://x.y.z) result UnknownHostException). * [ ] http://abc.com/v1 (301) with 1 occurrences migrated to:     https://abc.go.com/v1 ([https](https://abc.com/v1) result 404). * [ ] http://abc.com/v1/accounts/43 (301) with 1 occurrences migrated to:     https://abc.go.com/v1/accounts/43 ([https](https://abc.com/v1/accounts/43) result 404). * [ ] http://abc.com/v1/accounts?q=12 (301) with 1 occurrences migrated to:     https://abc.go.com/v1/accounts?q=12 ([https](https://abc.com/v1/accounts?q=12) result 404). * [ ] http://abc.com/v2/accounts?q=12 (301) with 1 occurrences migrated to:     https://abc.go.com/v2/accounts?q=12 ([https](https://abc.com/v2/accounts?q=12) result 404). * [ ] http://docs.spring.io/v1/bar (301) with 1 occurrences migrated to:     https://docs.spring.io/v1/bar ([https](https://docs.spring.io/v1/bar) result 404). * [ ] http://example.com/-foo (404) with 2 occurrences migrated to:     https://example.com/-foo ([https](https://example.com/-foo) result 404). * [ ] http://example.com/1 (404) with 1 occurrences migrated to:     https://example.com/1 ([https](https://example.com/1) result 404). * [ ] http://example.com/1/2 (404) with 2 occurrences migrated to:     https://example.com/1/2 ([https](https://example.com/1/2) result 404). * [ ] http://example.com/2 (404) with 1 occurrences migrated to:     https://example.com/2 ([https](https://example.com/2) result 404). * [ ] http://example.com/a%20b?q=a%2Bb (404) with 1 occurrences migrated to:     https://example.com/a%20b?q=a%2Bb ([https](https://example.com/a%20b?q=a%2Bb) result 404). * [ ] http://example.com/abc/ (404) with 1 occurrences migrated to:     https://example.com/abc/ ([https](https://example.com/abc/) result 404). * [ ] http://example.com/abc/x/y (404) with 1 occurrences migrated to:     https://example.com/abc/x/y ([https](https://example.com/abc/x/y) result 404). * [ ] http://example.com/abc/x/y/z (404) with 3 occurrences migrated to:     https://example.com/abc/x/y/z ([https](https://example.com/abc/x/y/z) result 404). * [ ] http://example.com/app/login/authenticate (404) with 1 occurrences migrated to:     https://example.com/app/login/authenticate ([https](https://example.com/app/login/authenticate) result 404). * [ ] http://example.com/arbitrary/path (404) with 1 occurrences migrated to:     https://example.com/arbitrary/path ([https](https://example.com/arbitrary/path) result 404). * [ ] http://example.com/bar (404) with 6 occurrences migrated to:     https://example.com/bar ([https](https://example.com/bar) result 404). * [ ] http://example.com/context.xml (404) with 4 occurrences migrated to:     https://example.com/context.xml ([https](https://example.com/context.xml) result 404). * [ ] http://example.com/example (404) with 6 occurrences migrated to:     https://example.com/example ([https](https://example.com/example) result 404). * [ ] http://example.com/example/?name (404) with 1 occurrences migrated to:     https://example.com/example/?name ([https](https://example.com/example/?name) result 404). * [ ] http://example.com/example/?name= (404) with 1 occurrences migrated to:     https://example.com/example/?name= ([https](https://example.com/example/?name=) result 404). * [ ] http://example.com/example/?name=%20 (404) with 1 occurrences migrated to:     https://example.com/example/?name=%20 ([https](https://example.com/example/?name=%20) result 404). * [ ] http://example.com/example/?name=row%5B0%5D (404) with 1 occurrences migrated to:     https://example.com/example/?name=row%5B0%5D ([https](https://example.com/example/?name=row%5B0%5D) result 404). * [ ] http://example.com/example/?name=value (404) with 1 occurrences migrated to:     https://example.com/example/?name=value ([https](https://example.com/example/?name=value) result 404). * [ ] http://example.com/example/?name=value¶m2=value+2 (404) with 1 occurrences migrated to:     https://example.com/example/?name=value¶m2=value+2 ([https](https://example.com/example/?name=value¶m2=value+2) result 404). * [ ] http://example.com/example/?row%5B0%5D=value (404) with 1 occurrences migrated to:     https://example.com/example/?row%5B0%5D=value ([https](https://example.com/example/?row%5B0%5D=value) result 404). * [ ] http://example.com/foo (404) with 5 occurrences migrated to:     https://example.com/foo ([https](https://example.com/foo) result 404). * [ ] http://example.com/foo/../bar (404) with 1 occurrences migrated to:     https://example.com/foo/../bar ([https](https://example.com/foo/../bar) result 404). * [ ] http://example.com/foo/foo2?bar (404) with 1 occurrences migrated to:     https://example.com/foo/foo2?bar ([https](https://example.com/foo/foo2?bar) result 404). * [ ] http://example.com/foo?bar (404) with 4 occurrences migrated to:     https://example.com/foo?bar ([https](https://example.com/foo?bar) result 404). * [ ] http://example.com/foo?bar= (404) with 2 occurrences migrated to:     https://example.com/foo?bar= ([https](https://example.com/foo?bar=) result 404). * [ ] http://example.com/foo?bar=baz (404) with 2 occurrences migrated to:     https://example.com/foo?bar=baz ([https](https://example.com/foo?bar=baz) result 404). * [ ] http://example.com/foo?baz=42 (404) with 1 occurrences migrated to:     https://example.com/foo?baz=42 ([https](https://example.com/foo?baz=42) result 404). * [ ] http://example.com/foo?foo=bar&baz=qux (404) with 2 occurrences migrated to:     https://example.com/foo?foo=bar&baz=qux ([https](https://example.com/foo?foo=bar&baz=qux) result 404). * [ ] http://example.com/hotel (404) with 3 occurrences migrated to:     https://example.com/hotel ([https](https://example.com/hotel) result 404). * [ ] http://example.com/hotel%20list (404) with 1 occurrences migrated to:     https://example.com/hotel%20list ([https](https://example.com/hotel%20list) result 404). * [ ] http://example.com/hotel%20list/Z (404) with 1 occurrences migrated to:     https://example.com/hotel%20list/Z ([https](https://example.com/hotel%20list/Z) result 404). * [ ] http://example.com/hotel%20list/Z%C3%BCrich (404) with 3 occurrences migrated to:     https://example.com/hotel%20list/Z%C3%BCrich ([https](https://example.com/hotel%20list/Z%C3%BCrich) result 404). * [ ] http://example.com/hotels (404) with 3 occurrences migrated to:     https://example.com/hotels ([https](https://example.com/hotels) result 404). * [ ] http://example.com/hotels/ (404) with 15 occurrences migrated to:     https://example.com/hotels/ ([https](https://example.com/hotels/) result 404). * [ ] http://example.com/hotels/1/bookings/42 (404) with 1 occurrences migrated to:     https://example.com/hotels/1/bookings/42 ([https](https://example.com/hotels/1/bookings/42) result 404). * [ ] http://example.com/hotels/1/pic/pics%2Flogo.png/size/150x150 (404) with 2 occurrences migrated to:     https://example.com/hotels/1/pic/pics%2Flogo.png/size/150x150 ([https](https://example.com/hotels/1/pic/pics%2Flogo.png/size/150x150) result 404). * [ ] http://example.com/hotels/1/pic/pics/logo.png (404) with 1 occurrences migrated to:     https://example.com/hotels/1/pic/pics/logo.png ([https](https://example.com/hotels/1/pic/pics/logo.png) result 404). * [ ] http://example.com/hotels/42/bookings/21 (404) with 1 occurrences migrated to:     https://example.com/hotels/42/bookings/21 ([https](https://example.com/hotels/42/bookings/21) result 404). * [ ] http://example.com/hotels/42/bookings/42 (404) with 1 occurrences migrated to:     https://example.com/hotels/42/bookings/42 ([https](https://example.com/hotels/42/bookings/42) result 404). * [ ] http://example.com/hotels/Rest%20%26%20Relax/bookings/42 (404) with 2 occurrences migrated to:     https://example.com/hotels/Rest%20%26%20Relax/bookings/42 ([https](https://example.com/hotels/Rest%20%26%20Relax/bookings/42) result 404). * [ ] http://example.com/info (404) with 2 occurrences migrated to:     https://example.com/info ([https](https://example.com/info) result 404). * [ ] http://example.com/jquery-1.11.0.min.js (404) with 2 occurrences migrated to:     https://example.com/jquery-1.11.0.min.js ([https](https://example.com/jquery-1.11.0.min.js) result 404). * [ ] http://example.com/match (404) with 1 occurrences migrated to:     https://example.com/match ([https](https://example.com/match) result 404). * [ ] http://example.com/myFileUpload (404) with 1 occurrences migrated to:     https://example.com/myFileUpload ([https](https://example.com/myFileUpload) result 404). * [ ] http://example.com/myForm (404) with 1 occurrences migrated to:     https://example.com/myForm ([https](https://example.com/myForm) result 404). * [ ] http://example.com/path (404) with 6 occurrences migrated to:     https://example.com/path ([https](https://example.com/path) result 404). * [ ] http://example.com/path?query (404) with 2 occurrences migrated to:     https://example.com/path?query ([https](https://example.com/path?query) result 404). * [ ] http://example.com/path?query=foo (404) with 1 occurrences migrated to:     https://example.com/path?query=foo ([https](https://example.com/path?query=foo) result 404). * [ ] http://example.com/people (404) with 1 occurrences migrated to:     https://example.com/people ([https](https://example.com/people) result 404). * [ ] http://example.com/people/ (404) with 1 occurrences migrated to:     https://example.com/people/ ([https](https://example.com/people/) result 404). * [ ] http://example.com/prefix/path (404) with 2 occurrences migrated to:     https://example.com/prefix/path ([https](https://example.com/prefix/path) result 404). * [ ] http://example.com/resource (404) with 5 occurrences migrated to:     https://example.com/resource ([https](https://example.com/resource) result 404). * [ ] http://example.com/resource?access_token=123 (404) with 1 occurrences migrated to:     https://example.com/resource?access_token=123 ([https](https://example.com/resource?access_token=123) result 404). * [ ] http://example.com/spaces (404) with 1 occurrences migrated to:     https://example.com/spaces ([https](https://example.com/spaces) result 404). * [ ] http://example.com/spaces%20and%20%E2%82%AC (404) with 3 occurrences migrated to:     https://example.com/spaces%20and%20%E2%82%AC ([https](https://example.com/spaces%20and%20%E2%82%AC) result 404). * [ ] http://example.com/spring/ (404) with 1 occurrences migrated to:     https://example.com/spring/ ([https](https://example.com/spring/) result 404). * [ ] http://example.com/test/this/here (404) with 1 occurrences migrated to:     https://example.com/test/this/here ([https](https://example.com/test/this/here) result 404). * [ ] http://example.com/upload (404) with 1 occurrences migrated to:     https://example.com/upload ([https](https://example.com/upload) result 404). * [ ] http://example.com/user (404) with 1 occurrences migrated to:     https://example.com/user ([https](https://example.com/user) result 404). * [ ] http://example.org/fonts/css (404) with 6 occurrences migrated to:     https://example.org/fonts/css ([https](https://example.org/fonts/css) result 404). * [ ] http://example.org/foo/page.html (404) with 1 occurrences migrated to:     https://example.org/foo/page.html ([https](https://example.org/foo/page.html) result 404). * [ ] http://example.org/image.png (404) with 4 occurrences migrated to:     https://example.org/image.png ([https](https://example.org/image.png) result 404). * [ ] http://example.org/music/people (404) with 4 occurrences migrated to:     https://example.org/music/people ([https](https://example.org/music/people) result 404). * [ ] http://example.org/page.cache.html (404) with 1 occurrences migrated to:     https://example.org/page.cache.html ([https](https://example.org/page.cache.html) result 404). * [ ] http://example.org/path (404) with 3 occurrences migrated to:     https://example.org/path ([https](https://example.org/path) result 404). * [ ] http://springframework.org/oxm-test (404) with 2 occurrences migrated to:     https://springframework.org/oxm-test ([https](https://springframework.org/oxm-test) result 404). * [ ] http://aaa.org:8080/app/b/c/d (301) with 1 occurrences migrated to:     https://www.aaa.org/app/b/c/d ([https](https://aaa.org:8080/app/b/c/d) result 404). * [ ] http://www.example.com/favicon.ico (404) with 2 occurrences migrated to:     https://www.example.com/favicon.ico ([https](https://www.example.com/favicon.ico) result 404). * [ ] http://www.example.com/foo/bar (404) with 1 occurrences migrated to:     https://www.example.com/foo/bar ([https](https://www.example.com/foo/bar) result 404). * [ ] http://www.example.com/hotels (404) with 2 occurrences migrated to:     https://www.example.com/hotels ([https](https://www.example.com/hotels) result 404). * [ ] http://www.example.com/user/ (404) with 4 occurrences migrated to:     https://www.example.com/user/ ([https](https://www.example.com/user/) result 404). * [ ] http://www.example.com/user/john%3Bdoe/dashboard (404) with 4 occurrences migrated to:     https://www.example.com/user/john%3Bdoe/dashboard ([https](https://www.example.com/user/john%3Bdoe/dashboard) result 404). * [ ] http://www.example.com/user/john;doe/dashboard (404) with 2 occurrences migrated to:     https://www.example.com/user/john;doe/dashboard ([https](https://www.example.com/user/john;doe/dashboard) result 404). * [ ] http://www.ibm.com/developerworks/websphere/library/techarticles/0404_tang/0404_tang.html (301) with 1 occurrences migrated to:     https://www.ibm.com/developerworks/websphere/library/techarticles/0404_tang/0404_tang.html ([https](https://www.ibm.com/developerworks/websphere/library/techarticles/0404_tang/0404_tang.html) result 404). * [ ] http://mydomain1.com:80/path (301) with 2 occurrences migrated to:     https://www.mydomain1.com/path ([https](https://mydomain1.com:80/path) result 404). * [ ] http://www.quartz-scheduler.org/documentation/quartz-2.1.x/tutorials/tutorial-lesson-03 (404) with 1 occurrences migrated to:     https://www.quartz-scheduler.org/documentation/quartz-2.1.x/tutorials/tutorial-lesson-03 ([https](https://www.quartz-scheduler.org/documentation/quartz-2.1.x/tutorials/tutorial-lesson-03) result 404). * [ ] http://www.utoronto.ca/webdocs/HTMLdocs/Book/Book-3ed/appb/mimetype.html (301) with 1 occurrences migrated to:     https://www.utoronto.ca/webdocs/HTMLdocs/Book/Book-3ed/appb/mimetype.html ([https](https://www.utoronto.ca/webdocs/HTMLdocs/Book/Book-3ed/appb/mimetype.html) result 404). * [ ] http://xml.apache.org/xslt (404) with 3 occurrences migrated to:     https://xml.apache.org/xslt ([https](https://xml.apache.org/xslt) result 404). * [ ] http://myhost.com/resource/path/myTemplate.txt (500) with 1 occurrences migrated to:     https://myhost.com/resource/path/myTemplate.txt ([https](https://myhost.com/resource/path/myTemplate.txt) result 500). * [ ] http://myhost.com/some/arbitrary/path (500) with 1 occurrences migrated to:     https://myhost.com/some/arbitrary/path ([https](https://myhost.com/some/arbitrary/path) result 500).  ## Fixed Success  These URLs were switched to an https URL with a 2xx status. While the status was successful, your review is still recommended.  * [ ] http://activemq.apache.org/delete-inactive-destinations.html with 1 occurrences migrated to:     https://activemq.apache.org/delete-inactive-destinations.html ([https](https://activemq.apache.org/delete-inactive-destinations.html) result 200). * [ ] http://activemq.apache.org/stomp.html with 1 occurrences migrated to:     https://activemq.apache.org/stomp.html ([https](https://activemq.apache.org/stomp.html) result 200). * [ ] http://ant.apache.org with 1 occurrences migrated to:     https://ant.apache.org ([https](https://ant.apache.org) result 200). * [ ] http://asciidoctor.org/ with 1 occurrences migrated to:     https://asciidoctor.org/ ([https](https://asciidoctor.org/) result 200). * [ ] http://asciidoctor.org/docs/editing-asciidoc-with-live-preview/ with 2 occurrences migrated to:     https://asciidoctor.org/docs/editing-asciidoc-with-live-preview/ ([https](https://asciidoctor.org/docs/editing-asciidoc-with-live-preview/) result 200). * [ ] http://beanvalidation.org/ with 1 occurrences migrated to:     https://beanvalidation.org/ ([https](https://beanvalidation.org/) result 200). * [ ] http://caniuse.com/ with 2 occurrences migrated to:     https://caniuse.com/ ([https](https://caniuse.com/) result 200). * [ ] http://castor-data-binding.github.io/castor/reference-guides/1.3.3/html-single/index.html with 2 occurrences migrated to:     https://castor-data-binding.github.io/castor/reference-guides/1.3.3/html-single/index.html ([https](https://castor-data-binding.github.io/castor/reference-guides/1.3.3/html-single/index.html) result 200). * [ ] http://cbor.io/ with 1 occurrences migrated to:     https://cbor.io/ ([https](https://cbor.io/) result 200). * [ ] http://code.jquery.com/jquery-1.11.0.min.js with 2 occurrences migrated to:     https://code.jquery.com/jquery-1.11.0.min.js ([https](https://code.jquery.com/jquery-1.11.0.min.js) result 200). * [ ] http://code.jquery.com/jquery.js with 1 occurrences migrated to:     https://code.jquery.com/jquery.js ([https](https://code.jquery.com/jquery.js) result 200). * [ ] http://commons.apache.org/proper/commons-lang/ with 2 occurrences migrated to:     https://commons.apache.org/proper/commons-lang/ ([https](https://commons.apache.org/proper/commons-lang/) result 200). * [ ] http://docs.oracle.com/javase/6/docs/api/java/beans/package-summary.html with 1 occurrences migrated to:     https://docs.oracle.com/javase/6/docs/api/java/beans/package-summary.html ([https](https://docs.oracle.com/javase/6/docs/api/java/beans/package-summary.html) result 200). * [ ] http://docs.oracle.com/javase/6/docs/api/java/io/Serializable.html with 1 occurrences migrated to:     https://docs.oracle.com/javase/6/docs/api/java/io/Serializable.html ([https](https://docs.oracle.com/javase/6/docs/api/java/io/Serializable.html) result 200). * [ ] http://docs.oracle.com/javase/6/docs/api/java/lang/instrument/package-summary.html with 2 occurrences migrated to:     https://docs.oracle.com/javase/6/docs/api/java/lang/instrument/package-summary.html ([https](https://docs.oracle.com/javase/6/docs/api/java/lang/instrument/package-summary.html) result 200). * [ ] http://docs.oracle.com/javase/6/docs/api/java/util/concurrent/ThreadPoolExecutor.html with 1 occurrences migrated to:     https://docs.oracle.com/javase/6/docs/api/java/util/concurrent/ThreadPoolExecutor.html ([https](https://docs.oracle.com/javase/6/docs/api/java/util/concurrent/ThreadPoolExecutor.html) result 200). * [ ] http://docs.oracle.com/javase/8/docs/api/javax/script/ScriptEngineFactory.html with 2 occurrences migrated to:     https://docs.oracle.com/javase/8/docs/api/javax/script/ScriptEngineFactory.html ([https](https://docs.oracle.com/javase/8/docs/api/javax/script/ScriptEngineFactory.html) result 200). * [ ] http://docs.oracle.com/javase/tutorial/javabeans/advanced/customization.html with 1 occurrences migrated to:     https://docs.oracle.com/javase/tutorial/javabeans/advanced/customization.html ([https](https://docs.oracle.com/javase/tutorial/javabeans/advanced/customization.html) result 200). * [ ] http://docs.oracle.com/javase/tutorial/javabeans/writing/properties.html with 1 occurrences migrated to:     https://docs.oracle.com/javase/tutorial/javabeans/writing/properties.html ([https](https://docs.oracle.com/javase/tutorial/javabeans/writing/properties.html) result 200). * [ ] http://docs.seleniumhq.org/ with 1 occurrences migrated to:     https://docs.seleniumhq.org/ ([https](https://docs.seleniumhq.org/) result 200). * [ ] http://docs.seleniumhq.org/projects/webdriver/ with 1 occurrences migrated to:     https://docs.seleniumhq.org/projects/webdriver/ ([https](https://docs.seleniumhq.org/projects/webdriver/) result 200). * [ ] http://docs.spring.io/spring-framework/docs/current/javadoc-api/ with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/ ([https](https://docs.spring.io/spring-framework/docs/current/javadoc-api/) result 200). * [ ] http://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/servlet/view/script/ScriptTemplateView.html with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/servlet/view/script/ScriptTemplateView.html ([https](https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/servlet/view/script/ScriptTemplateView.html) result 200). * [ ] http://docs.spring.io/spring-framework/docs/current/spring-framework-reference/ with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/ ([https](https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/) result 200). * [ ] http://docs.spring.io/spring-session/docs/current/reference/html5/ with 1 occurrences migrated to:     https://docs.spring.io/spring-session/docs/current/reference/html5/ ([https](https://docs.spring.io/spring-session/docs/current/reference/html5/) result 200). * [ ] http://en.wikipedia.org/wiki/Adapter_pattern with 1 occurrences migrated to:     https://en.wikipedia.org/wiki/Adapter_pattern ([https](https://en.wikipedia.org/wiki/Adapter_pattern) result 200). * [ ] http://en.wikipedia.org/wiki/Halting_Problem with 1 occurrences migrated to:     https://en.wikipedia.org/wiki/Halting_Problem ([https](https://en.wikipedia.org/wiki/Halting_Problem) result 200). * [ ] http://en.wikipedia.org/wiki/JSONP with 3 occurrences migrated to:     https://en.wikipedia.org/wiki/JSONP ([https](https://en.wikipedia.org/wiki/JSONP) result 200). * [ ] http://en.wikipedia.org/wiki/List_of_HTTP_status_codes with 1 occurrences migrated to:     https://en.wikipedia.org/wiki/List_of_HTTP_status_codes ([https](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes) result 200). * [ ] http://en.wikipedia.org/wiki/MIME with 1 occurrences migrated to:     https://en.wikipedia.org/wiki/MIME ([https](https://en.wikipedia.org/wiki/MIME) result 200). * [ ] http://en.wikipedia.org/wiki/Mock_Object with 1 occurrences migrated to:     https://en.wikipedia.org/wiki/Mock_Object ([https](https://en.wikipedia.org/wiki/Mock_Object) result 200). * [ ] http://en.wikipedia.org/wiki/Polyfill with 2 occurrences migrated to:     https://en.wikipedia.org/wiki/Polyfill ([https](https://en.wikipedia.org/wiki/Polyfill) result 200). * [ ] http://example.com with 139 occurrences migrated to:     https://example.com ([https](https://example.com) result 200). * [ ] http://example.com/ with 16 occurrences migrated to:     https://example.com/ ([https](https://example.com/) result 200). * [ ] http://example.com?foo with 2 occurrences migrated to:     https://example.com?foo ([https](https://example.com?foo) result 200). * [ ] http://example.com?foo=bar with 8 occurrences migrated to:     https://example.com?foo=bar ([https](https://example.com?foo=bar) result 200). * [ ] http://example.com?foo=bar@baz with 1 occurrences migrated to:     https://example.com?foo=bar@baz ([https](https://example.com?foo=bar@baz) result 200). * [ ] http://example.org with 16 occurrences migrated to:     https://example.org ([https](https://example.org) result 200). * [ ] http://example.org/ with 1 occurrences migrated to:     https://example.org/ ([https](https://example.org/) result 200). * [ ] http://fasterxml.github.io/jackson-databind/javadoc/2.6/com/fasterxml/jackson/databind/DeserializationFeature.html with 2 occurrences migrated to:     https://fasterxml.github.io/jackson-databind/javadoc/2.6/com/fasterxml/jackson/databind/DeserializationFeature.html ([https](https://fasterxml.github.io/jackson-databind/javadoc/2.6/com/fasterxml/jackson/databind/DeserializationFeature.html) result 200). * [ ] http://fasterxml.github.io/jackson-databind/javadoc/2.6/com/fasterxml/jackson/databind/MapperFeature.html with 2 occurrences migrated to:     https://fasterxml.github.io/jackson-databind/javadoc/2.6/com/fasterxml/jackson/databind/MapperFeature.html ([https](https://fasterxml.github.io/jackson-databind/javadoc/2.6/com/fasterxml/jackson/databind/MapperFeature.html) result 200). * [ ] http://h2database.com with 1 occurrences migrated to:     https://h2database.com ([https](https://h2database.com) result 200). * [ ] http://handlebarsjs.com with 2 occurrences migrated to:     https://handlebarsjs.com ([https](https://handlebarsjs.com) result 200). * [ ] http://handlebarsjs.com/ with 2 occurrences migrated to:     https://handlebarsjs.com/ ([https](https://handlebarsjs.com/) result 200). * [ ] http://hc.apache.org/httpcomponents-asyncclient-dev/ with 1 occurrences migrated to:     https://hc.apache.org/httpcomponents-asyncclient-dev/ ([https](https://hc.apache.org/httpcomponents-asyncclient-dev/) result 200). * [ ] http://hc.apache.org/httpcomponents-client-ga/ with 2 occurrences migrated to:     https://hc.apache.org/httpcomponents-client-ga/ ([https](https://hc.apache.org/httpcomponents-client-ga/) result 200). * [ ] http://hc.apache.org/httpcomponents-client-ga/httpclient/ with 1 occurrences migrated to:     https://hc.apache.org/httpcomponents-client-ga/httpclient/ ([https](https://hc.apache.org/httpcomponents-client-ga/httpclient/) result 200). * [ ] http://www.hibernate.org/ (301) with 1 occurrences migrated to:     https://hibernate.org/ ([https](https://www.hibernate.org/) result 200). * [ ] http://www.hibernate.org (301) with 1 occurrences migrated to:     https://hibernate.org/ ([https](https://www.hibernate.org) result 200). * [ ] http://jcp.org/aboutJava/communityprocess/final/jsr003/index3.html with 1 occurrences migrated to:     https://jcp.org/aboutJava/communityprocess/final/jsr003/index3.html ([https](https://jcp.org/aboutJava/communityprocess/final/jsr003/index3.html) result 200). * [ ] http://jcp.org/aboutJava/communityprocess/final/jsr160/index.html with 1 occurrences migrated to:     https://jcp.org/aboutJava/communityprocess/final/jsr160/index.html ([https](https://jcp.org/aboutJava/communityprocess/final/jsr160/index.html) result 200). * [ ] http://jcp.org/en/jsr/detail?id=107 with 1 occurrences migrated to:     https://jcp.org/en/jsr/detail?id=107 ([https](https://jcp.org/en/jsr/detail?id=107) result 200). * [ ] http://joel-costigliola.github.io/assertj/ with 2 occurrences migrated to:     https://joel-costigliola.github.io/assertj/ ([https](https://joel-costigliola.github.io/assertj/) result 200). * [ ] http://jsonassert.skyscreamer.org with 1 occurrences migrated to:     https://jsonassert.skyscreamer.org ([https](https://jsonassert.skyscreamer.org) result 200). * [ ] http://jsonassert.skyscreamer.org/ with 5 occurrences migrated to:     https://jsonassert.skyscreamer.org/ ([https](https://jsonassert.skyscreamer.org/) result 200). * [ ] http://junit.org/junit5/docs/current/user-guide/ with 2 occurrences migrated to:     https://junit.org/junit5/docs/current/user-guide/ ([https](https://junit.org/junit5/docs/current/user-guide/) result 200). * [ ] http://kotlinlang.org/ with 2 occurrences migrated to:     https://kotlinlang.org/ ([https](https://kotlinlang.org/) result 200). * [ ] http://kotlinlang.org/docs/reference/ with 1 occurrences migrated to:     https://kotlinlang.org/docs/reference/ ([https](https://kotlinlang.org/docs/reference/) result 200). * [ ] http://kotlinlang.org/docs/reference/classes.html with 3 occurrences migrated to:     https://kotlinlang.org/docs/reference/classes.html ([https](https://kotlinlang.org/docs/reference/classes.html) result 200). * [ ] http://mydomain.com with 5 occurrences migrated to:     https://mydomain.com ([https](https://mydomain.com) result 200). * [ ] http://myfaces.apache.org/ with 1 occurrences migrated to:     https://myfaces.apache.org/ ([https](https://myfaces.apache.org/) result 200). * [ ] http://myfaces.apache.org/orchestra/ with 1 occurrences migrated to:     https://myfaces.apache.org/orchestra/ ([https](https://myfaces.apache.org/orchestra/) result 200). * [ ] http://netty.io/ with 1 occurrences migrated to:     https://netty.io/ ([https](https://netty.io/) result 200). * [ ] http://openjdk.java.net/jeps/290 with 1 occurrences migrated to:     https://openjdk.java.net/jeps/290 ([https](https://openjdk.java.net/jeps/290) result 200). * [ ] http://openjdk.java.net/projects/nashorn/ with 10 occurrences migrated to:     https://openjdk.java.net/projects/nashorn/ ([https](https://openjdk.java.net/projects/nashorn/) result 200). * [ ] http://pivotal.io/security/cve-2015-5211 with 1 occurrences migrated to:     https://pivotal.io/security/cve-2015-5211 ([https](https://pivotal.io/security/cve-2015-5211) result 200). * [ ] http://poi.apache.org with 3 occurrences migrated to:     https://poi.apache.org ([https](https://poi.apache.org) result 200). * [ ] http://projects.spring.io/spring-boot/ with 1 occurrences migrated to:     https://projects.spring.io/spring-boot/ ([https](https://projects.spring.io/spring-boot/) result 200). * [ ] http://projects.spring.io/spring-data/ with 1 occurrences migrated to:     https://projects.spring.io/spring-data/ ([https](https://projects.spring.io/spring-data/) result 200). * [ ] http://projects.spring.io/spring-framework/ with 1 occurrences migrated to:     https://projects.spring.io/spring-framework/ ([https](https://projects.spring.io/spring-framework/) result 200). * [ ] http://projects.spring.io/spring-integration/ with 1 occurrences migrated to:     https://projects.spring.io/spring-integration/ ([https](https://projects.spring.io/spring-integration/) result 200). * [ ] http://projects.spring.io/spring-security/ with 3 occurrences migrated to:     https://projects.spring.io/spring-security/ ([https](https://projects.spring.io/spring-security/) result 200). * [ ] http://repo1.maven.org/maven2/javax/inject/javax.inject/1/ with 2 occurrences migrated to:     https://repo1.maven.org/maven2/javax/inject/javax.inject/1/ ([https](https://repo1.maven.org/maven2/javax/inject/javax.inject/1/) result 200). * [ ] http://schema.spring.io/mvc/spring-mvc.xsd with 1 occurrences migrated to:     https://schema.spring.io/mvc/spring-mvc.xsd ([https](https://schema.spring.io/mvc/spring-mvc.xsd) result 200). * [ ] http://search.maven.org/ with 2 occurrences migrated to:     https://search.maven.org/ ([https](https://search.maven.org/) result 200). * [ ] http://sockjs.github.io/sockjs-protocol/sockjs-protocol-0.3.3.html with 3 occurrences migrated to:     https://sockjs.github.io/sockjs-protocol/sockjs-protocol-0.3.3.html ([https](https://sockjs.github.io/sockjs-protocol/sockjs-protocol-0.3.3.html) result 200). * [ ] http://sourceforge.net with 1 occurrences migrated to:     https://sourceforge.net ([https](https://sourceforge.net) result 200). * [ ] http://sourceforge.net/projects/javadiff/ with 1 occurrences migrated to:     https://sourceforge.net/projects/javadiff/ ([https](https://sourceforge.net/projects/javadiff/) result 200). * [ ] http://sourceforge.net/sflogo.php?group_id=37160 with 1 occurrences migrated to:     https://sourceforge.net/sflogo.php?group_id=37160 ([https](https://sourceforge.net/sflogo.php?group_id=37160) result 200). * [ ] http://spring.io/blog/ with 1 occurrences migrated to:     https://spring.io/blog/ ([https](https://spring.io/blog/) result 200). * [ ] http://spring.io/blog/category/news with 1 occurrences migrated to:     https://spring.io/blog/category/news ([https](https://spring.io/blog/category/news) result 200). * [ ] http://square.github.io/okhttp/ with 1 occurrences migrated to:     https://square.github.io/okhttp/ ([https](https://square.github.io/okhttp/) result 200). * [ ] http://stackoverflow.com/questions/1481251/what-does-document-domain-document-domain-do with 2 occurrences migrated to:     https://stackoverflow.com/questions/1481251/what-does-document-domain-document-domain-do ([https](https://stackoverflow.com/questions/1481251/what-does-document-domain-document-domain-do) result 200). * [ ] http://stackoverflow.com/questions/19394570/java-jre-7u45-breaks-classloader-getresources with 2 occurrences migrated to:     https://stackoverflow.com/questions/19394570/java-jre-7u45-breaks-classloader-getresources ([https](https://stackoverflow.com/questions/19394570/java-jre-7u45-breaks-classloader-getresources) result 200). * [ ] http://stackoverflow.com/questions/22986109/testing-spring-managed-servlet with 1 occurrences migrated to:     https://stackoverflow.com/questions/22986109/testing-spring-managed-servlet ([https](https://stackoverflow.com/questions/22986109/testing-spring-managed-servlet) result 200). * [ ] http://stackoverflow.com/questions/24725438/what-could-cause-a-class-implementing-applicationlistenercontextrefreshedevent with 1 occurrences migrated to:     https://stackoverflow.com/questions/24725438/what-could-cause-a-class-implementing-applicationlistenercontextrefreshedevent ([https](https://stackoverflow.com/questions/24725438/what-could-cause-a-class-implementing-applicationlistenercontextrefreshedevent) result 200). * [ ] http://stackoverflow.com/questions/35733344/can-contextconfiguration-in-a-custom-annotation-be-merged with 1 occurrences migrated to:     https://stackoverflow.com/questions/35733344/can-contextconfiguration-in-a-custom-annotation-be-merged ([https](https://stackoverflow.com/questions/35733344/can-contextconfiguration-in-a-custom-annotation-be-merged) result 200). * [ ] http://start.spring.io/ with 2 occurrences migrated to:     https://start.spring.io/ ([https](https://start.spring.io/) result 200). * [ ] http://stas-blogspot.blogspot.com/2010/03/java-bridge-methods-explained.html with 1 occurrences migrated to:     https://stas-blogspot.blogspot.com/2010/03/java-bridge-methods-explained.html ([https](https://stas-blogspot.blogspot.com/2010/03/java-bridge-methods-explained.html) result 200). * [ ] http://stomp.github.io/stomp-specification-1.2.html with 9 occurrences migrated to:     https://stomp.github.io/stomp-specification-1.2.html ([https](https://stomp.github.io/stomp-specification-1.2.html) result 200). * [ ] http://struts.apache.org with 1 occurrences migrated to:     https://struts.apache.org ([https](https://struts.apache.org) result 200). * [ ] http://struts.apache.org/ with 1 occurrences migrated to:     https://struts.apache.org/ ([https](https://struts.apache.org/) result 200). * [ ] http://tapestry.apache.org/ with 2 occurrences migrated to:     https://tapestry.apache.org/ ([https](https://tapestry.apache.org/) result 200). * [ ] http://tiles.apache.org with 4 occurrences migrated to:     https://tiles.apache.org ([https](https://tiles.apache.org) result 200). * [ ] http://tiles.apache.org/framework/dependency-management.html with 1 occurrences migrated to:     https://tiles.apache.org/framework/dependency-management.html ([https](https://tiles.apache.org/framework/dependency-management.html) result 200). * [ ] http://tomcat.apache.org/ with 2 occurrences migrated to:     https://tomcat.apache.org/ ([https](https://tomcat.apache.org/) result 200). * [ ] http://tomcat.apache.org/tomcat-6.0-doc/config/context.html with 1 occurrences migrated to:     https://tomcat.apache.org/tomcat-6.0-doc/config/context.html ([https](https://tomcat.apache.org/tomcat-6.0-doc/config/context.html) result 200). * [ ] http://tools.ietf.org/html/rfc1945 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc1945 ([https](https://tools.ietf.org/html/rfc1945) result 200). * [ ] http://tools.ietf.org/html/rfc2109 with 2 occurrences migrated to:     https://tools.ietf.org/html/rfc2109 ([https](https://tools.ietf.org/html/rfc2109) result 200). * [ ] http://tools.ietf.org/html/rfc2295 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc2295 ([https](https://tools.ietf.org/html/rfc2295) result 200). * [ ] http://tools.ietf.org/html/rfc2324 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc2324 ([https](https://tools.ietf.org/html/rfc2324) result 200). * [ ] http://tools.ietf.org/html/rfc2518 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc2518 ([https](https://tools.ietf.org/html/rfc2518) result 200). * [ ] http://tools.ietf.org/html/rfc2616 with 3 occurrences migrated to:     https://tools.ietf.org/html/rfc2616 ([https](https://tools.ietf.org/html/rfc2616) result 200). * [ ] http://tools.ietf.org/html/rfc2774 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc2774 ([https](https://tools.ietf.org/html/rfc2774) result 200). * [ ] http://tools.ietf.org/html/rfc2817 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc2817 ([https](https://tools.ietf.org/html/rfc2817) result 200). * [ ] http://tools.ietf.org/html/rfc2965 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc2965 ([https](https://tools.ietf.org/html/rfc2965) result 200). * [ ] http://tools.ietf.org/html/rfc3229 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc3229 ([https](https://tools.ietf.org/html/rfc3229) result 200). * [ ] http://tools.ietf.org/html/rfc3986 with 4 occurrences migrated to:     https://tools.ietf.org/html/rfc3986 ([https](https://tools.ietf.org/html/rfc3986) result 200). * [ ] http://tools.ietf.org/html/rfc4918 with 5 occurrences migrated to:     https://tools.ietf.org/html/rfc4918 ([https](https://tools.ietf.org/html/rfc4918) result 200). * [ ] http://tools.ietf.org/html/rfc5842 with 2 occurrences migrated to:     https://tools.ietf.org/html/rfc5842 ([https](https://tools.ietf.org/html/rfc5842) result 200). * [ ] http://tools.ietf.org/html/rfc5988 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc5988 ([https](https://tools.ietf.org/html/rfc5988) result 200). * [ ] http://tools.ietf.org/html/rfc6202 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc6202 ([https](https://tools.ietf.org/html/rfc6202) result 200). * [ ] http://tools.ietf.org/html/rfc6266 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc6266 ([https](https://tools.ietf.org/html/rfc6266) result 200). * [ ] http://tools.ietf.org/html/rfc6454 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc6454 ([https](https://tools.ietf.org/html/rfc6454) result 200). * [ ] http://tools.ietf.org/html/rfc6455 with 2 occurrences migrated to:     https://tools.ietf.org/html/rfc6455 ([https](https://tools.ietf.org/html/rfc6455) result 200). * [ ] http://tools.ietf.org/html/rfc6585 with 4 occurrences migrated to:     https://tools.ietf.org/html/rfc6585 ([https](https://tools.ietf.org/html/rfc6585) result 200). * [ ] http://tools.ietf.org/html/rfc7230 with 10 occurrences migrated to:     https://tools.ietf.org/html/rfc7230 ([https](https://tools.ietf.org/html/rfc7230) result 200). * [ ] http://tools.ietf.org/html/rfc7231 with 56 occurrences migrated to:     https://tools.ietf.org/html/rfc7231 ([https](https://tools.ietf.org/html/rfc7231) result 200). * [ ] http://tools.ietf.org/html/rfc7232 with 8 occurrences migrated to:     https://tools.ietf.org/html/rfc7232 ([https](https://tools.ietf.org/html/rfc7232) result 200). * [ ] http://tools.ietf.org/html/rfc7233 with 12 occurrences migrated to:     https://tools.ietf.org/html/rfc7233 ([https](https://tools.ietf.org/html/rfc7233) result 200). * [ ] http://tools.ietf.org/html/rfc7234 with 5 occurrences migrated to:     https://tools.ietf.org/html/rfc7234 ([https](https://tools.ietf.org/html/rfc7234) result 200). * [ ] http://tools.ietf.org/html/rfc7235 with 6 occurrences migrated to:     https://tools.ietf.org/html/rfc7235 ([https](https://tools.ietf.org/html/rfc7235) result 200). * [ ] http://tools.ietf.org/html/rfc7238 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc7238 ([https](https://tools.ietf.org/html/rfc7238) result 200). * [ ] http://tools.ietf.org/html/rfc7239 with 12 occurrences migrated to:     https://tools.ietf.org/html/rfc7239 ([https](https://tools.ietf.org/html/rfc7239) result 200). * [ ] http://tools.ietf.org/rfcdiff?difftype=--hwdiff&url2=draft-ietf-webdav-protocol-06.txt with 3 occurrences migrated to:     https://tools.ietf.org/rfcdiff?difftype=--hwdiff&url2=draft-ietf-webdav-protocol-06.txt ([https](https://tools.ietf.org/rfcdiff?difftype=--hwdiff&url2=draft-ietf-webdav-protocol-06.txt) result 200). * [ ] http://unlicense.org with 1 occurrences migrated to:     https://unlicense.org ([https](https://unlicense.org) result 200). * [ ] http://www.amazon.com/exec/obidos/tg/detail/-/0764543857/ with 10 occurrences migrated to:     https://www.amazon.com/exec/obidos/tg/detail/-/0764543857/ ([https](https://www.amazon.com/exec/obidos/tg/detail/-/0764543857/) result 200). * [ ] http://www.apache.org with 1 occurrences migrated to:     https://www.apache.org ([https](https://www.apache.org) result 200). * [ ] http://www.apple.com/DTDs/PropertyList-1.0.dtd with 6 occurrences migrated to:     https://www.apple.com/DTDs/PropertyList-1.0.dtd ([https](https://www.apple.com/DTDs/PropertyList-1.0.dtd) result 200). * [ ] http://www.atomikos.com/ with 1 occurrences migrated to:     https://www.atomikos.com/ ([https](https://www.atomikos.com/) result 200). * [ ] http://www.baeldung.com/kotlin-null-safety with 1 occurrences migrated to:     https://www.baeldung.com/kotlin-null-safety ([https](https://www.baeldung.com/kotlin-null-safety) result 200). * [ ] http://www.eclipse.org/ajdt/ with 1 occurrences migrated to:     https://www.eclipse.org/ajdt/ ([https](https://www.eclipse.org/ajdt/) result 200). * [ ] http://www.eclipse.org/aspectj/doc/next/progguide/index.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/next/progguide/index.html ([https](https://www.eclipse.org/aspectj/doc/next/progguide/index.html) result 200). * [ ] http://www.eclipse.org/aspectj/doc/next/progguide/semantics-joinPoints.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/next/progguide/semantics-joinPoints.html ([https](https://www.eclipse.org/aspectj/doc/next/progguide/semantics-joinPoints.html) result 200). * [ ] http://www.eclipse.org/aspectj/doc/released/adk15notebook/index.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/released/adk15notebook/index.html ([https](https://www.eclipse.org/aspectj/doc/released/adk15notebook/index.html) result 200). * [ ] http://www.eclipse.org/aspectj/doc/released/devguide/antTasks.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/released/devguide/antTasks.html ([https](https://www.eclipse.org/aspectj/doc/released/devguide/antTasks.html) result 200). * [ ] http://www.eclipse.org/aspectj/doc/released/devguide/index.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/released/devguide/index.html ([https](https://www.eclipse.org/aspectj/doc/released/devguide/index.html) result 200). * [ ] http://www.eclipse.org/aspectj/doc/released/devguide/ltw-configuration.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/released/devguide/ltw-configuration.html ([https](https://www.eclipse.org/aspectj/doc/released/devguide/ltw-configuration.html) result 200). * [ ] http://www.eclipse.org/aspectj/doc/released/devguide/ltw.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/released/devguide/ltw.html ([https](https://www.eclipse.org/aspectj/doc/released/devguide/ltw.html) result 200). * [ ] http://www.eclipse.org/aspectj/doc/released/progguide/index.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/released/progguide/index.html ([https](https://www.eclipse.org/aspectj/doc/released/progguide/index.html) result 200). * [ ] http://www.eclipse.org/aspectj/doc/released/progguide/semantics-pointcuts.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/released/progguide/semantics-pointcuts.html ([https](https://www.eclipse.org/aspectj/doc/released/progguide/semantics-pointcuts.html) result 200). * [ ] http://www.eclipse.org/aspectj/dtd/aspectj.dtd with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/dtd/aspectj.dtd ([https](https://www.eclipse.org/aspectj/dtd/aspectj.dtd) result 200). * [ ] http://www.eclipse.org/jetty/ with 1 occurrences migrated to:     https://www.eclipse.org/jetty/ ([https](https://www.eclipse.org/jetty/) result 200). * [ ] http://ehcache.sourceforge.net (301) with 1 occurrences migrated to:     https://www.ehcache.org/ ([https](https://ehcache.sourceforge.net) result 200). * [ ] http://ehcache.org/ (301) with 1 occurrences migrated to:     https://www.ehcache.org/ ([https](https://ehcache.org/) result 200). * [ ] http://www.embeddedjs.com/ with 2 occurrences migrated to:     https://www.embeddedjs.com/ ([https](https://www.embeddedjs.com/) result 200). * [ ] http://www.enterpriseintegrationpatterns.com with 1 occurrences migrated to:     https://www.enterpriseintegrationpatterns.com ([https](https://www.enterpriseintegrationpatterns.com) result 200). * [ ] http://www.example.org/?param=aGVsbG9Xb3JsZA%3D%3D with 1 occurrences migrated to:     https://www.example.org/?param=aGVsbG9Xb3JsZA%3D%3D ([https](https://www.example.org/?param=aGVsbG9Xb3JsZA%3D%3D) result 200). * [ ] http://www.google.com with 2 occurrences migrated to:     https://www.google.com ([https](https://www.google.com) result 200). * [ ] http://www.h2database.com with 1 occurrences migrated to:     https://www.h2database.com ([https](https://www.h2database.com) result 200). * [ ] http://www.h2database.com/html/grammar.html with 1 occurrences migrated to:     https://www.h2database.com/html/grammar.html ([https](https://www.h2database.com/html/grammar.html) result 200). * [ ] http://www.ietf.org with 1 occurrences migrated to:     https://www.ietf.org ([https](https://www.ietf.org) result 200). * [ ] http://www.ietf.org/rfc/rfc1867.txt with 1 occurrences migrated to:     https://www.ietf.org/rfc/rfc1867.txt ([https](https://www.ietf.org/rfc/rfc1867.txt) result 200). * [ ] http://www.ietf.org/rfc/rfc2396.txt with 2 occurrences migrated to:     https://www.ietf.org/rfc/rfc2396.txt ([https](https://www.ietf.org/rfc/rfc2396.txt) result 200). * [ ] http://www.ietf.org/rfc/rfc3986.txt with 11 occurrences migrated to:     https://www.ietf.org/rfc/rfc3986.txt ([https](https://www.ietf.org/rfc/rfc3986.txt) result 200). * [ ] http://www.infoq.com/ with 1 occurrences migrated to:     https://www.infoq.com/ ([https](https://www.infoq.com/) result 200). * [ ] http://www.infoq.com/minibooks/JTDS with 1 occurrences migrated to:     https://www.infoq.com/minibooks/JTDS ([https](https://www.infoq.com/minibooks/JTDS) result 200). * [ ] http://www.jetbrains.com/idea/ with 1 occurrences migrated to:     https://www.jetbrains.com/idea/ ([https](https://www.jetbrains.com/idea/) result 200). * [ ] http://www.json.org/ with 1 occurrences migrated to:     https://www.json.org/ ([https](https://www.json.org/) result 200). * [ ] http://www.jython.org with 2 occurrences migrated to:     https://www.jython.org ([https](https://www.jython.org) result 200). * [ ] http://www.jython.org/ with 2 occurrences migrated to:     https://www.jython.org/ ([https](https://www.jython.org/) result 200). * [ ] http://www.lowagie.com/iText with 2 occurrences migrated to:     https://www.lowagie.com/iText ([https](https://www.lowagie.com/iText) result 200). * [ ] http://www.manpagez.com/man/5/crontab/ with 1 occurrences migrated to:     https://www.manpagez.com/man/5/crontab/ ([https](https://www.manpagez.com/man/5/crontab/) result 200). * [ ] http://mydomain1.com:80/ (301) with 2 occurrences migrated to:     https://www.mydomain1.com/ ([https](https://mydomain1.com:80/) result 200). * [ ] http://mydomain1.com:80 (301) with 1 occurrences migrated to:     https://www.mydomain1.com/ ([https](https://mydomain1.com:80) result 200). * [ ] http://www.oracle.com/technetwork/articles/javaee/jpa-137156.html with 1 occurrences migrated to:     https://www.oracle.com/technetwork/articles/javaee/jpa-137156.html ([https](https://www.oracle.com/technetwork/articles/javaee/jpa-137156.html) result 200). * [ ] http://www.oracle.com/technetwork/java/javaee/javaserverfaces-139869.html with 1 occurrences migrated to:     https://www.oracle.com/technetwork/java/javaee/javaserverfaces-139869.html ([https](https://www.oracle.com/technetwork/java/javaee/javaserverfaces-139869.html) result 200). * [ ] http://www.oracle.com/technetwork/java/javase/documentation/spec-136004.html with 1 occurrences migrated to:     https://www.oracle.com/technetwork/java/javase/documentation/spec-136004.html ([https](https://www.oracle.com/technetwork/java/javase/documentation/spec-136004.html) result 200). * [ ] http://www.oracle.com/technetwork/java/javase/tech/download-jsp-141676.html with 1 occurrences migrated to:     https://www.oracle.com/technetwork/java/javase/tech/download-jsp-141676.html ([https](https://www.oracle.com/technetwork/java/javase/tech/download-jsp-141676.html) result 200). * [ ] http://www.oracle.com/technetwork/java/javase/tech/javamanagement-140525.html with 1 occurrences migrated to:     https://www.oracle.com/technetwork/java/javase/tech/javamanagement-140525.html ([https](https://www.oracle.com/technetwork/java/javase/tech/javamanagement-140525.html) result 200). * [ ] http://www.oracle.com/technetwork/middleware/weblogic/overview/index-085209.html with 1 occurrences migrated to:     https://www.oracle.com/technetwork/middleware/weblogic/overview/index-085209.html ([https](https://www.oracle.com/technetwork/middleware/weblogic/overview/index-085209.html) result 200). * [ ] http://www.ow2.org/ with 1 occurrences migrated to:     https://www.ow2.org/ ([https](https://www.ow2.org/) result 200). * [ ] http://www.owasp.org/index.php/HTTPOnly with 4 occurrences migrated to:     https://www.owasp.org/index.php/HTTPOnly ([https](https://www.owasp.org/index.php/HTTPOnly) result 200). * [ ] http://quartz-scheduler.org (301) with 3 occurrences migrated to:     https://www.quartz-scheduler.org/ ([https](https://quartz-scheduler.org) result 200). * [ ] http://www.rabbitmq.com/stomp.html with 1 occurrences migrated to:     https://www.rabbitmq.com/stomp.html ([https](https://www.rabbitmq.com/stomp.html) result 200). * [ ] http://www.reactive-streams.org with 1 occurrences migrated to:     https://www.reactive-streams.org ([https](https://www.reactive-streams.org) result 200). * [ ] http://www.reactive-streams.org/ with 2 occurrences migrated to:     https://www.reactive-streams.org/ ([https](https://www.reactive-streams.org/) result 200). * [ ] http://www.reactive-streams.org/reactive-streams-1.0.1-javadoc/org/reactivestreams/Publisher.html with 1 occurrences migrated to:     https://www.reactive-streams.org/reactive-streams-1.0.1-javadoc/org/reactivestreams/Publisher.html ([https](https://www.reactive-streams.org/reactive-streams-1.0.1-javadoc/org/reactivestreams/Publisher.html) result 200). * [ ] http://www.reactive-streams.org/reactive-streams-1.0.1-javadoc/org/reactivestreams/Subscriber.html with 1 occurrences migrated to:     https://www.reactive-streams.org/reactive-streams-1.0.1-javadoc/org/reactivestreams/Subscriber.html ([https](https://www.reactive-streams.org/reactive-streams-1.0.1-javadoc/org/reactivestreams/Subscriber.html) result 200). * [ ] http://seleniumhq.org/projects/webdriver/ (301) with 1 occurrences migrated to:     https://www.seleniumhq.org ([https](https://seleniumhq.org/projects/webdriver/) result 200). * [ ] http://www.springbyexample.org/examples/custom-thread-scope-module.html with 1 occurrences migrated to:     https://www.springbyexample.org/examples/custom-thread-scope-module.html ([https](https://www.springbyexample.org/examples/custom-thread-scope-module.html) result 200). * [ ] http://www.springframework.org/dtd/spring-beans-2.0.dtd with 3 occurrences migrated to:     https://www.springframework.org/dtd/spring-beans-2.0.dtd ([https](https://www.springframework.org/dtd/spring-beans-2.0.dtd) result 200). * [ ] http://www.springframework.org/schema/aop/spring-aop.xsd with 12 occurrences migrated to:     https://www.springframework.org/schema/aop/spring-aop.xsd ([https](https://www.springframework.org/schema/aop/spring-aop.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans.xsd with 79 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans.xsd ([https](https://www.springframework.org/schema/beans/spring-beans.xsd) result 200). * [ ] http://www.springframework.org/schema/cache/spring-cache.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/cache/spring-cache.xsd ([https](https://www.springframework.org/schema/cache/spring-cache.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context.xsd with 13 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context.xsd ([https](https://www.springframework.org/schema/context/spring-context.xsd) result 200). * [ ] http://www.springframework.org/schema/jdbc/spring-jdbc.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-jdbc.xsd ([https](https://www.springframework.org/schema/jdbc/spring-jdbc.xsd) result 200). * [ ] http://www.springframework.org/schema/jee/spring-jee.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/jee/spring-jee.xsd ([https](https://www.springframework.org/schema/jee/spring-jee.xsd) result 200). * [ ] http://www.springframework.org/schema/jms/spring-jms.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/jms/spring-jms.xsd ([https](https://www.springframework.org/schema/jms/spring-jms.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang.xsd with 4 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang.xsd ([https](https://www.springframework.org/schema/lang/spring-lang.xsd) result 200). * [ ] http://www.springframework.org/schema/mvc/spring-mvc.xsd with 3 occurrences migrated to:     https://www.springframework.org/schema/mvc/spring-mvc.xsd ([https](https://www.springframework.org/schema/mvc/spring-mvc.xsd) result 200). * [ ] http://www.springframework.org/schema/oxm/spring-oxm.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/oxm/spring-oxm.xsd ([https](https://www.springframework.org/schema/oxm/spring-oxm.xsd) result 200). * [ ] http://www.springframework.org/schema/tool/spring-tool.xsd with 13 occurrences migrated to:     https://www.springframework.org/schema/tool/spring-tool.xsd ([https](https://www.springframework.org/schema/tool/spring-tool.xsd) result 200). * [ ] http://www.springframework.org/schema/tx/spring-tx.xsd with 7 occurrences migrated to:     https://www.springframework.org/schema/tx/spring-tx.xsd ([https](https://www.springframework.org/schema/tx/spring-tx.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util.xsd ([https](https://www.springframework.org/schema/util/spring-util.xsd) result 200). * [ ] http://www.springframework.org/schema/websocket/spring-websocket.xsd with 11 occurrences migrated to:     https://www.springframework.org/schema/websocket/spring-websocket.xsd ([https](https://www.springframework.org/schema/websocket/spring-websocket.xsd) result 200). * [ ] http://www.stuartellis.eu/articles/erb/ (301) with 2 occurrences migrated to:     https://www.stuartellis.name/articles/erb/ ([https](https://www.stuartellis.eu/articles/erb/) result 200). * [ ] http://www.thymeleaf.org/ with 2 occurrences migrated to:     https://www.thymeleaf.org/ ([https](https://www.thymeleaf.org/) result 200). * [ ] http://www.thymeleaf.org/documentation.html with 2 occurrences migrated to:     https://www.thymeleaf.org/documentation.html ([https](https://www.thymeleaf.org/documentation.html) result 200). * [ ] http://www.w3.org/2000/xmlns/ with 5 occurrences migrated to:     https://www.w3.org/2000/xmlns/ ([https](https://www.w3.org/2000/xmlns/) result 200). * [ ] http://www.w3.org/2004/08/xop/include with 2 occurrences migrated to:     https://www.w3.org/2004/08/xop/include ([https](https://www.w3.org/2004/08/xop/include) result 200). * [ ] http://www.w3.org/DesignIssues/MatrixURIs.html with 2 occurrences migrated to:     https://www.w3.org/DesignIssues/MatrixURIs.html ([https](https://www.w3.org/DesignIssues/MatrixURIs.html) result 200). * [ ] http://www.w3.org/TR/2004/WD-soap12-mtom-20040608/ with 2 occurrences migrated to:     https://www.w3.org/TR/2004/WD-soap12-mtom-20040608/ ([https](https://www.w3.org/TR/2004/WD-soap12-mtom-20040608/) result 200). * [ ] http://www.w3.org/TR/2005/REC-xop10-20050125/ with 6 occurrences migrated to:     https://www.w3.org/TR/2005/REC-xop10-20050125/ ([https](https://www.w3.org/TR/2005/REC-xop10-20050125/) result 200). * [ ] http://www.w3.org/TR/cors/ with 19 occurrences migrated to:     https://www.w3.org/TR/cors/ ([https](https://www.w3.org/TR/cors/) result 200). * [ ] http://www.w3.org/TR/eventsource/ with 2 occurrences migrated to:     https://www.w3.org/TR/eventsource/ ([https](https://www.w3.org/TR/eventsource/) result 200). * [ ] http://www.w3.org/TR/xhtml1/ with 1 occurrences migrated to:     https://www.w3.org/TR/xhtml1/ ([https](https://www.w3.org/TR/xhtml1/) result 200). * [ ] http://www.w3.org/TR/xhtml1/diffs.html with 1 occurrences migrated to:     https://www.w3.org/TR/xhtml1/diffs.html ([https](https://www.w3.org/TR/xhtml1/diffs.html) result 200). * [ ] http://www.w3.org/TR/xhtml1/dtds.html with 1 occurrences migrated to:     https://www.w3.org/TR/xhtml1/dtds.html ([https](https://www.w3.org/TR/xhtml1/dtds.html) result 200). * [ ] http://www.webjars.org with 4 occurrences migrated to:     https://www.webjars.org ([https](https://www.webjars.org) result 200). * [ ] http://www.webjars.org/ with 2 occurrences migrated to:     https://www.webjars.org/ ([https](https://www.webjars.org/) result 200). * [ ] http://www.webjars.org/documentation with 2 occurrences migrated to:     https://www.webjars.org/documentation ([https](https://www.webjars.org/documentation) result 200). * [ ] http://www.wildfly.org/ with 1 occurrences migrated to:     https://www.wildfly.org/ ([https](https://www.wildfly.org/) result 200). * [ ] http://x-stream.github.io/ with 2 occurrences migrated to:     https://x-stream.github.io/ ([https](https://x-stream.github.io/) result 200). * [ ] http://youtrack.jetbrains.com/issue/IDEA-53476 with 1 occurrences migrated to:     https://youtrack.jetbrains.com/issue/IDEA-53476 ([https](https://youtrack.jetbrains.com/issue/IDEA-53476) result 200). * [ ] http://youtrack.jetbrains.com/issue/IDEA-64446 with 1 occurrences migrated to:     https://youtrack.jetbrains.com/issue/IDEA-64446 ([https](https://youtrack.jetbrains.com/issue/IDEA-64446) result 200). * [ ] http://asm.ow2.org with 1 occurrences migrated to:     https://asm.ow2.org ([https](https://asm.ow2.org) result 301). * [ ] http://bit.ly/TRlX2r with 1 occurrences migrated to:     https://bit.ly/TRlX2r ([https](https://bit.ly/TRlX2r) result 301). * [ ] http://bit.ly/UzccDt with 1 occurrences migrated to:     https://bit.ly/UzccDt ([https](https://bit.ly/UzccDt) result 301). * [ ] http://bit.ly/p9rIvx with 1 occurrences migrated to:     https://bit.ly/p9rIvx ([https](https://bit.ly/p9rIvx) result 301). * [ ] http://bit.ly/qUwvwz with 1 occurrences migrated to:     https://bit.ly/qUwvwz ([https](https://bit.ly/qUwvwz) result 301). * [ ] http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx with 1 occurrences migrated to:     https://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx ([https](https://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx) result 301). * [ ] http://castor-data-binding.github.io/castor with 1 occurrences migrated to:     https://castor-data-binding.github.io/castor ([https](https://castor-data-binding.github.io/castor) result 301). * [ ] http://code.google.com/p/beanshell2/ with 1 occurrences migrated to:     https://code.google.com/p/beanshell2/ ([https](https://code.google.com/p/beanshell2/) result 301). * [ ] http://code.google.com/p/browsersec/wiki/Part2 with 1 occurrences migrated to:     https://code.google.com/p/browsersec/wiki/Part2 ([https](https://code.google.com/p/browsersec/wiki/Part2) result 301). * [ ] http://code.google.com/p/gears/wiki/ResumableHttpRequestsProposal with 1 occurrences migrated to:     https://code.google.com/p/gears/wiki/ResumableHttpRequestsProposal ([https](https://code.google.com/p/gears/wiki/ResumableHttpRequestsProposal) result 301). * [ ] http://code.google.com/p/xml-matchers/ with 3 occurrences migrated to:     https://code.google.com/p/xml-matchers/ ([https](https://code.google.com/p/xml-matchers/) result 301). * [ ] http://commons.apache.org/proper/commons-dbcp with 2 occurrences migrated to:     https://commons.apache.org/proper/commons-dbcp ([https](https://commons.apache.org/proper/commons-dbcp) result 301). * [ ] http://commons.apache.org/proper/commons-fileupload with 2 occurrences migrated to:     https://commons.apache.org/proper/commons-fileupload ([https](https://commons.apache.org/proper/commons-fileupload) result 301). * [ ] http://confluence.jetbrains.net/display/IDEADEV/Gradle+integration with 1 occurrences migrated to:     https://confluence.jetbrains.net/display/IDEADEV/Gradle+integration ([https](https://confluence.jetbrains.net/display/IDEADEV/Gradle+integration) result 301). * [ ] http://contributor-covenant.org with 1 occurrences migrated to:     https://contributor-covenant.org ([https](https://contributor-covenant.org) result 301). * [ ] http://contributor-covenant.org/version/1/3/0/ with 1 occurrences migrated to:     https://contributor-covenant.org/version/1/3/0/ ([https](https://contributor-covenant.org/version/1/3/0/) result 301). * [ ] http://db.apache.org/derby with 2 occurrences migrated to:     https://db.apache.org/derby ([https](https://db.apache.org/derby) result 301). * [ ] http://dev.w3.org/html5/eventsource/ with 2 occurrences migrated to:     https://dev.w3.org/html5/eventsource/ ([https](https://dev.w3.org/html5/eventsource/) result 301). * [ ] http://domain.com with 24 occurrences migrated to:     https://domain.com ([https](https://domain.com) result 301). * [ ] http://domain.com/ with 1 occurrences migrated to:     https://domain.com/ ([https](https://domain.com/) result 301). * [ ] http://en.wikipedia.org/wiki/Cache_ with 1 occurrences migrated to:     https://en.wikipedia.org/wiki/Cache_ ([https](https://en.wikipedia.org/wiki/Cache_) result 301). * [ ] http://facebook.github.io/react/ with 2 occurrences migrated to:     https://facebook.github.io/react/ ([https](https://facebook.github.io/react/) result 301). * [ ] http://forum.springframework.org/showthread.php?t=41350 with 1 occurrences migrated to:     https://forum.springframework.org/showthread.php?t=41350 ([https](https://forum.springframework.org/showthread.php?t=41350) result 301). * [ ] http://github.com/SpringSource/spring-framework with 1 occurrences migrated to:     https://github.com/SpringSource/spring-framework ([https](https://github.com/SpringSource/spring-framework) result 301). * [ ] http://hdiv.org/ with 1 occurrences migrated to:     https://hdiv.org/ ([https](https://hdiv.org/) result 301). * [ ] http://jakarta.apache.org/commons/fileupload with 1 occurrences migrated to:     https://jakarta.apache.org/commons/fileupload ([https](https://jakarta.apache.org/commons/fileupload) result 301). * [ ] http://jira.springframework.org/browse/SPR-5708 with 1 occurrences migrated to:     https://jira.springframework.org/browse/SPR-5708 ([https](https://jira.springframework.org/browse/SPR-5708) result 301). * [ ] http://jira.springframework.org/browse/SPR-6124 with 1 occurrences migrated to:     https://jira.springframework.org/browse/SPR-6124 ([https](https://jira.springframework.org/browse/SPR-6124) result 301). * [ ] http://jira.springframework.org/browse/SPR-6128 with 1 occurrences migrated to:     https://jira.springframework.org/browse/SPR-6128 ([https](https://jira.springframework.org/browse/SPR-6128) result 301). * [ ] http://jira.springframework.org/browse/SPR-7064 with 1 occurrences migrated to:     https://jira.springframework.org/browse/SPR-7064 ([https](https://jira.springframework.org/browse/SPR-7064) result 301). * [ ] http://maven.apache.org/plugins/maven-surefire-plugin/test-mojo.html with 1 occurrences migrated to:     https://maven.apache.org/plugins/maven-surefire-plugin/test-mojo.html ([https](https://maven.apache.org/plugins/maven-surefire-plugin/test-mojo.html) result 301). * [ ] http://mockito.org/ (301) with 1 occurrences migrated to:     https://mockito.github.io ([https](https://mockito.org/) result 301). * [ ] http://mydomain1.com with 36 occurrences migrated to:     https://mydomain1.com ([https](https://mydomain1.com) result 301). * [ ] http://mydomain1.com/ with 2 occurrences migrated to:     https://mydomain1.com/ ([https](https://mydomain1.com/) result 301). * [ ] http://mydomain1.com/path with 2 occurrences migrated to:     https://mydomain1.com/path ([https](https://mydomain1.com/path) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-2660 with 1 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-2660 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-2660) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-2754 with 1 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-2754 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-2754) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-2789 with 1 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-2789 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-2789) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-3127 with 1 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-3127 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-3127) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-3775 with 1 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-3775 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-3775) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-3880 with 1 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-3880 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-3880) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-3896 with 7 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-3896 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-3896) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-3949 with 1 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-3949 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-3949) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-4008 with 2 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-4008 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-4008) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-4040 with 2 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-4040 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-4040) result 301). * [ ] http://projects.spring.io/spring-webflow with 1 occurrences migrated to:     https://projects.spring.io/spring-webflow ([https](https://projects.spring.io/spring-webflow) result 301). * [ ] http://publib.boulder.ibm.com/infocenter/wasinfo/v5r1//topic/com.ibm.websphere.base.doc/info/aes/ae/rdat_extiapi.html with 1 occurrences migrated to:     https://publib.boulder.ibm.com/infocenter/wasinfo/v5r1//topic/com.ibm.websphere.base.doc/info/aes/ae/rdat_extiapi.html ([https](https://publib.boulder.ibm.com/infocenter/wasinfo/v5r1//topic/com.ibm.websphere.base.doc/info/aes/ae/rdat_extiapi.html) result 301). * [ ] http://publib.boulder.ibm.com/infocenter/wasinfo/v6r0/topic/com.ibm.websphere.javadoc.doc/public_html/api/com/ibm/websphere/rsadapter/JDBCConnectionSpec.html with 1 occurrences migrated to:     https://publib.boulder.ibm.com/infocenter/wasinfo/v6r0/topic/com.ibm.websphere.javadoc.doc/public_html/api/com/ibm/websphere/rsadapter/JDBCConnectionSpec.html ([https](https://publib.boulder.ibm.com/infocenter/wasinfo/v6r0/topic/com.ibm.websphere.javadoc.doc/public_html/api/com/ibm/websphere/rsadapter/JDBCConnectionSpec.html) result 301). * [ ] http://site2.com with 3 occurrences migrated to:     https://site2.com ([https](https://site2.com) result 301). * [ ] http://slack.kotlinlang.org/ with 2 occurrences migrated to:     https://slack.kotlinlang.org/ ([https](https://slack.kotlinlang.org/) result 301). * [ ] http://sourceforge.net/projects/c3p0 with 2 occurrences migrated to:     https://sourceforge.net/projects/c3p0 ([https](https://sourceforge.net/projects/c3p0) result 301). * [ ] http://sourceforge.net/projects/javadiff with 1 occurrences migrated to:     https://sourceforge.net/projects/javadiff ([https](https://sourceforge.net/projects/javadiff) result 301). * [ ] http://springframework.org with 2 occurrences migrated to:     https://springframework.org ([https](https://springframework.org) result 301). * [ ] http://www-01.ibm.com/software/webservers/appserv/was/ with 1 occurrences migrated to:     https://www-01.ibm.com/software/webservers/appserv/was/ ([https](https://www-01.ibm.com/software/webservers/appserv/was/) result 301). * [ ] http://www.atomenabled.org/developers/syndication/ with 1 occurrences migrated to:     https://www.atomenabled.org/developers/syndication/ ([https](https://www.atomenabled.org/developers/syndication/) result 301). * [ ] http://www.eclipse.org/aspectj with 2 occurrences migrated to:     https://www.eclipse.org/aspectj ([https](https://www.eclipse.org/aspectj) result 301). * [ ] http://www.google.com/ig/calculator?q=1USD=?EUR with 1 occurrences migrated to:     https://www.google.com/ig/calculator?q=1USD=?EUR ([https](https://www.google.com/ig/calculator?q=1USD=?EUR) result 301). * [ ] http://www.javaworld.com/javaworld/jw-01-2009/jw-01-spring-transactions.html with 1 occurrences migrated to:     https://www.javaworld.com/javaworld/jw-01-2009/jw-01-spring-transactions.html ([https](https://www.javaworld.com/javaworld/jw-01-2009/jw-01-spring-transactions.html) result 301). * [ ] http://www.jboss.org/jbossas/ with 1 occurrences migrated to:     https://www.jboss.org/jbossas/ ([https](https://www.jboss.org/jbossas/) result 301). * [ ] http://www.junit.org/ with 1 occurrences migrated to:     https://www.junit.org/ ([https](https://www.junit.org/) result 301). * [ ] http://www.mnot.net/cache_docs with 1 occurrences migrated to:     https://www.mnot.net/cache_docs ([https](https://www.mnot.net/cache_docs) result 301). * [ ] http://www.sf.net/home.view?siteLanguage=nl with 1 occurrences migrated to:     https://www.sf.net/home.view?siteLanguage=nl ([https](https://www.sf.net/home.view?siteLanguage=nl) result 301). * [ ] http://www.springframework.org with 7 occurrences migrated to:     https://www.springframework.org ([https](https://www.springframework.org) result 301). * [ ] http://www.springframework.org/ with 3 occurrences migrated to:     https://www.springframework.org/ ([https](https://www.springframework.org/) result 301). * [ ] http://xyz.com/path with 2 occurrences migrated to:     https://xyz.com/path ([https](https://xyz.com/path) result 301). * [ ] http://commons.apache.org/codec/ with 1 occurrences migrated to:     https://commons.apache.org/codec/ ([https](https://commons.apache.org/codec/) result 302). * [ ] http://commons.apache.org/logging with 2 occurrences migrated to:     https://commons.apache.org/logging ([https](https://commons.apache.org/logging) result 302). * [ ] http://download.oracle.com/javaee/6/api/javax/inject/Scope.html with 1 occurrences migrated to:     https://download.oracle.com/javaee/6/api/javax/inject/Scope.html ([https](https://download.oracle.com/javaee/6/api/javax/inject/Scope.html) result 302). * [ ] http://download.oracle.com/javase/1.5.0/docs/api/java/lang/System.html with 4 occurrences migrated to:     https://download.oracle.com/javase/1.5.0/docs/api/java/lang/System.html ([https](https://download.oracle.com/javase/1.5.0/docs/api/java/lang/System.html) result 302). * [ ] http://download.oracle.com/javase/6/docs/api/java/beans/ConstructorProperties.html with 1 occurrences migrated to:     https://download.oracle.com/javase/6/docs/api/java/beans/ConstructorProperties.html ([https](https://download.oracle.com/javase/6/docs/api/java/beans/ConstructorProperties.html) result 302). * [ ] http://download.oracle.com/javase/6/docs/technotes/guides/jar/jar.html with 1 occurrences migrated to:     https://download.oracle.com/javase/6/docs/technotes/guides/jar/jar.html ([https](https://download.oracle.com/javase/6/docs/technotes/guides/jar/jar.html) result 302). * [ ] http://download.oracle.com/javase/jndi/tutorial/beyond/misc/policy.html with 1 occurrences migrated to:     https://download.oracle.com/javase/jndi/tutorial/beyond/misc/policy.html ([https](https://download.oracle.com/javase/jndi/tutorial/beyond/misc/policy.html) result 302). * [ ] http://gafter.blogspot.nl/2006/12/super-type-tokens.html with 1 occurrences migrated to:     https://gafter.blogspot.nl/2006/12/super-type-tokens.html ([https](https://gafter.blogspot.nl/2006/12/super-type-tokens.html) result 302). * [ ] http://git-scm.com/book/en/Distributed-Git-Contributing-to-a-Project with 1 occurrences migrated to:     https://git-scm.com/book/en/Distributed-Git-Contributing-to-a-Project ([https](https://git-scm.com/book/en/Distributed-Git-Contributing-to-a-Project) result 302). * [ ] http://git-scm.com/book/en/Git-Tools-Rewriting-History with 1 occurrences migrated to:     https://git-scm.com/book/en/Git-Tools-Rewriting-History ([https](https://git-scm.com/book/en/Git-Tools-Rewriting-History) result 302). * [ ] http://glassfish.dev.java.net/ with 1 occurrences migrated to:     https://glassfish.dev.java.net/ ([https](https://glassfish.dev.java.net/) result 302). * [ ] http://java.sun.com with 3 occurrences migrated to:     https://java.sun.com ([https](https://java.sun.com) result 302). * [ ] http://java.sun.com/docs/books/jls/third_edition/html/conversions.html with 1 occurrences migrated to:     https://java.sun.com/docs/books/jls/third_edition/html/conversions.html ([https](https://java.sun.com/docs/books/jls/third_edition/html/conversions.html) result 302). * [ ] http://java.sun.com/docs/books/jls/third_edition/html/expressions.html with 1 occurrences migrated to:     https://java.sun.com/docs/books/jls/third_edition/html/expressions.html ([https](https://java.sun.com/docs/books/jls/third_edition/html/expressions.html) result 302). * [ ] http://java.sun.com/j2se/ with 2 occurrences migrated to:     https://java.sun.com/j2se/ ([https](https://java.sun.com/j2se/) result 302). * [ ] http://java.sun.com/j2se/1.4.1/docs/tooldocs/solaris/javadoc.html with 1 occurrences migrated to:     https://java.sun.com/j2se/1.4.1/docs/tooldocs/solaris/javadoc.html ([https](https://java.sun.com/j2se/1.4.1/docs/tooldocs/solaris/javadoc.html) result 302). * [ ] http://java.sun.com/j2se/1.4.2/docs/api/java/text/SimpleDateFormat.html with 1 occurrences migrated to:     https://java.sun.com/j2se/1.4.2/docs/api/java/text/SimpleDateFormat.html ([https](https://java.sun.com/j2se/1.4.2/docs/api/java/text/SimpleDateFormat.html) result 302). * [ ] http://java.sun.com/j2se/javadoc with 1 occurrences migrated to:     https://java.sun.com/j2se/javadoc ([https](https://java.sun.com/j2se/javadoc) result 302). * [ ] http://java.sun.com/j2se/javadoc/ with 1 occurrences migrated to:     https://java.sun.com/j2se/javadoc/ ([https](https://java.sun.com/j2se/javadoc/) result 302). * [ ] http://java.sun.com/j2se/javadoc/faq.html with 1 occurrences migrated to:     https://java.sun.com/j2se/javadoc/faq.html ([https](https://java.sun.com/j2se/javadoc/faq.html) result 302). * [ ] http://java.sun.com/webservices/jaxb/ with 1 occurrences migrated to:     https://java.sun.com/webservices/jaxb/ ([https](https://java.sun.com/webservices/jaxb/) result 302). * [ ] http://java.sun.com/xml/ns/j2ee/connector_1_5.xsd with 1 occurrences migrated to:     https://java.sun.com/xml/ns/j2ee/connector_1_5.xsd ([https](https://java.sun.com/xml/ns/j2ee/connector_1_5.xsd) result 302). * [ ] http://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd with 2 occurrences migrated to:     https://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd ([https](https://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd) result 302). * [ ] http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd with 2 occurrences migrated to:     https://java.sun.com/xml/ns/javaee/web-app_3_0.xsd ([https](https://java.sun.com/xml/ns/javaee/web-app_3_0.xsd) result 302). * [ ] http://sourceforge.net/projects/cglib/files/cglib3/3.0/cglib-3.0.jar/download with 1 occurrences migrated to:     https://sourceforge.net/projects/cglib/files/cglib3/3.0/cglib-3.0.jar/download ([https](https://sourceforge.net/projects/cglib/files/cglib3/3.0/cglib-3.0.jar/download) result 302). * [ ] http://other.info/foo/bar (301) with 1 occurrences migrated to:     https://weibo.com/otherinfo/foo/bar ([https](https://other.info/foo/bar) result 302). * [ ] http://www.iana.org/assignments/http-status-codes with 1 occurrences migrated to:     https://www.iana.org/assignments/http-status-codes ([https](https://www.iana.org/assignments/http-status-codes) result 302). * [ ] http://www.iana.org/assignments/media-types/ with 1 occurrences migrated to:     https://www.iana.org/assignments/media-types/ ([https](https://www.iana.org/assignments/media-types/) result 302). * [ ] http://www.sys-con.com/java with 1 occurrences migrated to:     https://www.sys-con.com/java ([https](https://www.sys-con.com/java) result 302).  # Ignored These URLs were intentionally ignored.  * http://Additional-namespace-name-URI with 1 occurrences * http://Default-namespace-name-URI with 1 occurrences * http://HOST:8080/remoting/AccountService with 1 occurrences * http://Namespace-name-URI with 1 occurrences * http://Unbound-namespace-name-URI with 1 occurrences * http://anotherHost/mvc-showcase with 1 occurrences * http://apache.org/xml/features/disallow-doctype-decl with 14 occurrences * http://barfoo:8888 with 1 occurrences * http://example/ with 1 occurrences * http://fake-service with 7 occurrences * http://foo with 3 occurrences * http://foobar:8088 with 1 occurrences * http://host:port/myApp/myEndpoint/ with 1 occurrences * http://java.sun.com/jsp/jstl/core with 1 occurrences * http://java.sun.com/xml/jaxp/properties/schemaLanguage with 1 occurrences * http://java.sun.com/xml/ns/j2ee with 6 occurrences * http://java.sun.com/xml/ns/javaee with 4 occurrences * http://java.sun.com/xml/ns/persistence with 1 occurrences * http://java.sun.com/xml/stream/properties/report-cdata-event with 1 occurrences * http://jaxws.remoting.springframework.org/ with 4 occurrences * http://localhost with 81 occurrences * http://localhost/ with 14 occurrences * http://localhost/42 with 1 occurrences * http://localhost/?cookie=foo with 1 occurrences * http://localhost/FILE.TXT with 1 occurrences * http://localhost/abc with 1 occurrences * http://localhost/abc/def with 1 occurrences * http://localhost/app%20/path/ with 1 occurrences * http://localhost/app/path%20with%20spaces/ with 1 occurrences * http://localhost/bar with 1 occurrences * http://localhost/context/a with 3 occurrences * http://localhost/contextPath/main/path with 1 occurrences * http://localhost/file.foo with 1 occurrences * http://localhost/file.txt with 1 occurrences * http://localhost/foo%20bar with 1 occurrences * http://localhost/foo/bar with 1 occurrences * http://localhost/forward with 1 occurrences * http://localhost/hotels/42/bookings/21 with 4 occurrences * http://localhost/input with 1 occurrences * http://localhost/jquery-1.11.0.min.js with 5 occurrences * http://localhost/messages/form with 1 occurrences * http://localhost/mvc-showcase with 2 occurrences * http://localhost/mvc-showcase/app with 1 occurrences * http://localhost/mvc-showcase/data/foo%20bar with 1 occurrences * http://localhost/mvc-showcase/data/param with 1 occurrences * http://localhost/mvc-showcase/data/param?foo=123 with 2 occurrences * http://localhost/myapp/main with 1 occurrences * http://localhost/myapp/people/1/addresses/DE with 1 occurrences * http://localhost/path with 3 occurrences * http://localhost/path;a=b/with/semicolon with 1 occurrences * http://localhost/persons with 1 occurrences * http://localhost/prefix with 1 occurrences * http://localhost/prefix/app with 1 occurrences * http://localhost/prefix/bar with 1 occurrences * http://localhost/prefix/mvc-showcase with 3 occurrences * http://localhost/query= with 1 occurrences * http://localhost/query=foo@bar with 1 occurrences * http://localhost/resources/child/response.txt with 1 occurrences * http://localhost/resources/foo with 1 occurrences * http://localhost/resources/response.txt with 1 occurrences * http://localhost/rest/books/6/pages/1.json with 1 occurrences * http://localhost/something/1/foo with 1 occurrences * http://localhost/something/optional-param with 1 occurrences * http://localhost/test with 4 occurrences * http://localhost/test.html with 1 occurrences * http://localhost/test/this with 2 occurrences * http://localhost:7070/example/adminhandle.vm with 1 occurrences * http://localhost:7070/example/bingo.html with 1 occurrences * http://localhost:80/jquery-1.11.0.min.js with 1 occurrences * http://localhost:8080 with 34 occurrences * http://localhost:8080/ with 4 occurrences * http://localhost:8080/OrderService with 3 occurrences * http://localhost:8080/aA/bB/cC with 1 occurrences * http://localhost:8080/context with 1 occurrences * http://localhost:8080/context/myapiresource with 1 occurrences * http://localhost:8080/gamecast/admin/index.html with 1 occurrences * http://localhost:8080/gamecast/display.html with 1 occurrences * http://localhost:8080/gamecast/displayShoppingCart.html with 1 occurrences * http://localhost:8080/jquery-1.11.0.min.js with 1 occurrences * http://localhost:8080/mvc-showcase with 1 occurrences * http://localhost:8080/myapiresource with 1 occurrences * http://localhost:8080/myapp/js/sockjs-client.js with 1 occurrences * http://localhost:8080/path with 2 occurrences * http://localhost:8080/people with 2 occurrences * http://localhost:8080/portfolio with 1 occurrences * http://localhost:8080/spring/ with 2 occurrences * http://localhost:8080/test/ with 2 occurrences * http://localhost:8080/test/print?value=%EA%B0%80+%EB%82%98 with 1 occurrences * http://localhost:8081 with 1 occurrences * http://localhost:8081/ with 1 occurrences * http://localhost:8181 with 1 occurrences * http://localhost:8888/AccountServiceEndpoint?WSDL with 1 occurrences * http://localhost:9000 with 7 occurrences * http://localhost:9090 with 18 occurrences * http://localhost:9090/jquery-1.11.0.min.js with 2 occurrences * http://localhost:9990/mail/messages/form with 1 occurrences * http://localhost:9999/ with 1 occurrences * http://localhost:9999/OrderService?wsdl with 4 occurrences * http://localhosta/testbean with 3 occurrences * http://myserver with 1 occurrences * http://myurl with 12 occurrences * http://remotehost:8080/remoting/AccountService with 2 occurrences * http://samples.springframework.org/flight with 39 occurrences * http://somethingDifferent with 1 occurrences * http://springframework.org/spring-ws with 17 occurrences * http://test.com with 1 occurrences * http://test.com/ with 1 occurrences * http://testng.org/ with 1 occurrences * http://tiles.apache.org/tags-tiles with 1 occurrences * http://www with 1 occurrences * http://www.foo.com/schema/component with 6 occurrences * http://www.mycompany.com/schema/myns with 4 occurrences * http://www.springframework.org/schema/aop with 30 occurrences * http://www.springframework.org/schema/beans with 166 occurrences * http://www.springframework.org/schema/beans/test with 2 occurrences * http://www.springframework.org/schema/c with 1 occurrences * http://www.springframework.org/schema/cache with 5 occurrences * http://www.springframework.org/schema/context with 28 occurrences * http://www.springframework.org/schema/jdbc with 6 occurrences * http://www.springframework.org/schema/jee with 8 occurrences * http://www.springframework.org/schema/jms with 5 occurrences * http://www.springframework.org/schema/lang with 10 occurrences * http://www.springframework.org/schema/mvc with 8 occurrences * http://www.springframework.org/schema/oxm with 4 occurrences * http://www.springframework.org/schema/p with 4 occurrences * http://www.springframework.org/schema/task with 2 occurrences * http://www.springframework.org/schema/tool with 27 occurrences * http://www.springframework.org/schema/tx with 17 occurrences * http://www.springframework.org/schema/tx/spring-tx.xsd__ with 1 occurrences * http://www.springframework.org/schema/util with 8 occurrences * http://www.springframework.org/schema/websocket with 24 occurrences * http://www.springframework.org/spring-ws with 1 occurrences * http://www.springframework.org/tags with 4 occurrences * http://www.springframework.org/tags/form with 2 occurrences * http://www.w3.org/1999/XSL/Transform with 8 occurrences * http://www.w3.org/2001/XMLSchema with 24 occurrences * http://www.w3.org/2001/XMLSchema-instance with 81 occurrences * http://www.w3.org/2005/Atom with 4 occurrences * http://www.w3.org/TR/html4/charset.html with 5 occurrences * http://www.w3.org/TR/html4/sgml/entities.html with 14 occurrences * http://www.w3.org/XML/1998/namespace with 5 occurrences * http://xml.org/sax/features/ with 4 occurrences * http://xml.org/sax/features/external-general-entities with 14 occurrences * http://xml.org/sax/features/is-standalone with 1 occurrences * http://xml.org/sax/features/namespace-prefixes with 13 occurrences * http://xml.org/sax/features/namespaces with 12 occurrences * http://xml.org/sax/features/namespaces-prefixes with 1 occurrences * http://xml.org/sax/properties/lexical-handler with 12 occurrences","closed","type: task,","spring-operator","2019-03-26T09:24:24Z","2019-03-27T17:43:51Z"
"","22678","URL Cleanup","This commit updates URLs to prefer the https protocol. Redirects are not followed to avoid accidentally expanding intentionally shortened URLs (i.e. if using a URL shortener).  # HTTP URLs that Could Not Be Fixed These URLs were unable to be fixed. Please review them to see if they can be manually resolved.  * [ ] http://aopalliance.sourceforge.net (200) with 1 occurrences could not be migrated:      ([https](https://aopalliance.sourceforge.net) result AnnotatedConnectException). * [ ] http://classdoc.sourceforge.net (200) with 1 occurrences could not be migrated:      ([https](https://classdoc.sourceforge.net) result AnnotatedConnectException). * [ ] http://code.jquery.com:80/jquery.js (200) with 1 occurrences could not be migrated:      ([https](https://code.jquery.com:80/jquery.js) result SSLException). * [ ] http://dbunit.sourceforge.net/ (200) with 1 occurrences could not be migrated:      ([https](https://dbunit.sourceforge.net/) result AnnotatedConnectException). * [ ] http://docs.groovy-lang.org/docs/next/html/documentation/template-engines.html (200) with 1 occurrences could not be migrated:      ([https](https://docs.groovy-lang.org/docs/next/html/documentation/template-engines.html) result SSLProtocolException). * [ ] http://domain3.com (200) with 3 occurrences could not be migrated:      ([https](https://domain3.com) result ConnectTimeoutException). * [ ] http://gee.cs.oswego.edu/dl/concurrency-interest/ (200) with 1 occurrences could not be migrated:      ([https](https://gee.cs.oswego.edu/dl/concurrency-interest/) result AnnotatedConnectException). * [ ] http://grinder.sourceforge.net/ (200) with 1 occurrences could not be migrated:      ([https](https://grinder.sourceforge.net/) result AnnotatedConnectException). * [ ] http://groovy-lang.org/templating.html (200) with 3 occurrences could not be migrated:      ([https](https://groovy-lang.org/templating.html) result SSLProtocolException). * [ ] http://hsqldb.org (200) with 1 occurrences could not be migrated:      ([https](https://hsqldb.org) result SSLHandshakeException). * [ ] http://htmlunit.sourceforge.net/ (200) with 3 occurrences could not be migrated:      ([https](https://htmlunit.sourceforge.net/) result AnnotatedConnectException). * [ ] http://htmlunit.sourceforge.net/gettingStarted.html (200) with 1 occurrences could not be migrated:      ([https](https://htmlunit.sourceforge.net/gettingStarted.html) result AnnotatedConnectException). * [ ] http://htmlunit.sourceforge.net/javascript.html (200) with 1 occurrences could not be migrated:      ([https](https://htmlunit.sourceforge.net/javascript.html) result AnnotatedConnectException). * [ ] http://jasperreports.sourceforge.net (200) with 3 occurrences could not be migrated:      ([https](https://jasperreports.sourceforge.net) result AnnotatedConnectException). * [ ] http://jasperreports.sourceforge.net/dtds/jasperreport.dtd (200) with 6 occurrences could not be migrated:      ([https](https://jasperreports.sourceforge.net/dtds/jasperreport.dtd) result AnnotatedConnectException). * [ ] http://javadiff.cvs.sourceforge.net/ (200) with 3 occurrences could not be migrated:      ([https](https://javadiff.cvs.sourceforge.net/) result SSLHandshakeException). * [ ] http://jibx.sourceforge.net/ (200) with 2 occurrences could not be migrated:      ([https](https://jibx.sourceforge.net/) result AnnotatedConnectException). * [ ] http://joda-time.sourceforge.net (200) with 1 occurrences could not be migrated:      ([https](https://joda-time.sourceforge.net) result AnnotatedConnectException). * [ ] http://jotm.objectweb.org/ (200) with 1 occurrences could not be migrated:      ([https](https://jotm.objectweb.org/) result NotSslRecordException). * [ ] http://livereload.com/ (200) with 1 occurrences could not be migrated:      ([https](https://livereload.com/) result ConnectTimeoutException). * [ ] http://mx4j.sourceforge.net (200) with 1 occurrences could not be migrated:      ([https](https://mx4j.sourceforge.net) result AnnotatedConnectException). * [ ] http://mx4j.sourceforge.net/ (200) with 1 occurrences could not be migrated:      ([https](https://mx4j.sourceforge.net/) result AnnotatedConnectException). * [ ] http://mydomain3.com (200) with 9 occurrences could not be migrated:      ([https](https://mydomain3.com) result ConnectTimeoutException). * [ ] http://objenesis.org (200) with 1 occurrences could not be migrated:      ([https](https://objenesis.org) result SSLHandshakeException). * [ ] http://objenesis.org/tutorial.html (200) with 1 occurrences could not be migrated:      ([https](https://objenesis.org/tutorial.html) result SSLHandshakeException). * [ ] http://other.com/ (200) with 2 occurrences could not be migrated:      ([https](https://other.com/) result SSLHandshakeException). * [ ] http://url.somewhereelse.com (200) with 2 occurrences could not be migrated:      ([https](https://url.somewhereelse.com) result SSLHandshakeException). * [ ] http://www.andykhan.com/jexcelapi/ (200) with 2 occurrences could not be migrated:      ([https](https://www.andykhan.com/jexcelapi/) result ConnectTimeoutException). * [ ] http://www.beanshell.org (200) with 1 occurrences could not be migrated:      ([https](https://www.beanshell.org) result SSLHandshakeException). * [ ] http://www.beanshell.org/ (200) with 1 occurrences could not be migrated:      ([https](https://www.beanshell.org/) result SSLHandshakeException). * [ ] http://www.datanucleus.org/ (200) with 2 occurrences could not be migrated:      ([https](https://www.datanucleus.org/) result AnnotatedConnectException). * [ ] http://www.doclet.com (200) with 1 occurrences could not be migrated:      ([https](https://www.doclet.com) result AnnotatedConnectException). * [ ] http://www.gebish.org/ (200) with 1 occurrences could not be migrated:      ([https](https://www.gebish.org/) result SSLHandshakeException). * [ ] http://www.gebish.org/manual/current/ (200) with 2 occurrences could not be migrated:      ([https](https://www.gebish.org/manual/current/) result SSLHandshakeException). * [ ] http://www.groovy-lang.org/ (200) with 2 occurrences could not be migrated:      ([https](https://www.groovy-lang.org/) result SSLProtocolException). * [ ] http://www.groovy-lang.org/operators.html (200) with 2 occurrences could not be migrated:      ([https](https://www.groovy-lang.org/operators.html) result SSLProtocolException). * [ ] http://www.hsqldb.org (200) with 1 occurrences could not be migrated:      ([https](https://www.hsqldb.org) result SSLHandshakeException). * [ ] http://www.jasperassistant.com (200) with 6 occurrences could not be migrated:      ([https](https://www.jasperassistant.com) result SSLHandshakeException). * [ ] http://www.jensgulden.de (200) with 1 occurrences could not be migrated:      ([https](https://www.jensgulden.de) result AnnotatedConnectException). * [ ] http://www.mockobjects.com (200) with 2 occurrences could not be migrated:      ([https](https://www.mockobjects.com) result ClosedChannelException). * [ ] http://www.mockobjects.com/ (200) with 1 occurrences could not be migrated:      ([https](https://www.mockobjects.com/) result ClosedChannelException). * [ ] http://xmlunit.sourceforge.net/ (200) with 3 occurrences could not be migrated:      ([https](https://xmlunit.sourceforge.net/) result AnnotatedConnectException). * [ ] http://192.168.0.1/mvc-showcase (301) with 1 occurrences could not be migrated:      ([https](https://192.168.0.1/mvc-showcase) result ConnectTimeoutException). * [ ] http://www.easymock.org (301) with 4 occurrences could not be migrated:      ([https](https://www.easymock.org) result SSLHandshakeException). * [ ] http://www.easymock.org/ (301) with 1 occurrences could not be migrated:      ([https](https://www.easymock.org/) result SSLHandshakeException). * [ ] http://www.jmock.org/ (301) with 1 occurrences could not be migrated:      ([https](https://www.jmock.org/) result SSLHandshakeException). * [ ] http://foo.com (301) with 4 occurrences could not be migrated:      ([https](https://foo.com) result SSLHandshakeException). * [ ] http://foo.com/a (301) with 1 occurrences could not be migrated:      ([https](https://foo.com/a) result SSLHandshakeException). * [ ] http://foo.com/a?foo=bar&foo=baz (301) with 4 occurrences could not be migrated:      ([https](https://foo.com/a?foo=bar&foo=baz) result SSLHandshakeException). * [ ] http://foo.com/bar (301) with 4 occurrences could not be migrated:      ([https](https://foo.com/bar) result SSLHandshakeException). * [ ] http://foo.com/rest/books/6.json (301) with 1 occurrences could not be migrated:      ([https](https://foo.com/rest/books/6.json) result SSLHandshakeException). * [ ] http://foo.com/rest/books/6/pages/1.json (301) with 1 occurrences could not be migrated:      ([https](https://foo.com/rest/books/6/pages/1.json) result SSLHandshakeException). * [ ] http://foo.com/wrong (301) with 1 occurrences could not be migrated:      ([https](https://foo.com/wrong) result SSLHandshakeException). * [ ] http://mydomain4.com (301) with 3 occurrences could not be migrated:      ([https](https://mydomain4.com) result SSLHandshakeException). * [ ] http://groovy-lang.org/docs/groovy-2.3.6/html/documentation/markup-template-engine.html (302) with 1 occurrences could not be migrated:      ([https](https://groovy-lang.org/docs/groovy-2.3.6/html/documentation/markup-template-engine.html) result SSLProtocolException). * [ ] http://www.caucho.com/hessian (302) with 6 occurrences could not be migrated:      ([https](https://www.caucho.com/hessian) result SSLHandshakeException). * [ ] http://mydomain2.com (302) with 22 occurrences could not be migrated:      ([https](https://mydomain2.com) result ConnectTimeoutException). * [ ] http://www.jdiff.org (302) with 1 occurrences could not be migrated:      ([https](https://www.jdiff.org) result ConnectTimeoutException). * [ ] http://example.com:80/test/this/here (404) with 3 occurrences could not be migrated:      ([https](https://example.com:80/test/this/here) result NotSslRecordException). * [ ] http://www.foo.com/schema/component/component.xsd (404) with 1 occurrences could not be migrated:      ([https](https://www.foo.com/schema/component/component.xsd) result SSLHandshakeException). * [ ] http://www.foo.com/schema/jcache (404) with 2 occurrences could not be migrated:      ([https](https://www.foo.com/schema/jcache) result SSLHandshakeException). * [ ] http://www.gebish.org/manual/current/testing.html (404) with 1 occurrences could not be migrated:      ([https](https://www.gebish.org/manual/current/testing.html) result SSLHandshakeException). * [ ] http://www.jpox.org (404) with 1 occurrences could not be migrated:      ([https](https://www.jpox.org) result ClosedChannelException). * [ ] http://www.mularien.com/blog/2008/04/24/how-to-reference-and-use-jstl-in-your-web-application/ (404) with 1 occurrences could not be migrated:      ([https](https://www.mularien.com/blog/2008/04/24/how-to-reference-and-use-jstl-in-your-web-application/) result SSLHandshakeException). * [ ] http://www.mycompany.com/schema/myns/myns.xsd (404) with 1 occurrences could not be migrated:      ([https](https://www.mycompany.com/schema/myns/myns.xsd) result ConnectTimeoutException). * [ ] http://xunitpatterns.com/Test%20Spy.html (404) with 1 occurrences could not be migrated:      ([https](https://xunitpatterns.com/Test%20Spy.html) result AnnotatedConnectException).  # Fixed URLs  ## Fixed But Review Recommended These URLs were fixed, but the https status was not OK. However, the https status was the same as the http request or http redirected to an https URL, so they were migrated. Your review is recommended.  * [ ] http://bugs.sun.com/view_bug.do?bug_id=6342411 (302) with 1 occurrences migrated to:     https://bugs.java.com/view_bug.do?bug_id=6342411 ([https](https://bugs.sun.com/view_bug.do?bug_id=6342411) result SSLHandshakeException). * [ ] http://bugs.sun.com/view_bug.do?bug_id=7023180 (302) with 2 occurrences migrated to:     https://bugs.java.com/view_bug.do?bug_id=7023180 ([https](https://bugs.sun.com/view_bug.do?bug_id=7023180) result SSLHandshakeException). * [ ] http://www.freemarker.org (301) with 4 occurrences migrated to:     https://freemarker.apache.org/ ([https](https://www.freemarker.org) result ConnectTimeoutException). * [ ] http://sockjs.org (303) with 2 occurrences migrated to:     https://github.com/sockjs/sockjs-client ([https](https://sockjs.org) result AnnotatedConnectException). * [ ] http://network.pivotal.io/open-source (301) with 1 occurrences migrated to:     https://network.pivotal.io/open-source ([https](https://network.pivotal.io/open-source) result ReadTimeoutException). * [ ] http://www.caucho.com/ (302) with 1 occurrences migrated to:     https://www.caucho.com/ ([https](https://www.caucho.com/) result SSLHandshakeException). * [ ] http://www.caucho.com (302) with 1 occurrences migrated to:     https://www.caucho.com/ ([https](https://www.caucho.com) result SSLHandshakeException). * [ ] http://www.caucho.com/burlap (302) with 5 occurrences migrated to:     https://www.caucho.com/burlap ([https](https://www.caucho.com/burlap) result SSLHandshakeException). * [ ] http://jruby.org (301) with 2 occurrences migrated to:     https://www.jruby.org ([https](https://jruby.org) result SSLHandshakeException). * [ ] http://jruby.org/ (301) with 1 occurrences migrated to:     https://www.jruby.org ([https](https://jruby.org/) result SSLHandshakeException). * [ ] http://slf4j.org/faq.html (302) with 1 occurrences migrated to:     https://www.slf4j.org/faq.html ([https](https://slf4j.org/faq.html) result SSLHandshakeException). * [ ] http://192.168.28.42/1.jsp (ConnectTimeoutException) with 3 occurrences migrated to:     https://192.168.28.42/1.jsp ([https](https://192.168.28.42/1.jsp) result ConnectTimeoutException). * [ ] http://example.com:8080/ (ConnectTimeoutException) with 1 occurrences migrated to:     https://example.com:8080/ ([https](https://example.com:8080/) result ConnectTimeoutException). * [ ] http://example.com:8080/bar (ConnectTimeoutException) with 5 occurrences migrated to:     https://example.com:8080/bar ([https](https://example.com:8080/bar) result ConnectTimeoutException). * [ ] http://example.org:9090 (ConnectTimeoutException) with 2 occurrences migrated to:     https://example.org:9090 ([https](https://example.org:9090) result ConnectTimeoutException). * [ ] http://example.org:9090/base (ConnectTimeoutException) with 12 occurrences migrated to:     https://example.org:9090/base ([https](https://example.org:9090/base) result ConnectTimeoutException). * [ ] http://example.org:9090/base/people (ConnectTimeoutException) with 2 occurrences migrated to:     https://example.org:9090/base/people ([https](https://example.org:9090/base/people) result ConnectTimeoutException). * [ ] http://example.org:9090/base/something/1/foo (ConnectTimeoutException) with 2 occurrences migrated to:     https://example.org:9090/base/something/1/foo ([https](https://example.org:9090/base/something/1/foo) result ConnectTimeoutException). * [ ] http://example.org:9090/base/something/else (ConnectTimeoutException) with 2 occurrences migrated to:     https://example.org:9090/base/something/else ([https](https://example.org:9090/base/something/else) result ConnectTimeoutException). * [ ] http://example.org:9999/base (ConnectTimeoutException) with 1 occurrences migrated to:     https://example.org:9999/base ([https](https://example.org:9999/base) result ConnectTimeoutException). * [ ] http://example.org:9999/base/people/123/addresses/DE (ConnectTimeoutException) with 1 occurrences migrated to:     https://example.org:9999/base/people/123/addresses/DE ([https](https://example.org:9999/base/people/123/addresses/DE) result ConnectTimeoutException). * [ ] http://mydomain1.com:123 (ConnectTimeoutException) with 1 occurrences migrated to:     https://mydomain1.com:123 ([https](https://mydomain1.com:123) result ConnectTimeoutException). * [ ] http://site1.com (ConnectTimeoutException) with 2 occurrences migrated to:     https://site1.com ([https](https://site1.com) result ConnectTimeoutException). * [ ] http://wwws.sun.com/software/xml/developers/diffmk/ (ConnectTimeoutException) with 1 occurrences migrated to:     https://wwws.sun.com/software/xml/developers/diffmk/ ([https](https://wwws.sun.com/software/xml/developers/diffmk/) result ConnectTimeoutException). * [ ] http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=5041784 (ReadTimeoutException) with 1 occurrences migrated to:     https://bugs.sun.com/bugdatabase/view_bug.do?bug_id=5041784 ([https](https://bugs.sun.com/bugdatabase/view_bug.do?bug_id=5041784) result SSLHandshakeException). * [ ] http://www.w3.org/TR/html4/loose.dtd (ReadTimeoutException) with 4 occurrences migrated to:     https://www.w3.org/TR/html4/loose.dtd ([https](https://www.w3.org/TR/html4/loose.dtd) result ReadTimeoutException). * [ ] http://DOMAIN2.com (UnknownHostException) with 1 occurrences migrated to:     https://DOMAIN2.com ([https](https://DOMAIN2.com) result UnknownHostException). * [ ] http://a.example.org/mvc-showcase (UnknownHostException) with 1 occurrences migrated to:     https://a.example.org/mvc-showcase ([https](https://a.example.org/mvc-showcase) result UnknownHostException). * [ ] http://arjen:foobar@java.sun.com:80 (UnknownHostException) with 1 occurrences migrated to:     https://arjen:foobar@java.sun.com:80 ([https](https://arjen:foobar@java.sun.com:80) result UnknownHostException). * [ ] http://dev.bar.com (UnknownHostException) with 3 occurrences migrated to:     https://dev.bar.com ([https](https://dev.bar.com) result UnknownHostException). * [ ] http://domain1.com (UnknownHostException) with 20 occurrences migrated to:     https://domain1.com ([https](https://domain1.com) result UnknownHostException). * [ ] http://domain2.com (UnknownHostException) with 61 occurrences migrated to:     https://domain2.com ([https](https://domain2.com) result UnknownHostException). * [ ] http://example.com"",HttpMethod.GET (UnknownHostException) with 6 occurrences migrated to:     https://example.com"",HttpMethod.GET ([https](https://example.com"",HttpMethod.GET) result UnknownHostException). * [ ] http://foo.bar.com (UnknownHostException) with 4 occurrences migrated to:     https://foo.bar.com ([https](https://foo.bar.com) result UnknownHostException). * [ ] http://joe.openid.example.org/ (UnknownHostException) with 2 occurrences migrated to:     https://joe.openid.example.org/ ([https](https://joe.openid.example.org/) result UnknownHostException). * [ ] http://myserver/logo.png (UnknownHostException) with 1 occurrences migrated to:     https://myserver/logo.png ([https](https://myserver/logo.png) result UnknownHostException). * [ ] http://nagoya.apache.org/bugzilla/show_bug.cgi?id=16014 (UnknownHostException) with 1 occurrences migrated to:     https://nagoya.apache.org/bugzilla/show_bug.cgi?id=16014 ([https](https://nagoya.apache.org/bugzilla/show_bug.cgi?id=16014) result UnknownHostException). * [ ] http://samples.springframework.org/order (UnknownHostException) with 2 occurrences migrated to:     https://samples.springframework.org/order ([https](https://samples.springframework.org/order) result UnknownHostException). * [ ] http://url.somewhere.com (UnknownHostException) with 21 occurrences migrated to:     https://url.somewhere.com ([https](https://url.somewhere.com) result UnknownHostException). * [ ] http://url.somewhere.com/path (UnknownHostException) with 1 occurrences migrated to:     https://url.somewhere.com/path ([https](https://url.somewhere.com/path) result UnknownHostException). * [ ] http://url.somewhere.com/path?id=1 (UnknownHostException) with 1 occurrences migrated to:     https://url.somewhere.com/path?id=1 ([https](https://url.somewhere.com/path?id=1) result UnknownHostException). * [ ] http://url.somewhere.com/test.htm (UnknownHostException) with 2 occurrences migrated to:     https://url.somewhere.com/test.htm ([https](https://url.somewhere.com/test.htm) result UnknownHostException). * [ ] http://url.somewhere.com?foo=bar (UnknownHostException) with 1 occurrences migrated to:     https://url.somewhere.com?foo=bar ([https](https://url.somewhere.com?foo=bar) result UnknownHostException). * [ ] http://url.somewhere.com?foo=bar&a=b&c=d (UnknownHostException) with 1 occurrences migrated to:     https://url.somewhere.com?foo=bar&a=b&c=d ([https](https://url.somewhere.com?foo=bar&a=b&c=d) result UnknownHostException). * [ ] http://wiki.fasterxml.com/JacksonHome (UnknownHostException) with 3 occurrences migrated to:     https://wiki.fasterxml.com/JacksonHome ([https](https://wiki.fasterxml.com/JacksonHome) result UnknownHostException). * [ ] http://wiki.fasterxml.com/JacksonJsonViews (UnknownHostException) with 2 occurrences migrated to:     https://wiki.fasterxml.com/JacksonJsonViews ([https](https://wiki.fasterxml.com/JacksonJsonViews) result UnknownHostException). * [ ] http://x.y.z (UnknownHostException) with 2 occurrences migrated to:     https://x.y.z ([https](https://x.y.z) result UnknownHostException). * [ ] http://bitworking.org/projects/URI-Templates/ (302) with 1 occurrences migrated to:     https://bitworking.org/projects/URI-Templates/ ([https](https://bitworking.org/projects/URI-Templates/) result 404). * [ ] http://docs.spring.io/spring-framework/docs/current/spring-framework-reference/html/overview.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/html/overview.html ([https](https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/html/overview.html) result 404). * [ ] http://example.com/-foo (404) with 2 occurrences migrated to:     https://example.com/-foo ([https](https://example.com/-foo) result 404). * [ ] http://example.com/1 (404) with 1 occurrences migrated to:     https://example.com/1 ([https](https://example.com/1) result 404). * [ ] http://example.com/2 (404) with 1 occurrences migrated to:     https://example.com/2 ([https](https://example.com/2) result 404). * [ ] http://example.com/abc/ (404) with 1 occurrences migrated to:     https://example.com/abc/ ([https](https://example.com/abc/) result 404). * [ ] http://example.com/abc/x/y (404) with 1 occurrences migrated to:     https://example.com/abc/x/y ([https](https://example.com/abc/x/y) result 404). * [ ] http://example.com/abc/x/y/z (404) with 3 occurrences migrated to:     https://example.com/abc/x/y/z ([https](https://example.com/abc/x/y/z) result 404). * [ ] http://example.com/app/login/authenticate (404) with 1 occurrences migrated to:     https://example.com/app/login/authenticate ([https](https://example.com/app/login/authenticate) result 404). * [ ] http://example.com/bar (404) with 5 occurrences migrated to:     https://example.com/bar ([https](https://example.com/bar) result 404). * [ ] http://example.com/context.xml (404) with 4 occurrences migrated to:     https://example.com/context.xml ([https](https://example.com/context.xml) result 404). * [ ] http://example.com/example (404) with 6 occurrences migrated to:     https://example.com/example ([https](https://example.com/example) result 404). * [ ] http://example.com/example/?name (404) with 1 occurrences migrated to:     https://example.com/example/?name ([https](https://example.com/example/?name) result 404). * [ ] http://example.com/example/?name= (404) with 1 occurrences migrated to:     https://example.com/example/?name= ([https](https://example.com/example/?name=) result 404). * [ ] http://example.com/example/?name=%20 (404) with 1 occurrences migrated to:     https://example.com/example/?name=%20 ([https](https://example.com/example/?name=%20) result 404). * [ ] http://example.com/example/?name=row%5B0%5D (404) with 1 occurrences migrated to:     https://example.com/example/?name=row%5B0%5D ([https](https://example.com/example/?name=row%5B0%5D) result 404). * [ ] http://example.com/example/?name=value (404) with 1 occurrences migrated to:     https://example.com/example/?name=value ([https](https://example.com/example/?name=value) result 404). * [ ] http://example.com/example/?name=value¶m2=value+2 (404) with 1 occurrences migrated to:     https://example.com/example/?name=value¶m2=value+2 ([https](https://example.com/example/?name=value¶m2=value+2) result 404). * [ ] http://example.com/example/?row%5B0%5D=value (404) with 1 occurrences migrated to:     https://example.com/example/?row%5B0%5D=value ([https](https://example.com/example/?row%5B0%5D=value) result 404). * [ ] http://example.com/foo (404) with 4 occurrences migrated to:     https://example.com/foo ([https](https://example.com/foo) result 404). * [ ] http://example.com/foo/../bar (404) with 1 occurrences migrated to:     https://example.com/foo/../bar ([https](https://example.com/foo/../bar) result 404). * [ ] http://example.com/foo/foo2?bar (404) with 1 occurrences migrated to:     https://example.com/foo/foo2?bar ([https](https://example.com/foo/foo2?bar) result 404). * [ ] http://example.com/foo?bar (404) with 4 occurrences migrated to:     https://example.com/foo?bar ([https](https://example.com/foo?bar) result 404). * [ ] http://example.com/foo?bar= (404) with 2 occurrences migrated to:     https://example.com/foo?bar= ([https](https://example.com/foo?bar=) result 404). * [ ] http://example.com/foo?bar=baz (404) with 2 occurrences migrated to:     https://example.com/foo?bar=baz ([https](https://example.com/foo?bar=baz) result 404). * [ ] http://example.com/foo?baz=42 (404) with 1 occurrences migrated to:     https://example.com/foo?baz=42 ([https](https://example.com/foo?baz=42) result 404). * [ ] http://example.com/foo?foo=bar&baz=qux (404) with 2 occurrences migrated to:     https://example.com/foo?foo=bar&baz=qux ([https](https://example.com/foo?foo=bar&baz=qux) result 404). * [ ] http://example.com/hotel (404) with 4 occurrences migrated to:     https://example.com/hotel ([https](https://example.com/hotel) result 404). * [ ] http://example.com/hotel%20list (404) with 4 occurrences migrated to:     https://example.com/hotel%20list ([https](https://example.com/hotel%20list) result 404). * [ ] http://example.com/hotel%20list/Z (404) with 1 occurrences migrated to:     https://example.com/hotel%20list/Z ([https](https://example.com/hotel%20list/Z) result 404). * [ ] http://example.com/hotel%20list/Z%C3%BCrich (404) with 3 occurrences migrated to:     https://example.com/hotel%20list/Z%C3%BCrich ([https](https://example.com/hotel%20list/Z%C3%BCrich) result 404). * [ ] http://example.com/hotel%2520list (404) with 2 occurrences migrated to:     https://example.com/hotel%2520list ([https](https://example.com/hotel%2520list) result 404). * [ ] http://example.com/hotels (404) with 3 occurrences migrated to:     https://example.com/hotels ([https](https://example.com/hotels) result 404). * [ ] http://example.com/hotels/ (404) with 16 occurrences migrated to:     https://example.com/hotels/ ([https](https://example.com/hotels/) result 404). * [ ] http://example.com/hotels/1/bookings (404) with 1 occurrences migrated to:     https://example.com/hotels/1/bookings ([https](https://example.com/hotels/1/bookings) result 404). * [ ] http://example.com/hotels/1/bookings/42 (404) with 1 occurrences migrated to:     https://example.com/hotels/1/bookings/42 ([https](https://example.com/hotels/1/bookings/42) result 404). * [ ] http://example.com/hotels/1/pic/pics%2Flogo.png/size/150x150 (404) with 2 occurrences migrated to:     https://example.com/hotels/1/pic/pics%2Flogo.png/size/150x150 ([https](https://example.com/hotels/1/pic/pics%2Flogo.png/size/150x150) result 404). * [ ] http://example.com/hotels/1/pic/pics/logo.png (404) with 1 occurrences migrated to:     https://example.com/hotels/1/pic/pics/logo.png ([https](https://example.com/hotels/1/pic/pics/logo.png) result 404). * [ ] http://example.com/hotels/42/bookings/21 (404) with 1 occurrences migrated to:     https://example.com/hotels/42/bookings/21 ([https](https://example.com/hotels/42/bookings/21) result 404). * [ ] http://example.com/hotels/42/bookings/42 (404) with 1 occurrences migrated to:     https://example.com/hotels/42/bookings/42 ([https](https://example.com/hotels/42/bookings/42) result 404). * [ ] http://example.com/hotels/Rest%20%26%20Relax/bookings/42 (404) with 2 occurrences migrated to:     https://example.com/hotels/Rest%20%26%20Relax/bookings/42 ([https](https://example.com/hotels/Rest%20%26%20Relax/bookings/42) result 404). * [ ] http://example.com/info (404) with 2 occurrences migrated to:     https://example.com/info ([https](https://example.com/info) result 404). * [ ] http://example.com/jquery-1.11.0.min.js (404) with 2 occurrences migrated to:     https://example.com/jquery-1.11.0.min.js ([https](https://example.com/jquery-1.11.0.min.js) result 404). * [ ] http://example.com/myFileUpload (404) with 1 occurrences migrated to:     https://example.com/myFileUpload ([https](https://example.com/myFileUpload) result 404). * [ ] http://example.com/myForm (404) with 1 occurrences migrated to:     https://example.com/myForm ([https](https://example.com/myForm) result 404). * [ ] http://example.com/path (404) with 2 occurrences migrated to:     https://example.com/path ([https](https://example.com/path) result 404). * [ ] http://example.com/path?query (404) with 2 occurrences migrated to:     https://example.com/path?query ([https](https://example.com/path?query) result 404). * [ ] http://example.com/path?query=foo (404) with 1 occurrences migrated to:     https://example.com/path?query=foo ([https](https://example.com/path?query=foo) result 404). * [ ] http://example.com/resource (404) with 4 occurrences migrated to:     https://example.com/resource ([https](https://example.com/resource) result 404). * [ ] http://example.com/resource?access_token=123 (404) with 1 occurrences migrated to:     https://example.com/resource?access_token=123 ([https](https://example.com/resource?access_token=123) result 404). * [ ] http://example.com/spaces (404) with 1 occurrences migrated to:     https://example.com/spaces ([https](https://example.com/spaces) result 404). * [ ] http://example.com/spaces%20and%20%E2%82%AC (404) with 3 occurrences migrated to:     https://example.com/spaces%20and%20%E2%82%AC ([https](https://example.com/spaces%20and%20%E2%82%AC) result 404). * [ ] http://example.com/spring/ (404) with 1 occurrences migrated to:     https://example.com/spring/ ([https](https://example.com/spring/) result 404). * [ ] http://example.com/test/this/here (404) with 1 occurrences migrated to:     https://example.com/test/this/here ([https](https://example.com/test/this/here) result 404). * [ ] http://example.com/user (404) with 1 occurrences migrated to:     https://example.com/user ([https](https://example.com/user) result 404). * [ ] http://example.org/fonts/css (404) with 3 occurrences migrated to:     https://example.org/fonts/css ([https](https://example.org/fonts/css) result 404). * [ ] http://example.org/foo/page.html (404) with 1 occurrences migrated to:     https://example.org/foo/page.html ([https](https://example.org/foo/page.html) result 404). * [ ] http://example.org/image.png (404) with 2 occurrences migrated to:     https://example.org/image.png ([https](https://example.org/image.png) result 404). * [ ] http://example.org/music/people (404) with 4 occurrences migrated to:     https://example.org/music/people ([https](https://example.org/music/people) result 404). * [ ] http://example.org/page.cache.html (404) with 1 occurrences migrated to:     https://example.org/page.cache.html ([https](https://example.org/page.cache.html) result 404). * [ ] http://example.org/path (404) with 3 occurrences migrated to:     https://example.org/path ([https](https://example.org/path) result 404). * [ ] http://help.github.com/send-pull-requests (404) with 2 occurrences migrated to:     https://help.github.com/send-pull-requests ([https](https://help.github.com/send-pull-requests) result 404). * [ ] http://host.com/outsideOfficeHours.html (404) with 1 occurrences migrated to:     https://host.com/outsideOfficeHours.html ([https](https://host.com/outsideOfficeHours.html) result 404). * [ ] http://springframework.org/oxm-test (404) with 2 occurrences migrated to:     https://springframework.org/oxm-test ([https](https://springframework.org/oxm-test) result 404). * [ ] http://www.example.com/favicon.ico (404) with 2 occurrences migrated to:     https://www.example.com/favicon.ico ([https](https://www.example.com/favicon.ico) result 404). * [ ] http://www.example.com/foo/bar (404) with 1 occurrences migrated to:     https://www.example.com/foo/bar ([https](https://www.example.com/foo/bar) result 404). * [ ] http://www.example.com/hotels (404) with 2 occurrences migrated to:     https://www.example.com/hotels ([https](https://www.example.com/hotels) result 404). * [ ] http://www.example.com/user/ (404) with 4 occurrences migrated to:     https://www.example.com/user/ ([https](https://www.example.com/user/) result 404). * [ ] http://www.example.com/user/john%3Bdoe/dashboard (404) with 3 occurrences migrated to:     https://www.example.com/user/john%3Bdoe/dashboard ([https](https://www.example.com/user/john%3Bdoe/dashboard) result 404). * [ ] http://www.example.com/user/john;doe/dashboard (404) with 2 occurrences migrated to:     https://www.example.com/user/john;doe/dashboard ([https](https://www.example.com/user/john;doe/dashboard) result 404). * [ ] http://www.example.com/users/ (404) with 1 occurrences migrated to:     https://www.example.com/users/ ([https](https://www.example.com/users/) result 404). * [ ] http://www.example.com/users/fred (404) with 3 occurrences migrated to:     https://www.example.com/users/fred ([https](https://www.example.com/users/fred) result 404). * [ ] http://www.example.com/users/fred.pdf (404) with 1 occurrences migrated to:     https://www.example.com/users/fred.pdf ([https](https://www.example.com/users/fred.pdf) result 404). * [ ] http://www.example.com/users/fred.xml (404) with 1 occurrences migrated to:     https://www.example.com/users/fred.xml ([https](https://www.example.com/users/fred.xml) result 404). * [ ] http://www.ibm.com/developerworks/websphere/library/techarticles/0404_tang/0404_tang.html (301) with 1 occurrences migrated to:     https://www.ibm.com/developerworks/websphere/library/techarticles/0404_tang/0404_tang.html ([https](https://www.ibm.com/developerworks/websphere/library/techarticles/0404_tang/0404_tang.html) result 404). * [ ] http://mydomain1.com:80/path (301) with 2 occurrences migrated to:     https://www.mydomain1.com/path ([https](https://mydomain1.com:80/path) result 404). * [ ] http://www.quartz-scheduler.org/documentation/quartz-2.1.x/tutorials/tutorial-lesson-03 (404) with 1 occurrences migrated to:     https://www.quartz-scheduler.org/documentation/quartz-2.1.x/tutorials/tutorial-lesson-03 ([https](https://www.quartz-scheduler.org/documentation/quartz-2.1.x/tutorials/tutorial-lesson-03) result 404). * [ ] http://www.redbooks.ibm.com/Redbooks.nsf/RedbookAbstracts/tips0243.html (404) with 1 occurrences migrated to:     https://www.redbooks.ibm.com/Redbooks.nsf/RedbookAbstracts/tips0243.html ([https](https://www.redbooks.ibm.com/Redbooks.nsf/RedbookAbstracts/tips0243.html) result 404). * [ ] http://www.utoronto.ca/webdocs/HTMLdocs/Book/Book-3ed/appb/mimetype.html (301) with 1 occurrences migrated to:     https://www.utoronto.ca/webdocs/HTMLdocs/Book/Book-3ed/appb/mimetype.html ([https](https://www.utoronto.ca/webdocs/HTMLdocs/Book/Book-3ed/appb/mimetype.html) result 404). * [ ] http://xml.apache.org/xslt (404) with 3 occurrences migrated to:     https://xml.apache.org/xslt ([https](https://xml.apache.org/xslt) result 404). * [ ] http://myhost.com/resource/path/myTemplate.txt (500) with 1 occurrences migrated to:     https://myhost.com/resource/path/myTemplate.txt ([https](https://myhost.com/resource/path/myTemplate.txt) result 500). * [ ] http://myhost.com/some/arbitrary/path (500) with 1 occurrences migrated to:     https://myhost.com/some/arbitrary/path ([https](https://myhost.com/some/arbitrary/path) result 500).  ## Fixed Success  These URLs were switched to an https URL with a 2xx status. While the status was successful, your review is still recommended.  * [ ] http://activemq.apache.org/delete-inactive-destinations.html with 1 occurrences migrated to:     https://activemq.apache.org/delete-inactive-destinations.html ([https](https://activemq.apache.org/delete-inactive-destinations.html) result 200). * [ ] http://activemq.apache.org/stomp.html with 1 occurrences migrated to:     https://activemq.apache.org/stomp.html ([https](https://activemq.apache.org/stomp.html) result 200). * [ ] http://ant.apache.org with 1 occurrences migrated to:     https://ant.apache.org ([https](https://ant.apache.org) result 200). * [ ] http://asciidoctor.org/ with 1 occurrences migrated to:     https://asciidoctor.org/ ([https](https://asciidoctor.org/) result 200). * [ ] http://asciidoctor.org/docs/asciidoc-syntax-quick-reference/ with 1 occurrences migrated to:     https://asciidoctor.org/docs/asciidoc-syntax-quick-reference/ ([https](https://asciidoctor.org/docs/asciidoc-syntax-quick-reference/) result 200). * [ ] http://asciidoctor.org/docs/asciidoc-writers-guide/ with 1 occurrences migrated to:     https://asciidoctor.org/docs/asciidoc-writers-guide/ ([https](https://asciidoctor.org/docs/asciidoc-writers-guide/) result 200). * [ ] http://asciidoctor.org/docs/editing-asciidoc-with-live-preview/ with 1 occurrences migrated to:     https://asciidoctor.org/docs/editing-asciidoc-with-live-preview/ ([https](https://asciidoctor.org/docs/editing-asciidoc-with-live-preview/) result 200). * [ ] http://asciidoctor.org/docs/user-manual/ with 1 occurrences migrated to:     https://asciidoctor.org/docs/user-manual/ ([https](https://asciidoctor.org/docs/user-manual/) result 200). * [ ] http://beanvalidation.org/ with 1 occurrences migrated to:     https://beanvalidation.org/ ([https](https://beanvalidation.org/) result 200). * [ ] http://caniuse.com/ with 1 occurrences migrated to:     https://caniuse.com/ ([https](https://caniuse.com/) result 200). * [ ] http://caniuse.com/websockets with 1 occurrences migrated to:     https://caniuse.com/websockets ([https](https://caniuse.com/websockets) result 200). * [ ] http://castor-data-binding.github.io/castor/reference-guides/1.3.3/html-single/index.html with 2 occurrences migrated to:     https://castor-data-binding.github.io/castor/reference-guides/1.3.3/html-single/index.html ([https](https://castor-data-binding.github.io/castor/reference-guides/1.3.3/html-single/index.html) result 200). * [ ] http://code.jquery.com/jquery-1.11.0.min.js with 2 occurrences migrated to:     https://code.jquery.com/jquery-1.11.0.min.js ([https](https://code.jquery.com/jquery-1.11.0.min.js) result 200). * [ ] http://code.jquery.com/jquery.js with 1 occurrences migrated to:     https://code.jquery.com/jquery.js ([https](https://code.jquery.com/jquery.js) result 200). * [ ] http://commons.apache.org/proper/commons-lang/ with 2 occurrences migrated to:     https://commons.apache.org/proper/commons-lang/ ([https](https://commons.apache.org/proper/commons-lang/) result 200). * [ ] http://docs.oracle.com/javase/6/docs/api/java/beans/package-summary.html with 1 occurrences migrated to:     https://docs.oracle.com/javase/6/docs/api/java/beans/package-summary.html ([https](https://docs.oracle.com/javase/6/docs/api/java/beans/package-summary.html) result 200). * [ ] http://docs.oracle.com/javase/6/docs/api/java/io/Serializable.html with 1 occurrences migrated to:     https://docs.oracle.com/javase/6/docs/api/java/io/Serializable.html ([https](https://docs.oracle.com/javase/6/docs/api/java/io/Serializable.html) result 200). * [ ] http://docs.oracle.com/javase/6/docs/api/java/lang/instrument/package-summary.html with 2 occurrences migrated to:     https://docs.oracle.com/javase/6/docs/api/java/lang/instrument/package-summary.html ([https](https://docs.oracle.com/javase/6/docs/api/java/lang/instrument/package-summary.html) result 200). * [ ] http://docs.oracle.com/javase/6/docs/api/java/util/concurrent/ThreadPoolExecutor.html with 1 occurrences migrated to:     https://docs.oracle.com/javase/6/docs/api/java/util/concurrent/ThreadPoolExecutor.html ([https](https://docs.oracle.com/javase/6/docs/api/java/util/concurrent/ThreadPoolExecutor.html) result 200). * [ ] http://docs.oracle.com/javase/7/docs/api/java/util/concurrent/ForkJoinPool.html with 1 occurrences migrated to:     https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/ForkJoinPool.html ([https](https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/ForkJoinPool.html) result 200). * [ ] http://docs.oracle.com/javase/7/docs/technotes/guides/scripting/programmer_guide/ with 1 occurrences migrated to:     https://docs.oracle.com/javase/7/docs/technotes/guides/scripting/programmer_guide/ ([https](https://docs.oracle.com/javase/7/docs/technotes/guides/scripting/programmer_guide/) result 200). * [ ] http://docs.oracle.com/javase/8/docs/api/javax/script/ScriptEngineFactory.html with 1 occurrences migrated to:     https://docs.oracle.com/javase/8/docs/api/javax/script/ScriptEngineFactory.html ([https](https://docs.oracle.com/javase/8/docs/api/javax/script/ScriptEngineFactory.html) result 200). * [ ] http://docs.oracle.com/javase/tutorial/javabeans/advanced/customization.html with 1 occurrences migrated to:     https://docs.oracle.com/javase/tutorial/javabeans/advanced/customization.html ([https](https://docs.oracle.com/javase/tutorial/javabeans/advanced/customization.html) result 200). * [ ] http://docs.oracle.com/javase/tutorial/javabeans/writing/properties.html with 1 occurrences migrated to:     https://docs.oracle.com/javase/tutorial/javabeans/writing/properties.html ([https](https://docs.oracle.com/javase/tutorial/javabeans/writing/properties.html) result 200). * [ ] http://docs.seleniumhq.org/ with 1 occurrences migrated to:     https://docs.seleniumhq.org/ ([https](https://docs.seleniumhq.org/) result 200). * [ ] http://docs.seleniumhq.org/projects/webdriver/ with 1 occurrences migrated to:     https://docs.seleniumhq.org/projects/webdriver/ ([https](https://docs.seleniumhq.org/projects/webdriver/) result 200). * [ ] http://docs.spring.io/spring-framework/docs/3.2.4.RELEASE_to_4.0.0.RELEASE/ with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.4.RELEASE_to_4.0.0.RELEASE/ ([https](https://docs.spring.io/spring-framework/docs/3.2.4.RELEASE_to_4.0.0.RELEASE/) result 200). * [ ] http://docs.spring.io/spring-framework/docs/current/javadoc-api/ with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/ ([https](https://docs.spring.io/spring-framework/docs/current/javadoc-api/) result 200). * [ ] http://docs.spring.io/spring-framework/docs/current/spring-framework-reference/ with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/ ([https](https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/) result 200). * [ ] http://docs.spring.io/spring-session/docs/current/reference/html5/ with 1 occurrences migrated to:     https://docs.spring.io/spring-session/docs/current/reference/html5/ ([https](https://docs.spring.io/spring-session/docs/current/reference/html5/) result 200). * [ ] http://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/web/filter/CorsFilter.html with 1 occurrences migrated to:     https://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/web/filter/CorsFilter.html ([https](https://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/web/filter/CorsFilter.html) result 200). * [ ] http://download.oracle.com/otn_hosted_doc/jdeveloper/905/jdbc-javadoc/oracle/jdbc/OracleConnection.html with 1 occurrences migrated to:     https://download.oracle.com/otn_hosted_doc/jdeveloper/905/jdbc-javadoc/oracle/jdbc/OracleConnection.html ([https](https://download.oracle.com/otn_hosted_doc/jdeveloper/905/jdbc-javadoc/oracle/jdbc/OracleConnection.html) result 200). * [ ] http://download.oracle.com/otn_hosted_doc/jdeveloper/905/jdbc-javadoc/oracle/sql/BLOB.html with 7 occurrences migrated to:     https://download.oracle.com/otn_hosted_doc/jdeveloper/905/jdbc-javadoc/oracle/sql/BLOB.html ([https](https://download.oracle.com/otn_hosted_doc/jdeveloper/905/jdbc-javadoc/oracle/sql/BLOB.html) result 200). * [ ] http://download.oracle.com/otn_hosted_doc/jdeveloper/905/jdbc-javadoc/oracle/sql/CLOB.html with 7 occurrences migrated to:     https://download.oracle.com/otn_hosted_doc/jdeveloper/905/jdbc-javadoc/oracle/sql/CLOB.html ([https](https://download.oracle.com/otn_hosted_doc/jdeveloper/905/jdbc-javadoc/oracle/sql/CLOB.html) result 200). * [ ] http://en.wikipedia.org/wiki/Adapter_pattern with 1 occurrences migrated to:     https://en.wikipedia.org/wiki/Adapter_pattern ([https](https://en.wikipedia.org/wiki/Adapter_pattern) result 200). * [ ] http://en.wikipedia.org/wiki/Content_negotiation with 1 occurrences migrated to:     https://en.wikipedia.org/wiki/Content_negotiation ([https](https://en.wikipedia.org/wiki/Content_negotiation) result 200). * [ ] http://en.wikipedia.org/wiki/Cross-origin_resource_sharing with 1 occurrences migrated to:     https://en.wikipedia.org/wiki/Cross-origin_resource_sharing ([https](https://en.wikipedia.org/wiki/Cross-origin_resource_sharing) result 200). * [ ] http://en.wikipedia.org/wiki/HTTP_ETag with 1 occurrences migrated to:     https://en.wikipedia.org/wiki/HTTP_ETag ([https](https://en.wikipedia.org/wiki/HTTP_ETag) result 200). * [ ] http://en.wikipedia.org/wiki/Halting_Problem with 1 occurrences migrated to:     https://en.wikipedia.org/wiki/Halting_Problem ([https](https://en.wikipedia.org/wiki/Halting_Problem) result 200). * [ ] http://en.wikipedia.org/wiki/Internet_media_type with 1 occurrences migrated to:     https://en.wikipedia.org/wiki/Internet_media_type ([https](https://en.wikipedia.org/wiki/Internet_media_type) result 200). * [ ] http://en.wikipedia.org/wiki/JSONP with 3 occurrences migrated to:     https://en.wikipedia.org/wiki/JSONP ([https](https://en.wikipedia.org/wiki/JSONP) result 200). * [ ] http://en.wikipedia.org/wiki/List_of_HTTP_status_codes with 1 occurrences migrated to:     https://en.wikipedia.org/wiki/List_of_HTTP_status_codes ([https](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes) result 200). * [ ] http://en.wikipedia.org/wiki/MIME with 1 occurrences migrated to:     https://en.wikipedia.org/wiki/MIME ([https](https://en.wikipedia.org/wiki/MIME) result 200). * [ ] http://en.wikipedia.org/wiki/Mock_Object with 1 occurrences migrated to:     https://en.wikipedia.org/wiki/Mock_Object ([https](https://en.wikipedia.org/wiki/Mock_Object) result 200). * [ ] http://en.wikipedia.org/wiki/Polyfill with 1 occurrences migrated to:     https://en.wikipedia.org/wiki/Polyfill ([https](https://en.wikipedia.org/wiki/Polyfill) result 200). * [ ] http://example.com with 98 occurrences migrated to:     https://example.com ([https](https://example.com) result 200). * [ ] http://example.com/ with 14 occurrences migrated to:     https://example.com/ ([https](https://example.com/) result 200). * [ ] http://example.com?foo=bar@baz with 1 occurrences migrated to:     https://example.com?foo=bar@baz ([https](https://example.com?foo=bar@baz) result 200). * [ ] http://example.org with 11 occurrences migrated to:     https://example.org ([https](https://example.org) result 200). * [ ] http://fasterxml.github.io/jackson-databind/javadoc/2.6/com/fasterxml/jackson/databind/DeserializationFeature.html with 1 occurrences migrated to:     https://fasterxml.github.io/jackson-databind/javadoc/2.6/com/fasterxml/jackson/databind/DeserializationFeature.html ([https](https://fasterxml.github.io/jackson-databind/javadoc/2.6/com/fasterxml/jackson/databind/DeserializationFeature.html) result 200). * [ ] http://fasterxml.github.io/jackson-databind/javadoc/2.6/com/fasterxml/jackson/databind/MapperFeature.html with 1 occurrences migrated to:     https://fasterxml.github.io/jackson-databind/javadoc/2.6/com/fasterxml/jackson/databind/MapperFeature.html ([https](https://fasterxml.github.io/jackson-databind/javadoc/2.6/com/fasterxml/jackson/databind/MapperFeature.html) result 200). * [ ] http://gradle.org with 1 occurrences migrated to:     https://gradle.org ([https](https://gradle.org) result 200). * [ ] http://h2database.com with 1 occurrences migrated to:     https://h2database.com ([https](https://h2database.com) result 200). * [ ] http://handlebarsjs.com with 1 occurrences migrated to:     https://handlebarsjs.com ([https](https://handlebarsjs.com) result 200). * [ ] http://handlebarsjs.com/ with 1 occurrences migrated to:     https://handlebarsjs.com/ ([https](https://handlebarsjs.com/) result 200). * [ ] http://hc.apache.org/httpcomponents-asyncclient-dev/ with 1 occurrences migrated to:     https://hc.apache.org/httpcomponents-asyncclient-dev/ ([https](https://hc.apache.org/httpcomponents-asyncclient-dev/) result 200). * [ ] http://hc.apache.org/httpcomponents-client-ga/ with 2 occurrences migrated to:     https://hc.apache.org/httpcomponents-client-ga/ ([https](https://hc.apache.org/httpcomponents-client-ga/) result 200). * [ ] http://hc.apache.org/httpcomponents-client-ga/httpclient/ with 1 occurrences migrated to:     https://hc.apache.org/httpcomponents-client-ga/httpclient/ ([https](https://hc.apache.org/httpcomponents-client-ga/httpclient/) result 200). * [ ] http://www.hibernate.org/ (301) with 1 occurrences migrated to:     https://hibernate.org/ ([https](https://www.hibernate.org/) result 200). * [ ] http://www.hibernate.org (301) with 3 occurrences migrated to:     https://hibernate.org/ ([https](https://www.hibernate.org) result 200). * [ ] http://jcp.org/aboutJava/communityprocess/final/jsr003/index3.html with 1 occurrences migrated to:     https://jcp.org/aboutJava/communityprocess/final/jsr003/index3.html ([https](https://jcp.org/aboutJava/communityprocess/final/jsr003/index3.html) result 200). * [ ] http://jcp.org/aboutJava/communityprocess/final/jsr160/index.html with 1 occurrences migrated to:     https://jcp.org/aboutJava/communityprocess/final/jsr160/index.html ([https](https://jcp.org/aboutJava/communityprocess/final/jsr160/index.html) result 200). * [ ] http://jcp.org/en/jsr/detail?id=107 with 1 occurrences migrated to:     https://jcp.org/en/jsr/detail?id=107 ([https](https://jcp.org/en/jsr/detail?id=107) result 200). * [ ] http://jcp.org/en/jsr/detail?id=310 with 1 occurrences migrated to:     https://jcp.org/en/jsr/detail?id=310 ([https](https://jcp.org/en/jsr/detail?id=310) result 200). * [ ] http://jcp.org/en/jsr/detail?id=356 with 2 occurrences migrated to:     https://jcp.org/en/jsr/detail?id=356 ([https](https://jcp.org/en/jsr/detail?id=356) result 200). * [ ] http://jira.pentaho.com/browse/PDI-5031 with 1 occurrences migrated to:     https://jira.pentaho.com/browse/PDI-5031 ([https](https://jira.pentaho.com/browse/PDI-5031) result 200). * [ ] http://joel-costigliola.github.io/assertj/ with 2 occurrences migrated to:     https://joel-costigliola.github.io/assertj/ ([https](https://joel-costigliola.github.io/assertj/) result 200). * [ ] http://jsonassert.skyscreamer.org/ with 2 occurrences migrated to:     https://jsonassert.skyscreamer.org/ ([https](https://jsonassert.skyscreamer.org/) result 200). * [ ] http://logback.qos.ch with 1 occurrences migrated to:     https://logback.qos.ch ([https](https://logback.qos.ch) result 200). * [ ] http://logging.apache.org/log4j/2.x/manual/configuration.html with 1 occurrences migrated to:     https://logging.apache.org/log4j/2.x/manual/configuration.html ([https](https://logging.apache.org/log4j/2.x/manual/configuration.html) result 200). * [ ] http://martinfowler.com/articles/injection.html with 1 occurrences migrated to:     https://martinfowler.com/articles/injection.html ([https](https://martinfowler.com/articles/injection.html) result 200). * [ ] http://maven.apache.org/ with 1 occurrences migrated to:     https://maven.apache.org/ ([https](https://maven.apache.org/) result 200). * [ ] http://mydomain.com with 5 occurrences migrated to:     https://mydomain.com ([https](https://mydomain.com) result 200). * [ ] http://myfaces.apache.org/ with 1 occurrences migrated to:     https://myfaces.apache.org/ ([https](https://myfaces.apache.org/) result 200). * [ ] http://myfaces.apache.org/orchestra/ with 1 occurrences migrated to:     https://myfaces.apache.org/orchestra/ ([https](https://myfaces.apache.org/orchestra/) result 200). * [ ] http://netty.io/ with 1 occurrences migrated to:     https://netty.io/ ([https](https://netty.io/) result 200). * [ ] http://openjdk.java.net/jeps/290 with 1 occurrences migrated to:     https://openjdk.java.net/jeps/290 ([https](https://openjdk.java.net/jeps/290) result 200). * [ ] http://openjdk.java.net/projects/nashorn/ with 5 occurrences migrated to:     https://openjdk.java.net/projects/nashorn/ ([https](https://openjdk.java.net/projects/nashorn/) result 200). * [ ] http://pivotal.io/security/cve-2015-5211 with 1 occurrences migrated to:     https://pivotal.io/security/cve-2015-5211 ([https](https://pivotal.io/security/cve-2015-5211) result 200). * [ ] http://poi.apache.org with 4 occurrences migrated to:     https://poi.apache.org ([https](https://poi.apache.org) result 200). * [ ] http://projects.spring.io/spring-boot/ with 1 occurrences migrated to:     https://projects.spring.io/spring-boot/ ([https](https://projects.spring.io/spring-boot/) result 200). * [ ] http://projects.spring.io/spring-data/ with 1 occurrences migrated to:     https://projects.spring.io/spring-data/ ([https](https://projects.spring.io/spring-data/) result 200). * [ ] http://projects.spring.io/spring-framework/ with 1 occurrences migrated to:     https://projects.spring.io/spring-framework/ ([https](https://projects.spring.io/spring-framework/) result 200). * [ ] http://projects.spring.io/spring-integration/ with 3 occurrences migrated to:     https://projects.spring.io/spring-integration/ ([https](https://projects.spring.io/spring-integration/) result 200). * [ ] http://projects.spring.io/spring-security/ with 3 occurrences migrated to:     https://projects.spring.io/spring-security/ ([https](https://projects.spring.io/spring-security/) result 200). * [ ] http://projects.spring.io/spring-webflow/ with 2 occurrences migrated to:     https://projects.spring.io/spring-webflow/ ([https](https://projects.spring.io/spring-webflow/) result 200). * [ ] http://repo.spring.io/milestone/ with 1 occurrences migrated to:     https://repo.spring.io/milestone/ ([https](https://repo.spring.io/milestone/) result 200). * [ ] http://repo.spring.io/release/ with 2 occurrences migrated to:     https://repo.spring.io/release/ ([https](https://repo.spring.io/release/) result 200). * [ ] http://repo.spring.io/snapshot/ with 1 occurrences migrated to:     https://repo.spring.io/snapshot/ ([https](https://repo.spring.io/snapshot/) result 200). * [ ] http://repo1.maven.org/maven2/javax/inject/javax.inject/1/ with 2 occurrences migrated to:     https://repo1.maven.org/maven2/javax/inject/javax.inject/1/ ([https](https://repo1.maven.org/maven2/javax/inject/javax.inject/1/) result 200). * [ ] http://schema.spring.io/mvc/spring-mvc.xsd with 1 occurrences migrated to:     https://schema.spring.io/mvc/spring-mvc.xsd ([https](https://schema.spring.io/mvc/spring-mvc.xsd) result 200). * [ ] http://search.maven.org/ with 2 occurrences migrated to:     https://search.maven.org/ ([https](https://search.maven.org/) result 200). * [ ] http://sockjs.github.io/sockjs-protocol/sockjs-protocol-0.3.3.html with 3 occurrences migrated to:     https://sockjs.github.io/sockjs-protocol/sockjs-protocol-0.3.3.html ([https](https://sockjs.github.io/sockjs-protocol/sockjs-protocol-0.3.3.html) result 200). * [ ] http://sourceforge.net with 1 occurrences migrated to:     https://sourceforge.net ([https](https://sourceforge.net) result 200). * [ ] http://sourceforge.net/projects/javadiff/ with 1 occurrences migrated to:     https://sourceforge.net/projects/javadiff/ ([https](https://sourceforge.net/projects/javadiff/) result 200). * [ ] http://sourceforge.net/sflogo.php?group_id=37160 with 1 occurrences migrated to:     https://sourceforge.net/sflogo.php?group_id=37160 ([https](https://sourceforge.net/sflogo.php?group_id=37160) result 200). * [ ] http://spring.io/blog/ with 1 occurrences migrated to:     https://spring.io/blog/ ([https](https://spring.io/blog/) result 200). * [ ] http://spring.io/blog/2012/05/08/spring-mvc-3-2-preview-techniques-for-real-time-updates/ with 1 occurrences migrated to:     https://spring.io/blog/2012/05/08/spring-mvc-3-2-preview-techniques-for-real-time-updates/ ([https](https://spring.io/blog/2012/05/08/spring-mvc-3-2-preview-techniques-for-real-time-updates/) result 200). * [ ] http://spring.io/blog/category/news with 1 occurrences migrated to:     https://spring.io/blog/category/news ([https](https://spring.io/blog/category/news) result 200). * [ ] http://spring.io/projects with 1 occurrences migrated to:     https://spring.io/projects ([https](https://spring.io/projects) result 200). * [ ] http://spring.io/questions with 1 occurrences migrated to:     https://spring.io/questions ([https](https://spring.io/questions) result 200). * [ ] http://spring.io/services with 1 occurrences migrated to:     https://spring.io/services ([https](https://spring.io/services) result 200). * [ ] http://square.github.io/okhttp/ with 3 occurrences migrated to:     https://square.github.io/okhttp/ ([https](https://square.github.io/okhttp/) result 200). * [ ] http://stackoverflow.com/faq with 1 occurrences migrated to:     https://stackoverflow.com/faq ([https](https://stackoverflow.com/faq) result 200). * [ ] http://stackoverflow.com/questions/1481251/what-does-document-domain-document-domain-do with 2 occurrences migrated to:     https://stackoverflow.com/questions/1481251/what-does-document-domain-document-domain-do ([https](https://stackoverflow.com/questions/1481251/what-does-document-domain-document-domain-do) result 200). * [ ] http://stackoverflow.com/questions/19394570/java-jre-7u45-breaks-classloader-getresources with 2 occurrences migrated to:     https://stackoverflow.com/questions/19394570/java-jre-7u45-breaks-classloader-getresources ([https](https://stackoverflow.com/questions/19394570/java-jre-7u45-breaks-classloader-getresources) result 200). * [ ] http://stackoverflow.com/questions/22986109/testing-spring-managed-servlet with 1 occurrences migrated to:     https://stackoverflow.com/questions/22986109/testing-spring-managed-servlet ([https](https://stackoverflow.com/questions/22986109/testing-spring-managed-servlet) result 200). * [ ] http://stackoverflow.com/questions/24725438/what-could-cause-a-class-implementing-applicationlistenercontextrefreshedevent with 1 occurrences migrated to:     https://stackoverflow.com/questions/24725438/what-could-cause-a-class-implementing-applicationlistenercontextrefreshedevent ([https](https://stackoverflow.com/questions/24725438/what-could-cause-a-class-implementing-applicationlistenercontextrefreshedevent) result 200). * [ ] http://stackoverflow.com/questions/35733344/can-contextconfiguration-in-a-custom-annotation-be-merged with 1 occurrences migrated to:     https://stackoverflow.com/questions/35733344/can-contextconfiguration-in-a-custom-annotation-be-merged ([https](https://stackoverflow.com/questions/35733344/can-contextconfiguration-in-a-custom-annotation-be-merged) result 200). * [ ] http://start.spring.io with 1 occurrences migrated to:     https://start.spring.io ([https](https://start.spring.io) result 200). * [ ] http://stas-blogspot.blogspot.com/2010/03/java-bridge-methods-explained.html with 1 occurrences migrated to:     https://stas-blogspot.blogspot.com/2010/03/java-bridge-methods-explained.html ([https](https://stas-blogspot.blogspot.com/2010/03/java-bridge-methods-explained.html) result 200). * [ ] http://stomp.github.io/stomp-specification-1.2.html with 10 occurrences migrated to:     https://stomp.github.io/stomp-specification-1.2.html ([https](https://stomp.github.io/stomp-specification-1.2.html) result 200). * [ ] http://struts.apache.org with 1 occurrences migrated to:     https://struts.apache.org ([https](https://struts.apache.org) result 200). * [ ] http://struts.apache.org/ with 1 occurrences migrated to:     https://struts.apache.org/ ([https](https://struts.apache.org/) result 200). * [ ] http://tapestry.apache.org/ with 2 occurrences migrated to:     https://tapestry.apache.org/ ([https](https://tapestry.apache.org/) result 200). * [ ] http://tiles.apache.org with 7 occurrences migrated to:     https://tiles.apache.org ([https](https://tiles.apache.org) result 200). * [ ] http://tiles.apache.org/framework/dependency-management.html with 1 occurrences migrated to:     https://tiles.apache.org/framework/dependency-management.html ([https](https://tiles.apache.org/framework/dependency-management.html) result 200). * [ ] http://tomcat.apache.org/ with 2 occurrences migrated to:     https://tomcat.apache.org/ ([https](https://tomcat.apache.org/) result 200). * [ ] http://tomcat.apache.org/tomcat-6.0-doc/config/context.html with 2 occurrences migrated to:     https://tomcat.apache.org/tomcat-6.0-doc/config/context.html ([https](https://tomcat.apache.org/tomcat-6.0-doc/config/context.html) result 200). * [ ] http://tomcat.apache.org/tomcat-6.0-doc/config/loader.html with 1 occurrences migrated to:     https://tomcat.apache.org/tomcat-6.0-doc/config/loader.html ([https](https://tomcat.apache.org/tomcat-6.0-doc/config/loader.html) result 200). * [ ] http://tools.ietf.org/html/rfc1945 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc1945 ([https](https://tools.ietf.org/html/rfc1945) result 200). * [ ] http://tools.ietf.org/html/rfc2109 with 2 occurrences migrated to:     https://tools.ietf.org/html/rfc2109 ([https](https://tools.ietf.org/html/rfc2109) result 200). * [ ] http://tools.ietf.org/html/rfc2295 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc2295 ([https](https://tools.ietf.org/html/rfc2295) result 200). * [ ] http://tools.ietf.org/html/rfc2324 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc2324 ([https](https://tools.ietf.org/html/rfc2324) result 200). * [ ] http://tools.ietf.org/html/rfc2518 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc2518 ([https](https://tools.ietf.org/html/rfc2518) result 200). * [ ] http://tools.ietf.org/html/rfc2616 with 3 occurrences migrated to:     https://tools.ietf.org/html/rfc2616 ([https](https://tools.ietf.org/html/rfc2616) result 200). * [ ] http://tools.ietf.org/html/rfc2774 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc2774 ([https](https://tools.ietf.org/html/rfc2774) result 200). * [ ] http://tools.ietf.org/html/rfc2817 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc2817 ([https](https://tools.ietf.org/html/rfc2817) result 200). * [ ] http://tools.ietf.org/html/rfc2965 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc2965 ([https](https://tools.ietf.org/html/rfc2965) result 200). * [ ] http://tools.ietf.org/html/rfc3229 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc3229 ([https](https://tools.ietf.org/html/rfc3229) result 200). * [ ] http://tools.ietf.org/html/rfc3986 with 3 occurrences migrated to:     https://tools.ietf.org/html/rfc3986 ([https](https://tools.ietf.org/html/rfc3986) result 200). * [ ] http://tools.ietf.org/html/rfc4918 with 5 occurrences migrated to:     https://tools.ietf.org/html/rfc4918 ([https](https://tools.ietf.org/html/rfc4918) result 200). * [ ] http://tools.ietf.org/html/rfc5842 with 2 occurrences migrated to:     https://tools.ietf.org/html/rfc5842 ([https](https://tools.ietf.org/html/rfc5842) result 200). * [ ] http://tools.ietf.org/html/rfc5988 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc5988 ([https](https://tools.ietf.org/html/rfc5988) result 200). * [ ] http://tools.ietf.org/html/rfc6202 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc6202 ([https](https://tools.ietf.org/html/rfc6202) result 200). * [ ] http://tools.ietf.org/html/rfc6266 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc6266 ([https](https://tools.ietf.org/html/rfc6266) result 200). * [ ] http://tools.ietf.org/html/rfc6454 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc6454 ([https](https://tools.ietf.org/html/rfc6454) result 200). * [ ] http://tools.ietf.org/html/rfc6455 with 3 occurrences migrated to:     https://tools.ietf.org/html/rfc6455 ([https](https://tools.ietf.org/html/rfc6455) result 200). * [ ] http://tools.ietf.org/html/rfc6585 with 4 occurrences migrated to:     https://tools.ietf.org/html/rfc6585 ([https](https://tools.ietf.org/html/rfc6585) result 200). * [ ] http://tools.ietf.org/html/rfc7230 with 10 occurrences migrated to:     https://tools.ietf.org/html/rfc7230 ([https](https://tools.ietf.org/html/rfc7230) result 200). * [ ] http://tools.ietf.org/html/rfc7231 with 58 occurrences migrated to:     https://tools.ietf.org/html/rfc7231 ([https](https://tools.ietf.org/html/rfc7231) result 200). * [ ] http://tools.ietf.org/html/rfc7232 with 8 occurrences migrated to:     https://tools.ietf.org/html/rfc7232 ([https](https://tools.ietf.org/html/rfc7232) result 200). * [ ] http://tools.ietf.org/html/rfc7233 with 12 occurrences migrated to:     https://tools.ietf.org/html/rfc7233 ([https](https://tools.ietf.org/html/rfc7233) result 200). * [ ] http://tools.ietf.org/html/rfc7234 with 5 occurrences migrated to:     https://tools.ietf.org/html/rfc7234 ([https](https://tools.ietf.org/html/rfc7234) result 200). * [ ] http://tools.ietf.org/html/rfc7235 with 6 occurrences migrated to:     https://tools.ietf.org/html/rfc7235 ([https](https://tools.ietf.org/html/rfc7235) result 200). * [ ] http://tools.ietf.org/html/rfc7238 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc7238 ([https](https://tools.ietf.org/html/rfc7238) result 200). * [ ] http://tools.ietf.org/html/rfc7239 with 9 occurrences migrated to:     https://tools.ietf.org/html/rfc7239 ([https](https://tools.ietf.org/html/rfc7239) result 200). * [ ] http://tools.ietf.org/rfcdiff?difftype=--hwdiff&url2=draft-ietf-webdav-protocol-06.txt with 3 occurrences migrated to:     https://tools.ietf.org/rfcdiff?difftype=--hwdiff&url2=draft-ietf-webdav-protocol-06.txt ([https](https://tools.ietf.org/rfcdiff?difftype=--hwdiff&url2=draft-ietf-webdav-protocol-06.txt) result 200). * [ ] http://velocity.apache.org with 4 occurrences migrated to:     https://velocity.apache.org ([https](https://velocity.apache.org) result 200). * [ ] http://vimeo.com/34436402 with 1 occurrences migrated to:     https://vimeo.com/34436402 ([https](https://vimeo.com/34436402) result 200). * [ ] http://www.amazon.com/exec/obidos/tg/detail/-/0764543857/ with 10 occurrences migrated to:     https://www.amazon.com/exec/obidos/tg/detail/-/0764543857/ ([https](https://www.amazon.com/exec/obidos/tg/detail/-/0764543857/) result 200). * [ ] http://www.apache.org with 1 occurrences migrated to:     https://www.apache.org ([https](https://www.apache.org) result 200). * [ ] http://www.apple.com/DTDs/PropertyList-1.0.dtd with 6 occurrences migrated to:     https://www.apple.com/DTDs/PropertyList-1.0.dtd ([https](https://www.apple.com/DTDs/PropertyList-1.0.dtd) result 200). * [ ] http://www.atomikos.com/ with 1 occurrences migrated to:     https://www.atomikos.com/ ([https](https://www.atomikos.com/) result 200). * [ ] http://www.eclipse.org/ajdt/ with 1 occurrences migrated to:     https://www.eclipse.org/ajdt/ ([https](https://www.eclipse.org/ajdt/) result 200). * [ ] http://www.eclipse.org/aspectj/doc/next/progguide/index.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/next/progguide/index.html ([https](https://www.eclipse.org/aspectj/doc/next/progguide/index.html) result 200). * [ ] http://www.eclipse.org/aspectj/doc/next/progguide/semantics-joinPoints.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/next/progguide/semantics-joinPoints.html ([https](https://www.eclipse.org/aspectj/doc/next/progguide/semantics-joinPoints.html) result 200). * [ ] http://www.eclipse.org/aspectj/doc/released/adk15notebook/index.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/released/adk15notebook/index.html ([https](https://www.eclipse.org/aspectj/doc/released/adk15notebook/index.html) result 200). * [ ] http://www.eclipse.org/aspectj/doc/released/devguide/antTasks.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/released/devguide/antTasks.html ([https](https://www.eclipse.org/aspectj/doc/released/devguide/antTasks.html) result 200). * [ ] http://www.eclipse.org/aspectj/doc/released/devguide/index.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/released/devguide/index.html ([https](https://www.eclipse.org/aspectj/doc/released/devguide/index.html) result 200). * [ ] http://www.eclipse.org/aspectj/doc/released/devguide/ltw-configuration.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/released/devguide/ltw-configuration.html ([https](https://www.eclipse.org/aspectj/doc/released/devguide/ltw-configuration.html) result 200). * [ ] http://www.eclipse.org/aspectj/doc/released/devguide/ltw.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/released/devguide/ltw.html ([https](https://www.eclipse.org/aspectj/doc/released/devguide/ltw.html) result 200). * [ ] http://www.eclipse.org/aspectj/doc/released/progguide/index.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/released/progguide/index.html ([https](https://www.eclipse.org/aspectj/doc/released/progguide/index.html) result 200). * [ ] http://www.eclipse.org/aspectj/doc/released/progguide/semantics-pointcuts.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/released/progguide/semantics-pointcuts.html ([https](https://www.eclipse.org/aspectj/doc/released/progguide/semantics-pointcuts.html) result 200). * [ ] http://www.eclipse.org/aspectj/dtd/aspectj.dtd with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/dtd/aspectj.dtd ([https](https://www.eclipse.org/aspectj/dtd/aspectj.dtd) result 200). * [ ] http://www.eclipse.org/jetty/ with 1 occurrences migrated to:     https://www.eclipse.org/jetty/ ([https](https://www.eclipse.org/jetty/) result 200). * [ ] http://ehcache.sourceforge.net (301) with 1 occurrences migrated to:     https://www.ehcache.org/ ([https](https://ehcache.sourceforge.net) result 200). * [ ] http://ehcache.org/ (301) with 1 occurrences migrated to:     https://www.ehcache.org/ ([https](https://ehcache.org/) result 200). * [ ] http://www.embeddedjs.com/ with 1 occurrences migrated to:     https://www.embeddedjs.com/ ([https](https://www.embeddedjs.com/) result 200). * [ ] http://www.enterpriseintegrationpatterns.com with 1 occurrences migrated to:     https://www.enterpriseintegrationpatterns.com ([https](https://www.enterpriseintegrationpatterns.com) result 200). * [ ] http://www.example.org/?param=aGVsbG9Xb3JsZA%3D%3D with 1 occurrences migrated to:     https://www.example.org/?param=aGVsbG9Xb3JsZA%3D%3D ([https](https://www.example.org/?param=aGVsbG9Xb3JsZA%3D%3D) result 200). * [ ] http://www.google.com with 2 occurrences migrated to:     https://www.google.com ([https](https://www.google.com) result 200). * [ ] http://www.h2database.com with 1 occurrences migrated to:     https://www.h2database.com ([https](https://www.h2database.com) result 200). * [ ] http://www.ietf.org with 1 occurrences migrated to:     https://www.ietf.org ([https](https://www.ietf.org) result 200). * [ ] http://www.ietf.org/rfc/rfc1867.txt with 2 occurrences migrated to:     https://www.ietf.org/rfc/rfc1867.txt ([https](https://www.ietf.org/rfc/rfc1867.txt) result 200). * [ ] http://www.ietf.org/rfc/rfc2396.txt with 2 occurrences migrated to:     https://www.ietf.org/rfc/rfc2396.txt ([https](https://www.ietf.org/rfc/rfc2396.txt) result 200). * [ ] http://www.ietf.org/rfc/rfc3986.txt with 11 occurrences migrated to:     https://www.ietf.org/rfc/rfc3986.txt ([https](https://www.ietf.org/rfc/rfc3986.txt) result 200). * [ ] http://www.infoq.com/ with 1 occurrences migrated to:     https://www.infoq.com/ ([https](https://www.infoq.com/) result 200). * [ ] http://www.infoq.com/articles/Web-Sockets-Proxy-Servers with 1 occurrences migrated to:     https://www.infoq.com/articles/Web-Sockets-Proxy-Servers ([https](https://www.infoq.com/articles/Web-Sockets-Proxy-Servers) result 200). * [ ] http://www.infoq.com/minibooks/JTDS with 1 occurrences migrated to:     https://www.infoq.com/minibooks/JTDS ([https](https://www.infoq.com/minibooks/JTDS) result 200). * [ ] http://www.jetbrains.com/idea/ with 1 occurrences migrated to:     https://www.jetbrains.com/idea/ ([https](https://www.jetbrains.com/idea/) result 200). * [ ] http://jruby.sourceforge.net (302) with 1 occurrences migrated to:     https://www.jruby.org/ ([https](https://jruby.sourceforge.net) result 200). * [ ] http://www.json.org/ with 1 occurrences migrated to:     https://www.json.org/ ([https](https://www.json.org/) result 200). * [ ] http://www.jython.org with 1 occurrences migrated to:     https://www.jython.org ([https](https://www.jython.org) result 200). * [ ] http://www.jython.org/ with 1 occurrences migrated to:     https://www.jython.org/ ([https](https://www.jython.org/) result 200). * [ ] http://www.lowagie.com/iText with 2 occurrences migrated to:     https://www.lowagie.com/iText ([https](https://www.lowagie.com/iText) result 200). * [ ] http://www.manpagez.com/man/5/crontab/ with 1 occurrences migrated to:     https://www.manpagez.com/man/5/crontab/ ([https](https://www.manpagez.com/man/5/crontab/) result 200). * [ ] http://mydomain1.com:80/ (301) with 2 occurrences migrated to:     https://www.mydomain1.com/ ([https](https://mydomain1.com:80/) result 200). * [ ] http://mydomain1.com:80 (301) with 1 occurrences migrated to:     https://www.mydomain1.com/ ([https](https://mydomain1.com:80) result 200). * [ ] http://www.oracle.com/technetwork/articles/javaee/jpa-137156.html with 1 occurrences migrated to:     https://www.oracle.com/technetwork/articles/javaee/jpa-137156.html ([https](https://www.oracle.com/technetwork/articles/javaee/jpa-137156.html) result 200). * [ ] http://www.oracle.com/technetwork/java/javaee/javaserverfaces-139869.html with 2 occurrences migrated to:     https://www.oracle.com/technetwork/java/javaee/javaserverfaces-139869.html ([https](https://www.oracle.com/technetwork/java/javaee/javaserverfaces-139869.html) result 200). * [ ] http://www.oracle.com/technetwork/java/javase/documentation/spec-136004.html with 1 occurrences migrated to:     https://www.oracle.com/technetwork/java/javase/documentation/spec-136004.html ([https](https://www.oracle.com/technetwork/java/javase/documentation/spec-136004.html) result 200). * [ ] http://www.oracle.com/technetwork/java/javase/tech/download-jsp-141676.html with 1 occurrences migrated to:     https://www.oracle.com/technetwork/java/javase/tech/download-jsp-141676.html ([https](https://www.oracle.com/technetwork/java/javase/tech/download-jsp-141676.html) result 200). * [ ] http://www.oracle.com/technetwork/java/javase/tech/javamanagement-140525.html with 1 occurrences migrated to:     https://www.oracle.com/technetwork/java/javase/tech/javamanagement-140525.html ([https](https://www.oracle.com/technetwork/java/javase/tech/javamanagement-140525.html) result 200). * [ ] http://www.oracle.com/technetwork/middleware/weblogic/overview/index-085209.html with 1 occurrences migrated to:     https://www.oracle.com/technetwork/middleware/weblogic/overview/index-085209.html ([https](https://www.oracle.com/technetwork/middleware/weblogic/overview/index-085209.html) result 200). * [ ] http://www.ow2.org/ with 1 occurrences migrated to:     https://www.ow2.org/ ([https](https://www.ow2.org/) result 200). * [ ] http://quartz-scheduler.org (301) with 3 occurrences migrated to:     https://www.quartz-scheduler.org/ ([https](https://quartz-scheduler.org) result 200). * [ ] http://www.rabbitmq.com/stomp.html with 1 occurrences migrated to:     https://www.rabbitmq.com/stomp.html ([https](https://www.rabbitmq.com/stomp.html) result 200). * [ ] http://seleniumhq.org/projects/webdriver/ (301) with 1 occurrences migrated to:     https://www.seleniumhq.org ([https](https://seleniumhq.org/projects/webdriver/) result 200). * [ ] http://www.slf4j.org with 1 occurrences migrated to:     https://www.slf4j.org ([https](https://www.slf4j.org) result 200). * [ ] http://www.springbyexample.org/examples/custom-thread-scope-module.html with 1 occurrences migrated to:     https://www.springbyexample.org/examples/custom-thread-scope-module.html ([https](https://www.springbyexample.org/examples/custom-thread-scope-module.html) result 200). * [ ] http://www.springframework.org/dtd/spring-beans-2.0.dtd with 10 occurrences migrated to:     https://www.springframework.org/dtd/spring-beans-2.0.dtd ([https](https://www.springframework.org/dtd/spring-beans-2.0.dtd) result 200). * [ ] http://www.springframework.org/schema/aop/spring-aop.xsd with 13 occurrences migrated to:     https://www.springframework.org/schema/aop/spring-aop.xsd ([https](https://www.springframework.org/schema/aop/spring-aop.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-2.0.xsd with 5 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-2.0.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-2.0.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-2.5.xsd with 6 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-2.5.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-3.0.xsd with 10 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-3.0.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-3.1.xsd with 11 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-3.1.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-3.2.xsd with 11 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-3.2.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-3.2.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-4.0.xsd with 11 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-4.0.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-4.0.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-4.1.xsd with 12 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-4.1.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-4.1.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-4.2.xsd with 12 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-4.2.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-4.2.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-4.3.xsd with 12 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-4.3.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-4.3.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans.xsd with 75 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans.xsd ([https](https://www.springframework.org/schema/beans/spring-beans.xsd) result 200). * [ ] http://www.springframework.org/schema/cache/spring-cache.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/cache/spring-cache.xsd ([https](https://www.springframework.org/schema/cache/spring-cache.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context.xsd with 14 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context.xsd ([https](https://www.springframework.org/schema/context/spring-context.xsd) result 200). * [ ] http://www.springframework.org/schema/jdbc/spring-jdbc.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-jdbc.xsd ([https](https://www.springframework.org/schema/jdbc/spring-jdbc.xsd) result 200). * [ ] http://www.springframework.org/schema/jee/spring-jee.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/jee/spring-jee.xsd ([https](https://www.springframework.org/schema/jee/spring-jee.xsd) result 200). * [ ] http://www.springframework.org/schema/jms/spring-jms.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/jms/spring-jms.xsd ([https](https://www.springframework.org/schema/jms/spring-jms.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang.xsd with 4 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang.xsd ([https](https://www.springframework.org/schema/lang/spring-lang.xsd) result 200). * [ ] http://www.springframework.org/schema/mvc/spring-mvc.xsd with 4 occurrences migrated to:     https://www.springframework.org/schema/mvc/spring-mvc.xsd ([https](https://www.springframework.org/schema/mvc/spring-mvc.xsd) result 200). * [ ] http://www.springframework.org/schema/oxm/spring-oxm.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/oxm/spring-oxm.xsd ([https](https://www.springframework.org/schema/oxm/spring-oxm.xsd) result 200). * [ ] http://www.springframework.org/schema/tool/spring-tool-2.0.xsd with 5 occurrences migrated to:     https://www.springframework.org/schema/tool/spring-tool-2.0.xsd ([https](https://www.springframework.org/schema/tool/spring-tool-2.0.xsd) result 200). * [ ] http://www.springframework.org/schema/tool/spring-tool-2.5.xsd with 7 occurrences migrated to:     https://www.springframework.org/schema/tool/spring-tool-2.5.xsd ([https](https://www.springframework.org/schema/tool/spring-tool-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/tool/spring-tool-3.0.xsd with 11 occurrences migrated to:     https://www.springframework.org/schema/tool/spring-tool-3.0.xsd ([https](https://www.springframework.org/schema/tool/spring-tool-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/tool/spring-tool-3.1.xsd with 12 occurrences migrated to:     https://www.springframework.org/schema/tool/spring-tool-3.1.xsd ([https](https://www.springframework.org/schema/tool/spring-tool-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/tool/spring-tool-3.2.xsd with 12 occurrences migrated to:     https://www.springframework.org/schema/tool/spring-tool-3.2.xsd ([https](https://www.springframework.org/schema/tool/spring-tool-3.2.xsd) result 200). * [ ] http://www.springframework.org/schema/tool/spring-tool-4.0.xsd with 12 occurrences migrated to:     https://www.springframework.org/schema/tool/spring-tool-4.0.xsd ([https](https://www.springframework.org/schema/tool/spring-tool-4.0.xsd) result 200). * [ ] http://www.springframework.org/schema/tool/spring-tool-4.1.xsd with 13 occurrences migrated to:     https://www.springframework.org/schema/tool/spring-tool-4.1.xsd ([https](https://www.springframework.org/schema/tool/spring-tool-4.1.xsd) result 200). * [ ] http://www.springframework.org/schema/tool/spring-tool-4.2.xsd with 13 occurrences migrated to:     https://www.springframework.org/schema/tool/spring-tool-4.2.xsd ([https](https://www.springframework.org/schema/tool/spring-tool-4.2.xsd) result 200). * [ ] http://www.springframework.org/schema/tool/spring-tool-4.3.xsd with 13 occurrences migrated to:     https://www.springframework.org/schema/tool/spring-tool-4.3.xsd ([https](https://www.springframework.org/schema/tool/spring-tool-4.3.xsd) result 200). * [ ] http://www.springframework.org/schema/tx/spring-tx.xsd with 8 occurrences migrated to:     https://www.springframework.org/schema/tx/spring-tx.xsd ([https](https://www.springframework.org/schema/tx/spring-tx.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util.xsd ([https](https://www.springframework.org/schema/util/spring-util.xsd) result 200). * [ ] http://www.springframework.org/schema/websocket/spring-websocket.xsd with 11 occurrences migrated to:     https://www.springframework.org/schema/websocket/spring-websocket.xsd ([https](https://www.springframework.org/schema/websocket/spring-websocket.xsd) result 200). * [ ] http://www.stuartellis.eu/articles/erb/ (301) with 1 occurrences migrated to:     https://www.stuartellis.name/articles/erb/ ([https](https://www.stuartellis.eu/articles/erb/) result 200). * [ ] http://www.thymeleaf.org/ with 1 occurrences migrated to:     https://www.thymeleaf.org/ ([https](https://www.thymeleaf.org/) result 200). * [ ] http://www.thymeleaf.org/documentation.html with 1 occurrences migrated to:     https://www.thymeleaf.org/documentation.html ([https](https://www.thymeleaf.org/documentation.html) result 200). * [ ] http://www.w3.org/2000/xmlns/ with 5 occurrences migrated to:     https://www.w3.org/2000/xmlns/ ([https](https://www.w3.org/2000/xmlns/) result 200). * [ ] http://www.w3.org/2004/08/xop/include with 2 occurrences migrated to:     https://www.w3.org/2004/08/xop/include ([https](https://www.w3.org/2004/08/xop/include) result 200). * [ ] http://www.w3.org/DesignIssues/MatrixURIs.html with 1 occurrences migrated to:     https://www.w3.org/DesignIssues/MatrixURIs.html ([https](https://www.w3.org/DesignIssues/MatrixURIs.html) result 200). * [ ] http://www.w3.org/TR/2004/REC-xmlschema-1-20041028/ with 1 occurrences migrated to:     https://www.w3.org/TR/2004/REC-xmlschema-1-20041028/ ([https](https://www.w3.org/TR/2004/REC-xmlschema-1-20041028/) result 200). * [ ] http://www.w3.org/TR/2004/REC-xmlschema-2-20041028/ with 1 occurrences migrated to:     https://www.w3.org/TR/2004/REC-xmlschema-2-20041028/ ([https](https://www.w3.org/TR/2004/REC-xmlschema-2-20041028/) result 200). * [ ] http://www.w3.org/TR/2004/WD-soap12-mtom-20040608/ with 2 occurrences migrated to:     https://www.w3.org/TR/2004/WD-soap12-mtom-20040608/ ([https](https://www.w3.org/TR/2004/WD-soap12-mtom-20040608/) result 200). * [ ] http://www.w3.org/TR/2005/REC-xop10-20050125/ with 6 occurrences migrated to:     https://www.w3.org/TR/2005/REC-xop10-20050125/ ([https](https://www.w3.org/TR/2005/REC-xop10-20050125/) result 200). * [ ] http://www.w3.org/TR/cors/ with 14 occurrences migrated to:     https://www.w3.org/TR/cors/ ([https](https://www.w3.org/TR/cors/) result 200). * [ ] http://www.w3.org/TR/eventsource/ with 2 occurrences migrated to:     https://www.w3.org/TR/eventsource/ ([https](https://www.w3.org/TR/eventsource/) result 200). * [ ] http://www.w3.org/TR/xhtml1/ with 2 occurrences migrated to:     https://www.w3.org/TR/xhtml1/ ([https](https://www.w3.org/TR/xhtml1/) result 200). * [ ] http://www.w3.org/TR/xhtml1/diffs.html with 1 occurrences migrated to:     https://www.w3.org/TR/xhtml1/diffs.html ([https](https://www.w3.org/TR/xhtml1/diffs.html) result 200). * [ ] http://www.w3.org/TR/xhtml1/dtds.html with 2 occurrences migrated to:     https://www.w3.org/TR/xhtml1/dtds.html ([https](https://www.w3.org/TR/xhtml1/dtds.html) result 200). * [ ] http://www.webjars.org with 2 occurrences migrated to:     https://www.webjars.org ([https](https://www.webjars.org) result 200). * [ ] http://www.webjars.org/ with 1 occurrences migrated to:     https://www.webjars.org/ ([https](https://www.webjars.org/) result 200). * [ ] http://www.wildfly.org/ with 1 occurrences migrated to:     https://www.wildfly.org/ ([https](https://www.wildfly.org/) result 200). * [ ] http://x-stream.github.io/ with 2 occurrences migrated to:     https://x-stream.github.io/ ([https](https://x-stream.github.io/) result 200). * [ ] http://xmlbeans.apache.org/ with 2 occurrences migrated to:     https://xmlbeans.apache.org/ ([https](https://xmlbeans.apache.org/) result 200). * [ ] http://youtrack.jetbrains.com/issue/IDEA-53476 with 1 occurrences migrated to:     https://youtrack.jetbrains.com/issue/IDEA-53476 ([https](https://youtrack.jetbrains.com/issue/IDEA-53476) result 200). * [ ] http://youtrack.jetbrains.com/issue/IDEA-64446 with 1 occurrences migrated to:     https://youtrack.jetbrains.com/issue/IDEA-64446 ([https](https://youtrack.jetbrains.com/issue/IDEA-64446) result 200). * [ ] http://ant.apache.org/ivy with 1 occurrences migrated to:     https://ant.apache.org/ivy ([https](https://ant.apache.org/ivy) result 301). * [ ] http://asm.ow2.org with 1 occurrences migrated to:     https://asm.ow2.org ([https](https://asm.ow2.org) result 301). * [ ] http://bit.ly/TRlX2r with 1 occurrences migrated to:     https://bit.ly/TRlX2r ([https](https://bit.ly/TRlX2r) result 301). * [ ] http://bit.ly/UzccDt with 1 occurrences migrated to:     https://bit.ly/UzccDt ([https](https://bit.ly/UzccDt) result 301). * [ ] http://bit.ly/p9rIvx with 1 occurrences migrated to:     https://bit.ly/p9rIvx ([https](https://bit.ly/p9rIvx) result 301). * [ ] http://bit.ly/qUwvwz with 1 occurrences migrated to:     https://bit.ly/qUwvwz ([https](https://bit.ly/qUwvwz) result 301). * [ ] http://blog.pivotal.io/pivotal/products/websocket-architecture-in-spring-4-0 with 1 occurrences migrated to:     https://blog.pivotal.io/pivotal/products/websocket-architecture-in-spring-4-0 ([https](https://blog.pivotal.io/pivotal/products/websocket-architecture-in-spring-4-0) result 301). * [ ] http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx with 1 occurrences migrated to:     https://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx ([https](https://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx) result 301). * [ ] http://castor-data-binding.github.io/castor with 1 occurrences migrated to:     https://castor-data-binding.github.io/castor ([https](https://castor-data-binding.github.io/castor) result 301). * [ ] http://code.google.com/p/beanshell2/ with 1 occurrences migrated to:     https://code.google.com/p/beanshell2/ ([https](https://code.google.com/p/beanshell2/) result 301). * [ ] http://code.google.com/p/browsersec/wiki/Part2 with 1 occurrences migrated to:     https://code.google.com/p/browsersec/wiki/Part2 ([https](https://code.google.com/p/browsersec/wiki/Part2) result 301). * [ ] http://code.google.com/p/gears/wiki/ResumableHttpRequestsProposal with 1 occurrences migrated to:     https://code.google.com/p/gears/wiki/ResumableHttpRequestsProposal ([https](https://code.google.com/p/gears/wiki/ResumableHttpRequestsProposal) result 301). * [ ] http://code.google.com/p/guava-libraries/ with 1 occurrences migrated to:     https://code.google.com/p/guava-libraries/ ([https](https://code.google.com/p/guava-libraries/) result 301). * [ ] http://code.google.com/p/objenesis/ with 1 occurrences migrated to:     https://code.google.com/p/objenesis/ ([https](https://code.google.com/p/objenesis/) result 301). * [ ] http://code.google.com/p/xml-matchers/ with 4 occurrences migrated to:     https://code.google.com/p/xml-matchers/ ([https](https://code.google.com/p/xml-matchers/) result 301). * [ ] http://commons.apache.org/proper/commons-dbcp with 2 occurrences migrated to:     https://commons.apache.org/proper/commons-dbcp ([https](https://commons.apache.org/proper/commons-dbcp) result 301). * [ ] http://commons.apache.org/proper/commons-fileupload with 3 occurrences migrated to:     https://commons.apache.org/proper/commons-fileupload ([https](https://commons.apache.org/proper/commons-fileupload) result 301). * [ ] http://confluence.jetbrains.net/display/IDEADEV/Gradle+integration with 1 occurrences migrated to:     https://confluence.jetbrains.net/display/IDEADEV/Gradle+integration ([https](https://confluence.jetbrains.net/display/IDEADEV/Gradle+integration) result 301). * [ ] http://contributor-covenant.org with 1 occurrences migrated to:     https://contributor-covenant.org ([https](https://contributor-covenant.org) result 301). * [ ] http://contributor-covenant.org/version/1/3/0/ with 1 occurrences migrated to:     https://contributor-covenant.org/version/1/3/0/ ([https](https://contributor-covenant.org/version/1/3/0/) result 301). * [ ] http://db.apache.org/derby with 2 occurrences migrated to:     https://db.apache.org/derby ([https](https://db.apache.org/derby) result 301). * [ ] http://dev.w3.org/html5/eventsource/ with 2 occurrences migrated to:     https://dev.w3.org/html5/eventsource/ ([https](https://dev.w3.org/html5/eventsource/) result 301). * [ ] http://docs.spring.io with 1 occurrences migrated to:     https://docs.spring.io ([https](https://docs.spring.io) result 301). * [ ] http://domain.com with 17 occurrences migrated to:     https://domain.com ([https](https://domain.com) result 301). * [ ] http://domain.com/ with 1 occurrences migrated to:     https://domain.com/ ([https](https://domain.com/) result 301). * [ ] http://en.wikipedia.org/wiki/Cache_ with 1 occurrences migrated to:     https://en.wikipedia.org/wiki/Cache_ ([https](https://en.wikipedia.org/wiki/Cache_) result 301). * [ ] http://facebook.github.io/react/ with 1 occurrences migrated to:     https://facebook.github.io/react/ ([https](https://facebook.github.io/react/) result 301). * [ ] http://forum.springframework.org/showthread.php?t=41350 with 1 occurrences migrated to:     https://forum.springframework.org/showthread.php?t=41350 ([https](https://forum.springframework.org/showthread.php?t=41350) result 301). * [ ] http://github.com/SpringSource/spring-framework with 1 occurrences migrated to:     https://github.com/SpringSource/spring-framework ([https](https://github.com/SpringSource/spring-framework) result 301). * [ ] http://hdiv.org/ with 1 occurrences migrated to:     https://hdiv.org/ ([https](https://hdiv.org/) result 301). * [ ] http://help.github.com/set-up-git-redirect with 1 occurrences migrated to:     https://help.github.com/set-up-git-redirect ([https](https://help.github.com/set-up-git-redirect) result 301). * [ ] http://jakarta.apache.org/commons/fileupload with 2 occurrences migrated to:     https://jakarta.apache.org/commons/fileupload ([https](https://jakarta.apache.org/commons/fileupload) result 301). * [ ] http://jira.springframework.org/browse/SPR-5708 with 1 occurrences migrated to:     https://jira.springframework.org/browse/SPR-5708 ([https](https://jira.springframework.org/browse/SPR-5708) result 301). * [ ] http://jira.springframework.org/browse/SPR-6124 with 1 occurrences migrated to:     https://jira.springframework.org/browse/SPR-6124 ([https](https://jira.springframework.org/browse/SPR-6124) result 301). * [ ] http://jira.springframework.org/browse/SPR-6128 with 1 occurrences migrated to:     https://jira.springframework.org/browse/SPR-6128 ([https](https://jira.springframework.org/browse/SPR-6128) result 301). * [ ] http://jira.springframework.org/browse/SPR-7064 with 1 occurrences migrated to:     https://jira.springframework.org/browse/SPR-7064 ([https](https://jira.springframework.org/browse/SPR-7064) result 301). * [ ] http://logging.apache.org/log4j with 1 occurrences migrated to:     https://logging.apache.org/log4j ([https](https://logging.apache.org/log4j) result 301). * [ ] http://maven.apache.org/plugins/maven-surefire-plugin/test-mojo.html with 1 occurrences migrated to:     https://maven.apache.org/plugins/maven-surefire-plugin/test-mojo.html ([https](https://maven.apache.org/plugins/maven-surefire-plugin/test-mojo.html) result 301). * [ ] http://mockito.org/ (301) with 1 occurrences migrated to:     https://mockito.github.io ([https](https://mockito.org/) result 301). * [ ] http://mydomain1.com with 36 occurrences migrated to:     https://mydomain1.com ([https](https://mydomain1.com) result 301). * [ ] http://mydomain1.com/ with 2 occurrences migrated to:     https://mydomain1.com/ ([https](https://mydomain1.com/) result 301). * [ ] http://mydomain1.com/path with 2 occurrences migrated to:     https://mydomain1.com/path ([https](https://mydomain1.com/path) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-2660 with 1 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-2660 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-2660) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-2754 with 1 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-2754 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-2754) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-2789 with 1 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-2789 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-2789) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-3026 with 1 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-3026 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-3026) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-3038 with 1 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-3038 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-3038) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-3127 with 1 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-3127 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-3127) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-3775 with 1 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-3775 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-3775) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-3880 with 1 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-3880 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-3880) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-3896 with 7 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-3896 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-3896) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-3949 with 1 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-3949 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-3949) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-3960 with 1 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-3960 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-3960) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-4008 with 2 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-4008 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-4008) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-4040 with 2 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-4040 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-4040) result 301). * [ ] http://projects.spring.io/spring-webflow with 1 occurrences migrated to:     https://projects.spring.io/spring-webflow ([https](https://projects.spring.io/spring-webflow) result 301). * [ ] http://publib.boulder.ibm.com/infocenter/wasinfo/v5r1//topic/com.ibm.websphere.base.doc/info/aes/ae/rdat_extiapi.html with 1 occurrences migrated to:     https://publib.boulder.ibm.com/infocenter/wasinfo/v5r1//topic/com.ibm.websphere.base.doc/info/aes/ae/rdat_extiapi.html ([https](https://publib.boulder.ibm.com/infocenter/wasinfo/v5r1//topic/com.ibm.websphere.base.doc/info/aes/ae/rdat_extiapi.html) result 301). * [ ] http://publib.boulder.ibm.com/infocenter/wasinfo/v6r0/topic/com.ibm.websphere.javadoc.doc/public_html/api/com/ibm/websphere/rsadapter/JDBCConnectionSpec.html with 1 occurrences migrated to:     https://publib.boulder.ibm.com/infocenter/wasinfo/v6r0/topic/com.ibm.websphere.javadoc.doc/public_html/api/com/ibm/websphere/rsadapter/JDBCConnectionSpec.html ([https](https://publib.boulder.ibm.com/infocenter/wasinfo/v6r0/topic/com.ibm.websphere.javadoc.doc/public_html/api/com/ibm/websphere/rsadapter/JDBCConnectionSpec.html) result 301). * [ ] http://site2.com with 2 occurrences migrated to:     https://site2.com ([https](https://site2.com) result 301). * [ ] http://sourceforge.net/projects/c3p0 with 2 occurrences migrated to:     https://sourceforge.net/projects/c3p0 ([https](https://sourceforge.net/projects/c3p0) result 301). * [ ] http://sourceforge.net/projects/javadiff with 1 occurrences migrated to:     https://sourceforge.net/projects/javadiff ([https](https://sourceforge.net/projects/javadiff) result 301). * [ ] http://springframework.org with 2 occurrences migrated to:     https://springframework.org ([https](https://springframework.org) result 301). * [ ] http://www-01.ibm.com/software/webservers/appserv/was/ with 1 occurrences migrated to:     https://www-01.ibm.com/software/webservers/appserv/was/ ([https](https://www-01.ibm.com/software/webservers/appserv/was/) result 301). * [ ] http://www.atomenabled.org/developers/syndication/ with 1 occurrences migrated to:     https://www.atomenabled.org/developers/syndication/ ([https](https://www.atomenabled.org/developers/syndication/) result 301). * [ ] http://www.eclipse.org/aspectj with 2 occurrences migrated to:     https://www.eclipse.org/aspectj ([https](https://www.eclipse.org/aspectj) result 301). * [ ] http://www.google.com/ig/calculator?q=1USD=?EUR with 1 occurrences migrated to:     https://www.google.com/ig/calculator?q=1USD=?EUR ([https](https://www.google.com/ig/calculator?q=1USD=?EUR) result 301). * [ ] http://www.gradle.org/ with 1 occurrences migrated to:     https://www.gradle.org/ ([https](https://www.gradle.org/) result 301). * [ ] http://www.javaworld.com/javaworld/jw-01-2009/jw-01-spring-transactions.html with 1 occurrences migrated to:     https://www.javaworld.com/javaworld/jw-01-2009/jw-01-spring-transactions.html ([https](https://www.javaworld.com/javaworld/jw-01-2009/jw-01-spring-transactions.html) result 301). * [ ] http://www.jboss.org/jbossas/ with 1 occurrences migrated to:     https://www.jboss.org/jbossas/ ([https](https://www.jboss.org/jbossas/) result 301). * [ ] http://www.junit.org/ with 1 occurrences migrated to:     https://www.junit.org/ ([https](https://www.junit.org/) result 301). * [ ] http://www.mnot.net/cache_docs with 1 occurrences migrated to:     https://www.mnot.net/cache_docs ([https](https://www.mnot.net/cache_docs) result 301). * [ ] http://www.oracle.com/technetwork/java/javase/downloads with 1 occurrences migrated to:     https://www.oracle.com/technetwork/java/javase/downloads ([https](https://www.oracle.com/technetwork/java/javase/downloads) result 301). * [ ] http://www.sf.net/home.view?siteLanguage=nl with 1 occurrences migrated to:     https://www.sf.net/home.view?siteLanguage=nl ([https](https://www.sf.net/home.view?siteLanguage=nl) result 301). * [ ] http://www.springframework.org with 7 occurrences migrated to:     https://www.springframework.org ([https](https://www.springframework.org) result 301). * [ ] http://www.springframework.org/ with 3 occurrences migrated to:     https://www.springframework.org/ ([https](https://www.springframework.org/) result 301). * [ ] http://www.whatwg.org/specs/web-apps/current-work/multipage/offline.html with 1 occurrences migrated to:     https://www.whatwg.org/specs/web-apps/current-work/multipage/offline.html ([https](https://www.whatwg.org/specs/web-apps/current-work/multipage/offline.html) result 301). * [ ] http://commons.apache.org/codec/ with 1 occurrences migrated to:     https://commons.apache.org/codec/ ([https](https://commons.apache.org/codec/) result 302). * [ ] http://download.oracle.com/javaee/6/api/javax/inject/Scope.html with 1 occurrences migrated to:     https://download.oracle.com/javaee/6/api/javax/inject/Scope.html ([https](https://download.oracle.com/javaee/6/api/javax/inject/Scope.html) result 302). * [ ] http://download.oracle.com/javase/1.5.0/docs/api/java/lang/System.html with 4 occurrences migrated to:     https://download.oracle.com/javase/1.5.0/docs/api/java/lang/System.html ([https](https://download.oracle.com/javase/1.5.0/docs/api/java/lang/System.html) result 302). * [ ] http://download.oracle.com/javase/6/docs/api/java/beans/ConstructorProperties.html with 1 occurrences migrated to:     https://download.oracle.com/javase/6/docs/api/java/beans/ConstructorProperties.html ([https](https://download.oracle.com/javase/6/docs/api/java/beans/ConstructorProperties.html) result 302). * [ ] http://download.oracle.com/javase/6/docs/technotes/guides/jar/jar.html with 1 occurrences migrated to:     https://download.oracle.com/javase/6/docs/technotes/guides/jar/jar.html ([https](https://download.oracle.com/javase/6/docs/technotes/guides/jar/jar.html) result 302). * [ ] http://download.oracle.com/javase/jndi/tutorial/beyond/misc/policy.html with 1 occurrences migrated to:     https://download.oracle.com/javase/jndi/tutorial/beyond/misc/policy.html ([https](https://download.oracle.com/javase/jndi/tutorial/beyond/misc/policy.html) result 302). * [ ] http://gafter.blogspot.nl/2006/12/super-type-tokens.html with 1 occurrences migrated to:     https://gafter.blogspot.nl/2006/12/super-type-tokens.html ([https](https://gafter.blogspot.nl/2006/12/super-type-tokens.html) result 302). * [ ] http://git-scm.com/book/en/Distributed-Git-Contributing-to-a-Project with 1 occurrences migrated to:     https://git-scm.com/book/en/Distributed-Git-Contributing-to-a-Project ([https](https://git-scm.com/book/en/Distributed-Git-Contributing-to-a-Project) result 302). * [ ] http://git-scm.com/book/en/Git-Tools-Rewriting-History with 1 occurrences migrated to:     https://git-scm.com/book/en/Git-Tools-Rewriting-History ([https](https://git-scm.com/book/en/Git-Tools-Rewriting-History) result 302). * [ ] http://glassfish.dev.java.net/ with 1 occurrences migrated to:     https://glassfish.dev.java.net/ ([https](https://glassfish.dev.java.net/) result 302). * [ ] http://java.sun.com with 3 occurrences migrated to:     https://java.sun.com ([https](https://java.sun.com) result 302). * [ ] http://java.sun.com/docs/books/jls/third_edition/html/conversions.html with 1 occurrences migrated to:     https://java.sun.com/docs/books/jls/third_edition/html/conversions.html ([https](https://java.sun.com/docs/books/jls/third_edition/html/conversions.html) result 302). * [ ] http://java.sun.com/docs/books/jls/third_edition/html/expressions.html with 1 occurrences migrated to:     https://java.sun.com/docs/books/jls/third_edition/html/expressions.html ([https](https://java.sun.com/docs/books/jls/third_edition/html/expressions.html) result 302). * [ ] http://java.sun.com/j2se/ with 2 occurrences migrated to:     https://java.sun.com/j2se/ ([https](https://java.sun.com/j2se/) result 302). * [ ] http://java.sun.com/j2se/1.4.1/docs/tooldocs/solaris/javadoc.html with 1 occurrences migrated to:     https://java.sun.com/j2se/1.4.1/docs/tooldocs/solaris/javadoc.html ([https](https://java.sun.com/j2se/1.4.1/docs/tooldocs/solaris/javadoc.html) result 302). * [ ] http://java.sun.com/j2se/1.4.2/docs/api/java/text/SimpleDateFormat.html with 1 occurrences migrated to:     https://java.sun.com/j2se/1.4.2/docs/api/java/text/SimpleDateFormat.html ([https](https://java.sun.com/j2se/1.4.2/docs/api/java/text/SimpleDateFormat.html) result 302). * [ ] http://java.sun.com/j2se/javadoc with 1 occurrences migrated to:     https://java.sun.com/j2se/javadoc ([https](https://java.sun.com/j2se/javadoc) result 302). * [ ] http://java.sun.com/j2se/javadoc/ with 1 occurrences migrated to:     https://java.sun.com/j2se/javadoc/ ([https](https://java.sun.com/j2se/javadoc/) result 302). * [ ] http://java.sun.com/j2se/javadoc/faq.html with 1 occurrences migrated to:     https://java.sun.com/j2se/javadoc/faq.html ([https](https://java.sun.com/j2se/javadoc/faq.html) result 302). * [ ] http://java.sun.com/webservices/jaxb/ with 1 occurrences migrated to:     https://java.sun.com/webservices/jaxb/ ([https](https://java.sun.com/webservices/jaxb/) result 302). * [ ] http://java.sun.com/xml/ns/j2ee/connector_1_5.xsd with 1 occurrences migrated to:     https://java.sun.com/xml/ns/j2ee/connector_1_5.xsd ([https](https://java.sun.com/xml/ns/j2ee/connector_1_5.xsd) result 302). * [ ] http://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd with 2 occurrences migrated to:     https://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd ([https](https://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd) result 302). * [ ] http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd with 4 occurrences migrated to:     https://java.sun.com/xml/ns/javaee/web-app_3_0.xsd ([https](https://java.sun.com/xml/ns/javaee/web-app_3_0.xsd) result 302). * [ ] http://repo.spring.io/milestone/org/springframework/spring with 1 occurrences migrated to:     https://repo.spring.io/milestone/org/springframework/spring ([https](https://repo.spring.io/milestone/org/springframework/spring) result 302). * [ ] http://repo.spring.io/release with 1 occurrences migrated to:     https://repo.spring.io/release ([https](https://repo.spring.io/release) result 302). * [ ] http://repo.spring.io/release/org/springframework/spring with 1 occurrences migrated to:     https://repo.spring.io/release/org/springframework/spring ([https](https://repo.spring.io/release/org/springframework/spring) result 302). * [ ] http://repo.spring.io/snapshot/org/springframework/spring with 1 occurrences migrated to:     https://repo.spring.io/snapshot/org/springframework/spring ([https](https://repo.spring.io/snapshot/org/springframework/spring) result 302). * [ ] http://sourceforge.net/projects/cglib/files/cglib3/3.0/cglib-3.0.jar/download with 1 occurrences migrated to:     https://sourceforge.net/projects/cglib/files/cglib3/3.0/cglib-3.0.jar/download ([https](https://sourceforge.net/projects/cglib/files/cglib3/3.0/cglib-3.0.jar/download) result 302). * [ ] http://other.info/foo/bar (301) with 1 occurrences migrated to:     https://weibo.com/otherinfo/foo/bar ([https](https://other.info/foo/bar) result 302). * [ ] http://www.iana.org/assignments/http-status-codes with 1 occurrences migrated to:     https://www.iana.org/assignments/http-status-codes ([https](https://www.iana.org/assignments/http-status-codes) result 302). * [ ] http://www.sys-con.com/java with 1 occurrences migrated to:     https://www.sys-con.com/java ([https](https://www.sys-con.com/java) result 302).  # Ignored These URLs were intentionally ignored.  * http://Additional-namespace-name-URI with 1 occurrences * http://Default-namespace-name-URI with 1 occurrences * http://HOST:8080/remoting/AccountService with 1 occurrences * http://Namespace-name-URI with 1 occurrences * http://Unbound-namespace-name-URI with 1 occurrences * http://anotherHost/mvc-showcase with 1 occurrences * http://apache.org/xml/features/disallow-doctype-decl with 14 occurrences * http://barfoo:8888 with 1 occurrences * http://example/ with 1 occurrences * http://fake-service with 7 occurrences * http://foobar:8088 with 1 occurrences * http://host:port/myApp/myEndpoint/ with 1 occurrences * http://java.sun.com/jsp/jstl/core with 1 occurrences * http://java.sun.com/xml/jaxp/properties/schemaLanguage with 1 occurrences * http://java.sun.com/xml/ns/j2ee with 6 occurrences * http://java.sun.com/xml/ns/javaee with 8 occurrences * http://java.sun.com/xml/ns/persistence with 1 occurrences * http://java.sun.com/xml/stream/properties/report-cdata-event with 1 occurrences * http://jaxws.remoting.springframework.org/ with 4 occurrences * http://localhost with 13 occurrences * http://localhost/ with 14 occurrences * http://localhost/42 with 1 occurrences * http://localhost/?cookie=foo with 1 occurrences * http://localhost/abc with 1 occurrences * http://localhost/abc/def with 1 occurrences * http://localhost/app%20/path/ with 1 occurrences * http://localhost/app/path%20with%20spaces/ with 1 occurrences * http://localhost/bar with 1 occurrences * http://localhost/content with 1 occurrences * http://localhost/content.atom with 1 occurrences * http://localhost/context/a with 3 occurrences * http://localhost/contextPath/main/path with 1 occurrences * http://localhost/foo/bar with 1 occurrences * http://localhost/forward with 1 occurrences * http://localhost/hotels/42/bookings/21 with 4 occurrences * http://localhost/input with 1 occurrences * http://localhost/jquery-1.11.0.min.js with 5 occurrences * http://localhost/messages/form with 1 occurrences * http://localhost/mvc-showcase with 2 occurrences * http://localhost/mvc-showcase/app with 1 occurrences * http://localhost/mvc-showcase/data/foo%20bar with 1 occurrences * http://localhost/mvc-showcase/data/param with 1 occurrences * http://localhost/mvc-showcase/data/param?foo=123 with 2 occurrences * http://localhost/myapp/main with 1 occurrences * http://localhost/myapp/people/1/addresses/DE with 1 occurrences * http://localhost/path;a=b/with/semicolon with 1 occurrences * http://localhost/persons with 1 occurrences * http://localhost/prefix with 1 occurrences * http://localhost/prefix/app with 1 occurrences * http://localhost/prefix/bar with 1 occurrences * http://localhost/prefix/mvc-showcase with 3 occurrences * http://localhost/query= with 1 occurrences * http://localhost/query=foo@bar with 1 occurrences * http://localhost/registration.html with 1 occurrences * http://localhost/rest/books/6/pages/1.json with 1 occurrences * http://localhost/something/1/foo with 1 occurrences * http://localhost/something/optional-param with 1 occurrences * http://localhost/test with 4 occurrences * http://localhost/test/this with 3 occurrences * http://localhost:7070/example/adminhandle.vm with 1 occurrences * http://localhost:7070/example/bingo.html with 1 occurrences * http://localhost:80/jquery-1.11.0.min.js with 1 occurrences * http://localhost:8080 with 28 occurrences * http://localhost:8080/ with 4 occurrences * http://localhost:8080/OrderService with 3 occurrences * http://localhost:8080/context with 1 occurrences * http://localhost:8080/context/myapiresource with 1 occurrences * http://localhost:8080/gamecast/admin/index.html with 1 occurrences * http://localhost:8080/gamecast/display.html with 1 occurrences * http://localhost:8080/gamecast/displayShoppingCart.html with 1 occurrences * http://localhost:8080/jquery-1.11.0.min.js with 1 occurrences * http://localhost:8080/mvc-showcase with 1 occurrences * http://localhost:8080/myapiresource with 1 occurrences * http://localhost:8080/myapp/js/sockjs-client.js with 1 occurrences * http://localhost:8080/path with 1 occurrences * http://localhost:8080/people with 2 occurrences * http://localhost:8080/portfolio with 1 occurrences * http://localhost:8080/test/ with 2 occurrences * http://localhost:8888/AccountServiceEndpoint?WSDL with 1 occurrences * http://localhost:9000 with 5 occurrences * http://localhost:9090 with 18 occurrences * http://localhost:9090/jquery-1.11.0.min.js with 2 occurrences * http://localhost:9990/mail/messages/form with 1 occurrences * http://localhost:9999/ with 1 occurrences * http://localhost:9999/OrderService?wsdl with 4 occurrences * http://localhosta/testbean with 6 occurrences * http://myserver with 1 occurrences * http://myurl with 12 occurrences * http://remotehost:8080/remoting/AccountService with 2 occurrences * http://samples.springframework.org/flight with 42 occurrences * http://somethingDifferent with 1 occurrences * http://springframework.org/spring-ws with 17 occurrences * http://test.com with 1 occurrences * http://test.com/ with 1 occurrences * http://testng.org/ with 1 occurrences * http://tiles.apache.org/tags-tiles with 1 occurrences * http://www with 1 occurrences * http://www.foo.com/schema/component with 6 occurrences * http://www.mycompany.com/schema/myns with 4 occurrences * http://www.springframework.org/schema/aop with 48 occurrences * http://www.springframework.org/schema/beans with 340 occurrences * http://www.springframework.org/schema/beans/test with 2 occurrences * http://www.springframework.org/schema/c with 1 occurrences * http://www.springframework.org/schema/cache with 15 occurrences * http://www.springframework.org/schema/context with 44 occurrences * http://www.springframework.org/schema/jdbc with 18 occurrences * http://www.springframework.org/schema/jee with 24 occurrences * http://www.springframework.org/schema/jms with 19 occurrences * http://www.springframework.org/schema/lang with 26 occurrences * http://www.springframework.org/schema/mvc with 22 occurrences * http://www.springframework.org/schema/oxm with 16 occurrences * http://www.springframework.org/schema/p with 5 occurrences * http://www.springframework.org/schema/task with 14 occurrences * http://www.springframework.org/schema/tool with 205 occurrences * http://www.springframework.org/schema/tx with 35 occurrences * http://www.springframework.org/schema/tx/spring-tx.xsd__ with 1 occurrences * http://www.springframework.org/schema/util with 24 occurrences * http://www.springframework.org/schema/websocket with 30 occurrences * http://www.springframework.org/spring-ws with 1 occurrences * http://www.springframework.org/tags with 4 occurrences * http://www.springframework.org/tags/form with 2 occurrences * http://www.w3.org/1999/XSL/Transform with 8 occurrences * http://www.w3.org/2001/XMLSchema with 126 occurrences * http://www.w3.org/2001/XMLSchema-instance with 90 occurrences * http://www.w3.org/2005/Atom with 4 occurrences * http://www.w3.org/TR/html4/charset.html with 5 occurrences * http://www.w3.org/TR/html4/sgml/entities.html with 14 occurrences * http://www.w3.org/XML/1998/namespace with 21 occurrences * http://xml.org/sax/features/ with 4 occurrences * http://xml.org/sax/features/external-general-entities with 14 occurrences * http://xml.org/sax/features/is-standalone with 1 occurrences * http://xml.org/sax/features/namespace-prefixes with 13 occurrences * http://xml.org/sax/features/namespaces with 12 occurrences * http://xml.org/sax/features/namespaces-prefixes with 1 occurrences * http://xml.org/sax/properties/lexical-handler with 13 occurrences","closed","type: task,","spring-operator","2019-03-26T09:22:59Z","2019-03-27T15:56:14Z"
"","22680","URL Cleanup","This commit updates URLs to prefer the https protocol. Redirects are not followed to avoid accidentally expanding intentionally shortened URLs (i.e. if using a URL shortener).  # HTTP URLs that Could Not Be Fixed These URLs were unable to be fixed. Please review them to see if they can be manually resolved.  * [ ] http://aopalliance.sourceforge.net (200) with 1 occurrences could not be migrated:      ([https](https://aopalliance.sourceforge.net) result AnnotatedConnectException). * [ ] http://cglib.sourceforge.net (200) with 2 occurrences could not be migrated:      ([https](https://cglib.sourceforge.net) result AnnotatedConnectException). * [ ] http://classdoc.sourceforge.net (200) with 1 occurrences could not be migrated:      ([https](https://classdoc.sourceforge.net) result AnnotatedConnectException). * [ ] http://code.jquery.com:80/jquery.js (200) with 1 occurrences could not be migrated:      ([https](https://code.jquery.com:80/jquery.js) result SSLException). * [ ] http://dbunit.sourceforge.net/ (200) with 1 occurrences could not be migrated:      ([https](https://dbunit.sourceforge.net/) result AnnotatedConnectException). * [ ] http://docs.groovy-lang.org/docs/next/html/documentation/template-engines.html (200) with 1 occurrences could not be migrated:      ([https](https://docs.groovy-lang.org/docs/next/html/documentation/template-engines.html) result SSLProtocolException). * [ ] http://domain3.com (200) with 6 occurrences could not be migrated:      ([https](https://domain3.com) result ConnectTimeoutException). * [ ] http://forum.thymeleaf.org/Thymeleaf-3-0-8-JUST-PUBLISHED-td4030687.html (200) with 1 occurrences could not be migrated:      ([https](https://forum.thymeleaf.org/Thymeleaf-3-0-8-JUST-PUBLISHED-td4030687.html) result SSLHandshakeException). * [ ] http://gregfranko.com/jquery.tocify.js/ (200) with 1 occurrences could not be migrated:      ([https](https://gregfranko.com/jquery.tocify.js/) result SSLHandshakeException). * [ ] http://grinder.sourceforge.net/ (200) with 1 occurrences could not be migrated:      ([https](https://grinder.sourceforge.net/) result AnnotatedConnectException). * [ ] http://groovy-lang.org/templating.html (200) with 3 occurrences could not be migrated:      ([https](https://groovy-lang.org/templating.html) result SSLProtocolException). * [ ] http://hsqldb.org (200) with 1 occurrences could not be migrated:      ([https](https://hsqldb.org) result SSLHandshakeException). * [ ] http://htmlunit.sourceforge.net/ (200) with 3 occurrences could not be migrated:      ([https](https://htmlunit.sourceforge.net/) result AnnotatedConnectException). * [ ] http://htmlunit.sourceforge.net/gettingStarted.html (200) with 1 occurrences could not be migrated:      ([https](https://htmlunit.sourceforge.net/gettingStarted.html) result AnnotatedConnectException). * [ ] http://htmlunit.sourceforge.net/javascript.html (200) with 1 occurrences could not be migrated:      ([https](https://htmlunit.sourceforge.net/javascript.html) result AnnotatedConnectException). * [ ] http://javadiff.cvs.sourceforge.net/ (200) with 3 occurrences could not be migrated:      ([https](https://javadiff.cvs.sourceforge.net/) result SSLHandshakeException). * [ ] http://jibx.sourceforge.net/ (200) with 2 occurrences could not be migrated:      ([https](https://jibx.sourceforge.net/) result AnnotatedConnectException). * [ ] http://joda-time.sourceforge.net (200) with 1 occurrences could not be migrated:      ([https](https://joda-time.sourceforge.net) result AnnotatedConnectException). * [ ] http://jotm.objectweb.org/ (200) with 1 occurrences could not be migrated:      ([https](https://jotm.objectweb.org/) result NotSslRecordException). * [ ] http://json-b.net/ (200) with 1 occurrences could not be migrated:      ([https](https://json-b.net/) result SSLHandshakeException). * [ ] http://mx4j.sourceforge.net (200) with 1 occurrences could not be migrated:      ([https](https://mx4j.sourceforge.net) result AnnotatedConnectException). * [ ] http://mx4j.sourceforge.net/ (200) with 1 occurrences could not be migrated:      ([https](https://mx4j.sourceforge.net/) result AnnotatedConnectException). * [ ] http://mydomain3.com (200) with 9 occurrences could not be migrated:      ([https](https://mydomain3.com) result ConnectTimeoutException). * [ ] http://objenesis.org (200) with 1 occurrences could not be migrated:      ([https](https://objenesis.org) result SSLHandshakeException). * [ ] http://objenesis.org/tutorial.html (200) with 1 occurrences could not be migrated:      ([https](https://objenesis.org/tutorial.html) result SSLHandshakeException). * [ ] http://other.com/ (200) with 2 occurrences could not be migrated:      ([https](https://other.com/) result SSLHandshakeException). * [ ] http://reactivex.io/ (200) with 1 occurrences could not be migrated:      ([https](https://reactivex.io/) result SSLHandshakeException). * [ ] http://reactivex.io/documentation/operators.html (200) with 1 occurrences could not be migrated:      ([https](https://reactivex.io/documentation/operators.html) result SSLHandshakeException). * [ ] http://url.somewhereelse.com (200) with 4 occurrences could not be migrated:      ([https](https://url.somewhereelse.com) result SSLHandshakeException). * [ ] http://www.beanshell.org (200) with 1 occurrences could not be migrated:      ([https](https://www.beanshell.org) result SSLHandshakeException). * [ ] http://www.beanshell.org/ (200) with 1 occurrences could not be migrated:      ([https](https://www.beanshell.org/) result SSLHandshakeException). * [ ] http://www.doclet.com (200) with 1 occurrences could not be migrated:      ([https](https://www.doclet.com) result AnnotatedConnectException). * [ ] http://www.gebish.org/ (200) with 1 occurrences could not be migrated:      ([https](https://www.gebish.org/) result SSLHandshakeException). * [ ] http://www.gebish.org/manual/current/ (200) with 3 occurrences could not be migrated:      ([https](https://www.gebish.org/manual/current/) result SSLHandshakeException). * [ ] http://www.groovy-lang.org/ (200) with 2 occurrences could not be migrated:      ([https](https://www.groovy-lang.org/) result SSLProtocolException). * [ ] http://www.groovy-lang.org/operators.html (200) with 2 occurrences could not be migrated:      ([https](https://www.groovy-lang.org/operators.html) result SSLProtocolException). * [ ] http://www.hsqldb.org (200) with 1 occurrences could not be migrated:      ([https](https://www.hsqldb.org) result SSLHandshakeException). * [ ] http://www.jensgulden.de (200) with 1 occurrences could not be migrated:      ([https](https://www.jensgulden.de) result AnnotatedConnectException). * [ ] http://www.mockobjects.com (200) with 2 occurrences could not be migrated:      ([https](https://www.mockobjects.com) result ClosedChannelException). * [ ] http://www.mockobjects.com/ (200) with 1 occurrences could not be migrated:      ([https](https://www.mockobjects.com/) result ClosedChannelException). * [ ] http://xmlunit.sourceforge.net/ (200) with 2 occurrences could not be migrated:      ([https](https://xmlunit.sourceforge.net/) result AnnotatedConnectException). * [ ] http://192.168.0.1/mvc-showcase (301) with 1 occurrences could not be migrated:      ([https](https://192.168.0.1/mvc-showcase) result ConnectTimeoutException). * [ ] http://www.easymock.org (301) with 2 occurrences could not be migrated:      ([https](https://www.easymock.org) result SSLHandshakeException). * [ ] http://www.easymock.org/ (301) with 1 occurrences could not be migrated:      ([https](https://www.easymock.org/) result SSLHandshakeException). * [ ] http://www.jmock.org/ (301) with 1 occurrences could not be migrated:      ([https](https://www.jmock.org/) result SSLHandshakeException). * [ ] http://foo.com (301) with 4 occurrences could not be migrated:      ([https](https://foo.com) result SSLHandshakeException). * [ ] http://foo.com/ (301) with 1 occurrences could not be migrated:      ([https](https://foo.com/) result SSLHandshakeException). * [ ] http://foo.com/a (301) with 1 occurrences could not be migrated:      ([https](https://foo.com/a) result SSLHandshakeException). * [ ] http://foo.com/a?foo=bar&foo=baz (301) with 4 occurrences could not be migrated:      ([https](https://foo.com/a?foo=bar&foo=baz) result SSLHandshakeException). * [ ] http://foo.com/bar (301) with 5 occurrences could not be migrated:      ([https](https://foo.com/bar) result SSLHandshakeException). * [ ] http://foo.com/baz (301) with 1 occurrences could not be migrated:      ([https](https://foo.com/baz) result SSLHandshakeException). * [ ] http://foo.com/rest/books/6.json (301) with 1 occurrences could not be migrated:      ([https](https://foo.com/rest/books/6.json) result SSLHandshakeException). * [ ] http://foo.com/rest/books/6/pages/1.json (301) with 1 occurrences could not be migrated:      ([https](https://foo.com/rest/books/6/pages/1.json) result SSLHandshakeException). * [ ] http://foo.com/v1 (301) with 1 occurrences could not be migrated:      ([https](https://foo.com/v1) result SSLHandshakeException). * [ ] http://foo.com/v1/123 (301) with 1 occurrences could not be migrated:      ([https](https://foo.com/v1/123) result SSLHandshakeException). * [ ] http://foo.com/v1/bar (301) with 1 occurrences could not be migrated:      ([https](https://foo.com/v1/bar) result SSLHandshakeException). * [ ] http://foo.com/v1?id=123 (301) with 2 occurrences could not be migrated:      ([https](https://foo.com/v1?id=123) result SSLHandshakeException). * [ ] http://foo.com/wrong (301) with 1 occurrences could not be migrated:      ([https](https://foo.com/wrong) result SSLHandshakeException). * [ ] http://mydomain4.com (301) with 3 occurrences could not be migrated:      ([https](https://mydomain4.com) result SSLHandshakeException). * [ ] http://www.caucho.com/hessian (302) with 6 occurrences could not be migrated:      ([https](https://www.caucho.com/hessian) result SSLHandshakeException). * [ ] http://mydomain2.com (302) with 22 occurrences could not be migrated:      ([https](https://mydomain2.com) result ConnectTimeoutException). * [ ] http://www.jdiff.org (302) with 1 occurrences could not be migrated:      ([https](https://www.jdiff.org) result ConnectTimeoutException). * [ ] http://example.com:80/test/this/here (404) with 3 occurrences could not be migrated:      ([https](https://example.com:80/test/this/here) result NotSslRecordException). * [ ] http://www.foo.com/schema/component/component.xsd (404) with 1 occurrences could not be migrated:      ([https](https://www.foo.com/schema/component/component.xsd) result SSLHandshakeException). * [ ] http://www.foo.com/schema/jcache (404) with 2 occurrences could not be migrated:      ([https](https://www.foo.com/schema/jcache) result SSLHandshakeException). * [ ] http://www.mycompany.com/schema/myns/myns.xsd (404) with 1 occurrences could not be migrated:      ([https](https://www.mycompany.com/schema/myns/myns.xsd) result ConnectTimeoutException). * [ ] http://xunitpatterns.com/Test%20Spy.html (404) with 1 occurrences could not be migrated:      ([https](https://xunitpatterns.com/Test%20Spy.html) result AnnotatedConnectException).  # Fixed URLs  ## Fixed But Review Recommended These URLs were fixed, but the https status was not OK. However, the https status was the same as the http request or http redirected to an https URL, so they were migrated. Your review is recommended.  * [ ] http://bugs.sun.com/view_bug.do?bug_id=6342411 (302) with 1 occurrences migrated to:     https://bugs.java.com/view_bug.do?bug_id=6342411 ([https](https://bugs.sun.com/view_bug.do?bug_id=6342411) result SSLHandshakeException). * [ ] http://bugs.sun.com/view_bug.do?bug_id=7023180 (302) with 2 occurrences migrated to:     https://bugs.java.com/view_bug.do?bug_id=7023180 ([https](https://bugs.sun.com/view_bug.do?bug_id=7023180) result SSLHandshakeException). * [ ] http://www.freemarker.org (301) with 5 occurrences migrated to:     https://freemarker.apache.org/ ([https](https://www.freemarker.org) result ConnectTimeoutException). * [ ] http://sockjs.org (303) with 2 occurrences migrated to:     https://github.com/sockjs/sockjs-client ([https](https://sockjs.org) result AnnotatedConnectException). * [ ] http://network.pivotal.io/open-source (301) with 1 occurrences migrated to:     https://network.pivotal.io/open-source ([https](https://network.pivotal.io/open-source) result ReadTimeoutException). * [ ] http://projects.eclipse.org/projects/tools.buildship (301) with 1 occurrences migrated to:     https://projects.eclipse.org/projects/tools.buildship ([https](https://projects.eclipse.org/projects/tools.buildship) result SSLException). * [ ] http://aaa.org:8080/a (301) with 1 occurrences migrated to:     https://www.aaa.org/articles/ ([https](https://aaa.org:8080/a) result NotSslRecordException). * [ ] http://aaa.org:8080/b/c/d (301) with 1 occurrences migrated to:     https://www.aaa.org/b/c/d ([https](https://aaa.org:8080/b/c/d) result ReadTimeoutException). * [ ] http://www.caucho.com (302) with 1 occurrences migrated to:     https://www.caucho.com/ ([https](https://www.caucho.com) result SSLHandshakeException). * [ ] http://jruby.org (301) with 4 occurrences migrated to:     https://www.jruby.org ([https](https://jruby.org) result SSLHandshakeException). * [ ] http://jruby.org/ (301) with 1 occurrences migrated to:     https://www.jruby.org ([https](https://jruby.org/) result SSLHandshakeException). * [ ] http://bbb.org:9090/b (AnnotatedConnectException) with 2 occurrences migrated to:     https://bbb.org:9090/b ([https](https://bbb.org:9090/b) result AnnotatedConnectException). * [ ] http://192.168.28.42/1.jsp (ConnectTimeoutException) with 3 occurrences migrated to:     https://192.168.28.42/1.jsp ([https](https://192.168.28.42/1.jsp) result ConnectTimeoutException). * [ ] http://example.com:8080/ (ConnectTimeoutException) with 1 occurrences migrated to:     https://example.com:8080/ ([https](https://example.com:8080/) result ConnectTimeoutException). * [ ] http://example.com:8080/bar (ConnectTimeoutException) with 5 occurrences migrated to:     https://example.com:8080/bar ([https](https://example.com:8080/bar) result ConnectTimeoutException). * [ ] http://example.org:9090 (ConnectTimeoutException) with 2 occurrences migrated to:     https://example.org:9090 ([https](https://example.org:9090) result ConnectTimeoutException). * [ ] http://example.org:9090/base (ConnectTimeoutException) with 12 occurrences migrated to:     https://example.org:9090/base ([https](https://example.org:9090/base) result ConnectTimeoutException). * [ ] http://example.org:9090/base/people (ConnectTimeoutException) with 2 occurrences migrated to:     https://example.org:9090/base/people ([https](https://example.org:9090/base/people) result ConnectTimeoutException). * [ ] http://example.org:9090/base/something/1/foo (ConnectTimeoutException) with 2 occurrences migrated to:     https://example.org:9090/base/something/1/foo ([https](https://example.org:9090/base/something/1/foo) result ConnectTimeoutException). * [ ] http://example.org:9090/base/something/else (ConnectTimeoutException) with 2 occurrences migrated to:     https://example.org:9090/base/something/else ([https](https://example.org:9090/base/something/else) result ConnectTimeoutException). * [ ] http://example.org:9999/base (ConnectTimeoutException) with 1 occurrences migrated to:     https://example.org:9999/base ([https](https://example.org:9999/base) result ConnectTimeoutException). * [ ] http://example.org:9999/base/api/people/123/addresses (ConnectTimeoutException) with 1 occurrences migrated to:     https://example.org:9999/base/api/people/123/addresses ([https](https://example.org:9999/base/api/people/123/addresses) result ConnectTimeoutException). * [ ] http://example.org:9999/base/api/people/123/addresses/DE (ConnectTimeoutException) with 1 occurrences migrated to:     https://example.org:9999/base/api/people/123/addresses/DE ([https](https://example.org:9999/base/api/people/123/addresses/DE) result ConnectTimeoutException). * [ ] http://example.org:9999/base/people/123/addresses/DE (ConnectTimeoutException) with 1 occurrences migrated to:     https://example.org:9999/base/people/123/addresses/DE ([https](https://example.org:9999/base/people/123/addresses/DE) result ConnectTimeoutException). * [ ] http://example.org:9999/next (ConnectTimeoutException) with 1 occurrences migrated to:     https://example.org:9999/next ([https](https://example.org:9999/next) result ConnectTimeoutException). * [ ] http://example.org:9999/path?q=foo (ConnectTimeoutException) with 1 occurrences migrated to:     https://example.org:9999/path?q=foo ([https](https://example.org:9999/path?q=foo) result ConnectTimeoutException). * [ ] http://foo.com:8080/v1/bar?id=123 (ConnectTimeoutException) with 1 occurrences migrated to:     https://foo.com:8080/v1/bar?id=123 ([https](https://foo.com:8080/v1/bar?id=123) result ConnectTimeoutException). * [ ] http://mydomain1.com:123 (ConnectTimeoutException) with 1 occurrences migrated to:     https://mydomain1.com:123 ([https](https://mydomain1.com:123) result ConnectTimeoutException). * [ ] http://site1.com (ConnectTimeoutException) with 13 occurrences migrated to:     https://site1.com ([https](https://site1.com) result ConnectTimeoutException). * [ ] http://wwws.sun.com/software/xml/developers/diffmk/ (ConnectTimeoutException) with 1 occurrences migrated to:     https://wwws.sun.com/software/xml/developers/diffmk/ ([https](https://wwws.sun.com/software/xml/developers/diffmk/) result ConnectTimeoutException). * [ ] http://www.w3.org/TR/html4/loose.dtd (ReadTimeoutException) with 5 occurrences migrated to:     https://www.w3.org/TR/html4/loose.dtd ([https](https://www.w3.org/TR/html4/loose.dtd) result ReadTimeoutException). * [ ] http://DOMAIN2.com (UnknownHostException) with 2 occurrences migrated to:     https://DOMAIN2.com ([https](https://DOMAIN2.com) result UnknownHostException). * [ ] http://a.example.org/mvc-showcase (UnknownHostException) with 1 occurrences migrated to:     https://a.example.org/mvc-showcase ([https](https://a.example.org/mvc-showcase) result UnknownHostException). * [ ] http://arjen:foobar@java.sun.com:80 (UnknownHostException) with 1 occurrences migrated to:     https://arjen:foobar@java.sun.com:80 ([https](https://arjen:foobar@java.sun.com:80) result UnknownHostException). * [ ] http://dev.bar.com (UnknownHostException) with 3 occurrences migrated to:     https://dev.bar.com ([https](https://dev.bar.com) result UnknownHostException). * [ ] http://domain1.com (UnknownHostException) with 25 occurrences migrated to:     https://domain1.com ([https](https://domain1.com) result UnknownHostException). * [ ] http://domain1.com/test.html (UnknownHostException) with 4 occurrences migrated to:     https://domain1.com/test.html ([https](https://domain1.com/test.html) result UnknownHostException). * [ ] http://domain2.com (UnknownHostException) with 98 occurrences migrated to:     https://domain2.com ([https](https://domain2.com) result UnknownHostException). * [ ] http://example.com"",HttpMethod.GET (UnknownHostException) with 6 occurrences migrated to:     https://example.com"",HttpMethod.GET ([https](https://example.com"",HttpMethod.GET) result UnknownHostException). * [ ] http://foo.bar.com (UnknownHostException) with 4 occurrences migrated to:     https://foo.bar.com ([https](https://foo.bar.com) result UnknownHostException). * [ ] http://joe.openid.example.org/ (UnknownHostException) with 2 occurrences migrated to:     https://joe.openid.example.org/ ([https](https://joe.openid.example.org/) result UnknownHostException). * [ ] http://myserver/logo.png (UnknownHostException) with 1 occurrences migrated to:     https://myserver/logo.png ([https](https://myserver/logo.png) result UnknownHostException). * [ ] http://samples.springframework.org/order (UnknownHostException) with 2 occurrences migrated to:     https://samples.springframework.org/order ([https](https://samples.springframework.org/order) result UnknownHostException). * [ ] http://url.somewhere.com (UnknownHostException) with 25 occurrences migrated to:     https://url.somewhere.com ([https](https://url.somewhere.com) result UnknownHostException). * [ ] http://url.somewhere.com/path (UnknownHostException) with 1 occurrences migrated to:     https://url.somewhere.com/path ([https](https://url.somewhere.com/path) result UnknownHostException). * [ ] http://url.somewhere.com/path?id=1 (UnknownHostException) with 1 occurrences migrated to:     https://url.somewhere.com/path?id=1 ([https](https://url.somewhere.com/path?id=1) result UnknownHostException). * [ ] http://url.somewhere.com/test.htm (UnknownHostException) with 2 occurrences migrated to:     https://url.somewhere.com/test.htm ([https](https://url.somewhere.com/test.htm) result UnknownHostException). * [ ] http://url.somewhere.com?a=b&c=d (UnknownHostException) with 1 occurrences migrated to:     https://url.somewhere.com?a=b&c=d ([https](https://url.somewhere.com?a=b&c=d) result UnknownHostException). * [ ] http://url.somewhere.com?foo= (UnknownHostException) with 2 occurrences migrated to:     https://url.somewhere.com?foo= ([https](https://url.somewhere.com?foo=) result UnknownHostException). * [ ] http://url.somewhere.com?foo=bar (UnknownHostException) with 4 occurrences migrated to:     https://url.somewhere.com?foo=bar ([https](https://url.somewhere.com?foo=bar) result UnknownHostException). * [ ] http://url.somewhere.com?foo=bar&a=b&c=d (UnknownHostException) with 2 occurrences migrated to:     https://url.somewhere.com?foo=bar&a=b&c=d ([https](https://url.somewhere.com?foo=bar&a=b&c=d) result UnknownHostException). * [ ] http://wiki.fasterxml.com/JacksonHome (UnknownHostException) with 3 occurrences migrated to:     https://wiki.fasterxml.com/JacksonHome ([https](https://wiki.fasterxml.com/JacksonHome) result UnknownHostException). * [ ] http://wiki.fasterxml.com/JacksonJsonViews (UnknownHostException) with 4 occurrences migrated to:     https://wiki.fasterxml.com/JacksonJsonViews ([https](https://wiki.fasterxml.com/JacksonJsonViews) result UnknownHostException). * [ ] http://x.y.z (UnknownHostException) with 2 occurrences migrated to:     https://x.y.z ([https](https://x.y.z) result UnknownHostException). * [ ] http://abc.com/v1 (301) with 1 occurrences migrated to:     https://abc.go.com/v1 ([https](https://abc.com/v1) result 404). * [ ] http://abc.com/v1/accounts/43 (301) with 1 occurrences migrated to:     https://abc.go.com/v1/accounts/43 ([https](https://abc.com/v1/accounts/43) result 404). * [ ] http://abc.com/v1/accounts?q=12 (301) with 1 occurrences migrated to:     https://abc.go.com/v1/accounts?q=12 ([https](https://abc.com/v1/accounts?q=12) result 404). * [ ] http://abc.com/v2/accounts?q=12 (301) with 1 occurrences migrated to:     https://abc.go.com/v2/accounts?q=12 ([https](https://abc.com/v2/accounts?q=12) result 404). * [ ] http://docs.spring.io/v1/bar (301) with 1 occurrences migrated to:     https://docs.spring.io/v1/bar ([https](https://docs.spring.io/v1/bar) result 404). * [ ] http://example.com/-foo (404) with 2 occurrences migrated to:     https://example.com/-foo ([https](https://example.com/-foo) result 404). * [ ] http://example.com/1 (404) with 1 occurrences migrated to:     https://example.com/1 ([https](https://example.com/1) result 404). * [ ] http://example.com/1/2 (404) with 2 occurrences migrated to:     https://example.com/1/2 ([https](https://example.com/1/2) result 404). * [ ] http://example.com/2 (404) with 1 occurrences migrated to:     https://example.com/2 ([https](https://example.com/2) result 404). * [ ] http://example.com/a%20b?q=a%2Bb (404) with 1 occurrences migrated to:     https://example.com/a%20b?q=a%2Bb ([https](https://example.com/a%20b?q=a%2Bb) result 404). * [ ] http://example.com/abc/ (404) with 1 occurrences migrated to:     https://example.com/abc/ ([https](https://example.com/abc/) result 404). * [ ] http://example.com/abc/x/y (404) with 1 occurrences migrated to:     https://example.com/abc/x/y ([https](https://example.com/abc/x/y) result 404). * [ ] http://example.com/abc/x/y/z (404) with 3 occurrences migrated to:     https://example.com/abc/x/y/z ([https](https://example.com/abc/x/y/z) result 404). * [ ] http://example.com/app/login/authenticate (404) with 1 occurrences migrated to:     https://example.com/app/login/authenticate ([https](https://example.com/app/login/authenticate) result 404). * [ ] http://example.com/arbitrary/path (404) with 1 occurrences migrated to:     https://example.com/arbitrary/path ([https](https://example.com/arbitrary/path) result 404). * [ ] http://example.com/bar (404) with 6 occurrences migrated to:     https://example.com/bar ([https](https://example.com/bar) result 404). * [ ] http://example.com/context.xml (404) with 4 occurrences migrated to:     https://example.com/context.xml ([https](https://example.com/context.xml) result 404). * [ ] http://example.com/example (404) with 6 occurrences migrated to:     https://example.com/example ([https](https://example.com/example) result 404). * [ ] http://example.com/example/?name (404) with 1 occurrences migrated to:     https://example.com/example/?name ([https](https://example.com/example/?name) result 404). * [ ] http://example.com/example/?name= (404) with 1 occurrences migrated to:     https://example.com/example/?name= ([https](https://example.com/example/?name=) result 404). * [ ] http://example.com/example/?name=%20 (404) with 1 occurrences migrated to:     https://example.com/example/?name=%20 ([https](https://example.com/example/?name=%20) result 404). * [ ] http://example.com/example/?name=row%5B0%5D (404) with 1 occurrences migrated to:     https://example.com/example/?name=row%5B0%5D ([https](https://example.com/example/?name=row%5B0%5D) result 404). * [ ] http://example.com/example/?name=value (404) with 1 occurrences migrated to:     https://example.com/example/?name=value ([https](https://example.com/example/?name=value) result 404). * [ ] http://example.com/example/?name=value¶m2=value+2 (404) with 1 occurrences migrated to:     https://example.com/example/?name=value¶m2=value+2 ([https](https://example.com/example/?name=value¶m2=value+2) result 404). * [ ] http://example.com/example/?row%5B0%5D=value (404) with 1 occurrences migrated to:     https://example.com/example/?row%5B0%5D=value ([https](https://example.com/example/?row%5B0%5D=value) result 404). * [ ] http://example.com/foo (404) with 6 occurrences migrated to:     https://example.com/foo ([https](https://example.com/foo) result 404). * [ ] http://example.com/foo/../bar (404) with 1 occurrences migrated to:     https://example.com/foo/../bar ([https](https://example.com/foo/../bar) result 404). * [ ] http://example.com/foo/foo2?bar (404) with 1 occurrences migrated to:     https://example.com/foo/foo2?bar ([https](https://example.com/foo/foo2?bar) result 404). * [ ] http://example.com/foo?bar (404) with 4 occurrences migrated to:     https://example.com/foo?bar ([https](https://example.com/foo?bar) result 404). * [ ] http://example.com/foo?bar= (404) with 2 occurrences migrated to:     https://example.com/foo?bar= ([https](https://example.com/foo?bar=) result 404). * [ ] http://example.com/foo?bar=baz (404) with 2 occurrences migrated to:     https://example.com/foo?bar=baz ([https](https://example.com/foo?bar=baz) result 404). * [ ] http://example.com/foo?baz=42 (404) with 1 occurrences migrated to:     https://example.com/foo?baz=42 ([https](https://example.com/foo?baz=42) result 404). * [ ] http://example.com/foo?foo=bar&baz=qux (404) with 2 occurrences migrated to:     https://example.com/foo?foo=bar&baz=qux ([https](https://example.com/foo?foo=bar&baz=qux) result 404). * [ ] http://example.com/hotel (404) with 3 occurrences migrated to:     https://example.com/hotel ([https](https://example.com/hotel) result 404). * [ ] http://example.com/hotel%20list (404) with 1 occurrences migrated to:     https://example.com/hotel%20list ([https](https://example.com/hotel%20list) result 404). * [ ] http://example.com/hotel%20list/Z (404) with 1 occurrences migrated to:     https://example.com/hotel%20list/Z ([https](https://example.com/hotel%20list/Z) result 404). * [ ] http://example.com/hotel%20list/Z%C3%BCrich (404) with 3 occurrences migrated to:     https://example.com/hotel%20list/Z%C3%BCrich ([https](https://example.com/hotel%20list/Z%C3%BCrich) result 404). * [ ] http://example.com/hotels (404) with 3 occurrences migrated to:     https://example.com/hotels ([https](https://example.com/hotels) result 404). * [ ] http://example.com/hotels/ (404) with 15 occurrences migrated to:     https://example.com/hotels/ ([https](https://example.com/hotels/) result 404). * [ ] http://example.com/hotels/1/bookings/42 (404) with 1 occurrences migrated to:     https://example.com/hotels/1/bookings/42 ([https](https://example.com/hotels/1/bookings/42) result 404). * [ ] http://example.com/hotels/1/pic/pics%2Flogo.png/size/150x150 (404) with 2 occurrences migrated to:     https://example.com/hotels/1/pic/pics%2Flogo.png/size/150x150 ([https](https://example.com/hotels/1/pic/pics%2Flogo.png/size/150x150) result 404). * [ ] http://example.com/hotels/1/pic/pics/logo.png (404) with 1 occurrences migrated to:     https://example.com/hotels/1/pic/pics/logo.png ([https](https://example.com/hotels/1/pic/pics/logo.png) result 404). * [ ] http://example.com/hotels/42/bookings/21 (404) with 1 occurrences migrated to:     https://example.com/hotels/42/bookings/21 ([https](https://example.com/hotels/42/bookings/21) result 404). * [ ] http://example.com/hotels/42/bookings/42 (404) with 1 occurrences migrated to:     https://example.com/hotels/42/bookings/42 ([https](https://example.com/hotels/42/bookings/42) result 404). * [ ] http://example.com/hotels/Rest%20%26%20Relax/bookings/42 (404) with 2 occurrences migrated to:     https://example.com/hotels/Rest%20%26%20Relax/bookings/42 ([https](https://example.com/hotels/Rest%20%26%20Relax/bookings/42) result 404). * [ ] http://example.com/info (404) with 2 occurrences migrated to:     https://example.com/info ([https](https://example.com/info) result 404). * [ ] http://example.com/invalid (404) with 1 occurrences migrated to:     https://example.com/invalid ([https](https://example.com/invalid) result 404). * [ ] http://example.com/jquery-1.11.0.min.js (404) with 2 occurrences migrated to:     https://example.com/jquery-1.11.0.min.js ([https](https://example.com/jquery-1.11.0.min.js) result 404). * [ ] http://example.com/match (404) with 1 occurrences migrated to:     https://example.com/match ([https](https://example.com/match) result 404). * [ ] http://example.com/myFileUpload (404) with 1 occurrences migrated to:     https://example.com/myFileUpload ([https](https://example.com/myFileUpload) result 404). * [ ] http://example.com/myForm (404) with 1 occurrences migrated to:     https://example.com/myForm ([https](https://example.com/myForm) result 404). * [ ] http://example.com/path (404) with 4 occurrences migrated to:     https://example.com/path ([https](https://example.com/path) result 404). * [ ] http://example.com/path?query (404) with 2 occurrences migrated to:     https://example.com/path?query ([https](https://example.com/path?query) result 404). * [ ] http://example.com/path?query=foo (404) with 1 occurrences migrated to:     https://example.com/path?query=foo ([https](https://example.com/path?query=foo) result 404). * [ ] http://example.com/people (404) with 1 occurrences migrated to:     https://example.com/people ([https](https://example.com/people) result 404). * [ ] http://example.com/people/ (404) with 1 occurrences migrated to:     https://example.com/people/ ([https](https://example.com/people/) result 404). * [ ] http://example.com/prefix/path (404) with 2 occurrences migrated to:     https://example.com/prefix/path ([https](https://example.com/prefix/path) result 404). * [ ] http://example.com/resource (404) with 5 occurrences migrated to:     https://example.com/resource ([https](https://example.com/resource) result 404). * [ ] http://example.com/resource?access_token=123 (404) with 1 occurrences migrated to:     https://example.com/resource?access_token=123 ([https](https://example.com/resource?access_token=123) result 404). * [ ] http://example.com/spaces (404) with 1 occurrences migrated to:     https://example.com/spaces ([https](https://example.com/spaces) result 404). * [ ] http://example.com/spaces%20and%20%E2%82%AC (404) with 3 occurrences migrated to:     https://example.com/spaces%20and%20%E2%82%AC ([https](https://example.com/spaces%20and%20%E2%82%AC) result 404). * [ ] http://example.com/spring/ (404) with 1 occurrences migrated to:     https://example.com/spring/ ([https](https://example.com/spring/) result 404). * [ ] http://example.com/test/this/here (404) with 1 occurrences migrated to:     https://example.com/test/this/here ([https](https://example.com/test/this/here) result 404). * [ ] http://example.com/upload (404) with 1 occurrences migrated to:     https://example.com/upload ([https](https://example.com/upload) result 404). * [ ] http://example.com/user (404) with 1 occurrences migrated to:     https://example.com/user ([https](https://example.com/user) result 404). * [ ] http://example.org/fonts/css (404) with 6 occurrences migrated to:     https://example.org/fonts/css ([https](https://example.org/fonts/css) result 404). * [ ] http://example.org/foo/page.html (404) with 1 occurrences migrated to:     https://example.org/foo/page.html ([https](https://example.org/foo/page.html) result 404). * [ ] http://example.org/image.png (404) with 4 occurrences migrated to:     https://example.org/image.png ([https](https://example.org/image.png) result 404). * [ ] http://example.org/music/people (404) with 4 occurrences migrated to:     https://example.org/music/people ([https](https://example.org/music/people) result 404). * [ ] http://example.org/page.cache.html (404) with 1 occurrences migrated to:     https://example.org/page.cache.html ([https](https://example.org/page.cache.html) result 404). * [ ] http://example.org/path (404) with 3 occurrences migrated to:     https://example.org/path ([https](https://example.org/path) result 404). * [ ] http://springframework.org/oxm-test (404) with 2 occurrences migrated to:     https://springframework.org/oxm-test ([https](https://springframework.org/oxm-test) result 404). * [ ] http://aaa.org:8080/app/b/c/d (301) with 1 occurrences migrated to:     https://www.aaa.org/app/b/c/d ([https](https://aaa.org:8080/app/b/c/d) result 404). * [ ] http://www.example.com/favicon.ico (404) with 2 occurrences migrated to:     https://www.example.com/favicon.ico ([https](https://www.example.com/favicon.ico) result 404). * [ ] http://www.example.com/foo/bar (404) with 1 occurrences migrated to:     https://www.example.com/foo/bar ([https](https://www.example.com/foo/bar) result 404). * [ ] http://www.example.com/hotels (404) with 2 occurrences migrated to:     https://www.example.com/hotels ([https](https://www.example.com/hotels) result 404). * [ ] http://www.example.com/user/ (404) with 4 occurrences migrated to:     https://www.example.com/user/ ([https](https://www.example.com/user/) result 404). * [ ] http://www.example.com/user/john%3Bdoe/dashboard (404) with 4 occurrences migrated to:     https://www.example.com/user/john%3Bdoe/dashboard ([https](https://www.example.com/user/john%3Bdoe/dashboard) result 404). * [ ] http://www.example.com/user/john;doe/dashboard (404) with 2 occurrences migrated to:     https://www.example.com/user/john;doe/dashboard ([https](https://www.example.com/user/john;doe/dashboard) result 404). * [ ] http://www.ibm.com/developerworks/websphere/library/techarticles/0404_tang/0404_tang.html (301) with 1 occurrences migrated to:     https://www.ibm.com/developerworks/websphere/library/techarticles/0404_tang/0404_tang.html ([https](https://www.ibm.com/developerworks/websphere/library/techarticles/0404_tang/0404_tang.html) result 404). * [ ] http://mydomain1.com:80/path (301) with 2 occurrences migrated to:     https://www.mydomain1.com/path ([https](https://mydomain1.com:80/path) result 404). * [ ] http://www.quartz-scheduler.org/documentation/quartz-2.1.x/tutorials/tutorial-lesson-03 (404) with 1 occurrences migrated to:     https://www.quartz-scheduler.org/documentation/quartz-2.1.x/tutorials/tutorial-lesson-03 ([https](https://www.quartz-scheduler.org/documentation/quartz-2.1.x/tutorials/tutorial-lesson-03) result 404). * [ ] http://www.utoronto.ca/webdocs/HTMLdocs/Book/Book-3ed/appb/mimetype.html (301) with 1 occurrences migrated to:     https://www.utoronto.ca/webdocs/HTMLdocs/Book/Book-3ed/appb/mimetype.html ([https](https://www.utoronto.ca/webdocs/HTMLdocs/Book/Book-3ed/appb/mimetype.html) result 404). * [ ] http://xml.apache.org/xslt (404) with 3 occurrences migrated to:     https://xml.apache.org/xslt ([https](https://xml.apache.org/xslt) result 404). * [ ] http://myhost.com/resource/path/myTemplate.txt (500) with 1 occurrences migrated to:     https://myhost.com/resource/path/myTemplate.txt ([https](https://myhost.com/resource/path/myTemplate.txt) result 500).  ## Fixed Success  These URLs were switched to an https URL with a 2xx status. While the status was successful, your review is still recommended.  * [ ] http://activemq.apache.org/delete-inactive-destinations.html with 1 occurrences migrated to:     https://activemq.apache.org/delete-inactive-destinations.html ([https](https://activemq.apache.org/delete-inactive-destinations.html) result 200). * [ ] http://activemq.apache.org/stomp.html with 1 occurrences migrated to:     https://activemq.apache.org/stomp.html ([https](https://activemq.apache.org/stomp.html) result 200). * [ ] http://ant.apache.org with 1 occurrences migrated to:     https://ant.apache.org ([https](https://ant.apache.org) result 200). * [ ] http://asciidoctor.org/ with 1 occurrences migrated to:     https://asciidoctor.org/ ([https](https://asciidoctor.org/) result 200). * [ ] http://asciidoctor.org/docs/editing-asciidoc-with-live-preview/ with 2 occurrences migrated to:     https://asciidoctor.org/docs/editing-asciidoc-with-live-preview/ ([https](https://asciidoctor.org/docs/editing-asciidoc-with-live-preview/) result 200). * [ ] http://beanvalidation.org/ with 1 occurrences migrated to:     https://beanvalidation.org/ ([https](https://beanvalidation.org/) result 200). * [ ] http://caniuse.com/ with 2 occurrences migrated to:     https://caniuse.com/ ([https](https://caniuse.com/) result 200). * [ ] http://castor-data-binding.github.io/castor/reference-guides/1.3.3/html-single/index.html with 2 occurrences migrated to:     https://castor-data-binding.github.io/castor/reference-guides/1.3.3/html-single/index.html ([https](https://castor-data-binding.github.io/castor/reference-guides/1.3.3/html-single/index.html) result 200). * [ ] http://cbor.io/ with 1 occurrences migrated to:     https://cbor.io/ ([https](https://cbor.io/) result 200). * [ ] http://code.jquery.com/jquery-1.11.0.min.js with 2 occurrences migrated to:     https://code.jquery.com/jquery-1.11.0.min.js ([https](https://code.jquery.com/jquery-1.11.0.min.js) result 200). * [ ] http://code.jquery.com/jquery.js with 1 occurrences migrated to:     https://code.jquery.com/jquery.js ([https](https://code.jquery.com/jquery.js) result 200). * [ ] http://commons.apache.org/proper/commons-lang/ with 2 occurrences migrated to:     https://commons.apache.org/proper/commons-lang/ ([https](https://commons.apache.org/proper/commons-lang/) result 200). * [ ] http://docs.oracle.com/javase/6/docs/api/java/lang/instrument/package-summary.html with 1 occurrences migrated to:     https://docs.oracle.com/javase/6/docs/api/java/lang/instrument/package-summary.html ([https](https://docs.oracle.com/javase/6/docs/api/java/lang/instrument/package-summary.html) result 200). * [ ] http://docs.oracle.com/javase/8/docs/api/java/beans/package-summary.html with 1 occurrences migrated to:     https://docs.oracle.com/javase/8/docs/api/java/beans/package-summary.html ([https](https://docs.oracle.com/javase/8/docs/api/java/beans/package-summary.html) result 200). * [ ] http://docs.oracle.com/javase/8/docs/api/java/lang/instrument/package-summary.html with 1 occurrences migrated to:     https://docs.oracle.com/javase/8/docs/api/java/lang/instrument/package-summary.html ([https](https://docs.oracle.com/javase/8/docs/api/java/lang/instrument/package-summary.html) result 200). * [ ] http://docs.oracle.com/javase/8/docs/api/javax/script/ScriptEngineFactory.html with 2 occurrences migrated to:     https://docs.oracle.com/javase/8/docs/api/javax/script/ScriptEngineFactory.html ([https](https://docs.oracle.com/javase/8/docs/api/javax/script/ScriptEngineFactory.html) result 200). * [ ] http://docs.oracle.com/javase/tutorial/javabeans/advanced/customization.html with 1 occurrences migrated to:     https://docs.oracle.com/javase/tutorial/javabeans/advanced/customization.html ([https](https://docs.oracle.com/javase/tutorial/javabeans/advanced/customization.html) result 200). * [ ] http://docs.oracle.com/javase/tutorial/javabeans/writing/properties.html with 1 occurrences migrated to:     https://docs.oracle.com/javase/tutorial/javabeans/writing/properties.html ([https](https://docs.oracle.com/javase/tutorial/javabeans/writing/properties.html) result 200). * [ ] http://docs.seleniumhq.org/ with 1 occurrences migrated to:     https://docs.seleniumhq.org/ ([https](https://docs.seleniumhq.org/) result 200). * [ ] http://docs.seleniumhq.org/projects/webdriver/ with 1 occurrences migrated to:     https://docs.seleniumhq.org/projects/webdriver/ ([https](https://docs.seleniumhq.org/projects/webdriver/) result 200). * [ ] http://docs.spring.io/spring-framework/docs/current/javadoc-api/ with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/ ([https](https://docs.spring.io/spring-framework/docs/current/javadoc-api/) result 200). * [ ] http://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/servlet/view/script/ScriptTemplateView.html with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/servlet/view/script/ScriptTemplateView.html ([https](https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/servlet/view/script/ScriptTemplateView.html) result 200). * [ ] http://docs.spring.io/spring-framework/docs/current/spring-framework-reference/ with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/ ([https](https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/) result 200). * [ ] http://docs.spring.io/spring-session/docs/current/reference/html5/ with 1 occurrences migrated to:     https://docs.spring.io/spring-session/docs/current/reference/html5/ ([https](https://docs.spring.io/spring-session/docs/current/reference/html5/) result 200). * [ ] http://en.wikipedia.org/wiki/Adapter_pattern with 1 occurrences migrated to:     https://en.wikipedia.org/wiki/Adapter_pattern ([https](https://en.wikipedia.org/wiki/Adapter_pattern) result 200). * [ ] http://en.wikipedia.org/wiki/Halting_Problem with 1 occurrences migrated to:     https://en.wikipedia.org/wiki/Halting_Problem ([https](https://en.wikipedia.org/wiki/Halting_Problem) result 200). * [ ] http://en.wikipedia.org/wiki/List_of_HTTP_status_codes with 1 occurrences migrated to:     https://en.wikipedia.org/wiki/List_of_HTTP_status_codes ([https](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes) result 200). * [ ] http://en.wikipedia.org/wiki/MIME with 1 occurrences migrated to:     https://en.wikipedia.org/wiki/MIME ([https](https://en.wikipedia.org/wiki/MIME) result 200). * [ ] http://en.wikipedia.org/wiki/Mock_Object with 1 occurrences migrated to:     https://en.wikipedia.org/wiki/Mock_Object ([https](https://en.wikipedia.org/wiki/Mock_Object) result 200). * [ ] http://en.wikipedia.org/wiki/Polyfill with 2 occurrences migrated to:     https://en.wikipedia.org/wiki/Polyfill ([https](https://en.wikipedia.org/wiki/Polyfill) result 200). * [ ] http://example.com with 132 occurrences migrated to:     https://example.com ([https](https://example.com) result 200). * [ ] http://example.com/ with 16 occurrences migrated to:     https://example.com/ ([https](https://example.com/) result 200). * [ ] http://example.com?foo with 2 occurrences migrated to:     https://example.com?foo ([https](https://example.com?foo) result 200). * [ ] http://example.com?foo=bar with 8 occurrences migrated to:     https://example.com?foo=bar ([https](https://example.com?foo=bar) result 200). * [ ] http://example.com?foo=bar@baz with 1 occurrences migrated to:     https://example.com?foo=bar@baz ([https](https://example.com?foo=bar@baz) result 200). * [ ] http://example.org with 18 occurrences migrated to:     https://example.org ([https](https://example.org) result 200). * [ ] http://example.org/ with 1 occurrences migrated to:     https://example.org/ ([https](https://example.org/) result 200). * [ ] http://fasterxml.github.io/jackson-databind/javadoc/2.6/com/fasterxml/jackson/databind/DeserializationFeature.html with 2 occurrences migrated to:     https://fasterxml.github.io/jackson-databind/javadoc/2.6/com/fasterxml/jackson/databind/DeserializationFeature.html ([https](https://fasterxml.github.io/jackson-databind/javadoc/2.6/com/fasterxml/jackson/databind/DeserializationFeature.html) result 200). * [ ] http://fasterxml.github.io/jackson-databind/javadoc/2.6/com/fasterxml/jackson/databind/MapperFeature.html with 2 occurrences migrated to:     https://fasterxml.github.io/jackson-databind/javadoc/2.6/com/fasterxml/jackson/databind/MapperFeature.html ([https](https://fasterxml.github.io/jackson-databind/javadoc/2.6/com/fasterxml/jackson/databind/MapperFeature.html) result 200). * [ ] http://h2database.com with 1 occurrences migrated to:     https://h2database.com ([https](https://h2database.com) result 200). * [ ] http://handlebarsjs.com with 2 occurrences migrated to:     https://handlebarsjs.com ([https](https://handlebarsjs.com) result 200). * [ ] http://handlebarsjs.com/ with 2 occurrences migrated to:     https://handlebarsjs.com/ ([https](https://handlebarsjs.com/) result 200). * [ ] http://hc.apache.org/httpcomponents-asyncclient-dev/ with 1 occurrences migrated to:     https://hc.apache.org/httpcomponents-asyncclient-dev/ ([https](https://hc.apache.org/httpcomponents-asyncclient-dev/) result 200). * [ ] http://hc.apache.org/httpcomponents-client-ga/ with 2 occurrences migrated to:     https://hc.apache.org/httpcomponents-client-ga/ ([https](https://hc.apache.org/httpcomponents-client-ga/) result 200). * [ ] http://hc.apache.org/httpcomponents-client-ga/httpclient/ with 1 occurrences migrated to:     https://hc.apache.org/httpcomponents-client-ga/httpclient/ ([https](https://hc.apache.org/httpcomponents-client-ga/httpclient/) result 200). * [ ] http://www.hibernate.org/ (301) with 1 occurrences migrated to:     https://hibernate.org/ ([https](https://www.hibernate.org/) result 200). * [ ] http://www.hibernate.org (301) with 1 occurrences migrated to:     https://hibernate.org/ ([https](https://www.hibernate.org) result 200). * [ ] http://jcp.org/aboutJava/communityprocess/final/jsr003/index3.html with 1 occurrences migrated to:     https://jcp.org/aboutJava/communityprocess/final/jsr003/index3.html ([https](https://jcp.org/aboutJava/communityprocess/final/jsr003/index3.html) result 200). * [ ] http://jcp.org/aboutJava/communityprocess/final/jsr160/index.html with 1 occurrences migrated to:     https://jcp.org/aboutJava/communityprocess/final/jsr160/index.html ([https](https://jcp.org/aboutJava/communityprocess/final/jsr160/index.html) result 200). * [ ] http://jcp.org/en/jsr/detail?id=107 with 1 occurrences migrated to:     https://jcp.org/en/jsr/detail?id=107 ([https](https://jcp.org/en/jsr/detail?id=107) result 200). * [ ] http://joel-costigliola.github.io/assertj/ with 3 occurrences migrated to:     https://joel-costigliola.github.io/assertj/ ([https](https://joel-costigliola.github.io/assertj/) result 200). * [ ] http://jsonassert.skyscreamer.org with 1 occurrences migrated to:     https://jsonassert.skyscreamer.org ([https](https://jsonassert.skyscreamer.org) result 200). * [ ] http://jsonassert.skyscreamer.org/ with 5 occurrences migrated to:     https://jsonassert.skyscreamer.org/ ([https](https://jsonassert.skyscreamer.org/) result 200). * [ ] http://junit.org/junit5/docs/current/user-guide/ with 2 occurrences migrated to:     https://junit.org/junit5/docs/current/user-guide/ ([https](https://junit.org/junit5/docs/current/user-guide/) result 200). * [ ] http://kotlinlang.org/ with 2 occurrences migrated to:     https://kotlinlang.org/ ([https](https://kotlinlang.org/) result 200). * [ ] http://kotlinlang.org/docs/reference/ with 1 occurrences migrated to:     https://kotlinlang.org/docs/reference/ ([https](https://kotlinlang.org/docs/reference/) result 200). * [ ] http://kotlinlang.org/docs/reference/classes.html with 3 occurrences migrated to:     https://kotlinlang.org/docs/reference/classes.html ([https](https://kotlinlang.org/docs/reference/classes.html) result 200). * [ ] http://mydomain.com with 5 occurrences migrated to:     https://mydomain.com ([https](https://mydomain.com) result 200). * [ ] http://netty.io/ with 1 occurrences migrated to:     https://netty.io/ ([https](https://netty.io/) result 200). * [ ] http://openjdk.java.net/jeps/290 with 1 occurrences migrated to:     https://openjdk.java.net/jeps/290 ([https](https://openjdk.java.net/jeps/290) result 200). * [ ] http://openjdk.java.net/projects/nashorn/ with 10 occurrences migrated to:     https://openjdk.java.net/projects/nashorn/ ([https](https://openjdk.java.net/projects/nashorn/) result 200). * [ ] http://poi.apache.org with 3 occurrences migrated to:     https://poi.apache.org ([https](https://poi.apache.org) result 200). * [ ] http://projects.spring.io/spring-boot/ with 1 occurrences migrated to:     https://projects.spring.io/spring-boot/ ([https](https://projects.spring.io/spring-boot/) result 200). * [ ] http://projects.spring.io/spring-data/ with 1 occurrences migrated to:     https://projects.spring.io/spring-data/ ([https](https://projects.spring.io/spring-data/) result 200). * [ ] http://projects.spring.io/spring-framework/ with 1 occurrences migrated to:     https://projects.spring.io/spring-framework/ ([https](https://projects.spring.io/spring-framework/) result 200). * [ ] http://projects.spring.io/spring-integration/ with 1 occurrences migrated to:     https://projects.spring.io/spring-integration/ ([https](https://projects.spring.io/spring-integration/) result 200). * [ ] http://projects.spring.io/spring-security/ with 3 occurrences migrated to:     https://projects.spring.io/spring-security/ ([https](https://projects.spring.io/spring-security/) result 200). * [ ] http://repo1.maven.org/maven2/javax/inject/javax.inject/1/ with 2 occurrences migrated to:     https://repo1.maven.org/maven2/javax/inject/javax.inject/1/ ([https](https://repo1.maven.org/maven2/javax/inject/javax.inject/1/) result 200). * [ ] http://schema.spring.io/mvc/spring-mvc.xsd with 1 occurrences migrated to:     https://schema.spring.io/mvc/spring-mvc.xsd ([https](https://schema.spring.io/mvc/spring-mvc.xsd) result 200). * [ ] http://search.maven.org/ with 2 occurrences migrated to:     https://search.maven.org/ ([https](https://search.maven.org/) result 200). * [ ] http://sockjs.github.io/sockjs-protocol/sockjs-protocol-0.3.3.html with 3 occurrences migrated to:     https://sockjs.github.io/sockjs-protocol/sockjs-protocol-0.3.3.html ([https](https://sockjs.github.io/sockjs-protocol/sockjs-protocol-0.3.3.html) result 200). * [ ] http://sourceforge.net with 1 occurrences migrated to:     https://sourceforge.net ([https](https://sourceforge.net) result 200). * [ ] http://sourceforge.net/projects/javadiff/ with 1 occurrences migrated to:     https://sourceforge.net/projects/javadiff/ ([https](https://sourceforge.net/projects/javadiff/) result 200). * [ ] http://sourceforge.net/sflogo.php?group_id=37160 with 1 occurrences migrated to:     https://sourceforge.net/sflogo.php?group_id=37160 ([https](https://sourceforge.net/sflogo.php?group_id=37160) result 200). * [ ] http://spring.io/blog/ with 1 occurrences migrated to:     https://spring.io/blog/ ([https](https://spring.io/blog/) result 200). * [ ] http://spring.io/blog/category/news with 1 occurrences migrated to:     https://spring.io/blog/category/news ([https](https://spring.io/blog/category/news) result 200). * [ ] http://square.github.io/okhttp/ with 1 occurrences migrated to:     https://square.github.io/okhttp/ ([https](https://square.github.io/okhttp/) result 200). * [ ] http://stackoverflow.com/questions/1481251/what-does-document-domain-document-domain-do with 1 occurrences migrated to:     https://stackoverflow.com/questions/1481251/what-does-document-domain-document-domain-do ([https](https://stackoverflow.com/questions/1481251/what-does-document-domain-document-domain-do) result 200). * [ ] http://stackoverflow.com/questions/19394570/java-jre-7u45-breaks-classloader-getresources with 2 occurrences migrated to:     https://stackoverflow.com/questions/19394570/java-jre-7u45-breaks-classloader-getresources ([https](https://stackoverflow.com/questions/19394570/java-jre-7u45-breaks-classloader-getresources) result 200). * [ ] http://stackoverflow.com/questions/22986109/testing-spring-managed-servlet with 1 occurrences migrated to:     https://stackoverflow.com/questions/22986109/testing-spring-managed-servlet ([https](https://stackoverflow.com/questions/22986109/testing-spring-managed-servlet) result 200). * [ ] http://stackoverflow.com/questions/24725438/what-could-cause-a-class-implementing-applicationlistenercontextrefreshedevent with 1 occurrences migrated to:     https://stackoverflow.com/questions/24725438/what-could-cause-a-class-implementing-applicationlistenercontextrefreshedevent ([https](https://stackoverflow.com/questions/24725438/what-could-cause-a-class-implementing-applicationlistenercontextrefreshedevent) result 200). * [ ] http://stackoverflow.com/questions/35733344/can-contextconfiguration-in-a-custom-annotation-be-merged with 1 occurrences migrated to:     https://stackoverflow.com/questions/35733344/can-contextconfiguration-in-a-custom-annotation-be-merged ([https](https://stackoverflow.com/questions/35733344/can-contextconfiguration-in-a-custom-annotation-be-merged) result 200). * [ ] http://start.spring.io/ with 2 occurrences migrated to:     https://start.spring.io/ ([https](https://start.spring.io/) result 200). * [ ] http://stas-blogspot.blogspot.com/2010/03/java-bridge-methods-explained.html with 1 occurrences migrated to:     https://stas-blogspot.blogspot.com/2010/03/java-bridge-methods-explained.html ([https](https://stas-blogspot.blogspot.com/2010/03/java-bridge-methods-explained.html) result 200). * [ ] http://stomp.github.io/stomp-specification-1.2.html with 9 occurrences migrated to:     https://stomp.github.io/stomp-specification-1.2.html ([https](https://stomp.github.io/stomp-specification-1.2.html) result 200). * [ ] http://struts.apache.org with 1 occurrences migrated to:     https://struts.apache.org ([https](https://struts.apache.org) result 200). * [ ] http://struts.apache.org/ with 1 occurrences migrated to:     https://struts.apache.org/ ([https](https://struts.apache.org/) result 200). * [ ] http://tapestry.apache.org/ with 2 occurrences migrated to:     https://tapestry.apache.org/ ([https](https://tapestry.apache.org/) result 200). * [ ] http://tiles.apache.org with 4 occurrences migrated to:     https://tiles.apache.org ([https](https://tiles.apache.org) result 200). * [ ] http://tiles.apache.org/framework/dependency-management.html with 1 occurrences migrated to:     https://tiles.apache.org/framework/dependency-management.html ([https](https://tiles.apache.org/framework/dependency-management.html) result 200). * [ ] http://tools.ietf.org/html/rfc1945 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc1945 ([https](https://tools.ietf.org/html/rfc1945) result 200). * [ ] http://tools.ietf.org/html/rfc2109 with 2 occurrences migrated to:     https://tools.ietf.org/html/rfc2109 ([https](https://tools.ietf.org/html/rfc2109) result 200). * [ ] http://tools.ietf.org/html/rfc2295 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc2295 ([https](https://tools.ietf.org/html/rfc2295) result 200). * [ ] http://tools.ietf.org/html/rfc2324 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc2324 ([https](https://tools.ietf.org/html/rfc2324) result 200). * [ ] http://tools.ietf.org/html/rfc2518 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc2518 ([https](https://tools.ietf.org/html/rfc2518) result 200). * [ ] http://tools.ietf.org/html/rfc2616 with 3 occurrences migrated to:     https://tools.ietf.org/html/rfc2616 ([https](https://tools.ietf.org/html/rfc2616) result 200). * [ ] http://tools.ietf.org/html/rfc2774 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc2774 ([https](https://tools.ietf.org/html/rfc2774) result 200). * [ ] http://tools.ietf.org/html/rfc2817 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc2817 ([https](https://tools.ietf.org/html/rfc2817) result 200). * [ ] http://tools.ietf.org/html/rfc2965 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc2965 ([https](https://tools.ietf.org/html/rfc2965) result 200). * [ ] http://tools.ietf.org/html/rfc3229 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc3229 ([https](https://tools.ietf.org/html/rfc3229) result 200). * [ ] http://tools.ietf.org/html/rfc3986 with 3 occurrences migrated to:     https://tools.ietf.org/html/rfc3986 ([https](https://tools.ietf.org/html/rfc3986) result 200). * [ ] http://tools.ietf.org/html/rfc4918 with 5 occurrences migrated to:     https://tools.ietf.org/html/rfc4918 ([https](https://tools.ietf.org/html/rfc4918) result 200). * [ ] http://tools.ietf.org/html/rfc5842 with 2 occurrences migrated to:     https://tools.ietf.org/html/rfc5842 ([https](https://tools.ietf.org/html/rfc5842) result 200). * [ ] http://tools.ietf.org/html/rfc5988 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc5988 ([https](https://tools.ietf.org/html/rfc5988) result 200). * [ ] http://tools.ietf.org/html/rfc6202 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc6202 ([https](https://tools.ietf.org/html/rfc6202) result 200). * [ ] http://tools.ietf.org/html/rfc6266 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc6266 ([https](https://tools.ietf.org/html/rfc6266) result 200). * [ ] http://tools.ietf.org/html/rfc6454 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc6454 ([https](https://tools.ietf.org/html/rfc6454) result 200). * [ ] http://tools.ietf.org/html/rfc6455 with 2 occurrences migrated to:     https://tools.ietf.org/html/rfc6455 ([https](https://tools.ietf.org/html/rfc6455) result 200). * [ ] http://tools.ietf.org/html/rfc6585 with 4 occurrences migrated to:     https://tools.ietf.org/html/rfc6585 ([https](https://tools.ietf.org/html/rfc6585) result 200). * [ ] http://tools.ietf.org/html/rfc7230 with 10 occurrences migrated to:     https://tools.ietf.org/html/rfc7230 ([https](https://tools.ietf.org/html/rfc7230) result 200). * [ ] http://tools.ietf.org/html/rfc7231 with 56 occurrences migrated to:     https://tools.ietf.org/html/rfc7231 ([https](https://tools.ietf.org/html/rfc7231) result 200). * [ ] http://tools.ietf.org/html/rfc7232 with 8 occurrences migrated to:     https://tools.ietf.org/html/rfc7232 ([https](https://tools.ietf.org/html/rfc7232) result 200). * [ ] http://tools.ietf.org/html/rfc7233 with 12 occurrences migrated to:     https://tools.ietf.org/html/rfc7233 ([https](https://tools.ietf.org/html/rfc7233) result 200). * [ ] http://tools.ietf.org/html/rfc7234 with 5 occurrences migrated to:     https://tools.ietf.org/html/rfc7234 ([https](https://tools.ietf.org/html/rfc7234) result 200). * [ ] http://tools.ietf.org/html/rfc7235 with 6 occurrences migrated to:     https://tools.ietf.org/html/rfc7235 ([https](https://tools.ietf.org/html/rfc7235) result 200). * [ ] http://tools.ietf.org/html/rfc7238 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc7238 ([https](https://tools.ietf.org/html/rfc7238) result 200). * [ ] http://tools.ietf.org/html/rfc7239 with 7 occurrences migrated to:     https://tools.ietf.org/html/rfc7239 ([https](https://tools.ietf.org/html/rfc7239) result 200). * [ ] http://tools.ietf.org/rfcdiff?difftype=--hwdiff&url2=draft-ietf-webdav-protocol-06.txt with 3 occurrences migrated to:     https://tools.ietf.org/rfcdiff?difftype=--hwdiff&url2=draft-ietf-webdav-protocol-06.txt ([https](https://tools.ietf.org/rfcdiff?difftype=--hwdiff&url2=draft-ietf-webdav-protocol-06.txt) result 200). * [ ] http://unlicense.org with 1 occurrences migrated to:     https://unlicense.org ([https](https://unlicense.org) result 200). * [ ] http://www.amazon.com/exec/obidos/tg/detail/-/0764543857/ with 10 occurrences migrated to:     https://www.amazon.com/exec/obidos/tg/detail/-/0764543857/ ([https](https://www.amazon.com/exec/obidos/tg/detail/-/0764543857/) result 200). * [ ] http://www.apache.org with 1 occurrences migrated to:     https://www.apache.org ([https](https://www.apache.org) result 200). * [ ] http://www.apple.com/DTDs/PropertyList-1.0.dtd with 6 occurrences migrated to:     https://www.apple.com/DTDs/PropertyList-1.0.dtd ([https](https://www.apple.com/DTDs/PropertyList-1.0.dtd) result 200). * [ ] http://www.atomikos.com/ with 1 occurrences migrated to:     https://www.atomikos.com/ ([https](https://www.atomikos.com/) result 200). * [ ] http://www.baeldung.com/kotlin-null-safety with 1 occurrences migrated to:     https://www.baeldung.com/kotlin-null-safety ([https](https://www.baeldung.com/kotlin-null-safety) result 200). * [ ] http://www.eclipse.org/aspectj/doc/released/devguide/index.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/released/devguide/index.html ([https](https://www.eclipse.org/aspectj/doc/released/devguide/index.html) result 200). * [ ] http://www.eclipse.org/aspectj/doc/released/devguide/ltw-configuration.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/released/devguide/ltw-configuration.html ([https](https://www.eclipse.org/aspectj/doc/released/devguide/ltw-configuration.html) result 200). * [ ] http://www.eclipse.org/aspectj/dtd/aspectj.dtd with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/dtd/aspectj.dtd ([https](https://www.eclipse.org/aspectj/dtd/aspectj.dtd) result 200). * [ ] http://ehcache.sourceforge.net (301) with 1 occurrences migrated to:     https://www.ehcache.org/ ([https](https://ehcache.sourceforge.net) result 200). * [ ] http://ehcache.org/ (301) with 1 occurrences migrated to:     https://www.ehcache.org/ ([https](https://ehcache.org/) result 200). * [ ] http://www.embeddedjs.com/ with 2 occurrences migrated to:     https://www.embeddedjs.com/ ([https](https://www.embeddedjs.com/) result 200). * [ ] http://www.enterpriseintegrationpatterns.com with 1 occurrences migrated to:     https://www.enterpriseintegrationpatterns.com ([https](https://www.enterpriseintegrationpatterns.com) result 200). * [ ] http://www.example.org/?param=aGVsbG9Xb3JsZA%3D%3D with 1 occurrences migrated to:     https://www.example.org/?param=aGVsbG9Xb3JsZA%3D%3D ([https](https://www.example.org/?param=aGVsbG9Xb3JsZA%3D%3D) result 200). * [ ] http://www.google.com with 2 occurrences migrated to:     https://www.google.com ([https](https://www.google.com) result 200). * [ ] http://www.h2database.com with 1 occurrences migrated to:     https://www.h2database.com ([https](https://www.h2database.com) result 200). * [ ] http://www.h2database.com/html/grammar.html with 1 occurrences migrated to:     https://www.h2database.com/html/grammar.html ([https](https://www.h2database.com/html/grammar.html) result 200). * [ ] http://www.ietf.org with 1 occurrences migrated to:     https://www.ietf.org ([https](https://www.ietf.org) result 200). * [ ] http://www.ietf.org/rfc/rfc1867.txt with 1 occurrences migrated to:     https://www.ietf.org/rfc/rfc1867.txt ([https](https://www.ietf.org/rfc/rfc1867.txt) result 200). * [ ] http://www.ietf.org/rfc/rfc2396.txt with 2 occurrences migrated to:     https://www.ietf.org/rfc/rfc2396.txt ([https](https://www.ietf.org/rfc/rfc2396.txt) result 200). * [ ] http://www.ietf.org/rfc/rfc3986.txt with 11 occurrences migrated to:     https://www.ietf.org/rfc/rfc3986.txt ([https](https://www.ietf.org/rfc/rfc3986.txt) result 200). * [ ] http://www.infoq.com/ with 1 occurrences migrated to:     https://www.infoq.com/ ([https](https://www.infoq.com/) result 200). * [ ] http://www.infoq.com/minibooks/JTDS with 1 occurrences migrated to:     https://www.infoq.com/minibooks/JTDS ([https](https://www.infoq.com/minibooks/JTDS) result 200). * [ ] http://www.jetbrains.com/idea/ with 1 occurrences migrated to:     https://www.jetbrains.com/idea/ ([https](https://www.jetbrains.com/idea/) result 200). * [ ] http://www.json.org/ with 1 occurrences migrated to:     https://www.json.org/ ([https](https://www.json.org/) result 200). * [ ] http://www.jython.org with 2 occurrences migrated to:     https://www.jython.org ([https](https://www.jython.org) result 200). * [ ] http://www.jython.org/ with 2 occurrences migrated to:     https://www.jython.org/ ([https](https://www.jython.org/) result 200). * [ ] http://www.lowagie.com/iText with 2 occurrences migrated to:     https://www.lowagie.com/iText ([https](https://www.lowagie.com/iText) result 200). * [ ] http://www.manpagez.com/man/5/crontab/ with 1 occurrences migrated to:     https://www.manpagez.com/man/5/crontab/ ([https](https://www.manpagez.com/man/5/crontab/) result 200). * [ ] http://mydomain1.com:80/ (301) with 2 occurrences migrated to:     https://www.mydomain1.com/ ([https](https://mydomain1.com:80/) result 200). * [ ] http://mydomain1.com:80 (301) with 1 occurrences migrated to:     https://www.mydomain1.com/ ([https](https://mydomain1.com:80) result 200). * [ ] http://www.oracle.com/technetwork/articles/javaee/jpa-137156.html with 1 occurrences migrated to:     https://www.oracle.com/technetwork/articles/javaee/jpa-137156.html ([https](https://www.oracle.com/technetwork/articles/javaee/jpa-137156.html) result 200). * [ ] http://www.oracle.com/technetwork/java/javaee/javaserverfaces-139869.html with 1 occurrences migrated to:     https://www.oracle.com/technetwork/java/javaee/javaserverfaces-139869.html ([https](https://www.oracle.com/technetwork/java/javaee/javaserverfaces-139869.html) result 200). * [ ] http://www.oracle.com/technetwork/java/javase/documentation/spec-136004.html with 1 occurrences migrated to:     https://www.oracle.com/technetwork/java/javase/documentation/spec-136004.html ([https](https://www.oracle.com/technetwork/java/javase/documentation/spec-136004.html) result 200). * [ ] http://www.oracle.com/technetwork/java/javase/tech/download-jsp-141676.html with 1 occurrences migrated to:     https://www.oracle.com/technetwork/java/javase/tech/download-jsp-141676.html ([https](https://www.oracle.com/technetwork/java/javase/tech/download-jsp-141676.html) result 200). * [ ] http://www.oracle.com/technetwork/java/javase/tech/javamanagement-140525.html with 1 occurrences migrated to:     https://www.oracle.com/technetwork/java/javase/tech/javamanagement-140525.html ([https](https://www.oracle.com/technetwork/java/javase/tech/javamanagement-140525.html) result 200). * [ ] http://www.ow2.org/ with 1 occurrences migrated to:     https://www.ow2.org/ ([https](https://www.ow2.org/) result 200). * [ ] http://www.owasp.org/index.php/HTTPOnly with 4 occurrences migrated to:     https://www.owasp.org/index.php/HTTPOnly ([https](https://www.owasp.org/index.php/HTTPOnly) result 200). * [ ] http://quartz-scheduler.org (301) with 3 occurrences migrated to:     https://www.quartz-scheduler.org/ ([https](https://quartz-scheduler.org) result 200). * [ ] http://www.rabbitmq.com/stomp.html with 1 occurrences migrated to:     https://www.rabbitmq.com/stomp.html ([https](https://www.rabbitmq.com/stomp.html) result 200). * [ ] http://www.reactive-streams.org with 1 occurrences migrated to:     https://www.reactive-streams.org ([https](https://www.reactive-streams.org) result 200). * [ ] http://www.reactive-streams.org/ with 2 occurrences migrated to:     https://www.reactive-streams.org/ ([https](https://www.reactive-streams.org/) result 200). * [ ] http://www.reactive-streams.org/reactive-streams-1.0.1-javadoc/org/reactivestreams/Publisher.html with 1 occurrences migrated to:     https://www.reactive-streams.org/reactive-streams-1.0.1-javadoc/org/reactivestreams/Publisher.html ([https](https://www.reactive-streams.org/reactive-streams-1.0.1-javadoc/org/reactivestreams/Publisher.html) result 200). * [ ] http://www.reactive-streams.org/reactive-streams-1.0.1-javadoc/org/reactivestreams/Subscriber.html with 1 occurrences migrated to:     https://www.reactive-streams.org/reactive-streams-1.0.1-javadoc/org/reactivestreams/Subscriber.html ([https](https://www.reactive-streams.org/reactive-streams-1.0.1-javadoc/org/reactivestreams/Subscriber.html) result 200). * [ ] http://seleniumhq.org/projects/webdriver/ (301) with 1 occurrences migrated to:     https://www.seleniumhq.org ([https](https://seleniumhq.org/projects/webdriver/) result 200). * [ ] http://www.springbyexample.org/examples/custom-thread-scope-module.html with 1 occurrences migrated to:     https://www.springbyexample.org/examples/custom-thread-scope-module.html ([https](https://www.springbyexample.org/examples/custom-thread-scope-module.html) result 200). * [ ] http://www.springframework.org/dtd/spring-beans-2.0.dtd with 3 occurrences migrated to:     https://www.springframework.org/dtd/spring-beans-2.0.dtd ([https](https://www.springframework.org/dtd/spring-beans-2.0.dtd) result 200). * [ ] http://www.springframework.org/schema/aop/spring-aop.xsd with 12 occurrences migrated to:     https://www.springframework.org/schema/aop/spring-aop.xsd ([https](https://www.springframework.org/schema/aop/spring-aop.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans.xsd with 80 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans.xsd ([https](https://www.springframework.org/schema/beans/spring-beans.xsd) result 200). * [ ] http://www.springframework.org/schema/cache/spring-cache.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/cache/spring-cache.xsd ([https](https://www.springframework.org/schema/cache/spring-cache.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context.xsd with 13 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context.xsd ([https](https://www.springframework.org/schema/context/spring-context.xsd) result 200). * [ ] http://www.springframework.org/schema/jdbc/spring-jdbc.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-jdbc.xsd ([https](https://www.springframework.org/schema/jdbc/spring-jdbc.xsd) result 200). * [ ] http://www.springframework.org/schema/jee/spring-jee.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/jee/spring-jee.xsd ([https](https://www.springframework.org/schema/jee/spring-jee.xsd) result 200). * [ ] http://www.springframework.org/schema/jms/spring-jms.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/jms/spring-jms.xsd ([https](https://www.springframework.org/schema/jms/spring-jms.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang.xsd with 4 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang.xsd ([https](https://www.springframework.org/schema/lang/spring-lang.xsd) result 200). * [ ] http://www.springframework.org/schema/mvc/spring-mvc.xsd with 3 occurrences migrated to:     https://www.springframework.org/schema/mvc/spring-mvc.xsd ([https](https://www.springframework.org/schema/mvc/spring-mvc.xsd) result 200). * [ ] http://www.springframework.org/schema/oxm/spring-oxm.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/oxm/spring-oxm.xsd ([https](https://www.springframework.org/schema/oxm/spring-oxm.xsd) result 200). * [ ] http://www.springframework.org/schema/tool/spring-tool.xsd with 13 occurrences migrated to:     https://www.springframework.org/schema/tool/spring-tool.xsd ([https](https://www.springframework.org/schema/tool/spring-tool.xsd) result 200). * [ ] http://www.springframework.org/schema/tx/spring-tx.xsd with 8 occurrences migrated to:     https://www.springframework.org/schema/tx/spring-tx.xsd ([https](https://www.springframework.org/schema/tx/spring-tx.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util.xsd ([https](https://www.springframework.org/schema/util/spring-util.xsd) result 200). * [ ] http://www.springframework.org/schema/websocket/spring-websocket.xsd with 12 occurrences migrated to:     https://www.springframework.org/schema/websocket/spring-websocket.xsd ([https](https://www.springframework.org/schema/websocket/spring-websocket.xsd) result 200). * [ ] http://www.stuartellis.eu/articles/erb/ (301) with 2 occurrences migrated to:     https://www.stuartellis.name/articles/erb/ ([https](https://www.stuartellis.eu/articles/erb/) result 200). * [ ] http://www.thymeleaf.org/ with 2 occurrences migrated to:     https://www.thymeleaf.org/ ([https](https://www.thymeleaf.org/) result 200). * [ ] http://www.thymeleaf.org/documentation.html with 2 occurrences migrated to:     https://www.thymeleaf.org/documentation.html ([https](https://www.thymeleaf.org/documentation.html) result 200). * [ ] http://www.w3.org/2000/xmlns/ with 5 occurrences migrated to:     https://www.w3.org/2000/xmlns/ ([https](https://www.w3.org/2000/xmlns/) result 200). * [ ] http://www.w3.org/2004/08/xop/include with 2 occurrences migrated to:     https://www.w3.org/2004/08/xop/include ([https](https://www.w3.org/2004/08/xop/include) result 200). * [ ] http://www.w3.org/DesignIssues/MatrixURIs.html with 1 occurrences migrated to:     https://www.w3.org/DesignIssues/MatrixURIs.html ([https](https://www.w3.org/DesignIssues/MatrixURIs.html) result 200). * [ ] http://www.w3.org/TR/2004/WD-soap12-mtom-20040608/ with 2 occurrences migrated to:     https://www.w3.org/TR/2004/WD-soap12-mtom-20040608/ ([https](https://www.w3.org/TR/2004/WD-soap12-mtom-20040608/) result 200). * [ ] http://www.w3.org/TR/2005/REC-xop10-20050125/ with 6 occurrences migrated to:     https://www.w3.org/TR/2005/REC-xop10-20050125/ ([https](https://www.w3.org/TR/2005/REC-xop10-20050125/) result 200). * [ ] http://www.w3.org/TR/cors/ with 19 occurrences migrated to:     https://www.w3.org/TR/cors/ ([https](https://www.w3.org/TR/cors/) result 200). * [ ] http://www.w3.org/TR/eventsource/ with 2 occurrences migrated to:     https://www.w3.org/TR/eventsource/ ([https](https://www.w3.org/TR/eventsource/) result 200). * [ ] http://www.w3.org/TR/xhtml1/ with 1 occurrences migrated to:     https://www.w3.org/TR/xhtml1/ ([https](https://www.w3.org/TR/xhtml1/) result 200). * [ ] http://www.w3.org/TR/xhtml1/diffs.html with 1 occurrences migrated to:     https://www.w3.org/TR/xhtml1/diffs.html ([https](https://www.w3.org/TR/xhtml1/diffs.html) result 200). * [ ] http://www.w3.org/TR/xhtml1/dtds.html with 1 occurrences migrated to:     https://www.w3.org/TR/xhtml1/dtds.html ([https](https://www.w3.org/TR/xhtml1/dtds.html) result 200). * [ ] http://www.webjars.org with 4 occurrences migrated to:     https://www.webjars.org ([https](https://www.webjars.org) result 200). * [ ] http://www.webjars.org/ with 2 occurrences migrated to:     https://www.webjars.org/ ([https](https://www.webjars.org/) result 200). * [ ] http://www.webjars.org/documentation with 2 occurrences migrated to:     https://www.webjars.org/documentation ([https](https://www.webjars.org/documentation) result 200). * [ ] http://x-stream.github.io/ with 2 occurrences migrated to:     https://x-stream.github.io/ ([https](https://x-stream.github.io/) result 200). * [ ] http://youtrack.jetbrains.com/issue/IDEA-53476 with 1 occurrences migrated to:     https://youtrack.jetbrains.com/issue/IDEA-53476 ([https](https://youtrack.jetbrains.com/issue/IDEA-53476) result 200). * [ ] http://youtrack.jetbrains.com/issue/IDEA-64446 with 1 occurrences migrated to:     https://youtrack.jetbrains.com/issue/IDEA-64446 ([https](https://youtrack.jetbrains.com/issue/IDEA-64446) result 200). * [ ] http://bit.ly/TRlX2r with 1 occurrences migrated to:     https://bit.ly/TRlX2r ([https](https://bit.ly/TRlX2r) result 301). * [ ] http://bit.ly/UzccDt with 1 occurrences migrated to:     https://bit.ly/UzccDt ([https](https://bit.ly/UzccDt) result 301). * [ ] http://bit.ly/p9rIvx with 1 occurrences migrated to:     https://bit.ly/p9rIvx ([https](https://bit.ly/p9rIvx) result 301). * [ ] http://bit.ly/qUwvwz with 1 occurrences migrated to:     https://bit.ly/qUwvwz ([https](https://bit.ly/qUwvwz) result 301). * [ ] http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx with 1 occurrences migrated to:     https://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx ([https](https://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx) result 301). * [ ] http://castor-data-binding.github.io/castor with 1 occurrences migrated to:     https://castor-data-binding.github.io/castor ([https](https://castor-data-binding.github.io/castor) result 301). * [ ] http://code.google.com/p/beanshell2/ with 1 occurrences migrated to:     https://code.google.com/p/beanshell2/ ([https](https://code.google.com/p/beanshell2/) result 301). * [ ] http://code.google.com/p/browsersec/wiki/Part2 with 1 occurrences migrated to:     https://code.google.com/p/browsersec/wiki/Part2 ([https](https://code.google.com/p/browsersec/wiki/Part2) result 301). * [ ] http://code.google.com/p/gears/wiki/ResumableHttpRequestsProposal with 1 occurrences migrated to:     https://code.google.com/p/gears/wiki/ResumableHttpRequestsProposal ([https](https://code.google.com/p/gears/wiki/ResumableHttpRequestsProposal) result 301). * [ ] http://code.google.com/p/xml-matchers/ with 3 occurrences migrated to:     https://code.google.com/p/xml-matchers/ ([https](https://code.google.com/p/xml-matchers/) result 301). * [ ] http://commons.apache.org/proper/commons-dbcp with 2 occurrences migrated to:     https://commons.apache.org/proper/commons-dbcp ([https](https://commons.apache.org/proper/commons-dbcp) result 301). * [ ] http://commons.apache.org/proper/commons-fileupload with 2 occurrences migrated to:     https://commons.apache.org/proper/commons-fileupload ([https](https://commons.apache.org/proper/commons-fileupload) result 301). * [ ] http://confluence.jetbrains.net/display/IDEADEV/Gradle+integration with 1 occurrences migrated to:     https://confluence.jetbrains.net/display/IDEADEV/Gradle+integration ([https](https://confluence.jetbrains.net/display/IDEADEV/Gradle+integration) result 301). * [ ] http://contributor-covenant.org with 1 occurrences migrated to:     https://contributor-covenant.org ([https](https://contributor-covenant.org) result 301). * [ ] http://contributor-covenant.org/version/1/3/0/ with 1 occurrences migrated to:     https://contributor-covenant.org/version/1/3/0/ ([https](https://contributor-covenant.org/version/1/3/0/) result 301). * [ ] http://db.apache.org/derby with 2 occurrences migrated to:     https://db.apache.org/derby ([https](https://db.apache.org/derby) result 301). * [ ] http://dev.w3.org/html5/eventsource/ with 2 occurrences migrated to:     https://dev.w3.org/html5/eventsource/ ([https](https://dev.w3.org/html5/eventsource/) result 301). * [ ] http://domain.com with 24 occurrences migrated to:     https://domain.com ([https](https://domain.com) result 301). * [ ] http://domain.com/ with 1 occurrences migrated to:     https://domain.com/ ([https](https://domain.com/) result 301). * [ ] http://en.wikipedia.org/wiki/Cache_ with 1 occurrences migrated to:     https://en.wikipedia.org/wiki/Cache_ ([https](https://en.wikipedia.org/wiki/Cache_) result 301). * [ ] http://facebook.github.io/react/ with 2 occurrences migrated to:     https://facebook.github.io/react/ ([https](https://facebook.github.io/react/) result 301). * [ ] http://forum.springframework.org/showthread.php?t=41350 with 1 occurrences migrated to:     https://forum.springframework.org/showthread.php?t=41350 ([https](https://forum.springframework.org/showthread.php?t=41350) result 301). * [ ] http://github.com/SpringSource/spring-framework with 1 occurrences migrated to:     https://github.com/SpringSource/spring-framework ([https](https://github.com/SpringSource/spring-framework) result 301). * [ ] http://hdiv.org/ with 1 occurrences migrated to:     https://hdiv.org/ ([https](https://hdiv.org/) result 301). * [ ] http://jakarta.apache.org/commons/fileupload with 1 occurrences migrated to:     https://jakarta.apache.org/commons/fileupload ([https](https://jakarta.apache.org/commons/fileupload) result 301). * [ ] http://jira.springframework.org/browse/SPR-5708 with 1 occurrences migrated to:     https://jira.springframework.org/browse/SPR-5708 ([https](https://jira.springframework.org/browse/SPR-5708) result 301). * [ ] http://jira.springframework.org/browse/SPR-6124 with 1 occurrences migrated to:     https://jira.springframework.org/browse/SPR-6124 ([https](https://jira.springframework.org/browse/SPR-6124) result 301). * [ ] http://jira.springframework.org/browse/SPR-6128 with 1 occurrences migrated to:     https://jira.springframework.org/browse/SPR-6128 ([https](https://jira.springframework.org/browse/SPR-6128) result 301). * [ ] http://jira.springframework.org/browse/SPR-7064 with 1 occurrences migrated to:     https://jira.springframework.org/browse/SPR-7064 ([https](https://jira.springframework.org/browse/SPR-7064) result 301). * [ ] http://maven.apache.org/plugins/maven-surefire-plugin/test-mojo.html with 1 occurrences migrated to:     https://maven.apache.org/plugins/maven-surefire-plugin/test-mojo.html ([https](https://maven.apache.org/plugins/maven-surefire-plugin/test-mojo.html) result 301). * [ ] http://mockito.org/ (301) with 1 occurrences migrated to:     https://mockito.github.io ([https](https://mockito.org/) result 301). * [ ] http://mydomain1.com with 37 occurrences migrated to:     https://mydomain1.com ([https](https://mydomain1.com) result 301). * [ ] http://mydomain1.com/ with 2 occurrences migrated to:     https://mydomain1.com/ ([https](https://mydomain1.com/) result 301). * [ ] http://mydomain1.com/path with 2 occurrences migrated to:     https://mydomain1.com/path ([https](https://mydomain1.com/path) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-2660 with 1 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-2660 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-2660) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-2754 with 1 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-2754 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-2754) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-2789 with 1 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-2789 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-2789) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-3127 with 1 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-3127 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-3127) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-3775 with 1 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-3775 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-3775) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-3880 with 1 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-3880 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-3880) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-3896 with 7 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-3896 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-3896) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-3949 with 1 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-3949 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-3949) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-4008 with 2 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-4008 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-4008) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-4040 with 2 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-4040 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-4040) result 301). * [ ] http://publib.boulder.ibm.com/infocenter/wasinfo/v5r1//topic/com.ibm.websphere.base.doc/info/aes/ae/rdat_extiapi.html with 1 occurrences migrated to:     https://publib.boulder.ibm.com/infocenter/wasinfo/v5r1//topic/com.ibm.websphere.base.doc/info/aes/ae/rdat_extiapi.html ([https](https://publib.boulder.ibm.com/infocenter/wasinfo/v5r1//topic/com.ibm.websphere.base.doc/info/aes/ae/rdat_extiapi.html) result 301). * [ ] http://publib.boulder.ibm.com/infocenter/wasinfo/v6r0/topic/com.ibm.websphere.javadoc.doc/public_html/api/com/ibm/websphere/rsadapter/JDBCConnectionSpec.html with 1 occurrences migrated to:     https://publib.boulder.ibm.com/infocenter/wasinfo/v6r0/topic/com.ibm.websphere.javadoc.doc/public_html/api/com/ibm/websphere/rsadapter/JDBCConnectionSpec.html ([https](https://publib.boulder.ibm.com/infocenter/wasinfo/v6r0/topic/com.ibm.websphere.javadoc.doc/public_html/api/com/ibm/websphere/rsadapter/JDBCConnectionSpec.html) result 301). * [ ] http://site2.com with 3 occurrences migrated to:     https://site2.com ([https](https://site2.com) result 301). * [ ] http://slack.kotlinlang.org/ with 2 occurrences migrated to:     https://slack.kotlinlang.org/ ([https](https://slack.kotlinlang.org/) result 301). * [ ] http://sourceforge.net/projects/c3p0 with 2 occurrences migrated to:     https://sourceforge.net/projects/c3p0 ([https](https://sourceforge.net/projects/c3p0) result 301). * [ ] http://sourceforge.net/projects/javadiff with 1 occurrences migrated to:     https://sourceforge.net/projects/javadiff ([https](https://sourceforge.net/projects/javadiff) result 301). * [ ] http://springframework.org with 2 occurrences migrated to:     https://springframework.org ([https](https://springframework.org) result 301). * [ ] http://www.atomenabled.org/developers/syndication/ with 1 occurrences migrated to:     https://www.atomenabled.org/developers/syndication/ ([https](https://www.atomenabled.org/developers/syndication/) result 301). * [ ] http://www.google.com/ig/calculator?q=1USD=?EUR with 1 occurrences migrated to:     https://www.google.com/ig/calculator?q=1USD=?EUR ([https](https://www.google.com/ig/calculator?q=1USD=?EUR) result 301). * [ ] http://www.javaworld.com/javaworld/jw-01-2009/jw-01-spring-transactions.html with 1 occurrences migrated to:     https://www.javaworld.com/javaworld/jw-01-2009/jw-01-spring-transactions.html ([https](https://www.javaworld.com/javaworld/jw-01-2009/jw-01-spring-transactions.html) result 301). * [ ] http://www.junit.org/ with 1 occurrences migrated to:     https://www.junit.org/ ([https](https://www.junit.org/) result 301). * [ ] http://www.mnot.net/cache_docs with 1 occurrences migrated to:     https://www.mnot.net/cache_docs ([https](https://www.mnot.net/cache_docs) result 301). * [ ] http://www.sf.net/home.view?siteLanguage=nl with 1 occurrences migrated to:     https://www.sf.net/home.view?siteLanguage=nl ([https](https://www.sf.net/home.view?siteLanguage=nl) result 301). * [ ] http://www.springframework.org with 7 occurrences migrated to:     https://www.springframework.org ([https](https://www.springframework.org) result 301). * [ ] http://www.springframework.org/ with 3 occurrences migrated to:     https://www.springframework.org/ ([https](https://www.springframework.org/) result 301). * [ ] http://xyz.com/path with 2 occurrences migrated to:     https://xyz.com/path ([https](https://xyz.com/path) result 301). * [ ] http://commons.apache.org/codec/ with 1 occurrences migrated to:     https://commons.apache.org/codec/ ([https](https://commons.apache.org/codec/) result 302). * [ ] http://commons.apache.org/logging with 2 occurrences migrated to:     https://commons.apache.org/logging ([https](https://commons.apache.org/logging) result 302). * [ ] http://download.oracle.com/javaee/6/api/javax/inject/Scope.html with 1 occurrences migrated to:     https://download.oracle.com/javaee/6/api/javax/inject/Scope.html ([https](https://download.oracle.com/javaee/6/api/javax/inject/Scope.html) result 302). * [ ] http://download.oracle.com/javase/1.5.0/docs/api/java/lang/System.html with 4 occurrences migrated to:     https://download.oracle.com/javase/1.5.0/docs/api/java/lang/System.html ([https](https://download.oracle.com/javase/1.5.0/docs/api/java/lang/System.html) result 302). * [ ] http://download.oracle.com/javase/6/docs/technotes/guides/jar/jar.html with 1 occurrences migrated to:     https://download.oracle.com/javase/6/docs/technotes/guides/jar/jar.html ([https](https://download.oracle.com/javase/6/docs/technotes/guides/jar/jar.html) result 302). * [ ] http://download.oracle.com/javase/8/docs/api/java/beans/ConstructorProperties.html with 1 occurrences migrated to:     https://download.oracle.com/javase/8/docs/api/java/beans/ConstructorProperties.html ([https](https://download.oracle.com/javase/8/docs/api/java/beans/ConstructorProperties.html) result 302). * [ ] http://download.oracle.com/javase/jndi/tutorial/beyond/misc/policy.html with 1 occurrences migrated to:     https://download.oracle.com/javase/jndi/tutorial/beyond/misc/policy.html ([https](https://download.oracle.com/javase/jndi/tutorial/beyond/misc/policy.html) result 302). * [ ] http://gafter.blogspot.nl/2006/12/super-type-tokens.html with 1 occurrences migrated to:     https://gafter.blogspot.nl/2006/12/super-type-tokens.html ([https](https://gafter.blogspot.nl/2006/12/super-type-tokens.html) result 302). * [ ] http://git-scm.com/book/en/Distributed-Git-Contributing-to-a-Project with 1 occurrences migrated to:     https://git-scm.com/book/en/Distributed-Git-Contributing-to-a-Project ([https](https://git-scm.com/book/en/Distributed-Git-Contributing-to-a-Project) result 302). * [ ] http://git-scm.com/book/en/Git-Tools-Rewriting-History with 1 occurrences migrated to:     https://git-scm.com/book/en/Git-Tools-Rewriting-History ([https](https://git-scm.com/book/en/Git-Tools-Rewriting-History) result 302). * [ ] http://java.sun.com with 3 occurrences migrated to:     https://java.sun.com ([https](https://java.sun.com) result 302). * [ ] http://java.sun.com/docs/books/jls/third_edition/html/conversions.html with 1 occurrences migrated to:     https://java.sun.com/docs/books/jls/third_edition/html/conversions.html ([https](https://java.sun.com/docs/books/jls/third_edition/html/conversions.html) result 302). * [ ] http://java.sun.com/docs/books/jls/third_edition/html/expressions.html with 1 occurrences migrated to:     https://java.sun.com/docs/books/jls/third_edition/html/expressions.html ([https](https://java.sun.com/docs/books/jls/third_edition/html/expressions.html) result 302). * [ ] http://java.sun.com/j2se/ with 2 occurrences migrated to:     https://java.sun.com/j2se/ ([https](https://java.sun.com/j2se/) result 302). * [ ] http://java.sun.com/j2se/1.4.1/docs/tooldocs/solaris/javadoc.html with 1 occurrences migrated to:     https://java.sun.com/j2se/1.4.1/docs/tooldocs/solaris/javadoc.html ([https](https://java.sun.com/j2se/1.4.1/docs/tooldocs/solaris/javadoc.html) result 302). * [ ] http://java.sun.com/j2se/1.4.2/docs/api/java/text/SimpleDateFormat.html with 1 occurrences migrated to:     https://java.sun.com/j2se/1.4.2/docs/api/java/text/SimpleDateFormat.html ([https](https://java.sun.com/j2se/1.4.2/docs/api/java/text/SimpleDateFormat.html) result 302). * [ ] http://java.sun.com/j2se/javadoc with 1 occurrences migrated to:     https://java.sun.com/j2se/javadoc ([https](https://java.sun.com/j2se/javadoc) result 302). * [ ] http://java.sun.com/j2se/javadoc/ with 1 occurrences migrated to:     https://java.sun.com/j2se/javadoc/ ([https](https://java.sun.com/j2se/javadoc/) result 302). * [ ] http://java.sun.com/j2se/javadoc/faq.html with 1 occurrences migrated to:     https://java.sun.com/j2se/javadoc/faq.html ([https](https://java.sun.com/j2se/javadoc/faq.html) result 302). * [ ] http://java.sun.com/webservices/jaxb/ with 1 occurrences migrated to:     https://java.sun.com/webservices/jaxb/ ([https](https://java.sun.com/webservices/jaxb/) result 302). * [ ] http://java.sun.com/xml/ns/j2ee/connector_1_5.xsd with 1 occurrences migrated to:     https://java.sun.com/xml/ns/j2ee/connector_1_5.xsd ([https](https://java.sun.com/xml/ns/j2ee/connector_1_5.xsd) result 302). * [ ] http://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd with 2 occurrences migrated to:     https://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd ([https](https://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd) result 302). * [ ] http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd with 2 occurrences migrated to:     https://java.sun.com/xml/ns/javaee/web-app_3_0.xsd ([https](https://java.sun.com/xml/ns/javaee/web-app_3_0.xsd) result 302). * [ ] http://sourceforge.net/projects/cglib/files/cglib3/3.0/cglib-3.0.jar/download with 1 occurrences migrated to:     https://sourceforge.net/projects/cglib/files/cglib3/3.0/cglib-3.0.jar/download ([https](https://sourceforge.net/projects/cglib/files/cglib3/3.0/cglib-3.0.jar/download) result 302). * [ ] http://other.info/foo/bar (301) with 1 occurrences migrated to:     https://weibo.com/otherinfo/foo/bar ([https](https://other.info/foo/bar) result 302). * [ ] http://www.iana.org/assignments/http-status-codes with 1 occurrences migrated to:     https://www.iana.org/assignments/http-status-codes ([https](https://www.iana.org/assignments/http-status-codes) result 302). * [ ] http://www.iana.org/assignments/media-types/ with 1 occurrences migrated to:     https://www.iana.org/assignments/media-types/ ([https](https://www.iana.org/assignments/media-types/) result 302). * [ ] http://www.sys-con.com/java with 1 occurrences migrated to:     https://www.sys-con.com/java ([https](https://www.sys-con.com/java) result 302).  # Ignored These URLs were intentionally ignored.  * http://Additional-namespace-name-URI with 1 occurrences * http://Default-namespace-name-URI with 1 occurrences * http://HOST:8080/remoting/AccountService with 1 occurrences * http://Namespace-name-URI with 1 occurrences * http://Unbound-namespace-name-URI with 1 occurrences * http://anotherHost/mvc-showcase with 1 occurrences * http://apache.org/xml/features/disallow-doctype-decl with 14 occurrences * http://barfoo:8888 with 1 occurrences * http://example/ with 1 occurrences * http://fake-service with 7 occurrences * http://foo with 3 occurrences * http://foobar:8088 with 1 occurrences * http://host:port/myApp/myEndpoint/ with 1 occurrences * http://java.sun.com/jsp/jstl/core with 1 occurrences * http://java.sun.com/xml/jaxp/properties/schemaLanguage with 1 occurrences * http://java.sun.com/xml/ns/j2ee with 6 occurrences * http://java.sun.com/xml/ns/javaee with 4 occurrences * http://java.sun.com/xml/ns/persistence with 1 occurrences * http://java.sun.com/xml/stream/properties/report-cdata-event with 1 occurrences * http://jaxws.remoting.springframework.org/ with 4 occurrences * http://localhost with 86 occurrences * http://localhost/ with 16 occurrences * http://localhost/42 with 1 occurrences * http://localhost/?cookie=foo with 1 occurrences * http://localhost/FILE.TXT with 1 occurrences * http://localhost/abc with 1 occurrences * http://localhost/abc/def with 1 occurrences * http://localhost/app%20/path/ with 1 occurrences * http://localhost/app/path%20with%20spaces/ with 1 occurrences * http://localhost/bar with 2 occurrences * http://localhost/context/a with 3 occurrences * http://localhost/contextPath/main/path with 2 occurrences * http://localhost/file.foo with 1 occurrences * http://localhost/file.txt with 1 occurrences * http://localhost/foo with 2 occurrences * http://localhost/foo%20bar with 1 occurrences * http://localhost/foo/bar with 1 occurrences * http://localhost/foo/bar/baz with 1 occurrences * http://localhost/forward with 1 occurrences * http://localhost/hotels/42/bookings/21 with 4 occurrences * http://localhost/input with 1 occurrences * http://localhost/jquery-1.11.0.min.js with 5 occurrences * http://localhost/messages/form with 1 occurrences * http://localhost/mvc-showcase with 2 occurrences * http://localhost/mvc-showcase/app with 1 occurrences * http://localhost/mvc-showcase/data/foo%20bar with 1 occurrences * http://localhost/mvc-showcase/data/param with 1 occurrences * http://localhost/mvc-showcase/data/param?foo=123 with 2 occurrences * http://localhost/myapp/main with 1 occurrences * http://localhost/myapp/people/1/addresses/DE with 1 occurrences * http://localhost/path with 3 occurrences * http://localhost/path;a=b/with/semicolon with 1 occurrences * http://localhost/persons with 1 occurrences * http://localhost/prefix with 1 occurrences * http://localhost/prefix/app with 1 occurrences * http://localhost/prefix/bar with 1 occurrences * http://localhost/prefix/mvc-showcase with 3 occurrences * http://localhost/query= with 1 occurrences * http://localhost/query=foo@bar with 1 occurrences * http://localhost/resources/child/response.txt with 1 occurrences * http://localhost/resources/foo with 2 occurrences * http://localhost/resources/foo.txt with 1 occurrences * http://localhost/resources/response.txt with 2 occurrences * http://localhost/rest/books/6/pages/1.json with 1 occurrences * http://localhost/something/1/foo with 1 occurrences * http://localhost/something/optional-param with 1 occurrences * http://localhost/test with 4 occurrences * http://localhost/test.html with 1 occurrences * http://localhost/test/this with 2 occurrences * http://localhost:7070/example/adminhandle.vm with 1 occurrences * http://localhost:7070/example/bingo.html with 1 occurrences * http://localhost:80/jquery-1.11.0.min.js with 1 occurrences * http://localhost:8080 with 34 occurrences * http://localhost:8080/ with 4 occurrences * http://localhost:8080/OrderService with 3 occurrences * http://localhost:8080/aA/bB/cC with 1 occurrences * http://localhost:8080/context with 1 occurrences * http://localhost:8080/context/myapiresource with 1 occurrences * http://localhost:8080/gamecast/admin/index.html with 1 occurrences * http://localhost:8080/gamecast/display.html with 1 occurrences * http://localhost:8080/gamecast/displayShoppingCart.html with 1 occurrences * http://localhost:8080/jquery-1.11.0.min.js with 1 occurrences * http://localhost:8080/mvc-showcase with 1 occurrences * http://localhost:8080/myapiresource with 1 occurrences * http://localhost:8080/myapp/js/sockjs-client.js with 1 occurrences * http://localhost:8080/path with 2 occurrences * http://localhost:8080/people with 2 occurrences * http://localhost:8080/portfolio with 1 occurrences * http://localhost:8080/spring/ with 2 occurrences * http://localhost:8080/test/ with 2 occurrences * http://localhost:8080/test/print?value=%EA%B0%80+%EB%82%98 with 1 occurrences * http://localhost:8081 with 1 occurrences * http://localhost:8081/ with 1 occurrences * http://localhost:8181 with 1 occurrences * http://localhost:8888/AccountServiceEndpoint?WSDL with 1 occurrences * http://localhost:9000 with 7 occurrences * http://localhost:9090 with 18 occurrences * http://localhost:9090/jquery-1.11.0.min.js with 2 occurrences * http://localhost:9990/mail/messages/form with 1 occurrences * http://localhost:9999/ with 1 occurrences * http://localhost:9999/OrderService?wsdl with 4 occurrences * http://localhosta/testbean with 3 occurrences * http://myserver with 1 occurrences * http://myurl with 12 occurrences * http://remotehost:8080/remoting/AccountService with 2 occurrences * http://samples.springframework.org/flight with 39 occurrences * http://somethingDifferent with 1 occurrences * http://springframework.org/spring-ws with 17 occurrences * http://test.com with 1 occurrences * http://test.com/ with 1 occurrences * http://testng.org/ with 1 occurrences * http://tiles.apache.org/tags-tiles with 1 occurrences * http://www with 1 occurrences * http://www.foo.com/schema/component with 6 occurrences * http://www.mycompany.com/schema/myns with 4 occurrences * http://www.springframework.org/schema/aop with 30 occurrences * http://www.springframework.org/schema/beans with 169 occurrences * http://www.springframework.org/schema/beans/test with 2 occurrences * http://www.springframework.org/schema/c with 1 occurrences * http://www.springframework.org/schema/cache with 5 occurrences * http://www.springframework.org/schema/context with 28 occurrences * http://www.springframework.org/schema/jdbc with 8 occurrences * http://www.springframework.org/schema/jee with 9 occurrences * http://www.springframework.org/schema/jms with 5 occurrences * http://www.springframework.org/schema/lang with 10 occurrences * http://www.springframework.org/schema/mvc with 8 occurrences * http://www.springframework.org/schema/oxm with 4 occurrences * http://www.springframework.org/schema/p with 4 occurrences * http://www.springframework.org/schema/task with 2 occurrences * http://www.springframework.org/schema/tool with 27 occurrences * http://www.springframework.org/schema/tx with 18 occurrences * http://www.springframework.org/schema/util with 8 occurrences * http://www.springframework.org/schema/websocket with 26 occurrences * http://www.springframework.org/spring-ws with 1 occurrences * http://www.springframework.org/tags with 4 occurrences * http://www.springframework.org/tags/form with 2 occurrences * http://www.w3.org/1999/XSL/Transform with 8 occurrences * http://www.w3.org/2001/XMLSchema with 24 occurrences * http://www.w3.org/2001/XMLSchema-instance with 83 occurrences * http://www.w3.org/2005/Atom with 4 occurrences * http://www.w3.org/TR/html4/charset.html with 5 occurrences * http://www.w3.org/TR/html4/sgml/entities.html with 14 occurrences * http://www.w3.org/XML/1998/namespace with 5 occurrences * http://xml.org/sax/features/ with 4 occurrences * http://xml.org/sax/features/external-general-entities with 14 occurrences * http://xml.org/sax/features/is-standalone with 1 occurrences * http://xml.org/sax/features/namespace-prefixes with 13 occurrences * http://xml.org/sax/features/namespaces with 12 occurrences * http://xml.org/sax/features/namespaces-prefixes with 1 occurrences * http://xml.org/sax/properties/lexical-handler with 12 occurrences","closed","type: task,","spring-operator","2019-03-26T09:25:12Z","2019-03-27T21:08:00Z"
"","22622","URL Cleanup","This commit updates URLs to prefer the https protocol. Redirects are not followed to avoid accidentally expanding intentionally shortened URLs (i.e. if using a URL shortener).  # HTTP URLs that Could Not Be Fixed These URLs were unable to be fixed. Please review them to see if they can be manually resolved.  * [ ] http://aopalliance.sourceforge.net (200) with 1 occurrences could not be migrated:      ([https](https://aopalliance.sourceforge.net) result AnnotatedConnectException). * [ ] http://cglib.sourceforge.net (200) with 2 occurrences could not be migrated:      ([https](https://cglib.sourceforge.net) result AnnotatedConnectException). * [ ] http://classdoc.sourceforge.net (200) with 1 occurrences could not be migrated:      ([https](https://classdoc.sourceforge.net) result AnnotatedConnectException). * [ ] http://code.jquery.com:80/jquery.js (200) with 1 occurrences could not be migrated:      ([https](https://code.jquery.com:80/jquery.js) result ClosedChannelException). * [ ] http://dbunit.sourceforge.net/ (200) with 1 occurrences could not be migrated:      ([https](https://dbunit.sourceforge.net/) result AnnotatedConnectException). * [ ] http://docs.groovy-lang.org/docs/next/html/documentation/template-engines.html (200) with 1 occurrences could not be migrated:      ([https](https://docs.groovy-lang.org/docs/next/html/documentation/template-engines.html) result SSLProtocolException). * [ ] http://domain3.com (200) with 6 occurrences could not be migrated:      ([https](https://domain3.com) result ConnectTimeoutException). * [ ] http://forum.thymeleaf.org/Thymeleaf-3-0-8-JUST-PUBLISHED-td4030687.html (200) with 1 occurrences could not be migrated:      ([https](https://forum.thymeleaf.org/Thymeleaf-3-0-8-JUST-PUBLISHED-td4030687.html) result SSLHandshakeException). * [ ] http://grinder.sourceforge.net/ (200) with 1 occurrences could not be migrated:      ([https](https://grinder.sourceforge.net/) result AnnotatedConnectException). * [ ] http://groovy-lang.org/templating.html (200) with 3 occurrences could not be migrated:      ([https](https://groovy-lang.org/templating.html) result SSLProtocolException). * [ ] http://hsqldb.org (200) with 1 occurrences could not be migrated:      ([https](https://hsqldb.org) result SSLHandshakeException). * [ ] http://htmlunit.sourceforge.net/ (200) with 3 occurrences could not be migrated:      ([https](https://htmlunit.sourceforge.net/) result AnnotatedConnectException). * [ ] http://htmlunit.sourceforge.net/gettingStarted.html (200) with 1 occurrences could not be migrated:      ([https](https://htmlunit.sourceforge.net/gettingStarted.html) result AnnotatedConnectException). * [ ] http://htmlunit.sourceforge.net/javascript.html (200) with 1 occurrences could not be migrated:      ([https](https://htmlunit.sourceforge.net/javascript.html) result AnnotatedConnectException). * [ ] http://javadiff.cvs.sourceforge.net/ (200) with 3 occurrences could not be migrated:      ([https](https://javadiff.cvs.sourceforge.net/) result SSLHandshakeException). * [ ] http://jibx.sourceforge.net/ (200) with 2 occurrences could not be migrated:      ([https](https://jibx.sourceforge.net/) result AnnotatedConnectException). * [ ] http://joda-time.sourceforge.net (200) with 1 occurrences could not be migrated:      ([https](https://joda-time.sourceforge.net) result AnnotatedConnectException). * [ ] http://jotm.objectweb.org/ (200) with 1 occurrences could not be migrated:      ([https](https://jotm.objectweb.org/) result NotSslRecordException). * [ ] http://json-b.net/ (200) with 1 occurrences could not be migrated:      ([https](https://json-b.net/) result SSLHandshakeException). * [ ] http://mx4j.sourceforge.net (200) with 1 occurrences could not be migrated:      ([https](https://mx4j.sourceforge.net) result AnnotatedConnectException). * [ ] http://mx4j.sourceforge.net/ (200) with 1 occurrences could not be migrated:      ([https](https://mx4j.sourceforge.net/) result AnnotatedConnectException). * [ ] http://mydomain3.com (200) with 9 occurrences could not be migrated:      ([https](https://mydomain3.com) result ConnectTimeoutException). * [ ] http://objenesis.org (200) with 1 occurrences could not be migrated:      ([https](https://objenesis.org) result SSLHandshakeException). * [ ] http://objenesis.org/tutorial.html (200) with 1 occurrences could not be migrated:      ([https](https://objenesis.org/tutorial.html) result SSLHandshakeException). * [ ] http://other.com/ (200) with 2 occurrences could not be migrated:      ([https](https://other.com/) result SSLHandshakeException). * [ ] http://reactivex.io/ (200) with 1 occurrences could not be migrated:      ([https](https://reactivex.io/) result SSLHandshakeException). * [ ] http://reactivex.io/documentation/operators.html (200) with 1 occurrences could not be migrated:      ([https](https://reactivex.io/documentation/operators.html) result SSLHandshakeException). * [ ] http://url.somewhereelse.com (200) with 4 occurrences could not be migrated:      ([https](https://url.somewhereelse.com) result SSLHandshakeException). * [ ] http://www.beanshell.org (200) with 1 occurrences could not be migrated:      ([https](https://www.beanshell.org) result SSLHandshakeException). * [ ] http://www.beanshell.org/ (200) with 1 occurrences could not be migrated:      ([https](https://www.beanshell.org/) result SSLHandshakeException). * [ ] http://www.doclet.com (200) with 1 occurrences could not be migrated:      ([https](https://www.doclet.com) result AnnotatedConnectException). * [ ] http://www.gebish.org/ (200) with 1 occurrences could not be migrated:      ([https](https://www.gebish.org/) result SSLHandshakeException). * [ ] http://www.gebish.org/manual/current/ (200) with 3 occurrences could not be migrated:      ([https](https://www.gebish.org/manual/current/) result SSLHandshakeException). * [ ] http://www.groovy-lang.org/ (200) with 2 occurrences could not be migrated:      ([https](https://www.groovy-lang.org/) result SSLProtocolException). * [ ] http://www.groovy-lang.org/operators.html (200) with 2 occurrences could not be migrated:      ([https](https://www.groovy-lang.org/operators.html) result SSLProtocolException). * [ ] http://www.hsqldb.org (200) with 1 occurrences could not be migrated:      ([https](https://www.hsqldb.org) result SSLHandshakeException). * [ ] http://www.jensgulden.de (200) with 1 occurrences could not be migrated:      ([https](https://www.jensgulden.de) result AnnotatedConnectException). * [ ] http://www.mockobjects.com (200) with 1 occurrences could not be migrated:      ([https](https://www.mockobjects.com) result ClosedChannelException). * [ ] http://www.mockobjects.com/ (200) with 1 occurrences could not be migrated:      ([https](https://www.mockobjects.com/) result ClosedChannelException). * [ ] http://www.w3.org/TR/cors/ (200) with 19 occurrences could not be migrated:      ([https](https://www.w3.org/TR/cors/) result SSLException). * [ ] http://xmlunit.sourceforge.net/ (200) with 2 occurrences could not be migrated:      ([https](https://xmlunit.sourceforge.net/) result AnnotatedConnectException). * [ ] http://www.easymock.org (301) with 1 occurrences could not be migrated:      ([https](https://www.easymock.org) result SSLHandshakeException). * [ ] http://www.easymock.org/ (301) with 1 occurrences could not be migrated:      ([https](https://www.easymock.org/) result SSLHandshakeException). * [ ] http://www.jmock.org/ (301) with 1 occurrences could not be migrated:      ([https](https://www.jmock.org/) result SSLHandshakeException). * [ ] http://foo.com (301) with 4 occurrences could not be migrated:      ([https](https://foo.com) result SSLHandshakeException). * [ ] http://foo.com/ (301) with 1 occurrences could not be migrated:      ([https](https://foo.com/) result SSLHandshakeException). * [ ] http://foo.com/a (301) with 1 occurrences could not be migrated:      ([https](https://foo.com/a) result SSLHandshakeException). * [ ] http://foo.com/a?foo=bar&foo=baz (301) with 4 occurrences could not be migrated:      ([https](https://foo.com/a?foo=bar&foo=baz) result SSLHandshakeException). * [ ] http://foo.com/bar (301) with 5 occurrences could not be migrated:      ([https](https://foo.com/bar) result SSLHandshakeException). * [ ] http://foo.com/baz (301) with 1 occurrences could not be migrated:      ([https](https://foo.com/baz) result SSLHandshakeException). * [ ] http://foo.com/rest/books/6.json (301) with 1 occurrences could not be migrated:      ([https](https://foo.com/rest/books/6.json) result SSLHandshakeException). * [ ] http://foo.com/rest/books/6/pages/1.json (301) with 1 occurrences could not be migrated:      ([https](https://foo.com/rest/books/6/pages/1.json) result SSLHandshakeException). * [ ] http://foo.com/v1 (301) with 1 occurrences could not be migrated:      ([https](https://foo.com/v1) result SSLHandshakeException). * [ ] http://foo.com/v1/123 (301) with 1 occurrences could not be migrated:      ([https](https://foo.com/v1/123) result SSLHandshakeException). * [ ] http://foo.com/v1/bar (301) with 1 occurrences could not be migrated:      ([https](https://foo.com/v1/bar) result SSLHandshakeException). * [ ] http://foo.com/v1?id=123 (301) with 2 occurrences could not be migrated:      ([https](https://foo.com/v1?id=123) result SSLHandshakeException). * [ ] http://foo.com/wrong (301) with 1 occurrences could not be migrated:      ([https](https://foo.com/wrong) result SSLHandshakeException). * [ ] http://mydomain4.com (301) with 3 occurrences could not be migrated:      ([https](https://mydomain4.com) result SSLHandshakeException). * [ ] http://xml.org/sax/features/ (301) with 4 occurrences could not be migrated:      ([https](https://xml.org/sax/features/) result SSLHandshakeException). * [ ] http://xml.org/sax/features/external-general-entities (301) with 10 occurrences could not be migrated:      ([https](https://xml.org/sax/features/external-general-entities) result SSLHandshakeException). * [ ] http://xml.org/sax/features/is-standalone (301) with 1 occurrences could not be migrated:      ([https](https://xml.org/sax/features/is-standalone) result SSLHandshakeException). * [ ] http://xml.org/sax/features/namespace-prefixes (301) with 13 occurrences could not be migrated:      ([https](https://xml.org/sax/features/namespace-prefixes) result SSLHandshakeException). * [ ] http://xml.org/sax/features/namespaces (301) with 12 occurrences could not be migrated:      ([https](https://xml.org/sax/features/namespaces) result SSLHandshakeException). * [ ] http://xml.org/sax/features/namespaces-prefixes (301) with 1 occurrences could not be migrated:      ([https](https://xml.org/sax/features/namespaces-prefixes) result SSLHandshakeException). * [ ] http://xml.org/sax/properties/lexical-handler (301) with 12 occurrences could not be migrated:      ([https](https://xml.org/sax/properties/lexical-handler) result SSLHandshakeException). * [ ] http://www.caucho.com/hessian (302) with 6 occurrences could not be migrated:      ([https](https://www.caucho.com/hessian) result SSLHandshakeException). * [ ] http://example.com:80/test/this/here (404) with 3 occurrences could not be migrated:      ([https](https://example.com:80/test/this/here) result NotSslRecordException). * [ ] http://www.foo.com/schema/component/component.xsd (404) with 1 occurrences could not be migrated:      ([https](https://www.foo.com/schema/component/component.xsd) result SSLHandshakeException). * [ ] http://www.foo.com/schema/jcache (404) with 2 occurrences could not be migrated:      ([https](https://www.foo.com/schema/jcache) result SSLHandshakeException). * [ ] http://www.mycompany.com/schema/myns/myns.xsd (404) with 1 occurrences could not be migrated:      ([https](https://www.mycompany.com/schema/myns/myns.xsd) result ConnectTimeoutException). * [ ] http://xunitpatterns.com/Test%20Spy.html (404) with 1 occurrences could not be migrated:      ([https](https://xunitpatterns.com/Test%20Spy.html) result AnnotatedConnectException).  # Fixed URLs  ## Fixed But Review Recommended These URLs were fixed, but the https status was not OK. However, the https status was the same as the http request or http redirected to an https URL, so they were migrated. Your review is recommended.  * [ ] http://mydomain2.com (302) with 22 occurrences migrated to:     /QTifZ/ ([https](https://mydomain2.com) result IllegalArgumentException). * [ ] http://www.jdiff.org (302) with 1 occurrences migrated to:     /VQYNZ/ ([https](https://www.jdiff.org) result IllegalArgumentException). * [ ] http://192.168.0.1/mvc-showcase (301) with 1 occurrences migrated to:     /admin/ ([https](https://192.168.0.1/mvc-showcase) result IllegalArgumentException). * [ ] http://bugs.sun.com/view_bug.do?bug_id=6342411 (302) with 1 occurrences migrated to:     https://bugs.java.com/view_bug.do?bug_id=6342411 ([https](https://bugs.sun.com/view_bug.do?bug_id=6342411) result SSLHandshakeException). * [ ] http://bugs.sun.com/view_bug.do?bug_id=7023180 (302) with 2 occurrences migrated to:     https://bugs.java.com/view_bug.do?bug_id=7023180 ([https](https://bugs.sun.com/view_bug.do?bug_id=7023180) result SSLHandshakeException). * [ ] http://www.freemarker.org (301) with 5 occurrences migrated to:     https://freemarker.apache.org/ ([https](https://www.freemarker.org) result ConnectTimeoutException). * [ ] http://sockjs.org (303) with 2 occurrences migrated to:     https://github.com/sockjs/sockjs-client ([https](https://sockjs.org) result AnnotatedConnectException). * [ ] http://projects.eclipse.org/projects/tools.buildship (301) with 1 occurrences migrated to:     https://projects.eclipse.org/projects/tools.buildship ([https](https://projects.eclipse.org/projects/tools.buildship) result SSLException). * [ ] http://tools.ietf.org/html/rfc6202 (301) with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc6202 ([https](https://tools.ietf.org/html/rfc6202) result ReadTimeoutException). * [ ] http://tools.ietf.org/html/rfc7239 (301) with 7 occurrences migrated to:     https://tools.ietf.org/html/rfc7239 ([https](https://tools.ietf.org/html/rfc7239) result ReadTimeoutException). * [ ] http://aaa.org:8080/a (301) with 1 occurrences migrated to:     https://www.aaa.org/articles/ ([https](https://aaa.org:8080/a) result NotSslRecordException). * [ ] http://www.caucho.com (302) with 1 occurrences migrated to:     https://www.caucho.com/ ([https](https://www.caucho.com) result SSLHandshakeException). * [ ] http://jruby.org (301) with 4 occurrences migrated to:     https://www.jruby.org ([https](https://jruby.org) result SSLHandshakeException). * [ ] http://jruby.org/ (301) with 1 occurrences migrated to:     https://www.jruby.org ([https](https://jruby.org/) result SSLHandshakeException). * [ ] http://bbb.org:9090/b (AnnotatedConnectException) with 2 occurrences migrated to:     https://bbb.org:9090/b ([https](https://bbb.org:9090/b) result AnnotatedConnectException). * [ ] http://192.168.28.42/1.jsp (ConnectTimeoutException) with 3 occurrences migrated to:     https://192.168.28.42/1.jsp ([https](https://192.168.28.42/1.jsp) result ConnectTimeoutException). * [ ] http://abc.com/v2/accounts?q=12 (ConnectTimeoutException) with 1 occurrences migrated to:     https://abc.com/v2/accounts?q=12 ([https](https://abc.com/v2/accounts?q=12) result ConnectTimeoutException). * [ ] http://example.com:8080/ (ConnectTimeoutException) with 1 occurrences migrated to:     https://example.com:8080/ ([https](https://example.com:8080/) result ConnectTimeoutException). * [ ] http://example.com:8080/bar (ConnectTimeoutException) with 5 occurrences migrated to:     https://example.com:8080/bar ([https](https://example.com:8080/bar) result ConnectTimeoutException). * [ ] http://example.org:9090 (ConnectTimeoutException) with 2 occurrences migrated to:     https://example.org:9090 ([https](https://example.org:9090) result ConnectTimeoutException). * [ ] http://example.org:9090/base (ConnectTimeoutException) with 12 occurrences migrated to:     https://example.org:9090/base ([https](https://example.org:9090/base) result ConnectTimeoutException). * [ ] http://example.org:9090/base/people (ConnectTimeoutException) with 2 occurrences migrated to:     https://example.org:9090/base/people ([https](https://example.org:9090/base/people) result ConnectTimeoutException). * [ ] http://example.org:9090/base/something/1/foo (ConnectTimeoutException) with 2 occurrences migrated to:     https://example.org:9090/base/something/1/foo ([https](https://example.org:9090/base/something/1/foo) result ConnectTimeoutException). * [ ] http://example.org:9090/base/something/else (ConnectTimeoutException) with 2 occurrences migrated to:     https://example.org:9090/base/something/else ([https](https://example.org:9090/base/something/else) result ConnectTimeoutException). * [ ] http://example.org:9999/base (ConnectTimeoutException) with 1 occurrences migrated to:     https://example.org:9999/base ([https](https://example.org:9999/base) result ConnectTimeoutException). * [ ] http://example.org:9999/base/api/people/123/addresses (ConnectTimeoutException) with 1 occurrences migrated to:     https://example.org:9999/base/api/people/123/addresses ([https](https://example.org:9999/base/api/people/123/addresses) result ConnectTimeoutException). * [ ] http://example.org:9999/base/api/people/123/addresses/DE (ConnectTimeoutException) with 1 occurrences migrated to:     https://example.org:9999/base/api/people/123/addresses/DE ([https](https://example.org:9999/base/api/people/123/addresses/DE) result ConnectTimeoutException). * [ ] http://example.org:9999/base/people/123/addresses/DE (ConnectTimeoutException) with 1 occurrences migrated to:     https://example.org:9999/base/people/123/addresses/DE ([https](https://example.org:9999/base/people/123/addresses/DE) result ConnectTimeoutException). * [ ] http://example.org:9999/next (ConnectTimeoutException) with 1 occurrences migrated to:     https://example.org:9999/next ([https](https://example.org:9999/next) result ConnectTimeoutException). * [ ] http://example.org:9999/path?q=foo (ConnectTimeoutException) with 1 occurrences migrated to:     https://example.org:9999/path?q=foo ([https](https://example.org:9999/path?q=foo) result ConnectTimeoutException). * [ ] http://foo.com:8080/v1/bar?id=123 (ConnectTimeoutException) with 1 occurrences migrated to:     https://foo.com:8080/v1/bar?id=123 ([https](https://foo.com:8080/v1/bar?id=123) result ConnectTimeoutException). * [ ] http://mydomain1.com:123 (ConnectTimeoutException) with 1 occurrences migrated to:     https://mydomain1.com:123 ([https](https://mydomain1.com:123) result ConnectTimeoutException). * [ ] http://site1.com (ConnectTimeoutException) with 13 occurrences migrated to:     https://site1.com ([https](https://site1.com) result ConnectTimeoutException). * [ ] http://wwws.sun.com/software/xml/developers/diffmk/ (ConnectTimeoutException) with 1 occurrences migrated to:     https://wwws.sun.com/software/xml/developers/diffmk/ ([https](https://wwws.sun.com/software/xml/developers/diffmk/) result ConnectTimeoutException). * [ ] http://aaa.org:8080/app/b/c/d (ReadTimeoutException) with 1 occurrences migrated to:     https://aaa.org:8080/app/b/c/d ([https](https://aaa.org:8080/app/b/c/d) result NotSslRecordException). * [ ] http://aaa.org:8080/b/c/d (ReadTimeoutException) with 1 occurrences migrated to:     https://aaa.org:8080/b/c/d ([https](https://aaa.org:8080/b/c/d) result NotSslRecordException). * [ ] http://www.w3.org/2000/xmlns/ (ReadTimeoutException) with 5 occurrences migrated to:     https://www.w3.org/2000/xmlns/ ([https](https://www.w3.org/2000/xmlns/) result SSLException). * [ ] http://www.w3.org/2004/08/xop/include (ReadTimeoutException) with 2 occurrences migrated to:     https://www.w3.org/2004/08/xop/include ([https](https://www.w3.org/2004/08/xop/include) result SSLException). * [ ] http://www.w3.org/DesignIssues/MatrixURIs.html (ReadTimeoutException) with 2 occurrences migrated to:     https://www.w3.org/DesignIssues/MatrixURIs.html ([https](https://www.w3.org/DesignIssues/MatrixURIs.html) result SSLException). * [ ] http://www.w3.org/TR/2004/WD-soap12-mtom-20040608/ (ReadTimeoutException) with 2 occurrences migrated to:     https://www.w3.org/TR/2004/WD-soap12-mtom-20040608/ ([https](https://www.w3.org/TR/2004/WD-soap12-mtom-20040608/) result SSLException). * [ ] http://www.w3.org/TR/2005/REC-xop10-20050125/ (ReadTimeoutException) with 6 occurrences migrated to:     https://www.w3.org/TR/2005/REC-xop10-20050125/ ([https](https://www.w3.org/TR/2005/REC-xop10-20050125/) result SSLException). * [ ] http://www.w3.org/TR/eventsource/ (ReadTimeoutException) with 2 occurrences migrated to:     https://www.w3.org/TR/eventsource/ ([https](https://www.w3.org/TR/eventsource/) result SSLException). * [ ] http://www.w3.org/TR/html4/loose.dtd (ReadTimeoutException) with 5 occurrences migrated to:     https://www.w3.org/TR/html4/loose.dtd ([https](https://www.w3.org/TR/html4/loose.dtd) result SSLException). * [ ] http://www.w3.org/TR/xhtml1/ (ReadTimeoutException) with 1 occurrences migrated to:     https://www.w3.org/TR/xhtml1/ ([https](https://www.w3.org/TR/xhtml1/) result SSLException). * [ ] http://www.w3.org/TR/xhtml1/diffs.html (ReadTimeoutException) with 1 occurrences migrated to:     https://www.w3.org/TR/xhtml1/diffs.html ([https](https://www.w3.org/TR/xhtml1/diffs.html) result SSLException). * [ ] http://www.w3.org/TR/xhtml1/dtds.html (ReadTimeoutException) with 1 occurrences migrated to:     https://www.w3.org/TR/xhtml1/dtds.html ([https](https://www.w3.org/TR/xhtml1/dtds.html) result SSLException). * [ ] http://www.w3.org/XML/1998/namespace (ReadTimeoutException) with 5 occurrences migrated to:     https://www.w3.org/XML/1998/namespace ([https](https://www.w3.org/XML/1998/namespace) result SSLException). * [ ] http://Additional-namespace-name-URI (UnknownHostException) with 1 occurrences migrated to:     https://Additional-namespace-name-URI ([https](https://Additional-namespace-name-URI) result UnknownHostException). * [ ] http://DOMAIN2.com (UnknownHostException) with 2 occurrences migrated to:     https://DOMAIN2.com ([https](https://DOMAIN2.com) result UnknownHostException). * [ ] http://Default-namespace-name-URI (UnknownHostException) with 1 occurrences migrated to:     https://Default-namespace-name-URI ([https](https://Default-namespace-name-URI) result UnknownHostException). * [ ] http://HOST:8080/remoting/AccountService (UnknownHostException) with 1 occurrences migrated to:     https://HOST:8080/remoting/AccountService ([https](https://HOST:8080/remoting/AccountService) result UnknownHostException). * [ ] http://Namespace-name-URI (UnknownHostException) with 1 occurrences migrated to:     https://Namespace-name-URI ([https](https://Namespace-name-URI) result UnknownHostException). * [ ] http://Unbound-namespace-name-URI (UnknownHostException) with 1 occurrences migrated to:     https://Unbound-namespace-name-URI ([https](https://Unbound-namespace-name-URI) result UnknownHostException). * [ ] http://a.example.org/mvc-showcase (UnknownHostException) with 1 occurrences migrated to:     https://a.example.org/mvc-showcase ([https](https://a.example.org/mvc-showcase) result UnknownHostException). * [ ] http://anotherHost/mvc-showcase (UnknownHostException) with 1 occurrences migrated to:     https://anotherHost/mvc-showcase ([https](https://anotherHost/mvc-showcase) result UnknownHostException). * [ ] http://arjen:foobar@java.sun.com:80 (UnknownHostException) with 1 occurrences migrated to:     https://arjen:foobar@java.sun.com:80 ([https](https://arjen:foobar@java.sun.com:80) result UnknownHostException). * [ ] http://barfoo:8888 (UnknownHostException) with 1 occurrences migrated to:     https://barfoo:8888 ([https](https://barfoo:8888) result UnknownHostException). * [ ] http://dev.bar.com (UnknownHostException) with 3 occurrences migrated to:     https://dev.bar.com ([https](https://dev.bar.com) result UnknownHostException). * [ ] http://domain1.com (UnknownHostException) with 25 occurrences migrated to:     https://domain1.com ([https](https://domain1.com) result UnknownHostException). * [ ] http://domain1.com/test.html (UnknownHostException) with 4 occurrences migrated to:     https://domain1.com/test.html ([https](https://domain1.com/test.html) result UnknownHostException). * [ ] http://domain2.com (UnknownHostException) with 98 occurrences migrated to:     https://domain2.com ([https](https://domain2.com) result UnknownHostException). * [ ] http://example.com"",HttpMethod.GET (UnknownHostException) with 6 occurrences migrated to:     https://example.com"",HttpMethod.GET ([https](https://example.com"",HttpMethod.GET) result UnknownHostException). * [ ] http://example/ (UnknownHostException) with 1 occurrences migrated to:     https://example/ ([https](https://example/) result UnknownHostException). * [ ] http://fake-service (UnknownHostException) with 7 occurrences migrated to:     https://fake-service ([https](https://fake-service) result UnknownHostException). * [ ] http://foo (UnknownHostException) with 3 occurrences migrated to:     https://foo ([https](https://foo) result UnknownHostException). * [ ] http://foo.bar.com (UnknownHostException) with 4 occurrences migrated to:     https://foo.bar.com ([https](https://foo.bar.com) result UnknownHostException). * [ ] http://foobar:8088 (UnknownHostException) with 1 occurrences migrated to:     https://foobar:8088 ([https](https://foobar:8088) result UnknownHostException). * [ ] http://host:port/myApp/myEndpoint/ (UnknownHostException) with 1 occurrences migrated to:     https://host:port/myApp/myEndpoint/ ([https](https://host:port/myApp/myEndpoint/) result UnknownHostException). * [ ] http://jaxws.remoting.springframework.org/ (UnknownHostException) with 4 occurrences migrated to:     https://jaxws.remoting.springframework.org/ ([https](https://jaxws.remoting.springframework.org/) result UnknownHostException). * [ ] http://joe.openid.example.org/ (UnknownHostException) with 2 occurrences migrated to:     https://joe.openid.example.org/ ([https](https://joe.openid.example.org/) result UnknownHostException). * [ ] http://myserver (UnknownHostException) with 1 occurrences migrated to:     https://myserver ([https](https://myserver) result UnknownHostException). * [ ] http://myserver/logo.png (UnknownHostException) with 1 occurrences migrated to:     https://myserver/logo.png ([https](https://myserver/logo.png) result UnknownHostException). * [ ] http://myurl (UnknownHostException) with 12 occurrences migrated to:     https://myurl ([https](https://myurl) result UnknownHostException). * [ ] http://remotehost:8080/remoting/AccountService (UnknownHostException) with 2 occurrences migrated to:     https://remotehost:8080/remoting/AccountService ([https](https://remotehost:8080/remoting/AccountService) result UnknownHostException). * [ ] http://samples.springframework.org/order (UnknownHostException) with 2 occurrences migrated to:     https://samples.springframework.org/order ([https](https://samples.springframework.org/order) result UnknownHostException). * [ ] http://somethingDifferent (UnknownHostException) with 1 occurrences migrated to:     https://somethingDifferent ([https](https://somethingDifferent) result UnknownHostException). * [ ] http://url.somewhere.com (UnknownHostException) with 25 occurrences migrated to:     https://url.somewhere.com ([https](https://url.somewhere.com) result UnknownHostException). * [ ] http://url.somewhere.com/path (UnknownHostException) with 1 occurrences migrated to:     https://url.somewhere.com/path ([https](https://url.somewhere.com/path) result UnknownHostException). * [ ] http://url.somewhere.com/path?id=1 (UnknownHostException) with 1 occurrences migrated to:     https://url.somewhere.com/path?id=1 ([https](https://url.somewhere.com/path?id=1) result UnknownHostException). * [ ] http://url.somewhere.com/test.htm (UnknownHostException) with 2 occurrences migrated to:     https://url.somewhere.com/test.htm ([https](https://url.somewhere.com/test.htm) result UnknownHostException). * [ ] http://url.somewhere.com?a=b&c=d (UnknownHostException) with 1 occurrences migrated to:     https://url.somewhere.com?a=b&c=d ([https](https://url.somewhere.com?a=b&c=d) result UnknownHostException). * [ ] http://url.somewhere.com?foo= (UnknownHostException) with 2 occurrences migrated to:     https://url.somewhere.com?foo= ([https](https://url.somewhere.com?foo=) result UnknownHostException). * [ ] http://url.somewhere.com?foo=bar (UnknownHostException) with 4 occurrences migrated to:     https://url.somewhere.com?foo=bar ([https](https://url.somewhere.com?foo=bar) result UnknownHostException). * [ ] http://url.somewhere.com?foo=bar&a=b&c=d (UnknownHostException) with 2 occurrences migrated to:     https://url.somewhere.com?foo=bar&a=b&c=d ([https](https://url.somewhere.com?foo=bar&a=b&c=d) result UnknownHostException). * [ ] http://wiki.fasterxml.com/JacksonHome (UnknownHostException) with 3 occurrences migrated to:     https://wiki.fasterxml.com/JacksonHome ([https](https://wiki.fasterxml.com/JacksonHome) result UnknownHostException). * [ ] http://wiki.fasterxml.com/JacksonJsonViews (UnknownHostException) with 4 occurrences migrated to:     https://wiki.fasterxml.com/JacksonJsonViews ([https](https://wiki.fasterxml.com/JacksonJsonViews) result UnknownHostException). * [ ] http://www (UnknownHostException) with 1 occurrences migrated to:     https://www ([https](https://www) result UnknownHostException). * [ ] http://x.y.z (UnknownHostException) with 2 occurrences migrated to:     https://x.y.z ([https](https://x.y.z) result UnknownHostException). * [ ] http://abc.com/v1 (301) with 1 occurrences migrated to:     https://abc.go.com/v1 ([https](https://abc.com/v1) result 404). * [ ] http://abc.com/v1/accounts/43 (301) with 1 occurrences migrated to:     https://abc.go.com/v1/accounts/43 ([https](https://abc.com/v1/accounts/43) result 404). * [ ] http://abc.com/v1/accounts?q=12 (301) with 1 occurrences migrated to:     https://abc.go.com/v1/accounts?q=12 ([https](https://abc.com/v1/accounts?q=12) result 404). * [ ] http://apache.org/xml/features/disallow-doctype-decl (404) with 10 occurrences migrated to:     https://apache.org/xml/features/disallow-doctype-decl ([https](https://apache.org/xml/features/disallow-doctype-decl) result 404). * [ ] http://docs.spring.io/v1/bar (301) with 1 occurrences migrated to:     https://docs.spring.io/v1/bar ([https](https://docs.spring.io/v1/bar) result 404). * [ ] http://example.com/-foo (404) with 2 occurrences migrated to:     https://example.com/-foo ([https](https://example.com/-foo) result 404). * [ ] http://example.com/1 (404) with 1 occurrences migrated to:     https://example.com/1 ([https](https://example.com/1) result 404). * [ ] http://example.com/1/2 (404) with 2 occurrences migrated to:     https://example.com/1/2 ([https](https://example.com/1/2) result 404). * [ ] http://example.com/2 (404) with 1 occurrences migrated to:     https://example.com/2 ([https](https://example.com/2) result 404). * [ ] http://example.com/a%20b?q=a%2Bb (404) with 1 occurrences migrated to:     https://example.com/a%20b?q=a%2Bb ([https](https://example.com/a%20b?q=a%2Bb) result 404). * [ ] http://example.com/abc/ (404) with 1 occurrences migrated to:     https://example.com/abc/ ([https](https://example.com/abc/) result 404). * [ ] http://example.com/abc/x/y (404) with 1 occurrences migrated to:     https://example.com/abc/x/y ([https](https://example.com/abc/x/y) result 404). * [ ] http://example.com/abc/x/y/z (404) with 3 occurrences migrated to:     https://example.com/abc/x/y/z ([https](https://example.com/abc/x/y/z) result 404). * [ ] http://example.com/app/login/authenticate (404) with 1 occurrences migrated to:     https://example.com/app/login/authenticate ([https](https://example.com/app/login/authenticate) result 404). * [ ] http://example.com/arbitrary/path (404) with 1 occurrences migrated to:     https://example.com/arbitrary/path ([https](https://example.com/arbitrary/path) result 404). * [ ] http://example.com/bar (404) with 6 occurrences migrated to:     https://example.com/bar ([https](https://example.com/bar) result 404). * [ ] http://example.com/context.xml (404) with 4 occurrences migrated to:     https://example.com/context.xml ([https](https://example.com/context.xml) result 404). * [ ] http://example.com/example (404) with 6 occurrences migrated to:     https://example.com/example ([https](https://example.com/example) result 404). * [ ] http://example.com/example/?name (404) with 1 occurrences migrated to:     https://example.com/example/?name ([https](https://example.com/example/?name) result 404). * [ ] http://example.com/example/?name= (404) with 1 occurrences migrated to:     https://example.com/example/?name= ([https](https://example.com/example/?name=) result 404). * [ ] http://example.com/example/?name=%20 (404) with 1 occurrences migrated to:     https://example.com/example/?name=%20 ([https](https://example.com/example/?name=%20) result 404). * [ ] http://example.com/example/?name=row%5B0%5D (404) with 1 occurrences migrated to:     https://example.com/example/?name=row%5B0%5D ([https](https://example.com/example/?name=row%5B0%5D) result 404). * [ ] http://example.com/example/?name=value (404) with 1 occurrences migrated to:     https://example.com/example/?name=value ([https](https://example.com/example/?name=value) result 404). * [ ] http://example.com/example/?name=value¶m2=value+2 (404) with 1 occurrences migrated to:     https://example.com/example/?name=value¶m2=value+2 ([https](https://example.com/example/?name=value¶m2=value+2) result 404). * [ ] http://example.com/example/?row%5B0%5D=value (404) with 1 occurrences migrated to:     https://example.com/example/?row%5B0%5D=value ([https](https://example.com/example/?row%5B0%5D=value) result 404). * [ ] http://example.com/foo (404) with 7 occurrences migrated to:     https://example.com/foo ([https](https://example.com/foo) result 404). * [ ] http://example.com/foo/../bar (404) with 1 occurrences migrated to:     https://example.com/foo/../bar ([https](https://example.com/foo/../bar) result 404). * [ ] http://example.com/foo/foo2?bar (404) with 1 occurrences migrated to:     https://example.com/foo/foo2?bar ([https](https://example.com/foo/foo2?bar) result 404). * [ ] http://example.com/foo?bar (404) with 4 occurrences migrated to:     https://example.com/foo?bar ([https](https://example.com/foo?bar) result 404). * [ ] http://example.com/foo?bar= (404) with 2 occurrences migrated to:     https://example.com/foo?bar= ([https](https://example.com/foo?bar=) result 404). * [ ] http://example.com/foo?bar=baz (404) with 2 occurrences migrated to:     https://example.com/foo?bar=baz ([https](https://example.com/foo?bar=baz) result 404). * [ ] http://example.com/foo?baz=42 (404) with 1 occurrences migrated to:     https://example.com/foo?baz=42 ([https](https://example.com/foo?baz=42) result 404). * [ ] http://example.com/foo?foo=bar&baz=qux (404) with 2 occurrences migrated to:     https://example.com/foo?foo=bar&baz=qux ([https](https://example.com/foo?foo=bar&baz=qux) result 404). * [ ] http://example.com/hotel (404) with 3 occurrences migrated to:     https://example.com/hotel ([https](https://example.com/hotel) result 404). * [ ] http://example.com/hotel%20list (404) with 1 occurrences migrated to:     https://example.com/hotel%20list ([https](https://example.com/hotel%20list) result 404). * [ ] http://example.com/hotel%20list/Z (404) with 1 occurrences migrated to:     https://example.com/hotel%20list/Z ([https](https://example.com/hotel%20list/Z) result 404). * [ ] http://example.com/hotel%20list/Z%C3%BCrich (404) with 3 occurrences migrated to:     https://example.com/hotel%20list/Z%C3%BCrich ([https](https://example.com/hotel%20list/Z%C3%BCrich) result 404). * [ ] http://example.com/hotels (404) with 3 occurrences migrated to:     https://example.com/hotels ([https](https://example.com/hotels) result 404). * [ ] http://example.com/hotels/ (404) with 15 occurrences migrated to:     https://example.com/hotels/ ([https](https://example.com/hotels/) result 404). * [ ] http://example.com/hotels/1/bookings/42 (404) with 1 occurrences migrated to:     https://example.com/hotels/1/bookings/42 ([https](https://example.com/hotels/1/bookings/42) result 404). * [ ] http://example.com/hotels/1/pic/pics%2Flogo.png/size/150x150 (404) with 2 occurrences migrated to:     https://example.com/hotels/1/pic/pics%2Flogo.png/size/150x150 ([https](https://example.com/hotels/1/pic/pics%2Flogo.png/size/150x150) result 404). * [ ] http://example.com/hotels/1/pic/pics/logo.png (404) with 1 occurrences migrated to:     https://example.com/hotels/1/pic/pics/logo.png ([https](https://example.com/hotels/1/pic/pics/logo.png) result 404). * [ ] http://example.com/hotels/42/bookings/21 (404) with 1 occurrences migrated to:     https://example.com/hotels/42/bookings/21 ([https](https://example.com/hotels/42/bookings/21) result 404). * [ ] http://example.com/hotels/42/bookings/42 (404) with 1 occurrences migrated to:     https://example.com/hotels/42/bookings/42 ([https](https://example.com/hotels/42/bookings/42) result 404). * [ ] http://example.com/hotels/Rest%20%26%20Relax/bookings/42 (404) with 2 occurrences migrated to:     https://example.com/hotels/Rest%20%26%20Relax/bookings/42 ([https](https://example.com/hotels/Rest%20%26%20Relax/bookings/42) result 404). * [ ] http://example.com/info (404) with 2 occurrences migrated to:     https://example.com/info ([https](https://example.com/info) result 404). * [ ] http://example.com/invalid (404) with 1 occurrences migrated to:     https://example.com/invalid ([https](https://example.com/invalid) result 404). * [ ] http://example.com/jquery-1.11.0.min.js (404) with 2 occurrences migrated to:     https://example.com/jquery-1.11.0.min.js ([https](https://example.com/jquery-1.11.0.min.js) result 404). * [ ] http://example.com/match (404) with 1 occurrences migrated to:     https://example.com/match ([https](https://example.com/match) result 404). * [ ] http://example.com/myFileUpload (404) with 1 occurrences migrated to:     https://example.com/myFileUpload ([https](https://example.com/myFileUpload) result 404). * [ ] http://example.com/myForm (404) with 1 occurrences migrated to:     https://example.com/myForm ([https](https://example.com/myForm) result 404). * [ ] http://example.com/path (404) with 4 occurrences migrated to:     https://example.com/path ([https](https://example.com/path) result 404). * [ ] http://example.com/path?query (404) with 2 occurrences migrated to:     https://example.com/path?query ([https](https://example.com/path?query) result 404). * [ ] http://example.com/path?query=foo (404) with 1 occurrences migrated to:     https://example.com/path?query=foo ([https](https://example.com/path?query=foo) result 404). * [ ] http://example.com/people (404) with 1 occurrences migrated to:     https://example.com/people ([https](https://example.com/people) result 404). * [ ] http://example.com/people/ (404) with 1 occurrences migrated to:     https://example.com/people/ ([https](https://example.com/people/) result 404). * [ ] http://example.com/prefix/path (404) with 2 occurrences migrated to:     https://example.com/prefix/path ([https](https://example.com/prefix/path) result 404). * [ ] http://example.com/resource (404) with 5 occurrences migrated to:     https://example.com/resource ([https](https://example.com/resource) result 404). * [ ] http://example.com/resource?access_token=123 (404) with 1 occurrences migrated to:     https://example.com/resource?access_token=123 ([https](https://example.com/resource?access_token=123) result 404). * [ ] http://example.com/spaces (404) with 1 occurrences migrated to:     https://example.com/spaces ([https](https://example.com/spaces) result 404). * [ ] http://example.com/spaces%20and%20%E2%82%AC (404) with 3 occurrences migrated to:     https://example.com/spaces%20and%20%E2%82%AC ([https](https://example.com/spaces%20and%20%E2%82%AC) result 404). * [ ] http://example.com/spring/ (404) with 1 occurrences migrated to:     https://example.com/spring/ ([https](https://example.com/spring/) result 404). * [ ] http://example.com/test/this/here (404) with 1 occurrences migrated to:     https://example.com/test/this/here ([https](https://example.com/test/this/here) result 404). * [ ] http://example.com/upload (404) with 1 occurrences migrated to:     https://example.com/upload ([https](https://example.com/upload) result 404). * [ ] http://example.com/user (404) with 1 occurrences migrated to:     https://example.com/user ([https](https://example.com/user) result 404). * [ ] http://example.org/fonts/css (404) with 6 occurrences migrated to:     https://example.org/fonts/css ([https](https://example.org/fonts/css) result 404). * [ ] http://example.org/foo/page.html (404) with 1 occurrences migrated to:     https://example.org/foo/page.html ([https](https://example.org/foo/page.html) result 404). * [ ] http://example.org/image.png (404) with 4 occurrences migrated to:     https://example.org/image.png ([https](https://example.org/image.png) result 404). * [ ] http://example.org/music/people (404) with 4 occurrences migrated to:     https://example.org/music/people ([https](https://example.org/music/people) result 404). * [ ] http://example.org/page.cache.html (404) with 1 occurrences migrated to:     https://example.org/page.cache.html ([https](https://example.org/page.cache.html) result 404). * [ ] http://example.org/path (404) with 3 occurrences migrated to:     https://example.org/path ([https](https://example.org/path) result 404). * [ ] http://springframework.org/oxm-test (404) with 2 occurrences migrated to:     https://springframework.org/oxm-test ([https](https://springframework.org/oxm-test) result 404). * [ ] http://www.example.com/favicon.ico (404) with 2 occurrences migrated to:     https://www.example.com/favicon.ico ([https](https://www.example.com/favicon.ico) result 404). * [ ] http://www.example.com/foo/bar (404) with 1 occurrences migrated to:     https://www.example.com/foo/bar ([https](https://www.example.com/foo/bar) result 404). * [ ] http://www.example.com/hotels (404) with 2 occurrences migrated to:     https://www.example.com/hotels ([https](https://www.example.com/hotels) result 404). * [ ] http://www.example.com/user/ (404) with 4 occurrences migrated to:     https://www.example.com/user/ ([https](https://www.example.com/user/) result 404). * [ ] http://www.example.com/user/john%3Bdoe/dashboard (404) with 4 occurrences migrated to:     https://www.example.com/user/john%3Bdoe/dashboard ([https](https://www.example.com/user/john%3Bdoe/dashboard) result 404). * [ ] http://www.example.com/user/john;doe/dashboard (404) with 2 occurrences migrated to:     https://www.example.com/user/john;doe/dashboard ([https](https://www.example.com/user/john;doe/dashboard) result 404). * [ ] http://www.ibm.com/developerworks/websphere/library/techarticles/0404_tang/0404_tang.html (301) with 1 occurrences migrated to:     https://www.ibm.com/developerworks/websphere/library/techarticles/0404_tang/0404_tang.html ([https](https://www.ibm.com/developerworks/websphere/library/techarticles/0404_tang/0404_tang.html) result 404). * [ ] http://mydomain1.com:80/path (301) with 2 occurrences migrated to:     https://www.mydomain1.com/path ([https](https://mydomain1.com:80/path) result 404). * [ ] http://www.quartz-scheduler.org/documentation/quartz-2.1.x/tutorials/tutorial-lesson-03 (404) with 1 occurrences migrated to:     https://www.quartz-scheduler.org/documentation/quartz-2.1.x/tutorials/tutorial-lesson-03 ([https](https://www.quartz-scheduler.org/documentation/quartz-2.1.x/tutorials/tutorial-lesson-03) result 404). * [ ] http://www.utoronto.ca/webdocs/HTMLdocs/Book/Book-3ed/appb/mimetype.html (301) with 1 occurrences migrated to:     https://www.utoronto.ca/webdocs/HTMLdocs/Book/Book-3ed/appb/mimetype.html ([https](https://www.utoronto.ca/webdocs/HTMLdocs/Book/Book-3ed/appb/mimetype.html) result 404). * [ ] http://xml.apache.org/xslt (404) with 3 occurrences migrated to:     https://xml.apache.org/xslt ([https](https://xml.apache.org/xslt) result 404). * [ ] http://myhost.com/resource/path/myTemplate.txt (500) with 1 occurrences migrated to:     https://myhost.com/resource/path/myTemplate.txt ([https](https://myhost.com/resource/path/myTemplate.txt) result 500). * [ ] http://myhost.com/some/arbitrary/path (500) with 1 occurrences migrated to:     https://myhost.com/some/arbitrary/path ([https](https://myhost.com/some/arbitrary/path) result 500).  ## Fixed Success  These URLs were switched to an https URL with a 2xx status. While the status was successful, your review is still recommended.  * [ ] http://activemq.apache.org/delete-inactive-destinations.html with 1 occurrences migrated to:     https://activemq.apache.org/delete-inactive-destinations.html ([https](https://activemq.apache.org/delete-inactive-destinations.html) result 200). * [ ] http://activemq.apache.org/stomp.html with 1 occurrences migrated to:     https://activemq.apache.org/stomp.html ([https](https://activemq.apache.org/stomp.html) result 200). * [ ] http://ant.apache.org with 1 occurrences migrated to:     https://ant.apache.org ([https](https://ant.apache.org) result 200). * [ ] http://asciidoctor.org/ with 1 occurrences migrated to:     https://asciidoctor.org/ ([https](https://asciidoctor.org/) result 200). * [ ] http://asciidoctor.org/docs/editing-asciidoc-with-live-preview/ with 2 occurrences migrated to:     https://asciidoctor.org/docs/editing-asciidoc-with-live-preview/ ([https](https://asciidoctor.org/docs/editing-asciidoc-with-live-preview/) result 200). * [ ] http://beanvalidation.org/ with 1 occurrences migrated to:     https://beanvalidation.org/ ([https](https://beanvalidation.org/) result 200). * [ ] http://caniuse.com/ with 2 occurrences migrated to:     https://caniuse.com/ ([https](https://caniuse.com/) result 200). * [ ] http://cbor.io/ with 1 occurrences migrated to:     https://cbor.io/ ([https](https://cbor.io/) result 200). * [ ] http://code.jquery.com/jquery-1.11.0.min.js with 2 occurrences migrated to:     https://code.jquery.com/jquery-1.11.0.min.js ([https](https://code.jquery.com/jquery-1.11.0.min.js) result 200). * [ ] http://code.jquery.com/jquery.js with 1 occurrences migrated to:     https://code.jquery.com/jquery.js ([https](https://code.jquery.com/jquery.js) result 200). * [ ] http://commons.apache.org/proper/commons-lang/ with 2 occurrences migrated to:     https://commons.apache.org/proper/commons-lang/ ([https](https://commons.apache.org/proper/commons-lang/) result 200). * [ ] http://docs.oracle.com/javase/6/docs/api/java/lang/instrument/package-summary.html with 1 occurrences migrated to:     https://docs.oracle.com/javase/6/docs/api/java/lang/instrument/package-summary.html ([https](https://docs.oracle.com/javase/6/docs/api/java/lang/instrument/package-summary.html) result 200). * [ ] http://docs.oracle.com/javase/8/docs/api/java/beans/package-summary.html with 1 occurrences migrated to:     https://docs.oracle.com/javase/8/docs/api/java/beans/package-summary.html ([https](https://docs.oracle.com/javase/8/docs/api/java/beans/package-summary.html) result 200). * [ ] http://docs.oracle.com/javase/8/docs/api/java/io/Serializable.html with 1 occurrences migrated to:     https://docs.oracle.com/javase/8/docs/api/java/io/Serializable.html ([https](https://docs.oracle.com/javase/8/docs/api/java/io/Serializable.html) result 200). * [ ] http://docs.oracle.com/javase/8/docs/api/java/lang/instrument/package-summary.html with 1 occurrences migrated to:     https://docs.oracle.com/javase/8/docs/api/java/lang/instrument/package-summary.html ([https](https://docs.oracle.com/javase/8/docs/api/java/lang/instrument/package-summary.html) result 200). * [ ] http://docs.oracle.com/javase/8/docs/api/javax/script/ScriptEngineFactory.html with 2 occurrences migrated to:     https://docs.oracle.com/javase/8/docs/api/javax/script/ScriptEngineFactory.html ([https](https://docs.oracle.com/javase/8/docs/api/javax/script/ScriptEngineFactory.html) result 200). * [ ] http://docs.oracle.com/javase/tutorial/javabeans/advanced/customization.html with 1 occurrences migrated to:     https://docs.oracle.com/javase/tutorial/javabeans/advanced/customization.html ([https](https://docs.oracle.com/javase/tutorial/javabeans/advanced/customization.html) result 200). * [ ] http://docs.oracle.com/javase/tutorial/javabeans/writing/properties.html with 1 occurrences migrated to:     https://docs.oracle.com/javase/tutorial/javabeans/writing/properties.html ([https](https://docs.oracle.com/javase/tutorial/javabeans/writing/properties.html) result 200). * [ ] http://docs.seleniumhq.org/ with 1 occurrences migrated to:     https://docs.seleniumhq.org/ ([https](https://docs.seleniumhq.org/) result 200). * [ ] http://docs.seleniumhq.org/projects/webdriver/ with 1 occurrences migrated to:     https://docs.seleniumhq.org/projects/webdriver/ ([https](https://docs.seleniumhq.org/projects/webdriver/) result 200). * [ ] http://docs.spring.io/spring-framework/docs/current/javadoc-api/ with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/ ([https](https://docs.spring.io/spring-framework/docs/current/javadoc-api/) result 200). * [ ] http://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/servlet/view/script/ScriptTemplateView.html with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/servlet/view/script/ScriptTemplateView.html ([https](https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/servlet/view/script/ScriptTemplateView.html) result 200). * [ ] http://docs.spring.io/spring-framework/docs/current/spring-framework-reference/ with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/ ([https](https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/) result 200). * [ ] http://docs.spring.io/spring-session/docs/current/reference/html5/ with 1 occurrences migrated to:     https://docs.spring.io/spring-session/docs/current/reference/html5/ ([https](https://docs.spring.io/spring-session/docs/current/reference/html5/) result 200). * [ ] http://en.wikipedia.org/wiki/Adapter_pattern with 1 occurrences migrated to:     https://en.wikipedia.org/wiki/Adapter_pattern ([https](https://en.wikipedia.org/wiki/Adapter_pattern) result 200). * [ ] http://en.wikipedia.org/wiki/Halting_Problem with 1 occurrences migrated to:     https://en.wikipedia.org/wiki/Halting_Problem ([https](https://en.wikipedia.org/wiki/Halting_Problem) result 200). * [ ] http://en.wikipedia.org/wiki/List_of_HTTP_status_codes with 1 occurrences migrated to:     https://en.wikipedia.org/wiki/List_of_HTTP_status_codes ([https](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes) result 200). * [ ] http://en.wikipedia.org/wiki/MIME with 1 occurrences migrated to:     https://en.wikipedia.org/wiki/MIME ([https](https://en.wikipedia.org/wiki/MIME) result 200). * [ ] http://en.wikipedia.org/wiki/Mock_Object with 1 occurrences migrated to:     https://en.wikipedia.org/wiki/Mock_Object ([https](https://en.wikipedia.org/wiki/Mock_Object) result 200). * [ ] http://en.wikipedia.org/wiki/Polyfill with 2 occurrences migrated to:     https://en.wikipedia.org/wiki/Polyfill ([https](https://en.wikipedia.org/wiki/Polyfill) result 200). * [ ] http://example.com with 150 occurrences migrated to:     https://example.com ([https](https://example.com) result 200). * [ ] http://example.com/ with 16 occurrences migrated to:     https://example.com/ ([https](https://example.com/) result 200). * [ ] http://example.com?foo with 2 occurrences migrated to:     https://example.com?foo ([https](https://example.com?foo) result 200). * [ ] http://example.com?foo=bar with 8 occurrences migrated to:     https://example.com?foo=bar ([https](https://example.com?foo=bar) result 200). * [ ] http://example.com?foo=bar@baz with 1 occurrences migrated to:     https://example.com?foo=bar@baz ([https](https://example.com?foo=bar@baz) result 200). * [ ] http://example.org with 18 occurrences migrated to:     https://example.org ([https](https://example.org) result 200). * [ ] http://example.org/ with 1 occurrences migrated to:     https://example.org/ ([https](https://example.org/) result 200). * [ ] http://fasterxml.github.io/jackson-databind/javadoc/2.6/com/fasterxml/jackson/databind/DeserializationFeature.html with 2 occurrences migrated to:     https://fasterxml.github.io/jackson-databind/javadoc/2.6/com/fasterxml/jackson/databind/DeserializationFeature.html ([https](https://fasterxml.github.io/jackson-databind/javadoc/2.6/com/fasterxml/jackson/databind/DeserializationFeature.html) result 200). * [ ] http://fasterxml.github.io/jackson-databind/javadoc/2.6/com/fasterxml/jackson/databind/MapperFeature.html with 2 occurrences migrated to:     https://fasterxml.github.io/jackson-databind/javadoc/2.6/com/fasterxml/jackson/databind/MapperFeature.html ([https](https://fasterxml.github.io/jackson-databind/javadoc/2.6/com/fasterxml/jackson/databind/MapperFeature.html) result 200). * [ ] http://h2database.com with 1 occurrences migrated to:     https://h2database.com ([https](https://h2database.com) result 200). * [ ] http://handlebarsjs.com with 2 occurrences migrated to:     https://handlebarsjs.com ([https](https://handlebarsjs.com) result 200). * [ ] http://handlebarsjs.com/ with 2 occurrences migrated to:     https://handlebarsjs.com/ ([https](https://handlebarsjs.com/) result 200). * [ ] http://hc.apache.org/httpcomponents-asyncclient-dev/ with 1 occurrences migrated to:     https://hc.apache.org/httpcomponents-asyncclient-dev/ ([https](https://hc.apache.org/httpcomponents-asyncclient-dev/) result 200). * [ ] http://hc.apache.org/httpcomponents-client-ga/ with 2 occurrences migrated to:     https://hc.apache.org/httpcomponents-client-ga/ ([https](https://hc.apache.org/httpcomponents-client-ga/) result 200). * [ ] http://hc.apache.org/httpcomponents-client-ga/httpclient/ with 1 occurrences migrated to:     https://hc.apache.org/httpcomponents-client-ga/httpclient/ ([https](https://hc.apache.org/httpcomponents-client-ga/httpclient/) result 200). * [ ] http://www.hibernate.org/ (301) with 1 occurrences migrated to:     https://hibernate.org/ ([https](https://www.hibernate.org/) result 200). * [ ] http://www.hibernate.org (301) with 1 occurrences migrated to:     https://hibernate.org/ ([https](https://www.hibernate.org) result 200). * [ ] http://jcp.org/aboutJava/communityprocess/final/jsr003/index3.html with 1 occurrences migrated to:     https://jcp.org/aboutJava/communityprocess/final/jsr003/index3.html ([https](https://jcp.org/aboutJava/communityprocess/final/jsr003/index3.html) result 200). * [ ] http://jcp.org/aboutJava/communityprocess/final/jsr160/index.html with 1 occurrences migrated to:     https://jcp.org/aboutJava/communityprocess/final/jsr160/index.html ([https](https://jcp.org/aboutJava/communityprocess/final/jsr160/index.html) result 200). * [ ] http://jcp.org/en/jsr/detail?id=107 with 1 occurrences migrated to:     https://jcp.org/en/jsr/detail?id=107 ([https](https://jcp.org/en/jsr/detail?id=107) result 200). * [ ] http://joel-costigliola.github.io/assertj/ with 3 occurrences migrated to:     https://joel-costigliola.github.io/assertj/ ([https](https://joel-costigliola.github.io/assertj/) result 200). * [ ] http://jsonassert.skyscreamer.org with 1 occurrences migrated to:     https://jsonassert.skyscreamer.org ([https](https://jsonassert.skyscreamer.org) result 200). * [ ] http://jsonassert.skyscreamer.org/ with 5 occurrences migrated to:     https://jsonassert.skyscreamer.org/ ([https](https://jsonassert.skyscreamer.org/) result 200). * [ ] http://junit.org/junit5/docs/current/user-guide/ with 2 occurrences migrated to:     https://junit.org/junit5/docs/current/user-guide/ ([https](https://junit.org/junit5/docs/current/user-guide/) result 200). * [ ] http://kotlinlang.org/ with 2 occurrences migrated to:     https://kotlinlang.org/ ([https](https://kotlinlang.org/) result 200). * [ ] http://kotlinlang.org/docs/reference/ with 1 occurrences migrated to:     https://kotlinlang.org/docs/reference/ ([https](https://kotlinlang.org/docs/reference/) result 200). * [ ] http://kotlinlang.org/docs/reference/classes.html with 3 occurrences migrated to:     https://kotlinlang.org/docs/reference/classes.html ([https](https://kotlinlang.org/docs/reference/classes.html) result 200). * [ ] http://mydomain.com with 5 occurrences migrated to:     https://mydomain.com ([https](https://mydomain.com) result 200). * [ ] http://netty.io/ with 1 occurrences migrated to:     https://netty.io/ ([https](https://netty.io/) result 200). * [ ] http://openjdk.java.net/jeps/290 with 1 occurrences migrated to:     https://openjdk.java.net/jeps/290 ([https](https://openjdk.java.net/jeps/290) result 200). * [ ] http://openjdk.java.net/projects/nashorn/ with 10 occurrences migrated to:     https://openjdk.java.net/projects/nashorn/ ([https](https://openjdk.java.net/projects/nashorn/) result 200). * [ ] http://pivotal.io/security/cve-2015-5211 with 1 occurrences migrated to:     https://pivotal.io/security/cve-2015-5211 ([https](https://pivotal.io/security/cve-2015-5211) result 200). * [ ] http://poi.apache.org with 3 occurrences migrated to:     https://poi.apache.org ([https](https://poi.apache.org) result 200). * [ ] http://projects.spring.io/spring-boot/ with 1 occurrences migrated to:     https://projects.spring.io/spring-boot/ ([https](https://projects.spring.io/spring-boot/) result 200). * [ ] http://projects.spring.io/spring-data/ with 1 occurrences migrated to:     https://projects.spring.io/spring-data/ ([https](https://projects.spring.io/spring-data/) result 200). * [ ] http://projects.spring.io/spring-framework/ with 1 occurrences migrated to:     https://projects.spring.io/spring-framework/ ([https](https://projects.spring.io/spring-framework/) result 200). * [ ] http://projects.spring.io/spring-integration/ with 1 occurrences migrated to:     https://projects.spring.io/spring-integration/ ([https](https://projects.spring.io/spring-integration/) result 200). * [ ] http://projects.spring.io/spring-security/ with 3 occurrences migrated to:     https://projects.spring.io/spring-security/ ([https](https://projects.spring.io/spring-security/) result 200). * [ ] http://repo1.maven.org/maven2/javax/inject/javax.inject/1/ with 2 occurrences migrated to:     https://repo1.maven.org/maven2/javax/inject/javax.inject/1/ ([https](https://repo1.maven.org/maven2/javax/inject/javax.inject/1/) result 200). * [ ] http://schema.spring.io/mvc/spring-mvc.xsd with 1 occurrences migrated to:     https://schema.spring.io/mvc/spring-mvc.xsd ([https](https://schema.spring.io/mvc/spring-mvc.xsd) result 200). * [ ] http://search.maven.org/ with 2 occurrences migrated to:     https://search.maven.org/ ([https](https://search.maven.org/) result 200). * [ ] http://sockjs.github.io/sockjs-protocol/sockjs-protocol-0.3.3.html with 3 occurrences migrated to:     https://sockjs.github.io/sockjs-protocol/sockjs-protocol-0.3.3.html ([https](https://sockjs.github.io/sockjs-protocol/sockjs-protocol-0.3.3.html) result 200). * [ ] http://sourceforge.net with 1 occurrences migrated to:     https://sourceforge.net ([https](https://sourceforge.net) result 200). * [ ] http://sourceforge.net/projects/javadiff/ with 1 occurrences migrated to:     https://sourceforge.net/projects/javadiff/ ([https](https://sourceforge.net/projects/javadiff/) result 200). * [ ] http://sourceforge.net/sflogo.php?group_id=37160 with 1 occurrences migrated to:     https://sourceforge.net/sflogo.php?group_id=37160 ([https](https://sourceforge.net/sflogo.php?group_id=37160) result 200). * [ ] http://spring.io/blog/ with 1 occurrences migrated to:     https://spring.io/blog/ ([https](https://spring.io/blog/) result 200). * [ ] http://spring.io/blog/category/news with 1 occurrences migrated to:     https://spring.io/blog/category/news ([https](https://spring.io/blog/category/news) result 200). * [ ] http://square.github.io/okhttp/ with 1 occurrences migrated to:     https://square.github.io/okhttp/ ([https](https://square.github.io/okhttp/) result 200). * [ ] http://stackoverflow.com/questions/1481251/what-does-document-domain-document-domain-do with 1 occurrences migrated to:     https://stackoverflow.com/questions/1481251/what-does-document-domain-document-domain-do ([https](https://stackoverflow.com/questions/1481251/what-does-document-domain-document-domain-do) result 200). * [ ] http://stackoverflow.com/questions/19394570/java-jre-7u45-breaks-classloader-getresources with 2 occurrences migrated to:     https://stackoverflow.com/questions/19394570/java-jre-7u45-breaks-classloader-getresources ([https](https://stackoverflow.com/questions/19394570/java-jre-7u45-breaks-classloader-getresources) result 200). * [ ] http://stackoverflow.com/questions/22986109/testing-spring-managed-servlet with 1 occurrences migrated to:     https://stackoverflow.com/questions/22986109/testing-spring-managed-servlet ([https](https://stackoverflow.com/questions/22986109/testing-spring-managed-servlet) result 200). * [ ] http://stackoverflow.com/questions/24725438/what-could-cause-a-class-implementing-applicationlistenercontextrefreshedevent with 1 occurrences migrated to:     https://stackoverflow.com/questions/24725438/what-could-cause-a-class-implementing-applicationlistenercontextrefreshedevent ([https](https://stackoverflow.com/questions/24725438/what-could-cause-a-class-implementing-applicationlistenercontextrefreshedevent) result 200). * [ ] http://stackoverflow.com/questions/35733344/can-contextconfiguration-in-a-custom-annotation-be-merged with 1 occurrences migrated to:     https://stackoverflow.com/questions/35733344/can-contextconfiguration-in-a-custom-annotation-be-merged ([https](https://stackoverflow.com/questions/35733344/can-contextconfiguration-in-a-custom-annotation-be-merged) result 200). * [ ] http://start.spring.io/ with 2 occurrences migrated to:     https://start.spring.io/ ([https](https://start.spring.io/) result 200). * [ ] http://stas-blogspot.blogspot.com/2010/03/java-bridge-methods-explained.html with 1 occurrences migrated to:     https://stas-blogspot.blogspot.com/2010/03/java-bridge-methods-explained.html ([https](https://stas-blogspot.blogspot.com/2010/03/java-bridge-methods-explained.html) result 200). * [ ] http://stomp.github.io/stomp-specification-1.2.html with 9 occurrences migrated to:     https://stomp.github.io/stomp-specification-1.2.html ([https](https://stomp.github.io/stomp-specification-1.2.html) result 200). * [ ] http://struts.apache.org with 1 occurrences migrated to:     https://struts.apache.org ([https](https://struts.apache.org) result 200). * [ ] http://struts.apache.org/ with 1 occurrences migrated to:     https://struts.apache.org/ ([https](https://struts.apache.org/) result 200). * [ ] http://tapestry.apache.org/ with 2 occurrences migrated to:     https://tapestry.apache.org/ ([https](https://tapestry.apache.org/) result 200). * [ ] http://tiles.apache.org with 4 occurrences migrated to:     https://tiles.apache.org ([https](https://tiles.apache.org) result 200). * [ ] http://tiles.apache.org/framework/dependency-management.html with 1 occurrences migrated to:     https://tiles.apache.org/framework/dependency-management.html ([https](https://tiles.apache.org/framework/dependency-management.html) result 200). * [ ] http://tomcat.apache.org/ with 1 occurrences migrated to:     https://tomcat.apache.org/ ([https](https://tomcat.apache.org/) result 200). * [ ] http://tools.ietf.org/html/rfc1945 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc1945 ([https](https://tools.ietf.org/html/rfc1945) result 200). * [ ] http://tools.ietf.org/html/rfc2109 with 2 occurrences migrated to:     https://tools.ietf.org/html/rfc2109 ([https](https://tools.ietf.org/html/rfc2109) result 200). * [ ] http://tools.ietf.org/html/rfc2295 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc2295 ([https](https://tools.ietf.org/html/rfc2295) result 200). * [ ] http://tools.ietf.org/html/rfc2324 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc2324 ([https](https://tools.ietf.org/html/rfc2324) result 200). * [ ] http://tools.ietf.org/html/rfc2518 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc2518 ([https](https://tools.ietf.org/html/rfc2518) result 200). * [ ] http://tools.ietf.org/html/rfc2616 with 3 occurrences migrated to:     https://tools.ietf.org/html/rfc2616 ([https](https://tools.ietf.org/html/rfc2616) result 200). * [ ] http://tools.ietf.org/html/rfc2774 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc2774 ([https](https://tools.ietf.org/html/rfc2774) result 200). * [ ] http://tools.ietf.org/html/rfc2817 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc2817 ([https](https://tools.ietf.org/html/rfc2817) result 200). * [ ] http://tools.ietf.org/html/rfc2965 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc2965 ([https](https://tools.ietf.org/html/rfc2965) result 200). * [ ] http://tools.ietf.org/html/rfc3229 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc3229 ([https](https://tools.ietf.org/html/rfc3229) result 200). * [ ] http://tools.ietf.org/html/rfc3986 with 4 occurrences migrated to:     https://tools.ietf.org/html/rfc3986 ([https](https://tools.ietf.org/html/rfc3986) result 200). * [ ] http://tools.ietf.org/html/rfc4918 with 5 occurrences migrated to:     https://tools.ietf.org/html/rfc4918 ([https](https://tools.ietf.org/html/rfc4918) result 200). * [ ] http://tools.ietf.org/html/rfc5842 with 2 occurrences migrated to:     https://tools.ietf.org/html/rfc5842 ([https](https://tools.ietf.org/html/rfc5842) result 200). * [ ] http://tools.ietf.org/html/rfc5988 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc5988 ([https](https://tools.ietf.org/html/rfc5988) result 200). * [ ] http://tools.ietf.org/html/rfc6266 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc6266 ([https](https://tools.ietf.org/html/rfc6266) result 200). * [ ] http://tools.ietf.org/html/rfc6454 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc6454 ([https](https://tools.ietf.org/html/rfc6454) result 200). * [ ] http://tools.ietf.org/html/rfc6455 with 2 occurrences migrated to:     https://tools.ietf.org/html/rfc6455 ([https](https://tools.ietf.org/html/rfc6455) result 200). * [ ] http://tools.ietf.org/html/rfc6585 with 4 occurrences migrated to:     https://tools.ietf.org/html/rfc6585 ([https](https://tools.ietf.org/html/rfc6585) result 200). * [ ] http://tools.ietf.org/html/rfc7230 with 10 occurrences migrated to:     https://tools.ietf.org/html/rfc7230 ([https](https://tools.ietf.org/html/rfc7230) result 200). * [ ] http://tools.ietf.org/html/rfc7231 with 56 occurrences migrated to:     https://tools.ietf.org/html/rfc7231 ([https](https://tools.ietf.org/html/rfc7231) result 200). * [ ] http://tools.ietf.org/html/rfc7232 with 8 occurrences migrated to:     https://tools.ietf.org/html/rfc7232 ([https](https://tools.ietf.org/html/rfc7232) result 200). * [ ] http://tools.ietf.org/html/rfc7233 with 12 occurrences migrated to:     https://tools.ietf.org/html/rfc7233 ([https](https://tools.ietf.org/html/rfc7233) result 200). * [ ] http://tools.ietf.org/html/rfc7234 with 5 occurrences migrated to:     https://tools.ietf.org/html/rfc7234 ([https](https://tools.ietf.org/html/rfc7234) result 200). * [ ] http://tools.ietf.org/html/rfc7235 with 6 occurrences migrated to:     https://tools.ietf.org/html/rfc7235 ([https](https://tools.ietf.org/html/rfc7235) result 200). * [ ] http://tools.ietf.org/html/rfc7238 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc7238 ([https](https://tools.ietf.org/html/rfc7238) result 200). * [ ] http://tools.ietf.org/rfcdiff?difftype=--hwdiff&url2=draft-ietf-webdav-protocol-06.txt with 3 occurrences migrated to:     https://tools.ietf.org/rfcdiff?difftype=--hwdiff&url2=draft-ietf-webdav-protocol-06.txt ([https](https://tools.ietf.org/rfcdiff?difftype=--hwdiff&url2=draft-ietf-webdav-protocol-06.txt) result 200). * [ ] http://www.amazon.com/exec/obidos/tg/detail/-/0764543857/ with 10 occurrences migrated to:     https://www.amazon.com/exec/obidos/tg/detail/-/0764543857/ ([https](https://www.amazon.com/exec/obidos/tg/detail/-/0764543857/) result 200). * [ ] http://www.apache.org with 1 occurrences migrated to:     https://www.apache.org ([https](https://www.apache.org) result 200). * [ ] http://www.apple.com/DTDs/PropertyList-1.0.dtd with 6 occurrences migrated to:     https://www.apple.com/DTDs/PropertyList-1.0.dtd ([https](https://www.apple.com/DTDs/PropertyList-1.0.dtd) result 200). * [ ] http://www.atomikos.com/ with 1 occurrences migrated to:     https://www.atomikos.com/ ([https](https://www.atomikos.com/) result 200). * [ ] http://www.baeldung.com/kotlin-null-safety with 1 occurrences migrated to:     https://www.baeldung.com/kotlin-null-safety ([https](https://www.baeldung.com/kotlin-null-safety) result 200). * [ ] http://www.eclipse.org/ajdt/ with 1 occurrences migrated to:     https://www.eclipse.org/ajdt/ ([https](https://www.eclipse.org/ajdt/) result 200). * [ ] http://www.eclipse.org/aspectj/doc/next/progguide/index.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/next/progguide/index.html ([https](https://www.eclipse.org/aspectj/doc/next/progguide/index.html) result 200). * [ ] http://www.eclipse.org/aspectj/doc/next/progguide/semantics-joinPoints.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/next/progguide/semantics-joinPoints.html ([https](https://www.eclipse.org/aspectj/doc/next/progguide/semantics-joinPoints.html) result 200). * [ ] http://www.eclipse.org/aspectj/doc/released/adk15notebook/index.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/released/adk15notebook/index.html ([https](https://www.eclipse.org/aspectj/doc/released/adk15notebook/index.html) result 200). * [ ] http://www.eclipse.org/aspectj/doc/released/devguide/antTasks.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/released/devguide/antTasks.html ([https](https://www.eclipse.org/aspectj/doc/released/devguide/antTasks.html) result 200). * [ ] http://www.eclipse.org/aspectj/doc/released/devguide/index.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/released/devguide/index.html ([https](https://www.eclipse.org/aspectj/doc/released/devguide/index.html) result 200). * [ ] http://www.eclipse.org/aspectj/doc/released/devguide/ltw-configuration.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/released/devguide/ltw-configuration.html ([https](https://www.eclipse.org/aspectj/doc/released/devguide/ltw-configuration.html) result 200). * [ ] http://www.eclipse.org/aspectj/doc/released/devguide/ltw.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/released/devguide/ltw.html ([https](https://www.eclipse.org/aspectj/doc/released/devguide/ltw.html) result 200). * [ ] http://www.eclipse.org/aspectj/doc/released/progguide/index.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/released/progguide/index.html ([https](https://www.eclipse.org/aspectj/doc/released/progguide/index.html) result 200). * [ ] http://www.eclipse.org/aspectj/doc/released/progguide/semantics-pointcuts.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/released/progguide/semantics-pointcuts.html ([https](https://www.eclipse.org/aspectj/doc/released/progguide/semantics-pointcuts.html) result 200). * [ ] http://www.eclipse.org/aspectj/dtd/aspectj.dtd with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/dtd/aspectj.dtd ([https](https://www.eclipse.org/aspectj/dtd/aspectj.dtd) result 200). * [ ] http://ehcache.sourceforge.net (301) with 1 occurrences migrated to:     https://www.ehcache.org/ ([https](https://ehcache.sourceforge.net) result 200). * [ ] http://ehcache.org/ (301) with 1 occurrences migrated to:     https://www.ehcache.org/ ([https](https://ehcache.org/) result 200). * [ ] http://www.embeddedjs.com/ with 2 occurrences migrated to:     https://www.embeddedjs.com/ ([https](https://www.embeddedjs.com/) result 200). * [ ] http://www.enterpriseintegrationpatterns.com with 1 occurrences migrated to:     https://www.enterpriseintegrationpatterns.com ([https](https://www.enterpriseintegrationpatterns.com) result 200). * [ ] http://www.example.org/?param=aGVsbG9Xb3JsZA%3D%3D with 1 occurrences migrated to:     https://www.example.org/?param=aGVsbG9Xb3JsZA%3D%3D ([https](https://www.example.org/?param=aGVsbG9Xb3JsZA%3D%3D) result 200). * [ ] http://www.google.com with 2 occurrences migrated to:     https://www.google.com ([https](https://www.google.com) result 200). * [ ] http://www.h2database.com with 1 occurrences migrated to:     https://www.h2database.com ([https](https://www.h2database.com) result 200). * [ ] http://www.h2database.com/html/grammar.html with 1 occurrences migrated to:     https://www.h2database.com/html/grammar.html ([https](https://www.h2database.com/html/grammar.html) result 200). * [ ] http://www.ietf.org with 1 occurrences migrated to:     https://www.ietf.org ([https](https://www.ietf.org) result 200). * [ ] http://www.ietf.org/rfc/rfc1867.txt with 1 occurrences migrated to:     https://www.ietf.org/rfc/rfc1867.txt ([https](https://www.ietf.org/rfc/rfc1867.txt) result 200). * [ ] http://www.ietf.org/rfc/rfc2396.txt with 2 occurrences migrated to:     https://www.ietf.org/rfc/rfc2396.txt ([https](https://www.ietf.org/rfc/rfc2396.txt) result 200). * [ ] http://www.ietf.org/rfc/rfc3986.txt with 11 occurrences migrated to:     https://www.ietf.org/rfc/rfc3986.txt ([https](https://www.ietf.org/rfc/rfc3986.txt) result 200). * [ ] http://www.infoq.com/ with 1 occurrences migrated to:     https://www.infoq.com/ ([https](https://www.infoq.com/) result 200). * [ ] http://www.infoq.com/minibooks/JTDS with 1 occurrences migrated to:     https://www.infoq.com/minibooks/JTDS ([https](https://www.infoq.com/minibooks/JTDS) result 200). * [ ] http://www.jetbrains.com/idea/ with 1 occurrences migrated to:     https://www.jetbrains.com/idea/ ([https](https://www.jetbrains.com/idea/) result 200). * [ ] http://www.json.org/ with 1 occurrences migrated to:     https://www.json.org/ ([https](https://www.json.org/) result 200). * [ ] http://www.jython.org with 2 occurrences migrated to:     https://www.jython.org ([https](https://www.jython.org) result 200). * [ ] http://www.jython.org/ with 2 occurrences migrated to:     https://www.jython.org/ ([https](https://www.jython.org/) result 200). * [ ] http://www.lowagie.com/iText with 2 occurrences migrated to:     https://www.lowagie.com/iText ([https](https://www.lowagie.com/iText) result 200). * [ ] http://www.manpagez.com/man/5/crontab/ with 1 occurrences migrated to:     https://www.manpagez.com/man/5/crontab/ ([https](https://www.manpagez.com/man/5/crontab/) result 200). * [ ] http://mydomain1.com:80/ (301) with 2 occurrences migrated to:     https://www.mydomain1.com/ ([https](https://mydomain1.com:80/) result 200). * [ ] http://mydomain1.com:80 (301) with 1 occurrences migrated to:     https://www.mydomain1.com/ ([https](https://mydomain1.com:80) result 200). * [ ] http://www.oracle.com/technetwork/articles/javaee/jpa-137156.html with 1 occurrences migrated to:     https://www.oracle.com/technetwork/articles/javaee/jpa-137156.html ([https](https://www.oracle.com/technetwork/articles/javaee/jpa-137156.html) result 200). * [ ] http://www.oracle.com/technetwork/java/javaee/javaserverfaces-139869.html with 1 occurrences migrated to:     https://www.oracle.com/technetwork/java/javaee/javaserverfaces-139869.html ([https](https://www.oracle.com/technetwork/java/javaee/javaserverfaces-139869.html) result 200). * [ ] http://www.oracle.com/technetwork/java/javase/documentation/spec-136004.html with 1 occurrences migrated to:     https://www.oracle.com/technetwork/java/javase/documentation/spec-136004.html ([https](https://www.oracle.com/technetwork/java/javase/documentation/spec-136004.html) result 200). * [ ] http://www.oracle.com/technetwork/java/javase/tech/download-jsp-141676.html with 1 occurrences migrated to:     https://www.oracle.com/technetwork/java/javase/tech/download-jsp-141676.html ([https](https://www.oracle.com/technetwork/java/javase/tech/download-jsp-141676.html) result 200). * [ ] http://www.oracle.com/technetwork/java/javase/tech/javamanagement-140525.html with 1 occurrences migrated to:     https://www.oracle.com/technetwork/java/javase/tech/javamanagement-140525.html ([https](https://www.oracle.com/technetwork/java/javase/tech/javamanagement-140525.html) result 200). * [ ] http://www.oracle.com/technetwork/middleware/weblogic/overview/index-085209.html with 1 occurrences migrated to:     https://www.oracle.com/technetwork/middleware/weblogic/overview/index-085209.html ([https](https://www.oracle.com/technetwork/middleware/weblogic/overview/index-085209.html) result 200). * [ ] http://www.ow2.org/ with 1 occurrences migrated to:     https://www.ow2.org/ ([https](https://www.ow2.org/) result 200). * [ ] http://www.owasp.org/index.php/HTTPOnly with 4 occurrences migrated to:     https://www.owasp.org/index.php/HTTPOnly ([https](https://www.owasp.org/index.php/HTTPOnly) result 200). * [ ] http://quartz-scheduler.org (301) with 3 occurrences migrated to:     https://www.quartz-scheduler.org/ ([https](https://quartz-scheduler.org) result 200). * [ ] http://www.rabbitmq.com/stomp.html with 1 occurrences migrated to:     https://www.rabbitmq.com/stomp.html ([https](https://www.rabbitmq.com/stomp.html) result 200). * [ ] http://www.reactive-streams.org with 1 occurrences migrated to:     https://www.reactive-streams.org ([https](https://www.reactive-streams.org) result 200). * [ ] http://www.reactive-streams.org/ with 2 occurrences migrated to:     https://www.reactive-streams.org/ ([https](https://www.reactive-streams.org/) result 200). * [ ] http://www.reactive-streams.org/reactive-streams-1.0.1-javadoc/org/reactivestreams/Publisher.html with 1 occurrences migrated to:     https://www.reactive-streams.org/reactive-streams-1.0.1-javadoc/org/reactivestreams/Publisher.html ([https](https://www.reactive-streams.org/reactive-streams-1.0.1-javadoc/org/reactivestreams/Publisher.html) result 200). * [ ] http://www.reactive-streams.org/reactive-streams-1.0.1-javadoc/org/reactivestreams/Subscriber.html with 1 occurrences migrated to:     https://www.reactive-streams.org/reactive-streams-1.0.1-javadoc/org/reactivestreams/Subscriber.html ([https](https://www.reactive-streams.org/reactive-streams-1.0.1-javadoc/org/reactivestreams/Subscriber.html) result 200). * [ ] http://seleniumhq.org/projects/webdriver/ (301) with 1 occurrences migrated to:     https://www.seleniumhq.org ([https](https://seleniumhq.org/projects/webdriver/) result 200). * [ ] http://www.springbyexample.org/examples/custom-thread-scope-module.html with 1 occurrences migrated to:     https://www.springbyexample.org/examples/custom-thread-scope-module.html ([https](https://www.springbyexample.org/examples/custom-thread-scope-module.html) result 200). * [ ] http://www.springframework.org/dtd/spring-beans-2.0.dtd with 3 occurrences migrated to:     https://www.springframework.org/dtd/spring-beans-2.0.dtd ([https](https://www.springframework.org/dtd/spring-beans-2.0.dtd) result 200). * [ ] http://www.springframework.org/schema/aop/spring-aop.xsd with 12 occurrences migrated to:     https://www.springframework.org/schema/aop/spring-aop.xsd ([https](https://www.springframework.org/schema/aop/spring-aop.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans.xsd with 80 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans.xsd ([https](https://www.springframework.org/schema/beans/spring-beans.xsd) result 200). * [ ] http://www.springframework.org/schema/cache/spring-cache.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/cache/spring-cache.xsd ([https](https://www.springframework.org/schema/cache/spring-cache.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context.xsd with 13 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context.xsd ([https](https://www.springframework.org/schema/context/spring-context.xsd) result 200). * [ ] http://www.springframework.org/schema/jdbc/spring-jdbc.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-jdbc.xsd ([https](https://www.springframework.org/schema/jdbc/spring-jdbc.xsd) result 200). * [ ] http://www.springframework.org/schema/jee/spring-jee.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/jee/spring-jee.xsd ([https](https://www.springframework.org/schema/jee/spring-jee.xsd) result 200). * [ ] http://www.springframework.org/schema/jms/spring-jms.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/jms/spring-jms.xsd ([https](https://www.springframework.org/schema/jms/spring-jms.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang.xsd with 4 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang.xsd ([https](https://www.springframework.org/schema/lang/spring-lang.xsd) result 200). * [ ] http://www.springframework.org/schema/mvc/spring-mvc.xsd with 3 occurrences migrated to:     https://www.springframework.org/schema/mvc/spring-mvc.xsd ([https](https://www.springframework.org/schema/mvc/spring-mvc.xsd) result 200). * [ ] http://www.springframework.org/schema/oxm/spring-oxm.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/oxm/spring-oxm.xsd ([https](https://www.springframework.org/schema/oxm/spring-oxm.xsd) result 200). * [ ] http://www.springframework.org/schema/tool/spring-tool.xsd with 13 occurrences migrated to:     https://www.springframework.org/schema/tool/spring-tool.xsd ([https](https://www.springframework.org/schema/tool/spring-tool.xsd) result 200). * [ ] http://www.springframework.org/schema/tx/spring-tx.xsd with 8 occurrences migrated to:     https://www.springframework.org/schema/tx/spring-tx.xsd ([https](https://www.springframework.org/schema/tx/spring-tx.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util.xsd ([https](https://www.springframework.org/schema/util/spring-util.xsd) result 200). * [ ] http://www.springframework.org/schema/websocket/spring-websocket.xsd with 12 occurrences migrated to:     https://www.springframework.org/schema/websocket/spring-websocket.xsd ([https](https://www.springframework.org/schema/websocket/spring-websocket.xsd) result 200). * [ ] http://www.stuartellis.eu/articles/erb/ (301) with 2 occurrences migrated to:     https://www.stuartellis.name/articles/erb/ ([https](https://www.stuartellis.eu/articles/erb/) result 200). * [ ] http://www.thymeleaf.org/ with 2 occurrences migrated to:     https://www.thymeleaf.org/ ([https](https://www.thymeleaf.org/) result 200). * [ ] http://www.thymeleaf.org/documentation.html with 2 occurrences migrated to:     https://www.thymeleaf.org/documentation.html ([https](https://www.thymeleaf.org/documentation.html) result 200). * [ ] http://www.webjars.org with 4 occurrences migrated to:     https://www.webjars.org ([https](https://www.webjars.org) result 200). * [ ] http://www.webjars.org/ with 2 occurrences migrated to:     https://www.webjars.org/ ([https](https://www.webjars.org/) result 200). * [ ] http://www.webjars.org/documentation with 2 occurrences migrated to:     https://www.webjars.org/documentation ([https](https://www.webjars.org/documentation) result 200). * [ ] http://www.wildfly.org/ with 1 occurrences migrated to:     https://www.wildfly.org/ ([https](https://www.wildfly.org/) result 200). * [ ] http://x-stream.github.io/ with 2 occurrences migrated to:     https://x-stream.github.io/ ([https](https://x-stream.github.io/) result 200). * [ ] http://youtrack.jetbrains.com/issue/IDEA-53476 with 1 occurrences migrated to:     https://youtrack.jetbrains.com/issue/IDEA-53476 ([https](https://youtrack.jetbrains.com/issue/IDEA-53476) result 200). * [ ] http://youtrack.jetbrains.com/issue/IDEA-64446 with 1 occurrences migrated to:     https://youtrack.jetbrains.com/issue/IDEA-64446 ([https](https://youtrack.jetbrains.com/issue/IDEA-64446) result 200). * [ ] http://bit.ly/TRlX2r with 1 occurrences migrated to:     https://bit.ly/TRlX2r ([https](https://bit.ly/TRlX2r) result 301). * [ ] http://bit.ly/UzccDt with 1 occurrences migrated to:     https://bit.ly/UzccDt ([https](https://bit.ly/UzccDt) result 301). * [ ] http://bit.ly/p9rIvx with 1 occurrences migrated to:     https://bit.ly/p9rIvx ([https](https://bit.ly/p9rIvx) result 301). * [ ] http://bit.ly/qUwvwz with 1 occurrences migrated to:     https://bit.ly/qUwvwz ([https](https://bit.ly/qUwvwz) result 301). * [ ] http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx with 1 occurrences migrated to:     https://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx ([https](https://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx) result 301). * [ ] http://code.google.com/p/beanshell2/ with 1 occurrences migrated to:     https://code.google.com/p/beanshell2/ ([https](https://code.google.com/p/beanshell2/) result 301). * [ ] http://code.google.com/p/browsersec/wiki/Part2 with 1 occurrences migrated to:     https://code.google.com/p/browsersec/wiki/Part2 ([https](https://code.google.com/p/browsersec/wiki/Part2) result 301). * [ ] http://code.google.com/p/gears/wiki/ResumableHttpRequestsProposal with 1 occurrences migrated to:     https://code.google.com/p/gears/wiki/ResumableHttpRequestsProposal ([https](https://code.google.com/p/gears/wiki/ResumableHttpRequestsProposal) result 301). * [ ] http://code.google.com/p/xml-matchers/ with 3 occurrences migrated to:     https://code.google.com/p/xml-matchers/ ([https](https://code.google.com/p/xml-matchers/) result 301). * [ ] http://commons.apache.org/proper/commons-dbcp with 2 occurrences migrated to:     https://commons.apache.org/proper/commons-dbcp ([https](https://commons.apache.org/proper/commons-dbcp) result 301). * [ ] http://commons.apache.org/proper/commons-fileupload with 2 occurrences migrated to:     https://commons.apache.org/proper/commons-fileupload ([https](https://commons.apache.org/proper/commons-fileupload) result 301). * [ ] http://confluence.jetbrains.net/display/IDEADEV/Gradle+integration with 1 occurrences migrated to:     https://confluence.jetbrains.net/display/IDEADEV/Gradle+integration ([https](https://confluence.jetbrains.net/display/IDEADEV/Gradle+integration) result 301). * [ ] http://contributor-covenant.org with 1 occurrences migrated to:     https://contributor-covenant.org ([https](https://contributor-covenant.org) result 301). * [ ] http://contributor-covenant.org/version/1/3/0/ with 1 occurrences migrated to:     https://contributor-covenant.org/version/1/3/0/ ([https](https://contributor-covenant.org/version/1/3/0/) result 301). * [ ] http://db.apache.org/derby with 2 occurrences migrated to:     https://db.apache.org/derby ([https](https://db.apache.org/derby) result 301). * [ ] http://dev.w3.org/html5/eventsource/ with 2 occurrences migrated to:     https://dev.w3.org/html5/eventsource/ ([https](https://dev.w3.org/html5/eventsource/) result 301). * [ ] http://domain.com with 24 occurrences migrated to:     https://domain.com ([https](https://domain.com) result 301). * [ ] http://domain.com/ with 1 occurrences migrated to:     https://domain.com/ ([https](https://domain.com/) result 301). * [ ] http://en.wikipedia.org/wiki/Cache_ with 1 occurrences migrated to:     https://en.wikipedia.org/wiki/Cache_ ([https](https://en.wikipedia.org/wiki/Cache_) result 301). * [ ] http://facebook.github.io/react/ with 2 occurrences migrated to:     https://facebook.github.io/react/ ([https](https://facebook.github.io/react/) result 301). * [ ] http://forum.springframework.org/showthread.php?t=41350 with 1 occurrences migrated to:     https://forum.springframework.org/showthread.php?t=41350 ([https](https://forum.springframework.org/showthread.php?t=41350) result 301). * [ ] http://github.com/SpringSource/spring-framework with 1 occurrences migrated to:     https://github.com/SpringSource/spring-framework ([https](https://github.com/SpringSource/spring-framework) result 301). * [ ] http://hdiv.org/ with 1 occurrences migrated to:     https://hdiv.org/ ([https](https://hdiv.org/) result 301). * [ ] http://jakarta.apache.org/commons/fileupload with 1 occurrences migrated to:     https://jakarta.apache.org/commons/fileupload ([https](https://jakarta.apache.org/commons/fileupload) result 301). * [ ] http://jira.springframework.org/browse/SPR-5708 with 1 occurrences migrated to:     https://jira.springframework.org/browse/SPR-5708 ([https](https://jira.springframework.org/browse/SPR-5708) result 301). * [ ] http://jira.springframework.org/browse/SPR-6124 with 1 occurrences migrated to:     https://jira.springframework.org/browse/SPR-6124 ([https](https://jira.springframework.org/browse/SPR-6124) result 301). * [ ] http://jira.springframework.org/browse/SPR-6128 with 1 occurrences migrated to:     https://jira.springframework.org/browse/SPR-6128 ([https](https://jira.springframework.org/browse/SPR-6128) result 301). * [ ] http://jira.springframework.org/browse/SPR-7064 with 1 occurrences migrated to:     https://jira.springframework.org/browse/SPR-7064 ([https](https://jira.springframework.org/browse/SPR-7064) result 301). * [ ] http://maven.apache.org/plugins/maven-surefire-plugin/test-mojo.html with 1 occurrences migrated to:     https://maven.apache.org/plugins/maven-surefire-plugin/test-mojo.html ([https](https://maven.apache.org/plugins/maven-surefire-plugin/test-mojo.html) result 301). * [ ] http://mockito.org/ (301) with 1 occurrences migrated to:     https://mockito.github.io ([https](https://mockito.org/) result 301). * [ ] http://mydomain1.com with 37 occurrences migrated to:     https://mydomain1.com ([https](https://mydomain1.com) result 301). * [ ] http://mydomain1.com/ with 2 occurrences migrated to:     https://mydomain1.com/ ([https](https://mydomain1.com/) result 301). * [ ] http://mydomain1.com/path with 2 occurrences migrated to:     https://mydomain1.com/path ([https](https://mydomain1.com/path) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-2660 with 1 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-2660 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-2660) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-2754 with 1 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-2754 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-2754) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-2789 with 1 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-2789 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-2789) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-3127 with 1 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-3127 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-3127) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-3775 with 1 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-3775 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-3775) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-3880 with 1 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-3880 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-3880) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-3896 with 7 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-3896 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-3896) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-3949 with 1 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-3949 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-3949) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-4008 with 2 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-4008 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-4008) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-4040 with 2 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-4040 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-4040) result 301). * [ ] http://publib.boulder.ibm.com/infocenter/wasinfo/v5r1//topic/com.ibm.websphere.base.doc/info/aes/ae/rdat_extiapi.html with 1 occurrences migrated to:     https://publib.boulder.ibm.com/infocenter/wasinfo/v5r1//topic/com.ibm.websphere.base.doc/info/aes/ae/rdat_extiapi.html ([https](https://publib.boulder.ibm.com/infocenter/wasinfo/v5r1//topic/com.ibm.websphere.base.doc/info/aes/ae/rdat_extiapi.html) result 301). * [ ] http://publib.boulder.ibm.com/infocenter/wasinfo/v6r0/topic/com.ibm.websphere.javadoc.doc/public_html/api/com/ibm/websphere/rsadapter/JDBCConnectionSpec.html with 1 occurrences migrated to:     https://publib.boulder.ibm.com/infocenter/wasinfo/v6r0/topic/com.ibm.websphere.javadoc.doc/public_html/api/com/ibm/websphere/rsadapter/JDBCConnectionSpec.html ([https](https://publib.boulder.ibm.com/infocenter/wasinfo/v6r0/topic/com.ibm.websphere.javadoc.doc/public_html/api/com/ibm/websphere/rsadapter/JDBCConnectionSpec.html) result 301). * [ ] http://site2.com with 3 occurrences migrated to:     https://site2.com ([https](https://site2.com) result 301). * [ ] http://slack.kotlinlang.org/ with 2 occurrences migrated to:     https://slack.kotlinlang.org/ ([https](https://slack.kotlinlang.org/) result 301). * [ ] http://sourceforge.net/projects/c3p0 with 2 occurrences migrated to:     https://sourceforge.net/projects/c3p0 ([https](https://sourceforge.net/projects/c3p0) result 301). * [ ] http://sourceforge.net/projects/javadiff with 1 occurrences migrated to:     https://sourceforge.net/projects/javadiff ([https](https://sourceforge.net/projects/javadiff) result 301). * [ ] http://springframework.org with 2 occurrences migrated to:     https://springframework.org ([https](https://springframework.org) result 301). * [ ] http://www-01.ibm.com/software/webservers/appserv/was/ with 1 occurrences migrated to:     https://www-01.ibm.com/software/webservers/appserv/was/ ([https](https://www-01.ibm.com/software/webservers/appserv/was/) result 301). * [ ] http://www.atomenabled.org/developers/syndication/ with 1 occurrences migrated to:     https://www.atomenabled.org/developers/syndication/ ([https](https://www.atomenabled.org/developers/syndication/) result 301). * [ ] http://www.eclipse.org/aspectj with 2 occurrences migrated to:     https://www.eclipse.org/aspectj ([https](https://www.eclipse.org/aspectj) result 301). * [ ] http://www.google.com/ig/calculator?q=1USD=?EUR with 1 occurrences migrated to:     https://www.google.com/ig/calculator?q=1USD=?EUR ([https](https://www.google.com/ig/calculator?q=1USD=?EUR) result 301). * [ ] http://www.javaworld.com/javaworld/jw-01-2009/jw-01-spring-transactions.html with 1 occurrences migrated to:     https://www.javaworld.com/javaworld/jw-01-2009/jw-01-spring-transactions.html ([https](https://www.javaworld.com/javaworld/jw-01-2009/jw-01-spring-transactions.html) result 301). * [ ] http://www.jboss.org/jbossas/ with 1 occurrences migrated to:     https://www.jboss.org/jbossas/ ([https](https://www.jboss.org/jbossas/) result 301). * [ ] http://www.junit.org/ with 1 occurrences migrated to:     https://www.junit.org/ ([https](https://www.junit.org/) result 301). * [ ] http://www.mnot.net/cache_docs with 1 occurrences migrated to:     https://www.mnot.net/cache_docs ([https](https://www.mnot.net/cache_docs) result 301). * [ ] http://www.sf.net/home.view?siteLanguage=nl with 1 occurrences migrated to:     https://www.sf.net/home.view?siteLanguage=nl ([https](https://www.sf.net/home.view?siteLanguage=nl) result 301). * [ ] http://www.springframework.org with 7 occurrences migrated to:     https://www.springframework.org ([https](https://www.springframework.org) result 301). * [ ] http://www.springframework.org/ with 3 occurrences migrated to:     https://www.springframework.org/ ([https](https://www.springframework.org/) result 301). * [ ] http://xyz.com/path with 2 occurrences migrated to:     https://xyz.com/path ([https](https://xyz.com/path) result 301). * [ ] http://commons.apache.org/codec/ with 1 occurrences migrated to:     https://commons.apache.org/codec/ ([https](https://commons.apache.org/codec/) result 302). * [ ] http://commons.apache.org/logging with 2 occurrences migrated to:     https://commons.apache.org/logging ([https](https://commons.apache.org/logging) result 302). * [ ] http://download.oracle.com/javaee/6/api/javax/inject/Scope.html with 1 occurrences migrated to:     https://download.oracle.com/javaee/6/api/javax/inject/Scope.html ([https](https://download.oracle.com/javaee/6/api/javax/inject/Scope.html) result 302). * [ ] http://download.oracle.com/javase/1.5.0/docs/api/java/lang/System.html with 4 occurrences migrated to:     https://download.oracle.com/javase/1.5.0/docs/api/java/lang/System.html ([https](https://download.oracle.com/javase/1.5.0/docs/api/java/lang/System.html) result 302). * [ ] http://download.oracle.com/javase/6/docs/technotes/guides/jar/jar.html with 1 occurrences migrated to:     https://download.oracle.com/javase/6/docs/technotes/guides/jar/jar.html ([https](https://download.oracle.com/javase/6/docs/technotes/guides/jar/jar.html) result 302). * [ ] http://download.oracle.com/javase/8/docs/api/java/beans/ConstructorProperties.html with 1 occurrences migrated to:     https://download.oracle.com/javase/8/docs/api/java/beans/ConstructorProperties.html ([https](https://download.oracle.com/javase/8/docs/api/java/beans/ConstructorProperties.html) result 302). * [ ] http://download.oracle.com/javase/jndi/tutorial/beyond/misc/policy.html with 1 occurrences migrated to:     https://download.oracle.com/javase/jndi/tutorial/beyond/misc/policy.html ([https](https://download.oracle.com/javase/jndi/tutorial/beyond/misc/policy.html) result 302). * [ ] http://gafter.blogspot.nl/2006/12/super-type-tokens.html with 1 occurrences migrated to:     https://gafter.blogspot.nl/2006/12/super-type-tokens.html ([https](https://gafter.blogspot.nl/2006/12/super-type-tokens.html) result 302). * [ ] http://git-scm.com/book/en/Distributed-Git-Contributing-to-a-Project with 1 occurrences migrated to:     https://git-scm.com/book/en/Distributed-Git-Contributing-to-a-Project ([https](https://git-scm.com/book/en/Distributed-Git-Contributing-to-a-Project) result 302). * [ ] http://git-scm.com/book/en/Git-Tools-Rewriting-History with 1 occurrences migrated to:     https://git-scm.com/book/en/Git-Tools-Rewriting-History ([https](https://git-scm.com/book/en/Git-Tools-Rewriting-History) result 302). * [ ] http://glassfish.dev.java.net/ with 1 occurrences migrated to:     https://glassfish.dev.java.net/ ([https](https://glassfish.dev.java.net/) result 302). * [ ] http://java.sun.com/docs/books/jls/third_edition/html/conversions.html with 1 occurrences migrated to:     https://java.sun.com/docs/books/jls/third_edition/html/conversions.html ([https](https://java.sun.com/docs/books/jls/third_edition/html/conversions.html) result 302). * [ ] http://java.sun.com/docs/books/jls/third_edition/html/expressions.html with 1 occurrences migrated to:     https://java.sun.com/docs/books/jls/third_edition/html/expressions.html ([https](https://java.sun.com/docs/books/jls/third_edition/html/expressions.html) result 302). * [ ] http://java.sun.com/j2se/ with 2 occurrences migrated to:     https://java.sun.com/j2se/ ([https](https://java.sun.com/j2se/) result 302). * [ ] http://java.sun.com/j2se/1.4.1/docs/tooldocs/solaris/javadoc.html with 1 occurrences migrated to:     https://java.sun.com/j2se/1.4.1/docs/tooldocs/solaris/javadoc.html ([https](https://java.sun.com/j2se/1.4.1/docs/tooldocs/solaris/javadoc.html) result 302). * [ ] http://java.sun.com/j2se/1.4.2/docs/api/java/text/SimpleDateFormat.html with 1 occurrences migrated to:     https://java.sun.com/j2se/1.4.2/docs/api/java/text/SimpleDateFormat.html ([https](https://java.sun.com/j2se/1.4.2/docs/api/java/text/SimpleDateFormat.html) result 302). * [ ] http://java.sun.com/j2se/javadoc with 1 occurrences migrated to:     https://java.sun.com/j2se/javadoc ([https](https://java.sun.com/j2se/javadoc) result 302). * [ ] http://java.sun.com/j2se/javadoc/ with 1 occurrences migrated to:     https://java.sun.com/j2se/javadoc/ ([https](https://java.sun.com/j2se/javadoc/) result 302). * [ ] http://java.sun.com/j2se/javadoc/faq.html with 1 occurrences migrated to:     https://java.sun.com/j2se/javadoc/faq.html ([https](https://java.sun.com/j2se/javadoc/faq.html) result 302). * [ ] http://java.sun.com/webservices/jaxb/ with 1 occurrences migrated to:     https://java.sun.com/webservices/jaxb/ ([https](https://java.sun.com/webservices/jaxb/) result 302). * [ ] http://java.sun.com/xml/jaxp/properties/schemaLanguage with 1 occurrences migrated to:     https://java.sun.com/xml/jaxp/properties/schemaLanguage ([https](https://java.sun.com/xml/jaxp/properties/schemaLanguage) result 302). * [ ] http://java.sun.com/xml/ns/j2ee/connector_1_5.xsd with 1 occurrences migrated to:     https://java.sun.com/xml/ns/j2ee/connector_1_5.xsd ([https](https://java.sun.com/xml/ns/j2ee/connector_1_5.xsd) result 302). * [ ] http://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd with 2 occurrences migrated to:     https://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd ([https](https://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd) result 302). * [ ] http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd with 2 occurrences migrated to:     https://java.sun.com/xml/ns/javaee/web-app_3_0.xsd ([https](https://java.sun.com/xml/ns/javaee/web-app_3_0.xsd) result 302). * [ ] http://java.sun.com/xml/stream/properties/report-cdata-event with 1 occurrences migrated to:     https://java.sun.com/xml/stream/properties/report-cdata-event ([https](https://java.sun.com/xml/stream/properties/report-cdata-event) result 302). * [ ] http://sourceforge.net/projects/cglib/files/cglib3/3.0/cglib-3.0.jar/download with 1 occurrences migrated to:     https://sourceforge.net/projects/cglib/files/cglib3/3.0/cglib-3.0.jar/download ([https](https://sourceforge.net/projects/cglib/files/cglib3/3.0/cglib-3.0.jar/download) result 302). * [ ] http://other.info/foo/bar (301) with 1 occurrences migrated to:     https://weibo.com/otherinfo/foo/bar ([https](https://other.info/foo/bar) result 302). * [ ] http://www.iana.org/assignments/http-status-codes with 1 occurrences migrated to:     https://www.iana.org/assignments/http-status-codes ([https](https://www.iana.org/assignments/http-status-codes) result 302). * [ ] http://www.iana.org/assignments/media-types/ with 1 occurrences migrated to:     https://www.iana.org/assignments/media-types/ ([https](https://www.iana.org/assignments/media-types/) result 302). * [ ] http://www.springsource.org/download with 1 occurrences migrated to:     https://www.springsource.org/download ([https](https://www.springsource.org/download) result 302). * [ ] http://www.sys-con.com/java with 1 occurrences migrated to:     https://www.sys-con.com/java ([https](https://www.sys-con.com/java) result 302).  # Ignored These URLs were intentionally ignored.  * http://java.sun.com/jsp/jstl/core with 1 occurrences * http://java.sun.com/xml/ns/j2ee with 6 occurrences * http://java.sun.com/xml/ns/javaee with 4 occurrences * http://java.sun.com/xml/ns/persistence with 1 occurrences * http://localhost with 86 occurrences * http://localhost/ with 16 occurrences * http://localhost/42 with 1 occurrences * http://localhost/?cookie=foo with 1 occurrences * http://localhost/FILE.TXT with 1 occurrences * http://localhost/abc with 1 occurrences * http://localhost/abc/def with 1 occurrences * http://localhost/app%20/path/ with 1 occurrences * http://localhost/app/path%20with%20spaces/ with 1 occurrences * http://localhost/bar with 2 occurrences * http://localhost/context/a with 3 occurrences * http://localhost/contextPath/main/path with 2 occurrences * http://localhost/file.foo with 1 occurrences * http://localhost/file.txt with 1 occurrences * http://localhost/foo with 2 occurrences * http://localhost/foo%20bar with 1 occurrences * http://localhost/foo/bar with 1 occurrences * http://localhost/foo/bar/baz with 1 occurrences * http://localhost/forward with 1 occurrences * http://localhost/hotels/42/bookings/21 with 4 occurrences * http://localhost/input with 1 occurrences * http://localhost/jquery-1.11.0.min.js with 5 occurrences * http://localhost/messages/form with 1 occurrences * http://localhost/mvc-showcase with 2 occurrences * http://localhost/mvc-showcase/app with 1 occurrences * http://localhost/mvc-showcase/data/foo%20bar with 1 occurrences * http://localhost/mvc-showcase/data/param with 1 occurrences * http://localhost/mvc-showcase/data/param?foo=123 with 2 occurrences * http://localhost/myapp/main with 1 occurrences * http://localhost/myapp/people/1/addresses/DE with 1 occurrences * http://localhost/path with 3 occurrences * http://localhost/path;a=b/with/semicolon with 1 occurrences * http://localhost/persons with 1 occurrences * http://localhost/prefix with 1 occurrences * http://localhost/prefix/app with 1 occurrences * http://localhost/prefix/bar with 1 occurrences * http://localhost/prefix/mvc-showcase with 3 occurrences * http://localhost/query= with 1 occurrences * http://localhost/query=foo@bar with 1 occurrences * http://localhost/resources/child/response.txt with 1 occurrences * http://localhost/resources/foo with 2 occurrences * http://localhost/resources/foo.txt with 1 occurrences * http://localhost/resources/response.txt with 2 occurrences * http://localhost/rest/books/6/pages/1.json with 1 occurrences * http://localhost/something/1/foo with 1 occurrences * http://localhost/something/optional-param with 1 occurrences * http://localhost/test with 4 occurrences * http://localhost/test.html with 1 occurrences * http://localhost/test/this with 2 occurrences * http://localhost:7070/example/adminhandle.vm with 1 occurrences * http://localhost:7070/example/bingo.html with 1 occurrences * http://localhost:80/jquery-1.11.0.min.js with 1 occurrences * http://localhost:8080 with 34 occurrences * http://localhost:8080/ with 4 occurrences * http://localhost:8080/OrderService with 3 occurrences * http://localhost:8080/aA/bB/cC with 1 occurrences * http://localhost:8080/context with 1 occurrences * http://localhost:8080/context/myapiresource with 1 occurrences * http://localhost:8080/gamecast/admin/index.html with 1 occurrences * http://localhost:8080/gamecast/display.html with 1 occurrences * http://localhost:8080/gamecast/displayShoppingCart.html with 1 occurrences * http://localhost:8080/jquery-1.11.0.min.js with 1 occurrences * http://localhost:8080/mvc-showcase with 1 occurrences * http://localhost:8080/myapiresource with 1 occurrences * http://localhost:8080/myapp/js/sockjs-client.js with 1 occurrences * http://localhost:8080/path with 3 occurrences * http://localhost:8080/people with 2 occurrences * http://localhost:8080/portfolio with 1 occurrences * http://localhost:8080/spring/ with 2 occurrences * http://localhost:8080/test/ with 2 occurrences * http://localhost:8080/test/print?value=%EA%B0%80+%EB%82%98 with 1 occurrences * http://localhost:8081 with 1 occurrences * http://localhost:8081/ with 1 occurrences * http://localhost:8181 with 1 occurrences * http://localhost:8888/AccountServiceEndpoint?WSDL with 1 occurrences * http://localhost:9000 with 7 occurrences * http://localhost:9090 with 18 occurrences * http://localhost:9090/jquery-1.11.0.min.js with 2 occurrences * http://localhost:9990/mail/messages/form with 1 occurrences * http://localhost:9999/ with 1 occurrences * http://localhost:9999/OrderService?wsdl with 4 occurrences * http://localhosta/testbean with 3 occurrences * http://samples.springframework.org/flight with 27 occurrences * http://springframework.org/spring-ws with 17 occurrences * http://test.com with 1 occurrences * http://test.com/ with 1 occurrences * http://testng.org/ with 1 occurrences * http://tiles.apache.org/tags-tiles with 1 occurrences * http://www.foo.com/schema/component with 6 occurrences * http://www.mycompany.com/schema/myns with 4 occurrences * http://www.springframework.org/schema/aop with 30 occurrences * http://www.springframework.org/schema/beans with 169 occurrences * http://www.springframework.org/schema/beans/test with 2 occurrences * http://www.springframework.org/schema/c with 1 occurrences * http://www.springframework.org/schema/cache with 5 occurrences * http://www.springframework.org/schema/context with 28 occurrences * http://www.springframework.org/schema/jdbc with 8 occurrences * http://www.springframework.org/schema/jee with 9 occurrences * http://www.springframework.org/schema/jms with 5 occurrences * http://www.springframework.org/schema/lang with 10 occurrences * http://www.springframework.org/schema/mvc with 8 occurrences * http://www.springframework.org/schema/oxm with 4 occurrences * http://www.springframework.org/schema/p with 4 occurrences * http://www.springframework.org/schema/task with 2 occurrences * http://www.springframework.org/schema/tool with 27 occurrences * http://www.springframework.org/schema/tx with 18 occurrences * http://www.springframework.org/schema/util with 8 occurrences * http://www.springframework.org/schema/websocket with 26 occurrences * http://www.springframework.org/spring-ws with 1 occurrences * http://www.springframework.org/tags with 4 occurrences * http://www.springframework.org/tags/form with 2 occurrences * http://www.w3.org/1999/XSL/Transform with 8 occurrences * http://www.w3.org/2001/XMLSchema with 24 occurrences * http://www.w3.org/2001/XMLSchema-instance with 79 occurrences * http://www.w3.org/2005/Atom with 4 occurrences * http://www.w3.org/TR/html4/charset.html with 5 occurrences * http://www.w3.org/TR/html4/sgml/entities.html with 14 occurrences","closed","type: task,","spring-operator","2019-03-20T22:48:20Z","2019-03-23T12:41:49Z"
"","22677","URL Cleanup","This commit updates URLs to prefer the https protocol. Redirects are not followed to avoid accidentally expanding intentionally shortened URLs (i.e. if using a URL shortener).  # HTTP URLs that Could Not Be Fixed These URLs were unable to be fixed. Please review them to see if they can be manually resolved.  * [ ] http://aopalliance.sourceforge.net (200) with 1 occurrences could not be migrated:      ([https](https://aopalliance.sourceforge.net) result AnnotatedConnectException). * [ ] http://cglib.sourceforge.net (200) with 1 occurrences could not be migrated:      ([https](https://cglib.sourceforge.net) result AnnotatedConnectException). * [ ] http://classdoc.sourceforge.net (200) with 1 occurrences could not be migrated:      ([https](https://classdoc.sourceforge.net) result AnnotatedConnectException). * [ ] http://code.jquery.com:80/jquery.js (200) with 1 occurrences could not be migrated:      ([https](https://code.jquery.com:80/jquery.js) result SSLException). * [ ] http://dbunit.sourceforge.net/ (200) with 1 occurrences could not be migrated:      ([https](https://dbunit.sourceforge.net/) result AnnotatedConnectException). * [ ] http://docs.groovy-lang.org/docs/next/html/documentation/template-engines.html (200) with 1 occurrences could not be migrated:      ([https](https://docs.groovy-lang.org/docs/next/html/documentation/template-engines.html) result SSLProtocolException). * [ ] http://domain3.com (200) with 3 occurrences could not be migrated:      ([https](https://domain3.com) result ConnectTimeoutException). * [ ] http://gee.cs.oswego.edu/dl/concurrency-interest/ (200) with 1 occurrences could not be migrated:      ([https](https://gee.cs.oswego.edu/dl/concurrency-interest/) result AnnotatedConnectException). * [ ] http://grinder.sourceforge.net/ (200) with 1 occurrences could not be migrated:      ([https](https://grinder.sourceforge.net/) result AnnotatedConnectException). * [ ] http://groovy-lang.org/templating.html (200) with 3 occurrences could not be migrated:      ([https](https://groovy-lang.org/templating.html) result SSLProtocolException). * [ ] http://hsqldb.org (200) with 1 occurrences could not be migrated:      ([https](https://hsqldb.org) result SSLHandshakeException). * [ ] http://htmlunit.sourceforge.net/ (200) with 3 occurrences could not be migrated:      ([https](https://htmlunit.sourceforge.net/) result AnnotatedConnectException). * [ ] http://htmlunit.sourceforge.net/gettingStarted.html (200) with 1 occurrences could not be migrated:      ([https](https://htmlunit.sourceforge.net/gettingStarted.html) result AnnotatedConnectException). * [ ] http://htmlunit.sourceforge.net/javascript.html (200) with 1 occurrences could not be migrated:      ([https](https://htmlunit.sourceforge.net/javascript.html) result AnnotatedConnectException). * [ ] http://jasperreports.sourceforge.net (200) with 3 occurrences could not be migrated:      ([https](https://jasperreports.sourceforge.net) result AnnotatedConnectException). * [ ] http://jasperreports.sourceforge.net/dtds/jasperreport.dtd (200) with 6 occurrences could not be migrated:      ([https](https://jasperreports.sourceforge.net/dtds/jasperreport.dtd) result AnnotatedConnectException). * [ ] http://javadiff.cvs.sourceforge.net/ (200) with 3 occurrences could not be migrated:      ([https](https://javadiff.cvs.sourceforge.net/) result SSLHandshakeException). * [ ] http://jibx.sourceforge.net/ (200) with 2 occurrences could not be migrated:      ([https](https://jibx.sourceforge.net/) result AnnotatedConnectException). * [ ] http://joda-time.sourceforge.net (200) with 1 occurrences could not be migrated:      ([https](https://joda-time.sourceforge.net) result AnnotatedConnectException). * [ ] http://jotm.objectweb.org/ (200) with 1 occurrences could not be migrated:      ([https](https://jotm.objectweb.org/) result NotSslRecordException). * [ ] http://livereload.com/ (200) with 1 occurrences could not be migrated:      ([https](https://livereload.com/) result ConnectTimeoutException). * [ ] http://mx4j.sourceforge.net (200) with 1 occurrences could not be migrated:      ([https](https://mx4j.sourceforge.net) result AnnotatedConnectException). * [ ] http://mx4j.sourceforge.net/ (200) with 1 occurrences could not be migrated:      ([https](https://mx4j.sourceforge.net/) result AnnotatedConnectException). * [ ] http://mydomain3.com (200) with 9 occurrences could not be migrated:      ([https](https://mydomain3.com) result ConnectTimeoutException). * [ ] http://objenesis.org (200) with 1 occurrences could not be migrated:      ([https](https://objenesis.org) result SSLHandshakeException). * [ ] http://objenesis.org/tutorial.html (200) with 1 occurrences could not be migrated:      ([https](https://objenesis.org/tutorial.html) result SSLHandshakeException). * [ ] http://other.com/ (200) with 2 occurrences could not be migrated:      ([https](https://other.com/) result SSLHandshakeException). * [ ] http://www.andykhan.com/jexcelapi/ (200) with 2 occurrences could not be migrated:      ([https](https://www.andykhan.com/jexcelapi/) result ConnectTimeoutException). * [ ] http://www.beanshell.org (200) with 1 occurrences could not be migrated:      ([https](https://www.beanshell.org) result SSLHandshakeException). * [ ] http://www.beanshell.org/ (200) with 1 occurrences could not be migrated:      ([https](https://www.beanshell.org/) result SSLHandshakeException). * [ ] http://www.datanucleus.org/ (200) with 2 occurrences could not be migrated:      ([https](https://www.datanucleus.org/) result AnnotatedConnectException). * [ ] http://www.doclet.com (200) with 1 occurrences could not be migrated:      ([https](https://www.doclet.com) result AnnotatedConnectException). * [ ] http://www.gebish.org/ (200) with 1 occurrences could not be migrated:      ([https](https://www.gebish.org/) result SSLHandshakeException). * [ ] http://www.gebish.org/manual/current/ (200) with 1 occurrences could not be migrated:      ([https](https://www.gebish.org/manual/current/) result SSLHandshakeException). * [ ] http://www.groovy-lang.org/ (200) with 2 occurrences could not be migrated:      ([https](https://www.groovy-lang.org/) result SSLProtocolException). * [ ] http://www.groovy-lang.org/operators.html (200) with 2 occurrences could not be migrated:      ([https](https://www.groovy-lang.org/operators.html) result SSLProtocolException). * [ ] http://www.hsqldb.org (200) with 1 occurrences could not be migrated:      ([https](https://www.hsqldb.org) result SSLHandshakeException). * [ ] http://www.jasperassistant.com (200) with 6 occurrences could not be migrated:      ([https](https://www.jasperassistant.com) result SSLHandshakeException). * [ ] http://www.jensgulden.de (200) with 1 occurrences could not be migrated:      ([https](https://www.jensgulden.de) result AnnotatedConnectException). * [ ] http://www.mockobjects.com (200) with 2 occurrences could not be migrated:      ([https](https://www.mockobjects.com) result ClosedChannelException). * [ ] http://www.mockobjects.com/ (200) with 1 occurrences could not be migrated:      ([https](https://www.mockobjects.com/) result ClosedChannelException). * [ ] http://xmlunit.sourceforge.net/ (200) with 3 occurrences could not be migrated:      ([https](https://xmlunit.sourceforge.net/) result AnnotatedConnectException). * [ ] http://192.168.0.1/mvc-showcase (301) with 1 occurrences could not be migrated:      ([https](https://192.168.0.1/mvc-showcase) result ConnectTimeoutException). * [ ] http://cglib.sourceforge.net/apidocs (301) with 1 occurrences could not be migrated:      ([https](https://cglib.sourceforge.net/apidocs) result AnnotatedConnectException). * [ ] http://www.easymock.org (301) with 4 occurrences could not be migrated:      ([https](https://www.easymock.org) result SSLHandshakeException). * [ ] http://www.easymock.org/ (301) with 1 occurrences could not be migrated:      ([https](https://www.easymock.org/) result SSLHandshakeException). * [ ] http://www.jmock.org/ (301) with 1 occurrences could not be migrated:      ([https](https://www.jmock.org/) result SSLHandshakeException). * [ ] http://foo.com (301) with 4 occurrences could not be migrated:      ([https](https://foo.com) result SSLHandshakeException). * [ ] http://foo.com/bar (301) with 4 occurrences could not be migrated:      ([https](https://foo.com/bar) result SSLHandshakeException). * [ ] http://foo.com/rest/books/6.json (301) with 1 occurrences could not be migrated:      ([https](https://foo.com/rest/books/6.json) result SSLHandshakeException). * [ ] http://foo.com/rest/books/6/pages/1.json (301) with 1 occurrences could not be migrated:      ([https](https://foo.com/rest/books/6/pages/1.json) result SSLHandshakeException). * [ ] http://foo.com/wrong (301) with 1 occurrences could not be migrated:      ([https](https://foo.com/wrong) result SSLHandshakeException). * [ ] http://mydomain4.com (301) with 3 occurrences could not be migrated:      ([https](https://mydomain4.com) result SSLHandshakeException). * [ ] http://groovy-lang.org/docs/groovy-2.3.6/html/documentation/markup-template-engine.html (302) with 1 occurrences could not be migrated:      ([https](https://groovy-lang.org/docs/groovy-2.3.6/html/documentation/markup-template-engine.html) result SSLProtocolException). * [ ] http://www.caucho.com/hessian (302) with 6 occurrences could not be migrated:      ([https](https://www.caucho.com/hessian) result SSLHandshakeException). * [ ] http://mydomain2.com (302) with 21 occurrences could not be migrated:      ([https](https://mydomain2.com) result ConnectTimeoutException). * [ ] http://www.jdiff.org (302) with 1 occurrences could not be migrated:      ([https](https://www.jdiff.org) result ConnectTimeoutException). * [ ] http://www.objectmentor.com/resources/articles/ocp.pdf (302) with 1 occurrences could not be migrated:      ([https](https://www.objectmentor.com/resources/articles/ocp.pdf) result ConnectTimeoutException). * [ ] http://example.com:80/test/this/here (404) with 3 occurrences could not be migrated:      ([https](https://example.com:80/test/this/here) result NotSslRecordException). * [ ] http://www.foo.com/schema/component/component.xsd (404) with 1 occurrences could not be migrated:      ([https](https://www.foo.com/schema/component/component.xsd) result SSLHandshakeException). * [ ] http://www.foo.com/schema/jcache (404) with 2 occurrences could not be migrated:      ([https](https://www.foo.com/schema/jcache) result SSLHandshakeException). * [ ] http://www.gebish.org/manual/current/intro.html (404) with 1 occurrences could not be migrated:      ([https](https://www.gebish.org/manual/current/intro.html) result SSLHandshakeException). * [ ] http://www.gebish.org/manual/current/testing.html (404) with 1 occurrences could not be migrated:      ([https](https://www.gebish.org/manual/current/testing.html) result SSLHandshakeException). * [ ] http://www.jpox.org (404) with 1 occurrences could not be migrated:      ([https](https://www.jpox.org) result ClosedChannelException). * [ ] http://www.mularien.com/blog/2008/04/24/how-to-reference-and-use-jstl-in-your-web-application/ (404) with 1 occurrences could not be migrated:      ([https](https://www.mularien.com/blog/2008/04/24/how-to-reference-and-use-jstl-in-your-web-application/) result SSLHandshakeException). * [ ] http://www.mycompany.com/schema/myns/myns.xsd (404) with 1 occurrences could not be migrated:      ([https](https://www.mycompany.com/schema/myns/myns.xsd) result ConnectTimeoutException). * [ ] http://xunitpatterns.com/Test%20Spy.html (404) with 1 occurrences could not be migrated:      ([https](https://xunitpatterns.com/Test%20Spy.html) result AnnotatedConnectException).  # Fixed URLs  ## Fixed But Review Recommended These URLs were fixed, but the https status was not OK. However, the https status was the same as the http request or http redirected to an https URL, so they were migrated. Your review is recommended.  * [ ] http://bugs.sun.com/view_bug.do?bug_id=6342411 (302) with 1 occurrences migrated to:     https://bugs.java.com/view_bug.do?bug_id=6342411 ([https](https://bugs.sun.com/view_bug.do?bug_id=6342411) result SSLHandshakeException). * [ ] http://bugs.sun.com/view_bug.do?bug_id=7023180 (302) with 2 occurrences migrated to:     https://bugs.java.com/view_bug.do?bug_id=7023180 ([https](https://bugs.sun.com/view_bug.do?bug_id=7023180) result SSLHandshakeException). * [ ] http://www.freemarker.org (301) with 4 occurrences migrated to:     https://freemarker.apache.org/ ([https](https://www.freemarker.org) result ConnectTimeoutException). * [ ] http://sockjs.org (303) with 2 occurrences migrated to:     https://github.com/sockjs/sockjs-client ([https](https://sockjs.org) result AnnotatedConnectException). * [ ] http://www.caucho.com/ (302) with 1 occurrences migrated to:     https://www.caucho.com/ ([https](https://www.caucho.com/) result SSLHandshakeException). * [ ] http://www.caucho.com (302) with 1 occurrences migrated to:     https://www.caucho.com/ ([https](https://www.caucho.com) result SSLHandshakeException). * [ ] http://www.caucho.com/burlap (302) with 5 occurrences migrated to:     https://www.caucho.com/burlap ([https](https://www.caucho.com/burlap) result SSLHandshakeException). * [ ] http://jruby.org (301) with 2 occurrences migrated to:     https://www.jruby.org ([https](https://jruby.org) result SSLHandshakeException). * [ ] http://jruby.org/ (301) with 1 occurrences migrated to:     https://www.jruby.org ([https](https://jruby.org/) result SSLHandshakeException). * [ ] http://slf4j.org/faq.html (302) with 1 occurrences migrated to:     https://www.slf4j.org/faq.html ([https](https://slf4j.org/faq.html) result SSLHandshakeException). * [ ] http://192.168.28.42/1.jsp (ConnectTimeoutException) with 3 occurrences migrated to:     https://192.168.28.42/1.jsp ([https](https://192.168.28.42/1.jsp) result ConnectTimeoutException). * [ ] http://example.com:8080/ (ConnectTimeoutException) with 1 occurrences migrated to:     https://example.com:8080/ ([https](https://example.com:8080/) result ConnectTimeoutException). * [ ] http://example.com:8080/bar (ConnectTimeoutException) with 5 occurrences migrated to:     https://example.com:8080/bar ([https](https://example.com:8080/bar) result ConnectTimeoutException). * [ ] http://example.org:9090 (ConnectTimeoutException) with 2 occurrences migrated to:     https://example.org:9090 ([https](https://example.org:9090) result ConnectTimeoutException). * [ ] http://example.org:9090/base (ConnectTimeoutException) with 12 occurrences migrated to:     https://example.org:9090/base ([https](https://example.org:9090/base) result ConnectTimeoutException). * [ ] http://example.org:9090/base/people (ConnectTimeoutException) with 2 occurrences migrated to:     https://example.org:9090/base/people ([https](https://example.org:9090/base/people) result ConnectTimeoutException). * [ ] http://example.org:9090/base/something/1/foo (ConnectTimeoutException) with 2 occurrences migrated to:     https://example.org:9090/base/something/1/foo ([https](https://example.org:9090/base/something/1/foo) result ConnectTimeoutException). * [ ] http://example.org:9090/base/something/else (ConnectTimeoutException) with 2 occurrences migrated to:     https://example.org:9090/base/something/else ([https](https://example.org:9090/base/something/else) result ConnectTimeoutException). * [ ] http://example.org:9999/base (ConnectTimeoutException) with 1 occurrences migrated to:     https://example.org:9999/base ([https](https://example.org:9999/base) result ConnectTimeoutException). * [ ] http://example.org:9999/base/people/123/addresses/DE (ConnectTimeoutException) with 1 occurrences migrated to:     https://example.org:9999/base/people/123/addresses/DE ([https](https://example.org:9999/base/people/123/addresses/DE) result ConnectTimeoutException). * [ ] http://mydomain1.com:123 (ConnectTimeoutException) with 1 occurrences migrated to:     https://mydomain1.com:123 ([https](https://mydomain1.com:123) result ConnectTimeoutException). * [ ] http://site1.com (ConnectTimeoutException) with 2 occurrences migrated to:     https://site1.com ([https](https://site1.com) result ConnectTimeoutException). * [ ] http://wwws.sun.com/software/xml/developers/diffmk/ (ConnectTimeoutException) with 1 occurrences migrated to:     https://wwws.sun.com/software/xml/developers/diffmk/ ([https](https://wwws.sun.com/software/xml/developers/diffmk/) result ConnectTimeoutException). * [ ] http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=5041784 (ReadTimeoutException) with 1 occurrences migrated to:     https://bugs.sun.com/bugdatabase/view_bug.do?bug_id=5041784 ([https](https://bugs.sun.com/bugdatabase/view_bug.do?bug_id=5041784) result SSLHandshakeException). * [ ] http://www.w3.org/TR/html4/loose.dtd (ReadTimeoutException) with 4 occurrences migrated to:     https://www.w3.org/TR/html4/loose.dtd ([https](https://www.w3.org/TR/html4/loose.dtd) result ReadTimeoutException). * [ ] http://DOMAIN2.com (UnknownHostException) with 1 occurrences migrated to:     https://DOMAIN2.com ([https](https://DOMAIN2.com) result UnknownHostException). * [ ] http://a.example.org/mvc-showcase (UnknownHostException) with 1 occurrences migrated to:     https://a.example.org/mvc-showcase ([https](https://a.example.org/mvc-showcase) result UnknownHostException). * [ ] http://arjen:foobar@java.sun.com:80/javase/6/docs/api/java/util/BitSet.html?foo=bar (UnknownHostException) with 1 occurrences migrated to:     https://arjen:foobar@java.sun.com:80/javase/6/docs/api/java/util/BitSet.html?foo=bar ([https](https://arjen:foobar@java.sun.com:80/javase/6/docs/api/java/util/BitSet.html?foo=bar) result UnknownHostException). * [ ] http://dev.bar.com (UnknownHostException) with 4 occurrences migrated to:     https://dev.bar.com ([https](https://dev.bar.com) result UnknownHostException). * [ ] http://domain1.com (UnknownHostException) with 14 occurrences migrated to:     https://domain1.com ([https](https://domain1.com) result UnknownHostException). * [ ] http://domain2.com (UnknownHostException) with 56 occurrences migrated to:     https://domain2.com ([https](https://domain2.com) result UnknownHostException). * [ ] http://example.com"",HttpMethod.GET (UnknownHostException) with 6 occurrences migrated to:     https://example.com"",HttpMethod.GET ([https](https://example.com"",HttpMethod.GET) result UnknownHostException). * [ ] http://foo.bar.com (UnknownHostException) with 4 occurrences migrated to:     https://foo.bar.com ([https](https://foo.bar.com) result UnknownHostException). * [ ] http://joe.openid.example.org/ (UnknownHostException) with 2 occurrences migrated to:     https://joe.openid.example.org/ ([https](https://joe.openid.example.org/) result UnknownHostException). * [ ] http://myserver/logo.png (UnknownHostException) with 1 occurrences migrated to:     https://myserver/logo.png ([https](https://myserver/logo.png) result UnknownHostException). * [ ] http://nagoya.apache.org/bugzilla/show_bug.cgi?id=16014 (UnknownHostException) with 1 occurrences migrated to:     https://nagoya.apache.org/bugzilla/show_bug.cgi?id=16014 ([https](https://nagoya.apache.org/bugzilla/show_bug.cgi?id=16014) result UnknownHostException). * [ ] http://samples.springframework.org/order (UnknownHostException) with 2 occurrences migrated to:     https://samples.springframework.org/order ([https](https://samples.springframework.org/order) result UnknownHostException). * [ ] http://url.somewhere.com (UnknownHostException) with 26 occurrences migrated to:     https://url.somewhere.com ([https](https://url.somewhere.com) result UnknownHostException). * [ ] http://url.somewhere.com/path (UnknownHostException) with 1 occurrences migrated to:     https://url.somewhere.com/path ([https](https://url.somewhere.com/path) result UnknownHostException). * [ ] http://url.somewhere.com/path?id=1 (UnknownHostException) with 1 occurrences migrated to:     https://url.somewhere.com/path?id=1 ([https](https://url.somewhere.com/path?id=1) result UnknownHostException). * [ ] http://url.somewhere.com/test.htm (UnknownHostException) with 2 occurrences migrated to:     https://url.somewhere.com/test.htm ([https](https://url.somewhere.com/test.htm) result UnknownHostException). * [ ] http://url.somewhere.com?foo=bar (UnknownHostException) with 1 occurrences migrated to:     https://url.somewhere.com?foo=bar ([https](https://url.somewhere.com?foo=bar) result UnknownHostException). * [ ] http://url.somewhere.com?foo=bar&a=b&c=d (UnknownHostException) with 1 occurrences migrated to:     https://url.somewhere.com?foo=bar&a=b&c=d ([https](https://url.somewhere.com?foo=bar&a=b&c=d) result UnknownHostException). * [ ] http://wiki.fasterxml.com/JacksonHome (UnknownHostException) with 3 occurrences migrated to:     https://wiki.fasterxml.com/JacksonHome ([https](https://wiki.fasterxml.com/JacksonHome) result UnknownHostException). * [ ] http://wiki.fasterxml.com/JacksonJsonViews (UnknownHostException) with 2 occurrences migrated to:     https://wiki.fasterxml.com/JacksonJsonViews ([https](https://wiki.fasterxml.com/JacksonJsonViews) result UnknownHostException). * [ ] http://bitworking.org/projects/URI-Templates/ (302) with 2 occurrences migrated to:     https://bitworking.org/projects/URI-Templates/ ([https](https://bitworking.org/projects/URI-Templates/) result 404). * [ ] http://docs.spring.io/spring-framework/docs/current/spring-framework-reference/html/overview.html (301) with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/html/overview.html ([https](https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/html/overview.html) result 404). * [ ] http://example.com/-foo (404) with 2 occurrences migrated to:     https://example.com/-foo ([https](https://example.com/-foo) result 404). * [ ] http://example.com/1 (404) with 1 occurrences migrated to:     https://example.com/1 ([https](https://example.com/1) result 404). * [ ] http://example.com/2 (404) with 1 occurrences migrated to:     https://example.com/2 ([https](https://example.com/2) result 404). * [ ] http://example.com/abc/ (404) with 4 occurrences migrated to:     https://example.com/abc/ ([https](https://example.com/abc/) result 404). * [ ] http://example.com/abc/x/y (404) with 1 occurrences migrated to:     https://example.com/abc/x/y ([https](https://example.com/abc/x/y) result 404). * [ ] http://example.com/abc/x/y/z (404) with 3 occurrences migrated to:     https://example.com/abc/x/y/z ([https](https://example.com/abc/x/y/z) result 404). * [ ] http://example.com/app/login/authenticate (404) with 1 occurrences migrated to:     https://example.com/app/login/authenticate ([https](https://example.com/app/login/authenticate) result 404). * [ ] http://example.com/bar (404) with 5 occurrences migrated to:     https://example.com/bar ([https](https://example.com/bar) result 404). * [ ] http://example.com/context.xml (404) with 4 occurrences migrated to:     https://example.com/context.xml ([https](https://example.com/context.xml) result 404). * [ ] http://example.com/example (404) with 6 occurrences migrated to:     https://example.com/example ([https](https://example.com/example) result 404). * [ ] http://example.com/example/?name (404) with 1 occurrences migrated to:     https://example.com/example/?name ([https](https://example.com/example/?name) result 404). * [ ] http://example.com/example/?name= (404) with 1 occurrences migrated to:     https://example.com/example/?name= ([https](https://example.com/example/?name=) result 404). * [ ] http://example.com/example/?name=%20 (404) with 1 occurrences migrated to:     https://example.com/example/?name=%20 ([https](https://example.com/example/?name=%20) result 404). * [ ] http://example.com/example/?name=row%5B0%5D (404) with 1 occurrences migrated to:     https://example.com/example/?name=row%5B0%5D ([https](https://example.com/example/?name=row%5B0%5D) result 404). * [ ] http://example.com/example/?name=value (404) with 1 occurrences migrated to:     https://example.com/example/?name=value ([https](https://example.com/example/?name=value) result 404). * [ ] http://example.com/example/?name=value¶m2=value+2 (404) with 1 occurrences migrated to:     https://example.com/example/?name=value¶m2=value+2 ([https](https://example.com/example/?name=value¶m2=value+2) result 404). * [ ] http://example.com/example/?row%5B0%5D=value (404) with 1 occurrences migrated to:     https://example.com/example/?row%5B0%5D=value ([https](https://example.com/example/?row%5B0%5D=value) result 404). * [ ] http://example.com/foo (404) with 4 occurrences migrated to:     https://example.com/foo ([https](https://example.com/foo) result 404). * [ ] http://example.com/foo/../bar (404) with 8 occurrences migrated to:     https://example.com/foo/../bar ([https](https://example.com/foo/../bar) result 404). * [ ] http://example.com/foo/foo2?bar (404) with 1 occurrences migrated to:     https://example.com/foo/foo2?bar ([https](https://example.com/foo/foo2?bar) result 404). * [ ] http://example.com/foo?bar (404) with 4 occurrences migrated to:     https://example.com/foo?bar ([https](https://example.com/foo?bar) result 404). * [ ] http://example.com/foo?bar= (404) with 2 occurrences migrated to:     https://example.com/foo?bar= ([https](https://example.com/foo?bar=) result 404). * [ ] http://example.com/foo?bar=baz (404) with 2 occurrences migrated to:     https://example.com/foo?bar=baz ([https](https://example.com/foo?bar=baz) result 404). * [ ] http://example.com/foo?baz=42 (404) with 1 occurrences migrated to:     https://example.com/foo?baz=42 ([https](https://example.com/foo?baz=42) result 404). * [ ] http://example.com/foo?foo=bar&baz=qux (404) with 2 occurrences migrated to:     https://example.com/foo?foo=bar&baz=qux ([https](https://example.com/foo?foo=bar&baz=qux) result 404). * [ ] http://example.com/hotel (404) with 6 occurrences migrated to:     https://example.com/hotel ([https](https://example.com/hotel) result 404). * [ ] http://example.com/hotel%20list (404) with 4 occurrences migrated to:     https://example.com/hotel%20list ([https](https://example.com/hotel%20list) result 404). * [ ] http://example.com/hotel%20list/Z (404) with 1 occurrences migrated to:     https://example.com/hotel%20list/Z ([https](https://example.com/hotel%20list/Z) result 404). * [ ] http://example.com/hotel%20list/Z%C3%BCrich (404) with 5 occurrences migrated to:     https://example.com/hotel%20list/Z%C3%BCrich ([https](https://example.com/hotel%20list/Z%C3%BCrich) result 404). * [ ] http://example.com/hotel%2520list (404) with 2 occurrences migrated to:     https://example.com/hotel%2520list ([https](https://example.com/hotel%2520list) result 404). * [ ] http://example.com/hotels (404) with 3 occurrences migrated to:     https://example.com/hotels ([https](https://example.com/hotels) result 404). * [ ] http://example.com/hotels/ (404) with 26 occurrences migrated to:     https://example.com/hotels/ ([https](https://example.com/hotels/) result 404). * [ ] http://example.com/hotels/1/bookings (404) with 1 occurrences migrated to:     https://example.com/hotels/1/bookings ([https](https://example.com/hotels/1/bookings) result 404). * [ ] http://example.com/hotels/1/bookings/42 (404) with 7 occurrences migrated to:     https://example.com/hotels/1/bookings/42 ([https](https://example.com/hotels/1/bookings/42) result 404). * [ ] http://example.com/hotels/1/pic/pics%2Flogo.png/size/150x150 (404) with 2 occurrences migrated to:     https://example.com/hotels/1/pic/pics%2Flogo.png/size/150x150 ([https](https://example.com/hotels/1/pic/pics%2Flogo.png/size/150x150) result 404). * [ ] http://example.com/hotels/1/pic/pics/logo.png (404) with 1 occurrences migrated to:     https://example.com/hotels/1/pic/pics/logo.png ([https](https://example.com/hotels/1/pic/pics/logo.png) result 404). * [ ] http://example.com/hotels/42 (404) with 1 occurrences migrated to:     https://example.com/hotels/42 ([https](https://example.com/hotels/42) result 404). * [ ] http://example.com/hotels/42/bookings/21 (404) with 1 occurrences migrated to:     https://example.com/hotels/42/bookings/21 ([https](https://example.com/hotels/42/bookings/21) result 404). * [ ] http://example.com/hotels/42/bookings/42 (404) with 1 occurrences migrated to:     https://example.com/hotels/42/bookings/42 ([https](https://example.com/hotels/42/bookings/42) result 404). * [ ] http://example.com/hotels/Rest%20%26%20Relax/bookings/42 (404) with 2 occurrences migrated to:     https://example.com/hotels/Rest%20%26%20Relax/bookings/42 ([https](https://example.com/hotels/Rest%20%26%20Relax/bookings/42) result 404). * [ ] http://example.com/hotels/bookings (404) with 1 occurrences migrated to:     https://example.com/hotels/bookings ([https](https://example.com/hotels/bookings) result 404). * [ ] http://example.com/hotels/foo (404) with 1 occurrences migrated to:     https://example.com/hotels/foo ([https](https://example.com/hotels/foo) result 404). * [ ] http://example.com/info (404) with 2 occurrences migrated to:     https://example.com/info ([https](https://example.com/info) result 404). * [ ] http://example.com/jquery-1.11.0.min.js (404) with 2 occurrences migrated to:     https://example.com/jquery-1.11.0.min.js ([https](https://example.com/jquery-1.11.0.min.js) result 404). * [ ] http://example.com/myFileUpload (404) with 1 occurrences migrated to:     https://example.com/myFileUpload ([https](https://example.com/myFileUpload) result 404). * [ ] http://example.com/myForm (404) with 1 occurrences migrated to:     https://example.com/myForm ([https](https://example.com/myForm) result 404). * [ ] http://example.com/path?query (404) with 2 occurrences migrated to:     https://example.com/path?query ([https](https://example.com/path?query) result 404). * [ ] http://example.com/resource (404) with 3 occurrences migrated to:     https://example.com/resource ([https](https://example.com/resource) result 404). * [ ] http://example.com/spaces (404) with 1 occurrences migrated to:     https://example.com/spaces ([https](https://example.com/spaces) result 404). * [ ] http://example.com/spaces%20and%20%E2%82%AC (404) with 3 occurrences migrated to:     https://example.com/spaces%20and%20%E2%82%AC ([https](https://example.com/spaces%20and%20%E2%82%AC) result 404). * [ ] http://example.com/test/this/here (404) with 1 occurrences migrated to:     https://example.com/test/this/here ([https](https://example.com/test/this/here) result 404). * [ ] http://example.com/user (404) with 1 occurrences migrated to:     https://example.com/user ([https](https://example.com/user) result 404). * [ ] http://example.org/fonts/css (404) with 3 occurrences migrated to:     https://example.org/fonts/css ([https](https://example.org/fonts/css) result 404). * [ ] http://example.org/foo/page.html (404) with 1 occurrences migrated to:     https://example.org/foo/page.html ([https](https://example.org/foo/page.html) result 404). * [ ] http://example.org/image.png (404) with 2 occurrences migrated to:     https://example.org/image.png ([https](https://example.org/image.png) result 404). * [ ] http://example.org/music/people (404) with 4 occurrences migrated to:     https://example.org/music/people ([https](https://example.org/music/people) result 404). * [ ] http://example.org/page.cache.html (404) with 1 occurrences migrated to:     https://example.org/page.cache.html ([https](https://example.org/page.cache.html) result 404). * [ ] http://help.github.com/send-pull-requests (404) with 2 occurrences migrated to:     https://help.github.com/send-pull-requests ([https](https://help.github.com/send-pull-requests) result 404). * [ ] http://host.com/outsideOfficeHours.html (404) with 1 occurrences migrated to:     https://host.com/outsideOfficeHours.html ([https](https://host.com/outsideOfficeHours.html) result 404). * [ ] http://selenium.googlecode.com/git/docs/api/java/org/openqa/selenium/support/PageFactory.html (404) with 1 occurrences migrated to:     https://selenium.googlecode.com/git/docs/api/java/org/openqa/selenium/support/PageFactory.html ([https](https://selenium.googlecode.com/git/docs/api/java/org/openqa/selenium/support/PageFactory.html) result 404). * [ ] http://springframework.org/oxm-test (404) with 2 occurrences migrated to:     https://springframework.org/oxm-test ([https](https://springframework.org/oxm-test) result 404). * [ ] http://www.example.com/favicon.ico (404) with 2 occurrences migrated to:     https://www.example.com/favicon.ico ([https](https://www.example.com/favicon.ico) result 404). * [ ] http://www.example.com/foo/bar (404) with 1 occurrences migrated to:     https://www.example.com/foo/bar ([https](https://www.example.com/foo/bar) result 404). * [ ] http://www.example.com/hotels (404) with 2 occurrences migrated to:     https://www.example.com/hotels ([https](https://www.example.com/hotels) result 404). * [ ] http://www.example.com/users/ (404) with 1 occurrences migrated to:     https://www.example.com/users/ ([https](https://www.example.com/users/) result 404). * [ ] http://www.example.com/users/fred (404) with 3 occurrences migrated to:     https://www.example.com/users/fred ([https](https://www.example.com/users/fred) result 404). * [ ] http://www.example.com/users/fred.pdf (404) with 1 occurrences migrated to:     https://www.example.com/users/fred.pdf ([https](https://www.example.com/users/fred.pdf) result 404). * [ ] http://www.example.com/users/fred.xml (404) with 1 occurrences migrated to:     https://www.example.com/users/fred.xml ([https](https://www.example.com/users/fred.xml) result 404). * [ ] http://www.ibm.com/developerworks/websphere/library/techarticles/0404_tang/0404_tang.html (301) with 1 occurrences migrated to:     https://www.ibm.com/developerworks/websphere/library/techarticles/0404_tang/0404_tang.html ([https](https://www.ibm.com/developerworks/websphere/library/techarticles/0404_tang/0404_tang.html) result 404). * [ ] http://mydomain1.com:80/path (301) with 2 occurrences migrated to:     https://www.mydomain1.com/path ([https](https://mydomain1.com:80/path) result 404). * [ ] http://www.quartz-scheduler.org/documentation/quartz-2.1.x/tutorials/tutorial-lesson-03 (404) with 1 occurrences migrated to:     https://www.quartz-scheduler.org/documentation/quartz-2.1.x/tutorials/tutorial-lesson-03 ([https](https://www.quartz-scheduler.org/documentation/quartz-2.1.x/tutorials/tutorial-lesson-03) result 404). * [ ] http://www.redbooks.ibm.com/Redbooks.nsf/RedbookAbstracts/tips0243.html (404) with 1 occurrences migrated to:     https://www.redbooks.ibm.com/Redbooks.nsf/RedbookAbstracts/tips0243.html ([https](https://www.redbooks.ibm.com/Redbooks.nsf/RedbookAbstracts/tips0243.html) result 404). * [ ] http://www.springframework.org/schema/jdbc/spring-cache.xsd (404) with 1 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-cache.xsd ([https](https://www.springframework.org/schema/jdbc/spring-cache.xsd) result 404). * [ ] http://www.utoronto.ca/webdocs/HTMLdocs/Book/Book-3ed/appb/mimetype.html (301) with 1 occurrences migrated to:     https://www.utoronto.ca/webdocs/HTMLdocs/Book/Book-3ed/appb/mimetype.html ([https](https://www.utoronto.ca/webdocs/HTMLdocs/Book/Book-3ed/appb/mimetype.html) result 404). * [ ] http://xml.apache.org/xslt (404) with 3 occurrences migrated to:     https://xml.apache.org/xslt ([https](https://xml.apache.org/xslt) result 404). * [ ] http://myhost.com/resource/path/myTemplate.txt (500) with 1 occurrences migrated to:     https://myhost.com/resource/path/myTemplate.txt ([https](https://myhost.com/resource/path/myTemplate.txt) result 500). * [ ] http://myhost.com/some/arbitrary/path (500) with 1 occurrences migrated to:     https://myhost.com/some/arbitrary/path ([https](https://myhost.com/some/arbitrary/path) result 500).  ## Fixed Success  These URLs were switched to an https URL with a 2xx status. While the status was successful, your review is still recommended.  * [ ] http://activemq.apache.org/delete-inactive-destinations.html with 1 occurrences migrated to:     https://activemq.apache.org/delete-inactive-destinations.html ([https](https://activemq.apache.org/delete-inactive-destinations.html) result 200). * [ ] http://activemq.apache.org/stomp.html with 1 occurrences migrated to:     https://activemq.apache.org/stomp.html ([https](https://activemq.apache.org/stomp.html) result 200). * [ ] http://ant.apache.org with 1 occurrences migrated to:     https://ant.apache.org ([https](https://ant.apache.org) result 200). * [ ] http://asciidoctor.org/ with 1 occurrences migrated to:     https://asciidoctor.org/ ([https](https://asciidoctor.org/) result 200). * [ ] http://asciidoctor.org/docs/asciidoc-syntax-quick-reference/ with 1 occurrences migrated to:     https://asciidoctor.org/docs/asciidoc-syntax-quick-reference/ ([https](https://asciidoctor.org/docs/asciidoc-syntax-quick-reference/) result 200). * [ ] http://asciidoctor.org/docs/asciidoc-writers-guide/ with 1 occurrences migrated to:     https://asciidoctor.org/docs/asciidoc-writers-guide/ ([https](https://asciidoctor.org/docs/asciidoc-writers-guide/) result 200). * [ ] http://asciidoctor.org/docs/editing-asciidoc-with-live-preview/ with 1 occurrences migrated to:     https://asciidoctor.org/docs/editing-asciidoc-with-live-preview/ ([https](https://asciidoctor.org/docs/editing-asciidoc-with-live-preview/) result 200). * [ ] http://asciidoctor.org/docs/user-manual/ with 1 occurrences migrated to:     https://asciidoctor.org/docs/user-manual/ ([https](https://asciidoctor.org/docs/user-manual/) result 200). * [ ] http://beanvalidation.org/ with 1 occurrences migrated to:     https://beanvalidation.org/ ([https](https://beanvalidation.org/) result 200). * [ ] http://caniuse.com/ with 1 occurrences migrated to:     https://caniuse.com/ ([https](https://caniuse.com/) result 200). * [ ] http://caniuse.com/websockets with 1 occurrences migrated to:     https://caniuse.com/websockets ([https](https://caniuse.com/websockets) result 200). * [ ] http://castor-data-binding.github.io/castor/reference-guides/1.3.3/html-single/index.html with 2 occurrences migrated to:     https://castor-data-binding.github.io/castor/reference-guides/1.3.3/html-single/index.html ([https](https://castor-data-binding.github.io/castor/reference-guides/1.3.3/html-single/index.html) result 200). * [ ] http://code.jquery.com/jquery-1.11.0.min.js with 2 occurrences migrated to:     https://code.jquery.com/jquery-1.11.0.min.js ([https](https://code.jquery.com/jquery-1.11.0.min.js) result 200). * [ ] http://code.jquery.com/jquery.js with 1 occurrences migrated to:     https://code.jquery.com/jquery.js ([https](https://code.jquery.com/jquery.js) result 200). * [ ] http://commons.apache.org/proper/commons-lang/ with 2 occurrences migrated to:     https://commons.apache.org/proper/commons-lang/ ([https](https://commons.apache.org/proper/commons-lang/) result 200). * [ ] http://docs.oracle.com/javaee/6/api/javax/servlet/http/HttpServletRequest.html with 3 occurrences migrated to:     https://docs.oracle.com/javaee/6/api/javax/servlet/http/HttpServletRequest.html ([https](https://docs.oracle.com/javaee/6/api/javax/servlet/http/HttpServletRequest.html) result 200). * [ ] http://docs.oracle.com/javase/6/docs/api/java/beans/package-summary.html with 1 occurrences migrated to:     https://docs.oracle.com/javase/6/docs/api/java/beans/package-summary.html ([https](https://docs.oracle.com/javase/6/docs/api/java/beans/package-summary.html) result 200). * [ ] http://docs.oracle.com/javase/6/docs/api/java/io/Serializable.html with 1 occurrences migrated to:     https://docs.oracle.com/javase/6/docs/api/java/io/Serializable.html ([https](https://docs.oracle.com/javase/6/docs/api/java/io/Serializable.html) result 200). * [ ] http://docs.oracle.com/javase/6/docs/api/java/lang/instrument/package-summary.html with 2 occurrences migrated to:     https://docs.oracle.com/javase/6/docs/api/java/lang/instrument/package-summary.html ([https](https://docs.oracle.com/javase/6/docs/api/java/lang/instrument/package-summary.html) result 200). * [ ] http://docs.oracle.com/javase/6/docs/api/java/util/concurrent/ThreadPoolExecutor.html with 1 occurrences migrated to:     https://docs.oracle.com/javase/6/docs/api/java/util/concurrent/ThreadPoolExecutor.html ([https](https://docs.oracle.com/javase/6/docs/api/java/util/concurrent/ThreadPoolExecutor.html) result 200). * [ ] http://docs.oracle.com/javase/7/docs/api/java/util/concurrent/ForkJoinPool.html with 1 occurrences migrated to:     https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/ForkJoinPool.html ([https](https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/ForkJoinPool.html) result 200). * [ ] http://docs.oracle.com/javase/7/docs/technotes/guides/scripting/programmer_guide/ with 1 occurrences migrated to:     https://docs.oracle.com/javase/7/docs/technotes/guides/scripting/programmer_guide/ ([https](https://docs.oracle.com/javase/7/docs/technotes/guides/scripting/programmer_guide/) result 200). * [ ] http://docs.oracle.com/javase/8/docs/api/javax/script/ScriptEngineFactory.html with 1 occurrences migrated to:     https://docs.oracle.com/javase/8/docs/api/javax/script/ScriptEngineFactory.html ([https](https://docs.oracle.com/javase/8/docs/api/javax/script/ScriptEngineFactory.html) result 200). * [ ] http://docs.oracle.com/javase/tutorial/javabeans/advanced/customization.html with 1 occurrences migrated to:     https://docs.oracle.com/javase/tutorial/javabeans/advanced/customization.html ([https](https://docs.oracle.com/javase/tutorial/javabeans/advanced/customization.html) result 200). * [ ] http://docs.oracle.com/javase/tutorial/javabeans/writing/properties.html with 1 occurrences migrated to:     https://docs.oracle.com/javase/tutorial/javabeans/writing/properties.html ([https](https://docs.oracle.com/javase/tutorial/javabeans/writing/properties.html) result 200). * [ ] http://docs.seleniumhq.org/ with 1 occurrences migrated to:     https://docs.seleniumhq.org/ ([https](https://docs.seleniumhq.org/) result 200). * [ ] http://docs.seleniumhq.org/projects/webdriver/ with 1 occurrences migrated to:     https://docs.seleniumhq.org/projects/webdriver/ ([https](https://docs.seleniumhq.org/projects/webdriver/) result 200). * [ ] http://docs.spring.io/spring-framework/docs/3.2.4.RELEASE_to_4.0.0.RELEASE/ with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/3.2.4.RELEASE_to_4.0.0.RELEASE/ ([https](https://docs.spring.io/spring-framework/docs/3.2.4.RELEASE_to_4.0.0.RELEASE/) result 200). * [ ] http://docs.spring.io/spring-framework/docs/current/javadoc-api/ with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/javadoc-api/ ([https](https://docs.spring.io/spring-framework/docs/current/javadoc-api/) result 200). * [ ] http://docs.spring.io/spring-framework/docs/current/spring-framework-reference/ with 1 occurrences migrated to:     https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/ ([https](https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/) result 200). * [ ] http://download.oracle.com/otn_hosted_doc/jdeveloper/905/jdbc-javadoc/oracle/jdbc/OracleConnection.html with 1 occurrences migrated to:     https://download.oracle.com/otn_hosted_doc/jdeveloper/905/jdbc-javadoc/oracle/jdbc/OracleConnection.html ([https](https://download.oracle.com/otn_hosted_doc/jdeveloper/905/jdbc-javadoc/oracle/jdbc/OracleConnection.html) result 200). * [ ] http://download.oracle.com/otn_hosted_doc/jdeveloper/905/jdbc-javadoc/oracle/sql/BLOB.html with 7 occurrences migrated to:     https://download.oracle.com/otn_hosted_doc/jdeveloper/905/jdbc-javadoc/oracle/sql/BLOB.html ([https](https://download.oracle.com/otn_hosted_doc/jdeveloper/905/jdbc-javadoc/oracle/sql/BLOB.html) result 200). * [ ] http://download.oracle.com/otn_hosted_doc/jdeveloper/905/jdbc-javadoc/oracle/sql/CLOB.html with 7 occurrences migrated to:     https://download.oracle.com/otn_hosted_doc/jdeveloper/905/jdbc-javadoc/oracle/sql/CLOB.html ([https](https://download.oracle.com/otn_hosted_doc/jdeveloper/905/jdbc-javadoc/oracle/sql/CLOB.html) result 200). * [ ] http://en.wikipedia.org/wiki/Adapter_pattern with 1 occurrences migrated to:     https://en.wikipedia.org/wiki/Adapter_pattern ([https](https://en.wikipedia.org/wiki/Adapter_pattern) result 200). * [ ] http://en.wikipedia.org/wiki/Content_negotiation with 1 occurrences migrated to:     https://en.wikipedia.org/wiki/Content_negotiation ([https](https://en.wikipedia.org/wiki/Content_negotiation) result 200). * [ ] http://en.wikipedia.org/wiki/Cross-origin_resource_sharing with 1 occurrences migrated to:     https://en.wikipedia.org/wiki/Cross-origin_resource_sharing ([https](https://en.wikipedia.org/wiki/Cross-origin_resource_sharing) result 200). * [ ] http://en.wikipedia.org/wiki/HTTP_ETag with 1 occurrences migrated to:     https://en.wikipedia.org/wiki/HTTP_ETag ([https](https://en.wikipedia.org/wiki/HTTP_ETag) result 200). * [ ] http://en.wikipedia.org/wiki/Halting_Problem with 1 occurrences migrated to:     https://en.wikipedia.org/wiki/Halting_Problem ([https](https://en.wikipedia.org/wiki/Halting_Problem) result 200). * [ ] http://en.wikipedia.org/wiki/Internet_media_type with 1 occurrences migrated to:     https://en.wikipedia.org/wiki/Internet_media_type ([https](https://en.wikipedia.org/wiki/Internet_media_type) result 200). * [ ] http://en.wikipedia.org/wiki/JSONP with 3 occurrences migrated to:     https://en.wikipedia.org/wiki/JSONP ([https](https://en.wikipedia.org/wiki/JSONP) result 200). * [ ] http://en.wikipedia.org/wiki/List_of_HTTP_status_codes with 1 occurrences migrated to:     https://en.wikipedia.org/wiki/List_of_HTTP_status_codes ([https](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes) result 200). * [ ] http://en.wikipedia.org/wiki/MIME with 1 occurrences migrated to:     https://en.wikipedia.org/wiki/MIME ([https](https://en.wikipedia.org/wiki/MIME) result 200). * [ ] http://en.wikipedia.org/wiki/Mock_Object with 1 occurrences migrated to:     https://en.wikipedia.org/wiki/Mock_Object ([https](https://en.wikipedia.org/wiki/Mock_Object) result 200). * [ ] http://en.wikipedia.org/wiki/Polyfill with 1 occurrences migrated to:     https://en.wikipedia.org/wiki/Polyfill ([https](https://en.wikipedia.org/wiki/Polyfill) result 200). * [ ] http://example.com with 85 occurrences migrated to:     https://example.com ([https](https://example.com) result 200). * [ ] http://example.com/ with 14 occurrences migrated to:     https://example.com/ ([https](https://example.com/) result 200). * [ ] http://example.com?foo=bar@baz with 1 occurrences migrated to:     https://example.com?foo=bar@baz ([https](https://example.com?foo=bar@baz) result 200). * [ ] http://example.org with 7 occurrences migrated to:     https://example.org ([https](https://example.org) result 200). * [ ] http://fasterxml.github.io/jackson-databind/javadoc/2.6/com/fasterxml/jackson/databind/DeserializationFeature.html with 1 occurrences migrated to:     https://fasterxml.github.io/jackson-databind/javadoc/2.6/com/fasterxml/jackson/databind/DeserializationFeature.html ([https](https://fasterxml.github.io/jackson-databind/javadoc/2.6/com/fasterxml/jackson/databind/DeserializationFeature.html) result 200). * [ ] http://fasterxml.github.io/jackson-databind/javadoc/2.6/com/fasterxml/jackson/databind/MapperFeature.html with 1 occurrences migrated to:     https://fasterxml.github.io/jackson-databind/javadoc/2.6/com/fasterxml/jackson/databind/MapperFeature.html ([https](https://fasterxml.github.io/jackson-databind/javadoc/2.6/com/fasterxml/jackson/databind/MapperFeature.html) result 200). * [ ] http://gradle.org with 1 occurrences migrated to:     https://gradle.org ([https](https://gradle.org) result 200). * [ ] http://h2database.com with 1 occurrences migrated to:     https://h2database.com ([https](https://h2database.com) result 200). * [ ] http://handlebarsjs.com with 1 occurrences migrated to:     https://handlebarsjs.com ([https](https://handlebarsjs.com) result 200). * [ ] http://handlebarsjs.com/ with 1 occurrences migrated to:     https://handlebarsjs.com/ ([https](https://handlebarsjs.com/) result 200). * [ ] http://hc.apache.org/httpcomponents-asyncclient-dev/ with 1 occurrences migrated to:     https://hc.apache.org/httpcomponents-asyncclient-dev/ ([https](https://hc.apache.org/httpcomponents-asyncclient-dev/) result 200). * [ ] http://hc.apache.org/httpcomponents-client-ga/ with 2 occurrences migrated to:     https://hc.apache.org/httpcomponents-client-ga/ ([https](https://hc.apache.org/httpcomponents-client-ga/) result 200). * [ ] http://hc.apache.org/httpcomponents-client-ga/httpclient/ with 1 occurrences migrated to:     https://hc.apache.org/httpcomponents-client-ga/httpclient/ ([https](https://hc.apache.org/httpcomponents-client-ga/httpclient/) result 200). * [ ] http://www.hibernate.org/ (301) with 1 occurrences migrated to:     https://hibernate.org/ ([https](https://www.hibernate.org/) result 200). * [ ] http://www.hibernate.org (301) with 3 occurrences migrated to:     https://hibernate.org/ ([https](https://www.hibernate.org) result 200). * [ ] http://jcp.org/aboutJava/communityprocess/final/jsr003/index3.html with 1 occurrences migrated to:     https://jcp.org/aboutJava/communityprocess/final/jsr003/index3.html ([https](https://jcp.org/aboutJava/communityprocess/final/jsr003/index3.html) result 200). * [ ] http://jcp.org/aboutJava/communityprocess/final/jsr160/index.html with 1 occurrences migrated to:     https://jcp.org/aboutJava/communityprocess/final/jsr160/index.html ([https](https://jcp.org/aboutJava/communityprocess/final/jsr160/index.html) result 200). * [ ] http://jcp.org/en/jsr/detail?id=107 with 1 occurrences migrated to:     https://jcp.org/en/jsr/detail?id=107 ([https](https://jcp.org/en/jsr/detail?id=107) result 200). * [ ] http://jcp.org/en/jsr/detail?id=310 with 1 occurrences migrated to:     https://jcp.org/en/jsr/detail?id=310 ([https](https://jcp.org/en/jsr/detail?id=310) result 200). * [ ] http://jcp.org/en/jsr/detail?id=356 with 2 occurrences migrated to:     https://jcp.org/en/jsr/detail?id=356 ([https](https://jcp.org/en/jsr/detail?id=356) result 200). * [ ] http://jira.pentaho.com/browse/PDI-5031 with 1 occurrences migrated to:     https://jira.pentaho.com/browse/PDI-5031 ([https](https://jira.pentaho.com/browse/PDI-5031) result 200). * [ ] http://joel-costigliola.github.io/assertj/ with 2 occurrences migrated to:     https://joel-costigliola.github.io/assertj/ ([https](https://joel-costigliola.github.io/assertj/) result 200). * [ ] http://jsonassert.skyscreamer.org/ with 2 occurrences migrated to:     https://jsonassert.skyscreamer.org/ ([https](https://jsonassert.skyscreamer.org/) result 200). * [ ] http://logback.qos.ch with 1 occurrences migrated to:     https://logback.qos.ch ([https](https://logback.qos.ch) result 200). * [ ] http://martinfowler.com/articles/injection.html with 1 occurrences migrated to:     https://martinfowler.com/articles/injection.html ([https](https://martinfowler.com/articles/injection.html) result 200). * [ ] http://maven.apache.org/ with 1 occurrences migrated to:     https://maven.apache.org/ ([https](https://maven.apache.org/) result 200). * [ ] http://mydomain.com with 5 occurrences migrated to:     https://mydomain.com ([https](https://mydomain.com) result 200). * [ ] http://myfaces.apache.org/ with 1 occurrences migrated to:     https://myfaces.apache.org/ ([https](https://myfaces.apache.org/) result 200). * [ ] http://myfaces.apache.org/orchestra/ with 1 occurrences migrated to:     https://myfaces.apache.org/orchestra/ ([https](https://myfaces.apache.org/orchestra/) result 200). * [ ] http://netty.io/ with 1 occurrences migrated to:     https://netty.io/ ([https](https://netty.io/) result 200). * [ ] http://openjdk.java.net/projects/nashorn/ with 5 occurrences migrated to:     https://openjdk.java.net/projects/nashorn/ ([https](https://openjdk.java.net/projects/nashorn/) result 200). * [ ] http://pivotal.io/security/cve-2015-5211 with 1 occurrences migrated to:     https://pivotal.io/security/cve-2015-5211 ([https](https://pivotal.io/security/cve-2015-5211) result 200). * [ ] http://poi.apache.org with 4 occurrences migrated to:     https://poi.apache.org ([https](https://poi.apache.org) result 200). * [ ] http://projects.spring.io/spring-boot/ with 1 occurrences migrated to:     https://projects.spring.io/spring-boot/ ([https](https://projects.spring.io/spring-boot/) result 200). * [ ] http://projects.spring.io/spring-data/ with 1 occurrences migrated to:     https://projects.spring.io/spring-data/ ([https](https://projects.spring.io/spring-data/) result 200). * [ ] http://projects.spring.io/spring-framework/ with 1 occurrences migrated to:     https://projects.spring.io/spring-framework/ ([https](https://projects.spring.io/spring-framework/) result 200). * [ ] http://projects.spring.io/spring-integration/ with 3 occurrences migrated to:     https://projects.spring.io/spring-integration/ ([https](https://projects.spring.io/spring-integration/) result 200). * [ ] http://projects.spring.io/spring-security/ with 2 occurrences migrated to:     https://projects.spring.io/spring-security/ ([https](https://projects.spring.io/spring-security/) result 200). * [ ] http://projects.spring.io/spring-webflow/ with 2 occurrences migrated to:     https://projects.spring.io/spring-webflow/ ([https](https://projects.spring.io/spring-webflow/) result 200). * [ ] http://repo.spring.io/milestone/ with 1 occurrences migrated to:     https://repo.spring.io/milestone/ ([https](https://repo.spring.io/milestone/) result 200). * [ ] http://repo.spring.io/release/ with 2 occurrences migrated to:     https://repo.spring.io/release/ ([https](https://repo.spring.io/release/) result 200). * [ ] http://repo.spring.io/snapshot/ with 1 occurrences migrated to:     https://repo.spring.io/snapshot/ ([https](https://repo.spring.io/snapshot/) result 200). * [ ] http://repo1.maven.org/maven2/javax/inject/javax.inject/1/ with 2 occurrences migrated to:     https://repo1.maven.org/maven2/javax/inject/javax.inject/1/ ([https](https://repo1.maven.org/maven2/javax/inject/javax.inject/1/) result 200). * [ ] http://schema.spring.io/mvc/spring-mvc.xsd with 1 occurrences migrated to:     https://schema.spring.io/mvc/spring-mvc.xsd ([https](https://schema.spring.io/mvc/spring-mvc.xsd) result 200). * [ ] http://search.maven.org/ with 2 occurrences migrated to:     https://search.maven.org/ ([https](https://search.maven.org/) result 200). * [ ] http://sockjs.github.io/sockjs-protocol/sockjs-protocol-0.3.3.html with 3 occurrences migrated to:     https://sockjs.github.io/sockjs-protocol/sockjs-protocol-0.3.3.html ([https](https://sockjs.github.io/sockjs-protocol/sockjs-protocol-0.3.3.html) result 200). * [ ] http://sourceforge.net with 1 occurrences migrated to:     https://sourceforge.net ([https](https://sourceforge.net) result 200). * [ ] http://sourceforge.net/projects/javadiff/ with 1 occurrences migrated to:     https://sourceforge.net/projects/javadiff/ ([https](https://sourceforge.net/projects/javadiff/) result 200). * [ ] http://sourceforge.net/sflogo.php?group_id=37160 with 1 occurrences migrated to:     https://sourceforge.net/sflogo.php?group_id=37160 ([https](https://sourceforge.net/sflogo.php?group_id=37160) result 200). * [ ] http://spring.io/blog/ with 1 occurrences migrated to:     https://spring.io/blog/ ([https](https://spring.io/blog/) result 200). * [ ] http://spring.io/blog/2012/05/08/spring-mvc-3-2-preview-techniques-for-real-time-updates/ with 1 occurrences migrated to:     https://spring.io/blog/2012/05/08/spring-mvc-3-2-preview-techniques-for-real-time-updates/ ([https](https://spring.io/blog/2012/05/08/spring-mvc-3-2-preview-techniques-for-real-time-updates/) result 200). * [ ] http://spring.io/blog/category/news with 1 occurrences migrated to:     https://spring.io/blog/category/news ([https](https://spring.io/blog/category/news) result 200). * [ ] http://spring.io/projects with 1 occurrences migrated to:     https://spring.io/projects ([https](https://spring.io/projects) result 200). * [ ] http://spring.io/questions with 1 occurrences migrated to:     https://spring.io/questions ([https](https://spring.io/questions) result 200). * [ ] http://spring.io/services with 1 occurrences migrated to:     https://spring.io/services ([https](https://spring.io/services) result 200). * [ ] http://square.github.io/okhttp/ with 2 occurrences migrated to:     https://square.github.io/okhttp/ ([https](https://square.github.io/okhttp/) result 200). * [ ] http://stackoverflow.com/faq with 1 occurrences migrated to:     https://stackoverflow.com/faq ([https](https://stackoverflow.com/faq) result 200). * [ ] http://stackoverflow.com/questions/1481251/what-does-document-domain-document-domain-do with 2 occurrences migrated to:     https://stackoverflow.com/questions/1481251/what-does-document-domain-document-domain-do ([https](https://stackoverflow.com/questions/1481251/what-does-document-domain-document-domain-do) result 200). * [ ] http://stackoverflow.com/questions/19394570/java-jre-7u45-breaks-classloader-getresources with 1 occurrences migrated to:     https://stackoverflow.com/questions/19394570/java-jre-7u45-breaks-classloader-getresources ([https](https://stackoverflow.com/questions/19394570/java-jre-7u45-breaks-classloader-getresources) result 200). * [ ] http://stackoverflow.com/questions/22986109/testing-spring-managed-servlet with 1 occurrences migrated to:     https://stackoverflow.com/questions/22986109/testing-spring-managed-servlet ([https](https://stackoverflow.com/questions/22986109/testing-spring-managed-servlet) result 200). * [ ] http://stackoverflow.com/questions/24725438/what-could-cause-a-class-implementing-applicationlistenercontextrefreshedevent with 1 occurrences migrated to:     https://stackoverflow.com/questions/24725438/what-could-cause-a-class-implementing-applicationlistenercontextrefreshedevent ([https](https://stackoverflow.com/questions/24725438/what-could-cause-a-class-implementing-applicationlistenercontextrefreshedevent) result 200). * [ ] http://start.spring.io with 1 occurrences migrated to:     https://start.spring.io ([https](https://start.spring.io) result 200). * [ ] http://stas-blogspot.blogspot.com/2010/03/java-bridge-methods-explained.html with 1 occurrences migrated to:     https://stas-blogspot.blogspot.com/2010/03/java-bridge-methods-explained.html ([https](https://stas-blogspot.blogspot.com/2010/03/java-bridge-methods-explained.html) result 200). * [ ] http://stomp.github.io/stomp-specification-1.2.html with 10 occurrences migrated to:     https://stomp.github.io/stomp-specification-1.2.html ([https](https://stomp.github.io/stomp-specification-1.2.html) result 200). * [ ] http://struts.apache.org with 1 occurrences migrated to:     https://struts.apache.org ([https](https://struts.apache.org) result 200). * [ ] http://struts.apache.org/ with 1 occurrences migrated to:     https://struts.apache.org/ ([https](https://struts.apache.org/) result 200). * [ ] http://tapestry.apache.org/ with 2 occurrences migrated to:     https://tapestry.apache.org/ ([https](https://tapestry.apache.org/) result 200). * [ ] http://tiles.apache.org with 7 occurrences migrated to:     https://tiles.apache.org ([https](https://tiles.apache.org) result 200). * [ ] http://tiles.apache.org/framework/dependency-management.html with 1 occurrences migrated to:     https://tiles.apache.org/framework/dependency-management.html ([https](https://tiles.apache.org/framework/dependency-management.html) result 200). * [ ] http://tomcat.apache.org/ with 2 occurrences migrated to:     https://tomcat.apache.org/ ([https](https://tomcat.apache.org/) result 200). * [ ] http://tomcat.apache.org/tomcat-6.0-doc/config/context.html with 2 occurrences migrated to:     https://tomcat.apache.org/tomcat-6.0-doc/config/context.html ([https](https://tomcat.apache.org/tomcat-6.0-doc/config/context.html) result 200). * [ ] http://tomcat.apache.org/tomcat-6.0-doc/config/loader.html with 1 occurrences migrated to:     https://tomcat.apache.org/tomcat-6.0-doc/config/loader.html ([https](https://tomcat.apache.org/tomcat-6.0-doc/config/loader.html) result 200). * [ ] http://tools.ietf.org/html/rfc1945 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc1945 ([https](https://tools.ietf.org/html/rfc1945) result 200). * [ ] http://tools.ietf.org/html/rfc2109 with 2 occurrences migrated to:     https://tools.ietf.org/html/rfc2109 ([https](https://tools.ietf.org/html/rfc2109) result 200). * [ ] http://tools.ietf.org/html/rfc2295 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc2295 ([https](https://tools.ietf.org/html/rfc2295) result 200). * [ ] http://tools.ietf.org/html/rfc2324 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc2324 ([https](https://tools.ietf.org/html/rfc2324) result 200). * [ ] http://tools.ietf.org/html/rfc2518 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc2518 ([https](https://tools.ietf.org/html/rfc2518) result 200). * [ ] http://tools.ietf.org/html/rfc2616 with 3 occurrences migrated to:     https://tools.ietf.org/html/rfc2616 ([https](https://tools.ietf.org/html/rfc2616) result 200). * [ ] http://tools.ietf.org/html/rfc2774 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc2774 ([https](https://tools.ietf.org/html/rfc2774) result 200). * [ ] http://tools.ietf.org/html/rfc2817 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc2817 ([https](https://tools.ietf.org/html/rfc2817) result 200). * [ ] http://tools.ietf.org/html/rfc2965 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc2965 ([https](https://tools.ietf.org/html/rfc2965) result 200). * [ ] http://tools.ietf.org/html/rfc3229 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc3229 ([https](https://tools.ietf.org/html/rfc3229) result 200). * [ ] http://tools.ietf.org/html/rfc3986 with 3 occurrences migrated to:     https://tools.ietf.org/html/rfc3986 ([https](https://tools.ietf.org/html/rfc3986) result 200). * [ ] http://tools.ietf.org/html/rfc4918 with 5 occurrences migrated to:     https://tools.ietf.org/html/rfc4918 ([https](https://tools.ietf.org/html/rfc4918) result 200). * [ ] http://tools.ietf.org/html/rfc5842 with 2 occurrences migrated to:     https://tools.ietf.org/html/rfc5842 ([https](https://tools.ietf.org/html/rfc5842) result 200). * [ ] http://tools.ietf.org/html/rfc5988 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc5988 ([https](https://tools.ietf.org/html/rfc5988) result 200). * [ ] http://tools.ietf.org/html/rfc6202 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc6202 ([https](https://tools.ietf.org/html/rfc6202) result 200). * [ ] http://tools.ietf.org/html/rfc6266 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc6266 ([https](https://tools.ietf.org/html/rfc6266) result 200). * [ ] http://tools.ietf.org/html/rfc6454 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc6454 ([https](https://tools.ietf.org/html/rfc6454) result 200). * [ ] http://tools.ietf.org/html/rfc6455 with 3 occurrences migrated to:     https://tools.ietf.org/html/rfc6455 ([https](https://tools.ietf.org/html/rfc6455) result 200). * [ ] http://tools.ietf.org/html/rfc6585 with 4 occurrences migrated to:     https://tools.ietf.org/html/rfc6585 ([https](https://tools.ietf.org/html/rfc6585) result 200). * [ ] http://tools.ietf.org/html/rfc7230 with 10 occurrences migrated to:     https://tools.ietf.org/html/rfc7230 ([https](https://tools.ietf.org/html/rfc7230) result 200). * [ ] http://tools.ietf.org/html/rfc7231 with 58 occurrences migrated to:     https://tools.ietf.org/html/rfc7231 ([https](https://tools.ietf.org/html/rfc7231) result 200). * [ ] http://tools.ietf.org/html/rfc7232 with 8 occurrences migrated to:     https://tools.ietf.org/html/rfc7232 ([https](https://tools.ietf.org/html/rfc7232) result 200). * [ ] http://tools.ietf.org/html/rfc7233 with 12 occurrences migrated to:     https://tools.ietf.org/html/rfc7233 ([https](https://tools.ietf.org/html/rfc7233) result 200). * [ ] http://tools.ietf.org/html/rfc7234 with 5 occurrences migrated to:     https://tools.ietf.org/html/rfc7234 ([https](https://tools.ietf.org/html/rfc7234) result 200). * [ ] http://tools.ietf.org/html/rfc7235 with 6 occurrences migrated to:     https://tools.ietf.org/html/rfc7235 ([https](https://tools.ietf.org/html/rfc7235) result 200). * [ ] http://tools.ietf.org/html/rfc7238 with 1 occurrences migrated to:     https://tools.ietf.org/html/rfc7238 ([https](https://tools.ietf.org/html/rfc7238) result 200). * [ ] http://tools.ietf.org/html/rfc7239 with 2 occurrences migrated to:     https://tools.ietf.org/html/rfc7239 ([https](https://tools.ietf.org/html/rfc7239) result 200). * [ ] http://tools.ietf.org/rfcdiff?difftype=--hwdiff&url2=draft-ietf-webdav-protocol-06.txt with 3 occurrences migrated to:     https://tools.ietf.org/rfcdiff?difftype=--hwdiff&url2=draft-ietf-webdav-protocol-06.txt ([https](https://tools.ietf.org/rfcdiff?difftype=--hwdiff&url2=draft-ietf-webdav-protocol-06.txt) result 200). * [ ] http://velocity.apache.org with 4 occurrences migrated to:     https://velocity.apache.org ([https](https://velocity.apache.org) result 200). * [ ] http://vimeo.com/34436402 with 1 occurrences migrated to:     https://vimeo.com/34436402 ([https](https://vimeo.com/34436402) result 200). * [ ] http://www.amazon.com/exec/obidos/tg/detail/-/0764543857/ with 10 occurrences migrated to:     https://www.amazon.com/exec/obidos/tg/detail/-/0764543857/ ([https](https://www.amazon.com/exec/obidos/tg/detail/-/0764543857/) result 200). * [ ] http://www.apache.org with 1 occurrences migrated to:     https://www.apache.org ([https](https://www.apache.org) result 200). * [ ] http://www.apple.com/DTDs/PropertyList-1.0.dtd with 6 occurrences migrated to:     https://www.apple.com/DTDs/PropertyList-1.0.dtd ([https](https://www.apple.com/DTDs/PropertyList-1.0.dtd) result 200). * [ ] http://www.atomikos.com/ with 1 occurrences migrated to:     https://www.atomikos.com/ ([https](https://www.atomikos.com/) result 200). * [ ] http://www.eclipse.org/ajdt/ with 1 occurrences migrated to:     https://www.eclipse.org/ajdt/ ([https](https://www.eclipse.org/ajdt/) result 200). * [ ] http://www.eclipse.org/aspectj/doc/next/progguide/index.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/next/progguide/index.html ([https](https://www.eclipse.org/aspectj/doc/next/progguide/index.html) result 200). * [ ] http://www.eclipse.org/aspectj/doc/next/progguide/semantics-joinPoints.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/next/progguide/semantics-joinPoints.html ([https](https://www.eclipse.org/aspectj/doc/next/progguide/semantics-joinPoints.html) result 200). * [ ] http://www.eclipse.org/aspectj/doc/released/adk15notebook/index.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/released/adk15notebook/index.html ([https](https://www.eclipse.org/aspectj/doc/released/adk15notebook/index.html) result 200). * [ ] http://www.eclipse.org/aspectj/doc/released/devguide/antTasks.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/released/devguide/antTasks.html ([https](https://www.eclipse.org/aspectj/doc/released/devguide/antTasks.html) result 200). * [ ] http://www.eclipse.org/aspectj/doc/released/devguide/index.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/released/devguide/index.html ([https](https://www.eclipse.org/aspectj/doc/released/devguide/index.html) result 200). * [ ] http://www.eclipse.org/aspectj/doc/released/devguide/ltw-configuration.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/released/devguide/ltw-configuration.html ([https](https://www.eclipse.org/aspectj/doc/released/devguide/ltw-configuration.html) result 200). * [ ] http://www.eclipse.org/aspectj/doc/released/devguide/ltw.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/released/devguide/ltw.html ([https](https://www.eclipse.org/aspectj/doc/released/devguide/ltw.html) result 200). * [ ] http://www.eclipse.org/aspectj/doc/released/progguide/index.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/released/progguide/index.html ([https](https://www.eclipse.org/aspectj/doc/released/progguide/index.html) result 200). * [ ] http://www.eclipse.org/aspectj/doc/released/progguide/semantics-pointcuts.html with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/doc/released/progguide/semantics-pointcuts.html ([https](https://www.eclipse.org/aspectj/doc/released/progguide/semantics-pointcuts.html) result 200). * [ ] http://www.eclipse.org/aspectj/dtd/aspectj.dtd with 1 occurrences migrated to:     https://www.eclipse.org/aspectj/dtd/aspectj.dtd ([https](https://www.eclipse.org/aspectj/dtd/aspectj.dtd) result 200). * [ ] http://www.eclipse.org/jetty/ with 1 occurrences migrated to:     https://www.eclipse.org/jetty/ ([https](https://www.eclipse.org/jetty/) result 200). * [ ] http://ehcache.sourceforge.net (301) with 1 occurrences migrated to:     https://www.ehcache.org/ ([https](https://ehcache.sourceforge.net) result 200). * [ ] http://ehcache.org/ (301) with 1 occurrences migrated to:     https://www.ehcache.org/ ([https](https://ehcache.org/) result 200). * [ ] http://www.embeddedjs.com/ with 1 occurrences migrated to:     https://www.embeddedjs.com/ ([https](https://www.embeddedjs.com/) result 200). * [ ] http://www.enterpriseintegrationpatterns.com with 1 occurrences migrated to:     https://www.enterpriseintegrationpatterns.com ([https](https://www.enterpriseintegrationpatterns.com) result 200). * [ ] http://www.example.org/?param=aGVsbG9Xb3JsZA%3D%3D with 1 occurrences migrated to:     https://www.example.org/?param=aGVsbG9Xb3JsZA%3D%3D ([https](https://www.example.org/?param=aGVsbG9Xb3JsZA%3D%3D) result 200). * [ ] http://www.google.com with 2 occurrences migrated to:     https://www.google.com ([https](https://www.google.com) result 200). * [ ] http://www.h2database.com with 1 occurrences migrated to:     https://www.h2database.com ([https](https://www.h2database.com) result 200). * [ ] http://www.ietf.org with 1 occurrences migrated to:     https://www.ietf.org ([https](https://www.ietf.org) result 200). * [ ] http://www.ietf.org/rfc/rfc1867.txt with 2 occurrences migrated to:     https://www.ietf.org/rfc/rfc1867.txt ([https](https://www.ietf.org/rfc/rfc1867.txt) result 200). * [ ] http://www.ietf.org/rfc/rfc2396.txt with 2 occurrences migrated to:     https://www.ietf.org/rfc/rfc2396.txt ([https](https://www.ietf.org/rfc/rfc2396.txt) result 200). * [ ] http://www.ietf.org/rfc/rfc3986.txt with 11 occurrences migrated to:     https://www.ietf.org/rfc/rfc3986.txt ([https](https://www.ietf.org/rfc/rfc3986.txt) result 200). * [ ] http://www.infoq.com/ with 1 occurrences migrated to:     https://www.infoq.com/ ([https](https://www.infoq.com/) result 200). * [ ] http://www.infoq.com/articles/Web-Sockets-Proxy-Servers with 1 occurrences migrated to:     https://www.infoq.com/articles/Web-Sockets-Proxy-Servers ([https](https://www.infoq.com/articles/Web-Sockets-Proxy-Servers) result 200). * [ ] http://www.infoq.com/minibooks/JTDS with 1 occurrences migrated to:     https://www.infoq.com/minibooks/JTDS ([https](https://www.infoq.com/minibooks/JTDS) result 200). * [ ] http://www.jetbrains.com/idea/ with 1 occurrences migrated to:     https://www.jetbrains.com/idea/ ([https](https://www.jetbrains.com/idea/) result 200). * [ ] http://jruby.sourceforge.net (302) with 1 occurrences migrated to:     https://www.jruby.org/ ([https](https://jruby.sourceforge.net) result 200). * [ ] http://www.json.org/ with 1 occurrences migrated to:     https://www.json.org/ ([https](https://www.json.org/) result 200). * [ ] http://www.jython.org with 1 occurrences migrated to:     https://www.jython.org ([https](https://www.jython.org) result 200). * [ ] http://www.jython.org/ with 1 occurrences migrated to:     https://www.jython.org/ ([https](https://www.jython.org/) result 200). * [ ] http://www.lowagie.com/iText with 1 occurrences migrated to:     https://www.lowagie.com/iText ([https](https://www.lowagie.com/iText) result 200). * [ ] http://www.manpagez.com/man/5/crontab/ with 1 occurrences migrated to:     https://www.manpagez.com/man/5/crontab/ ([https](https://www.manpagez.com/man/5/crontab/) result 200). * [ ] http://mydomain1.com:80/ (301) with 2 occurrences migrated to:     https://www.mydomain1.com/ ([https](https://mydomain1.com:80/) result 200). * [ ] http://mydomain1.com:80 (301) with 1 occurrences migrated to:     https://www.mydomain1.com/ ([https](https://mydomain1.com:80) result 200). * [ ] http://www.oracle.com/technetwork/articles/javaee/jpa-137156.html with 1 occurrences migrated to:     https://www.oracle.com/technetwork/articles/javaee/jpa-137156.html ([https](https://www.oracle.com/technetwork/articles/javaee/jpa-137156.html) result 200). * [ ] http://www.oracle.com/technetwork/java/javaee/javaserverfaces-139869.html with 2 occurrences migrated to:     https://www.oracle.com/technetwork/java/javaee/javaserverfaces-139869.html ([https](https://www.oracle.com/technetwork/java/javaee/javaserverfaces-139869.html) result 200). * [ ] http://www.oracle.com/technetwork/java/javase/documentation/spec-136004.html with 1 occurrences migrated to:     https://www.oracle.com/technetwork/java/javase/documentation/spec-136004.html ([https](https://www.oracle.com/technetwork/java/javase/documentation/spec-136004.html) result 200). * [ ] http://www.oracle.com/technetwork/java/javase/tech/download-jsp-141676.html with 1 occurrences migrated to:     https://www.oracle.com/technetwork/java/javase/tech/download-jsp-141676.html ([https](https://www.oracle.com/technetwork/java/javase/tech/download-jsp-141676.html) result 200). * [ ] http://www.oracle.com/technetwork/java/javase/tech/javamanagement-140525.html with 1 occurrences migrated to:     https://www.oracle.com/technetwork/java/javase/tech/javamanagement-140525.html ([https](https://www.oracle.com/technetwork/java/javase/tech/javamanagement-140525.html) result 200). * [ ] http://www.oracle.com/technetwork/middleware/weblogic/overview/index-085209.html with 1 occurrences migrated to:     https://www.oracle.com/technetwork/middleware/weblogic/overview/index-085209.html ([https](https://www.oracle.com/technetwork/middleware/weblogic/overview/index-085209.html) result 200). * [ ] http://www.ow2.org/ with 1 occurrences migrated to:     https://www.ow2.org/ ([https](https://www.ow2.org/) result 200). * [ ] http://quartz-scheduler.org (301) with 3 occurrences migrated to:     https://www.quartz-scheduler.org/ ([https](https://quartz-scheduler.org) result 200). * [ ] http://www.rabbitmq.com/stomp.html with 1 occurrences migrated to:     https://www.rabbitmq.com/stomp.html ([https](https://www.rabbitmq.com/stomp.html) result 200). * [ ] http://seleniumhq.org/projects/webdriver/ (301) with 1 occurrences migrated to:     https://www.seleniumhq.org ([https](https://seleniumhq.org/projects/webdriver/) result 200). * [ ] http://www.slf4j.org with 1 occurrences migrated to:     https://www.slf4j.org ([https](https://www.slf4j.org) result 200). * [ ] http://www.springbyexample.org/examples/custom-thread-scope-module.html with 1 occurrences migrated to:     https://www.springbyexample.org/examples/custom-thread-scope-module.html ([https](https://www.springbyexample.org/examples/custom-thread-scope-module.html) result 200). * [ ] http://www.springframework.org/dtd/spring-beans-2.0.dtd with 10 occurrences migrated to:     https://www.springframework.org/dtd/spring-beans-2.0.dtd ([https](https://www.springframework.org/dtd/spring-beans-2.0.dtd) result 200). * [ ] http://www.springframework.org/schema/aop/spring-aop.xsd with 15 occurrences migrated to:     https://www.springframework.org/schema/aop/spring-aop.xsd ([https](https://www.springframework.org/schema/aop/spring-aop.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-2.0.xsd with 5 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-2.0.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-2.0.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-2.5.xsd with 6 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-2.5.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-3.0.xsd with 10 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-3.0.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-3.1.xsd with 11 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-3.1.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-3.2.xsd with 11 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-3.2.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-3.2.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-4.0.xsd with 11 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-4.0.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-4.0.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-4.1.xsd with 12 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-4.1.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-4.1.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans-4.2.xsd with 12 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans-4.2.xsd ([https](https://www.springframework.org/schema/beans/spring-beans-4.2.xsd) result 200). * [ ] http://www.springframework.org/schema/beans/spring-beans.xsd with 77 occurrences migrated to:     https://www.springframework.org/schema/beans/spring-beans.xsd ([https](https://www.springframework.org/schema/beans/spring-beans.xsd) result 200). * [ ] http://www.springframework.org/schema/cache/spring-cache.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/cache/spring-cache.xsd ([https](https://www.springframework.org/schema/cache/spring-cache.xsd) result 200). * [ ] http://www.springframework.org/schema/context/spring-context.xsd with 14 occurrences migrated to:     https://www.springframework.org/schema/context/spring-context.xsd ([https](https://www.springframework.org/schema/context/spring-context.xsd) result 200). * [ ] http://www.springframework.org/schema/jdbc/spring-jdbc.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/jdbc/spring-jdbc.xsd ([https](https://www.springframework.org/schema/jdbc/spring-jdbc.xsd) result 200). * [ ] http://www.springframework.org/schema/jee/spring-jee.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/jee/spring-jee.xsd ([https](https://www.springframework.org/schema/jee/spring-jee.xsd) result 200). * [ ] http://www.springframework.org/schema/jms/spring-jms.xsd with 2 occurrences migrated to:     https://www.springframework.org/schema/jms/spring-jms.xsd ([https](https://www.springframework.org/schema/jms/spring-jms.xsd) result 200). * [ ] http://www.springframework.org/schema/lang/spring-lang.xsd with 4 occurrences migrated to:     https://www.springframework.org/schema/lang/spring-lang.xsd ([https](https://www.springframework.org/schema/lang/spring-lang.xsd) result 200). * [ ] http://www.springframework.org/schema/mvc/spring-mvc.xsd with 4 occurrences migrated to:     https://www.springframework.org/schema/mvc/spring-mvc.xsd ([https](https://www.springframework.org/schema/mvc/spring-mvc.xsd) result 200). * [ ] http://www.springframework.org/schema/oxm/spring-oxm.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/oxm/spring-oxm.xsd ([https](https://www.springframework.org/schema/oxm/spring-oxm.xsd) result 200). * [ ] http://www.springframework.org/schema/tool/spring-tool-2.0.xsd with 5 occurrences migrated to:     https://www.springframework.org/schema/tool/spring-tool-2.0.xsd ([https](https://www.springframework.org/schema/tool/spring-tool-2.0.xsd) result 200). * [ ] http://www.springframework.org/schema/tool/spring-tool-2.5.xsd with 7 occurrences migrated to:     https://www.springframework.org/schema/tool/spring-tool-2.5.xsd ([https](https://www.springframework.org/schema/tool/spring-tool-2.5.xsd) result 200). * [ ] http://www.springframework.org/schema/tool/spring-tool-3.0.xsd with 11 occurrences migrated to:     https://www.springframework.org/schema/tool/spring-tool-3.0.xsd ([https](https://www.springframework.org/schema/tool/spring-tool-3.0.xsd) result 200). * [ ] http://www.springframework.org/schema/tool/spring-tool-3.1.xsd with 12 occurrences migrated to:     https://www.springframework.org/schema/tool/spring-tool-3.1.xsd ([https](https://www.springframework.org/schema/tool/spring-tool-3.1.xsd) result 200). * [ ] http://www.springframework.org/schema/tool/spring-tool-3.2.xsd with 12 occurrences migrated to:     https://www.springframework.org/schema/tool/spring-tool-3.2.xsd ([https](https://www.springframework.org/schema/tool/spring-tool-3.2.xsd) result 200). * [ ] http://www.springframework.org/schema/tool/spring-tool-4.0.xsd with 12 occurrences migrated to:     https://www.springframework.org/schema/tool/spring-tool-4.0.xsd ([https](https://www.springframework.org/schema/tool/spring-tool-4.0.xsd) result 200). * [ ] http://www.springframework.org/schema/tool/spring-tool-4.1.xsd with 13 occurrences migrated to:     https://www.springframework.org/schema/tool/spring-tool-4.1.xsd ([https](https://www.springframework.org/schema/tool/spring-tool-4.1.xsd) result 200). * [ ] http://www.springframework.org/schema/tool/spring-tool-4.2.xsd with 13 occurrences migrated to:     https://www.springframework.org/schema/tool/spring-tool-4.2.xsd ([https](https://www.springframework.org/schema/tool/spring-tool-4.2.xsd) result 200). * [ ] http://www.springframework.org/schema/tx/spring-tx.xsd with 10 occurrences migrated to:     https://www.springframework.org/schema/tx/spring-tx.xsd ([https](https://www.springframework.org/schema/tx/spring-tx.xsd) result 200). * [ ] http://www.springframework.org/schema/util/spring-util.xsd with 1 occurrences migrated to:     https://www.springframework.org/schema/util/spring-util.xsd ([https](https://www.springframework.org/schema/util/spring-util.xsd) result 200). * [ ] http://www.springframework.org/schema/websocket/spring-websocket.xsd with 11 occurrences migrated to:     https://www.springframework.org/schema/websocket/spring-websocket.xsd ([https](https://www.springframework.org/schema/websocket/spring-websocket.xsd) result 200). * [ ] http://www.stuartellis.eu/articles/erb/ (301) with 1 occurrences migrated to:     https://www.stuartellis.name/articles/erb/ ([https](https://www.stuartellis.eu/articles/erb/) result 200). * [ ] http://www.thymeleaf.org/ with 1 occurrences migrated to:     https://www.thymeleaf.org/ ([https](https://www.thymeleaf.org/) result 200). * [ ] http://www.thymeleaf.org/documentation.html with 1 occurrences migrated to:     https://www.thymeleaf.org/documentation.html ([https](https://www.thymeleaf.org/documentation.html) result 200). * [ ] http://www.w3.org/2000/xmlns/ with 5 occurrences migrated to:     https://www.w3.org/2000/xmlns/ ([https](https://www.w3.org/2000/xmlns/) result 200). * [ ] http://www.w3.org/2004/08/xop/include with 2 occurrences migrated to:     https://www.w3.org/2004/08/xop/include ([https](https://www.w3.org/2004/08/xop/include) result 200). * [ ] http://www.w3.org/DesignIssues/MatrixURIs.html with 1 occurrences migrated to:     https://www.w3.org/DesignIssues/MatrixURIs.html ([https](https://www.w3.org/DesignIssues/MatrixURIs.html) result 200). * [ ] http://www.w3.org/TR/2004/REC-xmlschema-1-20041028/ with 1 occurrences migrated to:     https://www.w3.org/TR/2004/REC-xmlschema-1-20041028/ ([https](https://www.w3.org/TR/2004/REC-xmlschema-1-20041028/) result 200). * [ ] http://www.w3.org/TR/2004/REC-xmlschema-2-20041028/ with 1 occurrences migrated to:     https://www.w3.org/TR/2004/REC-xmlschema-2-20041028/ ([https](https://www.w3.org/TR/2004/REC-xmlschema-2-20041028/) result 200). * [ ] http://www.w3.org/TR/2004/WD-soap12-mtom-20040608/ with 2 occurrences migrated to:     https://www.w3.org/TR/2004/WD-soap12-mtom-20040608/ ([https](https://www.w3.org/TR/2004/WD-soap12-mtom-20040608/) result 200). * [ ] http://www.w3.org/TR/2005/REC-xop10-20050125/ with 6 occurrences migrated to:     https://www.w3.org/TR/2005/REC-xop10-20050125/ ([https](https://www.w3.org/TR/2005/REC-xop10-20050125/) result 200). * [ ] http://www.w3.org/TR/cors/ with 14 occurrences migrated to:     https://www.w3.org/TR/cors/ ([https](https://www.w3.org/TR/cors/) result 200). * [ ] http://www.w3.org/TR/eventsource/ with 2 occurrences migrated to:     https://www.w3.org/TR/eventsource/ ([https](https://www.w3.org/TR/eventsource/) result 200). * [ ] http://www.w3.org/TR/xhtml1/ with 2 occurrences migrated to:     https://www.w3.org/TR/xhtml1/ ([https](https://www.w3.org/TR/xhtml1/) result 200). * [ ] http://www.w3.org/TR/xhtml1/diffs.html with 1 occurrences migrated to:     https://www.w3.org/TR/xhtml1/diffs.html ([https](https://www.w3.org/TR/xhtml1/diffs.html) result 200). * [ ] http://www.w3.org/TR/xhtml1/dtds.html with 2 occurrences migrated to:     https://www.w3.org/TR/xhtml1/dtds.html ([https](https://www.w3.org/TR/xhtml1/dtds.html) result 200). * [ ] http://www.webjars.org with 2 occurrences migrated to:     https://www.webjars.org ([https](https://www.webjars.org) result 200). * [ ] http://www.webjars.org/ with 1 occurrences migrated to:     https://www.webjars.org/ ([https](https://www.webjars.org/) result 200). * [ ] http://www.wildfly.org/ with 1 occurrences migrated to:     https://www.wildfly.org/ ([https](https://www.wildfly.org/) result 200). * [ ] http://x-stream.github.io/ with 2 occurrences migrated to:     https://x-stream.github.io/ ([https](https://x-stream.github.io/) result 200). * [ ] http://xmlbeans.apache.org/ with 2 occurrences migrated to:     https://xmlbeans.apache.org/ ([https](https://xmlbeans.apache.org/) result 200). * [ ] http://youtrack.jetbrains.com/issue/IDEA-53476 with 1 occurrences migrated to:     https://youtrack.jetbrains.com/issue/IDEA-53476 ([https](https://youtrack.jetbrains.com/issue/IDEA-53476) result 200). * [ ] http://youtrack.jetbrains.com/issue/IDEA-64446 with 1 occurrences migrated to:     https://youtrack.jetbrains.com/issue/IDEA-64446 ([https](https://youtrack.jetbrains.com/issue/IDEA-64446) result 200). * [ ] http://ant.apache.org/ivy with 1 occurrences migrated to:     https://ant.apache.org/ivy ([https](https://ant.apache.org/ivy) result 301). * [ ] http://asm.ow2.org with 1 occurrences migrated to:     https://asm.ow2.org ([https](https://asm.ow2.org) result 301). * [ ] http://asm.ow2.org/asm50/javadoc/user with 1 occurrences migrated to:     https://asm.ow2.org/asm50/javadoc/user ([https](https://asm.ow2.org/asm50/javadoc/user) result 301). * [ ] http://bit.ly/TRlX2r with 1 occurrences migrated to:     https://bit.ly/TRlX2r ([https](https://bit.ly/TRlX2r) result 301). * [ ] http://bit.ly/UzccDt with 1 occurrences migrated to:     https://bit.ly/UzccDt ([https](https://bit.ly/UzccDt) result 301). * [ ] http://bit.ly/p9rIvx with 1 occurrences migrated to:     https://bit.ly/p9rIvx ([https](https://bit.ly/p9rIvx) result 301). * [ ] http://bit.ly/qUwvwz with 1 occurrences migrated to:     https://bit.ly/qUwvwz ([https](https://bit.ly/qUwvwz) result 301). * [ ] http://blog.pivotal.io/pivotal/products/websocket-architecture-in-spring-4-0 with 1 occurrences migrated to:     https://blog.pivotal.io/pivotal/products/websocket-architecture-in-spring-4-0 ([https](https://blog.pivotal.io/pivotal/products/websocket-architecture-in-spring-4-0) result 301). * [ ] http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx with 1 occurrences migrated to:     https://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx ([https](https://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx) result 301). * [ ] http://castor-data-binding.github.io/castor with 1 occurrences migrated to:     https://castor-data-binding.github.io/castor ([https](https://castor-data-binding.github.io/castor) result 301). * [ ] http://code.google.com/p/beanshell2/ with 1 occurrences migrated to:     https://code.google.com/p/beanshell2/ ([https](https://code.google.com/p/beanshell2/) result 301). * [ ] http://code.google.com/p/browsersec/wiki/Part2 with 1 occurrences migrated to:     https://code.google.com/p/browsersec/wiki/Part2 ([https](https://code.google.com/p/browsersec/wiki/Part2) result 301). * [ ] http://code.google.com/p/gears/wiki/ResumableHttpRequestsProposal with 1 occurrences migrated to:     https://code.google.com/p/gears/wiki/ResumableHttpRequestsProposal ([https](https://code.google.com/p/gears/wiki/ResumableHttpRequestsProposal) result 301). * [ ] http://code.google.com/p/guava-libraries/ with 1 occurrences migrated to:     https://code.google.com/p/guava-libraries/ ([https](https://code.google.com/p/guava-libraries/) result 301). * [ ] http://code.google.com/p/objenesis/ with 1 occurrences migrated to:     https://code.google.com/p/objenesis/ ([https](https://code.google.com/p/objenesis/) result 301). * [ ] http://code.google.com/p/xml-matchers/ with 4 occurrences migrated to:     https://code.google.com/p/xml-matchers/ ([https](https://code.google.com/p/xml-matchers/) result 301). * [ ] http://commons.apache.org/proper/commons-dbcp with 2 occurrences migrated to:     https://commons.apache.org/proper/commons-dbcp ([https](https://commons.apache.org/proper/commons-dbcp) result 301). * [ ] http://commons.apache.org/proper/commons-fileupload with 3 occurrences migrated to:     https://commons.apache.org/proper/commons-fileupload ([https](https://commons.apache.org/proper/commons-fileupload) result 301). * [ ] http://confluence.jetbrains.net/display/IDEADEV/Gradle+integration with 1 occurrences migrated to:     https://confluence.jetbrains.net/display/IDEADEV/Gradle+integration ([https](https://confluence.jetbrains.net/display/IDEADEV/Gradle+integration) result 301). * [ ] http://db.apache.org/derby with 2 occurrences migrated to:     https://db.apache.org/derby ([https](https://db.apache.org/derby) result 301). * [ ] http://dev.w3.org/html5/eventsource/ with 2 occurrences migrated to:     https://dev.w3.org/html5/eventsource/ ([https](https://dev.w3.org/html5/eventsource/) result 301). * [ ] http://docs.spring.io with 1 occurrences migrated to:     https://docs.spring.io ([https](https://docs.spring.io) result 301). * [ ] http://domain.com with 17 occurrences migrated to:     https://domain.com ([https](https://domain.com) result 301). * [ ] http://domain.com/ with 1 occurrences migrated to:     https://domain.com/ ([https](https://domain.com/) result 301). * [ ] http://en.wikipedia.org/wiki/Cache_ with 1 occurrences migrated to:     https://en.wikipedia.org/wiki/Cache_ ([https](https://en.wikipedia.org/wiki/Cache_) result 301). * [ ] http://facebook.github.io/react/ with 1 occurrences migrated to:     https://facebook.github.io/react/ ([https](https://facebook.github.io/react/) result 301). * [ ] http://forum.springframework.org/showthread.php?t=41350 with 1 occurrences migrated to:     https://forum.springframework.org/showthread.php?t=41350 ([https](https://forum.springframework.org/showthread.php?t=41350) result 301). * [ ] http://github.com/SpringSource/spring-framework with 1 occurrences migrated to:     https://github.com/SpringSource/spring-framework ([https](https://github.com/SpringSource/spring-framework) result 301). * [ ] http://hdiv.org/ with 1 occurrences migrated to:     https://hdiv.org/ ([https](https://hdiv.org/) result 301). * [ ] http://help.github.com/set-up-git-redirect with 1 occurrences migrated to:     https://help.github.com/set-up-git-redirect ([https](https://help.github.com/set-up-git-redirect) result 301). * [ ] http://jakarta.apache.org/commons/fileupload with 2 occurrences migrated to:     https://jakarta.apache.org/commons/fileupload ([https](https://jakarta.apache.org/commons/fileupload) result 301). * [ ] http://jira.springframework.org/browse/SPR-5708 with 1 occurrences migrated to:     https://jira.springframework.org/browse/SPR-5708 ([https](https://jira.springframework.org/browse/SPR-5708) result 301). * [ ] http://jira.springframework.org/browse/SPR-6124 with 1 occurrences migrated to:     https://jira.springframework.org/browse/SPR-6124 ([https](https://jira.springframework.org/browse/SPR-6124) result 301). * [ ] http://jira.springframework.org/browse/SPR-6128 with 1 occurrences migrated to:     https://jira.springframework.org/browse/SPR-6128 ([https](https://jira.springframework.org/browse/SPR-6128) result 301). * [ ] http://jira.springframework.org/browse/SPR-7064 with 1 occurrences migrated to:     https://jira.springframework.org/browse/SPR-7064 ([https](https://jira.springframework.org/browse/SPR-7064) result 301). * [ ] http://logging.apache.org/log4j with 1 occurrences migrated to:     https://logging.apache.org/log4j ([https](https://logging.apache.org/log4j) result 301). * [ ] http://maven.apache.org/plugins/maven-surefire-plugin/test-mojo.html with 1 occurrences migrated to:     https://maven.apache.org/plugins/maven-surefire-plugin/test-mojo.html ([https](https://maven.apache.org/plugins/maven-surefire-plugin/test-mojo.html) result 301). * [ ] http://mockito.org/ (301) with 1 occurrences migrated to:     https://mockito.github.io ([https](https://mockito.org/) result 301). * [ ] http://mydomain1.com with 35 occurrences migrated to:     https://mydomain1.com ([https](https://mydomain1.com) result 301). * [ ] http://mydomain1.com/ with 2 occurrences migrated to:     https://mydomain1.com/ ([https](https://mydomain1.com/) result 301). * [ ] http://mydomain1.com/path with 2 occurrences migrated to:     https://mydomain1.com/path ([https](https://mydomain1.com/path) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-2660 with 1 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-2660 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-2660) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-2754 with 1 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-2754 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-2754) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-2789 with 1 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-2789 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-2789) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-3026 with 1 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-3026 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-3026) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-3038 with 1 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-3038 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-3038) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-3127 with 1 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-3127 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-3127) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-3775 with 1 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-3775 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-3775) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-3880 with 1 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-3880 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-3880) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-3896 with 7 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-3896 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-3896) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-3949 with 1 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-3949 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-3949) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-3960 with 1 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-3960 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-3960) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-4008 with 2 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-4008 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-4008) result 301). * [ ] http://opensource.atlassian.com/projects/spring/browse/SPR-4040 with 3 occurrences migrated to:     https://opensource.atlassian.com/projects/spring/browse/SPR-4040 ([https](https://opensource.atlassian.com/projects/spring/browse/SPR-4040) result 301). * [ ] http://projects.spring.io/spring-webflow with 1 occurrences migrated to:     https://projects.spring.io/spring-webflow ([https](https://projects.spring.io/spring-webflow) result 301). * [ ] http://publib.boulder.ibm.com/infocenter/wasinfo/v5r1//topic/com.ibm.websphere.base.doc/info/aes/ae/rdat_extiapi.html with 1 occurrences migrated to:     https://publib.boulder.ibm.com/infocenter/wasinfo/v5r1//topic/com.ibm.websphere.base.doc/info/aes/ae/rdat_extiapi.html ([https](https://publib.boulder.ibm.com/infocenter/wasinfo/v5r1//topic/com.ibm.websphere.base.doc/info/aes/ae/rdat_extiapi.html) result 301). * [ ] http://publib.boulder.ibm.com/infocenter/wasinfo/v6r0/topic/com.ibm.websphere.javadoc.doc/public_html/api/com/ibm/websphere/rsadapter/JDBCConnectionSpec.html with 1 occurrences migrated to:     https://publib.boulder.ibm.com/infocenter/wasinfo/v6r0/topic/com.ibm.websphere.javadoc.doc/public_html/api/com/ibm/websphere/rsadapter/JDBCConnectionSpec.html ([https](https://publib.boulder.ibm.com/infocenter/wasinfo/v6r0/topic/com.ibm.websphere.javadoc.doc/public_html/api/com/ibm/websphere/rsadapter/JDBCConnectionSpec.html) result 301). * [ ] http://site2.com with 2 occurrences migrated to:     https://site2.com ([https](https://site2.com) result 301). * [ ] http://sourceforge.net/projects/c3p0 with 2 occurrences migrated to:     https://sourceforge.net/projects/c3p0 ([https](https://sourceforge.net/projects/c3p0) result 301). * [ ] http://sourceforge.net/projects/javadiff with 1 occurrences migrated to:     https://sourceforge.net/projects/javadiff ([https](https://sourceforge.net/projects/javadiff) result 301). * [ ] http://springframework.org with 2 occurrences migrated to:     https://springframework.org ([https](https://springframework.org) result 301). * [ ] http://www-01.ibm.com/software/webservers/appserv/was/ with 1 occurrences migrated to:     https://www-01.ibm.com/software/webservers/appserv/was/ ([https](https://www-01.ibm.com/software/webservers/appserv/was/) result 301). * [ ] http://www.atomenabled.org/developers/syndication/ with 1 occurrences migrated to:     https://www.atomenabled.org/developers/syndication/ ([https](https://www.atomenabled.org/developers/syndication/) result 301). * [ ] http://www.eclipse.org/aspectj with 2 occurrences migrated to:     https://www.eclipse.org/aspectj ([https](https://www.eclipse.org/aspectj) result 301). * [ ] http://www.google.com/ig/calculator?q=1USD=?EUR with 1 occurrences migrated to:     https://www.google.com/ig/calculator?q=1USD=?EUR ([https](https://www.google.com/ig/calculator?q=1USD=?EUR) result 301). * [ ] http://www.gradle.org/ with 1 occurrences migrated to:     https://www.gradle.org/ ([https](https://www.gradle.org/) result 301). * [ ] http://www.javaworld.com/javaworld/jw-01-2009/jw-01-spring-transactions.html with 1 occurrences migrated to:     https://www.javaworld.com/javaworld/jw-01-2009/jw-01-spring-transactions.html ([https](https://www.javaworld.com/javaworld/jw-01-2009/jw-01-spring-transactions.html) result 301). * [ ] http://www.jboss.org/jbossas/ with 1 occurrences migrated to:     https://www.jboss.org/jbossas/ ([https](https://www.jboss.org/jbossas/) result 301). * [ ] http://www.junit.org/ with 1 occurrences migrated to:     https://www.junit.org/ ([https](https://www.junit.org/) result 301). * [ ] http://www.mnot.net/cache_docs with 1 occurrences migrated to:     https://www.mnot.net/cache_docs ([https](https://www.mnot.net/cache_docs) result 301). * [ ] http://www.oracle.com/technetwork/java/javase/downloads with 1 occurrences migrated to:     https://www.oracle.com/technetwork/java/javase/downloads ([https](https://www.oracle.com/technetwork/java/javase/downloads) result 301). * [ ] http://www.sf.net/home.view?siteLanguage=nl with 1 occurrences migrated to:     https://www.sf.net/home.view?siteLanguage=nl ([https](https://www.sf.net/home.view?siteLanguage=nl) result 301). * [ ] http://www.springframework.org with 7 occurrences migrated to:     https://www.springframework.org ([https](https://www.springframework.org) result 301). * [ ] http://www.springframework.org/ with 3 occurrences migrated to:     https://www.springframework.org/ ([https](https://www.springframework.org/) result 301). * [ ] http://www.whatwg.org/specs/web-apps/current-work/multipage/offline.html with 1 occurrences migrated to:     https://www.whatwg.org/specs/web-apps/current-work/multipage/offline.html ([https](https://www.whatwg.org/specs/web-apps/current-work/multipage/offline.html) result 301). * [ ] http://commons.apache.org/codec/ with 1 occurrences migrated to:     https://commons.apache.org/codec/ ([https](https://commons.apache.org/codec/) result 302). * [ ] http://download.oracle.com/javaee/6/api/javax/inject/Scope.html with 1 occurrences migrated to:     https://download.oracle.com/javaee/6/api/javax/inject/Scope.html ([https](https://download.oracle.com/javaee/6/api/javax/inject/Scope.html) result 302). * [ ] http://download.oracle.com/javase/1.5.0/docs/api/java/lang/System.html with 4 occurrences migrated to:     https://download.oracle.com/javase/1.5.0/docs/api/java/lang/System.html ([https](https://download.oracle.com/javase/1.5.0/docs/api/java/lang/System.html) result 302). * [ ] http://download.oracle.com/javase/6/docs/api/java/beans/ConstructorProperties.html with 1 occurrences migrated to:     https://download.oracle.com/javase/6/docs/api/java/beans/ConstructorProperties.html ([https](https://download.oracle.com/javase/6/docs/api/java/beans/ConstructorProperties.html) result 302). * [ ] http://download.oracle.com/javase/6/docs/technotes/guides/jar/jar.html with 1 occurrences migrated to:     https://download.oracle.com/javase/6/docs/technotes/guides/jar/jar.html ([https](https://download.oracle.com/javase/6/docs/technotes/guides/jar/jar.html) result 302). * [ ] http://download.oracle.com/javase/jndi/tutorial/beyond/misc/policy.html with 1 occurrences migrated to:     https://download.oracle.com/javase/jndi/tutorial/beyond/misc/policy.html ([https](https://download.oracle.com/javase/jndi/tutorial/beyond/misc/policy.html) result 302). * [ ] http://gafter.blogspot.nl/2006/12/super-type-tokens.html with 1 occurrences migrated to:     https://gafter.blogspot.nl/2006/12/super-type-tokens.html ([https](https://gafter.blogspot.nl/2006/12/super-type-tokens.html) result 302). * [ ] http://git-scm.com/book/en/Distributed-Git-Contributing-to-a-Project with 1 occurrences migrated to:     https://git-scm.com/book/en/Distributed-Git-Contributing-to-a-Project ([https](https://git-scm.com/book/en/Distributed-Git-Contributing-to-a-Project) result 302). * [ ] http://git-scm.com/book/en/Git-Tools-Rewriting-History with 1 occurrences migrated to:     https://git-scm.com/book/en/Git-Tools-Rewriting-History ([https](https://git-scm.com/book/en/Git-Tools-Rewriting-History) result 302). * [ ] http://glassfish.dev.java.net/ with 1 occurrences migrated to:     https://glassfish.dev.java.net/ ([https](https://glassfish.dev.java.net/) result 302). * [ ] http://java.sun.com with 3 occurrences migrated to:     https://java.sun.com ([https](https://java.sun.com) result 302). * [ ] http://java.sun.com/docs/books/jls/third_edition/html/conversions.html with 1 occurrences migrated to:     https://java.sun.com/docs/books/jls/third_edition/html/conversions.html ([https](https://java.sun.com/docs/books/jls/third_edition/html/conversions.html) result 302). * [ ] http://java.sun.com/docs/books/jls/third_edition/html/expressions.html with 1 occurrences migrated to:     https://java.sun.com/docs/books/jls/third_edition/html/expressions.html ([https](https://java.sun.com/docs/books/jls/third_edition/html/expressions.html) result 302). * [ ] http://java.sun.com/j2se/ with 2 occurrences migrated to:     https://java.sun.com/j2se/ ([https](https://java.sun.com/j2se/) result 302). * [ ] http://java.sun.com/j2se/1.4.1/docs/tooldocs/solaris/javadoc.html with 1 occurrences migrated to:     https://java.sun.com/j2se/1.4.1/docs/tooldocs/solaris/javadoc.html ([https](https://java.sun.com/j2se/1.4.1/docs/tooldocs/solaris/javadoc.html) result 302). * [ ] http://java.sun.com/j2se/1.4.2/docs/api/java/text/SimpleDateFormat.html with 1 occurrences migrated to:     https://java.sun.com/j2se/1.4.2/docs/api/java/text/SimpleDateFormat.html ([https](https://java.sun.com/j2se/1.4.2/docs/api/java/text/SimpleDateFormat.html) result 302). * [ ] http://java.sun.com/j2se/javadoc with 1 occurrences migrated to:     https://java.sun.com/j2se/javadoc ([https](https://java.sun.com/j2se/javadoc) result 302). * [ ] http://java.sun.com/j2se/javadoc/ with 1 occurrences migrated to:     https://java.sun.com/j2se/javadoc/ ([https](https://java.sun.com/j2se/javadoc/) result 302). * [ ] http://java.sun.com/j2se/javadoc/faq.html with 1 occurrences migrated to:     https://java.sun.com/j2se/javadoc/faq.html ([https](https://java.sun.com/j2se/javadoc/faq.html) result 302). * [ ] http://java.sun.com/webservices/jaxb/ with 1 occurrences migrated to:     https://java.sun.com/webservices/jaxb/ ([https](https://java.sun.com/webservices/jaxb/) result 302). * [ ] http://java.sun.com/xml/ns/j2ee/connector_1_5.xsd with 1 occurrences migrated to:     https://java.sun.com/xml/ns/j2ee/connector_1_5.xsd ([https](https://java.sun.com/xml/ns/j2ee/connector_1_5.xsd) result 302). * [ ] http://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd with 2 occurrences migrated to:     https://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd ([https](https://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd) result 302). * [ ] http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd with 4 occurrences migrated to:     https://java.sun.com/xml/ns/javaee/web-app_3_0.xsd ([https](https://java.sun.com/xml/ns/javaee/web-app_3_0.xsd) result 302). * [ ] http://repo.spring.io/milestone/org/springframework/spring with 1 occurrences migrated to:     https://repo.spring.io/milestone/org/springframework/spring ([https](https://repo.spring.io/milestone/org/springframework/spring) result 302). * [ ] http://repo.spring.io/release with 1 occurrences migrated to:     https://repo.spring.io/release ([https](https://repo.spring.io/release) result 302). * [ ] http://repo.spring.io/release/org/springframework/spring with 1 occurrences migrated to:     https://repo.spring.io/release/org/springframework/spring ([https](https://repo.spring.io/release/org/springframework/spring) result 302). * [ ] http://repo.spring.io/snapshot/org/springframework/spring with 1 occurrences migrated to:     https://repo.spring.io/snapshot/org/springframework/spring ([https](https://repo.spring.io/snapshot/org/springframework/spring) result 302). * [ ] http://sourceforge.net/projects/cglib/files/cglib3/3.0/cglib-3.0.jar/download with 1 occurrences migrated to:     https://sourceforge.net/projects/cglib/files/cglib3/3.0/cglib-3.0.jar/download ([https](https://sourceforge.net/projects/cglib/files/cglib3/3.0/cglib-3.0.jar/download) result 302). * [ ] http://www.iana.org/assignments/http-status-codes with 1 occurrences migrated to:     https://www.iana.org/assignments/http-status-codes ([https](https://www.iana.org/assignments/http-status-codes) result 302). * [ ] http://www.springsource.org/download with 1 occurrences migrated to:     https://www.springsource.org/download ([https](https://www.springsource.org/download) result 302). * [ ] http://www.sys-con.com/java with 1 occurrences migrated to:     https://www.sys-con.com/java ([https](https://www.sys-con.com/java) result 302).  # Ignored These URLs were intentionally ignored.  * http://Additional-namespace-name-URI with 1 occurrences * http://Default-namespace-name-URI with 1 occurrences * http://HOST:8080/remoting/AccountService with 1 occurrences * http://Namespace-name-URI with 1 occurrences * http://Unbound-namespace-name-URI with 1 occurrences * http://anotherHost/mvc-showcase with 1 occurrences * http://apache.org/xml/features/disallow-doctype-decl with 14 occurrences * http://barfoo:8888 with 1 occurrences * http://example/ with 1 occurrences * http://fake-service with 7 occurrences * http://foobar:8088 with 1 occurrences * http://host:port/myApp/myEndpoint/ with 1 occurrences * http://java.sun.com/jsp/jstl/core with 1 occurrences * http://java.sun.com/xml/jaxp/properties/schemaLanguage with 1 occurrences * http://java.sun.com/xml/ns/j2ee with 6 occurrences * http://java.sun.com/xml/ns/javaee with 8 occurrences * http://java.sun.com/xml/ns/persistence with 1 occurrences * http://java.sun.com/xml/stream/properties/report-cdata-event with 1 occurrences * http://jaxws.remoting.springframework.org/ with 4 occurrences * http://localhost with 13 occurrences * http://localhost/ with 6 occurrences * http://localhost/42 with 1 occurrences * http://localhost/abc with 1 occurrences * http://localhost/abc/def with 1 occurrences * http://localhost/content with 1 occurrences * http://localhost/content.atom with 1 occurrences * http://localhost/context/a with 3 occurrences * http://localhost/contextPath/main/path with 1 occurrences * http://localhost/foo/bar with 2 occurrences * http://localhost/forward with 1 occurrences * http://localhost/input with 1 occurrences * http://localhost/jquery-1.11.0.min.js with 5 occurrences * http://localhost/messages/form with 1 occurrences * http://localhost/mvc-showcase with 1 occurrences * http://localhost/mvc-showcase/app with 1 occurrences * http://localhost/mvc-showcase/data/foo%20bar with 1 occurrences * http://localhost/mvc-showcase/data/param with 1 occurrences * http://localhost/mvc-showcase/data/param?foo=123 with 2 occurrences * http://localhost/myapp/main with 1 occurrences * http://localhost/myapp/people/1/addresses/DE with 1 occurrences * http://localhost/persons with 1 occurrences * http://localhost/prefix/mvc-showcase with 1 occurrences * http://localhost/prefix/mvc-showcase/app with 1 occurrences * http://localhost/query= with 1 occurrences * http://localhost/query=foo@bar with 1 occurrences * http://localhost/registration.html with 1 occurrences * http://localhost/rest/books/6/pages/1.json with 1 occurrences * http://localhost/something/1/foo with 1 occurrences * http://localhost/test with 4 occurrences * http://localhost/test/this with 2 occurrences * http://localhost:7070/example/adminhandle.vm with 1 occurrences * http://localhost:7070/example/bingo.html with 1 occurrences * http://localhost:80/jquery-1.11.0.min.js with 1 occurrences * http://localhost:8080 with 28 occurrences * http://localhost:8080/ with 4 occurrences * http://localhost:8080/OrderService with 3 occurrences * http://localhost:8080/context with 1 occurrences * http://localhost:8080/context/myapiresource with 1 occurrences * http://localhost:8080/gamecast/admin/index.html with 1 occurrences * http://localhost:8080/gamecast/display.html with 1 occurrences * http://localhost:8080/gamecast/displayShoppingCart.html with 1 occurrences * http://localhost:8080/jquery-1.11.0.min.js with 1 occurrences * http://localhost:8080/mvc-showcase with 1 occurrences * http://localhost:8080/myapiresource with 1 occurrences * http://localhost:8080/myapp/js/sockjs-client.js with 1 occurrences * http://localhost:8080/path with 1 occurrences * http://localhost:8080/people with 2 occurrences * http://localhost:8080/test/ with 2 occurrences * http://localhost:8888/AccountServiceEndpoint?WSDL with 1 occurrences * http://localhost:9090 with 18 occurrences * http://localhost:9090/jquery-1.11.0.min.js with 2 occurrences * http://localhost:9990/mail/messages/form with 1 occurrences * http://localhost:9999/ with 1 occurrences * http://localhost:9999/OrderService?wsdl with 4 occurrences * http://localhosta/testbean with 6 occurrences * http://myserver with 1 occurrences * http://myurl with 12 occurrences * http://remotehost:8080/remoting/AccountService with 2 occurrences * http://samples.springframework.org/flight with 42 occurrences * http://somethingDifferent with 1 occurrences * http://springframework.org/spring-ws with 17 occurrences * http://testng.org/ with 1 occurrences * http://tiles.apache.org/tags-tiles with 1 occurrences * http://www with 1 occurrences * http://www.foo.com/schema/component with 6 occurrences * http://www.mycompany.com/schema/myns with 4 occurrences * http://www.springframework.org/schema/aop with 50 occurrences * http://www.springframework.org/schema/beans with 320 occurrences * http://www.springframework.org/schema/beans/test with 2 occurrences * http://www.springframework.org/schema/c with 1 occurrences * http://www.springframework.org/schema/cache with 13 occurrences * http://www.springframework.org/schema/context with 42 occurrences * http://www.springframework.org/schema/jdbc with 16 occurrences * http://www.springframework.org/schema/jee with 22 occurrences * http://www.springframework.org/schema/jms with 17 occurrences * http://www.springframework.org/schema/lang with 24 occurrences * http://www.springframework.org/schema/mvc with 20 occurrences * http://www.springframework.org/schema/oxm with 14 occurrences * http://www.springframework.org/schema/p with 5 occurrences * http://www.springframework.org/schema/task with 12 occurrences * http://www.springframework.org/schema/tool with 178 occurrences * http://www.springframework.org/schema/tx with 37 occurrences * http://www.springframework.org/schema/tx/spring-tx.xsd__ with 1 occurrences * http://www.springframework.org/schema/util with 22 occurrences * http://www.springframework.org/schema/websocket with 28 occurrences * http://www.springframework.org/spring-ws with 1 occurrences * http://www.springframework.org/tags with 4 occurrences * http://www.springframework.org/tags/form with 2 occurrences * http://www.w3.org/1999/XSL/Transform with 8 occurrences * http://www.w3.org/2001/XMLSchema with 111 occurrences * http://www.w3.org/2001/XMLSchema-instance with 92 occurrences * http://www.w3.org/2005/Atom with 4 occurrences * http://www.w3.org/TR/html4/charset.html with 5 occurrences * http://www.w3.org/TR/html4/sgml/entities.html with 14 occurrences * http://www.w3.org/XML/1998/namespace with 19 occurrences * http://xml.org/sax/features/ with 4 occurrences * http://xml.org/sax/features/external-general-entities with 14 occurrences * http://xml.org/sax/features/is-standalone with 1 occurrences * http://xml.org/sax/features/namespace-prefixes with 13 occurrences * http://xml.org/sax/features/namespaces with 12 occurrences * http://xml.org/sax/features/namespaces-prefixes with 1 occurrences * http://xml.org/sax/properties/lexical-handler with 13 occurrences","closed","type: task,","spring-operator","2019-03-26T09:22:18Z","2019-03-29T17:15:39Z"
"","22635","URL Cleanup","This commit updates URLs to prefer the https protocol. Redirects are not followed to avoid accidentally expanding intentionally shortened URLs (i.e. if using a URL shortener).  # Fixed URLs  ## Fixed Success  These URLs were switched to an https URL with a 2xx status. While the status was successful, your review is still recommended.  * [x] http://www.apache.org/licenses/ with 1 occurrences migrated to:     https://www.apache.org/licenses/ ([https](https://www.apache.org/licenses/) result 200). * [x] http://www.apache.org/licenses/LICENSE-2.0 with 6625 occurrences migrated to:     https://www.apache.org/licenses/LICENSE-2.0 ([https](https://www.apache.org/licenses/LICENSE-2.0) result 200).","closed","type: task,","spring-operator","2019-03-21T19:59:16Z","2019-03-23T12:42:26Z"
"","22634","URL Cleanup","This commit updates URLs to prefer the https protocol. Redirects are not followed to avoid accidentally expanding intentionally shortened URLs (i.e. if using a URL shortener).  # Fixed URLs  ## Fixed Success  These URLs were switched to an https URL with a 2xx status. While the status was successful, your review is still recommended.  * [x] http://www.apache.org/licenses/ with 1 occurrences migrated to:     https://www.apache.org/licenses/ ([https](https://www.apache.org/licenses/) result 200). * [x] http://www.apache.org/licenses/LICENSE-2.0 with 6515 occurrences migrated to:     https://www.apache.org/licenses/LICENSE-2.0 ([https](https://www.apache.org/licenses/LICENSE-2.0) result 200).","closed","type: task,","spring-operator","2019-03-21T19:57:34Z","2019-03-23T14:45:16Z"
"","22633","URL Cleanup","This commit updates URLs to prefer the https protocol. Redirects are not followed to avoid accidentally expanding intentionally shortened URLs (i.e. if using a URL shortener).  # Fixed URLs  ## Fixed Success  These URLs were switched to an https URL with a 2xx status. While the status was successful, your review is still recommended.  * [x] http://www.apache.org/licenses/ with 1 occurrences migrated to:     https://www.apache.org/licenses/ ([https](https://www.apache.org/licenses/) result 200). * [x] http://www.apache.org/licenses/LICENSE-2.0 with 6410 occurrences migrated to:     https://www.apache.org/licenses/LICENSE-2.0 ([https](https://www.apache.org/licenses/LICENSE-2.0) result 200).","closed","type: task,","spring-operator","2019-03-21T19:56:33Z","2019-03-23T14:17:26Z"
"","22632","URL Cleanup","This commit updates URLs to prefer the https protocol. Redirects are not followed to avoid accidentally expanding intentionally shortened URLs (i.e. if using a URL shortener).  # Fixed URLs  ## Fixed Success  These URLs were switched to an https URL with a 2xx status. While the status was successful, your review is still recommended.  * [x] http://www.apache.org/licenses/ with 1 occurrences migrated to:     https://www.apache.org/licenses/ ([https](https://www.apache.org/licenses/) result 200). * [x] http://www.apache.org/licenses/LICENSE-2.0 with 5990 occurrences migrated to:     https://www.apache.org/licenses/LICENSE-2.0 ([https](https://www.apache.org/licenses/LICENSE-2.0) result 200).","closed","type: task,","spring-operator","2019-03-21T19:55:34Z","2019-03-23T14:07:21Z"
"","22631","URL Cleanup","This commit updates URLs to prefer the https protocol. Redirects are not followed to avoid accidentally expanding intentionally shortened URLs (i.e. if using a URL shortener).  # Fixed URLs  ## Fixed Success  These URLs were switched to an https URL with a 2xx status. While the status was successful, your review is still recommended.  * [x] http://www.apache.org/licenses/ with 1 occurrences migrated to:     https://www.apache.org/licenses/ ([https](https://www.apache.org/licenses/) result 200). * [x] http://www.apache.org/licenses/LICENSE-2.0 with 5808 occurrences migrated to:     https://www.apache.org/licenses/LICENSE-2.0 ([https](https://www.apache.org/licenses/LICENSE-2.0) result 200).","closed","type: task,","spring-operator","2019-03-21T19:54:40Z","2019-03-23T13:45:46Z"
"","22630","URL Cleanup","This commit updates URLs to prefer the https protocol. Redirects are not followed to avoid accidentally expanding intentionally shortened URLs (i.e. if using a URL shortener).  # Fixed URLs  ## Fixed Success  These URLs were switched to an https URL with a 2xx status. While the status was successful, your review is still recommended.  * [x] http://www.apache.org/licenses/ with 1 occurrences migrated to:     https://www.apache.org/licenses/ ([https](https://www.apache.org/licenses/) result 200). * [x] http://www.apache.org/licenses/LICENSE-2.0 with 4671 occurrences migrated to:     https://www.apache.org/licenses/LICENSE-2.0 ([https](https://www.apache.org/licenses/LICENSE-2.0) result 200).","closed","type: task,","spring-operator","2019-03-21T19:53:44Z","2019-03-23T13:14:57Z"
"","22681","URL Cleanup","This commit updates URLs to prefer the https protocol. Redirects are not followed to avoid accidentally expanding intentionally shortened URLs (i.e. if using a URL shortener).  # Fixed URLs  ## Fixed Success  These URLs were switched to an https URL with a 2xx status. While the status was successful, your review is still recommended.  * [x] http://spring.io/projects/spring-framework with 4 occurrences migrated to:     https://spring.io/projects/spring-framework ([https](https://spring.io/projects/spring-framework) result 200).","closed","type: task,","spring-operator","2019-03-26T09:25:25Z","2019-03-27T10:48:45Z"
"","22522","URL Cleanup","This commit updates URLs to prefer the https protocol. Redirects are not followed to avoid accidentally expanding intentionally shortened URLs (i.e. if using a URL shortener).  # Fixed URLs  ## Fixed But Review Recommended These URLs were fixed, but the https status was not OK. However, the https status was the same as the http request or http redirected to an https URL, so they were migrated. Your review is recommended.  * http://quartz-scheduler.org/api/2.2.1/ (301) migrated to:     https://www.quartz-scheduler.org/api/2.2.1/ ([https](https://quartz-scheduler.org/api/2.2.1/) result 404).  ## Fixed Success  These URLs were fixed successfully.  * http://docs.jboss.org/jbossas/javadoc/4.0.5/connector/ migrated to:     https://docs.jboss.org/jbossas/javadoc/4.0.5/connector/ ([https](https://docs.jboss.org/jbossas/javadoc/4.0.5/connector/) result 200). * http://docs.jboss.org/jbossas/javadoc/7.1.2.Final/ migrated to:     https://docs.jboss.org/jbossas/javadoc/7.1.2.Final/ ([https](https://docs.jboss.org/jbossas/javadoc/7.1.2.Final/) result 200). * http://docs.oracle.com/cd/E13222_01/wls/docs90/javadocs/ migrated to:     https://docs.oracle.com/cd/E13222_01/wls/docs90/javadocs/ ([https](https://docs.oracle.com/cd/E13222_01/wls/docs90/javadocs/) result 200). * http://docs.oracle.com/javaee/7/api/ migrated to:     https://docs.oracle.com/javaee/7/api/ ([https](https://docs.oracle.com/javaee/7/api/) result 200). * http://docs.oracle.com/javase/8/docs/api/ migrated to:     https://docs.oracle.com/javase/8/docs/api/ ([https](https://docs.oracle.com/javase/8/docs/api/) result 200). * http://fasterxml.github.io/jackson-core/javadoc/2.9/ migrated to:     https://fasterxml.github.io/jackson-core/javadoc/2.9/ ([https](https://fasterxml.github.io/jackson-core/javadoc/2.9/) result 200). * http://fasterxml.github.io/jackson-databind/javadoc/2.9/ migrated to:     https://fasterxml.github.io/jackson-databind/javadoc/2.9/ ([https](https://fasterxml.github.io/jackson-databind/javadoc/2.9/) result 200). * http://fasterxml.github.io/jackson-dataformat-xml/javadoc/2.9/ migrated to:     https://fasterxml.github.io/jackson-dataformat-xml/javadoc/2.9/ ([https](https://fasterxml.github.io/jackson-dataformat-xml/javadoc/2.9/) result 200). * http://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs/ migrated to:     https://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs/ ([https](https://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs/) result 200). * http://issues.gradle.org/browse/GRADLE-1116 migrated to:     https://issues.gradle.org/browse/GRADLE-1116 ([https](https://issues.gradle.org/browse/GRADLE-1116) result 200). * http://projectreactor.io/docs/core/release/api/ migrated to:     https://projectreactor.io/docs/core/release/api/ ([https](https://projectreactor.io/docs/core/release/api/) result 200). * http://tiles.apache.org/framework/apidocs/ migrated to:     https://tiles.apache.org/framework/apidocs/ ([https](https://tiles.apache.org/framework/apidocs/) result 200). * http://tiles.apache.org/tiles-request/apidocs/ migrated to:     https://tiles.apache.org/tiles-request/apidocs/ ([https](https://tiles.apache.org/tiles-request/apidocs/) result 200). * http://www.apache.org/licenses/LICENSE-2.0 migrated to:     https://www.apache.org/licenses/LICENSE-2.0 ([https](https://www.apache.org/licenses/LICENSE-2.0) result 200). * http://www.eclipse.org/aspectj/doc/released/aspectj5rt-api/ migrated to:     https://www.eclipse.org/aspectj/doc/released/aspectj5rt-api/ ([https](https://www.eclipse.org/aspectj/doc/released/aspectj5rt-api/) result 200). * http://www.reactive-streams.org/reactive-streams-1.0.1-javadoc/ migrated to:     https://www.reactive-streams.org/reactive-streams-1.0.1-javadoc/ ([https](https://www.reactive-streams.org/reactive-streams-1.0.1-javadoc/) result 200). * http://docs.spring.io/spring-framework/docs migrated to:     https://docs.spring.io/spring-framework/docs ([https](https://docs.spring.io/spring-framework/docs) result 301). * http://glassfish.java.net/nonav/docs/v3/api/ migrated to:     https://glassfish.java.net/nonav/docs/v3/api/ ([https](https://glassfish.java.net/nonav/docs/v3/api/) result 301). * http://pic.dhe.ibm.com/infocenter/wasinfo/v7r0/topic/com.ibm.websphere.javadoc.doc/web/apidocs/ migrated to:     https://pic.dhe.ibm.com/infocenter/wasinfo/v7r0/topic/com.ibm.websphere.javadoc.doc/web/apidocs/ ([https](https://pic.dhe.ibm.com/infocenter/wasinfo/v7r0/topic/com.ibm.websphere.javadoc.doc/web/apidocs/) result 301). * http://projects.spring.io/spring-framework migrated to:     https://projects.spring.io/spring-framework ([https](https://projects.spring.io/spring-framework) result 301). * http://springframework.org/schema migrated to:     https://springframework.org/schema ([https](https://springframework.org/schema) result 301). * http://ehcache.org/apidocs/2.10.4 (301) migrated to:     https://www.ehcache.org/apidocs/2.10.4 ([https](https://ehcache.org/apidocs/2.10.4) result 301).","closed","type: task,","spring-operator","2019-03-06T03:57:36Z","2019-03-12T17:44:51Z"
"","22523","URL Cleanup","This commit updates URLs to prefer the https protocol. Redirects are not followed to avoid accidentally expanding intentionally shortened URLs (i.e. if using a URL shortener).  # Fixed URLs  ## Fixed But Review Recommended These URLs were fixed, but the https status was not OK. However, the https status was the same as the http request or http redirected to an https URL, so they were migrated. Your review is recommended.  * http://quartz-scheduler.org/api/2.2.1/ (301) migrated to:     https://www.quartz-scheduler.org/api/2.2.1/ ([https](https://quartz-scheduler.org/api/2.2.1/) result 404).  ## Fixed Success  These URLs were fixed successfully.  * http://docs.jboss.org/jbossas/javadoc/4.0.5/connector/ migrated to:     https://docs.jboss.org/jbossas/javadoc/4.0.5/connector/ ([https](https://docs.jboss.org/jbossas/javadoc/4.0.5/connector/) result 200). * http://docs.jboss.org/jbossas/javadoc/7.1.2.Final/ migrated to:     https://docs.jboss.org/jbossas/javadoc/7.1.2.Final/ ([https](https://docs.jboss.org/jbossas/javadoc/7.1.2.Final/) result 200). * http://docs.oracle.com/cd/E13222_01/wls/docs90/javadocs/ migrated to:     https://docs.oracle.com/cd/E13222_01/wls/docs90/javadocs/ ([https](https://docs.oracle.com/cd/E13222_01/wls/docs90/javadocs/) result 200). * http://docs.oracle.com/javaee/7/api/ migrated to:     https://docs.oracle.com/javaee/7/api/ ([https](https://docs.oracle.com/javaee/7/api/) result 200). * http://docs.oracle.com/javase/8/docs/api/ migrated to:     https://docs.oracle.com/javase/8/docs/api/ ([https](https://docs.oracle.com/javase/8/docs/api/) result 200). * http://fasterxml.github.io/jackson-core/javadoc/2.8/ migrated to:     https://fasterxml.github.io/jackson-core/javadoc/2.8/ ([https](https://fasterxml.github.io/jackson-core/javadoc/2.8/) result 200). * http://fasterxml.github.io/jackson-databind/javadoc/2.8/ migrated to:     https://fasterxml.github.io/jackson-databind/javadoc/2.8/ ([https](https://fasterxml.github.io/jackson-databind/javadoc/2.8/) result 200). * http://fasterxml.github.io/jackson-dataformat-xml/javadoc/2.8/ migrated to:     https://fasterxml.github.io/jackson-dataformat-xml/javadoc/2.8/ ([https](https://fasterxml.github.io/jackson-dataformat-xml/javadoc/2.8/) result 200). * http://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs/ migrated to:     https://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs/ ([https](https://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs/) result 200). * http://issues.gradle.org/browse/GRADLE-1116 migrated to:     https://issues.gradle.org/browse/GRADLE-1116 ([https](https://issues.gradle.org/browse/GRADLE-1116) result 200). * http://projectreactor.io/docs/core/release/api/ migrated to:     https://projectreactor.io/docs/core/release/api/ ([https](https://projectreactor.io/docs/core/release/api/) result 200). * http://tiles.apache.org/framework/apidocs/ migrated to:     https://tiles.apache.org/framework/apidocs/ ([https](https://tiles.apache.org/framework/apidocs/) result 200). * http://tiles.apache.org/tiles-request/apidocs/ migrated to:     https://tiles.apache.org/tiles-request/apidocs/ ([https](https://tiles.apache.org/tiles-request/apidocs/) result 200). * http://www.apache.org/licenses/LICENSE-2.0 migrated to:     https://www.apache.org/licenses/LICENSE-2.0 ([https](https://www.apache.org/licenses/LICENSE-2.0) result 200). * http://www.eclipse.org/aspectj/doc/released/aspectj5rt-api/ migrated to:     https://www.eclipse.org/aspectj/doc/released/aspectj5rt-api/ ([https](https://www.eclipse.org/aspectj/doc/released/aspectj5rt-api/) result 200). * http://www.reactive-streams.org/reactive-streams-1.0.1-javadoc/ migrated to:     https://www.reactive-streams.org/reactive-streams-1.0.1-javadoc/ ([https](https://www.reactive-streams.org/reactive-streams-1.0.1-javadoc/) result 200). * http://docs.spring.io/spring-framework/docs migrated to:     https://docs.spring.io/spring-framework/docs ([https](https://docs.spring.io/spring-framework/docs) result 301). * http://glassfish.java.net/nonav/docs/v3/api/ migrated to:     https://glassfish.java.net/nonav/docs/v3/api/ ([https](https://glassfish.java.net/nonav/docs/v3/api/) result 301). * http://pic.dhe.ibm.com/infocenter/wasinfo/v7r0/topic/com.ibm.websphere.javadoc.doc/web/apidocs/ migrated to:     https://pic.dhe.ibm.com/infocenter/wasinfo/v7r0/topic/com.ibm.websphere.javadoc.doc/web/apidocs/ ([https](https://pic.dhe.ibm.com/infocenter/wasinfo/v7r0/topic/com.ibm.websphere.javadoc.doc/web/apidocs/) result 301). * http://projects.spring.io/spring-framework migrated to:     https://projects.spring.io/spring-framework ([https](https://projects.spring.io/spring-framework) result 301). * http://springframework.org/schema migrated to:     https://springframework.org/schema ([https](https://springframework.org/schema) result 301). * http://ehcache.org/apidocs/2.10.4 (301) migrated to:     https://www.ehcache.org/apidocs/2.10.4 ([https](https://ehcache.org/apidocs/2.10.4) result 301).","closed","","spring-operator","2019-03-06T03:57:51Z","2019-03-12T16:49:14Z"
"","22521","URL Cleanup","This commit updates URLs to prefer the https protocol. Redirects are not followed to avoid accidentally expanding intentionally shortened URLs (i.e. if using a URL shortener).  # Fixed URLs  ## Fixed But Review Recommended These URLs were fixed, but the https status was not OK. However, the https status was the same as the http request or http redirected to an https URL, so they were migrated. Your review is recommended.  * http://quartz-scheduler.org/api/2.2.1/ (301) migrated to:     https://www.quartz-scheduler.org/api/2.2.1/ ([https](https://quartz-scheduler.org/api/2.2.1/) result 404).  ## Fixed Success  These URLs were fixed successfully.  * http://dist.springsource.com/snapshot/STS/nightly-distributions.html migrated to:     https://dist.springsource.com/snapshot/STS/nightly-distributions.html ([https](https://dist.springsource.com/snapshot/STS/nightly-distributions.html) result 200). * http://docs.jboss.org/jbossas/javadoc/4.0.5/connector/ migrated to:     https://docs.jboss.org/jbossas/javadoc/4.0.5/connector/ ([https](https://docs.jboss.org/jbossas/javadoc/4.0.5/connector/) result 200). * http://docs.jboss.org/jbossas/javadoc/7.1.2.Final/ migrated to:     https://docs.jboss.org/jbossas/javadoc/7.1.2.Final/ ([https](https://docs.jboss.org/jbossas/javadoc/7.1.2.Final/) result 200). * http://docs.oracle.com/cd/E13222_01/wls/docs90/javadocs/ migrated to:     https://docs.oracle.com/cd/E13222_01/wls/docs90/javadocs/ ([https](https://docs.oracle.com/cd/E13222_01/wls/docs90/javadocs/) result 200). * http://docs.oracle.com/javaee/7/api/ migrated to:     https://docs.oracle.com/javaee/7/api/ ([https](https://docs.oracle.com/javaee/7/api/) result 200). * http://docs.oracle.com/javase/8/docs/api/ migrated to:     https://docs.oracle.com/javase/8/docs/api/ ([https](https://docs.oracle.com/javase/8/docs/api/) result 200). * http://fasterxml.github.io/jackson-core/javadoc/2.9/ migrated to:     https://fasterxml.github.io/jackson-core/javadoc/2.9/ ([https](https://fasterxml.github.io/jackson-core/javadoc/2.9/) result 200). * http://fasterxml.github.io/jackson-databind/javadoc/2.9/ migrated to:     https://fasterxml.github.io/jackson-databind/javadoc/2.9/ ([https](https://fasterxml.github.io/jackson-databind/javadoc/2.9/) result 200). * http://fasterxml.github.io/jackson-dataformat-xml/javadoc/2.9/ migrated to:     https://fasterxml.github.io/jackson-dataformat-xml/javadoc/2.9/ ([https](https://fasterxml.github.io/jackson-dataformat-xml/javadoc/2.9/) result 200). * http://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs/ migrated to:     https://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs/ ([https](https://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs/) result 200). * http://issues.gradle.org/browse/GRADLE-1116 migrated to:     https://issues.gradle.org/browse/GRADLE-1116 ([https](https://issues.gradle.org/browse/GRADLE-1116) result 200). * http://projectreactor.io/docs/core/release/api/ migrated to:     https://projectreactor.io/docs/core/release/api/ ([https](https://projectreactor.io/docs/core/release/api/) result 200). * http://tiles.apache.org/framework/apidocs/ migrated to:     https://tiles.apache.org/framework/apidocs/ ([https](https://tiles.apache.org/framework/apidocs/) result 200). * http://tiles.apache.org/tiles-request/apidocs/ migrated to:     https://tiles.apache.org/tiles-request/apidocs/ ([https](https://tiles.apache.org/tiles-request/apidocs/) result 200). * http://www.apache.org/licenses/LICENSE-2.0 migrated to:     https://www.apache.org/licenses/LICENSE-2.0 ([https](https://www.apache.org/licenses/LICENSE-2.0) result 200). * http://www.eclipse.org/ajdt/downloads/ migrated to:     https://www.eclipse.org/ajdt/downloads/ ([https](https://www.eclipse.org/ajdt/downloads/) result 200). * http://www.eclipse.org/aspectj/doc/released/aspectj5rt-api/ migrated to:     https://www.eclipse.org/aspectj/doc/released/aspectj5rt-api/ ([https](https://www.eclipse.org/aspectj/doc/released/aspectj5rt-api/) result 200). * http://www.reactive-streams.org/reactive-streams-1.0.1-javadoc/ migrated to:     https://www.reactive-streams.org/reactive-streams-1.0.1-javadoc/ ([https](https://www.reactive-streams.org/reactive-streams-1.0.1-javadoc/) result 200). * http://docs.spring.io/spring-framework/docs migrated to:     https://docs.spring.io/spring-framework/docs ([https](https://docs.spring.io/spring-framework/docs) result 301). * http://download.eclipse.org/eclipse/downloads migrated to:     https://download.eclipse.org/eclipse/downloads ([https](https://download.eclipse.org/eclipse/downloads) result 301). * http://glassfish.java.net/nonav/docs/v3/api/ migrated to:     https://glassfish.java.net/nonav/docs/v3/api/ ([https](https://glassfish.java.net/nonav/docs/v3/api/) result 301). * http://pic.dhe.ibm.com/infocenter/wasinfo/v7r0/topic/com.ibm.websphere.javadoc.doc/web/apidocs/ migrated to:     https://pic.dhe.ibm.com/infocenter/wasinfo/v7r0/topic/com.ibm.websphere.javadoc.doc/web/apidocs/ ([https](https://pic.dhe.ibm.com/infocenter/wasinfo/v7r0/topic/com.ibm.websphere.javadoc.doc/web/apidocs/) result 301). * http://projects.spring.io/spring-framework migrated to:     https://projects.spring.io/spring-framework ([https](https://projects.spring.io/spring-framework) result 301). * http://springframework.org/schema migrated to:     https://springframework.org/schema ([https](https://springframework.org/schema) result 301). * http://ehcache.org/apidocs/2.10.4 (301) migrated to:     https://www.ehcache.org/apidocs/2.10.4 ([https](https://ehcache.org/apidocs/2.10.4) result 301). * http://spring.io/tools/sts/all migrated to:     https://spring.io/tools/sts/all ([https](https://spring.io/tools/sts/all) result 302).","closed","type: task,","spring-operator","2019-03-06T03:57:18Z","2019-03-12T16:20:29Z"
"","22524","URL Cleanup","This commit updates URLs to prefer the https protocol. Redirects are not followed to avoid accidentally expanding intentionally shortened URLs (i.e. if using a URL shortener).  # Fixed URLs  ## Fixed But Review Recommended These URLs were fixed, but the https status was not OK. However, the https status was the same as the http request or http redirected to an https URL, so they were migrated. Your review is recommended.  * http://quartz-scheduler.org/api/2.2.1/ (301) migrated to:     https://www.quartz-scheduler.org/api/2.2.1/ ([https](https://quartz-scheduler.org/api/2.2.1/) result 404).  ## Fixed Success  These URLs were fixed successfully.  * http://dist.springsource.com/snapshot/STS/nightly-distributions.html migrated to:     https://dist.springsource.com/snapshot/STS/nightly-distributions.html ([https](https://dist.springsource.com/snapshot/STS/nightly-distributions.html) result 200). * http://docs.jboss.org/jbossas/javadoc/4.0.5/connector/ migrated to:     https://docs.jboss.org/jbossas/javadoc/4.0.5/connector/ ([https](https://docs.jboss.org/jbossas/javadoc/4.0.5/connector/) result 200). * http://docs.jboss.org/jbossas/javadoc/7.1.2.Final/ migrated to:     https://docs.jboss.org/jbossas/javadoc/7.1.2.Final/ ([https](https://docs.jboss.org/jbossas/javadoc/7.1.2.Final/) result 200). * http://docs.oracle.com/cd/E13222_01/wls/docs90/javadocs/ migrated to:     https://docs.oracle.com/cd/E13222_01/wls/docs90/javadocs/ ([https](https://docs.oracle.com/cd/E13222_01/wls/docs90/javadocs/) result 200). * http://docs.oracle.com/javaee/7/api/ migrated to:     https://docs.oracle.com/javaee/7/api/ ([https](https://docs.oracle.com/javaee/7/api/) result 200). * http://docs.oracle.com/javase/8/docs/api/ migrated to:     https://docs.oracle.com/javase/8/docs/api/ ([https](https://docs.oracle.com/javase/8/docs/api/) result 200). * http://fasterxml.github.io/jackson-core/javadoc/2.8/ migrated to:     https://fasterxml.github.io/jackson-core/javadoc/2.8/ ([https](https://fasterxml.github.io/jackson-core/javadoc/2.8/) result 200). * http://fasterxml.github.io/jackson-databind/javadoc/2.8/ migrated to:     https://fasterxml.github.io/jackson-databind/javadoc/2.8/ ([https](https://fasterxml.github.io/jackson-databind/javadoc/2.8/) result 200). * http://fasterxml.github.io/jackson-dataformat-xml/javadoc/2.8/ migrated to:     https://fasterxml.github.io/jackson-dataformat-xml/javadoc/2.8/ ([https](https://fasterxml.github.io/jackson-dataformat-xml/javadoc/2.8/) result 200). * http://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs/ migrated to:     https://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs/ ([https](https://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs/) result 200). * http://issues.gradle.org/browse/GRADLE-1116 migrated to:     https://issues.gradle.org/browse/GRADLE-1116 ([https](https://issues.gradle.org/browse/GRADLE-1116) result 200). * http://tiles.apache.org/framework/apidocs/ migrated to:     https://tiles.apache.org/framework/apidocs/ ([https](https://tiles.apache.org/framework/apidocs/) result 200). * http://tiles.apache.org/tiles-request/apidocs/ migrated to:     https://tiles.apache.org/tiles-request/apidocs/ ([https](https://tiles.apache.org/tiles-request/apidocs/) result 200). * http://www.apache.org/licenses/LICENSE-2.0.txt migrated to:     https://www.apache.org/licenses/LICENSE-2.0.txt ([https](https://www.apache.org/licenses/LICENSE-2.0.txt) result 200). * http://www.eclipse.org/aspectj/doc/released/aspectj5rt-api/ migrated to:     https://www.eclipse.org/aspectj/doc/released/aspectj5rt-api/ ([https](https://www.eclipse.org/aspectj/doc/released/aspectj5rt-api/) result 200). * http://ehcache.org/apidocs/ (301) migrated to:     https://www.ehcache.org/apidocs/ ([https](https://ehcache.org/apidocs/) result 200). * http://static.springframework.org/spring-framework/docs (301) migrated to:     https://docs.spring.io/spring-framework/docs ([https](https://static.springframework.org/spring-framework/docs) result 301). * http://download.eclipse.org/eclipse/downloads migrated to:     https://download.eclipse.org/eclipse/downloads ([https](https://download.eclipse.org/eclipse/downloads) result 301). * http://glassfish.java.net/nonav/docs/v3/api/ migrated to:     https://glassfish.java.net/nonav/docs/v3/api/ ([https](https://glassfish.java.net/nonav/docs/v3/api/) result 301). * http://pic.dhe.ibm.com/infocenter/wasinfo/v7r0/topic/com.ibm.websphere.javadoc.doc/web/apidocs/ migrated to:     https://pic.dhe.ibm.com/infocenter/wasinfo/v7r0/topic/com.ibm.websphere.javadoc.doc/web/apidocs/ ([https](https://pic.dhe.ibm.com/infocenter/wasinfo/v7r0/topic/com.ibm.websphere.javadoc.doc/web/apidocs/) result 301). * http://projects.spring.io/spring-framework migrated to:     https://projects.spring.io/spring-framework ([https](https://projects.spring.io/spring-framework) result 301). * http://springframework.org/schema migrated to:     https://springframework.org/schema ([https](https://springframework.org/schema) result 301). * http://spring.io/tools/sts/all migrated to:     https://spring.io/tools/sts/all ([https](https://spring.io/tools/sts/all) result 302).","closed","","spring-operator","2019-03-06T03:58:14Z","2019-03-06T14:44:36Z"
"","22520","URL Cleanup","This commit updates URLs to prefer the https protocol. Redirects are not followed to avoid accidentally expanding intentionally shortened URLs (i.e. if using a URL shortener).  # Fixed URLs  ## Fixed But Review Recommended These URLs were fixed, but the https status was not OK. However, the https status was the same as the http request or http redirected to an https URL, so they were migrated. Your review is recommended.  * http://quartz-scheduler.org/api/2.2.1/ (301) migrated to:     https://www.quartz-scheduler.org/api/2.2.1/ ([https](https://quartz-scheduler.org/api/2.2.1/) result 404).  ## Fixed Success  These URLs were fixed successfully.  * http://commons.apache.org/proper/commons-codec/apidocs/ migrated to:     https://commons.apache.org/proper/commons-codec/apidocs/ ([https](https://commons.apache.org/proper/commons-codec/apidocs/) result 200). * http://commons.apache.org/proper/commons-dbcp/apidocs/ migrated to:     https://commons.apache.org/proper/commons-dbcp/apidocs/ ([https](https://commons.apache.org/proper/commons-dbcp/apidocs/) result 200). * http://commons.apache.org/proper/commons-lang/javadocs/api-2.5/ migrated to:     https://commons.apache.org/proper/commons-lang/javadocs/api-2.5/ ([https](https://commons.apache.org/proper/commons-lang/javadocs/api-2.5/) result 200). * http://dist.springsource.com/snapshot/STS/nightly-distributions.html migrated to:     https://dist.springsource.com/snapshot/STS/nightly-distributions.html ([https](https://dist.springsource.com/snapshot/STS/nightly-distributions.html) result 200). * http://docs.jboss.org/jbossas/javadoc/4.0.5/connector/ migrated to:     https://docs.jboss.org/jbossas/javadoc/4.0.5/connector/ ([https](https://docs.jboss.org/jbossas/javadoc/4.0.5/connector/) result 200). * http://docs.jboss.org/jbossas/javadoc/7.1.2.Final/ migrated to:     https://docs.jboss.org/jbossas/javadoc/7.1.2.Final/ ([https](https://docs.jboss.org/jbossas/javadoc/7.1.2.Final/) result 200). * http://docs.oracle.com/cd/E13222_01/wls/docs90/javadocs/ migrated to:     https://docs.oracle.com/cd/E13222_01/wls/docs90/javadocs/ ([https](https://docs.oracle.com/cd/E13222_01/wls/docs90/javadocs/) result 200). * http://docs.oracle.com/javaee/7/api/ migrated to:     https://docs.oracle.com/javaee/7/api/ ([https](https://docs.oracle.com/javaee/7/api/) result 200). * http://docs.oracle.com/javase/8/docs/api/ migrated to:     https://docs.oracle.com/javase/8/docs/api/ ([https](https://docs.oracle.com/javase/8/docs/api/) result 200). * http://fasterxml.github.io/jackson-core/javadoc/2.8/ migrated to:     https://fasterxml.github.io/jackson-core/javadoc/2.8/ ([https](https://fasterxml.github.io/jackson-core/javadoc/2.8/) result 200). * http://fasterxml.github.io/jackson-databind/javadoc/2.8/ migrated to:     https://fasterxml.github.io/jackson-databind/javadoc/2.8/ ([https](https://fasterxml.github.io/jackson-databind/javadoc/2.8/) result 200). * http://fasterxml.github.io/jackson-dataformat-xml/javadoc/2.8/ migrated to:     https://fasterxml.github.io/jackson-dataformat-xml/javadoc/2.8/ ([https](https://fasterxml.github.io/jackson-dataformat-xml/javadoc/2.8/) result 200). * http://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs/ migrated to:     https://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs/ ([https](https://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs/) result 200). * http://issues.gradle.org/browse/GRADLE-1116 migrated to:     https://issues.gradle.org/browse/GRADLE-1116 ([https](https://issues.gradle.org/browse/GRADLE-1116) result 200). * http://portals.apache.org/pluto/portlet-2.0-apidocs/ migrated to:     https://portals.apache.org/pluto/portlet-2.0-apidocs/ ([https](https://portals.apache.org/pluto/portlet-2.0-apidocs/) result 200). * http://tiles.apache.org/framework/apidocs/ migrated to:     https://tiles.apache.org/framework/apidocs/ ([https](https://tiles.apache.org/framework/apidocs/) result 200). * http://tiles.apache.org/tiles-request/apidocs/ migrated to:     https://tiles.apache.org/tiles-request/apidocs/ ([https](https://tiles.apache.org/tiles-request/apidocs/) result 200). * http://www.apache.org/licenses/LICENSE-2.0 migrated to:     https://www.apache.org/licenses/LICENSE-2.0 ([https](https://www.apache.org/licenses/LICENSE-2.0) result 200). * http://www.eclipse.org/aspectj/doc/released/aspectj5rt-api/ migrated to:     https://www.eclipse.org/aspectj/doc/released/aspectj5rt-api/ ([https](https://www.eclipse.org/aspectj/doc/released/aspectj5rt-api/) result 200). * http://ehcache.org/apidocs/ (301) migrated to:     https://www.ehcache.org/apidocs/ ([https](https://ehcache.org/apidocs/) result 200). * http://static.springframework.org/spring-framework/docs (301) migrated to:     https://docs.spring.io/spring-framework/docs ([https](https://static.springframework.org/spring-framework/docs) result 301). * http://download.eclipse.org/eclipse/downloads migrated to:     https://download.eclipse.org/eclipse/downloads ([https](https://download.eclipse.org/eclipse/downloads) result 301). * http://glassfish.java.net/nonav/docs/v3/api/ migrated to:     https://glassfish.java.net/nonav/docs/v3/api/ ([https](https://glassfish.java.net/nonav/docs/v3/api/) result 301). * http://pic.dhe.ibm.com/infocenter/wasinfo/v7r0/topic/com.ibm.websphere.javadoc.doc/web/apidocs/ migrated to:     https://pic.dhe.ibm.com/infocenter/wasinfo/v7r0/topic/com.ibm.websphere.javadoc.doc/web/apidocs/ ([https](https://pic.dhe.ibm.com/infocenter/wasinfo/v7r0/topic/com.ibm.websphere.javadoc.doc/web/apidocs/) result 301). * http://projects.spring.io/spring-framework migrated to:     https://projects.spring.io/spring-framework ([https](https://projects.spring.io/spring-framework) result 301). * http://springframework.org/schema migrated to:     https://springframework.org/schema ([https](https://springframework.org/schema) result 301). * http://spring.io/tools/sts/all migrated to:     https://spring.io/tools/sts/all ([https](https://spring.io/tools/sts/all) result 302).","closed","type: task,","spring-operator","2019-03-06T03:56:53Z","2019-03-12T16:00:15Z"
"","22596","Avoid calling other bean methods in web config","This commit changes the main configuration classes for Spring MVC and Spring WebFlux to not call other bean methods when setting up the web infrastructure. This allows the `DelegatingWebFluxConfiguration` and `DelegatingWebMvcConfiguration` to opt-in the lite-mode, as introduced in gh-22461.","closed","type: enhancement,","bclozel","2019-03-14T17:59:47Z","2019-04-03T09:26:52Z"
"","22646","Add reactive transaction support SPI","This commit adds SPI interfaces to support reactive transactions through spring-tx with optional dependencies to Project Reactor and supportive implementations for TransactionalOperator and AbstractReactiveTransactionManager.  See #22590 for more background. The implementation is mainly inspired by `spring-tx` leveraging Reactor's Subscriber Context.","closed","type: enhancement,","mp911de","2019-03-23T14:15:12Z","2019-05-03T14:37:43Z"
"","22655","AnnotationsScanner throws NPE due to because AnnotatedElement proxy is not cloning arrays","This affects 5.2.0BUILD-SNAPSHOT, specifically 5.2.0-BUILD-20190325.085048  Spring Data JDBC integration tests started failing with the stack trace below.  The reason is that this line: https://github.com/spring-projects/spring-framework/blob/master/spring-core/src/main/java/org/springframework/core/annotation/AnnotationsScanner.java#L448  throws an NPE because the array `annotations` contains a null element.  The issue can be reproduced by running `mvn clean install` on [master of spring-data-jdbc](https://github.com/spring-projects/spring-data-jdbc). Sorry, couldn't pin the issue down more precisely so far.  CI builds show that it worked last Friday. (20190322...)  ``` java.lang.IllegalStateException: Failed to load ApplicationContext 	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125) 	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108) 	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118) 	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83) 	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244) 	at org.springframework.test.context.junit4.statements.RunPrepareTestInstanceCallbacks.evaluate(RunPrepareTestInstanceCallbacks.java:63) 	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84) 	at org.springframework.test.context.junit4.statements.SpringFailOnTimeout.evaluate(SpringFailOnTimeout.java:87) 	at org.springframework.test.context.junit4.statements.ProfileValueChecker.evaluate(ProfileValueChecker.java:103) 	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) 	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) 	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) 	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61) 	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70) 	at org.springframework.test.context.junit4.statements.ProfileValueChecker.evaluate(ProfileValueChecker.java:103) 	at org.springframework.test.context.junit4.rules.SpringClassRule$TestContextManagerCacheEvictor.evaluate(SpringClassRule.java:190) 	at org.junit.rules.RunRules.evaluate(RunRules.java:20) 	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) 	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) 	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) 	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) 	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) 	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jdbcRepositoryManipulateDbActionsIntegrationTests.DummyEntityRepository': Injection of autowired dependencies failed; nested exception is java.lang.NullPointerException 	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:391) 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1415) 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) 	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) 	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) 	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) 	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) 	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:840) 	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877) 	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549) 	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128) 	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60) 	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275) 	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243) 	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99) 	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117) 	... 27 common frames omitted Caused by: java.lang.NullPointerException: null 	at org.springframework.core.annotation.AnnotationsScanner.getDeclaredAnnotations(AnnotationsScanner.java:448) 	at org.springframework.core.annotation.AnnotationsScanner.getDeclaredAnnotations(AnnotationsScanner.java:421) 	at org.springframework.core.annotation.AnnotationsScanner.processElement(AnnotationsScanner.java:409) 	at org.springframework.core.annotation.AnnotationsScanner.process(AnnotationsScanner.java:111) 	at org.springframework.core.annotation.AnnotationsScanner.scan(AnnotationsScanner.java:96) 	at org.springframework.core.annotation.AnnotationsScanner.scan(AnnotationsScanner.java:77) 	at org.springframework.core.annotation.TypeMappedAnnotations.scan(TypeMappedAnnotations.java:246) 	at org.springframework.core.annotation.TypeMappedAnnotations.get(TypeMappedAnnotations.java:148) 	at org.springframework.core.annotation.AnnotatedElementUtils.getMergedAnnotationAttributes(AnnotatedElementUtils.java:258) 	at org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver.findValue(QualifierAnnotationAutowireCandidateResolver.java:366) 	at org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver.getSuggestedValue(QualifierAnnotationAutowireCandidateResolver.java:354) 	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1195) 	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1177) 	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:697) 	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:116) 	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:385) 	... 43 common frames omitted  ```","closed","in: core,","schauder","2019-03-25T13:20:33Z","2019-03-26T08:44:32Z"
"","2070","Add a link to Kotlin Sample w/ Spring Cloud GCP","This add a Kotlin Spring Boot sample demonstrating integrations with Google Cloud Platform.  Hi, just to clarify - I work with the [Spring Cloud GCP](https://github.com/spring-cloud/spring-cloud-gcp) team at Google; we work with Pivotal to build integrations for Spring and Google Cloud. This PR is just to add a plug to a Kotlin sample application that integrates with Google Cloud. Not sure if this example fits within your docs but figured it s worth a shot.  cc/ @meltsufin","closed","type: documentation,","dzou","2019-01-03T20:30:00Z","2021-04-27T11:31:28Z"
"","22258","Use Method in CglibAopProxy.fixedInterceptorMap instead of String returned from Method::toString","There's no need to use Method's String representation as key in `HashMap` when we can use Method itself saving memory on map population and `Map::get` calls.","closed","type: enhancement,","stsypanov","2019-01-15T09:59:28Z","2019-04-10T13:33:34Z"
"","22420","Minimise need to iterate over a class's methods","There are a number of places where Framework iterates over a class's methods. This issue is intended to identify the places where the iteration is unnecessary and can be eliminated. `ReflectionUtils` keeps a per-Class cache of declared methods. To provide any significant benefit it will be necessary to eliminate all calls to `ReflectionUtils` for a particular class. It's not yet known if this is possible.  `AbstractAutowireCapableBeanFactory.determineTargetType` uses the bean definition's `targetType` to short-circuit type determination. When a bean is defined by `ConfigurationClassBeanDefinitionReader` processing a `@Bean` method, this type information is available but it is not used. If the metadata for the `@Bean` method is `StandardMethodMetadata`, the target type of the definition is available from the introspected method's return type. Otherwise, the name of the target type is available from `MethodMetadata.getReturnTypeName()`. It appears to be possible for this type name to be stored in the definition and then be used to load the named class when `getTargetType()` is invoked.  When processing a `ConfigurationClassBeanDefinition`, `ConstructorResolver.instantiateUsingFactoryMethod` calls `ReflectionUtils.getAllDeclaredMethods` to find the `Method` for the `@Bean` method for which the bean definition was created. When the definition was created from `StandardMethodMetadata`, I think this method will already have been available and could, perhaps, have been stored in the definition's `resolvedConstructorOrFactoryMethod` field. For ASM-based metadata, the method's name is available and, with some changes to the metadata, it looks like its parameter types could be too. This may then allow the method to be identified directly without the need to iterate over all methods.","closed","type: enhancement,","wilkinsona","2019-02-15T15:20:55Z","2019-03-14T16:12:48Z"
"","22739","spring-beans-4.3.xsd and spring-utils-4.3.xsd schemaLocation change from http to https: is inconsistent with META-INF/spring.schemas","The XSD files spring-util-4.3.xsd and spring-context-4.3.xsd in the 4.3.23 release changed the schemaLocation for the xsd:import lines so now they refer to https URLs. in schemaLocation.  	 	   However the spring.schemas files in the spring-beans and spring-context jars do not contain entries for https urls, and MyEclipse Spring Editor (which is an extended version of Spring Tool Suite) now chokes on the XML context configuration files which were working fine with Spring 4.3.22 with various errors (cvc-elt.1, cvc-complex-type.2.4.c, Referenced file contains errors (http://..../spring-context-4.3.xsd...) and Referenced file contains errors (http://..../spring-utils-4.3.xsd...).  There are possible other XSD files pulling in other XSDs with a changed https location, I only encountered these two in my code, yet.","closed","","robvarga","2019-04-04T15:22:14Z","2021-01-08T13:09:29Z"
"","2071","SPR-8335: fixed default-lazy-init processing when xsd validation is disabled","The xml parser does not fill in defaults provided in the xsd when validation is disabled.   As a result, attributes like default-lazy-init will not receive the value ""default"" but an empty string value. This also applies for other default attributes in the root or parent elements.  The BeanDefinitionParserDelegate did not take this into account. So, we should also check on an empty string value, which is semantically the same as the value ""default"".  Issues: SPR-8335","closed","","MichelSchudel","2019-01-06T21:46:04Z","2019-01-08T14:41:34Z"
"","1998","5.0.x","the wrong log method call","closed","","severloh","2018-10-25T11:29:25Z","2018-10-25T11:30:16Z"
"","22390","Documentation for CORS incorrect for WebFlux functional endpoints","The WebFlux documentation should reflect that using the global configuration  (as described in https://docs.spring.io/spring/docs/current/spring-framework-reference/web-reactive.html#webflux-cors-global) does not work for functional endpoints and that the `WebFilter` approach should then be used.","closed","status: invalid,","lievendoclo","2019-02-08T11:23:39Z","2019-04-04T00:14:15Z"
"","22508","My spring websocket application deployed on weblogic server has a problem.","The spring websocket version is 4.3.17 and weblogic server version is 12.2.1.3 . When weblogic server started Exceptions were occurred. I read this java doc in spring-websocket source file ""AbstractTyrusRequestUpgradeStrategy.java"" ``` /**  * A base class for {@code RequestUpgradeStrategy} implementations on top of  * JSR-356 based servers which include Tyrus as their WebSocket engine.  *  * Works with Tyrus 1.3.5 (WebLogic 12.1.3), Tyrus 1.7 (GlassFish 4.1.0),  * Tyrus 1.11 (WebLogic 12.2.1), and Tyrus 1.12 (GlassFish 4.1.1).  */ ``` The weblogic and spring-websocket version are correct. But my application did not work well. What is the problem? Can you help me?   [exception log] weblogic.application.ModuleException: java.lang.IllegalStateException: No compatible Tyrus version found 	at weblogic.application.internal.ExtensibleModuleWrapper.start(ExtensibleModuleWrapper.java:140) 	at weblogic.application.internal.flow.ModuleListenerInvoker.start(ModuleListenerInvoker.java:124) 	at weblogic.application.internal.flow.ModuleStateDriver$3.next(ModuleStateDriver.java:233) 	at weblogic.application.internal.flow.ModuleStateDriver$3.next(ModuleStateDriver.java:228) 	at weblogic.application.utils.StateMachineDriver.nextState(StateMachineDriver.java:45) 	Truncated. see log file for complete stacktrace Caused By: java.lang.IllegalStateException: No compatible Tyrus version found 	at org.springframework.web.socket.server.standard.AbstractTyrusRequestUpgradeStrategy$Tyrus17EndpointHelper.getEndpointConstructor(AbstractTyrusRequestUpgradeStrategy.java:223) 	at org.springframework.web.socket.server.standard.AbstractTyrusRequestUpgradeStrategy$Tyrus17EndpointHelper.(AbstractTyrusRequestUpgradeStrategy.java:201) 	at org.springframework.web.socket.server.standard.WebLogicRequestUpgradeStrategy.(WebLogicRequestUpgradeStrategy.java:55) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)","closed","for: stackoverflow,","whoana","2019-03-05T06:18:48Z","2019-03-05T06:30:39Z"
"","22461","Clarify configuration lite support and offer an opt-in option","The Spring Boot team has been investigating startup time improvements by not relying on the proxy capabilities of configuration classes. Turns out that not using that stuff (basically switching all auto-configurations and related imports to ""lite mode"") makes quite a difference https://github.com/spring-projects/spring-boot/issues/9068#issuecomment-461520814  I am not a big fan that we were looking for `@Bean` methods in any component, treating them in lite mode if they don't have the `@Configuration` stereotype. I was wondering if we would be open to revisit this in the 5.2 line.  Being able to opt-out from the proxy mode using the `@Configuration` stereotype would be ideal. We are not keen to remove `@Configuration` and use the lite mode as it stands as:  * That's not representative of what a good citizen of the framework should do (using the right stereotype) * We have an annotation processor that identifies configuration classes to extract conditions so that we can back off (without loading the ASM metadata or the class) when a static condition does not match (i.e. class not on the classpath)  Having a way to opt-out would be also a nice opportunity to clarify the behaviour and stop scanning components for bean factory methods.","closed","type: enhancement,","snicoll","2019-02-24T08:06:58Z","2019-03-12T16:07:08Z"
"","22382","Polish warning message","The second part of the warning message in the `TemporaryReplyChannel` is stuck to the colon making it hard to read: ``` [org.springframework.messaging.core.GenericMessagingTemplate$TemporaryReplyChannel] - Reply message received but the receiving thread has exited due to an exception while sending the request message:ErrorMessage [payload=org.springframework.integration.transformer.MessageTransformationException:  ```","closed","type: task,","artembilan","2019-02-07T19:56:23Z","2019-02-08T07:55:15Z"
"","2066","SPR-17606 @Profile mishandles ""not"" operand mixed with ""&""","The root cause of the [issue](https://jira.spring.io/browse/SPR-17606) was that single-element inversions (not operator, '!) were greedy and consumed the whole expression prior to inverting it.  This fix provides some contextual information to the parsing method about currently processed element and based on it, returns to previous parsing context.  During the investigation, it turned out that brackets work in similar way (greedy) and some fix was provided as well.","closed","","aleskiewicz","2019-01-01T11:21:06Z","2019-01-08T21:24:15Z"
"","22339","Improve spring-context-indexer documentation","The reference manual currently has the following snippet as an example of how to enable `spring-context-indexer` in Gradle based build:  ```groovy dependencies {     compileOnly(""org.springframework:spring-context-indexer:5.1.4.RELEASE"") } ```  This doesn't produce `spring.components` file using recent Gradle releases (I've verified with `4.10.3` and `5.1.1`), since `annotationProcessor` configuration should be used instead.  Possibly related to #22338.","closed","type: documentation,","vpavic","2019-02-04T06:52:39Z","2019-02-25T15:19:11Z"
"","22288","Testing chapter of reference manual refers to old version of PetClinic","The reference docs of Testing module here: https://docs.spring.io/spring/docs/current/spring-framework-reference/testing.html#testing-examples-petclinic try to illustrates a source code that is no longer exists.","closed","type: documentation,","mhewedy","2019-01-21T16:25:28Z","2019-01-23T15:48:36Z"
"","22325","ApplicationContext.refresh() causes stale listeners to be added to ApplicationEventMulticaster","The problem is caused by the change in Spring AbstractApplicationContext, in particular how it handles the addition of ApplicationListener objects. In short, all of the registered ApplicationListener objects are retained even after application context is refreshed,  at which point the stale listeners become unusable as AbstractLifecycleBean(s) would have had their destroy methods invoked.  The change that caused this problem: https://github.com/spring-projects/spring-framework/issues/21858 Commit: https://github.com/spring-projects/spring-framework/commit/c8c0737ce712569a7e03a97dfe7ef11cbbc33e39  With this commit all listeners are added to AbstractApplicationContext's list applicationListeners instead of just adding them to an instance of ApplicationEventMulticaster. This causes stale listeners to be added to a new instance of ApplicationEventMulticaster when the AbstractApplicationContext is refreshed via its refresh() method. The refresh() method creates a new ApplicationEventMulticaster but then it adds all of the stale listeners (by registerListeners()) from its list of listeners. Subsequently, when the refresh finishes (AbstractApplicationContext.finishRefresh()), a new instance of ApplicationEventMulticaster publishes the refresh event too all registered listeners, including the stale listeners whose destroy methods were called as part of the refresh.","closed","type: regression,","eknidev","2019-01-30T19:47:08Z","2019-10-09T18:54:07Z"
"","22383","Ensure indexer output is deterministic and repeatable","The output file that `spring-context-indexer` produces is currently written using `Properties#store`. This prevents the build of a project that uses indexer from being repeatable, due to current timestamp being included in comment inside output file, and also entries possibly not being ordered deterministically.  This PR ensures that indexer output is written in deterministic and repeatable manner by filtering out comments and ordering entries.","closed","type: enhancement,","vpavic","2019-02-07T21:11:19Z","2019-06-11T15:00:20Z"
"","22447","HierarchicalUriComponents expanding order","The order, in which URI template variables are applied in org.springframework.web.util.HierarchicalUriComponents.expandInternal(UriTemplateVariables) is wrong. It should be in the order of URI parts: scheme, user, host, port, path, query, fragment. Instead, fragment is expanded after the schema. So, if variables are passed into UriComponentsBuilder.buildAndExpand, as an array, and there is a variable for the URI fragment going after other variables, the result will be incorrect. The bug was introduced in commit [f813712](https://github.com/spring-projects/spring-framework/commit/f813712f5b413b354560cd7cc006352e9defa9a3#diff-774d5dc1a5c7494860b8f715e5976d04).","closed","type: bug,","vitaly-sourikov","2019-02-21T09:28:15Z","2019-03-12T20:00:39Z"
"","22448","Allow form:options tag outside of form:select tag","The options tag can be useful, even if dynamic form binding is not utilized.   It would work, except that `OptionsTag` explicitly asks for a `form:select` parent element, even if it doesn't need it, as per the following line.  https://github.com/spring-projects/spring-framework/blob/25d7f09f8dacbd51d1551b4d7fed1687b068ec11/spring-webmvc/src/main/java/org/springframework/web/servlet/tags/form/OptionsTag.java#L296  The solution: If you only move the aforementioned line to the inside of the `else`, it will still work as before, and allow to use an options tag with explicit item list.","open","in: web,","ghost","2019-02-21T10:06:11Z","2019-03-05T14:51:50Z"
"","1990","Replace nested conditional with guard clauses","The method has conditionals that do make difficult to follow the path of execution.  Solution:  Uses guard clauses to improve readability.","closed","","arnoldmartinez","2018-10-11T15:51:24Z","2018-10-29T16:42:17Z"
"","2020","SPR-17037 Use ArrayList instead of LinkedList in ReflectionUtils::findConcreteMethodsOnInterfaces","The mentioned method always returns either null or non-empty list, so it's reasonable to use `ArrayList` instead of `LinkedList` in this case.","closed","","stsypanov","2018-11-19T14:19:00Z","2018-12-10T20:13:04Z"
"","22261","Fix EnableWebSocketMessageBroker Javadoc","The Javadoc of `EnableWebSocketMessageBroker` for `configureMessageBroker` should read `@Override` instead of `@Bean`","closed","type: task,","aivantsov","2019-01-15T13:25:17Z","2019-02-07T16:04:30Z"
"","1989","Updated Javadoc: date format patterns SPR-17366","The javadoc here: https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/format/annotation/DateTimeFormat.ISO.html#DATE_TIME  states that the ISO DATE_TIME format uses the pattern `yyyy-MM-dd'T'HH:mm:ss.SSSZ`  but in fact the pattern is `yyyy-MM-dd'T'HH:mm:ss.SSSXXX`  The change was made by this commit:  https://github.com/spring-projects/spring-framework/commit/bb94ba6e3ff8dfc053c5808d337289e8df37e935#diff-4e8b86c8c802560c74bf5647b9c91bb6  The javadoc needs to be changed to reflect the reality. The same also applies for the TIME format.  The actual difference is in the colon in the time zone offset. It was added in the commit mentioned above, and the examples in the documentation are correct. But not the pattern and it might be confusing.","closed","","volkovandr","2018-10-11T08:43:28Z","2018-10-11T11:40:15Z"
"","22549","ISO-8859-1 as default for application/x-www-form-urlencoded","The IANA registration at https://www.w3.org/TR/2016/WD-html51-20160310/iana.html#application-x-www-form-urlencoded specifies that a US-ASCII encoding should be used by default. In practice, it's also what browsers and servers expect when no charset parameter is specified.  When writing with content type application/x-www-form-urlencoded, if the charset is the default, leave the charset off of the content-type. Since it's the default, it need not be specified, and some (particularly) servers don't work correctly when a charset is specified on application/x-www-form-urlencoded. See https://bugzilla.mozilla.org/show_bug.cgi?id=241540 for background.  Fixes https://github.com/spring-projects/spring-framework/issues/22548","closed","status: invalid,","candrews","2019-03-08T19:10:56Z","2019-03-11T19:25:32Z"
"","22618","Add overload for MockRestServiceServer.verify with a timeout","The goal is to verify that the expected interactions occur up to the given timeout. This is useful for testing asynchronous flows in event-driven services, similar to the testing support in Spring Amqp.  Sample code: ```java @SpringBootApplication public class MyApplication {    @Autowired   private RestTemplate template;    @RabbitListener()   public void callService(String payload) {     template.put(""http://example.com/hello"", payload);   } } ```  ```java @SpringBootTest @RunWith(SpringRunner.class) public class ApplicationTest {   @Autowired   private MockRestServiceServer mockServer;    @Autowired   private AmqpTemplate template;    @Test   public void callsService() {     mockServer.expect(method(PUT))       .andExpect(requestTo(""/hello""))       .andRespond(withNoContent());     template.convertAndSend(""HelloWorld"");     mockServer.verify(5, TimeUnit.SECONDS);   } } ```","closed","type: enhancement,","kewne","2019-03-20T11:00:48Z","2021-01-13T17:51:51Z"
"","2004","Fixes error in reference documentation","The error is in the Lifecycle Callbacks section.   See issue https://jira.spring.io/browse/SPR-17453 for more details.","closed","","MasterEx","2018-10-31T23:16:01Z","2018-11-01T01:25:25Z"
"","1991","Fix deprecated property in MBeanExporter documentation","The documentation still pointed to the deprecated property `registrationBehaviorName`. The property was removed in Spring 5 by this commit: b5db5d3aac39ca7cff4ccca491652d9490a1d175","closed","","Cikey","2018-10-12T14:05:14Z","2018-10-12T14:30:47Z"
"","22435","AbstractTraceInterceptor causes problems when implemented in Kotlin","The documentation for `AbstractTraceInterceptor#invokeUnderTrace` states that the return value should be the result of the call to `MethodInvocation.proceed()` ([see AbstractTraceInterceptor.java#L238](https://github.com/spring-projects/spring-framework/blob/master/spring-aop/src/main/java/org/springframework/aop/interceptor/AbstractTraceInterceptor.java#L238)). The result of `invocation.proceed()` however can be `null`, but since the `package-info.java` in `org.springframework.aop.interceptor` ([see package-info.java#L6](https://github.com/spring-projects/spring-framework/blob/master/spring-aop/src/main/java/org/springframework/aop/interceptor/package-info.java#L6)) declares the return value of `invokeUnderTrace` as non-nullable the Kotlin compiler will add a `checkExpressionValueIsNotNull` before returning the result of `invocation.proceed()`.   This causes a runtime exception that looks like this:  ``` java.lang.IllegalStateException: invocation.proceed() must not be null ```  I thought I could simply set the return value of the overridden `invokeUnderTrace` to `Any?` however that doesn't work since the compiler sees the `@NonNullApi` and complains with  ``` Error:(18, 76) Kotlin: Return type of 'invokeUnderTrace' is not a subtype of the return type of the overridden member 'protected/*protected and package*/ abstract fun invokeUnderTrace(p0: MethodInvocation, p1: Log): Any defined in org.springframework.aop.interceptor.AbstractMonitoringInterceptor' ```  **Affects:** 5.1.4.RELEASE","closed","type: bug,","nlochschmidt","2019-02-19T20:00:52Z","2019-02-22T08:52:41Z"
"","22281","Unify declaration dependent version","The dependencies are declared in many places.  Unify declaration dependent version so that this is good for upgrading.","closed","status: superseded,","diguage","2019-01-19T17:23:01Z","2019-12-13T14:53:43Z"
"","22273","DefaultCorsProcessor does not set ""vary: Origin"" if the request has no Cors header","The DefaultCorsProcessor will not set the ""vary: Origin"" header in the response, if the request is not a cors request.   Scenario:  * The user visits the original page (without CORS). * Some scripts are cached without CORS and vary headers * The user visits page B which is using the same scripts. The browser wants to load them from the cache but get a CORS Error because of the missing CORS headers.  Discussions regarding this topic: https://github.com/spring-projects/spring-framework/issues/18378 (especially the last comment) https://stackoverflow.com/questions/25329405/why-isnt-vary-origin-response-set-on-a-cors-miss  I use Spring Boot 2.1.1.RELEASE  Are there any known workarounds?","closed","type: enhancement,","mascheck","2019-01-17T08:14:11Z","2019-12-05T07:48:02Z"
"","22600","Constructor based bean binding should support package protected constructors and accessors","The constructor based bean binding currently only supports `public` constructors. If a constructor is declared package private, this is the primary error message one sees:  ``` java.lang.NoSuchMethodException: com.acme.MyForm.() ```  This is misleading in itself as it seems to indicate that a default constructor is needed, when in fact the visibility of the declared constructor is the issue.  Also, non-public accessor methods will cause property lookups to fail, e.g. a package protected getter for `name`:  ``` Caused by: org.springframework.beans.NotReadablePropertyException: Invalid property 'name' of bean class [com.acme.MyForm]: Bean property 'name' is not readable or has an invalid getter method: Does the return type of the getter match the parameter type of the setter? ```  Again, the error message is misleading as it points to the return type, not the visibility.  It would be cool if package protected constructors and accessor were supported out of the box. If you decide to end up not supporting those, a hint at the requirement to declare them public in the error messages would be very helpful.","closed","type: enhancement,","odrotbohm","2019-03-15T10:13:40Z","2020-09-01T16:15:03Z"
"","22252","ParameterNameDiscoverer does not work?","The class ""com.google.api.services.compute.Compute$Instances"" is an inner class, and the method ""start"" has three parameters. I think the method LocalVariableTableParameterNameDiscoverer.getParameterNames() is not work in this case, which cannot find any parameters. Could you help to solve this problem. Here is my codes:  ``` Class clazz = Class.forName(Instances.class.getName()); 		for (Method method : clazz.getMethods()) { 			if (method.getName().equals(""start"")) { 				System.out.println(""Parameter number:"" + method.getParameterCount()); 				ParameterNameDiscoverer pnd = new LocalVariableTableParameterNameDiscoverer(); 				String[] filedNames = pnd.getParameterNames(method); 				System.out.println(""Parameter values:"" + filedNames); 			} 		} ``` The wrong outputs:  ``` Parameter number: 3 Parameter values: null  ```  In addition,  the maven dependency is:  ```  		 			org.springframework 			spring-core 			5.1.4.RELEASE 		   		 			com.google.apis 			google-api-services-compute 			v1-rev201-1.24.1 		 ```","closed","for: stackoverflow,","syswu","2019-01-14T12:56:28Z","2019-01-15T11:47:32Z"
"","22565","Increase StringBuilder initial size used in the ASM Frame class","The ASM `Frame` class builds `typeDescriptor` strings using a `StringBuilder`. It turns out that almost all descriptors are bigger than StringBuilder's default size of 16. Increasing the default size to 32 means that that `AbstractStringBuilder.ensureCapacityInternal` doesn't need to call `Arrays.copyOf` as often.","closed","in: core,","philwebb","2019-03-11T22:09:51Z","2019-03-12T21:46:44Z"
"","22568","Optimize StringUtils.cleanPath","The `StringUtils.cleanPath` method is called ~600 times with a typical Spring Boot application and mostly with paths that are already correct. I think we can safely bypass String splitting and re-concatenation if the path does not contain `.`.","closed","type: enhancement,","philwebb","2019-03-11T22:58:46Z","2019-03-23T18:38:56Z"
"","22776","@DestinationVariable not working with RSocket support","The `org.springframework.messaging.handler.annotation.support.reactive.DestinationVariableMethodArgumentResolver` argument resolver is relying on destination template variables being set as message headers.  This is currently not being done by the `RSocketMessageHandler` and destination variables are not resolved.","closed","type: enhancement,","bclozel","2019-04-09T13:56:23Z","2019-04-09T21:00:53Z"
"","22564","Skip more classes when processing beans in EventListenerMethodProcessor","The `EventListenerMethodProcessor` currently skips beans where`isSpringContainerClass` returns true. There are a few more types that we could also consider skipping:  * Anything in `java.lang` classes * Any `java.util` classes * Any `javax.servlet` classes  All of these turn out to be pretty common beans in Spring Boot applications.","closed","type: enhancement,","philwebb","2019-03-11T22:05:33Z","2019-03-13T15:35:18Z"
"","22715","Allow sending headers with the disconnect frame","The `disconnect` method of `StompSession` does not allow sending custom `headers`. This is something that is possible in other libraries and there does not seem to be a good reason to not support this.  This pull request is related to #16222 but does not limit itself to the receipt header.","closed","type: enhancement,","ikempf","2019-04-01T08:27:41Z","2019-11-08T17:55:50Z"
"","22563","Use less memory and try to skip more classes when processing @Configuration classes","The `ConfigurationClassParser` often ends up creating a new `SourceClass` instance for `Object.class`. We could use a static to represent this and save ourselves a few object allocations.  The `asSourceClass` method is also often called with `java.lang.annotation` instances which can always be skipped.","closed","type: enhancement,","philwebb","2019-03-11T22:00:50Z","2019-04-06T14:59:13Z"
"","22250","Remove CastorMarshaller","The `CastorMarshaller` has been deprecated since 4.3.13. Let's remove it in 5.2.","closed","type: task,","poutsma","2019-01-14T09:35:17Z","2019-02-12T10:48:13Z"
"","22753","Delete AnnotationAttributeExtractor","The `AnnotationAttributeExtractor` interface is package private and no longer used. I think it can be safely deleted.","closed","in: core,","philwebb","2019-04-05T20:19:29Z","2019-04-06T14:58:20Z"
"","22659","Update license.txt file","The [`license.txt`](https://github.com/spring-projects/spring-framework/blob/d41c4522dac6d97c40f9ade82d1d0e2661e899f6/src/docs/dist/license.txt#L260-L279) file included in distributed artifacts is outdated and needs to be updated with the following text.  > To the extent any open source components are licensed under the EPL and/or > other similar licenses that require the source code and/or modifications to > source code to be made available (as would be noted above), you may obtain  > a copy of the source code corresponding to the binaries for such open > source components and modifications thereto, if any, (the ""Source Files""),  > by downloading the Source Files from https://spring.io/projects, Pivotal's  > website at http://network.pivotal.io/open-source, or by sending a request, > with your name and address to: Pivotal Software, Inc., 875 Howard Street, 5th > floor, San Francisco, CA 94103, Attention: General Counsel. All such requests > should clearly specify: OPEN SOURCE FILES REQUEST, Attention General Counsel. > Pivotal can mail a copy of the Source Files to you on a CD or equivalent > physical medium. >  > This offer to obtain a copy of the Source Files is valid for three > years from the date you acquired this Software product. Alternatively, the  > Source Files may accompany the Software. >","closed","type: task,","sbrannen","2019-03-25T17:02:29Z","2019-03-25T17:55:15Z"
"","22629","Switch to RSocket 0.12.1 RCs","Switch to the development version that is expected to lead up to a 1.0 release in time for Spring Framework 5.2 GA. There are some important changes, e.g. related to frame decoding that we should be testing against, and more to come such as support for resuming and leasing.","closed","type: task,","rstoyanchev","2019-03-21T18:47:10Z","2019-03-21T23:34:43Z"
"","22297","Load-time weaving support for WildFly 13+","support for wildfly delegating transformer is broken since jboss-modules 1.8.0 https://github.com/jboss-modules/jboss-modules/commit/f4beb27c5e33ae42e48ae012a339980eef46b479","closed","type: enhancement,","kudrevatykh","2019-01-23T10:02:24Z","2019-02-04T22:31:22Z"
"","22264","4.1.x","suck","closed","","nl5500147","2019-01-16T02:24:07Z","2019-01-16T03:33:51Z"
"","22773","Use concatenation instead of torn StringBuilder::append chain","subj","closed","type: enhancement,","stsypanov","2019-04-09T08:55:09Z","2021-06-24T14:38:48Z"
"","22737","Use StringJoiner where possible to simplify String joining","subj","closed","","stsypanov","2019-04-04T14:04:48Z","2022-02-18T19:10:07Z"
"","22539","Use StringJoiner where possible to simplify String joining","Subj","closed","type: task,","stsypanov","2019-03-07T09:59:00Z","2019-03-12T08:29:42Z"
"","22418","Some very simple improvements regarding usage of ArrayList","subj","closed","type: enhancement,","stsypanov","2019-02-15T11:24:45Z","2019-02-19T11:28:09Z"
"","22404","Extract duplicated code into a separate method","subj","closed","type: enhancement,","stsypanov","2019-02-11T14:59:25Z","2019-02-19T11:28:13Z"
"","22316","Replace c-style array declaration with Java-style","subj","closed","","stsypanov","2019-01-28T15:39:18Z","2022-02-18T19:09:57Z"
"","22314","Use for-each instead of counting loop when iterating arrays","subj","closed","status: duplicate,","stsypanov","2019-01-28T14:34:55Z","2019-01-29T09:15:53Z"
"","22502","Use String::isEmpty instead of """".equals(arg) when arg is not null","String::isEmpty has better time efficiency than """".equals(arg) when arg is not null","closed","type: enhancement,","rupertw","2019-03-04T16:36:29Z","2019-03-05T13:41:24Z"
"","22411","actual values are not generating and not able insert into mysql database content is empty when i tried run on postman","Steps I followed #Created Maven Project with necessary plugins of spring with release 2.0.0  #created controller , model and repository #added application properties for backend mysql when i try to run spring boot i am getting following message on postman and broweser  content | [] -- | -- pageable |   sort |   sorted | false unsorted | true pageSize | 20 pageNumber | 0 offset | 0 unpaged | false paged | true last | true totalPages | 0 totalElements | 0 first | true sort |   sorted | false unsorted | true numberOfElements | 0 size | 20 number | 0  below is the my last run log ---------------------------------- 2019-02-14 09:44:57.025  INFO 13533 --- [nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet' 2019-02-14 09:44:57.026  INFO 13533 --- [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started 2019-02-14 09:44:57.043  INFO 13533 --- [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 17 ms 2019-02-14 09:44:57.139  INFO 13533 --- [nio-8080-exec-1] o.h.h.i.QueryTranslatorFactoryInitiator  : HHH000397: Using ASTQueryTranslatorFactory 2019-02-14 09:44:57.293 DEBUG 13533 --- [nio-8080-exec-1] org.hibernate.SQL                        : select post0_.id as id1_1_, post0_.created_at as created_2_1_, post0_.updated_at as updated_3_1_, post0_.content as content4_1_, post0_.description as descript5_1_, post0_.title as title6_1_ from posts post0_ limit ?","closed","for: stackoverflow,","manjugb","2019-02-14T04:21:28Z","2019-02-14T08:21:55Z"
"","22712","Too many NotWritablePropertyExceptions if a Spring MVC controller binds request parameters onto multiple command objects","springboot 1.5.13.RELEASE  Given code like this:  ```java     @RequestMapping(""query"")     public Object queryAd(@Validated QueryRequest v1, @Validated ADRequest  v2) {     } ```  I find if the HTTP request parameters should bind onto `ADRequest`, Spring throws a `NotWritablePropertyException`.  I found the following code in `org.springframework.validation.DataBinder`.   ```java 	protected void applyPropertyValues(MutablePropertyValues mpvs) { 		try { 			// Bind request parameters onto target object. 			getPropertyAccessor().setPropertyValues(mpvs, isIgnoreUnknownFields(), isIgnoreInvalidFields()); 		} 		catch (PropertyBatchUpdateException ex) { 			// Use bind error processor to create FieldErrors. 			for (PropertyAccessException pae : ex.getPropertyAccessExceptions()) { 				getBindingErrorProcessor().processPropertyAccessException(pae, getInternalBindingResult()); 			} 		} 	} ```  And the following code in `org.springframework.beans.AbstractNestablePropertyAccessor`.  ```java 	@Override 	public void setPropertyValue(PropertyValue pv) throws BeansException { 		PropertyTokenHolder tokens = (PropertyTokenHolder) pv.resolvedTokens; 		if (tokens == null) { 			String propertyName = pv.getName(); 			AbstractNestablePropertyAccessor nestedPa; 			try { 				nestedPa = getPropertyAccessorForPropertyPath(propertyName); 			} 			catch (NotReadablePropertyException ex) { 				throw new NotWritablePropertyException(getRootClass(), this.nestedPath + propertyName, 						""Nested property in path '"" + propertyName + ""' does not exist"", ex); 			} 			tokens = getPropertyNameTokens(getFinalPath(nestedPa, propertyName)); 			if (nestedPa == this) { 				pv.getOriginalPropertyValue().resolvedTokens = tokens; 			} 			nestedPa.setPropertyValue(tokens, pv); 		} 		else { 			setPropertyValue(tokens, pv); 		} 	} ```  My classes look like this:  ```java class QueryRequest {         private String qr1;         private String qr2;         private String qr3; }  class ADRequest {         private String ar1;         private String ar2;         private String ar3;         private String ar4;         private String ar5;         private String ar6;         private String ar7;         private String ar8;         private String ar9;         private String ar10;         private String ar11;         // ...         private String ar100; } ```  My request URL looks like this `/query?qr1=123&qr2=133&qr3=2333&ar1=ar123&ar2=ar133&.ar3=ar2333...&ar100=ar1233`  When Spring binds data to `QueryRequest`, it cannot find fields (ar1,ar2, ...,  ar100) and will throw almost 100 `NotWritablePropertyException`s. This makes my app slower and results in more young GC.  I hope when binding parameters onto `QueryRequest` (that should bind to `ADRequest`) will not throw `NotWritablePropertyException`.","closed","status: invalid,","github-zuoyan","2019-03-31T02:04:33Z","2019-04-09T20:13:14Z"
"","22534","The afterHandshake method of WebSocketHandler  does not work","spring-websocket-4.3.17.RELEASE  I implemented a `HandshakeInterceptor` to authenticate the user but I found that its `afterHandshake` method doesn't work, whether the `beforeHandshake` method returns `false` or throws an exception. So what is the use of this method?  The code of `HandshakeInterceptorChain` as follow:  ```java public class HandshakeInterceptorChain {  	private static final Log logger = LogFactory.getLog(HandshakeInterceptorChain.class);  	private final List interceptors;  	private final WebSocketHandler   	private int interceptorIndex = -1;   	public HandshakeInterceptorChain(List interceptors, WebSocketHandler wsHandler) { 		this.interceptors = (interceptors != null ? interceptors : Collections.emptyList()); 		this.wsHandler = wsHandler; 	}   	public boolean applyBeforeHandshake(ServerHttpRequest request, ServerHttpResponse response, 			Map attributes) throws Exception {  		for (int i = 0; i < this.interceptors.size(); i++) { 			HandshakeInterceptor interceptor = this.interceptors.get(i); 			if (!interceptor.beforeHandshake(request, response, this.wsHandler, attributes)) { 				if (logger.isDebugEnabled()) { 					logger.debug(interceptor + "" returns false from beforeHandshake - precluding handshake""); 				} 				applyAfterHandshake(request, response, null); 				return false; 			} 			this.interceptorIndex = i; 		} 		return true; 	}   	public void applyAfterHandshake(ServerHttpRequest request, ServerHttpResponse response, Exception failure) { 		for (int i = this.interceptorIndex; i >= 0; i--) { 			HandshakeInterceptor interceptor = this.interceptors.get(i); 			try { 				interceptor.afterHandshake(request, response, this.wsHandler, failure); 			} 			catch (Throwable ex) { 				if (logger.isWarnEnabled()) { 					logger.warn(interceptor + "" threw exception in afterHandshake: "" + ex); 				} 			} 		} 	}  } ```  The code of `WebSocketHttpRequestHandler` as follow:  ```java 	@Override 	public void handleRequest(HttpServletRequest servletRequest, HttpServletResponse servletResponse) 			throws ServletException, IOException {  		ServerHttpRequest request = new ServletServerHttpRequest(servletRequest); 		ServerHttpResponse response = new ServletServerHttpResponse(servletResponse);  		HandshakeInterceptorChain chain = new HandshakeInterceptorChain(this.interceptors, this.wsHandler); 		HandshakeFailureException failure = null;  		try { 			if (logger.isDebugEnabled()) { 				logger.debug(servletRequest.getMethod() + "" "" + servletRequest.getRequestURI()); 			} 			Map attributes = new HashMap(); 			if (!chain.applyBeforeHandshake(request, response, attributes)) { 				return; 			} 			this.handshakeHandler.doHandshake(request, response, this.wsHandler, attributes); 			chain.applyAfterHandshake(request, response, null); 			response.close(); 		} 		catch (HandshakeFailureException ex) { 			failure = ex; 		} 		catch (Throwable ex) { 			failure = new HandshakeFailureException(""Uncaught failure for request "" + request.getURI(), ex); 		} 		finally { 			if (failure != null) { 				chain.applyAfterHandshake(request, response, failure); 				throw failure; 			} 		} 	} ```","closed","for: stackoverflow,","lzz666","2019-03-07T03:03:31Z","2019-05-08T18:24:03Z"
"","22265","org.springframework.web.client.HttpMessageConverterExtractor#extractData fails to detect empty body when content-length header is missing","spring-web 5.1.3.RELEASE:  The `org.springframework.web.client.HttpMessageConverterExtractor#extractData` results in a  NullPointerException if: 1. The HttpStatus of the `org.springframework.http.client.ClientHttpResponse` is 401 2. The `org.springframework.http.client.ClientHttpResponse#getBody` is `null`. 3. The response does not contain a `content-length` header.  The following test can be added to `org.springframework.web.client.HttpMessageConverterExtractorTest` to verify this behaviour: ```    @Test     public void missingContentLengthHeader() throws IOException {         HttpMessageConverter converter = mock(HttpMessageConverter.class);         HttpHeaders responseHeaders = new HttpHeaders();         extractor = new HttpMessageConverterExtractor<>(String.class, createConverterList(converter));         given(response.getRawStatusCode()).willReturn(HttpStatus.valueOf(401).value());         given(response.getHeaders()).willReturn(responseHeaders);          Object result = extractor.extractData(response);         assertNull(result);     } ```  The `org.springframework.web.client.MessageBodyClientHttpResponseWrapper#hasMessageBody` incorrectly returns `true` which causes `org.springframework.web.client.MessageBodyClientHttpResponseWrapper#hasEmptyMessageBody` to throw the NPE. ```	 public T extractData(ClientHttpResponse response) throws IOException { ... 		if (!responseWrapper.hasMessageBody() || responseWrapper.hasEmptyMessageBody()) { ... ``` This can be fixed in `org.springframework.web.client.MessageBodyClientHttpResponseWrapper#hasMessageBody` by changing this: ``` if (getHeaders().getContentLength() == 0) {    return false; }  ``` to this: ``` if (getHeaders().getContentLength() <= 0) {    return false; }  ``` When the headers do not contain a content-length header, `getHeaders().getContentLength()` returns `-1`.","closed","type: enhancement,","bruce-stewart","2019-01-16T06:03:04Z","2019-02-11T08:32:09Z"
"","22786","MockCookie.parse(String) mishandles case sensitivity","spring-test 5.1.6.RELEASE uses the new `MockCookie` class. This change breaks some existing code of ours because it tests for ""Domain"", ""Path"", etc., in a case-sensitive manner. As far as I can tell, cookie attribute names should be compared in a case-insensitive manner.   For example,   1) https://tools.ietf.org/html/rfc2109, section 4.1 ""Attributes (names) (attr) are case-insensitive"";  2) https://www.ietf.org/rfc/rfc2965.txt, section 3.1 ""Attributes (names) (attr) are case-insensitive"";  3) https://tools.ietf.org/html/rfc6265, section 5.1.3 ""Note that both the domain string and the string will have been canonicalized to lower case at this point."", section 5.2.3 ""If the attribute-name case-insensitively matches the string ""Domain""...Convert the cookie-domain to lower case."".   Am I reading these RFCs correctly?  This test case illustrates the issue (following the style of `org.springframework.mock.MockCookieTests`):  ```java    @Test    public void parseHeaderWithAttributesCaseSensitivity() {       MockCookie cookie = MockCookie.parse(             ""SESSION=123; domain=example.com; max-age=60; path=/; secure; httponly; samesite=Lax"");        assertCookie(cookie, ""SESSION"", ""123"");       assertEquals(""example.com"", cookie.getDomain());       assertEquals(60, cookie.getMaxAge());       assertEquals(""/"", cookie.getPath());       assertTrue(cookie.getSecure());       assertTrue(cookie.isHttpOnly());       assertEquals(""Lax"", cookie.getSameSite());    } ```  Here is a proposed fix:  ```java    /**     * Factory method that parses the value of a ""Set-Cookie"" header.     * @param setCookieHeader the ""Set-Cookie"" value; never {@code null} or empty     * @return the created cookie     */    public static MockCookie parse(String setCookieHeader) {       Assert.notNull(setCookieHeader, ""Set-Cookie header must not be null"");       String[] cookieParts = setCookieHeader.split(""\\s*=\\s*"", 2);       Assert.isTrue(cookieParts.length == 2, () -> ""Invalid Set-Cookie header '"" + setCookieHeader + ""'"");        String name = cookieParts[0];       String[] valueAndAttributes = cookieParts[1].split(""\\s*;\\s*"", 2);       String value = valueAndAttributes[0];       String[] attributes =             (valueAndAttributes.length > 1 ? valueAndAttributes[1].split(""\\s*;\\s*"") : new String[0]);        MockCookie cookie = new MockCookie(name, value);       for (String attribute : attributes) {          //compare attribute name in case-insensitive manner per RFCs 2109/2965/6265          final String lowerCaseAttribute = attribute.toLowerCase();          if (lowerCaseAttribute.startsWith(""domain"")) {             cookie.setDomain(extractAttributeValue(attribute, setCookieHeader));          }          else if (lowerCaseAttribute.startsWith(""max-age"")) {             cookie.setMaxAge(Integer.parseInt(extractAttributeValue(attribute, setCookieHeader)));          }          else if (lowerCaseAttribute.startsWith(""path"")) {             cookie.setPath(extractAttributeValue(attribute, setCookieHeader));          }          else if (lowerCaseAttribute.startsWith(""secure"")) {             cookie.setSecure(true);          }          else if (lowerCaseAttribute.startsWith(""httponly"")) {             cookie.setHttpOnly(true);          }          else if (lowerCaseAttribute.startsWith(""samesite"")) {             cookie.setSameSite(extractAttributeValue(attribute, setCookieHeader));          }       }       return cookie;    } ```  Thanks for any input. :)","closed","type: regression,","fg8dgrdh","2019-04-12T00:09:35Z","2019-04-12T14:55:08Z"
"","22431","spring 源码阅读","spring 源码阅读","closed","status: declined,","stonew1987","2019-02-19T14:38:07Z","2019-02-19T15:05:29Z"
"","22262","DataBuffer.write(CharSequence charSequence, Charset charset) fails on empty string with java.lang.IllegalStateException: Current state = RESET, new state = FLUSHED","Spring WebFlux 5.1.4 First reproduced on a controller returning an empty response, it's easy to reproduce using the following snippet: ```java     DataBuffer buffer = new DefaultDataBufferFactory().allocateBuffer();     buffer.write("""", StandardCharsets.UTF_8); ``` the following exception is thrown: ``` java.lang.IllegalStateException: Current state = RESET, new state = FLUSHED 	at java.nio.charset.CharsetEncoder.throwIllegalStateException(CharsetEncoder.java:992) 	at java.nio.charset.CharsetEncoder.flush(CharsetEncoder.java:675) 	at org.springframework.core.io.buffer.DataBuffer.write(DataBuffer.java:260) ``` Fortunately, netty stack is not affected as `NettyDataBuffer` has its own implementation.","closed","in: core,","oleg-alexeyev","2019-01-15T18:36:28Z","2019-01-17T16:28:49Z"
"","22554","Dynamic registerBeanDefinition in DefaultListableBeanFactory,something weird","Spring version:5.0.10.RELEASE  ---  Sometime I tried to register some bean dynamically, but something weird. When I tried to use the method `getBeansOfType()` to get the bean, it returned `null`, but I got the bean when using the method `getBean()`.  This follow is my code:  ```java ConfigurableApplicationContext configurableApplicationContext = (ConfigurableApplicationContext) contextUtil.getApplicationContext(); DefaultListableBeanFactory defaultListableBeanFactory = (DefaultListableBeanFactory) configurableApplicationContext.getBeanFactory(); Map dataBaseList = defaultListableBeanFactory.getBeansOfType(HikariDataSource.class); log.info(""DataBaseList:{}"", dataBaseList); BeanDefinitionBuilder beanDefinitionBuilder = BeanDefinitionBuilder.genericBeanDefinition(HikariDataSource.class); beanDefinitionBuilder.addPropertyValue(""driverClassName"", ""com.mysql.jdbc.Driver""); beanDefinitionBuilder.addPropertyValue(""jdbcUrl"",""jdbc:mysql://localhost:3306/ssm_shiro?useUnicode=true&characterEncoding=utf8&allowMultiQueries=true""); beanDefinitionBuilder.addPropertyValue(""password"", ""123""); beanDefinitionBuilder.addPropertyValue(""username"", ""root""); defaultListableBeanFactory.registerBeanDefinition(""second-Database"", beanDefinitionBuilder.getRawBeanDefinition()); dataBaseList = defaultListableBeanFactory.getBeansOfType(HikariDataSource.class); log.info(""DataBaseList:{}"", dataBaseList); HikariDataSource secondDatabase=defaultListableBeanFactory.getBean(""second-Database"", HikariDataSource.class); log.info(""secondDatabase:{},jdbcUrl:{}"", secondDatabase,secondDatabase.getJdbcUrl()); ```  and the result:  ![小Q截图-20190310145023](https://user-images.githubusercontent.com/12840349/54081719-25a63f00-4344-11e9-974a-3a0d2a897195.png)  the source code of `DefaultListableBeanFactory`:  ```java // Still in startup registration phase this.beanDefinitionMap.put(beanName, beanDefinition); this.beanDefinitionNames.add(beanName); this.manualSingletonNames.remove(beanName); ```  I can see `beanDefinitionNames` saves the `beanName`, but why can I not get the bean by type?   Something wrong in my code?","closed","in: core,","ghost","2019-03-10T06:56:29Z","2019-03-14T14:35:17Z"
"","22543","@RequestMapping without any attributes behaves as ""default endpoint""","Spring version: 5.1.5.RELEASE  In one of our micro services we've made a mistake and instead of writing something like this: ```java @RestController @RequestMapping(""/my/custom/controller"") public class MyController {  // GET and POST methods mapped to `/my/custom/controller` endpoint ```  Created this: ```java @RestController(""/my/custom/controller"") public class MyController { ```  Everything worked fine, all our requests were handled but then at some point we realised that all requests, even for non-existing endpoints, are mapped to that controller. So this:  http://localhost:8080/whatever  Was getting into our controller by default: ``` 2019-03-07 16:47:28.014 DEBUG 83179 --- [nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : GET ""/whatever"", parameters={} 2019-03-07 16:47:28.016 DEBUG 83179 --- [nio-8080-exec-3] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to public void com.example.demo.MyController.doSomething() Got to my custom controller 1 2019-03-07 16:47:28.017 DEBUG 83179 --- [nio-8080-exec-3] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json] 2019-03-07 16:47:28.017 DEBUG 83179 --- [nio-8080-exec-3] m.m.a.RequestResponseBodyMethodProcessor : Nothing to write: null body 2019-03-07 16:47:28.017 DEBUG 83179 --- [nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Completed 200 OK  ```  With that config in place, I would expect to get 404 for both: `/whatever` and `/my/custom/controller` requests, because in fact there is no mapping for `/my/custom/controller` in my app (there is a bean with that name instead).  Here is a whole controller's code, no other config is required to reproduce this, just standard spring boot app with this single controller: ```java package com.example.demo;  import org.springframework.web.bind.annotation.GetMapping; import org.springframework.web.bind.annotation.PutMapping; import org.springframework.web.bind.annotation.RestController;  @RestController(""/my/custom/controller"") public class MyController {      @GetMapping     public void doSomething() {         System.out.println(""Got to my custom controller 1"");     }      @PutMapping     public void doSomethingElse() {         System.out.println(""Got to my custom controller 2"");     }  } ```","closed","type: enhancement,","anatoliy-balakirev","2019-03-07T15:53:39Z","2019-04-09T20:05:25Z"
"","22426","Events extending from PayloadApplicationEvent and implementing an interface fail to match @EventListener argument","Spring version: 5.0.10.RELEASE  This bug is fully reproducable with the following classes/interfaces (omitted import/package lines):  ```java public interface Auditable {}  public class MyEventClass extends PayloadApplicationEvent implements Auditable {     public MyEventClass(Object source, GT payload) {         super(source, payload);     }     public String toString() {         return ""Payload: ""+getPayload();     } }  @Component public class Listener {     @EventListener     public void onEvent(Auditable a) {         System.out.println(a);     } }  @Component public class Publisher {     private final ApplicationEventPublisher publisher;     @Autowired     public Publisher(ApplicationEventPublisher publisher) {         this.publisher = publisher;     }     public void publish(String text) {         publisher.publishEvent(new MyEventClass<>(this, text));     } }  public class Tst {     public static void main(String... args) {         ApplicationContext ac = new AnnotationConfigApplicationContext(""tst"");         ac.getBean(Publisher.class).publish(""xyz"");     } } ``` Expected behaviour: When I run this application I expect the text `Payload: xyz` to appear  Actual behaviour: I got an exception when running the program. The output is: ``` xxxx org.springframework.context.support.AbstractApplicationContext prepareRefresh INFO: Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1e80bfe8: startup date [xxxx]; root of context hierarchy Exception in thread ""main"" java.lang.IllegalStateException: argument type mismatch HandlerMethod details: Bean [tst.Listener] Method [public void tst.Listener.onEvent(tst.Auditable)] Resolved arguments: [0] [type=java.lang.String] [value=text]          at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:265)         at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:180)         at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)         at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)         at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)         at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)         at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:400)         at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:354)         at tst.Publisher.publish(Publisher.java:17)         at tst.Tst.main(Tst.java:10) Caused by: java.lang.IllegalArgumentException: argument type mismatch         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)         at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)         at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)         at java.lang.reflect.Method.invoke(Unknown Source)         at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:261)         ... 9 more ``` The root cause of the problem is found in:     `org.springframework.context.event.ApplicationListenerMethodAdapter::resolveArguments(ApplicationEvent event)` Explanation: as the documentation states: this method resolves the arguments to pass to the event listener. It does do so using the following statement: (line 206..212)  	if ((eventClass == null || !ApplicationEvent.class.isAssignableFrom(eventClass)) && 			event instanceof PayloadApplicationEvent) { 		return new Object[] {((PayloadApplicationEvent) event).getPayload()}; 	} 	else { 		return new Object[] {event}; 	}  In this application the relevant state: Class eventClass = the interface Auditable ApplicationEvent event = the instance of MyEventClass with the String ""xyz"" as payload  Since the if condition holds the method returns the payload. But the payload is a String and not an Auditable and the actual call will have the wrong argument.  Possible solution: The condition should fail when the event can be casted to the eventClass. (To keep it 'almost' backwards compatible one could also check that the eventclass is an interface)  For the time being there is also a workaround by rewriting the EventClass: ```java public class MyEventClass extends ApplicationEvent implements Auditable, ResolvableTypeProvider {     private final GT payload;     public MyEventClass(Object source, GT payload) {         super(source);         this.payload = payload;     }     public String toString() {         return ""Payload: ""+getPayload();     }     public GT getPayload() {         return this.payload;     }     @Override     public ResolvableType getResolvableType() {         return ResolvableType.forClassWithGenerics(getClass(), ResolvableType.forInstance(getPayload()));     } } ``` This works because: - The ResolvableTypeProvider (implemented by PayloadApplicationEvent) is still implemented. - The condition fails because the event no longer is an instance of the PayloadApplicationEvent","closed","type: bug,","xfredk","2019-02-18T12:04:20Z","2019-02-25T17:28:56Z"
"","22806","Create RSocketRequesterBuilder in spring-messaging","Spring Messaging currently provides an `RSocketRequester` that takes a raw `RSocket` and codec strategies.  We should add a `RSocketRequestBuilder` so as to help developers build the `RSocketRequester` and customize the underlying `RSocket`. This builder could be auto-configured in Spring Boot and injected in application components.","closed","type: enhancement,","bclozel","2019-04-16T12:43:41Z","2019-04-23T13:00:34Z"
"","22716","API to check architecture","Spring is often used to write **large** applications. In large applications a good architecture is important. I propose an API to check the architecture of an Spring project: -  Are beans not directly, but via interfaces injected in other beans ? -  Are repository beans only injected in service beans, not directly in controller beans ? - Do beans have package visibility so that they are invisble in other layers ? -  ...  These classes can be used in integrations tests.  I imagine an API like this: First, you need a class to look up the beans you want to inspect: ``` public class BeanFinder { 	public static ArchitectureAssertions beans(Class ... classes) { 		... 	} 	public static ArchitectureAssertions beansInPackage(String packageName) { 		... 	} 	public static ArchitectureAssertions beansInSamePackageAs(Class clazz) { 		... 	}	 } ```  Next, ArchitectureAssertions contains methods to check the architecture: ``` public interface ArchitectureAssertions { 	public boolean havePackageVisibility(); 	public boolean containOnlyBeansInjectedViaInterfaces(); 	public boolean areOnlyViaInterfacesInjectedInOtherBeans(); 	public boolean areOnlyInjectedInBeans(Class ... classes); 	public boolean areOnlyInjectedInBeansInPackage (String packageName); 	public boolean areOnlyInjectedInBeansInSamenPackageAs(Class clazz); 	public boolean areNotInjectedInBeans(Class ... classes); 	public boolean areNotInjectedInBeansInPackage (String packageName); 	public boolean areNotInjectedInBeansInSamenPackageAs(Class clazz); 	public boolean haveNoDirectDependenciesOnBeans(Class clazz); 	public boolean haveNoDirectDependenciesOnBeansInPackage(String packageName); 	public boolean haveNoDirectDependenciesOnBeansInSamePackageAs(Class clazz); 	public boolean haveOnlyDependenciesOnBeans(Class clazz); 	public boolean haveOnlyDependenciesOnBeansInPackage(String packageName); 	public boolean haveOnlyDependenciesOnBeansInSamePackageAs(Class clazz);	 } ``` Examples of using this API in an integration test: ```  assertTrue(beans(ClientService.class, ProductService.class).havePackageVisibility()); assertTrue(beansInPackage(""org.example.app.services"").areOnlyViaInterfacesInjectedInOtherBeans()); assertTrue(beansInSamePackageAs(ClientController.class).haveOnlyDependenciesOnBeansInSamePackageAs(ClientService.class)); ```","closed","in: core,","desmethans","2019-04-01T09:40:43Z","2019-04-02T07:59:45Z"
"","22757","Install jmxremote_optional.jar in Java 8 JVM used for Spring performance builds","Spring Framework nightly performance builds are [failing](https://build.spring.io/browse/SPR-PERF-JOB1-1604/test/case/119934393) since the `jmxmp` protocol is not available by default.  For details on what needs to be done, see gh-15289.","closed","type: task,","sbrannen","2019-04-07T11:19:36Z","2019-04-08T11:16:16Z"
"","22460","Ubuntu tomcat 9 application configuration file location?","Spring Boot v2.1.2.RELEASE, Spring v5.1.4.RELEASE tomcat 9.0.16 Ubuntu 18.10 Where is the location of application configuration yaml for spring-boot and tomcat started with systemctl? Thanks!","closed","for: stackoverflow,","khteh","2019-02-23T13:53:57Z","2019-02-23T14:13:38Z"
"","22808","Consider adding @Delimiter support to String converters","Spring Boot currently includes a [DelimitedStringToArrayConverter](https://github.com/spring-projects/spring-boot/blob/v2.1.4.RELEASE/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/convert/DelimitedStringToArrayConverter.java) and [DelimitedStringToCollectionConverter](https://github.com/spring-projects/spring-boot/blob/v2.1.4.RELEASE/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/convert/DelimitedStringToCollectionConverter.java) which allows a `@Delimiter` annotation to be used to control how Strings are converted.  This functionality [is quite useful](https://github.com/spring-projects/spring-boot/issues/15019#issuecomment-457173107) and it might be a good candidate to port to Spring Framework. AFICT we can rework the existing String converters to support it in a back compatible manner.","open","in: core,","philwebb","2019-04-17T02:23:23Z","2022-06-21T11:21:06Z"
"","22269","Use try-with-resources in Spring 5 documentations","Spring 5 supports JDK 8+, so it is much better to change the sample codes to Java 7 try-with-resources instead of old fashion style.  For example in [4.4.2. Implementing DAOs Based on JPA: EntityManagerFactory and EntityManager](https://docs.spring.io/spring/docs/5.1.3.RELEASE/spring-framework-reference/data-access.html#orm-jpa-dao) there exists following code  ``` EntityManager em = this.emf.createEntityManager(); try {     Query query = em.createQuery(""from Product as p where p.category = ?1"");     query.setParameter(1, category);     return query.getResultList(); } finally {     if (em != null) {         em.close();     } } ``` which could be replaced with ``` try(EntityManager em = this.emf.createEntityManager()) {     Query query = em.createQuery(""from Product as p where p.category = ?1"");     query.setParameter(1, category);     return query.getResultList(); } ``` The same thing applies to OXM samples, and many more.","closed","type: documentation,","pashazadeh","2019-01-16T17:08:25Z","2019-01-17T17:59:19Z"
"","22790","Serve gzipped WebJar resouces","Some webjars (e.g. `org.webjars:bootstrap:4.3.1`) come with pre-compressed resources. If available, and the request has `Accept-Encoding: gzip`, these should be served rather than compressing the regular resource on the fly.","closed","","OrangeDog","2019-04-12T10:13:05Z","2021-01-08T13:09:07Z"
"","22579","Cache BridgeMethodResolver results","Some analysis shows that it's quite common for the `BridgeMethodResolver` to be asked about the same method multiple times. Although not massively expensive (since we already lean on existing method and resolvable type caches), there is still some overhead with these calls. Given the relatively small number of bridge methods, it might be worth adding a cache for the results.","closed","type: enhancement,","philwebb","2019-03-13T03:43:58Z","2019-03-23T18:39:24Z"
"","22244","Add option for AbstractRequestLoggingFilter to blacklist certain headers","So issue [SPR-14245](https://github.com/spring-projects/spring-framework/issues/18818) requested the ability to log all headers coming in with a request be added to AbstractRequestLoggingFilter.  There are sometime headers that it would be beneficial not to log. Such as Authorization headers containing jwt tokens.  It would be useful to be able to provide a blacklist of some headers which are then not appended to the log message builder.","closed","type: enhancement,","OhDearMoshe","2019-01-12T10:10:49Z","2019-03-12T21:06:34Z"
"","22590","Reactive transaction management support","Since we have two cases in Spring Data already where transactions are supported with reactive drivers - namely for MongoDB and R2DBC -, let's revisit our core transaction management abstraction and our `@Transactional` support for reactive scenarios.  The transaction interceptor could automatically detect reactive scenarios through a `Publisher` return type from the method it is supposed to proxy and automatically go through a reactive transaction management SPI in that case. Such an SPI has been prototyped for MongoDB and R2DBC already, so it's mostly a matter of rolling it into Spring Framework proper.  Configuration-wise, the existing transaction configuration elements would largely still apply, just pointing to a reactive transaction manager implementation instead of a classic `PlatformTransactionManager`.","closed","type: enhancement,","jhoeller","2019-03-13T16:49:26Z","2019-11-04T12:46:15Z"
"","22574","Introduce @SingletonScope and @PrototypeScope composed annotations","Since there are already: @ApplicationScope, @RequestScope and @SessionScope ([here](https://github.com/spring-projects/spring-framework/tree/master/spring-web/src/main/java/org/springframework/web/context/annotation)). In order to be consistent, I guess it would be nice to include this 2 core annotations?","closed","type: enhancement,","bojanv55","2019-03-12T09:45:16Z","2019-03-12T19:01:46Z"
"","22308","Upgrade to JUnit Jupiter 5.4","Since JUnit 5.4 RC1 is out now, let's do an early upgrade on master within this ticket, eventually closing it once JUnit 5.4 has gone GA.","closed","type: dependency-upgrade,","jhoeller","2019-01-25T14:03:01Z","2019-06-19T19:39:58Z"
"","22695","TypeDescriptor throws NPE due to because AnnotatedElement proxy is not cloning arrays","Similar to #22655, the `TypeDescriptor.AnnotatedElementAdapter` class does not defensively clone the returned array. This means that second calls can result in the following NPE:  ``` Caused by: java.lang.NullPointerException 	at org.springframework.core.convert.TypeDescriptor.annotationEquals(TypeDescriptor.java:502) 	at org.springframework.core.convert.TypeDescriptor.annotationsMatch(TypeDescriptor.java:492) 	at org.springframework.core.convert.TypeDescriptor.equals(TypeDescriptor.java:466) 	at org.springframework.core.convert.support.GenericConversionService$ConverterCacheKey.equals(GenericConversionService.java:470) 	at org.springframework.util.ObjectUtils.nullSafeEquals(ObjectUtils.java:325) 	at org.springframework.util.ConcurrentReferenceHashMap$Segment.findInChain(ConcurrentReferenceHashMap.java:648) 	at org.springframework.util.ConcurrentReferenceHashMap$Segment.getReference(ConcurrentReferenceHashMap.java:504) 	at org.springframework.util.ConcurrentReferenceHashMap.getReference(ConcurrentReferenceHashMap.java:265) 	at org.springframework.util.ConcurrentReferenceHashMap.get(ConcurrentReferenceHashMap.java:235) 	at org.springframework.core.convert.support.GenericConversionService.getConverter(GenericConversionService.java:255) 	at org.springframework.core.convert.support.GenericConversionService.canConvert(GenericConversionService.java:145) 	at org.springframework.boot.context.properties.bind.BindConverter$TypeConverterConversionService.canConvert(BindConverter.java:211) 	at org.springframework.boot.context.properties.bind.BindConverter$CompositeConversionService.convert(BindConverter.java:170) 	at org.springframework.boot.context.properties.bind.BindConverter.convert(BindConverter.java:98) 	at org.springframework.boot.context.properties.bind.BindConverter.convert(BindConverter.java:90) 	at org.springframework.boot.context.properties.bind.Binder.handleBindResult(Binder.java:234) 	at org.springframework.boot.context.properties.bind.Binder.bind(Binder.java:223) ```  The arrays is also returned from the public `getAnnotations()` and `getDeclaredAnnotations()` methods.","closed","in: core,","philwebb","2019-03-27T20:17:25Z","2019-03-27T20:51:34Z"
"","22754","More leaks related to Mono.just(dataBuffer) or Flux.just(dataBuffer)","Similar to #22107 but in areas other than codecs:  * FreeMarkerView * ScriptTemplateView  Thanks to @mp911de for pointing out `FreemarkerView`.","closed","type: bug,","rstoyanchev","2019-04-05T21:21:44Z","2019-04-06T01:55:08Z"
"","22780","Add coroutines support to RSocket @MessageMapping and RSocketRequester","Should be straightforward and consistent with what has been done on WebFlux side via #19975.","closed","type: enhancement,","sdeleuze","2019-04-10T14:01:19Z","2019-04-30T13:50:38Z"
"","2023","XpathResultMatcher supports Hamcrest Matcher NodeList","See SPR-17529 XpathResultMatchers to support Hamcrest Matcher","closed","type: enhancement,","yantantether","2018-11-22T19:15:59Z","2019-11-11T15:05:27Z"
"","22305","Fix Versions Wiki page to point to GH issues instead of JIRA","See https://github.com/spring-projects/spring-framework/wiki/Spring-Framework-Versions","closed","type: task,","artembilan","2019-01-24T18:32:01Z","2019-01-24T19:46:11Z"
"","22794","Misleading comment in AbstractHandlerExceptionResolver","See https://github.com/spring-projects/spring-boot/issues/16558 for background.  The `AbstractHandlerExceptionResolver` contains this comment in `resolveException`:  ```java // warnLogger with full stack trace (requires explicit config) logException(ex, request); ```  Unfortunately since a08c9f3137d114bbdd0cdb2800024d45a6a21e3a (for #17691) this is no longer the case.","closed","type: task,","philwebb","2019-04-14T19:17:56Z","2019-04-30T16:56:54Z"
"","22546","Enhance support for java.time types in spring-web","see also #22545 and #22103","closed","type: enhancement,","larsgrefer","2019-03-08T13:32:21Z","2019-04-02T14:50:50Z"
"","22301","Add @Transactional option to rollback on exception only if it's a new transaction","Scenario: There's a transactional method A with REQUIRED propagation. When a consumer B calls A with an existing transaction and an exception is thrown by A, B should be able to choose whether to fail or, to catch the exception, fix the problem and continue without rolling-back. When A is called without an existing transaction, it (its interceptor) will start a new one. If it throws an exception later, the transaction should be rolled-back.  I think an option could be added to rollback only if exception is thrown across the boundary where the transaction is started/ended.","closed","status: declined,","leonshaw","2019-01-24T03:59:34Z","2019-01-24T15:26:12Z"
"","22804","Make inner classes static where possible","Rid a reference to outer class from where it's not required.","closed","in: core,","stsypanov","2019-04-16T12:01:53Z","2019-05-16T19:44:01Z"
"","22478","Last-Modified Date format changed with SPR-17571 to not have double digit day","RFC-7231 shows preferred date format to include a double digit, rather than single digit day: https://tools.ietf.org/html/rfc7231#section-7.1.1.1  RFC-1123, which uses RFC-822 allows for both single and double digit days: https://tools.ietf.org/html/rfc822#section-5  SPR-17571 changed from using a specified format to using the JDK's DateTimeFormatter which allows for 1 or 2 digit days: https://github.com/frohoff/jdk8u-dev-jdk/blob/da0da73ab82ed714dc5be94acd2f0d00fbdfe2e9/src/share/classes/java/time/format/DateTimeFormatter.java#L1247  Many existing date parsers are expecting date formats based on the HTTP 1.1 spec that specifies double digit days, not the RFC-822 spec which allows for either. So many applications started complaining about date parsing when Last-Modified started coming back in this format:  Last-Modified: Tue, 5 Feb 2019 14:36:47 GMT  Additionally, sites like the Mozilla Developer Network specify a two digit day: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Last-Modified    Should we expect Spring to follow RFC-7231 section 7.1.1.1 in this case or RFC-822? Was this a conscious decision?","closed","type: regression,","nwong-blz","2019-02-27T00:18:02Z","2019-03-21T18:19:29Z"
"","22802","ResponseBodyAdvice If you capture everything","Returning null in version 5.1.6 can't be captured. How can I get all the information correctly?","closed","status: feedback-reminder,","maojx0630","2019-04-16T04:00:01Z","2019-04-25T06:07:01Z"
"","2031","Typo in javadoc","Response status 415 (unsupported media type) reported as of 416 (which is Range Not Satisfiable), mismatching with superclass constructor parameter `HttpStatus.UNSUPPORTED_MEDIA_TYPE`","closed","","fkomauli","2018-11-29T14:13:46Z","2018-11-29T15:36:59Z"
"","22350","Add List-based constructor to Jackson encoder/decoder","Resolves #22349.","closed","status: invalid,","gregturn","2019-02-05T17:07:43Z","2019-02-05T18:56:08Z"
"","22781","Polish BeanDefinitionVisitor","Remove unnecessary 'String.equals()' call. Remove unnecessary local variables.","closed","status: declined,","rupertw","2019-04-10T14:05:55Z","2019-04-10T14:47:19Z"
"","22463","Fix formatting","Remove all redundant spaces. Prefix the opening brace with a single space. Also fix some other trivial errors.","closed","type: task,","rupertw","2019-02-24T10:45:22Z","2019-02-25T13:09:04Z"
"","22654","Regression in merged annotation resolution","Related to #22586.  Merged annotations used as meta annotations seems to no longer resolve attributes. Simplified test below passes for 5.1.5.RELEASE and fails for current 5.2.0.BUILD-SNAPSHOT.   *Result for 5.1.5*: `BaseAnnotation(name=custom-name, val1=true)` *Result for 5.2.0*: `BaseAnnotation(name=base-name, val1=false)`  ```java @Test public void resolveWithCustomAnnotationUsingComposedAnnotationAsMeta() {    java.lang.reflect.Field field = ReflectionUtils.findField(Sample.class,       it -> it.getName().equals(""value""));    BaseAnnotation annotation = AnnotatedElementUtils.findMergedAnnotation(field, BaseAnnotation.class);    assertThat(annotation.name()).isEqualTo(""custom-name"");   assertThat(annotation.val1()).isTrue(); }  static class Sample {    @CustomAnnotationWithComposedMeta    String value; }  @Retention(RetentionPolicy.RUNTIME) @Target({ ElementType.ANNOTATION_TYPE, ElementType.FIELD }) @interface BaseAnnotation {    String name() default ""base-name"";   boolean val1() default false; }  @Retention(RetentionPolicy.RUNTIME) @Target({ ElementType.ANNOTATION_TYPE, ElementType.FIELD }) @BaseAnnotation @interface ComposedAnnotation {    @AliasFor(annotation = BaseAnnotation.class, attribute = ""name"")   String customName() default ""composed-name"";    @AliasFor(annotation = BaseAnnotation.class, attribute = ""val1"")   boolean foo() default false; }   @Retention(RetentionPolicy.RUNTIME) @Target({ ElementType.FIELD }) @ComposedAnnotation(customName = ""custom-name"", foo = true) @interface CustomAnnotationWithComposedMeta {} ```","closed","in: core,","christophstrobl","2019-03-25T13:14:20Z","2019-03-26T00:35:43Z"
"","22562","Migrate existing AnnotationUtils and AnnotatedElementUtils to use new MergedAnnotations API","Rather than having two different implementations for managing merged annotations, we should consider migrating our existing `AnnotationUtils` and `AnnotatedElementUtils` classes to the `MergedAnnotations` API being developed in #21697","closed","in: core,","philwebb","2019-03-11T21:44:19Z","2019-03-23T18:37:10Z"
"","1996","Adds isNotEmpty to StringUtils","Quite a few times, the code is execution when the string value exists. In such cases, we always check `StringUtils.isEmpty(str)` and then negate it like below.  ``` if (!StringUtils.isEmpty(str)) {    .... } ```  Having a `StringUtils.isNotEmpty()` would simplify the code readability and also chances of somebody ignore the `!` mark.","closed","","divinedragon","2018-10-19T09:48:54Z","2018-10-19T11:32:41Z"
"","22392","Fix for ScriptUtils failure when '--' occurs inside a multi-line comment on the same line as '*/'","Pull request against issue #22388","closed","type: enhancement,","mmustaquim","2019-02-08T15:14:53Z","2021-10-08T20:08:45Z"
"","22571","4.3.x","pull","closed","","coderGJ","2019-03-12T01:07:50Z","2022-02-18T19:10:03Z"
"","2007","3.2.x","pull","closed","","381885230","2018-11-03T14:08:14Z","2018-11-03T14:17:40Z"
"","22280","Clarify documentation about Spring MVC views rendered with Jackson versus @JsonView","Provide some samples for [1.9.9. Jackson](https://docs.spring.io/spring/docs/5.1.4.RELEASE/spring-framework-reference/web.html#mvc-view-jackson) in documentations.  New view technologies (such as Anguler and React.js) motivate using Jackson JSON views more frequently, I believe this part needs some samples for advanced configurations, and what is described in [Jackson-based JSON Views](https://docs.spring.io/spring/docs/5.1.4.RELEASE/spring-framework-reference/web.html#mvc-view-json-mapping).","closed","type: documentation,","pashazadeh","2019-01-19T16:43:16Z","2019-01-22T10:00:21Z"
"","22341","Avoid java.util.stream.Stream usage in hot paths","Profiling sessions show that using `java.util.stream.Stream` in some hot paths is not really required and creates a lot of garbage, because those are likely to be called once or multiple times per request.  We should reconsider those and rewrite them with imperative style where possible.","closed","type: task,","bclozel","2019-02-04T10:09:41Z","2019-02-05T11:19:34Z"
"","22396","Update HTTP status code for PRECONDITION_FAILED","PRECONDITION_FAILED is 412 https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/412 And I think it is code typo instead of description typo. I am backed by this piece of code in ServletWebRequest.java:   https://github.com/spring-projects/spring-framework/blob/f7e53a071b8613ce9312d282770b29211da219b7/spring-web/src/main/java/org/springframework/web/context/request/ServletWebRequest.java#L243","closed","type: task,","mhewedy","2019-02-10T11:23:37Z","2019-11-08T17:55:51Z"
"","2021","Add support for scalable BeanFactory","PR for #22060 (SPR-17528)","closed","type: enhancement,","rahulsh1","2018-11-21T21:29:09Z","2022-01-18T10:51:09Z"
"","22326","Consider updating the default Hibernate dialect for MySQL databases","Please consider updating the default Hibernate dialect for MySQL databases.  `org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter#determineDatabaseDialectClass` currently returns `org.hibernate.dialect.MySQL5Dialect` for MySQL databases, while the following newer versions are available:  - `org.hibernate.dialect.MySQL55Dialect` (MySQL 5.5 was first released in 2010) - `org.hibernate.dialect.MySQL57Dialect` (MySQL 5.7 was first released in 2014) - `org.hibernate.dialect.MySQL8Dialect` (MySQL 8.0 was first released in 2018)  As you can see, the default dialect selected by Spring Framework 5.1.3 targets a MySQL version which is over 9 years old. Therefore I propose to update the default dialect for MySQL.  ## Background  We're running a Spring Boot 2.1.2 application on MySQL 8 which leads to SQL errors when using the default dialect selected by Spring. Manually updating the dialect to at least `MySQL55Dialect` resolves these issues.  This is the line in question: https://github.com/spring-projects/spring-framework/blob/7a77e83e1099d29fd68f1f0a94216bb1e3d5cec7/spring-orm/src/main/java/org/springframework/orm/jpa/vendor/HibernateJpaVendorAdapter.java#L192","closed","type: enhancement,","larsgrefer","2019-01-31T11:43:31Z","2020-08-05T12:15:06Z"
"","2003","SPR-16198: Support @ModelAttribute dependencies","Pending CLA signoff.","closed","status: declined,","Anusien","2018-10-30T21:33:25Z","2019-01-29T17:59:39Z"
"","22690","spring webflux with undertow cause org.xnio.channels.FixedLengthOverflowException on benchmark","OS:mac os 10.13.6 JDK:11.0.2 x64   Hello  I want to try using the spring webflux, so I did some tests comparing different containers when I made a mistake when using the spring webflux with undertow  ``` 2019-03-27 19:23:10.290 ERROR 923 --- [   XNIO-1 I/O-8] o.s.w.s.adapter.HttpWebHandlerAdapter    : [7758abf3] Error [java.lang.UnsupportedOperationException] for HTTP GET ""/test"", but ServerHttpResponse already committed (200 OK) org.xnio.channels.FixedLengthOverflowException 	at io.undertow.conduits.AbstractFixedLengthStreamSinkConduit.write(AbstractFixedLengthStreamSinkConduit.java:100) 	at org.xnio.conduits.ConduitStreamSinkChannel.write(ConduitStreamSinkChannel.java:150) 	at io.undertow.channels.DetachableStreamSinkChannel.write(DetachableStreamSinkChannel.java:240) 	at io.undertow.server.HttpServerExchange$WriteDispatchChannel.write(HttpServerExchange.java:2103) 	at org.springframework.http.server.reactive.UndertowServerHttpResponse$ResponseBodyProcessor.writeByteBuffer(UndertowServerHttpResponse.java:217) 	at org.springframework.http.server.reactive.UndertowServerHttpResponse$ResponseBodyProcessor.write(UndertowServerHttpResponse.java:193) 	at org.springframework.http.server.reactive.UndertowServerHttpResponse$ResponseBodyProcessor.write(UndertowServerHttpResponse.java:153) 	at org.springframework.http.server.reactive.AbstractListenerWriteProcessor$State$3.onWritePossible(AbstractListenerWriteProcessor.java:353) 	at org.springframework.http.server.reactive.AbstractListenerWriteProcessor.onWritePossible(AbstractListenerWriteProcessor.java:143) 	at org.springframework.http.server.reactive.AbstractListenerWriteProcessor.writeIfPossible(AbstractListenerWriteProcessor.java:282) 	at org.springframework.http.server.reactive.AbstractListenerWriteProcessor.changeStateToReceived(AbstractListenerWriteProcessor.java:261) 	at org.springframework.http.server.reactive.AbstractListenerWriteProcessor.access$300(AbstractListenerWriteProcessor.java:45) 	at org.springframework.http.server.reactive.AbstractListenerWriteProcessor$State$2.onNext(AbstractListenerWriteProcessor.java:336) 	at org.springframework.http.server.reactive.AbstractListenerWriteProcessor.onNext(AbstractListenerWriteProcessor.java:107) 	at org.springframework.http.server.reactive.ChannelSendOperator$WriteBarrier.emitCachedSignals(ChannelSendOperator.java:283) 	at org.springframework.http.server.reactive.ChannelSendOperator$WriteBarrier.request(ChannelSendOperator.java:265) 	at org.springframework.http.server.reactive.AbstractListenerWriteProcessor$State$3.onWritePossible(AbstractListenerWriteProcessor.java:362) 	at org.springframework.http.server.reactive.AbstractListenerWriteProcessor.onWritePossible(AbstractListenerWriteProcessor.java:143) 	at org.springframework.http.server.reactive.UndertowServerHttpResponse$ResponseBodyProcessor.lambda$new$0(UndertowServerHttpResponse.java:170) 	at org.xnio.ChannelListeners.invokeChannelListener(ChannelListeners.java:92) 	at io.undertow.channels.DetachableStreamSinkChannel$SetterDelegatingListener.handleEvent(DetachableStreamSinkChannel.java:285) 	at io.undertow.channels.DetachableStreamSinkChannel$SetterDelegatingListener.handleEvent(DetachableStreamSinkChannel.java:272) 	at org.xnio.ChannelListeners.invokeChannelListener(ChannelListeners.java:92) 	at org.xnio.conduits.WriteReadyHandler$ChannelListenerHandler.writeReady(WriteReadyHandler.java:65) 	at org.xnio.nio.NioSocketConduit.handleReady(NioSocketConduit.java:93) 	at org.xnio.nio.WorkerThread.run(WorkerThread.java:561) 2019-03-27 19:23:10.361 ERROR 923 --- [   XNIO-1 I/O-8] o.s.w.s.adapter.HttpWebHandlerAdapter    : [5a32eeb7] Error [java.lang.UnsupportedOperationException] for HTTP GET ""/test"", but ServerHttpResponse already committed (200 OK) ```  Reproduction steps: Repository: https://github.com/UserTerry/spring-webflux-with-undertow","closed","status: duplicate,","ghost","2019-03-27T11:46:48Z","2019-09-11T11:05:51Z"
"","22357","Adding @ModelAttribute is breaking Flux request body","On a controller method that processes `multipart/form-data` with `Flux`, adding a `@ModelAttribute` results in a `Request body input error` error (which wraps an `Only one connection receive subscriber allowed.` error).  Controller:  ```kotlin @RestController class DemoController {     @PostMapping(""/working"")     fun working(@RequestBody body: Flux): Flux = body.map { it.name() + ""\n"" }      @PostMapping(""/not-working"")     fun notWorking(@ModelAttribute foo: String, @RequestBody body: Flux): Flux = body.map { it.name() + ""\n"" } } ```  Making the request with curl:  ```bash curl -i -X POST http://localhost:8080/working --form 'name=@/path/to/some/file' curl -i -X POST http://localhost:8080/not-working --form 'name=@/path/to/some/file' ```  Output:  ``` HTTP/1.1 100 Continue  HTTP/1.1 200 OK transfer-encoding: chunked Content-Type: text/plain;charset=UTF-8  name ```  ``` HTTP/1.1 100 Continue  HTTP/1.1 100 Continue  HTTP/1.1 500 Internal Server Error Content-Type: application/json;charset=UTF-8 Content-Length: 148  {""timestamp"":""2019-02-06T11:03:12.242+0000"",""path"":""/not-working"",""status"":500,""error"":""Internal Server Error"",""message"":""Request body input error""} ```","closed","status: invalid,","lukasjapan","2019-02-06T11:11:07Z","2019-02-07T17:16:51Z"
"","22702","AnnotationUtils.findAnnotation(Method method) broken for repeatable anns","On 5.2.0.BUILD-SNAPSHOT.  Previously...  ```java 	private Collection findListenerAnnotations(Method method) { 		Set listeners = new HashSet(); 		RabbitListener ann = AnnotationUtils.findAnnotation(method, RabbitListener.class); 		if (ann != null) { 			listeners.add(ann); 		} 		RabbitListeners anns = AnnotationUtils.findAnnotation(method, RabbitListeners.class); 		if (anns != null) { 			Collections.addAll(listeners, anns.value()); 		} 		return listeners; 	} ```  and  ```java 	@Component 	static class RabbitListenersBean {  		@RabbitListeners({ 				@RabbitListener(id = ""first"", queues = ""myQueue""), 				@RabbitListener(id = ""second"", queues = ""anotherQueue"") 		}) 		public void repeatableHandle(String msg) { 		}  	} ```  Returned null for the first call and and found the container for the second call.  With the current snapshot, the first call now returns just the first ""child"" annotation.","closed","in: core,","garyrussell","2019-03-28T17:01:18Z","2019-03-28T21:40:28Z"
"","2062","Fix typo in data-access.adoc","Obvious Fix.","closed","","chendy560","2018-12-26T13:49:44Z","2018-12-26T14:08:57Z"
"","2044","Fix typo in core-validation.adoc","Obvious Fix.","closed","","chendy560","2018-12-08T12:43:03Z","2018-12-08T15:04:23Z"
"","2043","Fix typo in webflux.adoc","Obvious Fix.","closed","","marchpig","2018-12-08T11:45:34Z","2018-12-08T15:02:45Z"
"","2046","Fix typo in websocket.adoc","Obvious Fix typo from '@MessageMapping(""erd"")' to '@MessageMapping(""red"")'","closed","","yepapa","2018-12-08T13:57:03Z","2018-12-08T15:02:38Z"
"","22419","Fixed typo in RouterFunctionDsl doc","Obvious Fix","closed","type: task,","rs017991","2019-02-15T15:09:53Z","2019-02-17T09:41:22Z"
"","2047","Fix typo and format in core-validation.adoc","Obvious Fix","closed","","chendy560","2018-12-09T08:22:36Z","2018-12-26T13:48:06Z"
"","22578","Programmatic annotation presence registry (allowing for index integration)","Now that #22420 we have a central location that we can use to investigate if an annotation index can be used to limit the number of methods we need to search.","open","type: enhancement,","philwebb","2019-03-13T00:51:56Z","2020-10-23T07:20:27Z"
"","22243","Implement CDI 2.0 in Spring To Make Integration With New Jakarata EE Projects Easy","Now Java EE is rebranded as Jakarta EE i.e is More Open Source. Its going to add many new projects fast which will be cloud native and will be build on top of CDI. First One In the Bucket is JNoSQL. http://www.jnosql.org/ We want the integration of all these new Projects with Spring. So now its required for Spring to implement CDI 2.0 and make Spring as one of the Vendor implementing CDI 2.0 so all these new projects comming under Jakrata EE can be easily integrated with Spring. This will enhance the Scope of Spring, Many part of CDI already work with Spring like `@Inject` `@Naming`, so will require some more work.  This will also end the long controversy happened between SpringSource, Google(Guice) and Oracle because of CDI specification.","closed","","ankurpathak","2019-01-12T05:07:22Z","2021-01-08T13:09:28Z"
"","4734","No-arg constructor of Jackson2JsonEncoder/Decoder not using Spring configured Jackson2ObjectMapperBuilder","Noticing that by default, [Jackson2JsonEncoder/Decoder](https://github.com/spring-projects/spring-framework/blob/a89e716cc71a8741385a0224b5d7eb7ce009e11a/spring-web/src/main/java/org/springframework/http/codec/json/Jackson2JsonEncoder.java#L53) (as used by BaseDefaultCodecs) use new instances of Jackson2ObjectMapperBuilder (calling a static method on Jackson2ObjectMapperBuilder which in turn invokes the constructor) and not a bean. As a result, we miss any configuration done in org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration. In my case, I was using WebFlux, and was able to work around this by using a WebFluxConfigurer to create an encoder using the autowired ObjectMapper - though I would have expected using the configured builder to be the default. See also: https://stackoverflow.com/questions/43195987/configured-objectmapper-not-used-in-spring-boot-webflux  Would it make sense/be possible to have Jackson2JsonEncoder/Decoder use an injected Jackson2ObjectMapperBuilder  bean if it exists, and fallback to the static method if not?","closed","status: declined,","jrkhan","2019-01-10T19:49:18Z","2020-04-01T13:27:06Z"
"","2058","No need to assert `session!=null`, since `request.getSession()` alway…","No need to assert `session!=null`, since `request.getSession()` always return a no-null HttpSession","closed","","AsinRay","2018-12-18T10:16:23Z","2018-12-18T11:32:26Z"
"","22255","Allow NamedParameterJdbcTemplate to optionally include parameters in comments of SQL","NamedParameterJdbcTemplate skips parameters in comments by the logic in `NamedParameterUtils.parseSqlStatement(String sql)`  ```java ... 			int skipToPosition = i; 			while (i < statement.length) { 				skipToPosition = skipCommentsAndQuotes(statement, i); 				if (i == skipToPosition) { 					break; 				} 				else { 					i = skipToPosition; 				} 			}  ...  ```  I use NamedParameterJdbcTemplate to run SQLs on our own DBMS engine in the company. I have special cases to use parameters in comment, for example, ""/*@ queryCkey(:cafeId) */ SELECT ... "",  If it is allowed in NamedParameterJdbcTemplate, it will be very helpful for our system. ( For your information, MyBatis allows parameters in comments of SQL)  I'd like you to consider adding an optional flag to support this.  ```java var template = new NamedParameterJdbcTemplate(dataSource); template.setAllowParametersInComments(true); ```","open","in: data,","benelog","2019-01-15T03:19:44Z","2021-03-21T12:47:16Z"
"","2030","Clarify behaviour of AnnotationBeanNameGenerator with acronyms","Name transformation is delegated java.beans.Introspector#decapitalize. It says ""but in the (unusual) special  case when there is more than one character and both the first and second characters are upper case, we leave it alone."". It should be reflected in documentation","closed","in: core,","matips","2018-11-28T11:21:44Z","2021-11-24T15:30:26Z"
"","22699","problem for springweb","MyInterceptors  ```xml                                ```  HandlerExecutionChain.class  ```java boolean applyPreHandle(HttpServletRequest request, HttpServletResponse response) throws Exception { 		HandlerInterceptor[] interceptors = getInterceptors(); 		if (!ObjectUtils.isEmpty(interceptors)) { 			for (int i = 0; i < interceptors.length; i++) { 				HandlerInterceptor interceptor = interceptors[i]; 				if (!interceptor.preHandle(request, response, this.handler)) { 					triggerAfterCompletion(request, response, null); 					return false; 				} 				this.interceptorIndex = i; 			} 		} 		return true; 	} ``` While the interceptors  has two HandlerInterceptor,and the second HandlerInterceptor return false;  ```java void triggerAfterCompletion(HttpServletRequest request, HttpServletResponse response, @Nullable Exception ex) 			throws Exception {  		HandlerInterceptor[] interceptors = getInterceptors(); 		if (!ObjectUtils.isEmpty(interceptors)) { 			for (int i = this.interceptorIndex; i >= 0; i--) { 				HandlerInterceptor interceptor = interceptors[i]; 				try { 					interceptor.afterCompletion(request, response, this.handler, ex); 				} 				catch (Throwable ex2) { 					logger.error(""HandlerInterceptor.afterCompletion threw exception"", ex2); 				} 			} 		} 	}  ``` This method can't access the method of the second HandlerInterceptor's afterCompletion. Can someone tell me why?","closed","","cloudCool","2019-03-28T09:44:37Z","2019-04-04T00:07:13Z"
"","22455","Defining a bean that implements BeanFactoryPostProcessor via @Bean method will cause the Config Bean can't inject properties","My code example is as follows : ``` @Configuration public class TestConfig {     @Autowired     private Environment environment;          @Bean     public MapperScannerConfigurer mapperScannerConfigurer() {         MapperScannerConfigurer mapperScannerConfigurer = new MapperScannerConfigurer();         mapperScannerConfigurer.setBasePackage(""com.example.demomybatis"");         return mapperScannerConfigurer;     } } ``` The `MapperScannerConfigurer`  class implements `BeanFactoryPostProcessor`, so `TestConfig` must be instantiated before the BeanFactoryPostProcessor‘s `postProcessBeanFactory` method is called. In other words, when `TestConfig` is instantiated, it will miss all methods of the `BeanPostProcessor` implementation class. So `@Autowired` will fail in class TestConfig. Is this a problem?","closed","for: stackoverflow,","xiaoyaofawai","2019-02-22T07:05:37Z","2019-02-22T07:21:48Z"
"","22703","AnnotatedElementUtils.getMergedAnnotation does not merge deep value attributes correctly","Most likely related to the fix for #22654 we have another subtle regression when dealing with value attributes on meta meta-annotations.  The following test passes with 5.1 but fails with 5.2  ```java @Test public void testName() { 	ValueAttribute annotation = AnnotatedElementUtils 			.getMergedAnnotation(AnotherConfig.class, ValueAttribute.class); 	assertThat(annotation.value()).containsExactly(""FromAliasedValueAttributeMeta""); }  @Retention(RetentionPolicy.RUNTIME) static @interface ValueAttribute {  	String[] value();  }  @Retention(RetentionPolicy.RUNTIME) @ValueAttribute(""FromAliasedValueAttributeMeta"") static @interface AliasedValueAttributeMeta {  	@AliasFor(""alias"") 	String[] value() default {};  	@AliasFor(""value"") 	String[] alias() default {};  }  @Retention(RetentionPolicy.RUNTIME) @AliasedValueAttributeMeta(""FromAliasedValueAttributeMetaMeta"") static @interface AliasedValueAttributeMetaMeta {  }  @AliasedValueAttributeMetaMeta static class AnotherConfig {  } ```","closed","in: core,","philwebb","2019-03-28T18:25:53Z","2019-03-28T21:40:28Z"
"","2069","Extract Method::getParameterTypes out of the loop where possible","Method::getParameterTypes returns copy of Method.parameterTypes. Often this can be extracted out of the loop","closed","","stsypanov","2019-01-03T12:46:47Z","2019-01-14T10:30:13Z"
"","22778","Merge pull request #1 from spring-projects/master","merge new commit","closed","","xlj44400","2019-04-10T12:18:24Z","2022-02-18T19:10:10Z"
"","22439","Merge pull request #1 from spring-projects/master","merge from base forked","closed","","jacobzheng","2019-02-20T11:31:43Z","2019-02-20T11:32:00Z"
"","22438","Merge pull request #1 from spring-projects/master","merge from base forked","closed","","jacobzheng","2019-02-20T11:28:20Z","2019-02-20T11:28:53Z"
"","2035","Merge pull request #1 from spring-projects/master","merge from base forked","closed","","jacobzheng","2018-12-03T03:58:59Z","2018-12-03T07:35:51Z"
"","22312","Spring-Data- MongoDB MappingMongoConverter-- writeMapInternal() convertion issue with map value of Lists","Map is getting saved as as Map. Its Basically conversion issue with MAppingMongoConverter.writeMapInternal . While reading its throwing a conversion error like can't convert string to LocalDate.  Kindly suggest the workaround for this","closed","for: stackoverflow,","bsreddy125","2019-01-28T12:21:54Z","2019-01-28T13:20:38Z"
"","22485","Exclude jdk package in ShadowingClassLoader","Many Java 11 internal classes are located in the jdk package. ShadowingClassLoader should not load them, because it can cause errors, e.g. java.lang.IllegalAccessError: class jdk.internal.reflect.ConstructorAccessorImpl loaded by org.springframework.instrument.classloading.ShadowingClassLoader @2bea5ab4 cannot access jdk/internal/reflect superclass jdk.internal.reflect.MagicAccessorImpl","closed","type: enhancement,","pelladigabor","2019-02-27T14:17:02Z","2019-09-16T09:01:04Z"
"","22783","Consistently implement decodeToMono by joining buffers first","Many decoders extend `AbstractDataBufferDecoder` that implements `decodeToMono` by joining buffers and then delegating to sub-classes to decode a single `DataBuffer`. All decoders should do that consistently.  Protobuf does not extend this class but practically does the same so it can be refactored. Jackson and Jaxb2 could be changed to do this too instead of asynchronous parsing.","closed","type: enhancement,","rstoyanchev","2019-04-10T15:55:22Z","2019-04-11T23:04:16Z"
"","22241","Spring webflux WebClient HttpStatus::is4xxServerError","Manual at https://docs.spring.io/spring/docs/5.0.9.RELEASE/spring-framework-reference/web-reactive.html#webflux-client mentions this example code line:  .onStatus(HttpStatus::is4xxServerError, response -> ...)  But problem is is4xxServerError method not exist. Most similar method I found is is4xxClientError. But as 4xx error status returns by server, not by client this method name seems strange. Any way manual not fit with code","closed","type: documentation,","pavlomorozov","2019-01-11T18:06:28Z","2019-01-14T09:50:22Z"
"","2009","SPR-17458 Documentation explicit Executor usage on @Async section","Making more explicit the reference to the Executor usage for `@Async`.","closed","","dimitrisli","2018-11-04T21:24:19Z","2018-11-06T07:33:32Z"
"","22427","Mono context inside Mono methods like doOnSuccess(), doOnError(), retry(), etc is unavailable","Make those methods Mono context aware. Atm, it's possible to use doOnEach() to workaround the issue for doOnSuccess() and doOnError(). The result of logging in doOnSuccess() is different from logging in doOnEach(){if (signal.isOnComplete()){...}}. Looks like the time of executing those callbacks is different. So even this workaround is not quite good. Any available workaround for the retry() is unknown. The point of getting the context is to be able to log some unique request id in those methods if necessary.","closed","status: invalid,","igorewka","2019-02-18T15:13:22Z","2019-02-19T07:24:01Z"
"","1995","Update InvocableHandlerMethod.java","make getMethodArgumentValues from private to protected. I want to overwrite invokeForRequest to log the request param  response and processing time to the db but the method of getMethodArgumentValues is private so I want change it to protected","closed","","sheiy","2018-10-18T02:37:31Z","2018-10-18T14:13:44Z"
"","22360","Add constants for the Prefer and Preference-Applied HTTP headers defined in the RFC 7240","Looks like the [`HttpHeaders`][1] class doesn't support the [`Prefer`][3] and [`Preference-Applied`][4] HTTP headers defined in the [RFC 7240][2].  Once those headers are [registered in IANA][5], it would be great to have support for them.    [1]: https://docs.spring.io/spring-framework/docs/5.1.4.RELEASE/javadoc-api/org/springframework/http/HttpHeaders.html   [2]: https://tools.ietf.org/html/rfc7240   [3]: https://tools.ietf.org/html/rfc7240#section-2   [4]: https://tools.ietf.org/html/rfc7240#section-3   [5]: https://www.iana.org/assignments/message-headers","closed","status: declined,","cassiomolin","2019-02-06T15:20:28Z","2019-02-07T14:56:16Z"
"","22721","Failed to load ApplicationContext in kotlin when using inner class @Component inside @Configuration","kotlinVersion = ""1.3.21"" springBootVersion = '2.1.3.RELEASE'  Following code throws an exception breaking context setup:  ```kotlin import org.junit.jupiter.api.Test import org.springframework.beans.factory.annotation.Autowired import org.springframework.boot.SpringBootConfiguration import org.springframework.boot.test.context.SpringBootTest import org.springframework.context.annotation.ComponentScan import org.springframework.stereotype.Component  @SpringBootConfiguration @ComponentScan class MyConfig{     @Component     inner class BeanB {         fun print() {             println(""beanB"")         }     } }  @SpringBootTest class KotlinTest {     @Autowired     lateinit var beanB: MyConfig.BeanB      @Test     fun a() {         beanB.print()     } } ```  The error is:  ``` Error creating bean with name kotlin.MyConfig$BeanB' ... Caused by: java.lang.ArrayIndexOutOfBoundsException: 0 	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:705) ```  When translating and running the snippet on Java everything works as expected.","open","in: kotlin,","anton-kapelyushok","2019-04-01T14:50:03Z","2022-01-19T11:01:21Z"
"","22398","3.0.x","kkkkkkkkkkkkk","closed","status: invalid,","rpatibandla","2019-02-10T18:00:30Z","2019-02-10T19:11:27Z"
"","22315","Use for-each instead of counted loop when iterating over arrays","Just some cosmetic changes","closed","","stsypanov","2019-01-28T14:47:37Z","2022-02-18T19:11:11Z"
"","22657","Migrate AnnotationJmxAttributeSource to MergedAnnotations","Just like `AutowiredAnnotationBeanPostProcessor` and co, `AnnotationJmxAttributeSource` would benefit from using the new `MergedAnnotations` API directly.","closed","in: core,","jhoeller","2019-03-25T14:58:21Z","2019-03-27T11:06:37Z"
"","2017","Fixing typoes","Jim Showalter found two typoes in the web section. This PR fixes them. Thanks, Jim.","closed","","Buzzardo","2018-11-14T20:49:38Z","2018-11-14T21:10:19Z"
"","22249","Deprecate JibxMarshaller","Jibx' [source repo](https://github.com/jibx) has not been active for over two years as of January 2019. The project's issue tracker was hosted by the Codehaus, which went down over three years ago. Let's deprecate the `JibxMarshaller` because of this.","closed","type: enhancement,","poutsma","2019-01-14T09:32:25Z","2019-01-14T11:04:27Z"
"","22334","query(PSC, PSS RSE) missing from JdbcOperations","JdbcTemplate.query(PSC, PSS RSE) is the only public query method on JdbcTemplate that is not on JdbcOperations.","closed","","marschall","2019-02-02T17:11:12Z","2022-02-18T19:09:58Z"
"","22558","Wrong behavior in extended configuration class","I’ve tried to create a minimal example that demonstrates an application context behavior that surprises me.  Given are the following configuration classes: ```java class FirstServiceConfig {     @Value(""${firstServiceUrl:url1}"")     private String firstServiceUrl;      String getServiceUrl() {         return firstServiceUrl;     }      @Bean     Service firstService() {         return new Service(getServiceUrl());     } } ``` ```java class SecondServiceConfig extends FirstServiceConfig {     @Value(""${secondServiceUrl:url2}"")     private String secondServiceUrl;      @Override     String getServiceUrl() {         return secondServiceUrl;     }      @Bean     Service secondService() {         return new Service(getServiceUrl());     } } ``` ```java class Service {     private final String url;      Service(String url) {         this.url = url;     }      String getUrl() {         return url;     } } ```  The following example creates an application context and obtains both service beans: ```java AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(); context.register(FirstServiceConfig.class, SecondServiceConfig.class); context.refresh(); Service firstService = context.getBean(""firstService"", Service.class); Service secondService = context.getBean(""secondService"", Service.class); System.out.println(""firstService.url = "" + firstService.getUrl()); System.out.println(""secondService.url = "" + secondService.getUrl()); ```  I would expect the output ``` firstService.url = url1 firstService.url = url2 ```  However, the actual output is ``` firstService.url = url2 firstService.url = url2 ```  I can observe that behavior in various Spring versions: `4.3.5`, `5.0.0`, `5.1.5`  Interestingly, the behavior changes if the order of registration is changed: ```diff - context.register(FirstServiceConfig.class, SecondServiceConfig.class); + context.register(SecondServiceConfig.class, FirstServiceConfig.class); ```  Is this behavior a bug or a feature? :slightly_smiling_face:","closed","status: invalid,","bwaldvogel","2019-03-11T10:49:54Z","2019-03-11T20:11:43Z"
"","22424","are there APIs or documents about namespace of xml-based configuration?","it's useful and effective for me to use namespace in xml-based configurations, such as ""xmlns:context=""http://www.springframework.org/schema/context."""" However, I can't find the documents and APIs about them. are there APIs or documents specifically for them? Thanks.","closed","for: stackoverflow,","XSun771","2019-02-18T03:39:38Z","2019-02-18T07:47:55Z"
"","22738","Consider changes to MergedAnnotation.asMap","It's currently quite hard to convert a `MergedAnnotation` to an `AnnotationAttributes` instance. At one point early in the design we had a factory method on `AnnotationAttributes` that allowed it to be used with `asMap`:  ```java mergedAnnotation.asMap(AnnotationAttributes::ifPresent); ```  We removed that because it wasn't great having an `asMap` method that could return `null`.  Originally I didn't want to tie `MergedAnnotation` to `AnnotationAttributes` because I thought there was too much overlap. In hindsight, I'm not sure we can ever remove `AnnotationAttributes` so perhaps we should just embrace it and add an `asAnnotationAttributes` method. We could even drop `asMap` and the custom factory version which probably only exists to support `AnnotationAttributes`.  We should also reconsider the `MapValues` enum name. It's not that great.","closed","in: core,","philwebb","2019-04-04T15:07:08Z","2019-04-05T21:05:56Z"
"","22474","Add utility to parse Duration from a String","It would make sense to have a common utility to parse `java.time.Duration` from a `CharSequence`.  Examples: * `10ms` -> 10 milliseconds * `10s` -> 10 seconds * `10m` -> 10 minutes  * `10h` -> 10 hours  `ChronoUnit`s to support: * Nanos * Micros * Millis * Seconds * Minutes * Hours * Days  [Spring Boot](https://github.com/spring-projects/spring-boot/blob/master/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/convert/DurationStyle.java) provides this functionality and we'd like to reuse it in Spring Data.","open","type: enhancement,","mp911de","2019-02-26T10:01:20Z","2022-08-02T08:37:31Z"
"","22381","Consider adding support for chaining converters","It would be nice to have some support for chaining converters:  ```java public interface Converter { 	// ...  	default  Converter andThen(Converter andThen) { 		return source -> andThen.convert(this.convert(source)); 	} } ```  Then, a user could more easily compose them:  ```java Converter aToB = ...; Converter bToC = ...; Converter aToC = aToB.andThen(bToC); ```  This is a modest improvement on:  ```java Converter aToC = source -> bToC.convert(aToB.convert(source)); ```  in that code using `andThen` will read in the correct order, e.g. ""do A then B"" instead of ""B.do(A.do)"".  I'd be happy to submit a PR, if it's agreed that it's a reasonable improvement.","closed","status: superseded,","jzheaux","2019-02-07T19:20:58Z","2020-09-29T11:51:21Z"
"","22567","Use shared zero length arrays in ReflectionUtils","It would be more memory efficient if frequently called `ReflectionUtils` methods that return empty arrays used a shared static final instance rather than creating a new one each time.","closed","in: core,","philwebb","2019-03-11T22:56:48Z","2019-03-12T21:46:44Z"
"","22287","Fix truncation of response body in AbstractMessageConverterMethodProcessor","It seems to be minor mistakes from SPR-17254.  Second parameter of LogFormatUtils.formatValue is (boolean limitLength). It should be false at TRACE. So !traceOn is correct. Other code that call formatValue method are all !traceOn  related issue : [SPR-17254] #21787","closed","type: bug,","lifenjoy51","2019-01-21T14:26:39Z","2019-01-21T15:07:24Z"
"","22270","Spring MVC documentation has incorrect WebFlux reference","It seems that the documents were written once for WebFlux and then copy-paste-and-edited for Spring MVC, but some of substitutions were missed.  For example in [1.1.2. Special Bean Types](https://docs.spring.io/spring/docs/5.1.3.RELEASE/spring-framework-reference/web.html#mvc-servlet-special-bean-types),   > By “special beans” we mean Spring-managed Object instances that implement **WebFlux** framework contracts.  >The following table lists the special beans detected by the **DispatcherHandler**:  Which should be replaced by **Spring WebMVC** and **DisplatcherServlet**.","closed","type: documentation,","pashazadeh","2019-01-16T17:17:49Z","2019-02-07T16:08:07Z"
"","22767","Add CBOR codec (single value only)","It seems RSocket only requires single value support for codecs, which mean we probably could add CBOR codec with only that scope and add such support to RSocket, and even configure it by default in Boot since that's a popular binary format that does not require code generation from a schema.  Related to #20513 which targets full support and configuration for WebFlux.","closed","type: enhancement,","sdeleuze","2019-04-08T15:16:36Z","2019-04-29T11:17:37Z"
"","22587","WebSocket support with @EnableWebFlux","It seems like I almost never need to do anything with `WebSocketHandlerAdapter` when using WebFlux and websockets. I just need to register it, like this:   ```java @Bean SimpleUrlHandlerMapping simpleUrlHandlerMapping(WebSocketHandler wsh) { 	return new SimpleUrlHandlerMapping() { 		{ 			setUrlMap(Map.of(""/ws/time"", wsh)); 			setOrder(10); 		} 	}; }  @Bean WebSocketHandlerAdapter wsha() { 	return new WebSocketHandlerAdapter(); }  @Bean WebSocketHandler wsh(Timer timer) { 	return session -> session.send(timer.greet().share().map(session::textMessage)); } ```  I can see why i need to register the `WebSocketHandler`  (that's where my custom websocket logic lives) and I can see why I need to register the `SimpleUrlHandlermapping` bean (that's where my custom routing lives). But why the `WebSocketHandlerAdapter`? Could it be auto-configuration registered based on the presence of websockets on the classpath and subject to a `@ConditionalOnMissingBean` so that users who want to contribute their own can do so? it seems ceremonial.   thanks in advance..","closed","type: enhancement,","joshlong","2019-03-10T02:34:48Z","2020-09-02T09:07:09Z"
"","22324","modify-for-loop-mode","It modified the way of the for-loop in the method parseMetaElements  of the class BeanDefinitionParserDelegate  form for (int i = 0; i < nl.getLength(); i++)  to for (int i = 0, j = nl.getLength(); i < j; i++). It makes you only call the method nl.getLength() once no matter how many times the for-loop used.There are a lot of similar places in this code. I think which should be optimised is: 1.The depth of VM stack can be reduced. 2.Some complicated methods would be waste time to calculate the length. It also can be optimeised.I will modify the for-loop in the project if you identified the optimization","closed","in: core,","ZhZGod","2019-01-30T12:12:09Z","2021-12-02T15:17:54Z"
"","2053","SPR-17600 Vararg based methods in MessageSource","It adds a vararg based getMessage methods in MessageSource. The methods are added using Java 8 Interface Default Methods so doesn't need any implementation in any concrete MessageSource.","open","type: enhancement,","ankurpathak","2018-12-14T05:00:13Z","2022-01-18T13:46:37Z"
"","22254","Update links to issue tracker","Issues of Spring framework have recently been moved from Jira to Github. This PR updates the links to issue tracker.","closed","type: task,","benelog","2019-01-15T01:32:44Z","2019-01-18T17:56:55Z"
"","2080","toString for AbstractSqlParameterSource","Issue: SPR-9753","closed","type: enhancement,","schauder","2019-01-08T15:50:45Z","2019-04-02T13:03:22Z"
"","2027","AbstractBeanFactory.isTypeMatch fix for generic type","Issue: SPR-17524","closed","","it3r","2018-11-25T13:44:15Z","2018-11-25T20:30:21Z"
"","22644","RequestCondition optimizations","Introduce a common cache, e.g. `RequestMappingInfoCache`, that's stored as a request attribute (Spring MVC) or exchange attribute (WebFlux) to avoid repeated re-calculation of request related values required for condition checks.  There are already optimizations in WebFlux so request path, ""Content-Type"", and ""Accept"" are parsed only once, but even then ""Accept"" media types are sorted repeatedly + there are other recurring checks like `isPreFlightRequest`. This would allow Spring MVC be more on par with WebFlux in terms of optimal request condition checks.  A lot of the base functionality could be in `AbstractRequestCondition` with sub-classes accessing  `computeIfAbsent` type methods from the base class.","closed","type: enhancement,","rstoyanchev","2019-03-22T19:27:18Z","2019-06-28T17:39:33Z"
"","1987","Refactor the handle null value method","Instead of nesting all the logic inside an if when the value is null, now a guard against not null values will cause an early return, improving the readability by removing that indentation.","closed","","arnoldmartinez","2018-10-10T13:45:05Z","2018-10-12T00:18:48Z"
"","22302","spring.profiles.active placeholder resolve problem","info:   app:     env-active: dev spring:   profiles:     active: ${info.app.env-active}  In my case, I want to use placeholder for setting **spring.profiles.active.** in my springboot application (application.yml), but when I start the project, the log is showing like blow. > The following profiles are active: dev,${info.app.env-active}  The real property is truly resolved, but the placeholder is still exists. Is that an bugs?","closed","for: stackoverflow,","yulianzhilan","2019-01-24T10:25:44Z","2019-01-24T17:03:29Z"
"","2040","indexOf() expressions can be replaced with a call to the contains()","indexOf() expressions can be replaced with a call to the contains() method available in Java 5 and newer.","closed","","igor-suhorukov","2018-12-06T21:22:06Z","2018-12-13T11:29:33Z"
"","22803","Return value doesn't serialize to JSON when return type is Mono of Interface in WebFlux","In WebMVC type application, Spring's message converter can convert the return value to a proper message(like a JSON) when controller return type declared by interface.  But, Webflux's behavior is different.  For example, we have Car class that implements Vehicle interface. ``` public interface Vehicle { }  public class Car implements Vehicle {     private String gearType; } ``` And then there is a controller method like that. ``` @GetMapping(""vehicle"") public Vehicle getVehicle() {     return new Car(); } ``` I can get a json response of Car class with `content-type: application/json` header.  But, webflux's result is defferent.  ``` @GetMapping(""vehicle"") public Mono getVehicle() {     return Mono.just(new Car()); } ``` It only supports a 'content-type: text/event-stream' when return type is a mono of interface. Is it a bug?","closed","type: enhancement,","freddieyyh","2019-04-16T06:30:04Z","2019-05-01T20:53:43Z"
"","22403","Reintroduce XmlBeans support","In the past support for [XmlBeans](http://xmlbeans.apache.org) has been dropped as it was a dead project. However as of late 2018 the project has been revived again as part of Apache POI.   It might be worthwhile considering to reinstate the XmlBeans support in Spring (and to support version 3+).","closed","status: declined,","mdeinum","2019-02-11T14:11:07Z","2019-12-05T15:40:32Z"
"","22717","Typo in documention (webflux-functional.adoc)","In the documentation for Spring Webflux, specifically for functional endpoints, there is a typo line 140 of `webflux-functional.adoc` : `BodyExtractos` instead of `BodyExtractors`  **Affects:** 5.1.6 **Reference url:** https://docs.spring.io/spring/docs/5.1.6.RELEASE/spring-framework-reference/web-reactive.html#spring-webflux  I am willing to do the correction if you want. Reading the CONTRIBUTING file, it seems that as it is a trivial change, I could make the modification directly through Github. If you are ok with that, should I use the master branch?","closed","type: task,","stephane-deraco","2019-04-01T10:10:40Z","2019-04-01T12:10:22Z"
"","22290","Wrap DecodingException thrown by WebFlux functional endpoints","In Spring WebFlux, reading an invalid request body can result in a `DecodingException` thrown by the codec.  In the annotation variant, this exception is wrapped in a `ServerWebInputException` in `ArgumentResolver` implementations. Since `ServerWebInputException` extends `ResponseStatusException`, this is automatically handled by the error handling mechanism as an HTTP 400 response status.  Right now in the functional variant, the `DecodingException` bubbles up and causes an HTTP 500 error since it's not expected by the error handling infrastructure.  The `DecodingException` Javadoc mentions:  > For example in server web application, a `DecodingException` would > translate to a response with a 400 (bad input) status while > `CodecException` would translate to 500 (server error) status.  @poutsma, I think we should align WebFlux functional with the annotation variant here; doing so in `BodyExtractors` is not the right choice since this class can be used on both server and client side. Since this behavior is expected by the error handling infrastructure, should we introduce this exception mapping in `HandlerFunctionAdapter`? Or is there a better place for that?","closed","type: bug,","bclozel","2019-01-22T11:03:16Z","2019-01-22T13:57:07Z"
"","22782","Add decodeDataBuffer to Decoder and encodeValue to Encoder","In some protocols (HTTP, TCP) the stream of bytes needs to be parsed to be decoded and likewise chunks of encoded content can written out. In other protocols (e.g. RSocket, WebSocket) input and output streams are already split into discrete messages so that each `DataBuffer` can be decoded and is encoded in full.   Currently `Encoder` and `Decoder` contracts are good the former but unnecessarily cumbersome requiring to wrapping in a `Mono` and joining with `DataBufferUtils`. Even in WebFlux there are plenty of cases where we've run into this (multipart, form data, etc). We should add `decodeDataBuffer` to `Decoder` and `encodeValue` in `Encoder`.  Sub-classes of `AbstractDataBufferDecoder` already have a protected `decodeDataBuffer` method that does this (on joined buffers). I suspect Jackson and Jaxb2 implementations of decodeToMono could also skip the asynchronous parsing for decoding to `Mono` and extend this class, see #22783. Likewise Encoder implementations either have methods for encoding one value, or could benefit from one.","closed","type: enhancement,","rstoyanchev","2019-04-10T15:35:33Z","2020-08-14T18:39:56Z"
"","22593","Simplify String concatenation","In some cases we can skip creation of `StringBuilder`  or use `invokedynamic`-based concatenation.","closed","in: core,","stsypanov","2019-03-14T11:37:30Z","2019-04-03T14:48:42Z"
"","22547","ServletWebRequest.getHeaderValues throwing NPE when header information is not available","in ServletWebRequest class -> getHeaderValues() method:  getRequest().getHeaders(headerName) may return null .. and so, StringUtils.tostringArray() throws Null Pointer Exception.","closed","type: regression,","ketsorbit","2019-02-27T05:03:46Z","2019-03-08T22:10:17Z"
"","22497","add TODOs to be done after migration to JDK 11","In JDK 11 `String::repeat` becomes available and can be used to simplify code.","closed","status: declined,","stsypanov","2019-03-01T10:42:54Z","2019-04-03T14:51:34Z"
"","4732","Support for X-Envoy-Original-Path, similar to existing support for X-Forwarded-Prefix","In https://github.com/cloudfoundry/gorouter/issues/229, `@lavcraft` brought to the Cloud Foundry Routing team's awareness that Spring supports the `X-Forwarded-Prefix` header (see [ForwardedHeaderFilter](https://github.com/spring-projects/spring-framework/blob/master/spring-web/src/main/java/org/springframework/web/filter/ForwardedHeaderFilter.java#L75)), and requested that Cloud Foundry's existing perimeter ingress Gateway (called Gorouter) support the header.  This header appears to prevent a developer from having to configure `SERVER_SERVLET_CONTEXT_PATH` specifically for each environment the app is deployed to, and the framework ensures that links generated for responses are correct when the requested path is different from the served path e.g. requests are made to `/foo/bar` but app serves the content on `/bar`; self-referential links must include the path prefix `/foo`.  In Cloud Foundry we are adopting Envoy as the platform perimeter ingress proxy, so don't want to make the enhancement to Gorouter. Envoy supports the same use case using a header `X-Envoy-Original-Path`.  Based on the acceleration in popularity of the Envoy project, I wondered if the Spring team would consider supporting the `X-Envoy-Original-Path` header for the same use case. As a result, Spring apps deployed to Cloud Foundry could benefit when Envoy is used as the perimeter ingress gateway.  I have also opened an issue with Envoy, exploring support for `X-Forwarded-Prefix`: https://github.com/envoyproxy/envoy/issues/5528.","closed","status: declined,","shalako","2019-01-10T01:14:54Z","2022-02-18T21:00:23Z"
"","22750","Avoid SourceClass creation for annotations that are always ignored","In a small Spring Boot app, `ConfigurationClassParser$SourceClass.getAnnotations()` creates 200 `SourceClass` instances each for `@Target`, `@Retention`, and `@Documented`. They are then skipped as they're in a `java.*` package:  https://github.com/spring-projects/spring-framework/blob/898494a5380f04469d92f2d5db3fb1b8a128514d/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java#L531-L543  It doesn't take long (a handful of milliseconds), but I still think it would be worth avoiding the unnecessary time that's spent and the unnecessary garbage that's created by changing `SourceClass.getAnnotations()` to only create `SourceClass` instances for annotations that are then processed.","closed","type: enhancement,","wilkinsona","2019-04-05T14:53:11Z","2019-04-08T13:50:08Z"
"","22682","JdbcOperationsExtensions.queryForObject overload which takes in lambda - allow null value to be returned?","In `JdbcOperationsExtensions.kt`, there is [this](https://github.com/spring-projects/spring-framework/blob/0ace0be29b43ca5a567d69f6804ba41880c63c29/spring-jdbc/src/main/kotlin/org/springframework/jdbc/core/JdbcOperationsExtensions.kt#L37) overload of `queryForObject`:  ``` fun  JdbcOperations.queryForObject(sql: String, vararg args: Any, function: (ResultSet, Int) -> T): T? =     queryForObject(sql, RowMapper { resultSet, i -> function(resultSet, i) }, *args) ```  This calls down to [this](https://github.com/spring-projects/spring-framework/blob/0ace0be29b43ca5a567d69f6804ba41880c63c29/spring-jdbc/src/main/java/org/springframework/jdbc/core/JdbcOperations.java#L574) method in `JdbcOperations.java`:  ```  T queryForObject(String sql, RowMapper rowMapper, @Nullable Object... args) throws DataAccessException; ```  The JavaDocs for that Java method states this:  ``` @return the single mapped object (may be {@code null} if the given {@link RowMapper} returned {@code} null) ```  This suggests that it's valid for this method to return null, which also corresponds with the Kotlin overload returning `T?` (as opposed to the non-nullable `T`).  However, the lambda passed into the Kotlin method (which is translated into a `RowMapper` when calling the Java code) **cannot** return null:  `function: (ResultSet, Int) -> T`  Is that a mistake?  Should this lambda be declared as returning `T?` instead?  Note that a similar (but not identical) issue was discussed in #1603.  Also see discussion in [this](https://stackoverflow.com/a/55341087/10326373) SO answer.","closed","type: bug,","yonigibbs","2019-03-26T10:26:07Z","2019-03-26T14:18:15Z"
"","22788","Deprecate MediaType.APPLICATION_JSON_UTF8 in favor of APPLICATION_JSON","In  spring-framework/spring-web/src/main/java/org/springframework/http/MediaType.java:   	 * This {@link MediaType#APPLICATION_JSON} variant should be used to set JSON 	 * content type because while 	 * RFC7159 	 * clearly states that ""no charset parameter is defined for this registration"", some 	 * browsers require it for interpreting correctly UTF-8 special characters  1. RFC 7159 has been obsoleted by RFC 8259 2. That states ""No ""charset"" parameter is defined for this registration. Adding one really has no effect on compliant recipients."" (at the end of Section 11) 3. ...and browsers have indeed fixed their code.  So it would be best to clarify the text and deprecate the constant.","closed","type: task,","reschke","2019-04-12T05:30:43Z","2019-04-30T17:08:42Z"
"","22606","Conditional view caching","Implementation for #22391","closed","type: enhancement,","fred84","2019-03-17T10:39:03Z","2021-04-28T08:29:07Z"
"","22412","Add guidelines about using checked exception with proxies in Kotlin","Im seeing `UndeclaredThrowableException` for kt methods which are invoked through spring proxy (eg. when using `@Transactional`)  it can be mitigated by explicit `@Throws(Throwable::class)` The issue does not occur for `RuntimeException`s  example: https://github.com/masc3d/spring-kotlin-jpa","closed","type: documentation,","masc3d","2019-02-14T10:30:39Z","2019-10-21T23:27:03Z"
"","22275","ResponseEntityExceptionHandler add to  generic type","If the ResponseEntityExceptionHandler class is extedns, then the return type is `ResponseEntity `  This part was inconvenient. Thanks to Spring Open Source","closed","status: declined,","cheese10yun","2019-01-17T16:55:17Z","2019-10-28T14:54:54Z"
"","22385","Ensure indexer gracefully handle missing meta annotations","If `spring-context-indexer` is used in an application that uses `@javax.transaction.Transactional`, compilation will fail due to `javax.interceptor.InterceptorBinding` not being available.  This can be easily reproduced with a project as simple as:  ```gradle plugins {     id 'java'     id 'io.spring.dependency-management' version '1.0.6.RELEASE'     id 'org.springframework.boot' version '2.1.2.RELEASE' }  sourceCompatibility = '1.8'  repositories {     mavenCentral() }  dependencies {     implementation 'org.springframework.boot:spring-boot-starter-data-jpa'     implementation 'com.h2database:h2'     annotationProcessor 'org.springframework:spring-context-indexer'     testImplementation 'org.springframework.boot:spring-boot-starter-test' } ```  ```java @SpringBootApplication @javax.transaction.Transactional public class DemoApplication {      public static void main(String[] args) {         SpringApplication.run(DemoApplication.class, args);     }  } ```  ```bash $ ./gradlew compileJava   > Task :compileJava FAILED error: cannot access InterceptorBinding   class file for javax.interceptor.InterceptorBinding not found   Consult the following stack trace for details.   com.sun.tools.javac.code.Symbol$CompletionFailure: class file for javax.interceptor.InterceptorBinding not found 1 error  FAILURE: Build failed with an exception.  * What went wrong: Execution failed for task ':compileJava'. > Compilation failed; see the compiler error output for details.  * Try: Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights.  * Get more help at https://help.gradle.org  BUILD FAILED in 0s 1 actionable task: 1 executed ```  This PR addresses the problem by adding a classpath presence check for annotation before proceeding to collect its stereotypes.","closed","type: bug,","vpavic","2019-02-07T22:26:34Z","2019-02-14T14:16:52Z"
"","22689","Improve exception handling when Hibernate-related bean creation fails","I've run into a nasty issue when working with Hibernate's `@Convert` and Spring Framewok.  I used `javax.persistence.@Covert` to transform types and inside of converter class I've declared `DateTimeFormatter` as follows: ```java class LocalDateToIntCenturyConverter implements AttributeConverter {   DateTimeFormatter FORMATTER = DateTimeFormatter.ofPattern(""CyyMMdd"", Locale.getDefault());   //... }  @Entity class MyEntity {   @Convert(converter = LocalDateToIntCenturyConverter.class)   LocalDate date; } ``` Application context failed to start with exception ```stacktrace Failed to load ApplicationContext java.lang.IllegalStateException: Failed to load ApplicationContext 	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125) 	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108) 	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190) 	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132) 	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246) 	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:97) 	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$invokeTestInstancePostProcessors$3(ClassTestDescriptor.java:215) 	at org.junit.jupiter.engine.descriptor.JupiterTestDescriptor.executeAndMaskThrowable(JupiterTestDescriptor.java:141) 	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$invokeTestInstancePostProcessors$4(ClassTestDescriptor.java:215) 	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) 	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175) 	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1382) 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481) 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471) 	at java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:312) 	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:743) 	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:742) 	at java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:580) 	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeTestInstancePostProcessors(ClassTestDescriptor.java:214) 	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.instantiateAndPostProcessTestInstance(ClassTestDescriptor.java:196) 	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$testInstanceProvider$0(ClassTestDescriptor.java:185) 	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$testInstanceProvider$1(ClassTestDescriptor.java:189) 	at java.util.Optional.orElseGet(Optional.java:267) 	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$testInstanceProvider$2(ClassTestDescriptor.java:188) 	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:81) 	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:58) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$0(NodeTestTask.java:83) 	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:72) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:83) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:69) 	at java.util.ArrayList.forEach(ArrayList.java:1257) 	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$4(NodeTestTask.java:112) 	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:72) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:98) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:74) 	at java.util.ArrayList.forEach(ArrayList.java:1257) 	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$4(NodeTestTask.java:112) 	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:72) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:98) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:74) 	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32) 	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) 	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51) 	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) 	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) 	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) 	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:92) 	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$100(JUnitPlatformTestClassProcessor.java:77) 	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:73) 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) 	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) 	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) 	at com.sun.proxy.$Proxy2.stop(Unknown Source) 	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:131) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) 	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) 	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) 	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) 	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) 	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) 	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) 	at java.lang.Thread.run(Thread.java:748) Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.MappingException: Unable to determine basic type mapping via reflection [MyEntity -> date] 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1745) 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:576) 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498) 	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) 	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) 	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) 	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) 	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1083) 	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:853) 	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546) 	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775) 	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316) 	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127) 	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99) 	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117) 	... 76 more Caused by: org.hibernate.MappingException: Unable to determine basic type mapping via reflection [MyEntity -> date] 	at org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:515) 	at org.hibernate.cfg.SetSimpleValueTypeSecondPass.doSecondPass(SetSimpleValueTypeSecondPass.java:25) 	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processSecondPasses(InFlightMetadataCollectorImpl.java:1696) 	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processSecondPasses(InFlightMetadataCollectorImpl.java:1654) 	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:287) 	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:904) 	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:935) 	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:57) 	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) 	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:390) 	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:377) 	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1804) 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1741) 	... 91 more Caused by: org.hibernate.InstantiationException: Could not instantiate managed bean directly : LocalDateToIntCenturyConverter 	at org.hibernate.resource.beans.internal.FallbackBeanInstanceProducer.produceBeanInstance(FallbackBeanInstanceProducer.java:41) 	at org.springframework.orm.hibernate5.SpringBeanContainer.createBean(SpringBeanContainer.java:162) 	at org.springframework.orm.hibernate5.SpringBeanContainer.getBean(SpringBeanContainer.java:104) 	at org.hibernate.resource.beans.internal.ManagedBeanRegistryImpl.getBean(ManagedBeanRegistryImpl.java:61) 	at org.hibernate.boot.model.convert.internal.ClassBasedConverterDescriptor.createManagedBean(ClassBasedConverterDescriptor.java:38) 	at org.hibernate.boot.model.convert.internal.AbstractConverterDescriptor.createJpaAttributeConverter(AbstractConverterDescriptor.java:107) 	at org.hibernate.mapping.SimpleValue.buildAttributeConverterTypeAdapter(SimpleValue.java:568) 	at org.hibernate.mapping.SimpleValue.setTypeUsingReflection(SimpleValue.java:529) 	at org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:511) 	... 104 more Caused by: java.lang.IllegalAccessException: Class org.hibernate.resource.beans.internal.FallbackBeanInstanceProducer can not access a member of class LocalDateToIntCenturyConverter with modifiers """" 	at sun.reflect.Reflection.ensureMemberAccess(Reflection.java:102) 	at java.lang.Class.newInstance(Class.java:436) 	at org.hibernate.resource.beans.internal.FallbackBeanInstanceProducer.produceBeanInstance(FallbackBeanInstanceProducer.java:38) 	... 112 more ``` The actual reason, however is illegal pattern `""CyyMMdd""`, namely capital ""C"".  Currently it's impossible to understand the reason from the log. Even if I log all messages and find one written in right place (`SpringBeanContainer::createBean`, catch block), it still gives no clue to understanding of actual reason: ```stacktrace 27.03.2019 10:45:05 [DEBUG ] [Test worker] o.s.o.h.SpringBeanContainer – Falling back to Hibernate's default producer after bean creation failure for class LocalDateToIntCenturyConverter: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'LocalDateToIntCenturyConverter': Bean instantiation via constructor failed; nested exception is java.lang.ExceptionInInitializerError ```  It took me about 10 minutes of debugging to understand the root cause, so I propose to help other developers by doing this: - always warn a user in case bean cannot be received from `BeanFactory` - print root cause of exception.  After I had done this I got real reason into the log: ```stacktrace 27.03.2019 11:20:05 [WARN] [Test worker] o.s.o.h.SpringBeanContainer – Falling back to Hibernate's default producer after bean creation failure for class LocalDateToIntCenturyConverter: java.lang.IllegalArgumentException: Unknown pattern letter: C ```","closed","type: enhancement,","stsypanov","2019-03-27T08:57:05Z","2019-03-28T07:58:18Z"
"","22338","spring-context-indexer seems to do nothing","I've included the dependency as per https://docs.spring.io/spring/docs/5.1.2.RELEASE/spring-framework-reference/core.html#beans-scanning-index into my Boot app.   The app is fairly trivial, with one controller and one service.  When I build my fat jar and unpack it, I do not see the `spring.components` file in `META-INF`.  Is there a way for me to get more insight into the process? How do I know the indexer is invoked?","closed","for: stackoverflow,","the4yeast","2019-02-04T00:12:11Z","2019-02-04T22:00:17Z"
"","22278","Use AtomicInteger instead of unsafe increment on volatile fields","I've found several cases where we increment numeric field declared `volatile`. Such explicit increment may bring incorrect behaviour, as increment operation itself is not atomic.","closed","type: enhancement,","stsypanov","2019-01-18T13:01:40Z","2019-02-19T11:28:40Z"
"","2051","Improve performance of ConcurrentReferenceHashMap creation","I've discovered that on some workloads instantiation of CCRHM takes significant amount of time (e.g. loading interface-base projections in Spring Data JPA). Here's the patch that reduces map instantiation time: ``` //before Benchmark                   Mode  Cnt    Score   Error  Units concurrentReferenceHashMap  avgt  100  712,179 ± 7,233  ns/op  //after Benchmark                   Mode  Cnt    Score   Error  Units concurrentReferenceHashMap  avgt   50  496,598 ± 4,601  ns/op ``` Benchmark is very simple: ```java @Benchmark public ConcurrentReferenceHashMap concurrentReferenceHashMap() {   return new ConcurrentReferenceHashMap(); } ``` Key ideas behind the changes: - `initialSize` is the same at each loop iteration in constructor of `ConcurrentReferenceHashMap`, so expression `1 << calculateShift(initialCapacity, MAXIMUM_SEGMENT_SIZE);` can be hoisted out of constructor of `Segment` and then out of the loop - same for `resizeThreshold` calculation - `Segment.references` declared as `volatile` so I suspect when new segment is written into `ConcurrentReferenceHashMap.segments` array the field `segments` must be loaded at each iteration due to HB semantics, same for `this.segments.length`. To avoid this I propose to populate `ConcurrentReferenceHashMap.segments` as local var and the write it to the field. Event if my assumption about HB is wrong reduction of interaction with fields helps us in interpreter mode.","closed","","stsypanov","2018-12-13T14:48:43Z","2019-01-03T11:12:35Z"
"","22641","Custom CacheInterceptor is being randomly overridden by default Spring's CacheInterceptor","I've asked a question on the stackoverflow https://stackoverflow.com/questions/55299059/custom-cacheinterceptor-is-being-overridden-by-default-springs-cacheinterceptor  I've create this issue because of strange behaviour of Spring: sometimes it overrides my custom bean, sometimes it doesn't override it. I didn't find any reason of such behaviour.  Looks like a bug.  Versions Spring - 5.0.7.RELEASE Spring Boot - 2.0.0.RELEASE","closed","","YashchenkoN","2019-03-22T12:08:37Z","2019-03-22T12:13:07Z"
"","22349","Add a List-based constructor to Jackson2JsonEncoder and Jackson2JsonDecoder","I'm working on making Spring HATEOAS extensible with an interface that has the following method:  ```java List getMediaTypes(); ```  When it comes time to create a `Jackson2JsonEncoder` and `Jackson2JsonDecoder`, using this list of support `MediaTypes`, I can't because the only constructor calls are:  ```java public Jackson2JsonEncoder(ObjectMapper mapper, MimeType... mimeTypes) ``` and  ```java public Jackson2JsonDecoder(ObjectMapper mapper, MimeType... mimeTypes) ``` These require that you spell out the desired types, instead of being able to supply them from elsewhere.","closed","status: invalid,","gregturn","2019-02-05T16:49:07Z","2019-02-05T18:55:28Z"
"","22538","NoSuchMethodError when invoking RedisOperationsSessionRepository.delete","I'm using spring session and spring data redis for session management. I haven't used Spring boot.  Used are as follows,  - spring-session: 1.3.5.RELEASE - spring-data-redis: 2.1.4.RELEASE - spring-webmvc: 5.0.4.RELEASE - lettuce-core: 5.1.4.RELEASE  Included these beans for redis configuration:  `org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration`, `org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory`.  Included filter `springSessionRepositoryFilter` in `web.xml`.  But I got following error frequently.  ``` ERROR org.springframework.scheduling.support.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task. java.lang.NoSuchMethodError: org.springframework.data.redis.core.RedisOperations.delete(Ljava/lang/Object;)V 	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:132) ~[spring-session-1.3.5.RELEASE.jar:?] 	at org.springframework.session.data.redis.RedisOperationsSessionRepository.cleanupExpiredSessions(RedisOperationsSessionRepository.java:398) ~[spring-session-1.3.5.RELEASE.jar:?] 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_201] 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_201] 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_201] 	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_201] 	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:65) ~[spring-context-5.0.4.RELEASE.jar:5.0.4.RELEASE] 	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) [spring-context-5.0.4.RELEASE.jar:5.0.4.RELEASE] 	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:93) [spring-context-5.0.4.RELEASE.jar:5.0.4.RELEASE] 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_201] 	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_201] 	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_201] 	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_201] 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_201] 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_201] 	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_201] ```  Can you please help to solve this?","closed","status: declined,","asha-chandran","2019-03-07T07:03:54Z","2019-03-08T12:47:44Z"
"","22544","Using MockMvc to test Flux endpoints?","I'm strugling with writing tests for rest endpoints that return Flux. I'd like to use mockMvc for this. Is this even possible?   Note that, allthough I have some rest endpoints returning Flux and/or Mono I am *not* using WebFllux but just regular MVC. The framework handles those types fine and for my Flux example, these are received on the browser side as a 'stream' of ServerSentEvents. This all works fine.  The trouble is. I can't seem to find a good way to write tests agains these endpoints using mockmvc.   The best I came up with is here:  https://github.com/kdvolder/mvc-flux-testing/blob/master/src/test/java/com/example/demo/MvcFluxDemoApplicationTests.java  Is turning the stream of events into String via `getResponse().getContentAsString()' really the best I can do here? (Note: @rstoyanchev has told me it is, mockMvc doesn't provide good ways to test this sort of thing. He recommends to use WebTestClient).  So I submit for consideration the following:  1. It may be useful to expand mockMvc apis to handle endpoints returning streamed ServerSentEvents better. Perhaps, something that can get the content as a Flux? Then we can use reactive testing support such as StepVerifier to validate the content in our tests.  2. Add a pointer in the docs on using WebTestClient instead for these scenarios.","closed","type: documentation,","kdvolder","2019-03-07T19:17:05Z","2021-03-05T18:42:10Z"
"","22342","accept header parsing problem in org.springframework.util.parseMimeType","I'm playing with https://activitypub.rocks and their test suite https://test.activitypub.rocks. They send accept headers like:      `application/ld+json;profile=https://www.w3.org/ns/activitystreams`      and that is what `org.springframework.util.parseMimeType(String mimeType)` didn't like!  Version is spring-web-5.0.4.RELEASE. Currently i added a ContentNegotiationStrategy, that parses and convert the accept header to:       `application/ld+json;profile=""https://www.w3.org/ns/activitystreams""`      Works for me.   So because of activity pub are the w3.org guys, I think they send the right accept-header ,-)  Thanks Fredy  ``` 2019-02-04 12:06:53 [http-nio-8080-exec-10] DEBUG o.s.s.w.u.m.MediaTypeRequestMatcher - Failed to parse MediaTypes, returning false org.springframework.web.HttpMediaTypeNotAcceptableException: Could not parse 'Accept' header [application/ld+json;profile=https://www.w3.org/ns/activitystreams]: Invalid mime type ""application/ld+json;profile=https://www.w3.org/ns/activitystreams"": Invalid token character ':' in token ""https://www.w3.org/ns/activitystreams""  	at org.springframework.web.accept.HeaderContentNegotiationStrategy.resolveMediaTypes(HeaderContentNegotiationStrategy.java:59) 	at org.springframework.web.accept.ContentNegotiationManager.resolveMediaTypes(ContentNegotiationManager.java:127) 	at org.springframework.security.web.util.matcher.MediaTypeRequestMatcher.matches(MediaTypeRequestMatcher.java:178) 	at org.springframework.security.web.authentication.DelegatingAuthenticationEntryPoint.commence(DelegatingAuthenticationEntryPoint.java:80) ```","closed","status: invalid,","naturzukunft","2019-02-04T13:12:38Z","2019-02-04T17:41:39Z"
"","22359","InjectionPoint autowiring throws exception for @Resource beans autowired by name","I'm not sure if this is the desired behavior, but accessing the `InjectionPoint` of a **named** resource bean will throw the exception below, in version(`5.1.4`). ```  No current InjectionPoint available for method 'myService' parameter 0. ``` **Example code:**  ```java @Configuration public class BeanConfig {          @Resource         // @Resource(name = ""myService"") -> also causes the exception.         private MyService myService;           @Bean         @Scope(BeanDefinition.SCOPE_PROTOTYPE)         MyService myService(InjectionPoint p) {             return new MyService();         }     } ``` Renaming either the _private field_ to a value different than the bean name will allow the container to inject the `InjectionPoint` bean as expected, because the autowiring strategy fallsback to by type.  ```java @Configuration public class BeanConfig {     @Resource    private MyService myService;     @Bean    @Scope(BeanDefinition.SCOPE_PROTOTYPE)    MyService myService2(InjectionPoint p) {         return new MyService();    } } ``` **Affects:** 5.1.4","closed","type: enhancement,","devdilson","2019-02-06T14:52:22Z","2019-02-11T16:18:39Z"
"","22541","BeanFactory.get*ForAnnotation should take @Bean metadata into account","I'm currently writing a small `BeanFactoryPostProcessor` and for that I need to process annotations on `@Bean` methods. Or at least detect the bean definition based on that metadata. I was expecting that `getBeanNamesForAnnotation` (and friends) would also take annotations on `@Bean` methods into consideration. However it only works for annotated types.  So when doing something like this.   ```java  @Component @CustomAnnotation public class MyClass { ... } ```  It works. But doing the same on an `@Bean` annotated method doesn't work.   ```java  @Bean @CustomAnnotation public MyClass myClass() { ... } ``` It would be nice if the methods would return beans (or bean definitions) annotated throuhg `@Bean` methods as well. Especially if we want to apply this to beans that aren't under our own control (i.e. external libraries).   For the Spring annotations like `@Lazy`, `@Primary` etc. this already works but those are handled in specialized cases when parsing the configuration files. `@Lazy` on a component works the same as `@Lazy` on a `@Bean` method.   In this particulair case I wanted to detect beans with a special annotation so that we could register them in JNDI. It works when annotating the component with our specialized annotation not when using the annotation on `@Bean` methods. This is especially annoying for classes that are outside of our control.   Currently the only way is to extend the class only for adding the annotation.","closed","type: enhancement,","mdeinum","2019-03-07T13:16:05Z","2019-04-03T11:10:04Z"
"","22348","Enhance documentation for @PostConstruct/PreDestroy and @Required","I would like to suggest the following enhancements for the current Spring documentation:   - Explain that [@PostConstruct and @PreDestroy](https://docs.spring.io/spring/docs/5.1.4.RELEASE/spring-framework-reference/core.html#beans-required-annotation) requires an extra module(```javax.annotation-api```) for Java 9+. - Explain that [@Required](https://docs.spring.io/spring/docs/5.1.4.RELEASE/spring-framework-reference/core.html#beans-required-annotation) is deprecated in favor of constructor injection (or `afterPropertiesSet`).","closed","type: documentation,","devdilson","2019-02-05T16:20:31Z","2019-02-07T15:26:24Z"
"","22772","[Reopening] Ability to specify default-lazy-init behavior for imported bean definitions [SPR-5146]","I would like to reopen the issue **[SPR-5146](https://jira.spring.io/browse/SPR-5146?redirect=false)** (https://github.com/spring-projects/spring-framework/issues/9819) as this seems to be bulk-closed and not yet fixed in 4.3:  There doesn't seem to be a way to configure Spring so that imported bean definition files inherit the default-lazy-init behavior from the parent.  For example:    ```    ```    The CXF beans are ""eagerly"" instantiated even though the parent bean XML speficies ""default-lazy-init=true"". Is there a way to get the CXF beans to obey the lazy-init behavior that I want (aside from editing the META-INF/cxf/cxf.xml files myself and re-jarring CXF?). (the CXF beans take a few seconds to initialize and this is a problem with client apps in short-running JVMs that may not hit CXF on all code paths)  It seems like either:  1. 'default-lazy-init' should be inherited from the parent bean definition reader 2. There should be an attribute on the import element that allows for specifying the desired default-lazy-init behavior for the imported bean defs.   **Affects:** 2.5.5 - 4.3","closed","status: duplicate,","Avinm","2019-04-09T08:25:32Z","2019-04-10T04:30:50Z"
"","22532","4.0.x","i wanna study the source code, thanks","closed","status: invalid,","wtiostream","2019-03-06T15:35:07Z","2019-03-06T15:35:59Z"
"","22483","Spring cache bug uses a method to call two methods that use the spring cache annotation (@CacheEvict and @Cacheable)","i uses a method to call two methods that use the spring cache annotation (@CacheEvict and @Cacheable) It does not work, the code is like that:       public class Cache{     public void refreshCache(Long id){     deleteCache(id);     getCache(id);     }     @Cacheable(CacheNames=""cache"",key=""#id"")     public List getCache(Long id){     do something     }     @CacheEvict(CacheNames=""cache"",key=""#id"")     public void deleteCache(Long  id){}     the version of srpingboot is 2.0.6 release     }   when i use the method refreshCache（）,it does work. but i use the deleteCache（） and getCache（） ，it works。 I don't like this code, it makes my code untidy。 it is a bug in the version of springboot 2.0.6 release?","closed","status: invalid,","Bryce-huang","2019-02-27T12:41:51Z","2019-02-28T00:17:35Z"
"","22495","Get the integer type of HashMap from the long type of HashMap ?","I use the spring cloud framework, and the service provider interacts with consumers using the List < Map < String, Object > return value result set. The problem is that the long in map < String, Object > is converted to integer, that is, result. get (0). get (""count""). getClass () is the integer type from the long at the service provider to the service consumer. How can I solve this problem? Thank you!     @GetMapping(""/report/common/data/search"")     public List> searchSaleReport(@RequestParam(""param"") String param) {         return saleReportService.searchSaleReport(param);     }   @FeignClient(""${sale.feign.name}"") public interface SaleReportService {     @GetMapping(""/report/common/data/search"")     List> searchSaleReport(@RequestParam(""param"") String param); }","closed","for: stackoverflow,","wangnanyang","2019-02-28T12:14:04Z","2019-03-04T08:06:12Z"
"","22498","Received the integer type of LinkedHashMap from the long type of HashMap ?","I use 4.53.22.RELEASE  version of spring framework, and the service provider interacts with consumers using the List < Map < String, Object > return value result set. The problem is that the long in map < String, Object > is converted to integer, that is, result. get (0). get (""count""). getClass () is the integer type from the long at the service provider to the service consumer. How can I solve this problem? Thank you!  @GetMapping(""/report/common/data/search"") public List> searchSaleReport(@RequestParam(""param"") String param) { return saleReportService.searchSaleReport(param); }  @FeignClient(""${sale.feign.name}"") public interface SaleReportService { @GetMapping(""/report/common/data/search"") List> searchSaleReport(@RequestParam(""param"") String param); }","closed","status: duplicate,","wangnanyang","2019-03-01T15:38:22Z","2019-03-01T17:05:33Z"
"","22616","Content-Disposition for multipart formdata is not correctly set when using Mono source","I tried for hours to upload data via multipart post request with WebClient. As async part I use a mono from a databuffer:  ```     final MultipartBodyBuilder builder = new MultipartBodyBuilder();     builder.asyncPart(""file"", Mono.just(someDataBuffer), DataBuffer.class);     MultiValueMap data = builder.build();          return webClient         .post()         .uri(""http://myurl/upload"")         .body(BodyInserters.fromMultipartData(data))         .retrieve()         .bodyToMono(String.class); ```  https://github.com/spring-projects/spring-framework/blob/44df98c82da75114081ba02364e467004252bb77/spring-web/src/main/java/org/springframework/http/codec/multipart/MultipartHttpMessageWriter.java#L291  That always failed because there is not filename known in the generated content disposition header. A good way to solve this would be to add a filename parameter to the asyncPart builder.","closed","status: superseded,","stdreyer","2019-03-19T18:11:37Z","2019-05-08T15:36:21Z"
"","2050","Fix sample in EnableAsync Javadoc","I think there should be a `new` word here.","closed","","diguage","2018-12-13T09:15:07Z","2019-12-11T06:59:54Z"
"","2013","Remove implementation of serializable class","I think that this isn't needed anymore.","closed","","OliverNeff","2018-11-09T13:48:02Z","2018-11-12T11:09:57Z"
"","22527","STOMP WebSocket not working on Spring Boot 2.1.3","I run [this](https://github.com/spring-guides/gs-messaging-stomp-websocket) sample using gradle and connect to the socket from my android client using this [library](https://github.com/NaikSoftware/StompProtocolAndroid).  It works fine, but when I upgrade the Spring Boot version to `2.1.3-RELEASE` my clients (except the web panel in the project) can't send or receive messages.","closed","status: invalid,","SaeedMasoumi","2019-03-06T10:07:56Z","2019-06-25T06:19:59Z"
"","22289","Add code in the CorsConfiguration class to check if request Origin ends with either of the allowed origins.","I propose an enhancement where request Origin coming in is checked if it ends with either of the allowed origins set in the allowedOrigins field in the checkOrigins method. For example -                `suppose if request Origin is abcd.efg.com and allowedOrigins has efg.com present , then in that scenario there is a match and the checkOrigin method returns abcd.efg.com`  I had to implement this in my project by extending the class and overriding the method and was actually pretty surprised that there was no logic to handle this case present already.  Thanks.","closed","status: declined,","indraneelb1903","2019-01-22T05:22:15Z","2019-01-22T12:45:06Z"
"","2015","5.0.x","I knew that springboot2 could integrate Prometheus.Can spring provide integrated standard jar packages","closed","","595979101","2018-11-13T06:27:57Z","2018-11-13T07:09:28Z"
"","22279","Extend HibernateOperations.execute to accept non-returning lambdas","I just started to migrate an old Java 7 project to Java 8 and Spring 5 and started (ab)using lambda expressions, converting some old-styled code. The following is described for `TransactionOperations` but applies perfectly to `HibernateOperations`, so I won't open clone issues.  One of the patterns I am having a hard time with is the `TransactionOperations.execute()`. Often I have to programmatically instantiate a transaction and run a void method within this transaction. I am having this requirement now that I am updating my _unit tests_, because production code is wrapped by @Transactional.  So, let me say that simple. If I have to run a single `void` method in a transaction I have to          new TransactionTemplate(transactionManager).execute(ignored -> {             messageManager.populatePlaceholders(mockModuleCatalog());             return null;         });  `ignored` is the TransactionStatus object. Not everyone needs it but I can live with that. The above works but adds overhead because of the return value. I would prefer something like          new TransactionTemplate(transactionManager).execute(()->messageManager.populatePlaceholders(mockModuleCatalog()));  Or           new TransactionTemplate(transactionManager).execute(ignored ->messageManager.populatePlaceholders(mockModuleCatalog()));  Or, of course, some other developer may want to **use** the TransactionStatus object          new TransactionTemplate(transactionManager).execute(status->messageManager.populatePlaceholders(mockModuleCatalog(),status));   Suggestion is: add overloads to TransactionOperations.execute() to accept lambda expressions that do not return values and/or do not require transaction status. Ideally, `Runnable` and `Consumer` are perfect super-interfaces for the new overloads.  **Currently** Spring Framework provides `TransactionCallbackWithoutResult` that is perfect for my objective. The problem is that it doesn't fit with lambda expressions. After all, that class was made in 2003 when Java 8 did not probably exist yet.  I would love to open a sample PR with default method implementations if someone is interested.","open","in: data,","djechelon","2019-01-18T18:20:23Z","2019-11-16T06:42:55Z"
"","22795","Add leading slash for path predicate if not present","I have tried the latest Kotlin Coroutines, but  I encountered a small issue when using coRouter DSL.  Spring Boot 2.2.0.BUILD-SNAPSHOT, Spring 5.2.0.M1, Kotlin 1.3, Java 8  For the `nest` path, I have to append ""/"" to make it work.  Check the source codes [here](https://github.com/hantsy/spring-kotlin-coroutines-sample/blob/master/data-r2dbc-fn/src/main/kotlin/com/example/demo/DemoApplication.kt).    ```kotlin     @Bean     fun routes(postHandler: PostHandler) = coRouter {         ""/posts"".nest {             GET("""", postHandler::all)             GET(""/{id}"", postHandler::get)             POST("""", postHandler::create)             PUT(""/{id}"", postHandler::update)             DELETE(""/{id}"", postHandler::delete)         } ```    But in my before experience,  for nest paths,  it should work without a ""/"" prefix in both annotated controllers and router DSL,  [example](https://github.com/hantsy/spring-reactive-sample/blob/master/boot-kotlin-dsl/src/main/kotlin/com/example/demo/DemoApplication.kt#L121-L130).  ```kotlin  fun routes() = router {         ""/posts"".nest {             GET("""", postHandler::all)             GET(""{id}"", postHandler::get)             POST("""", postHandler::create)             PUT(""{id}"", postHandler::update)             DELETE(""{id}"", postHandler::delete)         } } ```","closed","type: enhancement,","hantsy","2019-04-15T05:25:36Z","2019-05-21T10:26:53Z"
"","22770","error to validate ipv4 netty-common 4.1.23.Final","I have to configured hosts file in server with IP  17X.XX.XXX.XX server_env_test  and when I called service with webclient I get the following errror: ``` Caused by: java.lang.NullPointerException: null 	at io.netty.util.NetUtil.isValidIpV4Address(NetUtil.java:648) ~[netty-common-4.1.23.Final.jar:4.1.23.Final] 	at io.netty.util.NetUtil.createByteArrayFromIpAddressString(NetUtil.java:368) ~[netty-common-4.1.23.Final.jar:4.1.23.Final] 	at reactor.ipc.netty.options.InetSocketAddressUtil.attemptParsingIpString(InetSocketAddressUtil.java:132) ~[reactor-netty-0.7.6.RELEASE.jar:0.7.6.RELEASE] 	at reactor.ipc.netty.options.InetSocketAddressUtil.createForIpString(InetSocketAddressUtil.java:80) ~[reactor-netty-0.7.6.RELEASE.jar:0.7.6.RELEASE] 	at reactor.ipc.netty.options.InetSocketAddressUtil.createInetSocketAddress(InetSocketAddressUtil.java:69) ~[reactor-netty-0.7.6.RELEASE.jar:0.7.6.RELEASE] 	at reactor.ipc.netty.options.ClientOptions.createInetSocketAddress(ClientOptions.java:253) ~[reactor-netty-0.7.6.RELEASE.jar:0.7.6.RELEASE] 	at reactor.ipc.netty.http.client.HttpClientOptions.getRemoteAddress(HttpClientOptions.java:87) ~[reactor-netty-0.7.6.RELEASE.jar:0.7.6.RELEASE] 	at reactor.ipc.netty.http.client.MonoHttpClientResponse.lambda$subscribe$0(MonoHttpClientResponse.java:74) ~[reactor-netty-0.7.6.RELEASE.jar:0.7.6.RELEASE] 	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:44) ~[reactor-core-3.1.6.RELEASE.jar:3.1.6.RELEASE] 	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46) ~[reactor-core-3.1.6.RELEASE.jar:3.1.6.RELEASE] 	at reactor.core.publisher.Mono.subscribe(Mono.java:3080) ~[reactor-core-3.1.6.RELEASE.jar:3.1.6.RELEASE] 	at reactor.core.publisher.FluxRetryPredicate$RetryPredicateSubscriber.resubscribe(FluxRetryPredicate.java:123) ~[reactor-core-3.1.6.RELEASE.jar:3.1.6.RELEASE] 	at reactor.core.publisher.MonoRetryPredicate.subscribe(MonoRetryPredicate.java:51) ~[reactor-core-3.1.6.RELEASE.jar:3.1.6.RELEASE] 	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46) ~[reactor-core-3.1.6.RELEASE.jar:3.1.6.RELEASE] 	at reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55) ~[reactor-core-3.1.6.RELEASE.jar:3.1.6.RELEASE] 	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46) ~[reactor-core-3.1.6.RELEASE.jar:3.1.6.RELEASE] 	at reactor.ipc.netty.http.client.MonoHttpClientResponse.subscribe(MonoHttpClientResponse.java:79) ~[reactor-netty-0.7.6.RELEASE.jar:0.7.6.RELEASE] 	at reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55) ~[reactor-core-3.1.6.RELEASE.jar:3.1.6.RELEASE] 	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46) ~[reactor-core-3.1.6.RELEASE.jar:3.1.6.RELEASE] 	at reactor.core.publisher.MonoPeek.subscribe(MonoPeek.java:71) ~[reactor-core-3.1.6.RELEASE.jar:3.1.6.RELEASE] 	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46) ~[reactor-core-3.1.6.RELEASE.jar:3.1.6.RELEASE] 	at reactor.core.publisher.MonoPeek.subscribe(MonoPeek.java:71) ~[reactor-core-3.1.6.RELEASE.jar:3.1.6.RELEASE] 	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46) ~[reactor-core-3.1.6.RELEASE.jar:3.1.6.RELEASE] 	at reactor.core.publisher.MonoPeek.subscribe(MonoPeek.java:71) ~[reactor-core-3.1.6.RELEASE.jar:3.1.6.RELEASE] 	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46) ~[reactor-core-3.1.6.RELEASE.jar:3.1.6.RELEASE] 	at reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55) ~[reactor-core-3.1.6.RELEASE.jar:3.1.6.RELEASE] 	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46) ~[reactor-core-3.1.6.RELEASE.jar:3.1.6.RELEASE] 	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52) ~[reactor-core-3.1.6.RELEASE.jar:3.1.6.RELEASE] 	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46) ~[reactor-core-3.1.6.RELEASE.jar:3.1.6.RELEASE] 	at reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55) ~[reactor-core-3.1.6.RELEASE.jar:3.1.6.RELEASE] 	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46) ~[reactor-core-3.1.6.RELEASE.jar:3.1.6.RELEASE] 	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44) ~[reactor-core-3.1.6.RELEASE.jar:3.1.6.RELEASE] 	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46) ~[reactor-core-3.1.6.RELEASE.jar:3.1.6.RELEASE] 	at reactor.core.publisher.Mono.subscribe(Mono.java:3080) ~[reactor-core-3.1.6.RELEASE.jar:3.1.6.RELEASE] 	at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:128) ~[reactor-core-3.1.6.RELEASE.jar:3.1.6.RELEASE] 	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46) ~[reactor-core-3.1.6.RELEASE.jar:3.1.6.RELEASE] 	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60) ~[reactor-core-3.1.6.RELEASE.jar:3.1.6.RELEASE] 	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46) ~[reactor-core-3.1.6.RELEASE.jar:3.1.6.RELEASE] 	at reactor.core.publisher.MonoSubscriberContext.subscribe(MonoSubscriberContext.java:47) ~[reactor-core-3.1.6.RELEASE.jar:3.1.6.RELEASE] 	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60) ~[reactor-core-3.1.6.RELEASE.jar:3.1.6.RELEASE] 	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46) ~[reactor-core-3.1.6.RELEASE.jar:3.1.6.RELEASE] 	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60) ~[reactor-core-3.1.6.RELEASE.jar:3.1.6.RELEASE] 	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46) ~[reactor-core-3.1.6.RELEASE.jar:3.1.6.RELEASE] 	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150) ~[reactor-core-3.1.6.RELEASE.jar:3.1.6.RELEASE] 	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:81) ~[spring-cloud-sleuth-core-2.0.2.RELEASE.jar:2.0.2.RELEASE] 	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1630) ~[reactor-core-3.1.6.RELEASE.jar:3.1.6.RELEASE] 	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.request(ScopePassingSpanSubscriber.java:69) ~[spring-cloud-sleuth-core-2.0.2.RELEASE.jar:2.0.2.RELEASE] 	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103) ~[reactor-core-3.1.6.RELEASE.jar:3.1.6.RELEASE] 	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onSubscribe(ScopePassingSpanSubscriber.java:63) ~[spring-cloud-sleuth-core-2.0.2.RELEASE.jar:2.0.2.RELEASE] 	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54) ~[reactor-core-3.1.6.RELEASE.jar:3.1.6.RELEASE] 	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46) ~[reactor-core-3.1.6.RELEASE.jar:3.1.6.RELEASE] 	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60) ~[reactor-core-3.1.6.RELEASE.jar:3.1.6.RELEASE] 	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46) ~[reactor-core-3.1.6.RELEASE.jar:3.1.6.RELEASE] 	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44) ~[reactor-core-3.1.6.RELEASE.jar:3.1.6.RELEASE] 	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46) ~[reactor-core-3.1.6.RELEASE.jar:3.1.6.RELEASE] 	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60) ~[reactor-core-3.1.6.RELEASE.jar:3.1.6.RELEASE] 	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46) ~[reactor-core-3.1.6.RELEASE.jar:3.1.6.RELEASE] 	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60) ~[reactor-core-3.1.6.RELEASE.jar:3.1.6.RELEASE] 	at reactor.core.publisher.MonoLift.subscribe(MonoLift.java:46) ~[reactor-core-3.1.6.RELEASE.jar:3.1.6.RELEASE] 	at reactor.core.publisher.Mono.block(Mono.java:1174) ~[reactor-core-3.1.6.RELEASE.jar:3.1.6.RELEASE] 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_201] 	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_201] 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_201] 	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_201] 	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209) ~[spring-web-5.0.5.RELEASE.jar:5.0.5.RELEASE] 	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136) ~[spring-web-5.0.5.RELEASE.jar:5.0.5.RELEASE] 	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102) ~[spring-webmvc-5.0.5.RELEASE.jar:5.0.5.RELEASE] 	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877) ~[spring-webmvc-5.0.5.RELEASE.jar:5.0.5.RELEASE] 	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783) ~[spring-webmvc-5.0.5.RELEASE.jar:5.0.5.RELEASE] 	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.0.5.RELEASE.jar:5.0.5.RELEASE] 	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991) ~[spring-webmvc-5.0.5.RELEASE.jar:5.0.5.RELEASE] 	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925) ~[spring-webmvc-5.0.5.RELEASE.jar:5.0.5.RELEASE] 	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974) ~[spring-webmvc-5.0.5.RELEASE.jar:5.0.5.RELEASE] 	... 47 common frames omitted 	Suppressed: java.lang.Exception: #block terminated with an error 		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:93) ~[reactor-core-3.1.6.RELEASE.jar:3.1.6.RELEASE] 		at reactor.core.publisher.Mono.block(Mono.java:1175) ~[reactor-core-3.1.6.RELEASE.jar:3.1.6.RELEASE] 		... 65 common frames omitted ```","closed","for: external-project,","gasperlf","2019-04-08T21:11:53Z","2019-04-12T18:31:38Z"
"","22336","SpringEL should not throw IllegalAccessError for invalid assignment","I have Spring Framework 5.0.9.RELEASE. When I run below codes, following exception raised: > Exception in thread ""main"" java.lang.IllegalAccessError > 	at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.setValue(MethodReference.java:398) > 	at org.springframework.expression.spel.ast.CompoundExpression.setValue(CompoundExpression.java:96) > 	at org.springframework.expression.spel.ast.Assign.getValueInternal(Assign.java:42) > 	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:111) > 	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:328)  But I cannot catch Error for sonarlint checking rule in my project, could SpringEL wrap all java.lang.Throwable into ParseException? Or provide a solution to avoid Error crash my application? Thanks.  ```     public void run() {         SpelExpressionParser parser = new SpelExpressionParser(                 new SpelParserConfiguration(SpelCompilerMode.IMMEDIATE, this.getClass().getClassLoader()));         StandardEvaluationContext context = new StandardEvaluationContext();         RootObject root = new RootObject();         parser.parseExpression(""vars['var_map']=new java.util.HashMap()"").getValue(context, root);         parser.parseExpression(""vars['tmp_key']='key'"").getValue(context, root);         parser.parseExpression(                 ""vars['var_map'].get(vars['tmp_key'])=(vars['var_map'].get(vars['tmp_key'])?:createList('value'))"")                 .getValue(context, root);         System.out.println(root);     }      public static class RootObject {         public Map vars = new HashMap<>();         public Object stored;          public Object getStored() {             return stored;         }          public void setStored(Object stored) {             this.stored = stored;         }          public Map getVars() {             return vars;         }          public List createList(String listValue) {             return Arrays.asList(listValue);         }          @Override         public String toString() {             return ""RootObject [vars="" + vars + "", stored="" + stored + ""]"";         }     } ```","closed","type: enhancement,","heyouxian","2019-02-03T02:03:27Z","2019-02-05T00:00:20Z"
"","22246","References of CountingBeforeAdvice target its previous location","I have some questions about AOP. So I research the source codes.  I want to debug the test source codes of AOP. I found the references of `CountingBeforeAdvice` was missed, and I found `org.springframework.tests.aop.advice.CountingBeforeAdvice` is in the repo.  Maybe the reference of `CountingBeforeAdvice` is incorrect. Please check it. Thanks a lot.","closed","in: core,","diguage","2019-01-12T14:38:22Z","2021-11-29T09:42:58Z"
"","22271","HibernateTemplate.bulkUpdate deprecated but no replacement provided","I have noticed that during upgrade from Spring 4.3 to 5.1 HibernateTemplate.bulkUpdate has been deprecated  Source: https://docs.spring.io/spring-framework/docs/current/javadoc-api/deprecated-list.html Source: https://github.com/spring-projects/spring-framework/blob/master/spring-orm/src/main/java/org/springframework/orm/hibernate5/HibernateTemplate.java#L1058  In the docs, it is not specified how to properly replace the handy `bulkUpdate` method.  Request here is to document how should one replace the deprecated bulkUpdate method in his/her code.  ---- Comment:  I also have read #20972 but fail to understand why can lambdas be more elegant than a handy dirty method.  In my case, I am writing unit tests and I want a quick and _not-too-dirty-but-dirty-is-acceptable_ way to clear the database or do bulk operations.  In the past, I used  new HibernateTemplate(sessionFactory).bulkUpdate(""delete from Entity"");  Now I have to use new HibernateTemplate(sessionFactory).execute(session->session.createQuery(""delete from Entity"").executeUpdate());  In my personal opinion, the second doesn't look so better than the first. And yes, bulkUpdate runs a lambda internally.","closed","status: invalid,","djechelon","2019-01-16T18:18:32Z","2019-01-17T20:13:55Z"
"","22408","Add filter before RouterHandler in WebFlux","I have my app deployed behind load balancer and I take advantage of `ForwardedHeaderTransformer` to be able to have proper redirect urls (mostly for Spring Security OAuth)   Then I have my router functions which need to have conext path prefix hardcoded (since `ForwardedHeaderTransformer` changed conextPath and uri).   I would like not being forced to hard code context path into my router functions. Instead I would like to have such context path stripped out by filter before going to `RouterHandler`. Therefore I suggest adding a filter mechanism that would be used just before `RouterHandler`. I cannot use general purpose `WebFilter` because it will work also for requests that will be base for redirections.","closed","status: declined,","kkocel","2019-02-12T17:44:01Z","2019-11-28T16:38:13Z"
"","2001","readme writing changes to improve readability","I have made writing changes to the Readme file to improve readability.","closed","","kyotee","2018-10-27T02:27:46Z","2018-10-29T13:29:02Z"
"","22758","Add Embedded Postgresql","I have been using [Postgres Embedded](https://github.com/yandex-qatools/postgresql-embedded) for testing, this PR makes it available via Spring APIs for the same purpose.","closed","status: declined,","juliano","2019-04-07T17:18:59Z","2021-12-02T15:16:19Z"
"","22329","Can someone please reopen issue 18879?","I have already commented there but seems that I have been promptly ignored.  https://github.com/spring-projects/spring-framework/issues/18879","closed","status: invalid,","adamstyl","2019-02-01T09:20:25Z","2019-02-01T12:32:38Z"
"","22292","Reactor (Webflux) cannot recognise type in Mono, ""Could not find acceptable representation""","I have a simple code forwarding requests:  ```    public Mono> restProxy(ServerHttpRequest proxyRequest,             @RequestBody(required = false) byte[] body) {                 URI uri = // new URI                 WebClient.RequestHeadersSpec partBuiltRequest = webClientBuilder.build().method(method).uri(uri);      return partBuiltRequest        .exchange()        .flatMap(clientResponse -> {                   return Mono.just(ResponseEntity                             .status(clientResponse.statusCode())                             .headers(clientResponse.headers().asHttpHeaders())                             .body(clientResponse.bodyToMono(byte[].class))                            );          }); } ```  with that code i have ""Could not find acceptable representation"" exception is thrown at:  AbstractMessageWriterResultHandler:160   (Spring-webflux-5.1.4.RELEASE) and it's because method writeBody parameter's: body arrives as MonoOnAssembly and code can't recognise proper type and can't find converter (elementType is just Object).   however, if in my method, main return will be replaced with:  return clientResponse.toEntity(byte[].class);  everything works, because body parameter in AbstractMessageWriterResultHandler.writeBody method is byte[] type, so everything is correctly recognised. And i could use this way, but, with toEntity method, i cannot set headers in returned ResponseEntity.","closed","status: invalid,","razorree","2019-01-22T20:00:31Z","2019-01-23T10:26:41Z"
"","22533","@ManyToMany not inserting into join table because of custom Hibernate Validator - Spring Data JPA 2.1.0.RELEASE","I have a ManyToMany relationship between User and Role. I have a custom hibernate validation constraint on my roles Set in User.  When I try to create a new user, the following happens:  - If I do not have my custom validation, the association is saved correctly and I see an entry in user_role join table.   - If I include the constraint, the user is inserted without an entry into user_role table. The code is summarized below. I cannot understand how using the RoleRepo to fetch all of the roles in the validator could in any way break the save, but it does.  ```java class User {   @Id   String username;    @ValidOption   @ManyToMany(cascade = {CascadeType.ALL //for example}, fetch=FetchType.EAGER)   Set roles; }  class Role {   @Id   String name; }  class CustomValidator implements ConstraintValidator {   RoleRepository roleRepo; //injected by spring... have factory configured    @Override   public boolean isValid(Object value, ConstraintValidatorContext context){     roleRepo.findAll() //<-------------- THIS CALL BREAKS THE SAVE     return true;   } }  @Service class UserService {   UserRepository userRepo;    @Transactional   public void createUser(User user){     //user has a transient instance of Role with the correct Id set     if(userExists(user)) throw new ApiException();     userRepo.save(user);   } } ```  This works 100% exactly the way I would expect if I remove the custom validator. Otherwise, no roles in the join table, **even though the entity returned by save has the role in the collection.**  Reproducible example project: https://github.com/tjhelmuth/SPR-22533/blob/master/src/test/java/spr22533/bug/BugExample.java","closed","status: invalid,","tjhelmuth","2019-03-06T22:21:06Z","2019-03-07T15:48:47Z"
"","22698","ConcurrentModificationException when serving Servlet.fn request and Undertow","I get this with Undertow (but not Tomcat):  ``` Caused by: java.util.ConcurrentModificationException 	at java.util.HashMap$HashIterator.nextNode(HashMap.java:1437) 	at java.util.HashMap$KeyIterator.next(HashMap.java:1461) 	at io.undertow.servlet.util.IteratorEnumeration.nextElement(IteratorEnumeration.java:44) 	at org.springframework.web.servlet.function.DefaultServerRequest$ServletAttributesMap.clear(DefaultServerRequest.java:377) 	at org.springframework.web.servlet.function.RequestPredicates.restoreAttributes(RequestPredicates.java:292) 	at org.springframework.web.servlet.function.RequestPredicates.access$300(RequestPredicates.java:67) ```  Basic app:  ``` @SpringBootApplication public class ServletApplication {  	public static void main(String[] args) { 		SpringApplication.run(ServletApplication.class, args); 	}  	@Bean 	public RouterFunction userEndpoints() { 		return route().GET(""/hello"", request -> ok().body(""Hello"")).build(); 	}  } ```  The error shows up when you try to visit a non-existent endpoint (e.g. http://localhost:8080/).","closed","type: bug,","dsyer","2019-03-28T09:38:29Z","2019-03-28T15:21:52Z"
"","22266","Bean Validation should not throw 500 Internal Server Error even without explicitly provided error handlers","I find it really surprising that while bean validation is so deeply ingrained into Spring core, with most of the code being placed in spring-context, default validation, when custom handlers are not provided, is not properly supported. Why does `DispatcherServlet` have to throw a nasty exception when it's a controllable situation? Besides, we do keep control over the response body, but intentionally decide to lose control over HTTP response status. Spring should have sensible defaults as much as possible. **Returning 4XX when something is wrong with the client's request** seems to be the case in point.  To make matters worse, it's ""consistently bad"" for both Servlet-based applications and WebFlux. And while for Servlet-based MVC application it's not a big deal to add a handler, **it's a lot more complicated for router functions**. What if I don't want to add `ControllerAdvice`. Come to think of it, for a typical reactive application, I don't even what to know or hear anything about controllers. I'm either implementing bidirectional endpoints for continually sending data back and force or a data ingestors that are not operating based on CRUD paradigm. If I only use `@ResponseStatus` and try to catch validation exceptions, I'm losing control over forming a detailed response body. The option I am resorting to right now is to add `onErrorResume` to my reactive flow inside handler functions. As an alternative, I can implement my own `WebExceptionHandler`. But both options sound like overengineering when all I need is to change the HTTP status and nothing more.    I would love to work on this myself if we agree that it should be improved for both `web` and `webflux`.","closed","in: web,","yuranos","2019-01-16T07:38:29Z","2019-05-22T16:06:54Z"
"","22433","RestController Reactor and Schedulers.elastic()","I dont know whether it is good place or not.  Env: Spring boot 2.1.3:  pom: https://github.com/marcin-kasinski/SpringBootMicroservice/blob/master/pom.xml  I have a problem with  Restcontroller  To simplify I've changed it to be as simple as posible ```  @RequestMapping(""/get-by-email4"") 	public Mono getByEmail4(@RequestParam(value = ""email"", defaultValue = ""."") String email,@RequestHeader HttpHeaders headers) { 	  return Mono.fromCallable(() -> { 			  log.info(""getByEmail4 START""); 				User user = null; 				try { 					Thread.sleep(1000); 					String threadName=Thread.currentThread().getName() ; 					log.info(""->->->->getEmail threadName ""+threadName); 					return new User();					 				} catch (Exception e) { 					log.error(""getByEmail4 error :""+e); 				} 				log.info(""getByEmail4 END""); 				return user; 		    }).subscribeOn(Schedulers.elastic()); 	}  ``` When I test it manually everything works fine	  I have problem with performance test I test this endpoint with:  `siege -b -c 100 -r 10 http://192.168.1.239:9191/api/get-by-email4?email=ajax@ajax.com`  Based on logs I can see that my code is executed but there is lots of exceptions: ```  2019-02-19 17:39:29.340  INFO [SpringBootMicroservice,ca5fb133753715a6,f88c2dca38578211,true] 7708 --- [     elastic-57] mk.MicroserviceController                : ->->->->getEmail threadName elastic-57 2019-02-19 17:39:29.344  INFO [SpringBootMicroservice,27b74a1b19cf6d6b,168bbbcd07321099,true] 7708 --- [     elastic-30] mk.MicroserviceController                : ->->->->getEmail threadName elastic-30 2019-02-19 17:39:29.345  INFO [SpringBootMicroservice,b1f0bc3ece931717,ec75654d08f2ceb8,true] 7708 --- [     elastic-54] mk.MicroserviceController                : ->->->->getEmail threadName elastic-54 2019-02-19 17:39:29.346 ERROR [SpringBootMicroservice,d93da046f70f3123,e30bd6ed15714e3a,true] 7708 --- [     elastic-61] reactor.core.scheduler.Schedulers        : Scheduler worker in group main failed with an uncaught exception  java.lang.NullPointerException: null 	at org.apache.catalina.core.AsyncContextImpl.dispatch(AsyncContextImpl.java:209) ~[tomcat-embed-core-9.0.16.jar:9.0.16] 	at org.apache.catalina.core.AsyncContextImpl.dispatch(AsyncContextImpl.java:175) ~[tomcat-embed-core-9.0.16.jar:9.0.16] 	at org.apache.catalina.core.AsyncContextImpl.dispatch(AsyncContextImpl.java:169) ~[tomcat-embed-core-9.0.16.jar:9.0.16] 	at org.springframework.web.context.request.async.StandardServletAsyncWebRequest.dispatch(StandardServletAsyncWebRequest.java:131) ~[spring-web-5.1.5.RELEASE.jar:5.1.5.RELEASE] 	at org.springframework.web.context.request.async.WebAsyncManager.setConcurrentResultAndDispatch(WebAsyncManager.java:387) ~[spring-web-5.1.5.RELEASE.jar:5.1.5.RELEASE] 	at org.springframework.web.context.request.async.WebAsyncManager.lambda$startDeferredResultProcessing$8(WebAsyncManager.java:453) ~[spring-web-5.1.5.RELEASE.jar:5.1.5.RELEASE] 	at org.springframework.web.context.request.async.DeferredResult.setResultInternal(DeferredResult.java:267) ~[spring-web-5.1.5.RELEASE.jar:5.1.5.RELEASE] 	at org.springframework.web.context.request.async.DeferredResult.setResult(DeferredResult.java:238) ~[spring-web-5.1.5.RELEASE.jar:5.1.5.RELEASE] 	at org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.onComplete(ReactiveTypeHandler.java:465) ~[spring-webmvc-5.1.5.RELEASE.jar:5.1.5.RELEASE] 	at reactor.core.publisher.StrictSubscriber.onComplete(StrictSubscriber.java:123) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE] 	at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:113) ~[spring-cloud-sleuth-core-2.1.0.M2.jar:2.1.0.M2] 	at reactor.core.publisher.FluxSubscribeOnCallable$CallableSubscribeOnSubscription.run(FluxSubscribeOnCallable.java:251) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE] 	at reactor.core.scheduler.ElasticScheduler$DirectScheduleTask.run(ElasticScheduler.java:291) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE] 	at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:50) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE] 	at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:27) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE] 	at org.springframework.cloud.sleuth.instrument.async.TraceCallable.call(TraceCallable.java:69) ~[spring-cloud-sleuth-core-2.1.0.M2.jar:2.1.0.M2] 	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_161] 	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[na:1.8.0_161] 	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[na:1.8.0_161] 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[na:1.8.0_161] 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[na:1.8.0_161] 	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_161]  2019-02-19 17:39:29.346  INFO [SpringBootMicroservice,980443c5520c141e,2f92bb1d82ab3aa1,true] 7708 --- [     elastic-56] mk.MicroserviceController                : ->->->->getEmail threadName elastic-56 2019-02-19 17:39:29.357  INFO [SpringBootMicroservice,59d75a75d7e371f4,4e514a2ac70717e3,true] 7708 --- [     elastic-20] mk.MicroserviceController                : ->->->->getEmail threadName elastic-20 2019-02-19 17:39:29.369  INFO [SpringBootMicroservice,ad1af493a04646a2,79d8374630f40a7d,true] 7708 --- [    elastic-111] mk.MicroserviceController                : ->->->->getEmail threadName elastic-111  ```	  Can you tell me what it is and how I can solve it?  It works with netty but with tomcat it doesn't. I mean when I switch to netty there are no error messages.","closed","","marcin-kasinski","2019-02-19T18:17:42Z","2019-03-18T13:00:21Z"
"","22792","Some trivial optimization in method populateBean()","I don't think it's necessary to call the same get method so many times, maybe can do some trivial optimization here.","closed","type: enhancement,","hecenjie","2019-04-14T09:01:51Z","2019-04-23T10:48:22Z"
"","22700","resourceUrlProvider cause cycle dependency","I create a [repo](https://github.com/zjengjie/dep-issue) reproduce this issue.  I have opened an issue on https://github.com/spring-cloud/spring-cloud-openfeign/issues/142 , but they think it's not cause by spring cloud.  I test just remove ```java @Bean public ResourceUrlProvider resourceUrlProvider() { 	return new ResourceUrlProvider(); } ``` in `WebFluxConfigurationSupport` will avoid this error.  I really don't know which spring project should put the issue, any advice?","closed","status: invalid,","zjengjie","2019-03-28T10:23:14Z","2019-03-31T16:21:38Z"
"","22599","DeferredResult didn't support 302 with response","I confused an issue that `DeferredResult` didn't support setting with 302 status of response, so I gave up this `DeferredResult` when returning response data,  how to resolve this?   for example as below:   ```java @Controller                       @RequestMapping(""/"")   public class SampleController{ @RequestMapping(""/test"")   @ResponseBody     public DeferredResult test( HttpServletResponse response){      DeferredResult dr = new DeferredResult();      //something to do       response.setStatus(302);     response.setHeader(""Location"", xxxx);      return dr;   } } ```","closed","for: stackoverflow,","pli2014","2019-03-15T09:17:21Z","2019-03-20T19:17:05Z"
"","22274","FatalBeanException while instantiating RestTemplate in Junit Test in Spring Version 5.1.4","I am using Spring Boot 2.1.2(Spring Version is 5.1.4) and getting FatalBeanException while instantiating RestTemplate in Junit test case. It works fine when I downgrade Spring Version to 5.1.3. I dont see any changes to RestTemplate in release notes of 5.1.4.   java.lang.NoClassDefFoundError: org/springframework/beans/FatalBeanException 	at org.springframework.http.converter.json.MappingJackson2HttpMessageConverter.(MappingJackson2HttpMessageConverter.java:59) 	at org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter.(AllEncompassingFormHttpMessageConverter.java:76) 	at org.springframework.web.client.RestTemplate.(RestTemplate.java:148) 	at . . . . Caused by: java.lang.ClassNotFoundException: org.springframework.beans.FatalBeanException 	at java.net.URLClassLoader.findClass(URLClassLoader.java:381) 	at java.lang.ClassLoader.loadClass(ClassLoader.java:424) 	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331) 	at java.lang.ClassLoader.loadClass(ClassLoader.java:357) 	... 27 more","closed","status: invalid,","Prazhant","2019-01-17T15:31:30Z","2019-01-17T21:57:28Z"
"","22775","com.mongodb.MongoWaitQueueFullException with Webflux + reactive Mongo driver","I am trying to do load test of a simple Spring webflux application using gatling tool. Application is developed using 'spring-boot-starter-webflux' and 'spring-boot-starter-data-mongodb-reactive' projects. It simply read mongo document with a specific unique column. I inject concurrent users using gatling setUp(scn.inject(atOnceUsers(userCount)).protocols(httpConf))  I start mongo db instance like shown below  **Replica** ``` mongod --replSet rs0 --port 27020 --bind_ip localhost,somehostname,some_ip --dbpath C:\mongo\data\db0 --smallfiles --oplogSize 128 mongod --replSet rs0 --port 27021 --bind_ip localhost,somehostname,some_ip --dbpath C:\mongo\data\db1 --smallfiles --oplogSize 128 mongod --replSet rs0 --port 27022 --bind_ip localhost,somehostname,some_ip --dbpath C:\mongo\data\db2 --smallfiles --oplogSize 128 ```  **standalone** ``` mongod --port 27018 --bind_ip localhost,somehostname,some_ip --dbpath C:\mongo\data\db9 --smallfiles --oplogSize 128 ```  **Setup 1**: application running in Windows Desktop(Intel i5 and 16GB RAM), Mongo DB replica mode (3 node) running on windows laptop (Intel i7 processor and 16GB RAM) and Gatling load test scripts also on desktop. Both application and Gatling scripts on desktop are containerized. Queue size is 500 by default, I have overridden with 1000 queue size using waitQueueMultiple I am getting this com.mongodb.MongoWaitQueueFullException: with even 3000 concurrency itself. **Setup 2**: I have same setup as above but Mongo DB is running in standalone mode I am getting this com.mongodb.MongoWaitQueueFullException: with even 3000 concurrency itself. **Setup 3**: application, Mongo DB standalone mode and Gatling load test scripts all running on Desktop. And all are containerized and connected with a bridge network Queue size is 500 by default, overridden with 1000 queue size this setup works fine till 10000 concurrency. I understand here there is no role of network latency , so the better performance  **I have below question**   1. How to resolve this exception , apart from increasing the queue size .   2. Why there is a Mongo DB performance difference between Standalone and Replica mode As mentioned above setup 1 and 2 raises exception when concurrency ~3000 users. I repeat these tests at random time of the day. But at some point of time standalone setup of mongo database performance extremely well and till 48000 concurrent users application scales well(no exception thrown). I checked that Mongo is receivng the requests by watching mongostat/mongotop and also confirmed by running db.adminCommand(""top"") before and after the each test. I can confirm that read counts are increasing by number of concurrent users i used for test. My only worry is same time if I use mongo DB in replica mode (Setup 1) it does not show the better performance , it continues to throw exception at 3000 concurrency itself. Why replica mode is not performaing equal to standalone mode ) Application code is same , gatling script is same.  I am using mongodb-driver-reactivestreams 1.9.2 Mongo Database 4.0.8","closed","status: invalid,","vpatil1311","2019-04-09T13:13:21Z","2019-04-12T19:13:36Z"
"","22588","Expose MediaType resolution via protected method in FormHttpMessageWriter","I am trying to create a post request via `WebClient` to get Microsoft powerbi token.  ```java MultiValueMap credentials = new LinkedMultiValueMap<>(); credentials.add(""xxx"",""xxx""); credentials.add(""yyy"",""yyy"");  Mono response = webClientService.getWebclient()                     .post()                     .uri(oauthUrl)                     .contentType(MediaType.APPLICATION_FORM_URLENCODED)                     .accept(MediaType.APPLICATION_JSON)                     .body(BodyInserters.fromFormData(credentials))                     .retrieve()                     .bodyToMono(String.class);              log.debug(""RESPONSE STRING = ""+response.block()); ```  But i am always getting 400 bad request exception -> Suppressed: java.lang.Exception: #block terminated with an error.  **I had similar code on Spring Boot 2.0.0.RELEASE where it worked fine. But updating to Spring Boot version 2.1.2.RELEASE makes this crashing. Any suggestions?**  FYI:   ```java public WebClient getWebclient() {         TcpClient client = TcpClient.create()                 .option(ChannelOption.CONNECT_TIMEOUT_MILLIS, 10000)                 .doOnConnected(connection -> connection.addHandlerLast(new ReadTimeoutHandler(15)).addHandlerLast(new WriteTimeoutHandler(15)));          return WebClient.builder()                 .clientConnector(new ReactorClientHttpConnector(HttpClient.from(client).followRedirect(true)))                 .filter(logRequest())                 .filter(logResponse())                 .build();     } ```  I also tried to add:  ```java ExchangeStrategies strategies = ExchangeStrategies.builder()                 .codecs(configurer -> {                     configurer.registerDefaults(true);                     configurer.customCodecs().reader(new FormHttpMessageReader());                 })                 .build(); ```  but it did not help.  When i curl it i get successful response:  ```      curl -X POST -d 'grant_type=password&client_id=abc&resource=url&scope=openid&username=username&password=password=' -vD --  https://microsofrtUrl ``` ``` POST /common/oauth2/token HTTP/1.1 > Host: xxx > User-Agent: curl/7.61.1 > Accept: */* > Content-Length: 216 > Content-Type: application/x-www-form-urlencoded  ```","closed","in: web,","Plankton93","2019-03-13T14:26:19Z","2019-04-10T13:28:44Z"
"","22422","Gradle asciidoctor task fails on Windows","I am trying to build the Spring sources from the latest release (5.1.5.RELEASE), but the `asciidoctor` task is failing every time.  `build.gradle` has the following entries.  ```groovy dependencies { 		classpath(""io.spring.gradle:propdeps-plugin:0.0.9.RELEASE"") 		classpath(""org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.16"") 	} }  // 3rd party plugin repositories can be configured in settings.gradle plugins { 	id ""io.spring.dependency-management"" version ""1.0.5.RELEASE"" apply false 	id ""org.jetbrains.kotlin.jvm"" version ""1.2.71"" apply false 	id ""org.jetbrains.dokka"" version ""0.9.17"" 	id ""org.asciidoctor.convert"" version ""1.5.8"" } ```  The stack trace is attached: [log.txt](https://github.com/spring-projects/spring-framework/files/2872045/log.txt)","closed","","repos-hb","2019-02-16T14:46:17Z","2019-04-06T17:08:46Z"
"","22623","RequestMapping produces 406 Not Acceptable","I am running on Spring/Spring MVC 4.3.22. I have a controller as follows: ```java @RequestMapping(value = ""byclientid/{clientId}"", produces = MediaType.APPLICATION_JSON_VALUE) public String statsByClientId(@PathVariable(""clientId"") String clientId, ModelMap m) {     ClientStat e = statsService.getCountForClientId(clientId);      m.put(JsonEntityView.ENTITY, e);      return JsonEntityView.VIEWNAME; } ``` URIs in this format: [http://x.x.x.x/api/stats/byclientid/{clientId}](http://x.x.x.x/api/stats/byclientid/{clientId}) will be matched.      When I make a request to      [http://x.x.x.x/openid-connect-server/api/stats/byclientid/27461968070-nu8bpk3k0lvdnoin97vu9vj278e1lo80.usercontent.github.io?_=1553139119816](http://x.x.x.x/openid-connect-server/api/stats/byclientid/27461968070-nu8bpk3k0lvdnoin97vu9vj278e1lo80.usercontent.github.io?_=1553139119816),       it's OK, but when I request to      [http://x.x.x.x/openid-connect-server/api/stats/byclientid/167480702619-8e1lo80dnu8bpk3k0lvvj27noin97vu9.apps.googleusercontent.com?_=1553139120932](http://x.x.x.x/openid-connect-server/api/stats/byclientid/167480702619-8e1lo80dnu8bpk3k0lvvj27noin97vu9.apps.googleusercontent.com?_=1553139120932)，    I got an `406 Not Acceptable` error.  This problem confused me, The two URLs are similar, but got the totally different results!    so I debugged the source code. I found `AbstractMappingContentNegotiationStrategy` as follows:   ```java public abstract class AbstractMappingContentNegotiationStrategy ...{ 	@Override 	public List resolveMediaTypes(NativeWebRequest webRequest) 			throws HttpMediaTypeNotAcceptableException {  		return resolveMediaTypeKey(webRequest, getMediaTypeKey(webRequest)); 	}  	/** 	 * An alternative to {@link #resolveMediaTypes(NativeWebRequest)} that accepts 	 * an already extracted key. 	 * @since 3.2.16 	 */ 	public List resolveMediaTypeKey(NativeWebRequest webRequest, String key) 			throws HttpMediaTypeNotAcceptableException {  		if (StringUtils.hasText(key)) { 			MediaType mediaType = lookupMediaType(key); 			if (mediaType != null) { 				handleMatch(key, mediaType); 				return Collections.singletonList(mediaType); 			} 			mediaType = handleNoMatch(webRequest, key); 			if (mediaType != null) { 				addMapping(key, mediaType); 				return Collections.singletonList(mediaType); 			} 		} 		return Collections.emptyList(); 	} } ``` the `getMediaTypeKey(webRequest)` method return `""com""`, and the `mediaType` = `""application/x-msdownload""`. So I understand what's going on. The ProduceMediaType doesn't match the `""application/x-msdownload""`.  But I don't think that should happen. Can I say this is a bug?  Affects: 4.3.22 See also #19751","closed","status: invalid,","zollty","2019-03-21T05:46:12Z","2019-03-26T11:10:25Z"
"","22437","RestControllerAdvice  is not working when I deployed myproject  in tomcat with war","I  use  spring boot : 2.0.4.RELEASE    the advice code is: ``` package com.my.common.base; import java.util.Arrays; import org.springframework.http.HttpStatus; import org.springframework.web.bind.annotation.ExceptionHandler; import org.springframework.web.bind.annotation.ResponseStatus; import org.springframework.web.bind.annotation.RestControllerAdvice;  @RestControllerAdvice public class GlobalControllerAdvice {     /*      * process custom exception      */     @ExceptionHandler(MyRunTimeException.class)     @ResponseStatus(HttpStatus.UNAVAILABLE_FOR_LEGAL_REASONS)     public Result myRuntimeExceptionHandler(MyRunTimeException e) {         Result reslut=new Result(e.getStatus());         if(e.getPayload() != null) {             reslut.setData(e.getPayload());         }else {             reslut.setReplacements(Arrays.asList(e.getMessage()));         }         return reslut;     }     @ExceptionHandler(RuntimeException.class)     @ResponseStatus(HttpStatus.UNAVAILABLE_FOR_LEGAL_REASONS)     public Result runtimeExceptionHandler(RuntimeException e) {         Result reslut=new Result(""COMF0001"");         reslut.setReplacements(Arrays.asList(e.getMessage()));         logger.error(""-------------------------RuntimeException ---------------------------------"",e);         return reslut;     }     @ExceptionHandler(Exception.class)     @ResponseStatus(HttpStatus.INTERNAL_SERVER_ERROR)     public Result finalExceptionHandler(Exception e) {         Result reslut=new Result(""COMF0001"");         reslut.setReplacements(Arrays.asList(e.getMessage()));         logger.error(""-------------------------Exception---------------------------------"",e);         return reslut;     } } ``` the base common abstract  exception is :   ``` package com.my.common.base;  import org.springframework.core.NestedExceptionUtils;  public abstract class MyRunTimeException extends RuntimeException {          private static final long serialVersionUID = -784169056103860695L;     private String status;     private Object payload;          public  MyRunTimeException(String msg) {         super(msg);     }          public MyRunTimeException(String status,String msg) {         super(msg);         this.status=status;     }          public MyRunTimeException(String message, Throwable cause) {         super(message, cause);     }          public MyRunTimeException(String status,String msg,Object... payload) {         super(msg);         this.status=status;         this.payload=payload;     }          public MyRunTimeException(String status,String msg, Throwable cause,Object... payload) {         super(msg, cause);         this.status=status;         this.payload=payload;     }          public String getMessage() {         return NestedExceptionUtils.buildMessage(super.getMessage(), getCause());     }          public Throwable getRootCause() {         return NestedExceptionUtils.getRootCause(this);     }       public  String getStatus() {         if(status == null) {             return this.getMessage();         }          return status;     }       public Object getPayload() {         return this.payload;     }      @Override     public String toString() {         return ""MyRunTimeException [status="" + status + "", payload="" + payload + "", message="" + this.getMessage() +""]"";     } }  ``` and a biz exception is :   ``` import com.my.common.base.MyRunTimeException; public class SubFundRuntimeException  extends MyRunTimeException {     public  SubFundRuntimeException(String msg) {         super(msg);     }          public SubFundRuntimeException(String status,String msg) {         super(status,msg);     }          public SubFundRuntimeException(String message, Throwable cause) {         super(message, cause);     }          public SubFundRuntimeException(String status,String msg,Object... payload) {         super(status,msg,payload);     }          public SubFundRuntimeException(String status,String msg, Throwable cause,Object... payload) {         super(status,msg, cause,payload);     }  } ``` I throw a new SubFundRuntimeException instance in my service code some where . ``` throw   new SubFundRuntimeException(""FACF0002"", ""Your ID CODE""); ```  I use Eclipse for development，code above work well, but when I deploy project in tomcat advice code is not working.  StackTrace as follow: ``` 2019-02-20 17:40:26.706 ERROR 2227 --- [nio-8098-exec-4] c.o.b.r.e.ExceptionHandlerAdvice         : Unhandled exception  com.my.subfund.SubFundRuntimeException: Your ID CODE         at com.my.subfund.service.impl.SubfundCustomPageHeaderServiceImpl.nextStage(SubfundCustomPageHeaderServiceImpl.java:115) ~[my-subfund-0.0.1-SNAPSHOT.jar:0.0.1-SNAPSHOT]         at com.my.subfund.service.impl.SubfundCustomPageHeaderServiceImpl$$FastClassBySpringCGLIB$$c8b5d0d2.invoke() ~[my-subfund-0.0.1-SNAPSHOT.jar:0.0.1-SNAPSHOT]         at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204) ~[spring-core-5.0.8.RELEASE.jar:5.0.8.RELEASE]         at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]         at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]         at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294) ~[spring-tx-5.0.8.RELEASE.jar:5.0.8.RELEASE]         at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98) ~[spring-tx-5.0.8.RELEASE.jar:5.0.8.RELEASE]         at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]         at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]         at com.my.subfund.service.impl.SubfundCustomPageHeaderServiceImpl$$EnhancerBySpringCGLIB$$d140aa36.nextStage() ~[my-subfund-0.0.1-SNAPSHOT.jar:0.0.1-SNAPSHOT]         at com.my.facilities.controller.FacilitiesCustomPageHeaderController.nextStage(FacilitiesCustomPageHeaderController.java:42) ~[my-facilities-0.0.1-SNAPSHOT.jar:0.0.1-SNAPSHOT]         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_172]         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_172]         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_172]         at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_172]         at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]         at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]         at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]         at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]         at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]         at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]         at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]         at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]         at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974) [spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]         at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866) [spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]         at javax.servlet.http.HttpServlet.service(HttpServlet.java:635) [servlet-api.jar:na]         at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851) [spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]         at javax.servlet.http.HttpServlet.service(HttpServlet.java:742) [servlet-api.jar:na]         at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [catalina.jar:8.5.32]         at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [catalina.jar:8.5.32]         at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) [tomcat-websocket.jar:8.5.32]         at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [catalina.jar:8.5.32]         at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [catalina.jar:8.5.32]         at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]         at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [catalina.jar:8.5.32]         at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [catalina.jar:8.5.32]         at org.jasig.cas.client.session.SingleSignOutFilter.doFilter(SingleSignOutFilter.java:92) [cas-client-core-3.5.0.jar:3.5.0]         at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [catalina.jar:8.5.32]         at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [catalina.jar:8.5.32]         at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]         at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [catalina.jar:8.5.32]         at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [catalina.jar:8.5.32]         at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123) [druid-1.1.6.jar:1.1.6]         at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [catalina.jar:8.5.32]         at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [catalina.jar:8.5.32]         at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]         at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]         at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]         at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]         at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]         at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]         at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]         at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]         at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]         at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]         at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]         at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]         at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]         at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]         at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]         at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]         at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]         at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]         at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]         at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]         at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]         at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]         at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]         at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]         at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]         at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]         at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]         at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]         at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]         at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]         at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]         at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]         at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]         at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [catalina.jar:8.5.32]         at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [catalina.jar:8.5.32]         at org.springframework.boot.web.servlet.support.ErrorPageFilter.doFilter(ErrorPageFilter.java:130) [spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]         at org.springframework.boot.web.servlet.support.ErrorPageFilter.access$000(ErrorPageFilter.java:66) [spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]         at org.springframework.boot.web.servlet.support.ErrorPageFilter$1.doFilterInternal(ErrorPageFilter.java:105) [spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]         at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]         at org.springframework.boot.web.servlet.support.ErrorPageFilter.doFilter(ErrorPageFilter.java:123) [spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]         at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [catalina.jar:8.5.32]         at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [catalina.jar:8.5.32]         at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]         at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]         at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [catalina.jar:8.5.32]         at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [catalina.jar:8.5.32]         at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) [catalina.jar:8.5.32]         at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [catalina.jar:8.5.32]         at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493) [catalina.jar:8.5.32]         at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [catalina.jar:8.5.32]         at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81) [catalina.jar:8.5.32]         at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:650) [catalina.jar:8.5.32]         at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [catalina.jar:8.5.32]         at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) [catalina.jar:8.5.32]         at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800) [tomcat-coyote.jar:8.5.32]         at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-coyote.jar:8.5.32]         at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:800) [tomcat-coyote.jar:8.5.32]         at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1471) [tomcat-coyote.jar:8.5.32]         at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-coyote.jar:8.5.32]         at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_172]         at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_172]         at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-util.jar:8.5.32]         at java.lang.Thread.run(Thread.java:748) [na:1.8.0_172] ``` on browser side, in dev enviroment  return data  is  ``` Status Code: 451 {""status"":""FACF0002"",""replacements"":[""Your ID CODE""]} ```  in test enviroment ( Apache Tomcat/8.5.32)  return data is  ``` Status Code: 500  {""message"":""Internal server error"",""exception"":""Your ID CODE""} ```","closed","","cuivip","2019-02-20T10:56:05Z","2022-02-18T19:09:59Z"
"","22601","Documentation: Getting Started Guides. Please don't say: ""Completed in 15 minutes""","https://spring.io/guides  > Designed to be completed in 15-30 minutes.  Sorry to say that, this is not realistic. Better:  > Designed to be completed in around/under 1 hour by an experienced Java Programmer with a Spring background.  or  > Designed to be completed by a Spring committer in 15-30 minutes (that's a joke)  Please review all guides to provide a realistic time estimation.  Completing a tutorial means to me: Read all text, reproduce the  example, going through it without getting stuck, understand the  concepts, be able to transfer (only) those concepts to a real project,  be able to communicate the concepts to colleagues. Completing a tutorial doesn't mean to clone a repo and to compile it or reading text without understanding.  Look at it from a manager perspective: So that Spring stuff is so super simple, that you can complete **32(!) guides within 1 work day**  (ok, let's say 24, if you do 3 guides within an hour). Really?  So let's move all development to some poor countries...  32 Guides is:   Building a RESTful Web Service  Scheduling Tasks  Consuming a RESTful Web Service  Building Java Projects with Gradle  Building Java Projects with Maven  Accessing Relational Data using JDBC with Spring  Uploading Files  Authenticating a User with LDAP  Messaging with Redis  Messaging with RabbitMQ  Accessing Data with Neo4j  Validating Form Input  Building a RESTful Web Service with Spring Boot Actuator  Messaging with JMS  Creating a Batch Service  Securing a Web Application  Building a Hypermedia-Driven RESTful Web Service  Accessing Data in Pivotal GemFire  Integrating Data  Caching Data with Pivotal GemFire  Managing Transactions  Accessing Data with JPA  Accessing Data with MongoDB  Serving Web Content with Spring MVC  Converting a Spring Boot JAR Application to a WAR  Creating Asynchronous Methods  Handling Form Submission  Building an Application with Spring Boot  Using WebSocket to build an interactive web application  Working a Getting Started guide with STS  Consuming a RESTful Web Service with AngularJS  Consuming a RESTful Web Service with rest.js  I think, you get the point.  I'm currently here: https://spring.io/guides/gs/securing-web/ ""What you'll need: About 15 minutes""  OMG. If I look at my other colleague, who's a tester and writes Java code from time to time, I would say, it takes 1 DAY. Yes, 1 day. If he gets stuck somewhere or he has somebody to ask, he needs more time. If I look at my colleague, who's an experienced Java backend guy with no Spring experience, I would say, half a day. Not less.  Sorry about the rant.","closed","status: invalid,","molzb","2019-03-15T13:52:43Z","2019-03-15T16:03:52Z"
"","2039","SPR-17571 Allow Instant and ZonedDateTime as Last-Modified header","https://jira.spring.io/browse/SPR-17571","closed","","larsgrefer","2018-12-06T00:42:36Z","2019-04-01T11:04:33Z"
"","2029","SPR-17540 JavaMailSenderImpl does not show proper message when recipient list is empty","https://jira.spring.io/browse/SPR-17540","closed","","Jebil","2018-11-27T08:57:43Z","2018-12-04T09:20:24Z"
"","22328","Adds protected method to createWebSocketSession","https://github.com/spring-projects/spring-framework/issues/20776 added the ability to set max frame size for netty websocket support.   This PR adds the ability to override `createWebSocketSession()` to the new constructor may be called. Users want to be able to do this in Spring Cloud Gateway. Rather than overriding all of execute, we only have to override creation of the class.  See https://github.com/spring-cloud/spring-cloud-gateway/issues/163","closed","status: duplicate,","spencergibb","2019-01-31T19:53:11Z","2019-02-11T07:45:41Z"
"","22386","MappingJackson2MessageConverter doesn't check if payload assignable to target type","https://github.com/spring-projects/spring-framework/blob/7cde28306600cdf47450f3dc5b20740ec749d2f8/spring-messaging/src/main/java/org/springframework/messaging/converter/MappingJackson2MessageConverter.java#L229  Given object with usual `toString` implementation (for example `Foo(field1=SomeString)` and sending it to messageChannel using `MessageBuilder#withPayload` factory method results in above mentioned line to be executed, which predictably throws","closed","type: enhancement,","tdorzhi","2019-02-08T07:24:31Z","2019-03-12T21:06:34Z"
"","22331","Fix truncated Value#value javadoc","https://github.com/spring-projects/spring-framework/blob/0742986e0e060b866a214557df2a528fc9d828a4/spring-beans/src/main/java/org/springframework/beans/factory/annotation/Value.java#  `The actual value expression: for example ""#{systemProperties.myProp}"".`","closed","type: task,","ullenboom","2019-02-01T14:41:41Z","2019-02-06T18:37:58Z"
"","19841","Error in CORS WebFilter documentation of web-reactive","https://docs.spring.io/spring/docs/current/spring-framework-reference/web-reactive.html#webflux-cors-webfilter  I think the code sample in the link above is incorrect and should be :  ```   @Bean   public CorsConfigurationSource corsConfigurationSource(){        CorsConfiguration config = new CorsConfiguration();      // Possibly...     // config.applyPermitDefaultValues()      config.setAllowCredentials(true);     config.addAllowedOrigin(""http://domain1.com"");     config.addAllowedHeader(""*"");     config.addAllowedMethod(""*"");      UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource();     source.registerCorsConfiguration(""/**"", config);     return source;   } ```  The class `ServerHttpSecurity.java` creates the corsFilter with a CorsConfigurationSource, so a CorsWebFilter is never injected :  ``` public CorsSpec configurationSource(CorsConfigurationSource source) { 	this.corsFilter = new CorsWebFilter(source); 	return this; } ```  https://github.com/spring-projects/spring-security/blob/master/config/src/main/java/org/springframework/security/config/web/server/ServerHttpSecurity.java#L471  The javadoc also suggests you should use a CorsConfigurationSource so it can create a CorsWebFilter itself : https://github.com/spring-projects/spring-security/blob/master/config/src/main/java/org/springframework/security/config/web/server/ServerHttpSecurity.java#L421","closed","type: documentation,","jvwilge","2019-01-11T09:37:04Z","2019-01-21T15:01:46Z"
"","22247","How to add a HandlerInterceptorAdapter after AbstractHandlerMapping.CorsInterceptor","How to add a HandlerInterceptorAdapter after AbstractHandlerMapping.CorsInterceptor?","closed","in: web,","maketubo","2019-01-14T06:59:51Z","2019-01-31T20:53:09Z"
"","22766","Consistent non-exposure of inherited annotations in AnnotationMetadata","Historically, `StandardAnnotationMetadata` operates against `Class.getAnnotations()`, potentially seeing inherited annotations as well. This is inconsistent within the `AnnotationMetadata` abstraction since its ASM implementation operates against locally declared annotations only.  Let's make this consistent in 5.2 since inherited annotations aren't relevant for our component and configuration class introspection purposes, and in particular should be consistently ignored across `Class`-declared and component-scanned beans.","closed","type: enhancement,","jhoeller","2019-04-08T13:46:52Z","2019-04-08T13:59:56Z"
"","22488","'+'(Plus sign) interpreted as a ' ' (space) when using RestTemplate","Hi, I'm using Spring version: 5.0.6.RELEASE. I have exactly the same issue as described here: [Stackoverflow#54294843](https://stackoverflow.com/questions/54294843/)  I'm sending the following GET request using the RestTemplate: `GET http://localhost:9092/sites/?email=test+f@gmail.com` When I'm using RestTemplate in attempt to send the request above, `test+f@gmail.com` is being interpreted as`test f@gmail.com` ('+'  interpreted as ' ')  I'm looking for a solution that doesn't involve workarounds.  Bests.","closed","for: stackoverflow,","morDevelop","2019-02-27T23:10:05Z","2019-03-04T10:42:17Z"
"","22268","Ability to set max frame length in ReactorNettyWebSocketClient","Hi,  We are obtaining this exception  _Max frame length of 65536 has been exceeded_  in a ReactorNettyWebSocketClient that receive a big payload. Having a look to the code, it seems that all is ready for having this feature in the client side but the websocket  method without the additional params is being called instead of the one that provides a parameter for the max frame length is provided. In summary, currently this is being used  https://github.com/spring-projects/spring-framework/blob/master/spring-webflux/src/main/java/org/springframework/web/reactive/socket/client/ReactorNettyWebSocketClient.java#L84 but this should be used: https://github.com/reactor/reactor-netty/blob/master/src/main/java/reactor/netty/http/client/HttpClient.java#L888  The versions that we are using are the following: Spring Boot 2.1.1 with Netty  Reactor Netty 0.8.3","closed","status: superseded,","benitocm","2019-01-16T15:06:04Z","2019-03-19T19:37:34Z"
"","22371","WebClient metrics with uri template when using UriBuilder","Hi,  Here are the versions this discussion is related to :  - Spring 5.1.4.RELEASE - SpringBoot 2.1.2.RELEASE - Micrometer 1.1.2  Using reactive WebClient with micrometer give the ability to expose a lot of interesting metrics (such as number of requests, duration, ...). As describe in the official documentation, metrics generated by an instrumented client are tagged with the request’s URI template prior to variable substitution, **if possible** (for example, /api/person/{id}).  Indeed, it appears that the URI template cannot be used when specifying uri using `UriBuilder`. So doing this : ```java  webclient.get().uri(""/api/person/{id}"", ""1234"")... ```  will generate a metric with the expected uri template (eg : /api/person/{id}), but using uri builder like this : ```java webclient.get().uri(uriBuilder -> uriBuilder.path(""/api/person/{id}"").build(""1234"")) ```  will generate metrics using the substituted uri (eg : /api/person/1234).   This is annoying cause we can have lot of possible uris and we loose precious information (and I think the uri builder is the smartest way to forge uris).  Looking closer, it appears that there is no `URI_TEMPLATE_ATTRIBUTE` attribute set when using `UriBuilder` with `WebClient`.  Digging deeper, I discovered that the current implementation does not take care about `baseUri` set on the `WebClient`. So doing this :  ```java webClientBuilder().baseUri(""https://foo.com/api"").build().get().uri(""/person/{id}"", ""1234"")... ```  Will generate a metric using `/person/{id}` instead of `/api/person/{id}`.  I suggest to make few changes on `UriBuilder` to be able to get access to the original uri template (add a `getUriTemplate` method). This way we could adapt the `DefaultWebClient` like this :  ```java 	@Override 	public RequestBodySpec uri(String uriTemplate, Object... uriVariables) { 		UriBuilder uriBuilder = uriBuilderFactory.uriString(uriTemplate); 		attribute(URI_TEMPLATE_ATTRIBUTE, uriBuilder.getUriTemplate()); 		return uri(uriBuilder.build(uriVariables)); 	}  	@Override 	public RequestBodySpec uri(String uriTemplate, Map uriVariables) { 		UriBuilder uriBuilder = uriBuilderFactory.uriString(uriTemplate); 		attribute(URI_TEMPLATE_ATTRIBUTE, uriBuilder.getUriTemplate()); 		return uri(uriBuilder.build(uriVariables)); 	}  	@Override 	public RequestBodySpec uri(Function uriFunction) { 		UriBuilder uriBuilder = uriBuilderFactory.builder(); 		RequestBodySpec uri = uri(uriFunction.apply(uriBuilder)); 		attribute(URI_TEMPLATE_ATTRIBUTE, uriBuilder.getUriTemplate()); 		return uri; 	} ```  This solution seems very simple but I would like to know if you think this is a good approach and if it make sense for you ?  If you want I can make a pull request (around 10 lines of code).  Keep me in touch.","closed","status: superseded,","jhaeyaert","2019-02-07T09:00:08Z","2020-09-08T16:58:00Z"
"","22335","Add CompositeTaskDecorator","Hi,  Currently, task executors only accept single `TaskDecorator` instance. When there are multiple `TaskDecorator` beans to apply, I need to write such composite decorator for now. It would be helpful if it comes from spring.  Thanks,","open","type: enhancement,","ttddyy","2019-02-02T21:45:49Z","2021-04-27T05:06:10Z"
"","22343","Add MediaType for CSV","Hi,  can we have an entry added to `org.springframework.http.MediaType`  for comma-separated values, i.e `text/csv` ?  Best regards, Sven","closed","status: declined,","bitsmag","2019-02-04T13:31:28Z","2019-03-08T13:44:52Z"
"","22537","Performance Degradation in getBean method after upgrade","Hi Team,  We have a requirement where we generate java classes dynamically and register them using Spring `registerBean`.  When we upgraded Spring framework, 4.2.3 to 4.3.18,  there was a severe performance degradation  while retrieving the registered bean.    To fix the issue, we are planning to use the following code instead of using `getBean` method.  My question is: does the below API provide same initialization (like autowiring / pre & post processing capacity) or not? Will there be any repercussion with this API?  ```java AutowireCapableBeanFactory factory = applicationContext.getAutowireCapableBeanFactory(); return ( T )factory.autowire( clazz, AutowireCapableBeanFactory.AUTOWIRE_BY_TYPE, false ); ```","closed","status: feedback-provided,","Srikalpana","2019-03-07T06:33:16Z","2021-01-19T12:51:28Z"
"","22499","Add support for FirebirdSQL databases in embedded database support","Hi spring team  I would like to propose a new feature : expanding the embedded database support with Firebird database.  I think embedded database support is amazing for testing. For now it only supports HSQL, H2 and Derby. Maybe it could be expanded though.  Firebird has a kind of embedded mode, and is open source. It also has a procedural SQL extension, which make it closer to oracle than the other supported types (from my limited understanding). A few years ago i worked on a project which had a large oracle PL/SQL code base, and some kind of embedded support could have been useful. So i thought Firebird could  be a candidate for inclusion in embedded database support.  Looking into how to use Firebird in embedded mode from a java program, i found an example : https://github.com/mrotteveel/jaybird-embedded-example  It basically requires to embed the required binaries in a jar. The database itself is not really in memory, it needs a file on the filesystem. That would be the two major challenges for such a feature, especially the binary part. As for the file part i guess it would need to be configurable.  I have a basic EmbeddedDatabaseConfigurer implementation working, largely inspired by the previous example, and does not seem too complicated.  Would such a feature be considered useful? And considered for inclusion in the framework?  Thank you for your feedback","closed","status: declined,","jmaniquet","2019-03-03T16:58:21Z","2022-02-28T20:33:44Z"
"","22320","RestTemplate adds duplicate accept header information","Hi :)  In 4.3.x version, I found a bug that caused the `Accept` header to be duplicated.  I have added a validation test and fixed the bug, if you could review this PR then I appreciate it.  It seems to have been fixed in 5.0.x and above. It appears to be occurring in versions below 4.3.x.  If this PR is not in the correct format, please let me know. I will fix it. Thank you.","closed","type: backport,","geminiKim","2019-01-29T22:32:13Z","2019-02-11T12:45:17Z"
"","22701","Add route(RequestPredicate, HandlerFunction) variant to RouterFunctions builder","Hi   I really like the new functional reactive endpoint style   ``` route()  .GET(""/foo"" , getHandlerFunction)  .POST(""/foo"", postHandlerFunction)  .build() ```   Sometimes however I don't want to use the existing `RequestPredicate` shortcuts. I'd like to use my own `RequestPredicate` implementation. In the old style this was easy enough to do. I could say   ``` RequestPredicate rp = r -> Math.random() > .5 ; return route(rp, myHandlerFunction)       .andRoute( ...)  ```  i'm now not quite sure on what the best way to do that in the new style is. this works, but i get the feeling that its re-creating things that dont need to be re-created.   ```   Consumer handler() {   RouterFunction handler = r -> Mono.just(r1 -> ok() 	   .syncBody(""Hello, "" + r1.queryParam(""name"").orElse(""world"") + ""!"")); 		return builder -> builder.add(route().add(handler).build()); 	}   RequestPredicate rp = ... ;   return route()   .nest(rp, handler())   .build(); ```  please provide a shortcut for something like:   ``` route()  .route(RequestPredicate, HandlerFunction)  .build() ```","closed","type: enhancement,","joshlong","2019-03-28T10:48:32Z","2019-05-07T13:19:42Z"
"","22395","StandardWebSocketClient providing inaccurate LocalAddress","Hello, I'm trying to develop a Spring based server that connects to another WebSocket Server using the classes [StandardWebSocketClient](https://github.com/spring-projects/spring-framework/blob/f7e53a071b8613ce9312d282770b29211da219b7/spring-websocket/src/main/java/org/springframework/web/socket/client/standard/StandardWebSocketClient.java#L128-L139) and [WebSocketConnectionManager](https://github.com/spring-projects/spring-framework/blob/f7e53a071b8613ce9312d282770b29211da219b7/spring-websocket/src/main/java/org/springframework/web/socket/client/WebSocketConnectionManager.java).  Sample code below: ```java String webSocketServerUrl = ""ws://someserver:9999/somepath""; WebSocketConnectionManager connectionManager = new WebSocketConnectionManager(                 new StandardWebSocketClient(), MyWebSocketHandler.this, webSocketServerUrl); connectionManager.start(); ```  Where ```MyWebSocketHandler``` has the method ```afterConnectionEstablished``` overridden as such: ```java @Override public void afterConnectionEstablished(WebSocketSession session) throws Exception {     logger.info(""afterConnectionEstablished: outgoing session started {}"",             session.getLocalAddress()); ```  The output of the log is as such: ``` afterConnectionEstablished: outgoing session started AHASBINI-PC/192.168.99.1:9999 ```  When in fact I check my connections on my PC using tools and commands such as ```netstat -abn``` or ```netstat -apn``` and find out that the local connection is not from port 9999 but from a different port completely. I've traced the creation of the session to below lines found in [StandardWebSocketClient](https://github.com/spring-projects/spring-framework/blob/f7e53a071b8613ce9312d282770b29211da219b7/spring-websocket/src/main/java/org/springframework/web/socket/client/standard/StandardWebSocketClient.java#L128-L139).  https://github.com/spring-projects/spring-framework/blob/f7e53a071b8613ce9312d282770b29211da219b7/spring-websocket/src/main/java/org/springframework/web/socket/client/standard/StandardWebSocketClient.java#L128-L139  Apparently it's setting the remote port and local port to the same value of the WebSocket Server URI.   However on the WebSocket Server which is receiving the connection via the apache Tomcat container and is also a Spring based implementation, the value of the remote and local ports are correct and **not** equal to each other within the ```WebSocketSession```.  Thanks :)","closed","status: invalid,","ahasbini","2019-02-10T08:53:23Z","2019-02-11T18:17:32Z"
"","22397","Spring boot context path","Hello,  I encountered issue for spring boot application that all resources are not working  it's giving me 404 always  after that i found the issue because there was space in context-path value in the application.properties  So it's better to trim the context patch before applying it","closed","status: invalid,","sattamshobaki","2019-02-10T14:01:57Z","2019-02-14T11:40:39Z"
"","22707","Introduce JSON mapper based on DSL-JSON library","Hello,   [DSL-JSON](https://github.com/ngs-doo/dsl-json) seems to be very faster than Jackson  What about add it as an other converter in Spring Boot ?","closed","type: enhancement,","mmaryo","2019-03-29T11:52:43Z","2022-02-18T15:09:47Z"
"","22555","invalid order by for native query in spring data","Hello, while I am using native query to fetch data for some reasons  as below example:  ```sql SELECT             *          FROM             (          SELECT  col1, col2, (select  DECODE(COUNT(1), 0, 0,  1)                  from table2  WHERE table2  .table1_id = a.id) col3                                From                 table1 a                                       UNION             ALL         SELECT  col1, col2, col3     From                 table2 b                 )      WHERE         lower(col1) like lower(?)          OR col2 like ?          OR lower(col3) like lower(?)  ```  when i added pageable object with order property the generated query will be as below  ```sql SELECT * from(SELECT             *          FROM             (          SELECT  col1, col2, (select  DECODE(COUNT(1), 0, 0,  1)                  from table2  WHERE table2  .table1_id = a.id) col3                                From                 table1 a                                       UNION             ALL         SELECT  col1, col2, col3     From                 table2 b                 )      WHERE         lower(col1) like lower(:p1)          OR col2 like :p1          OR lower(col3) like lower(:p1)    **order by         a.col1** )      where         rownum <= :p2 ```  So in case there is union query the result should not contains alias table name","closed","status: declined,","sattamshobaki","2019-03-10T11:08:19Z","2019-03-10T16:59:26Z"
"","22651","queryForObject fetch all rows and then check if size is 0 or > 1","Hello,  If we use `NamedParameterJdbcOperations.queryForObject` with `RowMapper`, the `RowMapper` will call method `mapRow` for every row and the result (every row) will be add into a List.  Then if we have more than one rows , `DataAccessUtils.nullableSingleResult` will throw an exception.  ```java if (CollectionUtils.isEmpty(results))  { *throw new EmptyResultDataAccessException(1);* } if (results.size() > 1)  { *throw new IncorrectResultSizeDataAccessException(1, results.size())*; } ```   But If our results contains a lot of rows (example 10 000 rows), we have to wait to fetch all 10 000 rows to throw `IncorrectResultSizeDataAccessException`.  I think this is too slow.  It's better to throw the exception on second row.","open","in: data,","LaCoCa","2019-03-25T09:39:22Z","2019-03-25T17:53:04Z"
"","22436","@Scheduled(cron = ""0 0 0 ? * 5#3"") is not supported","hello ，I found an issue.  `@Scheduled(cron = ""0 0 0 ? * 5#3"")` is not supported.  I wanted my task to run on the third Thursday of each month, but unfortunately the compiler reported an error. But I checked the cron itself, but the syntax appears to be correct.  My code example is as follows:  ```java import org.springframework.boot.SpringApplication; import org.springframework.boot.autoconfigure.SpringBootApplication; import org.springframework.scheduling.annotation.EnableScheduling; import org.springframework.scheduling.annotation.Scheduled;  @SpringBootApplication @EnableScheduling public class TestScheduledApplication{     public static void main(String[] args) {         SpringApplication.run(TestScheduledApplication.class, args);     }     @Scheduled(cron = ""0 0 0 ? * 5#3"")     public void testScheduled(){         System.out.println(""hello world"");     } } ```  My compiler reported an error as follows :  ``` Caused by: java.lang.IllegalStateException: Encountered invalid @Scheduled method 'testScheduled': For input string: ""5#3"" 	at org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor.processScheduled(ScheduledAnnotationBeanPostProcessor.java:469) ~[spring-context-5.0.5.RELEASE.jar:5.0.5.RELEASE] 	at org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor.lambda$null$1(ScheduledAnnotationBeanPostProcessor.java:333) ~[spring-context-5.0.5.RELEASE.jar:5.0.5.RELEASE] 	at java.lang.Iterable.forEach(Iterable.java:75) ~[na:1.8.0_77] 	at org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor.lambda$postProcessAfterInitialization$2(ScheduledAnnotationBeanPostProcessor.java:333) ~[spring-context-5.0.5.RELEASE.jar:5.0.5.RELEASE] 	at java.util.LinkedHashMap.forEach(LinkedHashMap.java:676) ~[na:1.8.0_77] 	at org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor.postProcessAfterInitialization(ScheduledAnnotationBeanPostProcessor.java:332) ~[spring-context-5.0.5.RELEASE.jar:5.0.5.RELEASE] 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:437) ~[spring-beans-5.0.5.RELEASE.jar:5.0.5.RELEASE] 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1706) ~[spring-beans-5.0.5.RELEASE.jar:5.0.5.RELEASE] 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:579) ~[spring-beans-5.0.5.RELEASE.jar:5.0.5.RELEASE] 	... 15 common frames omitted ```","closed","type: enhancement,","EalenXie","2019-02-20T04:40:52Z","2020-08-04T06:47:21Z"
"","22614","Document choices for async ResponseEntity return values","Hello Spring Framework team,  Thank you for this amazing project, especially Spring Webflux. I have a question to the community, could you please tell me what is the difference between ```ResponseEntity>``` versus ```Mono>``` as a return type of a rest controller?  When is the most appropriate to what? Following up on this question, let's say I need to return a list, or let's say several elements of Foo, there are many examples of returning ```Flux```. Would it make sense to return ```ResponseEntity>``` or ```Flux>```?  Thank you a lot for your help. I am not trying to spam, just to learn something new, please don't ""just close"" this.","closed","type: documentation,","patpatpat123","2019-03-19T16:00:15Z","2021-01-12T20:07:13Z"
"","22609","Prevent @Bean method overloading by default (avoiding accidental overloading and condition mismatches)","Hello poeple,  I lost some hours configuring a bean with same id but different properties in java config, as the raised error message was not very helpful.  The bean in question must be created, as it is required via declarative `@DependsOn` configuration.  The error  ``` A component required a bean named 'postgresqlContainer' that could not be found. 	- Bean method 'postgresqlContainer' in 'PersistenceConfig.DbServersConfig' not loaded because @ConditionalOnProperty (app.persistence.servers.postgresql.enabled=true) found different value in property 'enabled' 	- Bean method 'postgresqlContainer' in 'PersistenceConfig.DbServersConfig' not loaded because @ConditionalOnProperty (app.persistence.servers.postgresql.enabled=true) found different value in property 'enabled' ```  This config fails:  ```java @Configuration public class PersistenceConfig {    @Configuration   public class DbServersConfig {      @Bean(value = ""postgresqlContainer"", initMethod = ""start"", destroyMethod = ""stop"")     @ConditionalOnProperty(prefix = ""app.persistence.servers.postgresql"", name = ""enabled"", havingValue = ""true"")     public PostgreSQLContainer postgresqlContainer(TCPostgresqlProperties postgresqlProperties) {         Instance retVal =          return retVal;     }      @Bean(""postgresqlContainer"")     @ConditionalOnProperty(prefix = ""app.persistence.servers.postgresql"", name = ""enabled"", havingValue = ""false"", matchIfMissing = true)     public PostgreSQLContainer postgresqlContainer() {       return null;     }   } } ```  This config works:  ```java @Configuration public class PersistenceConfig {    @Configuration   public class DbServersConfig {      @Bean(value = ""postgresqlContainer"", initMethod = ""start"", destroyMethod = ""stop"")     @ConditionalOnProperty(prefix = ""app.persistence.servers.postgresql"", name = ""enabled"", havingValue = ""true"")     public PostgreSQLContainer  postgresqlContainer(TCPostgresqlProperties postgresqlProperties) {         Instance retVal =          return retVal;     }      @Bean(""postgresqlContainer"")     @ConditionalOnProperty(prefix = ""app.persistence.servers.postgresql"", name = ""enabled"", havingValue = ""false"", matchIfMissing = true)     public PostgreSQLContainer postgresqlContainer2() {       return null;     }   } } ```  If you name both methods differently (`postgresqlContainer` and `postgresqlContainer2`) then everything works as expected otherwise you get an error.  Is this desired behavior ?  I am unsure if my scenario could indicate a bug, too. I do not know if this problem happens only to `@ConditionalOnProperty` or any other condition like `@ConditionalOnExpression`.  Best regards","closed","type: enhancement,","rfelgent","2019-03-17T03:35:55Z","2022-02-20T07:57:51Z"
"","22347","Upgrade to Gradle 5.3.x","Gradle 5.3 has been released: https://docs.gradle.org/5.3/release-notes.html  We should consider upgrading the Spring Framework build to Gradle 5.3.x during Spring Framework 5.2 development.","closed","type: task,","sbrannen","2019-02-05T13:17:57Z","2019-03-28T11:01:34Z"
"","22620","Provide support for integrating with external resources in the Spring TestContext Framework","Given the following use case:  * A test needs a manageable, external resource. * That resource has information that needs to be passed on into a test configuration or is used to create additional beans.  See the following example 1:  https://github.com/michael-simons/bootiful-music/blob/75b8bd7540452b180d02957f1444cbc6ff41778d/knowledge/src/test/java/ac/simons/music/knowledge/domain/CountryRepositoryTest.java#L88-L99  A test container is started via the current test container extension and stored in a static field. This is used to create an additional respectively modified bean.  Another example is this one:  ```java @NeedsCausalCluster @SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT) @ContextConfiguration(initializers = { BookmarkLoadTest.Initializer.class }) public class BookmarkLoadTest {  	@Neo4jUri 	private static String clusterUri;  	static class Initializer implements ApplicationContextInitializer { 		public void initialize(ConfigurableApplicationContext configurableApplicationContext) { 			TestPropertyValues.of( 				""spring.data.neo4j.uri="" + clusterUri, 				""spring.data.neo4j.username=neo4j"", 				""spring.data.neo4j.password=password"" 			).applyTo(configurableApplicationContext.getEnvironment()); 		} 	} } ```  The `clusterUri` is also supplied by managed resource. Here new values are applied to the test config.  I discussed with @sormuras the usage of https://github.com/sormuras/brahms, especially the [Resource Manager Extension](https://github.com/sormuras/brahms#resource-manager-extension) That extension works very well and could be used for injectable https://www.testcontainers.org.  So instead of having the above static test container field, I would like to see the following:  ```java @TestConfiguration static class Config {  	@Bean 	public org.neo4j.ogm.config.Configuration configuration( 		@Singleton(Neo4jContainer.class) Neo4jContainer neo4jContainer 	) { 		var builder = new org.neo4j.ogm.config.Configuration.Builder(); 		builder.uri(neo4jContainer.getBoltUrl()); 		builder.withCustomProperty(ParameterConversionMode.CONFIG_PARAMETER_CONVERSION_MODE, 			ParameterConversionMode.CONVERT_NON_NATIVE_ONLY); 		return builder.build(); 	} } ```  respectively something like  ```java @NeedsCausalCluster @SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT) @ContextConfiguration(initializers = { BookmarkLoadTest.Initializer.class }) public class BookmarkLoadTest { 	static class Initializer implements ApplicationContextInitializer {                public Initializer(@Singleton(Neo4jContainer.class) Neo4jContainer neo4jContainer) {}  		public void initialize(ConfigurableApplicationContext configurableApplicationContext) { 			TestPropertyValues.of( 				""spring.data.neo4j.uri="" + clusterUri, 				""spring.data.neo4j.username=neo4j"", 				""spring.data.neo4j.password=password"" 			).applyTo(configurableApplicationContext.getEnvironment()); 		} 	} } ```  I have seen the need to pass in a configuration value based on some random ports etc. so often now and I'm convinced it would be awesome to have Spring's `ParameterResolver` extension be able to recognize other JUnit 5 parameter resolver as providers of ""things"" (as things that look like beans but aren't).","closed","status: superseded,","michael-simons","2019-03-20T18:58:15Z","2020-04-01T14:59:23Z"
"","22277","(upgrade) commons-fileupload: 1.3.3 -> 1.4","From @chtompki on Apache Commons...Announced it yesterday here:   http://mail-archives.us.apache.org/mod_mbox/www-announce/201901.mbox/%3c77F27C1B-CBF9-432A-8401-08C0AFE3E7F7@apache.org%3e  All the best, -Rob","closed","","chtompki","2019-01-17T20:36:22Z","2019-01-17T20:38:40Z"
"","22548","FormHttpMessageConverter should use ISO-8859-1 charset as default for application/x-www-form-urlencoded","FormHttpMessageConverter currently uses utf-8 as the default encoding for reading and writing the `application/x-www-form-urlencoded` content type when no `charset` parameter is specified.  However, the default really should be ISO-8859-1 (aka ASCII aka Windows-1252) as that's what specified in the IANA registration: https://www.w3.org/TR/2016/WD-html51-20160310/iana.html#application-x-www-form-urlencoded  It's also what browsers and servers expect when no charset parameter is specified.  I'm reporting this issue as FormHttpMessageConverter always writes forms as `application/x-www-form-urlencoded;charset=utf-8` and the application receiving that data doesn't expect that - it requires `application/x-www-form-urlencoded` (notably without the charset), and it (correctly) expects that since there is no charset specified it will receive ISO-8859-1 encoded data.  Also, if the charset is ISO-8859-1 when writing `application/x-www-form-urlencoded`, then the content-type written should be `application/x-www-form-urlencoded` without the charset set (since the charset is the default, it should not be specified).","closed","status: invalid,","candrews","2019-03-08T18:23:10Z","2019-03-11T19:26:47Z"
"","22650","Quartz - an exception if ZeroSizeThreadPool is used as a ThreadPool","For management only I need to use `org.quartz.simpl.ZeroSizeThreadPool` as a `ThreadPool`. Unfortunately `SchedulerFactoryBean` puts property `org.quartz.threadPool.threadCount` without respect to specified `org.quartz.threadPool.class` property.  It ends up with an exception `java.lang.NoSuchMethodException: No setter for property 'threadCount'`.  Indeed it should not add a default pool size if I specify property `org.quartz.threadPool.class` by my own.","closed","status: declined,","realmfoo","2019-03-25T08:52:15Z","2019-03-25T15:06:51Z"
"","22503","Upgrade to ASM 7.1","Following up on #21800, let's upgrade our ASM fork to the recently released ASM 7.1 for the 5.2 release.","closed","type: dependency-upgrade,","jhoeller","2019-03-04T17:13:33Z","2019-03-08T08:59:30Z"
"","22504","Revisit XML schema handling for consistent local vs external resolution","Following up on #18077, we could allow further variants of Spring schema declarations - e.g. with https, despite http being the canonical identifier for XML schemas - that still resolve against locally shipped xsd files (as defined in `spring.schemas` with canonical http identifiers). At the same time, we could consistently resolve external references via https even if the declaration uses the canonical http identifiers, separating the common XML identifier format from the recommended wire protocol.","closed","type: enhancement,","jhoeller","2019-03-04T18:05:26Z","2019-03-06T13:17:22Z"
"","22613","Update documentation for WebJar support","Following the discussion in https://github.com/spring-projects/spring-framework/pull/1685#issuecomment-474042425 the documentation should be updated to reflect the fact that dependency should be `org.webjars:webjars-locator-core` instead of `org.webjars:webjars-locator`:  - webmvc.adoc - webflux.adoc - org.springframework.web.reactive.resource.WebJarsResourceResolver - org.springframework.web.servlet.resource.WebJarsResourceResolver","closed","type: documentation,","xak2000","2019-03-19T15:09:20Z","2019-03-19T18:08:58Z"
"","22484","Fix repeat DataBuffer#write(CharSequence, Charset) calls","Fixes issue described in #22480","closed","type: bug,","drewtul","2019-02-27T13:52:19Z","2019-03-04T13:16:43Z"
"","22785","Add ServerRequestTransformer before routing","Fixes #22408","closed","status: declined,","kkocel","2019-04-10T17:25:29Z","2019-11-27T13:46:49Z"
"","22256","Fix typo in cache abstraction chapter","fixes #22251","closed","type: documentation,","StefanPenndorf","2019-01-15T07:45:02Z","2019-01-15T11:26:13Z"
"","22638","Avoid duplicate registration of @ControllerAdvice implementing both RequestBodyAdvice and ResponseBodyAdvice","fixbug: duplicate add on ControllerAdvice both RequestBodyAdvice and ResponseBodyAdvice","closed","type: bug,","liquanchen9","2019-03-22T06:52:03Z","2019-10-02T13:54:17Z"
"","2045","Fix typo in websocket.adoc","Fix typo from '@MessageMapping(""erd"")' to '@MessageMapping(""red"")'","closed","","yepapa","2018-12-08T13:33:20Z","2018-12-08T13:57:14Z"
"","22372","Keys for form data in FormHttpMessageConverter must not be null","Fix for java.lang.IllegalArgumentException","closed","type: enhancement,","GWhiskas","2019-02-07T09:23:03Z","2019-11-19T15:24:07Z"
"","22513","Fix javadoc for AbstractApplicationContext.registerBeanPostProcessors()","Fix explanation in javadoc of `AbstractApplicationContext#registerBeanPostProcessors`.","closed","in: core,","rupertw","2019-03-05T16:29:37Z","2019-03-06T11:19:49Z"
"","22647","4.3.x","first","closed","","SoaringCode","2019-03-24T01:04:05Z","2019-03-24T01:04:23Z"
"","22480","Repeat calls to Databuffer#write(CharSequence, Charset) has unexpected contents in the DataBuffer","Expected: repeated calls to `DataBuffer#write(CharSequence, Charset)` should be appending to the buffer at the current write position, so the effect of multiple calls is to join these `CharSequence` together inside the buffer.  Actual: I seem to see varied outputs depending on the length of the `CharSequence`, but any chained `write()` calls result in unexpected contents in the buffer.  Also if I encode the strings myself and call `write(ByteBuffer)` multiple times this works as expected.  Test: ```Java import org.junit.jupiter.api.Assertions; import org.junit.jupiter.api.BeforeEach; import org.junit.jupiter.api.Test; import org.springframework.core.io.buffer.DataBuffer; import org.springframework.core.io.buffer.DataBufferFactory; import org.springframework.core.io.buffer.DefaultDataBufferFactory;  import java.nio.CharBuffer; import java.nio.charset.Charset; import java.nio.charset.CharsetDecoder; import java.nio.charset.CharsetEncoder; import java.nio.charset.StandardCharsets;  public class TestDataBuffer {      private DataBufferFactory dataBufferFactory = new DefaultDataBufferFactory();      private Charset charset = StandardCharsets.UTF_8;      private CharsetDecoder decoder;      private CharsetEncoder encoder;      @BeforeEach     public void decoder() {         decoder = charset.newDecoder();         encoder = charset.newEncoder();     }      @Test     public void testSingleWrite() throws Exception {          String payload = ""ababab"";         DataBuffer buffer = dataBufferFactory.allocateBuffer();         buffer.write(payload, charset);          String output = decoder.decode(buffer.asByteBuffer()).toString();         Assertions.assertEquals(payload, output);     }      @Test     public void testDoubleWrite() throws Exception {          String payload = ""ababab"";         String payloadTwo = ""cdcdcdcd"";         DataBuffer buffer = dataBufferFactory.allocateBuffer();         buffer.write(payload, charset)               .write(payloadTwo, charset);          String output = decoder.decode(buffer.asByteBuffer()).toString();         Assertions.assertEquals(payload + payloadTwo, output);     }     @Test     public void testTripleWrite() throws Exception {          String payload = ""ababab"";         String payloadTwo = ""cdcdcdcd"";         String payloadThree = ""efefefefef"";         DataBuffer buffer = dataBufferFactory.allocateBuffer();         buffer.write(payload, charset)               .write(payloadTwo, charset)               .write(payloadThree, charset);          String output = decoder.decode(buffer.asByteBuffer()).toString();         Assertions.assertEquals(payload+payloadTwo+payloadThree, output);     }      @Test     public void testTripleWriteByteBuffer() throws Exception {         String payload = ""ababab"";         String payloadTwo = ""cdcdcdcd"";         String payloadThree = ""efefefefef"";         DataBuffer buffer = dataBufferFactory.allocateBuffer();         buffer.write(encoder.encode(CharBuffer.wrap(payload)))               .write(encoder.encode(CharBuffer.wrap(payloadTwo)))               .write(encoder.encode(CharBuffer.wrap(payloadThree)));         String output = decoder.decode(buffer.asByteBuffer()).toString();         Assertions.assertEquals(payload+payloadTwo+payloadThree, output);     } } ```  I believe the problem is in `writePosition(outBuffer.position())` as `outBuffer` is offset from the start of the whole buffer: ```Java 		ByteBuffer outBuffer = ensureCapacity(estimatedSize) 				.asByteBuffer(writePosition(), writableByteCount());  ``` So suspect it should be something like: `writePosition(writePosition()+outBuffer.position())`","closed","status: superseded,","drewtul","2019-02-27T11:23:30Z","2019-03-04T12:26:18Z"
"","22656","Handle Optional @RequestParam() when generating URL using MvcUriComponentsBuilder","Example of an action:  ```java @GetMapping(""/{userId}"") public ModelAndView productGroups(     @PathVariable @AssertUuid final String userId,     @RequestParam(""parentId"") final Optional<@AssertUuid String> rawParentId,     @PageableDefault(size = 100) final Pageable pageable ) throws ControllerException ```  this action validates, that the `parentId` is UUID, if it's present (which works great), but it also rejects the request completely, if it's not (with `400 BAD REQUEST`). Which means any of the following ends with `400` - `?parentId`, `?parentId=`, `?parentId=garbage`  -----  - Generating URL using `MvcUriComponentsBuilder.fromMethodCall` doesn't work without the `OptionalUnwrappingConverter` I've provided - Without the fix in `RequestParamMethodArgumentResolver`, it generates empty query args - resulting in url with `?parentId` (without `=` and without value) - which is not valid and ends with `400`  I'm not sure if this is the correct way to fix this, so if you'll please give me some feedback on this, I'd be happy to add some tests.  -----  Related issue #16785  - it states that spring handles `Optional` in handler arguments","closed","type: enhancement,","fprochazka","2019-03-25T14:41:30Z","2019-08-24T11:29:02Z"
"","22429","Documentation about aspectj and agent configuration is outdated and confusing","Especially now that many people run Spring Boot apps without an app server, the content in the main Spring Framework guide is looking a bit dated, and quite confusing (e.g. see [this SO question](https://stackoverflow.com/questions/54746336/spring-aop-with-aspectj-load-time-weaving-doubts)).","closed","type: documentation,","dsyer","2019-02-19T10:16:51Z","2019-03-05T13:31:26Z"
"","22674","on JDK 11 - WARNING: Illegal reflective access by org.springframework.cglib.core.ReflectUtils$1 (file:/C:/Users/.../spring-core/4.3.22.RELEASE/spring-core-4.3.22.RELEASE.jar)","Error for Spring Boot 1.5.x (1.5.19.RELEASE, using the latest spring-core-4.3.22.RELEASE.jar)  I have not seen this error before within previous boot 1.5.17.RELEASE.   And frankly upgrade to the latest 1.5.19.RELEASE/spring-core-4.3.22.RELEASE.jar was  maybe 1-2 weeks ago.  So why this error appeared?  ``` 14:43:23.388 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory#registerBeanDefinition:826 - Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]] WARNING: An illegal reflective access operation has occurred WARNING: Illegal reflective access by org.springframework.cglib.core.ReflectUtils$1 (file:/C:/Users/myuserlogin/.m2/repository/org/springframework/spring-core/4.3.22.RELEASE/spring-core-4.3.22.RELEASE.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain) WARNING: Please consider reporting this to the maintainers of org.springframework.cglib.core.ReflectUtils$1 WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations WARNING: All illegal access operations will be denied in a future release 14:43:25.687 [main] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor#:155 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring ```  ![image](https://user-images.githubusercontent.com/1614482/54976633-e9c2d900-4fd5-11e9-89b8-4d05039c5eb3.png)  ref https://github.com/spring-projects/spring-framework/issues/22019","closed","in: core,","paulvi","2019-03-26T06:49:56Z","2021-05-08T16:50:15Z"
"","22333","WebFlux with Java 11 HttpClient unexpected slow performance comparing with WebClient","Environment: Spring Boot 2.1.2.RELEASE, Java 11(OpenJDK/Oracle)  So, I have RestConrtoller that sends an incoming request to another Rest service and returns the result back to clients.  So I compared WebClient with Java 11 HttpClient and I see an unexpected slow performance (looks like due to high GC usage) for Java 11 HttpClient.  Jmeter shows that with Java 11 HttpClient we have in 2 times less throughput than with WebClient. The problem cannot be in Java HttpClient because I tested the same stuff with Spring MVC and it has the same performance as with WebClient.  All code you can see here https://github.com/Aleksandr-Filichkin/spring-mvc-vs-webflux. JMeter files for the test also are added.  I think the problem in memory because I see high GC usage for HttpClient comparing with WebClient. ![image](https://user-images.githubusercontent.com/10498901/52154906-1ec74500-2691-11e9-9d5c-c992f30cbfa0.png)  So getUserUsingWithCF with Spring MVC works in two times faster than getUserUsingWebfluxJavaHttpClient with WebFlux ```   @GetMapping(value = ""/completable-future"")     public CompletableFuture getUserUsingWithCF(@RequestParam long delay) {         return sendRequestWithHttpClient(delay).thenApply(x -> ""completable-future: "" + x);     } ``` ```      @GetMapping(value = ""/webflux-java-http-client"")     public Mono getUserUsingWebfluxJavaHttpClient(@RequestParam long delay) {         CompletableFuture stringCompletableFuture = sendRequestWithHttpClient(delay).thenApply(x -> ""webflux-java-http-client: "" + x);         return Mono.fromFuture(stringCompletableFuture);     } ``` ![image](https://user-images.githubusercontent.com/10498901/52155028-b462d480-2691-11e9-9f24-cf025e53df0f.png)","closed","status: invalid,","Aleksandr-Filichkin","2019-02-01T23:20:51Z","2021-04-29T06:41:19Z"
"","22330","Use StringJoiner where possible to simplify String joining","Employment of `StringJoiner` greatly simplifies code by dropping `if` statement and subsequence simplification of `fori` to `foreach`.  As of performance currently (JDK 8) `StringJoiner` is splightly slower than `StringBuilder`, but much faster (and meory-saving) on JDK 11.","closed","type: task,","stsypanov","2019-02-01T13:54:02Z","2019-03-07T12:33:45Z"
"","22577","PDF Documentation Spring-Core 5.1.5: Occurrences of a STRONG tag, where we should see a bold font","Documentation Spring-Core 5.1.5 as PDF https://docs.spring.io/spring/docs/current/spring-framework-reference/pdf/core.pdf  There are code samples with a (written) `` tag, where we should see the code section with a bold font.  Examples: Page 50:  `@RequestScope` Page 62: `@SessionScope` and 29 more occurrences. Please use Ctrl+F.","closed","type: documentation,","molzb","2019-03-12T22:45:39Z","2019-03-13T14:26:38Z"
"","22489","ReloadableResourceBundleMessageSource better support getResources","Dear Spring team:  I want to use `ReloadableResourceBundleMessageSource` for international resource.  I  try use  `*_en` to match a file's name and reload properties, but I think it is not supported when I found it uses `getResource()` for the location of the resource.  I suggest we can use `getResources()` and use `PathMatchingResourcePatternResolver` for resolve.  Thanks","open","status: feedback-provided,","huayu611","2019-02-28T06:54:58Z","2019-04-10T06:52:20Z"
"","2072","Custom resolver should be first add in","Custom resolver should be first add in since they may want overwrite the default behavior,especially map resolver. I want my @RequestParam Map contains some Integer value instead of all String value. I wrote my own resolver extends RequestParamMapMethodArgumentResolver  , but RequestParamMapMethodArgumentResolver will be the first resolver be detected, so my resolver won't work. So I add my own annotation and overwrite the  supportsParameter method , then MapMethodProcessor will be the first . I have no way to deal this solution. So I think it's better to add custom resolver first, then the default resolver.","closed","","linxingwu","2019-01-07T03:19:54Z","2019-01-08T16:24:53Z"
"","22730","Avoid exceptions in ReflectionUtils.isObjectMethod(…)","Currently, `ReflectionUtils.isObjectMethod(…)` calls `Object.class.getDeclaredMethod(…)`, which, for every method that is not an object method, will cause an exception being thrown. I.e. if you call that method heavily with non-`Object` methods, you create a lot of exceptions.  I suggest to replace that method lookup by a `Map` lookup of all `Object` methods by name (with their parameter type arrays as value for subsequent comparison on a hit of the first lookup).","closed","type: enhancement,","odrotbohm","2019-04-03T14:16:11Z","2019-04-03T17:45:06Z"
"","22296","Spring analyzer for ""mvn dependency:analyze""","Currently, `mvn dependency:analyze` will treat dependencies that are only used by Spring as ""unused declared dependencies"". However, the Maven plugin `dependency:analyze` provides a way to implement custom analyzer. I wish Spring can provide such analyzer to let me distinguish the dependencies that are only used by Spring and the ones that are really unused. Thanks.","closed","for: stackoverflow,","johnlinp","2019-01-23T09:45:25Z","2019-01-24T09:10:44Z"
"","22807","Expose StompSubProtocolWebSocketHandler metrics","Currently WebSocketMessageBrokerStats hides the actual metrics behind nested toString()s.  This makes it difficult to expose these metrics (for example with micrometer) without resorting to brittle access to private fields.  https://github.com/spring-projects/spring-framework/blob/3a0f309e2c9fdbbf7fb2d348be861528177f8555/spring-websocket/src/main/java/org/springframework/web/socket/config/WebSocketMessageBrokerStats.java#L197  ie:  ```     @PostConstruct     public void init() {         webSocketMessageBrokerStats.setLoggingPeriod(statsIntervalMs);          // https://github.com/spring-projects/spring-framework/issues/22807         Object handler = new DirectFieldAccessor(webSocketMessageBrokerStats).getPropertyValue(""webSocketHandler"");         Object stats = new DirectFieldAccessor(handler).getPropertyValue(""stats"");         DirectFieldAccessor statsAccessor = new DirectFieldAccessor(stats);         Gauge.builder(""sockjs.connection"", () ->             ((AtomicInteger)statsAccessor.getPropertyValue(""webSocket"")).get()).tags(""protocol"", ""WS"")             .register(meterRegistry);         Gauge.builder(""sockjs.connection"", () ->             ((AtomicInteger)statsAccessor.getPropertyValue(""httpStreaming"")).get()).tags(""protocol"", ""HttpStream"")             .register(meterRegistry);         Gauge.builder(""sockjs.connection"", () ->             ((AtomicInteger)statsAccessor.getPropertyValue(""httpPolling"")).get()).tags(""protocol"", ""HttpPoll"")             .register(meterRegistry);     }```","closed","type: enhancement,","krm1312","2019-04-16T18:43:35Z","2019-04-19T03:12:25Z"
"","4733","Consider introducing a special test scope","Currently we can use `@DirtiesContext` to restart the full `ApplicationContext` used by the test class. However sometimes this might be a heavy operation and introduce very lengthy tests. Introducing a special `@TestScope` might reduce the pain a little.","closed","type: enhancement,","mdeinum","2019-01-10T08:48:20Z","2020-04-13T13:41:20Z"
"","22391","Consider conditional view caching","Currently we are only able to set size for views cache in subclasses of [AbstractCachingViewResolver](https://github.com/spring-projects/spring-framework/blob/master/spring-webmvc/src/main/java/org/springframework/web/servlet/view/AbstractCachingViewResolver.java). When cache size limit is reached, oldest entry is evicted.  In my project I have following access pattern: 1) several html views which are accessed frequently 2) many RedirectView, which differs only in path segment (`/returnfromsomewhere/SOMEIDENTIFIER`) and are accessed only once. I don't want them to stay in cache.  I added simple *view name filter* to check if viewName should be cached.  Configuration example:  ```java     @Configuration     static class ViewResolverConfiguration {          @Autowired         private List viewResolvers;          @PostConstruct         public void configure() {             viewResolvers.forEach(v -> {                 if (v instanceof AbstractCachingViewResolver) {                     ((AbstractCachingViewResolver) v).setCacheFilter(n -> !n.startsWith(""redirect""));                 }             });         }     } ```  Is it worth creating PR?","closed","type: enhancement,","fred84","2019-02-08T13:15:17Z","2019-08-01T11:55:53Z"
"","22370","@Transactional beans not getting proxied when being initialized during failed circular reference attempt","Currently using spring 4.3.22.RELEASE  Working in a large project with a bunch of circular preferences.  When creating the bean structure, if bean creation fails initially(seeing a beanCreationException due to a failed ProxyBean creation without a known target class), the entire dependency graph of failed bean creations is rolled back.  In our case, this includes our proxied @ Transactional bean.  When the bean graph creation continues down a different, eventually successful path, the @ Transactional bean is recreated.  However, during the original rollback, InfrastructureAdvisorAutoProxyCreator (extending AbstractAutoProxyCreator) isn't informed, so it's copy of earlyProxyReferences isn't informed that the early bean creation from earlier is gone, so when org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessAfterInitialization(Object, String) is called, it does not call wrapIfNecessary, as earlyProxyReferences still contains the bean name, from when it fails the first time.  Note, that if the circular reference causes a failure only once, this doesn't seem to happen, but if there are 2 failures, it seems to start returning unproxied beans. It appears to be the case that we have to be trying to wire the @ transactional bean into a bean in a different context for this to happen.  It should be noted spring ends up initializing, just with missing proxies, which is almost worse than just failing, as the app comes up in an unknown state","closed","type: bug,","laoseth","2019-02-07T01:47:37Z","2019-02-15T20:35:15Z"
"","22367","Added configurable maxFramePayloadLength to ReactorNettyWebSocketClient","Currently the ReactorNettyWebSocketClient (RNWSC) doesn't allow for a configurable maxFramePayloadLength. The HttpClient used by the RNWSC allows for a configurable maxFramePayloadLength however, the method .websocket() used by the RNWSC ignores whatever is set by the HttpClient and uses a default value of 65536. As shown below:  **ReactorNettyWebSocketClient invokes .websocket()**      .websocket(StringUtils.collectionToCommaDelimitedString(handler.getSubProtocols()))  **The method invoked on the HttpClient ignores the value you may have set in your HttpClient**  	public final WebsocketSender websocket(String subprotocols) { 		return websocket(subprotocols, 65536); 	}  I've solved the issue by using the overloaded .websocket() method on the HttpClient which takes a maxFramePayloadLength.      .websocket(StringUtils.collectionToCommaDelimitedString(handler.getSubProtocols()),      getMaxFramePayloadLength())  The maxFramePayloadLength is now configurable in the RNWSC.","closed","type: enhancement,","envious","2019-02-06T20:56:25Z","2019-04-04T07:12:06Z"
"","22366","Remove inefficiency in HttpStatus.series()","Currently the `Series` value for a `HttpStatus` is always evaluated which in turn costs an allocation of a `Series` array by using `Series.values()` which does a defensive copy.  I moved the `Series` value into `HttpStatus` and calculate it in the constructor as manually passing it for every constant seems unnecessary. Furthermore I deleted a JavaDoc about an `IllegalArgumentException` which cannot occur for any valid `HttpStatus`. If need be I would volunteer to add a unit test so this doesn't fail in the future.  The method `Series.valueOf(HttpStatus)` could be removed / deprecated by this change but I don't think that's for me to decide :)","closed","type: enhancement,","roookeee","2019-02-06T20:10:30Z","2020-09-26T14:16:32Z"
"","22267","Pass filename hint to the ResourceDecoder","Currently the `ResourceDecoder` uses the `ByteArrayResource(byte[])` constructor. However, usually when working with `Resource` the `Content-Disposition` header can be used to send the filename of the resource. I think that in this case it would be helpful if that can be passed as the description.","closed","type: enhancement,","filiphr","2019-01-16T11:20:16Z","2019-03-19T21:52:55Z"
"","22451","Avoid String concatenation for lookup in StaticMessageSource","Currently StaticMessageSource employs String composed of key and stringified Locale as key in map: ```java public class StaticMessageSource extends AbstractMessageSource {  	/** Map from 'code + locale' keys to message Strings. */ 	private final Map messages = new HashMap<>();  	private final Map cachedMessageFormats = new HashMap<>();          //... } ``` As a result at each call to `Map::get`/`Map::put` we have to concat Strings resulting in allocations of  `StringBuilder` and copying `char[]`. Instead I propose to use separately defined immutable Key.  I've tested behaviour with benchmark  ```java @State(Scope.Thread) @BenchmarkMode(Mode.AverageTime) @OutputTimeUnit(TimeUnit.NANOSECONDS) public class LocaleToStringBenchmark {    @Benchmark   public Object concatenation(Data data) {     return data.code + '_' + data.locale;   }    @Benchmark   public Object compositeKey(Data data) {     return new Key(data.code, data.locale);   }    @Benchmark   public int hashCodeCompositeString(Data data) {     return data.compositeString.hashCode();   }    @Benchmark   public int hashCodeCompositeKey(Data data) {     return data.compositeKey.hashCode();   }    @Benchmark   public boolean equalsCompositeString(Data data) {     return data.compositeString.equals(data.anotherCompositeString);   }    @Benchmark   public boolean equalsCompositeKey(Data data) {     return data.compositeKey.equals(data.anotherCompositeKey);   }    @State(Scope.Thread)   public static class Data {     private final String code = ""code1"";     private final Locale locale = Locale.getDefault();      private final Key compositeKey = new Key(code, locale);     private final String compositeString = code + '_' + locale;      private final Key anotherCompositeKey = new Key(code, locale);     private final String anotherCompositeString = code + '_' + locale;   }    private static final class Key {     private final String code;     private final Locale locale;      private Key(String code, Locale locale) {       this.code = code;       this.locale = locale;     }      @Override     public boolean equals(Object o) {       if (this == o) return true;       if (o == null || getClass() != o.getClass()) return false;        Key key = (Key) o;        if (!code.equals(key.code)) return false;       return locale.equals(key.locale);     }      @Override     public int hashCode() {       return 31 * code.hashCode() + locale.hashCode();     }   } } ``` Patched consumes much less memory on key allocation and does it faster, performance of equals/hashCode is mostly the same (tested at work on i7-7700): ``` JDK 8                                              Mode  Cnt     Score     Error   Units  compositeKey                                 avgt   25     5,134 ±   0,274   ns/op concatenation                                avgt   25    67,999 ±   5,872   ns/op  compositeKey:·gc.alloc.rate.norm             avgt   25    24,000 ±   0,001    B/op concatenation:·gc.alloc.rate.norm            avgt   25   224,000 ±   0,001    B/op  equalsCompositeKey                           avgt   25     3,229 ±   0,161   ns/op equalsCompositeString                        avgt   25     6,447 ±   0,448   ns/op  hashCodeCompositeKey                         avgt   25     2,584 ±   0,054   ns/op hashCodeCompositeString                      avgt   25     2,069 ±   0,028   ns/op  JDK 11                                              Mode  Cnt     Score    Error   Units  compositeKey                                 avgt   25     5,851 ±  0,271   ns/op concatenation                                avgt   25    61,900 ±  4,406   ns/op  compositeKey:·gc.alloc.rate.norm             avgt   25    24,000 ±  0,001    B/op concatenation:·gc.alloc.rate.norm            avgt   25   168,000 ±  0,001    B/op  equalsCompositeKey                           avgt   25     3,177 ±  0,254   ns/op equalsCompositeString                        avgt   25     5,787 ±  0,305   ns/op  hashCodeCompositeKey                         avgt   25     2,947 ±  0,105   ns/op hashCodeCompositeString                      avgt   25     2,187 ±  0,083   ns/op ```","closed","type: enhancement,","stsypanov","2019-02-21T15:19:19Z","2019-11-14T08:20:08Z"
"","22799","Option to customize or mutate existing RSocketStrategies","Currently `RSocketStrategies` does not allow to customize encoders and decoders further once it's been built.  We should add an `RSocketStrategies.builder(RSocketStrategies other)` to create another instance from an existing one. This should be useful when creating an `RsocketRequester` with specific codecs needs.","closed","type: task,","bclozel","2019-04-15T19:01:06Z","2019-04-17T18:25:23Z"
"","22570","Use shared InjectionMetadata instance for beans skipped by AutowiredAnnotationBeanPostProcessor","Currently `AutowiredAnnotationBeanPostProcessor.buildAutowiringMetadata` creates a new `InjectionMetadata` instance with an empty collection for beans that have no relevant annotations. It looks like the `clazz` parameter never escapes from the class so we could probably create a special shared `InjectionMetadata.EMPTY` instance to return in such cases.","closed","in: core,","philwebb","2019-03-12T01:07:31Z","2019-03-12T21:46:44Z"
"","22430","Use StringJoiner where possible to simplify String joining","Continuation of https://github.com/spring-projects/spring-framework/pull/22330","closed","type: task,","stsypanov","2019-02-19T12:15:30Z","2019-03-07T12:33:25Z"
"","22511","PathEditor does not handle absolute path on Windows","Consider using a windows absolute path in a property file: `repository.directory= C:some_path` We want to inject directly a Path using @Value: ```     public MyRepository(@Value(""${repository.directory}"") Path repositoryDirectory) {         this.repositoryDirectory = repositoryDirectory;     } ```  1.  If we are using the original Windows path, with back-slash: `repository.directory=C:\Users\lacasoub\myUser\Local\Temp` Some class  (Properties.load() i guess) trims the slash and we end up with the following string: C:UsersmyUserAppDataLocalTemp. Which is then concat with the Sprint boot server relative path, ending with a String like this: **C:\Users\myUser\AppData\Local\Temp\undertow-docbase.2615281017312972350.8080\C:UsersmyUserAppDataLocalTemp**  Its a normal behavior for properties file.  2. If we are using double back-slash, it works.  3. If we are using slash instead: `repository.directory=C:/Users/myUser/AppData/Local/Temp`  PathEditor has the following behavior: - Converting this string to an URI, which is strange because URI and Windows Path are not compliant.  - Adding a ""/"" because it don't understand that's it's a Windows path - Concat the relative path **/C:/Users/myUser/AppData/Local/Temp** with the Sprint boot server relative path, ending with a String like this: **C:\Users\myUser\AppData\Local\Temp\undertow-docbase.2615281017312972350.8080\C:\Users\myUser\AppData\Local\Temp** - Java path API throws an exception because the path creating by Sprint Boot PathEditor class is invalid: `Caused by: java.nio.file.InvalidPathException: Illegal char <:> at index`  The solution 2 works but the solution 3 should also works as the Java Path class allows Windows absolute path with back-slash (Linux style) and not the PathEditor.","closed","in: core,","aymeric-soubrouillard","2019-03-05T11:10:20Z","2021-02-22T17:54:48Z"
"","22685","AnnotationUtils.isAnnotationMetaPresent(…) no longer considers javax.annotation.Nonnull","Consider the following code in which a package is annotated with `@NonNullApi`:  `package-info.java`  ```java @NonNullApi package foo;  import org.springframework.lang.NonNullApi; ```  Reproducer  ```java package foo;  import javax.annotation.Nonnull;  import org.junit.Test;  import org.springframework.core.annotation.AnnotationUtils; import org.springframework.lang.NonNullApi;  import static org.junit.Assert.*;  public class ReproducerTest {  	@Test 	public void shouldFindMetaAnnotation() {  		NonNullApi annotation = getClass().getPackage().getAnnotation(NonNullApi.class);  		assertTrue(AnnotationUtils.isAnnotationMetaPresent(annotation, javax.annotation.Nonnull.class)); 	} } ```  Using `AnnotationUtils.isAnnotationMetaPresent(…)` for annotation discovery fails to report that `NonNullApi` is a meta-annotation for `javax.annotation.Nonnull`.  Spring Data uses [JSR 305-based nullability inference](https://github.com/spring-projects/spring-data-commons/blob/master/src/main/java/org/springframework/data/util/NullableUtils.java) for repository method arguments and return value inspection","closed","type: regression,","mp911de","2019-03-26T12:37:43Z","2019-03-28T14:20:43Z"
"","22476","Fix CompletableFuture exception handling","CompletableFuture exceptions are always wrapped into CompletionException. We need to unwrap CompletionException to properly handle exceptions in MVC handlers that return CompletableFuture. See https://stackoverflow.com/questions/49676889/spring-controller-advice-does-not-correctly-handle-a-completablefuture-completed  #22475","closed","type: enhancement,","sviperll","2019-02-26T12:20:39Z","2019-11-19T17:53:44Z"
"","22475","Unwrap CompletionException for MVC handlers that return CompletableFuture","CompletableFuture exceptions are always wrapped into CompletionException. We need to unwrap CompletionException to properly handle exceptions in MVC handlers that return CompletableFuture. Otherwise it's impossible to implement `@ExceptionHandler` in `@ControllerAdvice` to handle underlying exception. See https://stackoverflow.com/questions/49676889/spring-controller-advice-does-not-correctly-handle-a-completablefuture-completed","closed","status: duplicate,","sviperll","2019-02-26T12:20:00Z","2019-02-26T12:27:55Z"
"","22569","Introduce MergedAnnotation finder methods","Code to locate methods on classes based on annotations currently mostly uses a combination of `MethodIntrospector` and `AnnotatedElementUtils`.  For example, in `EventListenerMethodProcessor`:  https://github.com/spring-projects/spring-framework/blob/6266370a7aca5e03dc88dbaf95252bb13333dbcc/spring-context/src/main/java/org/springframework/context/event/EventListenerMethodProcessor.java#L148-L150  With the addition of the new `MergedAnnotations` API along with the annotation index work it might be nicer if we had a first class way to find such methods.  One possible solution would be to add `finder` methods to `MergedAnnotation`.   For example:  ```java MergedAnnotation.find(SomeAnnotation.class).onMethodsIn(SomeCandidate.class); ```","open","in: core,","philwebb","2019-03-11T23:07:07Z","2022-05-17T10:05:26Z"
"","2061","Fix spelling of ""reactive HttpClient"" in doc","Changes spelling from `HtpClient` to `HttpClient` in the documentation. I ran a search and verified that this is the only place `HtpClient` is used.","closed","","Gyllsdorff","2018-12-26T12:21:07Z","2019-01-20T13:07:28Z"
"","22394","fix typo in reference WebSocket documentation","changed interface type from WebSocketConfigurer to WebSocketMessageBrokerConfigurer.  `WebSocketConfigurer` have not  ` registerStompEndpoints(StompEndpointRegistry registry)`  ```java public interface WebSocketConfigurer {     void registerWebSocketHandlers(WebSocketHandlerRegistry var1); } ```  `WebSocketMessageBrokerConfigurer` have ` registerStompEndpoints(StompEndpointRegistry registry)`  ```java public interface WebSocketMessageBrokerConfigurer {     default void registerStompEndpoints(StompEndpointRegistry registry) {     }     // .... ```","closed","status: declined,","boojongmin","2019-02-10T01:52:15Z","2019-03-11T12:44:49Z"
"","22291","Do concatenation with String::substring instead of StringBuilder::append in short append chain","Changed code is not only shorter and more simple, but also faster and consumes less memory, see measurements here: https://youtrack.jetbrains.com/issue/IDEA-205676","closed","","stsypanov","2019-01-22T16:08:34Z","2019-01-29T14:00:50Z"
"","22354","Use JUnit 4's built-in expected exception support in BeanUtilsTests","change try-catch into junit expected","closed","type: task,","viviennes7","2019-02-06T08:38:41Z","2019-03-23T15:15:18Z"
"","2038","Yanlk breanch","ceshi","closed","","yanliankun","2018-12-05T07:34:04Z","2018-12-05T07:51:10Z"
"","22248","RedisTemplate support lua script when using lettuce factory in redis cluster mode","Can RedisTemplate support lua script when using lettuce factory in redis cluster mode?  In this case I met some problems: ""Lua script attempted to access a non local key in a cluster node"" when i am using ""redis.call('hmget', 'key', 'hash')""","closed","status: invalid,","wenjian1314","2019-01-14T07:46:26Z","2019-01-14T21:23:06Z"
"","22364","CompositeLog does not log exceptions at ERROR level","Calling the following logs the error message but not the error itself:  ```java CompositeLog.error(Object message, Throwable ex) ```","closed","in: core,","bclozel","2019-02-06T18:58:06Z","2019-02-06T20:03:38Z"
"","22696","AnnotatedElementUtils.getAllAnnotationAttributes(…, ""javax.annotation.Nonnull"") returns null","Calling `AnnotatedElementUtils.getAllAnnotationAttributes(…, ""javax.annotation.Nonnull"")` with version `5.2.0.BUILD-SNAPSHOT` for `org.springframework.lang.NonNullApi.class` and `javax.annotation.ParametersAreNonnullByDefault.class` annotation types returns `null`.   Previously (5.1 and earlier), the method returned `MultiValueMap` containing annotation attributes.","closed","in: core,","mp911de","2019-03-28T08:30:13Z","2019-03-28T13:40:09Z"
"","22648","Remove redundant 'String.substring()' call","Call to 'String.substring()' making a String instance, but if we call to 'StringBuilder append(CharSequence s, int start, int end)' directly, the String instance can be avoided.","closed","type: task,","rupertw","2019-03-24T11:10:28Z","2019-03-25T09:29:54Z"
"","2002","3.2.x ----build success but no xsd schema file in jar","build success but no xsd schema file in jar?","closed","","Julvae","2018-10-30T08:18:55Z","2018-10-30T08:21:22Z"
"","2041","Update ValidationUtils.java","before using object, check for null is necessary.  Till spring 4.3.x we have this check and in spring 5.x.x its missing","closed","in: core,","dnyaneshwar","2018-12-07T09:46:33Z","2021-11-24T14:55:23Z"
"","22752","Add paging and sorting mechanism with the JdbcTemplate","Based on the Spring Data Pageable API, this extension adds a queryForPage(...) method to the JdbcTemplate which through SQL subselect wrapping techniques enables the user to query for paged (and sorted) results.   Changes to be committed: 	modified:   spring-jdbc/spring-jdbc.gradle 	new file:   spring-jdbc/src/main/java/org/springframework/jdbc/core/PagingAndSortingJdbcTemplate.java","open","in: data,","davidmalis","2019-04-05T19:30:39Z","2021-11-10T11:38:06Z"
"","22746","Avoid expensive assertions in HttpRange","Backport of gh-22742","closed","type: backport,","spring-projects-issues","2019-04-05T12:03:15Z","2019-04-08T16:13:48Z"
"","22745","Avoid expensive assertions in HttpRange","Backport of gh-22742","closed","type: backport,","spring-projects-issues","2019-04-05T12:03:15Z","2019-04-08T16:18:57Z"
"","22764","Jackson2ObjectMapperBuilder prevents the registration of multiple modules with a null typeId","Backport of gh-22740","closed","type: backport,","spring-projects-issues","2019-04-08T12:21:36Z","2019-04-08T16:14:05Z"
"","22763","Jackson2ObjectMapperBuilder prevents the registration of multiple modules with a null typeId","Backport of gh-22740","closed","type: backport,","spring-projects-issues","2019-04-08T12:21:36Z","2019-04-08T16:13:43Z"
"","22691","URL Cleanup","Backport of gh-22672","closed","type: backport,","spring-projects-issues","2019-03-27T12:06:59Z","2019-03-27T12:07:03Z"
"","22661","Update license.txt file","Backport of gh-22659","closed","type: backport,","spring-projects-issues","2019-03-25T17:02:46Z","2019-03-26T13:08:44Z"
"","22660","Update license.txt file","Backport of gh-22659","closed","type: backport,","spring-projects-issues","2019-03-25T17:02:46Z","2019-03-26T12:59:51Z"
"","22686","Avoid duplicate registration of @ControllerAdvice implementing both RequestBodyAdvice and ResponseBodyAdvice","Backport of gh-22638","closed","type: backport,","spring-projects-issues","2019-03-26T13:04:08Z","2019-03-26T13:22:19Z"
"","22684","Avoid duplicate registration of @ControllerAdvice implementing both RequestBodyAdvice and ResponseBodyAdvice","Backport of gh-22638","closed","type: backport,","spring-projects-issues","2019-03-26T11:53:55Z","2019-03-26T12:55:28Z"
"","22615","Update documentation for WebJar support","Backport of gh-22613","closed","type: backport,","spring-projects-issues","2019-03-19T18:01:42Z","2019-03-19T18:08:05Z"
"","22658","Locale inconsistently resolves to null for invalid input value","Backport of gh-22603","closed","type: backport,","spring-projects-issues","2019-03-25T15:39:08Z","2019-03-26T16:19:48Z"
"","22653","CssResourceLinkedTransformer cannot process a blank value of a url() link","Backport of gh-22602","closed","type: backport,","spring-projects-issues","2019-03-25T13:04:11Z","2019-03-26T16:48:11Z"
"","22625","Jackson2ObjectMapperBuilder's modulesToInstall function does not eventually override the default configuration","Backport of gh-22576","closed","type: backport,","spring-projects-issues","2019-03-21T09:11:34Z","2019-03-26T12:59:39Z"
"","22624","Jackson2ObjectMapperBuilder's modulesToInstall function does not eventually override the default configuration","Backport of gh-22576","closed","type: backport,","spring-projects-issues","2019-03-21T09:11:33Z","2019-03-26T13:08:30Z"
"","22550","ServletWebRequest.getHeaderValues throwing NPE when header information is not available","Backport of gh-22547","closed","type: backport,","spring-projects-issues","2019-03-08T21:43:18Z","2019-03-26T12:58:06Z"
"","22575","URL Cleanup","Backport of gh-22520","closed","status: invalid,","spring-projects-issues","2019-03-12T15:41:46Z","2019-03-12T16:01:13Z"
"","22530","Revisit XML schema handling for consistent local vs external resolution","Backport of gh-22504","closed","type: backport,","spring-projects-issues","2019-03-06T13:17:22Z","2019-03-26T13:08:14Z"
"","22529","Revisit XML schema handling for consistent local vs external resolution","Backport of gh-22504","closed","type: backport,","spring-projects-issues","2019-03-06T13:17:10Z","2019-03-26T12:57:45Z"
"","22494","JdbcTemplate.extractOutputParameters should preserve order of parameters","Backport of gh-22491","closed","type: backport,","spring-projects-issues","2019-02-28T10:52:53Z","2019-03-26T13:08:07Z"
"","22493","JdbcTemplate.extractOutputParameters should preserve order of parameters","Backport of gh-22491","closed","type: backport,","spring-projects-issues","2019-02-28T10:52:24Z","2019-03-26T12:59:20Z"
"","22611","Last-Modified Date format changed with SPR-17571 to not have double digit day","Backport of gh-22478","closed","type: backport,","spring-projects-issues","2019-03-19T14:22:09Z","2019-03-26T12:58:23Z"
"","22456","AbstractTraceInterceptor causes problems when implemented in Kotlin","Backport of gh-22435","closed","type: backport,","spring-projects-issues","2019-02-22T08:49:22Z","2019-03-26T12:59:00Z"
"","22471","Events extending from PayloadApplicationEvent and implementing an interface fail to match @EventListener argument","Backport of gh-22426","closed","type: backport,","spring-projects-issues","2019-02-25T17:28:56Z","2019-03-26T13:08:00Z"
"","22470","Events extending from PayloadApplicationEvent and implementing an interface fail to match @EventListener argument","Backport of gh-22426","closed","type: backport,","spring-projects-issues","2019-02-25T17:28:42Z","2019-03-26T12:59:09Z"
"","22415","DefaultConversionService fails to properly convert an Object[] to a int[]","Backport of gh-22410","closed","type: backport,","spring-projects-issues","2019-02-14T13:50:09Z","2019-03-26T13:07:54Z"
"","22414","DefaultConversionService fails to properly convert an Object[] to a int[]","Backport of gh-22410","closed","type: backport,","spring-projects-issues","2019-02-14T13:49:51Z","2019-03-26T12:58:42Z"
"","22407","IllegalArgumentException when overriding empty 'excludeFilters' array on @ComponentScan","Backport of gh-22405","closed","type: backport,","spring-projects-issues","2019-02-12T08:24:02Z","2019-02-12T08:39:31Z"
"","22377","@Transactional beans not getting proxied when being initialized during failed circular reference attempt","Backport of gh-22370","closed","type: backport,","spring-projects-issues","2019-02-07T15:46:58Z","2019-02-07T21:51:51Z"
"","22376","@Transactional beans not getting proxied when being initialized during failed circular reference attempt","Backport of gh-22370","closed","type: backport,","spring-projects-issues","2019-02-07T15:46:58Z","2019-02-07T23:26:47Z"
"","22363","Fix truncated Value#value javadoc","Backport of gh-22331","closed","type: backport,","spring-projects-issues","2019-02-06T18:37:22Z","2019-02-06T18:37:24Z"
"","22362","Fix truncated Value#value javadoc","Backport of gh-22331","closed","type: backport,","spring-projects-issues","2019-02-06T18:37:20Z","2019-02-06T18:37:22Z"
"","22374","ApplicationContext.refresh() causes stale listeners to be added to ApplicationEventMulticaster","Backport of gh-22325","closed","type: backport,","spring-projects-issues","2019-02-07T15:38:21Z","2019-02-07T21:51:36Z"
"","22356","Avoid duplicate call to findAnnotations in DefaultListableBeanFactory.findAnnotationOnBean","Backport of gh-22318","closed","type: backport,","spring-projects-issues","2019-02-06T09:16:45Z","2019-02-07T23:26:48Z"
"","22355","Avoid duplicate call to findAnnotations in DefaultListableBeanFactory.findAnnotationOnBean","Backport of gh-22318","closed","type: backport,","spring-projects-issues","2019-02-06T09:16:44Z","2019-02-07T21:51:21Z"
"","22353","ApplicationListenerMethodAdapter does not find @Ordered annotation for dynamic proxies","Backport of gh-22307","closed","type: backport,","spring-projects-issues","2019-02-05T23:12:12Z","2019-02-07T21:49:59Z"
"","22352","ApplicationListenerMethodAdapter does not find @Ordered annotation for dynamic proxies","Backport of gh-22307","closed","type: backport,","spring-projects-issues","2019-02-05T23:11:58Z","2019-02-07T23:26:48Z"
"","22380","Spring MVC documentation has incorrect WebFlux reference","Backport of gh-22270","closed","type: backport,","spring-projects-issues","2019-02-07T16:08:08Z","2019-02-07T21:29:24Z"
"","22379","Fix EnableWebSocketMessageBroker Javadoc","Backport of gh-22261","closed","type: backport,","spring-projects-issues","2019-02-07T16:04:00Z","2019-02-07T21:52:09Z"
"","22378","Fix EnableWebSocketMessageBroker Javadoc","Backport of gh-22261","closed","type: backport,","spring-projects-issues","2019-02-07T16:03:59Z","2019-02-07T23:26:47Z"
"","22552","ResourceUrlEncodingFilter versioning breaks when URL contains fragment [SPR-17535]","Backport of gh-22067","closed","type: backport,","spring-projects-issues","2019-03-09T14:44:28Z","2019-03-19T18:19:25Z"
"","22401","RestTemplate adds duplicate accept header information [SPR-16690]","Backport of gh-21231","closed","type: backport,","spring-projects-issues","2019-02-11T12:01:12Z","2019-02-11T14:20:08Z"
"","22759","Spring WebFlux and ReactiveRedisTemplate high cpu usage after perfromance test","autocannon -c 100 -p 10 http://localhost:8081/hello3  ```xml  	org.springframework.boot 	spring-boot-starter-parent 	2.1.4.RELEASE 	   ```  ```java     @Autowired     ReactiveRedisTemplate rrt;      @GetMapping(""/hello3"")     public Mono hello3() {         Mono value = rrt.opsForValue().get(""abc"");         return value;     } ```  ``` 2019-04-08 10:36:27.987 ERROR 8736 --- [ctor-http-nio-1] o.s.w.s.adapter.HttpWebHandlerAdapter    : [446cbe41] Error [java.io.IOException: 你的主机中的软件中止了一个已建立的连接。] for HTTP GET ""/hello3"", but ServerHttpResponse already committed (200 OK) 2019-04-08 10:36:27.995 ERROR 8736 --- [ctor-http-nio-6] o.s.w.s.adapter.HttpWebHandlerAdapter    : [c48b4df4] Error [java.io.IOException: 你的主机中的软件中止了一个已建立的连接。] for HTTP GET ""/hello3"", but ServerHttpResponse already committed (200 OK) 2019-04-08 10:36:27.999 ERROR 8736 --- [ctor-http-nio-8] o.s.w.s.adapter.HttpWebHandlerAdapter    : [bf90231a] Error [java.io.IOException: 你的主机中的软件中止了一个已建立的连接。] for HTTP GET ""/hello3"", but ServerHttpResponse already committed (200 OK) 2019-04-08 10:36:27.998 ERROR 8736 --- [ctor-http-nio-5] o.s.w.s.adapter.HttpWebHandlerAdapter    : [f51d5763] Error [java.io.IOException: 你的主机中的软件中止了一个已建立的连接。] for HTTP GET ""/hello3"", but ServerHttpResponse already committed (200 OK) 2019-04-08 10:36:27.999 ERROR 8736 --- [ctor-http-nio-2] o.s.w.s.adapter.HttpWebHandlerAdapter    : [ebded3b3] Error [java.io.IOException: 你的主机中的软件中止了一个已建立的连接。] for HTTP GET ""/hello3"", but ServerHttpResponse already committed (200 OK) 2019-04-08 10:36:27.999 ERROR 8736 --- [ctor-http-nio-1] o.s.w.s.adapter.HttpWebHandlerAdapter    : [5a9e7799] Error [java.io.IOException: 你的主机中的软件中止了一个已建立的连接。] for HTTP GET ""/hello3"", but ServerHttpResponse already committed (200 OK) 2019-04-08 10:36:28.001 ERROR 8736 --- [ctor-http-nio-2] o.s.w.s.adapter.HttpWebHandlerAdapter    : [c80755d3] Error [java.io.IOException: 你的主机中的软件中止了一个已建立的连接。] for HTTP GET ""/hello3"", but ServerHttpResponse already committed (200 OK) 2019-04-08 10:36:28.002 ERROR 8736 --- [ctor-http-nio-6] o.s.w.s.adapter.HttpWebHandlerAdapter    : [0702de79] Error [java.io.IOException: 你的主机中的软件中止了一个已建立的连接。] for HTTP GET ""/hello3"", but ServerHttpResponse already committed (200 OK) 2019-04-08 10:36:28.003 ERROR 8736 --- [ctor-http-nio-2] o.s.w.s.adapter.HttpWebHandlerAdapter    : [4bb382d2] Error [java.io.IOException: 你的主机中的软件中止了一个已建立的连接。] for HTTP GET ""/hello3"", but ServerHttpResponse already committed (200 OK) 2019-04-08 10:36:28.006 ERROR 8736 --- [ctor-http-nio-5] o.s.w.s.adapter.HttpWebHandlerAdapter    : [3c72ea4c] Error [java.io.IOException: 你的主机中的软件中止了一个已建立的连接。] for HTTP GET ""/hello3"", but ServerHttpResponse already committed (200 OK) 2019-04-08 10:36:28.007 ERROR 8736 --- [ctor-http-nio-5] o.s.w.s.adapter.HttpWebHandlerAdapter    : [6b0f0f9a] Error [java.io.IOException: 你的主机中的软件中止了一个已建立的连接。] for HTTP GET ""/hello3"", but ServerHttpResponse already committed (200 OK) 2019-04-08 10:36:28.010 ERROR 8736 --- [ctor-http-nio-2] o.s.w.s.adapter.HttpWebHandlerAdapter    : [18580b15] Error [java.io.IOException: 你的主机中的软件中止了一个已建立的连接。] for HTTP GET ""/hello3"", but ServerHttpResponse already committed (200 OK) 2019-04-08 10:36:28.011 ERROR 8736 --- [ctor-http-nio-2] o.s.w.s.adapter.HttpWebHandlerAdapter    : [52172f97] Error [java.io.IOException: 你的主机中的软件中止了一个已建立的连接。] for HTTP GET ""/hello3"", but ServerHttpResponse already committed (200 OK) ```","closed","","kindywu","2019-04-08T02:38:21Z","2020-04-15T18:54:24Z"
"","22784","Get all the aliases at getPropertyNames","At present, the `JOptCommandLinePropertySource.getPropertyNames` get the last element in the result of `spec.options()`. But the comment says `Only the longest name is used for enumerating`. It is a contradiction and one of the two(code or comment) has to be changed.  I change the code according the comment because I think the longest name is more useful. And if more than one name have the same longest length, the first one(alphabetically) will be used in my solution.  Fix #22168.","open","in: core,","lgxbslgx","2019-04-10T16:54:33Z","2021-11-10T12:00:10Z"
"","22769","Evaluating key after cache condition","At present, `@Cacheable`, `@CacheEvict` and `@CachePut` evaluate their keys after `condition` but before  `unless`. I think the keys should be evaluated after all the cache condition which contains the `condition` and `unless`.  I change the code, add the corresponding test cases and fix the JavaDoc for @Cacheable, @CacheEvict and @CachePut.  Fixes #22294.","open","type: enhancement,","lgxbslgx","2019-04-08T20:03:15Z","2022-05-30T11:01:17Z"
"","22573","Add missing break statements to stop looping when result is known","Assuming  - raise-the-flag loop raises the flag  - `if` statement has not side effects requiring iteration up to the end We can add break right after the flag is raised.","closed","type: task,","stsypanov","2019-03-12T09:39:20Z","2019-03-12T12:45:31Z"
"","22561","Add AssertJ for use in our own tests","AssertJ provides a very nice fluent assertions style that in my opinion is easier to read and more consistent than Hamcrest. I'd like to add it as a test dependency and make use of it when testing the new `MergedAnnotations` API. Using AssertJ `assertThatExceptionOfType...` calls instead of `@Rule ExpectedException` will also help if we decide to migrate our tests to JUnit5.  Spring Boot tests have been written exclusively with AssertJ for some time now.","closed","type: task,","philwebb","2019-03-11T21:41:58Z","2019-03-23T11:15:55Z"
"","22303","Incomplete fix for MethodParameter.isOptional() ArrayIndexOutOfBoundsException","As per the latest comment on #22160, the fix in the 5.1.4 release is incomplete and needs a condition against the lower index boundary as well.","closed","type: bug,","jhoeller","2019-01-24T10:31:35Z","2019-02-20T18:11:04Z"
"","22642","Enable use of PathPattern for RSocket routing","As of #21292, Spring Messaging supports RSocket.  The `RSocketMessageHandler` implementation extends `MessageMappingMessageHandler`, which is using an `AntPathMatcher` as a base for pattern matching. We know that this implementation is not the most optimized, as we have used `PathPatternParser` in Spring WebFlux.  Since `PathPatternParser` and `PathPattern` can be seen as general purpose utilities, should we move those from spring-web to spring-core? We could keep the current ones in place, deprecate them and make them extend the new ones in spring-core.  To be used in Spring Messaging, we'd need to add a new configuration option in `PathPatternParser` to change the separator, which is currently hardcoded to `/` - it seems this class has been designed with this possibility in mind.","closed","type: enhancement,","bclozel","2019-03-22T14:12:07Z","2019-05-15T01:54:31Z"
"","22375","WebClient filters should be deferred to the subscription time","As observed in https://github.com/spring-cloud/spring-cloud-sleuth/issues/1199 and workarounded in https://github.com/spring-cloud/spring-cloud-sleuth/pull/1206, some `WebClient` filters like Sleuth's tracing propagation apply the modifications on the subscription time, but the `ClientRequest` is passed as a first argument to the filter even before the subscription: https://github.com/spring-projects/spring-framework/blob/0b9522c84e28f5784bb8d9b5eaf8d9c5cf46bc37/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultWebClientBuilder.java#L207-L211  Since some of the filters might be expensive to apply, it makes sense to apply them on subscribe. Metrics is another subscription-sensitive example.  To keep the `ClientRequest` argument, one could use `Mono.defer` to defer the execution of the filter to the subscription time, also to alight with the server-side: https://github.com/spring-projects/spring-framework/blob/d25783329a6be1f26b531711964af134f6689ba2/spring-web/src/main/java/org/springframework/web/server/handler/DefaultWebFilterChain.java#L117-L123","closed","type: enhancement,","bsideup","2019-02-07T15:40:08Z","2019-11-07T15:42:25Z"
"","22466","Simplify String concatenation","As it follows from  http://alblue.bandlem.com/2016/04/jmh-stringbuffer-stringbuilder.html and  https://habr.com/ru/post/330220/ chained `StringBuilder::append` is much faster than conventional `sb.append(); sb.append()`.  Assyming that expression like `String str = str1 + str2 + str3;` at runtime will behave as chained `StringBuilder::append` we can simplify usage of `StringBuilder` in particular cases like the one of this PR.  Here we have 2 cases: - `if` expression is false - `if` expression is true  In the first case we don't need SB at all, as resulting expression produced by `sb.toString()` equals `this.contentType`. And in the opposite case we have non-interrupted `StringBuilder::append` chain (later simplifiable to String concatenation with `+`) and thus more simple code and better performance.","closed","type: task,","stsypanov","2019-02-25T10:12:31Z","2019-02-26T17:06:27Z"
"","2054","Optimize `CharSequence` writing to `DataBuffer` instances","As explained in [SPR-17558](https://jira.spring.io/browse/SPR-17558), our current implementation doesn't use optimized variants provided by `DataBuffer` implementations, like Netty's.  This PR aims at introducing a new feature in `DataBuffer` to do that.","closed","","bclozel","2018-12-14T09:51:14Z","2018-12-20T20:36:42Z"
"","22694","Track when isLazyInit has been set in AbstractBeanDefinition","As discussed in https://github.com/spring-projects/spring-boot/issues/16184#issuecomment-473060484 it would be useful if `@Lazy(false)` could be used as signal that lazy initialization has been specifically disabled. This is not currently possible due to the fact that the `AbstractBeanDefinition.isLazyInit()` method uses a primitive boolean so there is no difference between `@Lazy(false)` and a missing annotation.  One [suggestion made](https://github.com/spring-projects/spring-boot/issues/16184#issuecomment-473235274) is to offer a `getLazyInit` method that returns `Boolean.TRUE`, `Boolean.FALSE` or `null`.  Alternatively, we could also consider a `LazyMode` enum that provides `ENABLED`, `DISABLED` or `DEFAULT` as values.","closed","type: enhancement,","philwebb","2019-03-27T16:43:33Z","2019-04-02T13:03:21Z"
"","22687","Infer null-safety from type variables in Kotlin extensions when possible","As discussed in #22682 for specific `JdbcOperations` Kotlin extensions case, we could make null-safety more accurate by inferring null-safety from type variable in order to leverage the null-safety declared by the user instead of hardcoding the nullable nature of the return value, which forces for example Kotlin developers to use `!!` systematically and is not consistent with Java original signature.   `PropertyResolver`, `JdbcOperations` and `RestOperations` Kotlin extensions should be modified accordingly.  Based on my tests, it seems Java type inference is not clever enough to infer null-safety from type variable level `@Nullable` annotation so we will have to wait #20496 to apply that as well to Java methods.","closed","type: enhancement,","sdeleuze","2019-03-26T14:00:10Z","2021-03-02T16:22:26Z"
"","22402","Remove SqlXmlObjectMappingHandler","As discussed in #11647, `SqlXmlObjectMappingHandler` should be removed from Spring Framework 5.2.","closed","type: task,","sdeleuze","2019-02-11T13:19:53Z","2019-02-11T13:36:19Z"
"","22697","Add Kotlin router DSL and extensions for WebMvc.fn","As a follow-up of #22540, a Kotlin `router { }` DSL similar to the WebFlux one should be provided as well as similar Kotlin extensions.","closed","in: web,","sdeleuze","2019-03-28T09:36:23Z","2019-04-04T10:17:55Z"
"","22580","Add public getDeclaredMethods method to ReflectionUtils","Although we can't directly expose the raw array of declared methods that we cache, there is still some benefit in having a public method that exposes a cloned copy. Specifically allows us to save security checks and it reduces the number of `Method` instances created. It's also often faster than calling `doWithLocalMethods` and needing to create a callback.","closed","type: enhancement,","philwebb","2019-03-13T04:03:22Z","2019-03-23T18:39:43Z"
"","22725","SimpleJdbcCall calls databaseMetaData.getProcedures with procedure name, not with pattern","All versions including master. As far as I could see, `SimpleJdbcCall` calls `java.sql.databaseMetaData.getProcedures` with just procedure and schema names, not with patterns for them to match. This results in problems with procedures having underscores in their names:  ```             // create some functions             JdbcTemplate jt = new JdbcTemplate(dataSource);             for (String procName: ImmutableList.of(""just_a_procedure_name_with_underscores"", ""just_a_procedure_name_with2underscores"")){                 jt.execute(""create or replace function "" + procName + ""() returns int as $$ select 1; $$ language sql"");             }              // call one of them             jt.execute("""");             SimpleJdbcCall sjc = new SimpleJdbcCall(jt);             sjc.withProcedureName(""just_a_procedure_name_with_underscores"").execute(); ```  ``` org.springframework.dao.InvalidDataAccessApiUsageException: Unable to determine the correct call signature - multiple procedures/functions/signatures for just_a_procedure_name_with_underscores found [null.public.just_a_procedure_name_with2underscores, null.public.just_a_procedure_name_with_underscores] ``` Passing underscores backslash-escaped to `withProcedure` doesn't help either: the correct function gets found but not called as its name is different from the pattern to find it.","open","in: data,","bashtanov","2019-04-02T12:34:19Z","2022-01-21T15:48:21Z"
"","22298","SynchronossFilePart.transferTo should should get inputStream from content instead of FileStreamStorage.getInputStream.","After https://github.com/spring-projects/spring-framework/issues/21464, I'm working file upload with spring-webflux and spring-web 5.1.4.  I found that default implementation of FilePart is SynchronossFilePart and SynchronossFilePart implemented `transfer(Path dest)`.  I think `Mono transferTo(Path dest)` method is supposed to write data into the given destinated path from content of part(FilePart).  However, implemented transferTo(Path dest) is trying read input via getStorage().getInputStream() which is using FileStreamStorage with different path provided by `DefaultPartBodyStreamStorageFactory.getTempFile`.  So, `getStorage().getInputStream()` is throwing IllegalArguementException because temporary file created by `DefaultPartBodyStreamStorageFactory.getTempFile` doesn't actually exist.  I propose that `Mono transferTo(Path dest)` should read input data from content of FilePart instead of nonexistent temporary created file.    FYI.  ![image](https://user-images.githubusercontent.com/14271094/51602674-ee71ff00-1f4a-11e9-8345-0570f7cc5584.png)  ![image](https://user-images.githubusercontent.com/14271094/51602758-2711d880-1f4b-11e9-8df5-93706a6f6876.png)  ![image](https://user-images.githubusercontent.com/14271094/51602810-427ce380-1f4b-11e9-9a6d-3f0f58054be9.png)","closed","status: invalid,","starrybleu","2019-01-23T11:13:07Z","2019-02-06T13:30:32Z"
"","22457","Expose registerBean(Class, Supplier) outside of GenericApplicationContext","Affects: `5.1.5.RELEASE`  We're trying to use the register bean facility using a `Supplier` but the current implementation is tied to `GenericApplicationContext`. Some of our contexts do not inherit from it which prevents us to reuse the feature.  Is there a plan to make that available higher in the stack? See https://github.com/spring-projects/spring-boot/issues/16011","closed","type: enhancement,","snicoll","2019-02-22T14:54:27Z","2019-04-02T13:03:19Z"
"","22496","CorsUtils#isCorsRequest should detect same origin requests with an Origin header","Affecting version: spring-web:5.1.3.RELEASE  Hello,  `org.springframework.web.cors.CorsUtils#isCorsRequest` only check whether the request header ""Origin"" is null. ```java public static boolean isCorsRequest(HttpServletRequest request) { 	return (request.getHeader(HttpHeaders.ORIGIN) != null); } ``` But Chrome/Edge always send the ""Origin"" header in AJAX request even when it is not CORS request ( the target URL is the same domain ).   It is better to check that whether  the ""Origin"" header is  the same as the request URL in addition.","closed","type: enhancement,","ArayChou","2019-03-01T03:50:40Z","2019-04-01T15:49:52Z"
"","22477","Provide support for publishing test execution life-cycle events","Adds new TestExecutionListener for publishing events to the test application context. These may be consumed by @EventListener annotated methods to react to the test life-cycle. The test execution listener isn't enabled by default.  Implements #18490","closed","type: enhancement,","maverick1601","2019-02-26T19:57:01Z","2019-03-01T14:28:48Z"
"","2010","SPR-17459 Catering for comma being part of the media/mime type as double quoted","Adding functionality to:   1. detect if double quoted comma provided 2. if not, then flow continues exactly as before (tokenization on commas) 3. if yes, then calculate the indexes of of commas ignoring the double quoted ones 4. tokenize on the above comma indexes and proceed as before","closed","","dimitrisli","2018-11-06T23:07:35Z","2018-11-15T12:25:10Z"
"","22393","Use the accepted profiles on the BeanDefinitionDsl","Add the ability for the Kotlin bean DSL to use the same profiles definitions as the annotation way.  With this change the profile function could manage `!`, `&` and `|` operator.","closed","type: enhancement,","tgirard12","2019-02-09T14:26:03Z","2019-07-01T08:17:54Z"
"","2068","Update WebSocketMessageBrokerStats.java","add missing [ in toString()","closed","","Niconal","2019-01-03T11:54:21Z","2019-01-04T01:27:18Z"
"","22327","Simplification in constructor of MvcUriComponentsBuilder.MethodArgumentBuilder","Accodring to JLS newly created array is populated with default values for array's type. In case of reference type it is `null` so manual population of array is pointeless in this case.","closed","type: task,","stsypanov","2019-01-31T13:32:29Z","2019-02-15T11:19:48Z"
"","22245","Adding the ability to blacklist the logging of certain headers in the","AbstractRequestLoggingFilter class in spring-web  Issue: #22244 [Issue Link](https://github.com/spring-projects/spring-framework/issues/22244)  > So issue SPR-14245 requested the ability to log all headers coming in with a request be added to AbstractRequestLoggingFilter.  >There are sometime headers that it would be beneficial not to log. Such as Authorization headers containing jwt tokens.  >It would be useful to be able to provide a blacklist of some headers which are then not appended to the log message builder.","closed","status: superseded,","OhDearMoshe","2019-01-12T11:49:39Z","2019-03-20T19:18:41Z"
"","22387","Simplify ConcurrentReferenceHashMap","Abstract class Entries can be interface which is collapsible to lambda.","closed","type: enhancement,","stsypanov","2019-02-08T09:38:27Z","2019-02-19T11:28:14Z"
"","22490","Move CI to Concourse","A number of teams have moved their builds to https://ci.spring.io/ and crafted/shared scripts to automate the release process. That part alone is interesting as it is vastly superior to what the Bamboo integration can do.  I suggest we harmonize here as well, moving our `master` branch to Concourse, potentially cherry-picking in the `5.1.x` branch depending on the outcome of that work.","closed","type: task,","snicoll","2019-02-28T08:33:05Z","2020-05-07T19:42:12Z"
"","22505","WebClient hangs indefinitely","A minimal example project reproducing this bug can be found here: https://github.com/andreisilviudragnea/reactor-webclient-netty-bug  The Spring `WebClient` sometimes hangs indefinitely because of a possible bug in the [`reactor-netty`](https://github.com/reactor/reactor-netty) and/or [`netty`](https://github.com/netty/netty) projects. The root of this bug is that the `channel.read()` call in [`FluxReceive.drainReceiver()`](https://github.com/reactor/reactor-netty/blob/master/src/main/java/reactor/netty/channel/FluxReceive.java#L237) is sometimes not issued enough times for the Netty channel to finish reading the message. This happens when `receiverFastpath == false`, which is the case when [`Jackson2JsonDecoder`](https://github.com/spring-projects/spring-framework/blob/master/spring-web/src/main/java/org/springframework/http/codec/json/Jackson2JsonDecoder.java) is used by Spring's `WebClient`. The `receiverFastpath == false` condition is a consequence of the Reactor [`flatMap`](https://github.com/reactor/reactor-core/blob/master/reactor-core/src/main/java/reactor/core/publisher/Flux.java#L4823) operator from [`Jackson2Tokenizer`](https://github.com/spring-projects/spring-framework/blob/master/spring-web/src/main/java/org/springframework/http/codec/json/Jackson2Tokenizer.java#L86), which requests at most `maxConcurrency` (with a default of `32`) elements from the upstream publisher.  This bug is very hard to reproduce because it happens when gzip encoding is used on a very small response. From what I understand, it happens because gzipping a very small response (like `[]`) expands the response size significantly and because the [`HttpContentDecompressor`](https://github.com/netty/netty/blob/4.1/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentDecompressor.java) issues the gzipped response before the corresponding CRC is received. The `channel.read()` signals get issued after the `HttpContentDecompressor` sends the message up the `ChannelPipeline`, but if the reads from the socket are ""too chunked"", there won't be another chance for the `HttpContentDecompressor` to emit a `LastHttpContent`.  I have attached an example `WebClient` and a simple TCP server to reproduce this bug. I know that the example seems contrived, but I tried to reproduce this bug in the most simple way possible that I could find. In our setup, the request which hangs is made against an `https` endpoint, so the Netty `SslHandler` also processes the response in the pipeline, before `HttpContentDecompressor`, which made the bug even harder to track and reproduce.  The Netty Nio event loop thread which processes the response gets stuck in the [`NioEventLoop`](https://github.com/netty/netty/blob/4.1/transport/src/main/java/io/netty/channel/nio/NioEventLoop.java#L423) indefinitely in this case, from what I have tested so far.  I do not know yet where the problem lies, but I believe that maybe if the `HttpContentDecompressor` would issue `channel.read()` operations until in consumes a whole gzip member, before sending the decompressed data up the pipeline, maybe the pipeline would not get stuck. However, I believe that this problem can still occur even in other circumstances where the reads from the socket return many small chunks.  ### Reactor Netty version 0.8.5.RELEASE ### JVM version (e.g. `java -version`) java version ""1.8.0_192"" Java(TM) SE Runtime Environment (build 1.8.0_192-b12) Java HotSpot(TM) 64-Bit Server VM (build 25.192-b12, mixed mode) ### OS version (e.g. `uname -a`) Darwin macbook-pro-5.eur.adobe.com 18.2.0 Darwin Kernel Version 18.2.0: Thu Dec 20 20:46:53 PST 2018; root:xnu-4903.241.1~1/RELEASE_X86_64 x86_64","closed","for: external-project,","andreisilviudragnea","2019-03-04T21:34:35Z","2019-03-09T14:29:33Z"
"","22728","Release cached item in ChannelSendOperator also in case of error from writeFunction","A follow-up fix for gh-22720.","closed","type: bug,","violetagg","2019-04-02T13:48:10Z","2019-04-02T16:13:54Z"
"","22591","Allow usage of BeanNameGenerator in ImportBeanDefinitionRegistrars","A `BeanNameGenerator` can be configured for usage in component scanning configuration classes. That support allows custom annotation based activation of functionality via annotations importing an `ImportBeanDefinitionRegistrar`. Its primary callback method unfortunately currently doesn't provide access to the `BeanNameGenerator` potentially provided so that a customization of that generator cannot be considered for components registered via the registrar.  It would be nice, if there was a way to consume the `BeanNameGenerator` to allow components being registered to follow the configured naming strategy.","closed","type: enhancement,","odrotbohm","2019-03-14T10:14:36Z","2019-04-03T11:10:04Z"
"","22605","JtaTransactionManager created with the JtaTransactionManagerFactoryBean is not ready to use","A _JtaTransactionManager_ created with the _JtaTransactionManagerFactoryBean_ (the only way to get the proper JTA-support when using a Java-configuration, introduced in [SPR-12197]) is not ready to use, because _JtaTransactionManager_ is an _InitializingBean_ and _InitializingBean.afterPropertiesSet()_ is basically not called by Spring on factory-made beans.  Workarounds exist (eg. calling _FactoryBean.getObject()_ on _JtaTransactionManagerFactoryBean_ directly and exposing the result (the _JtaTransactionManager_) to the application-context/bean-factory), but that was surely not intended so by the authors. A possible solution would be to make _JtaTransactionManagerFactoryBean_ an _InitializingBean_ and perform the initialization of the actual transaction-manager, when Spring calls _afterPropertiesSet()_ on the factory.","closed","type: enhancement,","bbodnar","2019-03-16T19:19:58Z","2019-04-10T13:33:09Z"
"","22453","SpringFactoriesLoader.instantiateFactory(…) should report offending class on error","`SpringFactoriesLoader.instantiateFactory(…)` reports the name of the interface that implementations are looked up for. However, it does not report the name of the actual implementation class whose failed creation is likely to have caused the exception.","closed","type: enhancement,","odrotbohm","2019-02-21T22:31:11Z","2019-03-06T21:29:51Z"
"","22423","Leverage RouterFunctions.Builder in RouterFunctionDsl","`RouterFunctionDsl` was created before `RouterFunctions.Builder`, now it makes sense to leverage it instead of manually aggregating the routes for better consistency and code reuse.  Be aware of a small change of behavior: empty `router { }` now triggers an `IllegalStateException`.","closed","type: task,","sdeleuze","2019-02-17T16:08:03Z","2019-02-17T16:24:23Z"
"","22583","Migrate InitDestroyAnnotationBeanPostProcessor to MergedAnnotations","`InitDestroyAnnotationBeanPostProcessor` would benefit from using the new `MergedAnnotations` API directly.","closed","in: core,","philwebb","2019-03-13T04:56:10Z","2019-03-27T11:26:37Z"
"","22742","Avoid expensive assertions in HttpRange","`HttpRange` is used in hot web request invocation paths and should therefore consistently not have any expensive assertions, neither with argument-capturing `Supplier` callbacks nor with direct String concatenation (as it still does in the 4.3.x line). An `if` check with manual exception throwing is the most efficient way to implement such checks, as used in other parts of `HttpRange` already.","closed","type: enhancement,","jhoeller","2019-04-05T10:43:14Z","2019-04-05T12:03:14Z"
"","22584","Migrate DefaultListableBeanFactory to MergedAnnotations","`DefaultListableBeanFactory` would benefit from using the new `MergedAnnotations` API directly.","closed","in: core,","philwebb","2019-03-13T04:56:15Z","2019-03-23T18:40:56Z"
"","22458","Consider consolidating WebMVC and WebFlux  CorsRegistry and CorsRegistration into Spring Web","`CorsRegistry` and `CorsRegistration` exist in both Spring WebMVC and WebFlux but look quite similar. None of the variants actually depend on anything stack specific and thus could live alongside the rest of the CORS code in the web module.  The code residing in stack specific modules causes issues in Spring Data REST, as (the WebMVC) `CorsRegistry` is referenced in its core `RepositoryRestConfiguration` that lives in a package that currently doesn't have a dependency on MVC and I'd prefer it to stay that way.  What's the reason these two very similar (if not identical) flavors of those classes exist?","closed","status: declined,","odrotbohm","2019-02-22T17:29:30Z","2019-05-08T18:39:58Z"
"","22585","Migrate CommonAnnotationBeanPostProcessor to MergedAnnotations","`CommonAnnotationBeanPostProcessor` would benefit from using the new `MergedAnnotations` API directly.","closed","in: core,","philwebb","2019-03-13T04:56:20Z","2019-03-27T11:26:14Z"
"","22442","Use dedicated exception type in cache bootstrap failure","`CacheAspectSupport` has two throw clause with `IllegalStateException` that represents a user-facing configuration problem. It would be nice to adapt them so that we provide additional context and information.  I wonder if re-throwing `NoUniqueBeanDefinitionException`  and `NoSuchBeanDefinitionException`  with extra semantic would be an option.  The plan is to add a `FailureAnalyzer` without having to write too much code since these low-level exceptions are already handled.  See https://github.com/spring-projects/spring-boot/issues/13348 for more context.","open","in: core,","snicoll","2019-02-20T13:11:17Z","2021-11-10T12:35:32Z"
"","22531","Revisit BeanUtils.instantiateClass to work consistently with Kotlin and Java classes","`BeanUtils.instantiateClass` is an interesting way to create a class as it takes care of kotlin features behind the scenes for you. There is a slightly mismatch with Java though.  If a parameter is not available for a primitive type, we need to specify the default value for the primitive type (i.e. `0` for `int` and `false` for `boolean`). With Kotlin, you have to pass `null` as the parameter may have a default value that we shouldn't be overriding.   Consider the following example:  ```java class JavaExample {    JavaExample(int counter, boolean flag, String value) { ... } } ```  ```kotlin class KotlinExample(val counter : Int = 0, val flag: Boolean = false, val value : String?) { ... } ```  Let's assume we have a value for the `value` parameter and no information for the `counter` or `flag`.   Java requires us to provide `[0, false, ""my value""]` Kotlin requires us to provide `[null, ,null, ""my value""]`  An improvement would be to provide only the latter and let the internal implementation translates `null` to the proper default value if the parameter is primitive.  This will benefit https://github.com/spring-projects/spring-boot/issues/8762 where we're currently computing the array differently depending on the fact the target type is kotlin or not.","closed","type: enhancement,","snicoll","2019-03-06T14:21:13Z","2019-03-11T14:41:39Z"
"","22582","Migrate AutowiredAnnotationBeanPostProcessor to MergedAnnotations","`AutowiredAnnotationBeanPostProcessor` would benefit from using the new `MergedAnnotations` API directly.","closed","in: core,","philwebb","2019-03-13T04:56:04Z","2019-03-23T18:40:21Z"
"","22581","Migrate AnnotationAwareOrderComparator to MergedAnnotations","`AnnotationAwareOrderComparator` would benefit from using the new `MergedAnnotations` API directly.","closed","in: core,","philwebb","2019-03-13T04:54:10Z","2019-03-23T18:40:03Z"
"","22800","Optimize writing with Mono Publisher","`AbstractServerResponse` is currently masking the response body type information with the custom write barrier from `ChannelSendOperator`. In fact if the body is a Mono, we shouldn't require the barrier at all.  If we preserve the Mono information, the reactor netty response adapter can then preserve it too and call the underlying reactor-netty `send(Publisher)` with a Mono which should provide room for further optimization at that level.  Same thing on the client request side, where `ReactorClientRequest#writeWith` can be optimized to preserve the mono too.  Suggestions are implemented in : https://github.com/spring-projects/spring-framework/tree/optimize-mono-bodies","closed","type: enhancement,","smaldini","2019-04-15T19:36:52Z","2019-04-17T01:10:27Z"
"","22551","Annotation-based filters for component scanning find meta-annotations as well","```xml        ```  Why can't the `DispatcherServlet` load the `@Controller` class in Spring MVC config according to the above configuration?","closed","for: stackoverflow,","kingrockw","2019-03-09T14:33:56Z","2019-03-09T16:04:46Z"
"","22299","DRY: use existing method Type::getInternalName in Type::appendDescriptor","```java String name = currentClass.getName(); int nameLength = name.length(); for (int i = 0; i < nameLength; ++i) {   char car = name.charAt(i);   stringBuilder.append(car == '.' ? '/' : car); } ``` this code appends the name of `currentClass` having all dots replaced with `'/'`. However the same class already contains method doing exactly the same ```java public static String getInternalName(final Class clazz) {   return clazz.getName().replace('.', '/'); } ``` This one is not only more readable and likely to be faster as it yields the whole String at once instead of appending char by char inflating original StringBuilder.","closed","","stsypanov","2019-01-23T13:33:36Z","2019-01-24T16:58:16Z"
"","22321","5.14 Mapped  mapping  log","```java package org.springframework.web.reactive.result.method  class AbstractHandlerMethodMapping  public void register(T mapping, Object handler, Method method) { 	this.readWriteLock.writeLock().lock(); 	try { 		HandlerMethod handlerMethod = createHandlerMethod(handler, method); 		assertUniqueMethodMapping(handlerMethod, mapping);  		this.mappingLookup.put(mapping, handlerMethod);  		CorsConfiguration corsConfig = initCorsConfiguration(handler, method, mapping); 		if (corsConfig != null) { 			this.corsLookup.put(handlerMethod, corsConfig); 		}  		this.registry.put(mapping, new MappingRegistration<>(mapping, handlerMethod)); 	} 	finally { 		this.readWriteLock.writeLock().unlock(); 	} } ```   why？delect mapped log  ```java     if (logger.isInfoEnabled()) {                     logger.info(""Mapped \"""" + mapping + ""\"" onto "" + handlerMethod); ```","closed","status: invalid,","ZHANGYUABC","2019-01-30T06:37:39Z","2019-01-30T16:06:38Z"
"","22557","AbstractAdvisingBeanPostProcessor add advisor does not consider aspectJ advisor order","```java // in postProcessAfterInitialization function: 	if (bean instanceof Advised) { 			Advised advised = (Advised) bean; 			if (!advised.isFrozen() && isEligible(AopUtils.getTargetClass(bean))) { 				// Add our local Advisor to the existing proxy's Advisor chain... 				if (this.beforeExistingAdvisors) { 					advised.addAdvisor(0, this.advisor); 				} 				else { 					advised.addAdvisor(this.advisor); 				} 				return bean; 			} 		} ``` this piece of code does not consider advisor order value. change code to:  ```java       if (bean instanceof Advised) {             Advised advised = (Advised)bean;             if (!advised.isFrozen() && isEligible(AopUtils.getTargetClass(bean))) {                 // Add our local Advisor to the existing proxy's Advisor chain...                 //re-order advisors according to their order value                  //if (this.beforeExistingAdvisors) {                 //    advised.addAdvisor(0, this.advisor);                 //} else {                 //    advised.addAdvisor(this.advisor);                 //}                 List advisorList = Lists.newArrayList(advised.getAdvisors());                 advisorList.add(this.advisor);                 List  orderedAdvisorList = sortAdvisors(advisorList);                 int rightPos = orderedAdvisorList.indexOf(this.advisor);                 advised.addAdvisor(rightPos, this.advisor);                 return bean;             }         } ``` solved my problem. ---","closed","status: invalid,","laohou","2019-03-11T02:19:08Z","2019-03-11T13:50:31Z"
"","22479","@PathVariable causes other annotations to fail","```java     @GetMapping(value = ""/info/{userid}"")     public Result info(@PathVariable(""userid"") @Min(value = 5,message = ""测试"") Long userid) {         // ...         return new Result().success();     } ```  Example：`@Min`  from `javax.validation`，`@PathVariable` causes this annotation to fail","closed","in: web,","ch-magicduck","2019-02-27T06:50:52Z","2019-03-19T14:20:25Z"
"","22276","ignoreResourceNotFound=true in @PropertySource doesn't work with PropertySourceFactory which uses YamlPropertySourceLoader","```        org.springframework       spring-beans       5.1.3.RELEASE           org.springframework     spring-context     5.1.3.RELEASE       org.springframework.boot     spring-boot     2.1.1.RELEASE  ``` For load properties from .yaml I use `YamlPropertySourceFactory` Config Example ```kotlin @PropertySource(         value = [""file:\${user.dir}/1/rabbit.config.yml"",""file:\${user.dir}/2/rabbit.config.yml""],         factory = YamlPropertySourceFactory::class,         ignoreResourceNotFound = true) ``` ```kotlin class YamlPropertySourceFactory : PropertySourceFactory {     override fun createPropertySource(name: String?, resource: EncodedResource): PropertySource<*> {         return if (name != null)             YamlPropertySourceLoader().load(name, resource.resource).first()         else             YamlPropertySourceLoader().load(getNameForResource(resource.resource), resource.resource).first()     } ``` `YamlPropertySourceLoader` from spring-boot-2.1.1.release leads to [process function](https://github.com/spring-projects/spring-framework/blob/master/spring-beans/src/main/java/org/springframework/beans/factory/config/YamlProcessor.java#L153) which throw [IllegalStateException](https://github.com/spring-projects/spring-framework/blob/master/spring-beans/src/main/java/org/springframework/beans/factory/config/YamlProcessor.java#L187) (in my case because FileNotFound ) but [catch](https://github.com/spring-projects/spring-framework/blob/master/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java#L454) doesn't catch such type of exception and  [ignoreResourceNotFound](https://github.com/spring-projects/spring-framework/blob/master/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java#L456) is unreachable.  Here are two options: A - add IllegalStateException to [catch block](https://github.com/spring-projects/spring-framework/blob/master/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java#L454) B - change type of exception from [IllegalStateException](https://github.com/spring-projects/spring-framework/blob/master/spring-beans/src/main/java/org/springframework/beans/factory/config/YamlProcessor.java#L187) to IllegalArgumentException. I prefer option A","open","in: core,","crazyk2","2019-01-17T17:27:29Z","2022-02-07T22:04:18Z"
"","22553","Fix a typo in @NonNullFields (Obvious Fix)","`@NonNullFields` had redundant `@see NonNullFields` instead of `@see NonNullApi` in its JavaDoc.","closed","type: documentation,","tlinkowski","2019-03-09T15:36:20Z","2019-03-09T15:51:42Z"
"","2011","Fix typo","`:` instead of `_`","closed","","bactoria","2018-11-07T06:43:08Z","2018-11-07T06:49:21Z"
"","2005","SPR-17456 ApplicationListenerMethodAdapter can't be removed after targetBean destroy","[SPR-17456](https://jira.spring.io/projects/SPR/issues/SPR-17456?filter=allopenissues) ApplicationListenerMethodAdapter can't be removed after targetBean destroy [Demo](https://github.com/Pramy/spring-listener-bug)","closed","","Pramy","2018-11-02T08:37:32Z","2018-11-02T12:01:59Z"
"","2006","SPR-17456 ApplicationListenerMethodAdapter can't be removed after targetBean destroy","[SPR-17456](https://jira.spring.io/projects/SPR/issues/SPR-17456?filter=allopenissues) [Demo](https://github.com/Pramy/spring-listener-bug)","open","in: core,","Pramy","2018-11-02T09:32:38Z","2021-11-24T14:47:53Z"
"","1988","SPR-17364 - Give timeout result supplier in DeferredResult","[SPR-17364](https://jira.spring.io/browse/SPR-17364)  ``` value:          A           | B                             | Time line: -----+-----------+------------------------>                 t1          t2 ```  The value at t1 time is A, and t2 time is B. If t2 time is timeout time, I want return value of t2. like this  ``` new DeferredResult(2000, () -> valueService.get(now)); ```","closed","","chenlingmin","2018-10-11T06:03:09Z","2018-10-12T01:01:15Z"
"","22358","EL1072E when evaluating compiled comparison expression","[NullComparisonTestBean.java.txt](https://github.com/spring-projects/spring-framework/files/2836105/NullComparisonTestBean.java.txt)  **Affects:** 4.3.16 When evaluating an expresion involving a numeric comparison with a boxed integer, it fails when using the bytecode compiled expression.  Very similar to #SPR-16489. Can be reproduced using the attached test case.  The problem, apparently, resides in method `Operator.generateComparisonCode()`. Its generated code does append bytecodes for unboxing values when necessary, but doesn't take into account a potential NPE. In interpreted mode, null check is made in method `StandardTypeComparator.compare()`.","closed","in: core,","jdomigon","2019-02-06T11:26:12Z","2019-05-03T12:37:00Z"
"","22345","Migrate Kotlin Mockito tests to Mockk","[Mockk](https://mockk.io) is vastly superior to Kotlin Mockito integration + it will allow better consistency when integrating Coroutines tests from Spring Fu as part of #19975.","closed","type: task,","sdeleuze","2019-02-05T08:26:46Z","2019-02-05T14:50:26Z"
"","22313","JavaConfig bean resolution fails with generics + Kotlin declaration-site variance","[Declaration-site variance](https://kotlinlang.org/docs/reference/generics.html#declaration-site-variance) used in the very common [`kotlin.Pair`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-pair/index.html) class seems to impact bean resolution and currently prevents bean resolution to work as expected by the end user.  Based on an [original report on Twitter](https://twitter.com/smallufo/status/1088719782126317568), I have created a more focused [repro project](https://github.com/sdeleuze/javaconfig-declaration-site-variance/).  Following test works with `class Tuple` but fails with `class Tuple`, which is pretty hard to diagnose when the user is using `kotlin.Pair` which is provided in Kotlin standard library.  ```kotlin @RunWith(SpringRunner::class) @ContextConfiguration(classes = [Config::class]) class TypeProjectionTest {    @Inject   private lateinit var ctx: Container>    @Test   fun testContext() {   }  }  // Variant 1: works when not using declaration-site variance //class Tuple  // Variant 2: Fails with using declaration-site variance class Tuple  private interface Container private class ContainerTuple : Container>  @Configuration private open class Config {    @Bean   open fun containerPair() : ContainerTuple {     return ContainerTuple()   }  } ```  @jhoeller Do you think there is something to refine in our bean resolution algorithm to support this kind of Kotlin declaration-site variance?","open","in: kotlin,","sdeleuze","2019-01-28T13:14:54Z","2022-01-19T11:01:35Z"
"","22260","Add tests for SpringBeanContainer (Hibernate ORM integration) and fix the behavior when requesting named beans","@jhoeller Hi! I think you're the one to ping regarding this part of the code? We've talked previously in #21548.  This PR:  * Adds more extensive tests for `SpringBeanContainer` * Fixes a bug where `SpringBeanContainer` would forget to autowire bean properties when a bean is requested by name (`org.springframework.orm.jpa.hibernate.HibernateNativeEntityManagerFactorySpringBeanContainerIntegrationTests#testCanRetrieveBeanByNameWithJpaCompliantOptions` was failing) * Fixes a bug where `SpringBeanContainer` would simply ignore the name when a bean is requested by name (the tests `org.springframework.orm.jpa.hibernate.HibernateNativeEntityManagerFactorySpringBeanContainerIntegrationTests#testCanRetrieveFallbackBeanByName*` were failing). If it was only about internal Spring behavior, it would be fine, but it also affected how the fallback producer was used. Essentially, whenever a bean name didn't match anything in Spring, `SpringBeanContainer` would first try to ignore the name, and if that failed it would call `org.hibernate.resource.beans.spi.BeanInstanceProducer#produceBeanInstance(java.lang.Class)`, not passing the name to the fallback bean producer.  Note that the fixes should not affect current setups, because Hibernate ORM currently never requests named beans,. The concept of named beans in ORM SPIs was added with future changes in mind, and is currently being leveraged in Hibernate Search 6 (still in Alpha).","closed","type: bug,","yrodiere","2019-01-15T11:34:39Z","2019-02-05T14:39:47Z"
"","22576","Jackson2ObjectMapperBuilder's modulesToInstall function does not eventually override the default configuration","**Spring Boot version: 2.1.2.RELEASE**  The Jackson2ObjectMapperBuilder's modulesToInstall  documentation says   >  	 *Specify one or more modules to be registered with the {@link ObjectMapper}. 	 * Modules specified here will be registered after 	 * Spring's autodetection of JSR-310 and Joda-Time, or Jackson's 	 * finding of modules (see {@link #findModulesViaServiceLoader}), 	 * allowing to eventually override their configuration.  But when we have this config:   ```     @Bean     public ObjectMapper restApiObjectMapper(final Jackson2ObjectMapperBuilder builder,                                             final LenientOffsetDateTimeDeserializer offsetDateTimeDeserializer) {         final JavaTimeModule javaTimeModule = new JavaTimeModule();         javaTimeModule.addDeserializer(OffsetDateTime.class, offsetDateTimeDeserializer);          builder.modulesToInstall(javaTimeModule);         builder.failOnUnknownProperties(false);         builder.featuresToDisable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS);         return builder.build();     } ```   It is expect that the custom DateTimeDeserializer will get picked up. But still the default one's are used and leading to json parse errors.","closed","type: bug,","elue","2019-03-11T11:47:21Z","2019-03-21T10:42:58Z"
"","22713","Kotlin + JDK 12: Illegal reflective access by org.springframework.util.ReflectionUtils to java.lang.Enum","**Affects:** Spring Framework 5.1.5 **Language used**: Kotlin **Other Dependencies**: Web, Neo4j The error can be reproduced using the following code: ```kotlin import org.neo4j.ogm.annotation.NodeEntity  enum class Rank {     ACE, TWO, THREE, FOUR, FIVE, SIC, SEVEN, EIGHT, NINE, TEN }  enum class Suit {     SPADES, CLUBS, DIAMONDS, HEARTS }  @NodeEntity data class Card(val rank: Rank = Rank.ACE, val suit: Suit = Suit.SPADES) ``` The error message (with --illegal-access=debug) is as follows: ``` WARNING: Illegal reflective access by org.springframework.util.ReflectionUtils (file:/home/khokho/.m2/repository/org/springframework/spring-core/5.1.5.RELEASE/spring-core-5.1.5.RELEASE.jar) to field java.lang.Enum.name 	at org.springframework.util.ReflectionUtils.makeAccessible(ReflectionUtils.java:483) 	at org.springframework.data.mapping.context.AbstractMappingContext$PersistentPropertyCreator.doWith(AbstractMappingContext.java:509) 	at org.springframework.util.ReflectionUtils.doWithFields(ReflectionUtils.java:756) 	at org.springframework.data.mapping.context.AbstractMappingContext.addPersistentEntity(AbstractMappingContext.java:383) 	at org.springframework.data.mapping.context.AbstractMappingContext.addPersistentEntity(AbstractMappingContext.java:332) 	at org.springframework.data.neo4j.mapping.Neo4jMappingContext.lambda$new$1(Neo4jMappingContext.java:65) 	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) 	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) 	at java.base/java.util.HashMap$ValueSpliterator.forEachRemaining(HashMap.java:1672) 	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) 	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) 	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) 	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) 	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) 	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) 	at org.springframework.data.neo4j.mapping.Neo4jMappingContext.(Neo4jMappingContext.java:65) 	at org.springframework.data.neo4j.repository.config.Neo4jMappingContextFactoryBean.createInstance(Neo4jMappingContextFactoryBean.java:93) 	at org.springframework.data.neo4j.repository.config.Neo4jMappingContextFactoryBean.createInstance(Neo4jMappingContextFactoryBean.java:35) 	at org.springframework.beans.factory.config.AbstractFactoryBean.afterPropertiesSet(AbstractFactoryBean.java:142) 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1821) 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1758) 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593) 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) 	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) 	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) 	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) 	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) 	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:830) 	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877) 	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549) 	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142) 	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775) WARNING: Illegal reflective access by org.springframework.util.ReflectionUtils (file:/home/khokho/.m2/repository/org/springframework/spring-core/5.1.5.RELEASE/spring-core-5.1.5.RELEASE.jar) to field java.lang.Enum.ordinal 	at org.springframework.util.ReflectionUtils.makeAccessible(ReflectionUtils.java:483) 	at org.springframework.data.mapping.context.AbstractMappingContext$PersistentPropertyCreator.doWith(AbstractMappingContext.java:509) 	at org.springframework.util.ReflectionUtils.doWithFields(ReflectionUtils.java:756) 	at org.springframework.data.mapping.context.AbstractMappingContext.addPersistentEntity(AbstractMappingContext.java:383) 	at org.springframework.data.mapping.context.AbstractMappingContext.addPersistentEntity(AbstractMappingContext.java:332) 	at org.springframework.data.neo4j.mapping.Neo4jMappingContext.lambda$new$1(Neo4jMappingContext.java:65) 	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) 	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) 	at java.base/java.util.HashMap$ValueSpliterator.forEachRemaining(HashMap.java:1672) 	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) 	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) 	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) 	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) 	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) 	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) 	at org.springframework.data.neo4j.mapping.Neo4jMappingContext.(Neo4jMappingContext.java:65) 	at org.springframework.data.neo4j.repository.config.Neo4jMappingContextFactoryBean.createInstance(Neo4jMappingContextFactoryBean.java:93) 	at org.springframework.data.neo4j.repository.config.Neo4jMappingContextFactoryBean.createInstance(Neo4jMappingContextFactoryBean.java:35) 	at org.springframework.beans.factory.config.AbstractFactoryBean.afterPropertiesSet(AbstractFactoryBean.java:142) 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1821) 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1758) 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593) 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) 	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) 	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) 	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) 	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) 	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:830) 	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877) 	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549) 	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142) 	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775) ``` I don't really know if the bug is from Spring Framework's ReflectionUtils or Spring Data Neo4j  ---","closed","for: external-project,","Ih8Cocoa","2019-03-31T09:40:24Z","2020-05-22T14:11:52Z"
"","22675","@Primary not working for FactoryBeans","**Affects:** Spring 5.1.5.RELEASE  ---  Defining multiple `FactoryBean`s, and then marking one of them with `@Primary` doesn't work as expected. There is related [stack overflow issue](https://stackoverflow.com/questions/46317961/primary-on-factory-beans) for that, but shouldn't it be considered as a bug?  One could say that treating `FactoryBean` as a bean itself is some kind of overkill, but in my opinion, there are justified use cases. For example, take look at **artembilan** argumentation in [this](https://github.com/spring-projects/spring-integration/pull/2710#issuecomment-456834766) similar issue, but related to _spring-integration_.","closed","status: superseded,","pnescior","2019-03-26T08:56:57Z","2019-04-02T13:05:40Z"
"","22310","Allow to override the strategy used in ReflectUtils.defineClass","**Affects:** Spring 5.1  Since #20414, Spring uses `MethodHandler.Lookup.defineClass` to define proxy classes. However, this method forces the proxy to be defined in the same classloader as the initial class, and this classloader should have a visibility for all the classes used by the proxy (spring-aop, cglib & co).  This is not necessary the case in a restricted environment, or in osgi applications.  In my case, I used to build a custom classloader which provide visibility for such proxies - but I can't use this classloader anymore, although I have control of the defineClass on my classloader.  I'd like t have a way to override the spring-cglib ReflectUtils.defineClass() strategy.","closed","type: enhancement,","j3rem1e","2019-01-26T10:50:34Z","2019-03-27T18:53:40Z"
"","22450","SQL parser fails on single quotes and raises Named parameter not bound","**Affects:** \Spring Boot 2.1.3  ---   I'm getting an error with some JPQL queries which include the `'%'` characters (single quotes included). The problem seems to be, that the parser believes the named parameter is quoted out, even though it is not. The problem is somehow related with the number of characters, since when I change variable names or number of parameters the error comes and goes.   `org.springframework.dao.InvalidDataAccessResourceUsageException: Named parameter not bound : __$synthetic$__19; nested exception is org.hibernate.QueryException: Named parameter not bound : __$synthetic$__19`  I've created an example project which demonstrates this error: https://github.com/kancsuki/spring-parser-error-example  _Note:_ I found that the following things could be related, but did not go any deeper. - `org.springframework.data.repository.query.SpelQueryContext.SpelExtractor#quotations` - `org.springframework.data.jpa.repository.query.StringQuery.ParameterBindingParser#parseParameterBindingsOfQueryIntoBindingsAndReturnCleanedQuery`","closed","for: external-project,","kancsuki","2019-02-21T10:51:08Z","2020-02-17T04:30:50Z"
"","22413","WebFlux with undertow throws exception when serving big static files.","**Affects:** \5.1.3, 5.0.*  ---  When serving big enough static resources (file), WebFlux + Undertow throws following exception: `java.io.IOException: UT000094: Blocking await method called from IO thread.`  It is caused by `Channels.transferBlocking` call in `org.springframework.http.server.reactive.UndertowServerHttpResponse` class:  	@Override 	public Mono writeWith(Path file, long position, long count) { 		return doCommit(() -> 				Mono.defer(() -> { 					try (FileChannel source = FileChannel.open(file, StandardOpenOption.READ)) { 						StreamSinkChannel destination = this.exchange.getResponseChannel(); 						Channels.transferBlocking(destination, source, position, count); 						return Mono.empty(); 					} 					catch (IOException ex) { 						return Mono.error(ex); 					} 				})); 	}   Moving this call to IO threads seems to work, but migt be sub-optimal (see: `.subscribeOn(Schedulers.elastic())` near end):   	@Override     public Mono writeWith(Path file, long position, long count) {         return doCommit(() ->                 Mono.defer(() -> {                     try (FileChannel source = FileChannel.open(file, StandardOpenOption.READ)) {                         StreamSinkChannel destination = this.exchange.getResponseChannel();                         Channels.transferBlocking(destination, source, position, count);                         return Mono.empty();                     }                     catch (IOException ex) {                         ex.printStackTrace();                         return Mono.error(ex);                     }                 }))                 // TO HANDLE BLOCKING!                 .subscribeOn(Schedulers.elastic())                 ;     }   Stack trace:  	2019-02-14 14:19:29.329 ERROR 44484 --- [   XNIO-1 I/O-1] io.undertow                              : UT005085: Connection io.undertow.server.protocol.http.HttpServerConnection@13871769 for exchange HttpServerExchange{ GET /test.mp4 request {Accept=[*/*], Accept-Language=[pl-pl], Accept-Encoding=[identity], User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_2) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.0.2 Safari/605.1.15], Range=[bytes=0-1], Connection=[keep-alive], X-Playback-Session-Id=[B6657529-5085-4A47-AD60-089BDEC59DD5], Cookie=[Idea-e386df9=4ce8f3fb-c39f-415a-8ff1-c19f2999954d; Idea-e386df8=603d089f-ad6a-4efd-8e7b-186238fff603; _ga=GA1.1.524791181.1511035090], Referer=[http://localhost:8080/test.mp4], Host=[localhost:8080]} response {Connection=[keep-alive], Last-Modified=[Wed, 13 Feb 2019 19:58:38 GMT], Content-Range=[bytes 0-1/121486134], Content-Length=[2], Content-Type=[video/mp4], Accept-Ranges=[bytes], Date=[Thu, 14 Feb 2019 13:19:29 GMT]}} was not closed cleanly, forcibly closing connection 	java.io.IOException: UT000094: Blocking await method called from IO thread. Blocking IO must be dispatched to a worker thread or deadlocks will result. 	at io.undertow.server.HttpServerExchange$WriteDispatchChannel.awaitWritable(HttpServerExchange.java:2035) 	at org.xnio.channels.Channels.transferBlocking(Channels.java:514) 	at org.springframework.http.server.reactive.UndertowServerHttpResponse.lambda$null$0(UndertowServerHttpResponse.java:131) 	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:44) 	at reactor.core.publisher.Mono.subscribe(Mono.java:3608) 	at reactor.core.publisher.FluxConcatIterable$ConcatIterableSubscriber.onComplete(FluxConcatIterable.java:146) 	at reactor.core.publisher.FluxConcatIterable.subscribe(FluxConcatIterable.java:60) 	at reactor.core.publisher.MonoIgnoreElements.subscribe(MonoIgnoreElements.java:37) 	at reactor.core.publisher.Mono.subscribe(Mono.java:3608) 	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:172) 	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:53) 	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150) 	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67) 	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1476) 	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:144) 	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76) 	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:422) 	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:212) 	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:139) 	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:63) 	at reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121) 	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40) 	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60) 	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44) 	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60) 	at reactor.core.publisher.Mono.subscribe(Mono.java:3608) 	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172) 	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56) 	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150) 	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67) 	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76) 	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:275) 	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:849) 	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:121) 	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2041) 	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:162) 	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1849) 	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1723) 	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90) 	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54) 	at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59) 	at reactor.core.publisher.Mono.subscribe(Mono.java:3608) 	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:442) 	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:212) 	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:139) 	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:63) 	at reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121) 	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40) 	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44) 	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60) 	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60) 	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52) 	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52) 	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52) 	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52) 	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44) 	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44) 	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61) 	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44) 	at reactor.core.publisher.Mono.subscribe(Mono.java:3608) 	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172) 	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56) 	at reactor.core.publisher.Mono.subscribe(Mono.java:3608) 	at org.springframework.http.server.reactive.UndertowHttpHandlerAdapter.handleRequest(UndertowHttpHandlerAdapter.java:87) 	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:360) 	at io.undertow.server.protocol.http.HttpReadListener.handleEventWithNoRunningRequest(HttpReadListener.java:255) 	at io.undertow.server.protocol.http.HttpReadListener.handleEvent(HttpReadListener.java:136) 	at io.undertow.server.protocol.http.HttpReadListener.handleEvent(HttpReadListener.java:59) 	at org.xnio.ChannelListeners.invokeChannelListener(ChannelListeners.java:92) 	at org.xnio.conduits.ReadReadyHandler$ChannelListenerHandler.readReady(ReadReadyHandler.java:66) 	at org.xnio.nio.NioSocketConduit.handleReady(NioSocketConduit.java:88) 	at org.xnio.nio.WorkerThread.run(WorkerThread.java:561)","closed","in: web,","lkolek","2019-02-14T13:32:39Z","2019-03-19T10:32:40Z"
"","22604","Spring should provide possibility to limit size of HTTP partial responses.","**Affects:** \5.*  --- As for now, spring web / reactive supports range requests (those containing Range header), returning full size of requested range. Some browsers (eg. Safari, Chrome) send first request (containing bytes=0-) just to check resource size. In this case, it is a waste of resources to try to return all that data - that transfer is interrupted one anyway.  Also, next requests (at least for eg. mp4 resources) will also be big anyway (for Chrome eg. 60M, Safari at start try to consume smaller chunks, like 60k, but after a while it try to get data to the end).  AFAIK it is completly OK according to standards to emit response with limited size. Browser will then issue next request, taking into account returned chunk.  It would be nice to have configuration options that allow two limits: - first one for ranges bytes=0-  (ideally) or just for ranges starting from 0, - second one for other ranges.","closed","type: enhancement,","lkolek","2019-03-15T20:02:56Z","2019-04-12T21:08:36Z"
"","22446","5.1.5 webflux get request body failed","**Affects:** \<5.1.5>  --- when I want to get a json form request body with the following method `request.body(BodyExtractors.toFlux(HashMap.class)).subscribe(log::info)` I get an empty flux when I use 5.0.12(Springboot 2.0.8), it works. so, what's wrong?","closed","for: stackoverflow,","doki23","2019-02-21T07:14:54Z","2019-02-21T12:02:58Z"
"","22760","build source failed","**Affects:** \<5.0.x>  --- when I run `gradle :spring-oxm:compileTestJava`   it occurred that  ``` FAILURE: Build failed with an exception.  * What went wrong: Circular dependency between the following tasks: :spring-beans:compileGroovy \--- :spring-beans:compileJava      \--- :spring-beans:compileKotlin           \--- :spring-beans:compileGroovy (*) ``` I tried to change kotlin compiler version but had no effect： ![image](https://user-images.githubusercontent.com/25578789/55702887-8d66ad00-5a0a-11e9-8a31-bf075438b5ff.png) ![image](https://user-images.githubusercontent.com/25578789/55702900-95bee800-5a0a-11e9-9388-028dd47fe9db.png)","closed","status: feedback-provided,","LiuWillow","2019-04-08T06:26:59Z","2019-04-13T14:59:31Z"
"","22722","STOMP command ignored by SimpleBrokerMessageHandler","**Affects:** \  ---  STOMP commands are ignored by the SimpleBrokerMessageHandler, while the expected behaviour is to process STOMP commands as CONNECT commands.  Changing the client to send CONNECT instead of STOMP fixs the problem temporarily.  Using Spring Boot 2.1.3. Using stomp and w_transport packages on the client (written in Dart).","closed","status: duplicate,","HugoSart","2019-04-01T17:19:04Z","2019-04-02T02:57:55Z"
"","22434","HandlerInterceptorAdapter should honor ordering","**Affects:** \  ---  Hi, I've found that this feature was introduced in in Spring 5.x. Would it be possible to backport this to Spring 4.x and also to Spring boot 1.5.x?  this is the fix that needs to be backported.  https://github.com/spring-projects/spring-framework/commit/782c595cf7f839d2d6bf4c6bfc0502fc8c2c4ae0  Thanks.","closed","type: enhancement,","fededonna","2019-02-19T18:18:25Z","2019-03-19T18:19:26Z"
"","22473","Misleading findCandidateAdvisors javadoc comment in AbstractAdvisorAutoProxyCreator","**Affects:** \  ---   javadoc of the class AbstractAdvisorAutoProxyCreator said: ""Subclasses must implement the abstract {@link #findCandidateAdvisors()} method to return a list of Advisors applying to any object.""  but in fact findCandidateAdvisors is not a abstract method","closed","type: task,","ZhangChaoWN","2019-02-26T09:33:37Z","2019-02-26T16:52:39Z"
"","22465","Transaction Interceptor invoked twice for each method call","**Affects:** \  ---   I add @Transactional on some methods, in the log I see that spring Transaction Interceptor invoked twice for each method call  by a debug tool, I found the service bean was proxied twice, transaction interceptor was invoke once in each proxy, for example, the original class name of service is FooService, there was a proxy class FooService$$***EnhancerBySpringCGLIB***4c8a0940@19210, I can see that proxy target is FooService, and there was another proxy class FooService$$***EnhancerBySpringCGLIBfa164332@13981, target is previous previous CGLIB proxy class FooService$$***EnhancerBySpringCGLIB***4c8a0940@19210.  I'm  not sure is this my configuration wrong or not, there are two behavior not expected: spring transaction should not enter transaction twice for single point cut of single method call and, spring AOP should not created multiple proxy class for single bean.","closed","status: invalid,","ZhangChaoWN","2019-02-25T09:41:57Z","2020-04-08T10:54:28Z"
"","22749","Spring Cloud Consul not closing connections and overwhelming Consul server","**Affects:** \  ---","closed","for: stackoverflow,","jacobomarquis","2019-04-05T14:43:52Z","2019-04-05T15:01:36Z"
"","22724","visited by the adorable from ZhuMaDian","**Affects:** \  ---","closed","status: invalid,","kingsmao","2019-04-02T06:34:03Z","2019-04-02T07:05:28Z"
"","22704","Cacheable","**Affects:** \  ---","closed","","bill-okara","2019-03-28T19:20:27Z","2019-03-28T19:20:38Z"
"","22688","Reporting error on class Log after importing into IntelliJ IDEA?Why","**Affects:** \  ---","closed","","gitot","2019-03-27T06:55:35Z","2019-03-27T06:58:39Z"
"","22536","Performace degration with Spring getBean method","**Affects:** \  ---","closed","","Srikalpana","2019-03-07T06:21:10Z","2021-01-08T13:09:28Z"
"","22323","hehe","**Affects:** \  ---","closed","status: invalid,","vxinv","2019-01-30T08:45:46Z","2019-02-05T11:47:42Z"
"","22300","cache.redis.key-prefix","**Affects:** \  ---","closed","","ly641921791","2019-01-23T15:02:42Z","2019-01-23T15:02:59Z"
"","22663","getDeclaredAnnotation can't find Nullable","**Affects:** 5.2.0.BUILD-SNAPSHOT  ---  After changes introduced in #22586, `AnnotationsScanner.getDeclaredAnnotation(source, annotationType)` method can't find `org.springframework.lang.Nullable` anymore because it gets filtered out by this filter: ``` static final AnnotationFilter PLAIN = packages(""java.lang"", 			""org.springframework.lang""); ``` from `org.springframework.core.annotation.AnnotationFilter`  Is that intentional? If so, what should be used instead?  Jus to clarify, we use `AnnotatedElementUtils.findMergedAnnotation`, but internally it relies on `AnnotationsScanner.getDeclaredAnnotation`","closed","type: regression,","dmitry-s","2019-03-25T20:20:02Z","2019-03-26T15:14:56Z"
"","22417","Declarative bean switching proxy","**Affects:** 5.1.x  ---  I'd like to define multiple implementations of an interface and expose them as singleton beans and I want to define boolean expressions on the implementing classes as spEL. When the client code calls the methods of the interface the expressions should be evaluated to select which of the implementing beans is to be called.   Something like this:  ```java @ProxiedService(expression = ""#{switch.switchValue == 'B2B'}"") public static class B2BServiceImpl implements ProxiedServiceInterface {   @Override   public String doCoolStuff() {     return ""Well you know ... "";   } } ``` I'd started an stackoverflow [question](https://stackoverflow.com/questions/54606841/how-to-select-spring-bean-to-call-at-runtime) on this but didn't really get answers that helped me.  So I tried to figure out myself how this could be implemented and ended up with this [small project](https://gitlab.com/thuri/service-provider-proxy) which basically uses  a `BeanFactoryPostProcessor` registering a new `AutowireCandiateResolver` that inherits from the `ContextAnnotationAutowireCandidateResolver` (which is used for implementing the `@Lazy` annotation which basically gave me the idea for this)  I would have implemented this directly into spring but wasn't sure if i found the right/all places to adjust or whether it's really a good idea to do this or if it would be better to just implement this as an extension and keep it outside of spring itself.   Of course an actual implemetation should make sure (if possible) that the implementing classes should only have one method to call or don't have a state. Because in that case calls of different methods on the interface may call the methods within to different objects.","open","in: core,","thuri","2019-02-14T20:24:27Z","2021-11-10T10:53:12Z"
"","22603","Locale inconsistently resolves to null for invalid input value","**Affects:** 5.1.5.RELEASE  ---  I am trying to receive a `Locale` into a required `@RequestParam`. The happy path parsing works great, but I am receiving `null` into my `@RequestMapping` when `Locale` parsing fails. Here's my currently-failing test (run against Spring Boot 2.1.3.RELEASE):  ```java @WebMvcTest public class LocaleDeserializationTest {      @Configuration     static class Config {          @RestController         static class LocaleController {              @GetMapping(""/request-param"")             public String requestParam(@RequestParam Locale locale) {                 return locale.toLanguageTag();             }         }     }      @Autowired     MockMvc mockMvc;      @Test     public void badLocaleRequestParam() throws Exception {         mockMvc.perform(get(""/request-param"").param(""locale"", ""thiswillbebadrequest""))                 .andExpect(status().isBadRequest());     } } ```  This in fact throws a `NullPointerException` because `locale` is null within the execution of the `requestParam()` method. I also tried marking the argument as `@NonNull` (the Spring variant) but that also still allowed `null` to come in for `Locale`.  A bit of investigation led me to the `StringToLocaleConverter`, and `StringUtils.parseLocale()` correctly returns null. I would expect that since my `@RequestParam` is a _required_ parameter, this would end up returning a 400 client response.  The same thing happens with `@PathVariable`, but I would expect that one would actually be a 404 not found.","closed","in: core,","phillipuniverse","2019-03-15T17:27:36Z","2019-06-25T08:42:50Z"
"","22445","spring-context-indexer: spring.components has a timestamp, makes builds not reproducible","**Affects:** 5.1.5  A very similar issue to https://github.com/spring-projects/spring-boot/issues/14494.  The _spring.components_ file contains a timestamp in the header comment, this leads to [non-reproducible builds](https://reproducible-builds.org).  A very similar workaround as well: ``` compileJava {     // https://github.com/spring-projects/spring-framework/issues/22445     doLast {         File f = new File(destinationDir, 'META-INF/spring.components')         f.text = f.filterLine { !it.startsWith('#') }     } } ```","closed","status: duplicate,","the4yeast","2019-02-21T05:57:40Z","2019-02-21T07:52:15Z"
"","22506","StringHttpMessageConverter will add all the default charsets even if Accept-Charset is set explicitly","**Affects:** 5.1.5  --- Hi, First, I would like to check if the current behavior of StringHttpMessageConverter is intentional. I found #15437 to be the same issue as I'm describing here, but its closed due to inactivity.  Current Behavior ============ StringHttpMessageConverter will add all the available charsets available to the jvm in the `Accept-Charset` header when used to call apis with `RestTemplate`. This has two problems 1) The outgoing request size can be huge 2) The external system may not recognize all the charsets and throw errors (the issue I'm facing)  If this is not the intended behavior please see the proposal below  Proposal ====== ```java protected void writeInternal(String str, HttpOutputMessage outputMessage) throws IOException {   if (this.writeAcceptCharset) {     // Also check if Accept-Charset is already in headers before setting it        <----     outputMessage.getHeaders().setAcceptCharset(getAcceptedCharsets());   }   ... } ```  **NB: At the moment I'm using the below workaround. If this is intentional, please let me know if there is a better way. If not I'd be glad to work on the above proposal** ```java RestTemplate restClient = new RestTemplate(); List> messageConverters = restClient.getMessageConverters(); messageConverters.forEach(     messageConverter -> {       if (messageConverter instanceof StringHttpMessageConverter) {         ((StringHttpMessageConverter) messageConverter).setWriteAcceptCharset(false);       }     } ); ```","closed","type: enhancement,","kzbt","2019-03-05T02:07:57Z","2019-05-08T13:58:56Z"
"","22444","MappingJackson2MessageConverter with Jackson Smile","**Affects:** 5.1.4.RELEASE  I configured a JmsTemplate with a custom MessageConverter that uses a Jackson ObjectMapper configured with Jackson SmileFactory to use a binary JSON.  However, the implementation of `MappingJackson2MessageConverter#mapToBytesMessage `writes the bytes using an OutputStreamWriter and results to this exception:   ``` java.lang.UnsupportedOperationException: Can not create generator for character-based (not byte-based) target 	at com.fasterxml.jackson.dataformat.smile.SmileFactory._nonByteTarget(SmileFactory.java:468) ~[jackson-dataformat-smile-2.9.8.jar:2.9.8] 	at com.fasterxml.jackson.dataformat.smile.SmileFactory._createGenerator(SmileFactory.java:438) ~[jackson-dataformat-smile-2.9.8.jar:2.9.8] 	at com.fasterxml.jackson.core.JsonFactory.createGenerator(JsonFactory.java:1174) ~[jackson-core-2.9.8.jar:2.9.8] 	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:966) ~[jackson-databind-2.9.8.jar:2.9.8] 	at org.springframework.jms.support.converter.MappingJackson2MessageConverter.mapToBytesMessage(MappingJackson2MessageConverter.java:297) ~[spring-jms-5.1.4.RELEASE.jar:5.1.4.RELEASE] ```  Similar issue with the `convertFromBytesMessage` implementation that converts the bytes to a String before using the ObjectMapper to read the value.  Hope this can be fixed to support smile data format.  ---","closed","type: enhancement,","spensonshih","2019-02-20T17:47:50Z","2019-02-25T16:59:20Z"
"","22388","ScriptUtils fails if the sequence '--' occurs within a multi-line comment and on the same line as '*/'","**Affects:** 5.1.4  **Bug Description**  I am using ResourceDatabasePopulator to populate a MySQL database using SQL scripts. These scripts contain multi-line comments of the form:  ``` /*-------------------------------------------- -- This is a multi-line comment block --------------------------------------------*/ ``` `ScriptUtils.executeSqlScript` then fails with the error: ``` Failed to parse SQL script from resource [Byte array resource [resource loaded from byte array]]: Missing block comment end delimiter: */ ```  **More Details**  What appears to be happening is that `ScriptUtils.readScript(LineNumberReader, String, String)` trims all single-line comments from the input script before passing it to `ScriptUtils.splitSqlScript()`. The last line of the comment, containing the block-comment end-delimiter, also gets removed because it assumes that this is a single-line comment. The line does start with the single-line comment prefix '--' after all.  Subsequently the trimmed version of the script is passed to and processed by `ScriptUtils.splitSqlScript(EncodedResource resource, String, String, String, String, String, List)` which finds a block-comment-open delimiter but doesn't find a corresponding block-comment-end delimiter. Which then causes the error listed above.  Effectively, it appears that code allows the block-comment end-delimiter to itself be commented-away by a single-line comment prefix. This is not the behavior we see in standard SQL which allows   I forked and fixed this in the following commits:  - [5488b2004](https://github.com/mmustaquim/spring-framework/commit/5488b2004cefe358eb0402b48a8b0957d253d39b) - Failing test that demonstrates this issue. - [a320f622bc](https://github.com/mmustaquim/spring-framework/commit/a320f622bc1b54a103a4b0f937cb36276fff4681) - The fix I ended up using.  ---","closed","status: superseded,","mmustaquim","2019-02-08T09:51:33Z","2020-06-29T12:25:13Z"
"","22608","spring-bean:5.1.3 compatibility with spring-webmvc-portlet:4.3.18 and Liferay 7.1","**Affects:** 5.1.3 I am encountering a weird issue with spring bean, trying to work with the libraries in the title. I am trying to migrate from spring 4.1.9 to 5.1.3 so this error is not in version 4.1.9  **Stacktrace:** ``` Caused by: org.springframework.beans.factory.xml.XmlBeanDefinitionStoreException: Line xx in XML document from PortletContext resource [/WEB-INF/context/xxx.xml] is invalid; nested exception is org.xml.sax.SAXParseException; lineNumber: xx; columnNumber: xxx; cvc-complex-type.2.4.c: The matching wildcard is strict, but no declaration can be found for element 'context:component-scan'.         at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:399)         at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:336)         at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:304)         at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:181)         at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:217)         at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:188)         at org.springframework.web.portlet.context.XmlPortletApplicationContext.loadBeanDefinitions(XmlPortletApplicationContext.java:125)         at org.springframework.web.portlet.context.XmlPortletApplicationContext.loadBeanDefinitions(XmlPortletApplicationContext.java:93)         at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:129)         at org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:541)         at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:452)         at org.springframework.web.portlet.FrameworkPortlet.createPortletApplicationContext(FrameworkPortlet.java:368)         at org.springframework.web.portlet.FrameworkPortlet.initPortletApplicationContext(FrameworkPortlet.java:297)         at org.springframework.web.portlet.FrameworkPortlet.initPortletBean(FrameworkPortlet.java:271)         at org.springframework.web.portlet.GenericPortletBean.init(GenericPortletBean.java:124)         at javax.portlet.GenericPortlet.init(GenericPortlet.java:143)         at com.liferay.portlet.internal.InvokerPortletImpl.init(InvokerPortletImpl.java:248)         at com.liferay.portal.monitoring.internal.portlet.MonitoringInvokerPortlet.init(MonitoringInvokerPortlet.java:154)         at com.liferay.portlet.internal.PortletInstanceFactoryImpl.init(PortletInstanceFactoryImpl.java:269)         at com.liferay.portlet.internal.PortletInstanceFactoryImpl.create(PortletInstanceFactoryImpl.java:170)         at com.liferay.portlet.internal.PortletInstanceFactoryImpl.create(PortletInstanceFactoryImpl.java:114)         at com.liferay.portal.kernel.portlet.PortletInstanceFactoryUtil.create(PortletInstanceFactoryUtil.java:40)         at com.liferay.portal.deploy.hot.PortletHotDeployListener.initPortletApp(PortletHotDeployListener.java:453)         at com.liferay.portal.deploy.hot.PortletHotDeployListener.doInvokeDeploy(PortletHotDeployListener.java:225)         at com.liferay.portal.deploy.hot.PortletHotDeployListener.invokeDeploy(PortletHotDeployListener.java:92)         ... 13 more ```  **xxx.xml**: ```                                                                                                                                                                          ``` ---","closed","status: waiting-for-feedback,","djacn","2019-03-18T11:10:49Z","2019-03-19T01:56:51Z"
"","22332","MongoWaitQueueFullException in Webflux + Reactive Mongo","**Affects:** 5.1.2.RELEASE  ---  The latest  [TechEmpower's benchmark](https://www.techempower.com/benchmarks/#section=test&runid=8ca46892-e46c-4088-9443-05722ad6f7fb&hw=ph&test=query&l=zik0vz-7&d=e6) shows a lot of errors for Webflux + Spring data mongo. I digged and found out that under load, we get a lot of `com.mongodb.MongoWaitQueueFullException: Too many threads are already waiting for a connection. Max number of threads (maxWaitQueueSize) of 500 has been exceeded. ` exceptions.  From our discussion on gitter, @mp911de thinks that ""WebFlux could have a notion of connection backpressure and should limit subscription rate/demand rate to provide a sense of protection for downstream components within the application"".  Code of the benchmark [here](https://github.com/TechEmpower/FrameworkBenchmarks/tree/master/frameworks/Java/spring-webflux)   Related issue : #20338","closed","type: enhancement,","cbornet","2019-02-01T16:08:31Z","2019-02-14T15:45:29Z"
"","22723","Acknowledge that HttpHeaders are case-insensitive","**Affects:** 5.1  Hello,  currently [`HttpHeaders`' documentation](https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/http/HttpHeaders.html) does not acknowledge that `HttpHeaders` behave in case-insensitive manner.  Per [RFC 7230](https://tools.ietf.org/html/rfc7230#section-3.2):  >  Each header field consists of a **case-insensitive** field name followed by a colon ("":""), optional leading whitespace, the field value, and optional trailing whitespace.  It may be confusing in the presence of publicly exposed [`HttpHeaders(MultiValueMap)`](https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/http/HttpHeaders.html#HttpHeaders-org.springframework.util.MultiValueMap-) constructor by [this](https://github.com/spring-projects/spring-framework/commit/ce7278aaf4f20348862267c2081c20dc5bd77128#diff-82531305a6405134645740523e37b36f) commit.  Do I understand right that [the constructor](https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/http/HttpHeaders.html#HttpHeaders-org.springframework.util.MultiValueMap-) is intended to be used by the framework itself only? @bclozel   ---  Here is a [question](https://stackoverflow.com/questions/52224422/httpheaders-getfirst-case-insensitivity/52225005#52225005) on StackOverflow asking whether the `HttpHeaders` are case-insensitive.  I [had answered](https://stackoverflow.com/revisions/52225005/1) the question relying on the fact that there had been only one publicly available [constructor](https://github.com/spring-projects/spring-framework/blob/5.0.x/spring-web/src/main/java/org/springframework/http/HttpHeaders.java#L418) utilized `LinkedCaseInsenitiveMap` underneath.   But now I'm a little bit doubtful because of the `HttpHeaders(MultiValueMap)` constructor.  I've edited the [answer](https://stackoverflow.com/a/52225005/6486622) accordingly    ---  May I submit a pull request clarifying the documentation that:  * `HttpHeaders` are case-insensitive * `HttpHeaders(MultiValueMap)` is only for internal use *(if the fact is acknowledged)*  ?  *Thank you for your time*  ---","closed","in: web,","cac03","2019-04-01T19:27:38Z","2019-04-02T18:14:55Z"
"","22512","Unsupported Media Type when consuming MediaType.APPLICATION_JSON_VALUE with charset","**Affects:** 2.1.0.RELEASE  ---   Some clients automatically add charset:UTF-8 to the Content-Type header is application/json.  This is ""wrong"" because application/json is ALWAYS UTF-8, therefore you should never specify a charset.  https://www.iana.org/assignments/media-types/application/json  > Note:  No ""charset"" parameter is defined for this registration. >    Adding one really has no effect on compliant recipients. >   This should not be a problem for the server because compliant recipients should just ignore the charset and always consider utf-8.   Spring is returning 415 error Unsupported Media Type, Content type 'application/json;charset=UTF-8' not supported, but  'application/json;charset=UTF-8'  should just be considered equivalent to  'application/json'","closed","","fabiocarneiro","2019-03-05T13:59:00Z","2019-03-05T14:51:37Z"
"","22662","WebClient bodyToFlux(String.class) for string list doesn't separate individual values","**Affects:**  5.1.5.RELEASE  Attached demo project for reproducing [bug-demo.zip](https://github.com/spring-projects/spring-framework/files/3005285/bug-demo.zip)  spring boot version: spring boot 2.1.3   if I have json response like this :  [""v1"", ""v2"", ""v3""]  doing: `webclient.get().retrive().bodyToFlux(String.class)`  will emit ""[""v1"", ""v2"",""v3""]"" as single signal instead of 3 different signals.   ---","closed","status: declined,","blabadi","2019-03-25T20:19:35Z","2019-08-06T15:19:49Z"
"","22454","@async annocation queue","restart server when spring async queue has elements。 queue data will lost , how to resolve it?","closed","for: stackoverflow,","winston9527","2019-02-22T03:37:29Z","2019-02-22T08:36:25Z"
"","22462","Spring AOP is not compatible with Kotlin Coroutines","1. the suspend fun may return COROUTINE_SUSPENDED 1. Spring AOP needs to filter COROUTINE_SUSPENDED because the fun did not actually return","open","in: kotlin,","qiyuey","2019-02-24T09:48:13Z","2022-02-28T23:00:15Z"
"","2048","SPR-17590 - Add constant for the empty string in StringUtils","1. added public EMPTY constant in StringUtils so it can be used for scattered """" in all spring projects 2. Replaced all  occurrences of """" in StringUtils with EMPTY","closed","status: declined,","ankurpathak","2018-12-11T15:57:32Z","2019-01-16T11:31:19Z"
"","22282","Correct issues in Spring MVC section","1. [1.1.3. Web MVC Config](https://docs.spring.io/spring/docs/5.1.5.BUILD-SNAPSHOT/spring-framework-reference/web.html#mvc-servlet-config) > Spring Boot relies on the **_MVC_** Java configuration to configure Spring MVC and provides many extra convenient options.   The bolded **_MVC_** word should be removed.  2. [URI patterns](https://docs.spring.io/spring/docs/5.1.5.BUILD-SNAPSHOT/spring-framework-reference/web.html#mvc-ann-requestmapping-uri-templates) > You can map requests by using the following **_glob_** patterns and wildcards:  The bolded **_global_** should be replaced by **global**  3. [Pattern Comparison](https://docs.spring.io/spring/docs/5.1.5.BUILD-SNAPSHOT/spring-framework-reference/web.html#mvc-ann-requestmapping-pattern-comparison) > A pattern is less specific if it has a lower count of URI variables and single wildcards counted as 1 and double wildcards counted as 2.'  Two sentences are combined not properly. I believe it should be something like (I'm not sure if it's technically correct): > A pattern is less specific if it has a lower count of URI variables wildcards. In the comparison single wildcards counted as 1 and double wildcards counted as 2.  4. [@ModelAttribute](https://docs.spring.io/spring/docs/5.1.5.BUILD-SNAPSHOT/spring-framework-reference/web.html#mvc-ann-modelattrib-method-args) > In the sample code mentioning *(binding=false)* there exists following code: ``` @ModelAttribute public AccountForm setUpForm() {     return new AccountForm(); }  @ModelAttribute public Account findAccount(@PathVariable String accountId) {     return accountRepository.findOne(accountId); }  @PostMapping(""update"") public String update(@Valid AccountUpdateForm form, BindingResult result,         @ModelAttribute(binding=false) Account account) {      // ... } ``` but as far as I understand, first argument of *update* method shall be of type **AccountForm**.  5. [@ModelAttribute](https://docs.spring.io/spring/docs/5.1.5.BUILD-SNAPSHOT/spring-framework-reference/web.html#mvc-ann-modelattrib-method-args) > **_ee_** Bean validation and Spring validation. There is a typo here, the word **_ee_** shall be replaced by **See*.  6. [Redirect Attributes](https://docs.spring.io/spring/docs/5.1.5.BUILD-SNAPSHOT/spring-framework-reference/web.html#mvc-redirecting-passing-data) > Note that URI template variables from the present request are automatically made available when expanding a redirect URL, and **_you need_** explicitly add them through Model or RedirectAttributes.  I believe **_you need_** should be negated.  *to be continued...*","closed","type: documentation,","pashazadeh","2019-01-19T23:56:05Z","2019-01-22T17:36:15Z"
"","22595","Use Arrays::fill instead of hand-written loop","1 line instead of 3","closed","type: task,","stsypanov","2019-03-14T14:48:18Z","2019-05-16T19:44:13Z"
"","22210","3.2.11 Backported Issues","- XmlBeanDefinitionReader runs 10x slower due to resetBeanDefinition check [SPR-8318] #12966 - Injecting EXTENDED `@PersistenceContext` into JUnit 4 test class causes NoSuchBeanDefinitionException [SPR-8834] #13476 - Exception during context refresh swallowed by subsequent LifecycleProcessor exception handling [SPR-10000] #14634 - getBean(Object.class) fails when introspecting Environment bean [SPR-10542] #15172 - UriComponentsBuilder.fromUriString may not parse correctly when there is no path [SPR-11970] #16586 - StaxStreamXMLReader ignores significant whitespace [SPR-12000] #16616 - NPE in SelectedValueComparator with null bound value [SPR-12001] #16617 - Changes to AbstractApplicationEventMulticaster in 3.2.9 break HttpSessionEventPublisher in Google AppEngine Runtime [SPR-12002] #16618 - Exceptions thrown during AbstractApplicationContext.refresh() not being logged right when they are caught [SPR-12010] #16626 - AbstractMessageListenerContainer#doExecuteListener can cause a dropped message if using CLIENT_ACKNOWLEDGE and the container is stopped and subsequently started again. [SPR-12015] #16631 - RestTemplate with InputStreamResource does not work if Content-Length is not set [SPR-12017] #16633 - Tiles 3 TilesViewResolver should allow for custom TilesView subclasses [SPR-12075] #16691 - Include all source artifacts in published sources jars [SPR-12085] #16701 - Exclude spring-framework-bom artifacts from release distributions [SPR-12087] #16703 - MockMvc security filters causes FileUploadException: the request was rejected because no multipart boundary was found [SPR-12114] #16730 - Plain FactoryBean declaration on `@Bean` method leads to early call (pre injection) [SPR-12141] #16755 - CachingConnectionFactory should catch exceptions on logical close [SPR-12148] #16762","closed","","spring-projects-issues","2019-01-10T22:03:50Z","2019-01-14T03:22:33Z"
"","22222","4.0.9 Backported Issues","- Using TransactionManagementConfigurer causes StackOverflowError that results in NoClassDefFoundError for FatalBeanException [SPR-10787] #15413 - Concurrent registration/iteration in PropertySourcesPropertyResolver [SPR-12428] #17034 - webjar stops working [SPR-12432] #17038 - Introspection with BeanUtils started failing against java.awt.Window [SPR-12434] #17039 - NPE in org.springframework.core.MethodParameter.getParameterName (possible race condition) [SPR-12453] #17058 - Star character interpreted as bold expression in generated documentation [SPR-12456] #17061 - Unable to initialize WebAsyncTask with executorName [SPR-12457] #17062 - Making it easier to replace ""RequestMappingHandlerAdapter.handleInternal"" [SPR-12460] #17065 - NotReadablePropertyException should take causing exception as constructor argument [SPR-12467] #17073 - Tracking ASM 5.0.4 development (continued) [SPR-12470] #17076 - JavaDoc of AnnotatedTypeMetadata.getAllAnnotationAttributes is misleading. [SPR-12473] #17079 - Misleading documentation for SqlRowSet [SPR-12476] #17082 - Allow overriding InvocableHandlerMethod.invoke and/or ServletInvocableHandlerMethod.invokeAndHandle in subclasses [SPR-12484] #17090 - AnnotationAttributesReadingVisitor.doVisitEnd doesn't handle possible null return from AnnotationUtils.getAnnotations [SPR-12493] #17099 - Consistent bridge method handling in annotation post-processors [SPR-12495] #17101 - Check the user for a SockJS request [SPR-12497] #17103 - SpEL: problem with static methods conflicting with instance methods [SPR-12502] #17107 - Base packages referenced from `@ControllerAdvice` must contain at least one Controller [SPR-12506] #17111 - When specified the Non-existent package using `@ControllerAdvice`(basePackages), has been applied to all controllers. [SPR-12510] #17115 - Synchronize message sending in HTTP SockJS sessions with request initialization [SPR-12516] #17121 - I can use ';' and EOL for delimiter of base-package attribute(component scan) [SPR-12523] #17128 - Prototype with changing bean class does not get populated with dependencies after type switch [SPR-12526] #17131 - CacheAspectSupport 's generateKey method should not concatenate Strings [SPR-12527] #17132 - Performance - hashCode method of AbstractFallbackTransactionAttributeSource.DefaultCacheKey doesn't take targetClass into account [SPR-12536] #17141 - AbstractApplicationEventMulticaster ""lost"" application listener [SPR-12545] #17148 - Duplicated interceptors in HandlerExecutionChain after intermediate getInterceptors() call [SPR-12566] #17167 - PayloadArgumentResolver enforces Validator unnecessarily [SPR-12567] #17168 - Update documentation after SPR-3542 [SPR-12570] #17171 - Improve diagnostics when AnnotationJmxAttributeSource triggers an ArrayStoreException from Class.getAnnotation [SPR-12572] #17173 - Spring's JMX support can rely on native MXBean detection on Java 6+ [SPR-12574] #17175 - Add TimeZone and ZoneId to list of supported method arguments [SPR-12575] #17176","closed","","spring-projects-issues","2019-01-10T22:04:17Z","2019-01-14T03:56:09Z"
"","22237","5.0.11 Backported Issues","- Unable to use Kotlin enums with `@Validated` beans [SPR-16931] #21470 - WebSocketSession#close never emit when using ReactorHttpServer [SPR-17306] #21839 - ExceptionHandlerExceptionResolver started to log on WARN level [SPR-17383] #21916 - Clarify if `@DependsOn` influences bean destroy lifecycle ordering [SPR-17384] #21917 - MethodValidationPostProcessor still validates FactoryBean methods on CGLIB proxies [SPR-17386] #21919 - DefaultListableBeanFactory.getBeanNamesForAnnotation : Improve javadoc [SPR-17392] #21925 - Improve documentation on reactive types for ResponseEntity [SPR-17400] #21933 - Review DataBuffer handling in Servlet and Undertow server adapters [SPR-17410] #21943 - SpringFactoriesLoader should tolerate whitespace [SPR-17413] #21946 - Spring MVC DispatcherServlet initialization parameter contextClass in documentation should implement ConfigurableWebApplicationContext not WebApplicationContext [SPR-17414] #21947 - Spring logs a nasty looking stack trace for unhandled classpath URL [SPR-17417] #21950 - ResourceUrlEncodingFilter does not work with HttpServletRequestWrapper [SPR-17421] #21954 - CssLinkResourceTransformer breaks absolute paths [SPR-17432] #21965 - Configure ResourceUrlProvider in WebFlux and resource chain infrastructure [SPR-17433] #21966 - RestTemplate does not throw exception for custom error codes [SPR-17439] #21971 - ConcurrentModificationException in DispatcherServlet with asynchronous ApplicationEventMulticaster [SPR-17442] #21974 - Doc: Class-level `@Transactional` doesn't demarcate transactions for public methods in parent class [SPR-17445] #21977 - StandardEvaluationContext does not support concurrent variable access [SPR-17448] #21980 - WebClient's UriBuilder option should encode path parameters passed into build [SPR-17465] #21997 - Improve visibility of GitHub wiki [SPR-17469] #22001 - The onstatus method of webclient causes a memory leak. [SPR-17473] #22005 - NamedParameterJdbcTemplate batchUpdate returns an array of size 1 when the batchArgs passed is an empty array [SPR-17476] #22008 - NPE in ClientRequest.attribute(name) when accessing null value [SPR-17486] #22018 - FastByteArrayInputStream.read() wrong return value [SPR-17492] #22024 - Remove Content-Length response header before delegating to WebExceptionHandlers [SPR-17502] #22034 - Reserializing a lenient fallback DefaultListableBeanFactory causes an error [SPR-17508] #22040 - Expose mapped handler as request attribute in spring-webmvc [SPR-17518] #22050 - getBeanNamesForType(ResolvableType) doesn't work for raw singleton instance from `@Bean` method with generic return type [SPR-17524] #22056 - ForwardedHeaderTransformer double encodes [SPR-17525] #22057 - CachingMetadataReaderFactory does not release shared resource cache after context refresh [SPR-17527] #22059 - Parameter resolution in SpringExtension is not thread-safe [SPR-17533] #22065 - MethodParameter.findParameterIndex() is not thread-safe [SPR-17534] #22066 - Misleading alias definition example in reference documentation, part 1.3.1 [SPR-17536] #22068","closed","","spring-projects-issues","2019-01-10T22:05:42Z","2019-01-14T03:20:23Z"
"","22239","4.3.20 Backported Issues","- Typo on ServletUriComponentsBuilder javadoc comments [SPR-17255] #21788 - Javadoc for BufferingClientHttpRequestFactory is missing the end of a sentence [SPR-17261] #21794 - Support for removeHeader in MockHttpServletRequest [SPR-17295] #21828 - Misleading description in Autowired javadoc [SPR-17299] #21832 - Sanity checks for HTTP range requests [SPR-17318] #21851 - HTTP 404 for static resources with last modified = 0L (breaks Docker images build with Jib) [SPR-17320] #21853 - MockAsyncContext not found. Did request wrapper not delegate startAsync? [SPR-17353] #21887 - MethodValidationPostProcessor validates FactoryBean methods for which validation is not applicable [SPR-17374] #21907","closed","","spring-projects-issues","2019-01-10T22:05:15Z","2019-01-14T03:18:56Z"
"","22542","Polish: do simple clean-up","- try-with-resources - map.keySet().contains() -> map.containsKey() - Character -> char - unncessary cast","closed","type: task,","stsypanov","2019-03-07T15:11:23Z","2019-03-12T08:26:57Z"
"","22228","3.2.17 Backported Issues","- SimpleTriggerFactoryBean and CronTriggerFactoryBean fail without jobDetail [SPR-13604] #18182 - Prevent Quartz XSD from being fetched from the Internet [SPR-13706] #18281 - wrong example given at section 17.4 Handler mappings [SPR-13832] #18405 - Handle RejectedExecutionException in WebAsyncManager [SPR-13836] #18409 - Documentation error in ResponseEntityExceptionHandler.handleExceptionInternal [SPR-13869] #18442 - NullPointerException while building error message in InvocableHandlerMethod  [SPR-13917] #18491 - ReflectiveMethodResolver chooses parent class over child for static methods [SPR-13918] #18492 - AbstractMarshaller's DocumentBuilderFactory instance may be used by several threads simultaneously [SPR-13935] #18507 - TimerManagerTaskScheduler.TimerScheduledFuture.getDelay is inverted [SPR-13977] #18549 - Doc: i18n MessageSource example code bug [SPR-14003] #18575 - Scripted beans not updated after a script compilation error in getScriptedObjectType [SPR-14007] #18579 - ModelAndView is replaced when a RedirectView is used [SPR-14045] #18617 - `@RequestHeader` HttpHeaders fails with NPE against null header value [SPR-14091] #18663 - `@EnableScheduling` javadoc has incomplete XML example [SPR-14145] #18717 - NPE thrown when calling methods with an empty `@Caching` annotation [SPR-14162] #18734 - Deadlock possible with AspectJ aspects and multi-threading [SPR-14241] #18814 - AbstractRequestLoggingFilter appends null query string [SPR-14244] #18817","closed","","spring-projects-issues","2019-01-10T22:03:57Z","2019-01-14T03:22:01Z"
"","22207","3.1.2 Backported Issues","- Setting default charset in StringHttpMessageConverter [SPR-7904] #12559","closed","","spring-projects-issues","2019-01-10T22:03:29Z","2019-01-14T03:22:39Z"
"","22231","4.3.12 Backported Issues","- Request params Optional and List\ are inconsistent [SPR-15676] #20235 - java.util.Optional MultipartFile[] `@RequestParam` argument is null in multipart/form-data POST [SPR-15918] #20472 - only one MultipartFile object populated when using an java.util.Optional MutipartFile array or list `@RequestParam` [SPR-15919] #20473 - HttpEntityMethodProcessor discards headers [SPR-15952] #20504 - TaskExecutorRegistration.getTaskExecutor() overrides executor properties of a provided ThreadPoolTaskExecutor [SPR-15962] #20514 - JmsMessagingTemplate is not correctly configured [SPR-15965] #20517 - Clarify `@Bean` return type recommendation in case of multiple interfaces [SPR-15973] #20524 - ChannelRegistration.setInterceptors is misnamed [SPR-15976] #20527 - RestTemplate doesn't consistently tolerate unknown HTTP status codes [SPR-15978] #20529 - PathMatchingResourcePatternResolver provides duplicate resources when using classpath* prefix combined with ant-style [SPR-15989] #20539 - Deprecate HibernateJpaSessionFactoryBean (against Hibernate 5.2) [SPR-16016] #20565 - Consistent configurer access in WebMvcConfigurationSupport [SPR-16017] #20566 - Spring EL does not allow '\0' characters [SPR-16032] #20581 - sort BeanDefinitionRegistryPostProcessors added by other BeanDefinitionRegistryPostProcessors [SPR-16043] #20592 - Add convenient method to construct ParameterizedTypeReference from Type [SPR-16054] #20603","closed","","spring-projects-issues","2019-01-10T22:05:05Z","2019-01-14T03:21:38Z"
"","22234","4.3.17 Backported Issues","- Proper exception for controller method return types that do not work with MvcUriComponentsBuilder (e.g. final classes) [SPR-16710] #21251 - Revise cache safety check to avoid performance regression in EAR packaged applications on WildFly [SPR-16714] #21255 - SpringFailOnTimeout loses original exception when triggering timeout in finally block [SPR-16716] #21257 - Revise JCA MessageEndpoint exception logging and propagation [SPR-16717] #21258 - Inconsistent getTypeForFactoryMethod results for parameterized factory method [SPR-16720] #21261 - Flag misguided evaluation attempts in OperatorMatches [SPR-16731] #21272 - Expose configuration options for ""selector"" header  [SPR-16732] #21273 - Generic constructor argument (e.g. ObjectProvider) fails to resolve for inner class [SPR-16734] #21275 - AnnotationAwareOrderComparator uses Order instead of Priority for DecoratingProxy [SPR-16739] #21280 - Exception swallowed in ResponseEntityExceptionHandler [SPR-16743] #21284 - Validate contextPath in RedirectView [SPR-16752] #21293 - ConfigurationClassBeanDefinitionReader registers duplicate BeanDefinition for nested scoped component [SPR-16756] #21297 - Misleading error message when evaluating T operator [SPR-16762] #21303 - NPE in SimpleClient-HttpURLConnection with errorstream-buffering [SPR-16773] #21313 - Singleton from a FactoryBean may be post-processed twice if the first post-processing triggers a second attempt to get the bean [SPR-16783] #21323","closed","","spring-projects-issues","2019-01-10T22:05:11Z","2019-01-14T03:21:03Z"
"","22199","3.0.1 Backported Issues","- org.springframework.web.servlet.tags.form.TagIdGenerator doesn't remove characters [] and double-quotes [SPR-5382] #10055 - RestTemplate throws IllegalArgumentException when HTTP status is not in the HttpStatus enum  [SPR-6752] #11418","closed","","spring-projects-issues","2019-01-10T22:03:13Z","2019-01-14T03:22:51Z"
"","22195","1.2.9 Backported Issues","- OpenSessionInViewFilter: configurable FlushMode [SPR-2120] #6811 - Use of InheritableThreadLocal creates leak for newly created background threads [SPR-2258] #6947 - FilterDefinitions should be added to Hibernate LocalSessionFactoryBean before *.hbm.xml and *.cfg.xml [SPR-2305] #6994 - Transaction synchronization error with PROPAGATION_REQUIRES_NEW and error obtaining new connection [SPR-2314] #7003 - The JDBCTempalte is logging at a WARN level for DB2 for SQLCode 100 (no rows returned) -- can this be moved to info? [SPR-2316] #7005 - better logging on AnnotationTransactionAttributeSource [SPR-2332] #7021 - RmiServiceExporter displays incorrect binding information when using RmiRegistryFactoryBean [SPR-2336] #7025 - Improve autowiring error messages in case of multiple beans found [SPR-2352] #7041 - MBeanExporter.autodetect can detect only one of several equal beans (beans whose equals method returns true at the time of autodetection) [SPR-2377] #7066 - WebDataBinder w/FieldMarkerPrefix (used for checkboxes) doesn't work with IgnoreUnknownFields = false [SPR-2379] #7068 - PropertyPlaceholderConfigurer does not detect circular dependency in descendant placeholders [SPR-2386] #7075 - Minor typo in spring:bind taglib docs [SPR-2647] #7336 - Failure using ClassUtils getDefaultClassLoader() [SPR-2649] #7338 - SqlMapClientTemplate's delete() doesn't match iBATIS 2.2.0 API [SPR-2653] #7342 - Proper Localisation of the Countries Samples [SPR-2671] #7360 - Null check missing in JtaTransactionManager.doRegisterAfterCompletionWithJtaTransaction() [SPR-2689] #7377 - FreeMarkerConfigurer doesn't permit subclassing [SPR-2693] #7381 - Different behaviour with multiline properties when using short or long form [SPR-2696] #7384 - MBeanRegistrationSupport.doRegister does not take into account servers that change ObjectName on register (Websphere) [SPR-2716] #7404 - PROPAGATION_NOT_SUPPORTED updates enlisted into PROPAGATION_REQUIRES_NEW transaction [SPR-2722] #7410 - JMSException conversion in JmsUtils.convertJmsAccessException() [SPR-2730] #7418 - spring:message tag should support resolving of a single EL expression passed into the arguments attribute [SPR-2736] #7424 - Allow Alias Chaining [SPR-2747] #7435 - The MethodExclusionMBeanInfoAssembler.isNotIgnored(Method,String) method returns the wrong value if ignoredMethods is null. [SPR-2754] #7442 - AbstractXsltView always uses response.getOutputStream() rather than response.getWriter()  [SPR-2760] #7447 - Add comment to javadoc WebLogicMBeanServerFactoryBean that this class is not be used with WebLogic 9 [SPR-2822] #7509 - JdbcTemplate only logs first warning and ignores the rest [SPR-2825] #7512 - AutoProxyFactoryBean must have depends-on to force interceptors to initialise fully [SPR-2834] #7521 - Improvement exception message when bean definition has no class defined [SPR-2840] #7527 - IllegalStateException thrown by jboss 4.0.5 if PROPAGATION_REQUIRES_NEW is used in combination with HibernateTemplate [SPR-2851] #7538 - Add dir=${basedir} argument to \ task in maintests target in Ant script [SPR-2853] #7540 - Doc: PROPOGATION_SUPPORTS inherits completed Transaction in TransactionSyncronization.afterCompletion() [SPR-2857] #7544 - JdbcTemplate does not throw IncorrectResultSetSizeDAE when expected for queryForObject [SPR-2874] #7561 - Improper String treatment by StatementCreatorUtils.setParameterValue [SPR-2950] #7636 - Change RowMapperResultSetExtractor.extractData() to always use ArrayList [SPR-2952] #7638 - NullPointerException in PathMatchingResourcePatternResolver on Resin [SPR-2967] #7653 - Unexpected AccessControlException throwed while using a XmlBeanFactory inside an Applet [SPR-2986] #7672 - Do not log SQL Warnings at warn level by default [SPR-3015] #7701 - Spring doesn't propagate rollback to existing transaction [SPR-3052] #7738 - Add getters for host/port to RmiRegistryFactoryBean [SPR-3053] #7739 - References to non-existent class in javadoc [SPR-3091] #7777 - Typo in notice.txt? [SPR-3095] #7782 - Trim classnames in bean definition [SPR-3102] #7789 - CharacterEncodingFilter's ""encoding"" property should be mandatory [SPR-3107] #7794 - Failed reconnect on OC4J: Object reference no longer valid. [SPR-3113] #7800 - SpringJtaSynchronizationAdapter setRollbackOnly hides causing exception within Weblogic 8.1 [SPR-3149] #7835 - NoClassDefFoundError when running RegexpMethodPointcutAdvisor on Java 6 [SPR-3152] #7838 - Incorrect javadoc packaging type deployed on ibiblio Maven repository [SPR-3203] #7889 - javadoc for HibernateDaoSupport.getHibernateTemplate() could usefully include a reminder about mutating the returned reference [SPR-3204] #7890 - AbstractFallbackTransactionAttributeSource Cache Not Synchronized [SPR-3222] #7908","closed","","spring-projects-issues","2019-01-10T22:02:38Z","2019-01-14T03:23:00Z"
"","22229","4.2.9 Backported Issues","- ObjectToObjectConverter should be able to use constructors on non-public classes [SPR-14304] #18876 - Async advisor retrieval blocks when triggered by singleton init method [SPR-14324] #18896 - Doc: SpEL behavior when comparing value to null [SPR-14361] #18933 - Default async timeout handling results in Logged Exception for Tomcat 8.5.x [SPR-14739] #19305 - Improve performance of StompEncoder.encode() [SPR-14747] #19313 - IPv6 + Origin header + X-Forwarded-Host header gives NumberFormatException (Safari10 / CORS) [SPR-14761] #19327 - `@lookup` method injection method documentation [SPR-14765] #19331 - StompSubProtocolHandler makes the same assumption about header accessor as SimpleBrokerMessageHandler used to [SPR-14791] #19357 - EnableAsync javadoc not clear enough [SPR-14793] #19359 - Documentation on `@EventListener` SpEL features is not very clear [SPR-14812] #19378 - SockJs heartbeat causes deadlock with XHR polling [SPR-14833] #19399 - SimpleApplicationEventMulticaster should not generally suppress ClassCastException [SPR-14846] #19412 - NPE PropertyOrFieldReference$AccessorLValue due to concurrency issue [SPR-14850] #19416 - Document supported return types for `@Async` methods [SPR-14881] #19447 - AbstractSockJsSession deadlock when tomcat WsSession is closing [SPR-14917] #19484 - Normalize resource URL in ResourceServlet [SPR-14946] #19513 - Rename urlVariables to uriVariables for consistency [SPR-14969] #18337 - List-to-String conversion exception does not refer to element type [SPR-14971] #19537 - ImportAware.setImportMetadata not invoked if import inherited from superclass with negative condition [SPR-14972] #19538 - Misleading parameter names and JavaDoc in ResolvableType [SPR-14976] #19542 - Concurrency problem in DeferredResult: potential double execution of handleResult [SPR-14978] #19544 - SpEL and Date Literals [SPR-14987] #19553 - Clarify rollback-on consistency between DefaultTransactionAttribute and TransactionTemplate [SPR-14994] #19560 - Pointcut evaluation fails against AbstractHandlerMethodMapping$MappingRegistry with AspectJ 1.8.10 [SPR-15019] #19586 - MBeanExporter fails against null beans [SPR-15031] #19598","closed","","spring-projects-issues","2019-01-10T22:04:47Z","2019-01-14T03:21:59Z"
"","22211","3.2.10 Backported Issues","- Misleading exception message for using JPA with custom IsolationLevels [SPR-8325] #12974 - RequestAttributes in FrameworkPortlet [SPR-11295] #15919 - StandardPortletEnvironment is not properly populated [SPR-11816] #16436 - Revisit class cache in CachedIntrospectionResults [SPR-11867] #16486 - Performance regression for custom autowireBean calls with many properties [SPR-11875] #16494 - isGlobalRollbackOnly always returns 'false' with WebSphereUOWTransactionManager [SPR-11876] #16495 - MBeanExportConfiguration.SpecificPlatform never calls afterPropertiesSet() [SPR-11877] #16496 - ReflectionUtils slow down application startup on WebSphere [SPR-11882] #16501 - URIComponentsBuilder shares state across calls of .build() [SPR-11885] #16504 - Spring 3.2.9 breaks JBoss EAP 5.1.1 VFS compatibility [SPR-11887] #16506 - Improve performance of ReflectionUtils.isCglibRenamedMethod [SPR-11894] #16513 - Consistent declaration of private static final logger variables [SPR-11905] #16524 - Manually registered transaction manager are not recognized by qualifiedBeanOfType [SPR-11915] #16534 - HttpHeaders fails to return getAllow() if it was previously set to an empty collection [SPR-11917] #16536 - Dead link to ""MVC application step-by-step"" guide [SPR-11935] #16552 - Objects created by FactoryBeans might get processed multiple times by BeanPostProcessors if beans are created lazily [SPR-11937] #16554 - Unclear error message on BeanPostProcessor returning null [SPR-11951] #15997 - Backward compatibility issue in RestTemplate's messageConverters after SPR-11351 [SPR-11962] #16578","closed","","spring-projects-issues","2019-01-10T22:03:49Z","2019-01-14T04:05:20Z"
"","22221","3.2.8 Backported Issues","- Method injection causes memory leak [SPR-10785] #15411 - Velocity springFormCheckboxes macro does not check preselected items correctly [SPR-10837] #15463 - URLs containing %2F (forward slash) are not mapped correctly to `@RequestMapping` methods [SPR-11101] #15727 - Improve error reporting for issues related to `@Controller` types requiring AOP proxing [SPR-11281] #15905 - LiveBeansView generates invalid JSON on specific case [SPR-11366] #15992 - StringIndexOutOfBoundsException in AbstractErrors for class-level JSR-303 validator [SPR-11374] #16001 - Jaxb2RootElementHttpMessageConverter is susceptible to XXE vulnerability [SPR-11376] #16003 - Potential ClassCastException in RequestContextListener when destroying the request object [SPR-11378] #16005 - Fix off-by-one regression in AbstractMethodMockingControl [SPR-11385] #16012 - PreparedStatement#getParameterMetaData() calls may trigger unwanted side effects [SPR-11386] #16013 - Unit test in EvalTagTests fails with French as default locale [SPR-11392] #16019 - aop:scoped-proxy may fail with LinkageError: loader attempted duplicate class definition for name [SPR-11398] #16025 - Broken link into documentation section 21.5.3  [SPR-11404] #16031 - EhCacheCacheManager does not wrap runtime-registered caches with TransactionAwareCacheDecorator [SPR-11407] #16034 - MarshallingView should not close response output stream  [SPR-11411] #16038 - Consistently avoid close() call on Servlet OutputStream [SPR-11413] #16040 - MarshallingView should explicitly skip BindingResult when searching for a model object [SPR-11417] #16044 - Inclusion of 'overloaded' in equals() and hashCode() for MethodOverride breaks equals() in AbstractBeanDefinition [SPR-11420] #16047 - resolveFactoryMethodIfPossible should consider nonPublicAccessAllowed flag and SecurityManager scenario [SPR-11422] #16049 - Minor CompositeCacheManager revision [SPR-11427] #16053 - Objects with multi-threaded access should not lazily populate a hash field [SPR-11428] #16054 - Memory leak in ConcurrentReferenceHashMap [SPR-11440] #16066","closed","","spring-projects-issues","2019-01-10T22:03:47Z","2019-01-14T03:22:13Z"
"","22197","2.0.8 Backported Issues","- Make ObjectFactoryCreatingFactoryBean extendable [SPR-3097] #7784 - Handle XBean PropertyEditors which do not support setValue calls for non-String values [SPR-3799] #8479 - Redeploying EAR files on WLS causes random errors recreating the context [SPR-3821] #8501 - EhCacheManagerFactoryBean could accepts name attribute for the CacheManager's name [SPR-4063] #8742 - JavaDoc for PropertyEditorRegistry.registerCustomEditor inconsistent [SPR-4097] #8759 - Null Pointer Exception when getting a instance of TimerManagerFactoryBean using XMLBeanFactory. I had set only the resourceRef and timerManagerName properties in the XML file [SPR-4101] #8779 - Transaction Manager issue ""NO Active JTA Transaction"". Sprying trying to synchronise a transaction marked for rollback. [SPR-4107] #8786 - Deadlock in JMS while ApplicationContext shutdown [SPR-4124] #8803 - AutoPopulatingList not Serializable [SPR-4132] #8811 - JndiTemplate could promote default properties to first-level before initialization [SPR-4135] #8814 - Upgrade Ehcache 1.2.4 to 1.3.0 (release June/07) [SPR-4146] #8824 - Documentation: Typo in 'Section 3.7.2. Customizing configuration metadata with BeanFactoryPostProcessors' [SPR-4156] #8834 - Error when client ApplicationContext calls methods on parent ApplicationContext ""too early"" [SPR-4169] #8847 - JavaDoc Clarification for JdbcOperations.update() method might be good [SPR-4177] #8855 - java.lang.NoClassDefFoundError: com.ibm.db2.jcc.DB2Driver with IBM JVM 1.5.0 and JPA [SPR-4179] #8857 - Doc: Log4jWebConfigurer does not mention log4j.xml [SPR-4199] #8877 - extractDatabaseMetaData in JdbcUtils fails if the metadata class is not public [SPR-4202] #8880 - DefaultDocumentLoader#createDocumentBuilderFactory() catches IllegalArgumentException but does not rethrow [SPR-4203] #8881 - UrlPathHelper may fail to resolve path within application if used within a root context [SPR-4210] #8888 - Declarative transaction management - emphasise no transaction on self-invocation [SPR-4218] #8896 - 2.0.x reference documentation - Section 3.2.2: remove unneeded cast (Bean Factory) [SPR-4221] #8899 - CommonsMultipartResolver should call ServletFileUpload.isMultipartContent(HttpServletRequest) [SPR-4228] #8906 - Documentation bug - prototype bean lyfecycle [SPR-4231] #8909 - Problem with JSTL 1.1 internationalization [SPR-4234] #8912 - [Documentation] Clarify public interface requirement for scoped proxies [SPR-4266] #8944 - CommonsPoolServerSessionFactory.close does not remove the ObjectPool from cache [SPR-4269] #8947 - ServerSessionMessageListenerContainer102 cannot be initialized with autoStart=false [SPR-4270] #8948 - DispatcherServlet logs original request URI when handling an include request. [SPR-4282] #8960 - NPE in ScriptFactoryPostProcessor#predictBeanType() [SPR-4287] #8965 - Add getGroovyClassLoader() to GroovyScriptFactory [SPR-4297] #8975 - WebSphereDataSourceAdapter getConnection throws runtime exception instead of SQLException [SPR-4298] #8976 - Initializing shared context from within an EJB and sharing it with a web module [SPR-4301] #8979 - Safari 3.x problem with redirect after file upload [SPR-4849] #9525 - Class cast exception in AbstractBeanDefinition.getBeanClassName(AbstractBeanDefinition.java:305) [SPR-5213] #9886","closed","","spring-projects-issues","2019-01-10T22:02:46Z","2019-01-14T03:22:55Z"
"","22198","3.2.7 Backported Issues","- JMSTemplate setDeliveryPersistent(boolean deliveryPersistent)  javadoc incorrect [SPR-3983] #8663 - Improve the performance of BeanInfo lookups in CachedIntrospectionResults [SPR-9014] #13653 - CronTriggerFactoryBean doesn't allow calendar name and description to be specified [SPR-9771] #14405 - Fix `@Bean` meta-annotation detection when using ASM [SPR-10488] #15121 - Provide access to SimpleTriggerFactoryBean property startTime [SPR-10940] #15568 - theme resolution fails with ""IllegalArgumentException: Basename must not be empty"" when an empty theme value is provided via request url [SPR-11128] #15754 - context:component-scan element says error in the mvc-cofig.xml [SPR-11221] #15846 - Backward compatibility of BeanUtils.copyProperties broken for copying wrapped types to primitive types (and vice versa) on 3.2.6 and 4.0.0 [SPR-11231] #15856 - Regression: InjectionMetadata cache needs to handle different bean classes per bean name [SPR-11246] #15871 - XMLEventStreamWriter fails to handle writeEmptyElement() followed by writeAttribute() [SPR-11254] #15879 - EhCacheFactoryBean should not call set(Sampled)StatisticsEnabled on EhCache 2.7/2.8 [SPR-11265] #15890 - better method identification in AnnotationTransactionAttributeSource logging [SPR-11267] #15892 - `@Async` with cglib based proxy causes memory leak in heap [SPR-11275] #15899 - `@Async` with cglib based proxy causes memory leak in permgen [SPR-11276] #15900 - Full Quartz 2.2 compatibility, including LocalDataSourceJobStore [SPR-11284] #15908 - StandardEnvironment's system environment access produces warning with stacktrace on WebSphere [SPR-11297] #15921 - Add patch() to MockMvcRequestBuilders [SPR-11299] #15923 - Optimize lookup of field errors in AbstractBindingResult [SPR-11304] #15928 - Bad type comparison in ReflectionHelper.getTypeDifferenceWeight(List\ paramTypes, List\ argTypes) [SPR-11306] #15930 - Provide a mechanism for adding ApplicationContextInitializers to DispatcherServlet's ApplicationContext [SPR-11314] #15938 - ServletWebRequest.checkNotModified() methods should treat HEAD identically to GET [SPR-11317] #15941 - Add control of what HTTP Request method AbstractFileResolvingResource methods exists, lastModified and lastModified uses on http url resources [SPR-11320] #15944 - Wrong assert in  AspectJAwareAdvisorAutoProxyCreator.setAspectJAdvisorFactory() [SPR-11330] #15954 - Improve documentation explaining how to enable MatrixVariable in Spring MVC [SPR-11331] #15955 - Bootstrapping the EntityManagerFactory should log the name of the persistence unit being used [SPR-11333] #15957 - Ensure all tests are executed in the Gradle build for the spring-test module [SPR-11338] #15962 - ServletTestExecutionListener is not enabled by default in abstract base test classes [SPR-11340] #15964 - Reduce footprint due to RootBeanDefinition [SPR-11343] #15967 - Unnecessary class loading in AspectJ RuntimeTestWalker [SPR-11344] #15968 - PlaceholderConfigurerSupport.doProcessProperties() loses stack trace on exception [SPR-11346] #15970 - Handle NoClassDefFoundError for TestExecutionListeners consistently in the TestContext framework [SPR-11347] #15971 - Provide alternative RestTemplate constructor to avoid default MessageConverter creation [SPR-11351] #15976 - AbstractAnnotationConfigDispatcherServletInitializer does not allow consolidating all configuration into the ""root"" context [SPR-11357] #15982 - Compatibility with JOpt 4.6 [SPR-11359] #15985 - BeanWrapper fails in case of read/write method mismatch (e.g. EhCacheFactoryBean.setMemoryStoreEvictionPolicy) [SPR-11361] #15987 - SchedulerAccessor 'globalJobListeners' and 'globalTriggerListeners' not working with 2.0.x and 2.1.x [SPR-11362] #15988 - Incorrect javadoc in SpringServletContainerInitializer [SPR-11364] #15990 - CompoundClassLoader.loadClass is trying to load some framework class and comsuming all web container threads. [SPR-11499] #16124","closed","","spring-projects-issues","2019-01-10T22:03:45Z","2019-01-14T03:22:53Z"
"","22219","3.1.3 Backported Issues","- Jaxb2Marshaller + packagesToScan + SpringMVC fails to find supported class [SPR-10551] #15182","closed","","spring-projects-issues","2019-01-10T22:03:30Z","2019-01-14T03:22:16Z"
"","22217","3.2.9 Backported Issues","- Java config FactoryBean proxy causes class loader leak [SPR-9274] #13912 - Unsafe fallback pointcut construction in AspectJExpressionPointcut [SPR-9335] #13973 - Overriding bean definition message does not take parent definition into account [SPR-9671] #14305 - SpEL: static access via the type function fails if the class implements Map [SPR-9861] #14494 - Servlet 3 multipart parameter binding does not work on Weblogic12c (12.1.2.0) [SPR-11074] #15700 - double evaluation of method arguments in SpEL [SPR-11445] #16071 - XmlValidationModeDetector: length of a string is always greater than index of any of its characters [SPR-11477] #16102 - CollectionToCollectionConverter.convert() improvement for untyped collections [SPR-11479] #16104 - SpringBeanELResolver - setValue throws PropertyNotWritableException [SPR-11502] #16127 - Unable to retrieve FlashMap when target parameters are encoded [SPR-11504] #16129 - Default KeyGenerator doesn't work for methods with arguments of array types [SPR-11505] #16130 - Treat empty log config refresh interval as infinite interval in Log4jWebConfigurer [SPR-11507] #16132 - Spring MVC Test can fail to obtain async result due to timing issue [SPR-11516] #16141 - ConstructorResolver will generate NPE in case of no factory method found when there are explicit args [SPR-11517] #16142 - Memory leak when using annotation based auto-wiring in child context [SPR-11520] #16145 - Improve exception message for failed property access in SpEL [SPR-11535] #16160 - Providing unique names to prototype inner beans causes excessive memory and CPU use [SPR-11545] #16170 - BufferedImageHttpMessageConverter fails if JAI is installed [SPR-11581] #16205 - Log Forging in DispatcherServlet via requestURI [SPR-11591] #16215 - ResizableByteArrayOutputStream and ByteArrayOutputStream capacities [SPR-11594] #16218 - AbstractApplicationEventMulticaster can leak classes [SPR-11606] #16229 - Referencing static field of class that extends Map in expression language causes class cast exception [SPR-11609] #16232 - Servlet mocks are not reinjected into test instance between TestNG test methods [SPR-11626] #16249 - ResourceHttpRequestHandler not closing Resource's input stream [SPR-11644] #16267 - MarshallingView should avoid temporary byte array when copying to response [SPR-11646] #16269 - UrlResource.exists() does not properly detect JBoss vfszip resources [SPR-11676] #16299 - Fix/optimize handling of `@Bean` method override regression with return type narrowing on JDK 8 [SPR-11718] #16340 - Metadata reading should never use ASM for java.* and javax.* types (in particular on JDK 8) [SPR-11719] #16341 - ConcurrentReferenceHashMap doesn't limit upper concurrency level [SPR-11720] #16342 - SpringProperties: the ClassLoader might be null, if class is loaded by the bootstrap class loader [SPR-11721] #16343 - AbstractAdvisingBeanPostProcessor.isEligible(…) does not consider proxy interfaces [SPR-11725] #16347 - If-Modified-Since header is parsed as HTTP-date; but IE 10 sends length [SPR-11727] #16349 - StandardServletMultipartResolver should support lazy resolution along the lines of CommonsMultipartResolver [SPR-11730] #16352 - AbstractMarshaller should avoid SAXSource workaround when processExternalEntities=true [SPR-11737] #16359 - JRubyScriptUtils fails against JRuby 1.7.12 with NullPointerException in findClassNode [SPR-11747] #16369 - IdToEntityConverter throws Access Denied exception within Spring MVC application on WebSphere 8.x [SPR-11758] #16380 - Protect against security exploits via system identifier in DTD declaration [SPR-11768] #16390 - JDBC findColumn gives wrong result in case of duplicate column labels [SPR-11786] #16408 - SPR-10829: Spring JMS problem with Oracle AQ still exists if underlying DataSource is decorated [SPR-11791] #16412 - Improve prefix detection in StringUtils.cleanPath [SPR-11793] #16414 - getTestExecutionListeners() doesn't detect NoClassDefFoundError within BeanInstantiationException [SPR-11804] #16424 - StringUtils.parseLocaleString: locale variant cannot contain country code [SPR-11806] #16426","closed","","spring-projects-issues","2019-01-10T22:03:48Z","2019-01-14T03:57:06Z"
"","22223","3.2.13 Backported Issues","- Java 8 bridge method handling can lead to false positive detection of autowired annotations [SPR-12187] #16801 - webjar stops working [SPR-12432] #17038 - Introspection with BeanUtils started failing against java.awt.Window [SPR-12434] #17039 - NPE in org.springframework.core.MethodParameter.getParameterName (possible race condition) [SPR-12453] #17058 - Unable to initialize WebAsyncTask with executorName [SPR-12457] #17062 - Misleading documentation for SqlRowSet [SPR-12476] #17082 - Consistent bridge method handling in annotation post-processors [SPR-12495] #17101 - SpEL: problem with static methods conflicting with instance methods [SPR-12502] #17107 - Prototype with changing bean class does not get populated with dependencies after type switch [SPR-12526] #17131 - Performance - hashCode method of AbstractFallbackTransactionAttributeSource.DefaultCacheKey doesn't take targetClass into account [SPR-12536] #17141 - AbstractApplicationEventMulticaster ""lost"" application listener [SPR-12545] #17148 - Duplicated interceptors in HandlerExecutionChain after intermediate getInterceptors() call [SPR-12566] #17167 - Update documentation after SPR-3542 [SPR-12570] #17171","closed","","spring-projects-issues","2019-01-10T22:03:52Z","2019-01-14T03:55:18Z"
"","22202","3.0.6 Backported Issues","- Invalid MIME-type causes a 500 error [SPR-7712] #12368","closed","","spring-projects-issues","2019-01-10T22:03:19Z","2019-01-14T03:22:48Z"
"","22216","4.0.7 Backported Issues","- Injecting EXTENDED `@PersistenceContext` into JUnit 4 test class causes NoSuchBeanDefinitionException [SPR-8834] #13476 - getBean(Object.class) fails when introspecting Environment bean [SPR-10542] #15172 - Include all source artifacts in published sources jars [SPR-12085] #16701 - Exclude spring-framework-bom artifacts from release distributions [SPR-12087] #16703 - ShallowEtagHeaderFilter doesn't support Servlet 3.1 setContentLengthLong [SPR-12097] #16713 - Update Apache HttpComponents to 4.3.5  - CVE-2014-3577: Apache HttpComponents client: Hostname verification susceptible to MITM attack [SPR-12100] #16716 - ServerEndpointExporter causes application context refresh to fail with an NPE when used in a Spring Boot app [SPR-12109] #16725 - MockMvc security filters causes FileUploadException: the request was rejected because no multipart boundary was found [SPR-12114] #16730 - GuavaCacheManager ignores cache specification due to eager initialization of internal cache map with static cache names [SPR-12120] #16736 - Performance issue on ResolvableType cache [SPR-12122] #16738 - Plain FactoryBean declaration on `@Bean` method leads to early call (pre injection) [SPR-12141] #16755 - Cache.get(Object key, Class\ type) should be more explicit about what to do in case of a type mismatch [SPR-12145] #16759 - CachingConnectionFactory should catch exceptions on logical close [SPR-12148] #16762","closed","","spring-projects-issues","2019-01-10T22:04:14Z","2019-01-14T03:22:22Z"
"","22209","3.2.16 Backported Issues","- Fix cron trigger example in reference documentation [SPR-10474] #15107 - Content-Disposition header causes download in browser for Spring Boot Actuator endpoints [SPR-13587] #18164 - Skip Content-Disposition header when status != 2xx [SPR-13588] #18165 - AbstractJdbcCall's compiled variable should be declared as volatile [SPR-13617] #18195 - Avoid NPE for anonymous SqlParameter in CallMetaDataContext [SPR-13628] #18206 - Content-Disposition added for `@ResponseBody` methods explicitly mapped to "".html"" or other extensions [SPR-13629] #18207 - Content-Disposition with fixed file name ""f.txt"" causes confusion [SPR-13643] #18220 - CommonsMultipartFile.getOriginalFilename() does not strip file path properly [SPR-13662] #18237 - Revisit BeansException warn logging after startup failure [SPR-13663] #18238 - AbstractApplicationContext.isRunning throws IllegalStateException when called too early [SPR-13667] #18242 - BeanFactoryAnnotationUtils.qualifiedBeanOfType should not instantiate all beans of given type before checking qualifier [SPR-13741] #18314 - Fix Javadoc for Jackson2ObjectMapperFactoryBean [SPR-13765] #18339 - Support for Microsoft SQL Server driver version 4 and above [SPR-13772] #18346 - Jdbc4SqlXmlHandler should return null as documented (instead of throwing NPE) [SPR-13782] #18356","closed","","spring-projects-issues","2019-01-10T22:03:56Z","2019-01-14T03:22:35Z"
"","22205","3.2.6 Backported Issues","- Expression evaluator should accept raw collection value for parameterized method argument [SPR-7831] #12487 - In spring MVC portlet, `@resourceMapping` doesn't work. [SPR-10791] #15417 - Security vulnerabilities in Spring v2.5.6 and v3.2.4 [SPR-10912] #15540 - Remove integer conversion in JmsListenerContainerParser [SPR-10986] #15614 - MBeanExporter/MBeanRegistrationSupport lack synchronization [SPR-11002] #15630 - Use StoredProcedure to call sp, if not set the rowmapper for out parameter which type is cursor, will throw null pointer exception [SPR-11076] #15702 - ClassPathScanningCandidateComponentProvider.findCandidateComponents fails on private meta-attributes [SPR-11091] #15717 - If the !profile selector is used the other profiles can be ignored in \ [SPR-11093] #15719 - Map ""Foreign key constraint violation occurred"" Sybase error code to DataIntegrityViolationException [SPR-11097] #15723 - Minor issue with fix for CVE 2010-1622 [SPR-11098] #15724 - performancedrop due to repeated JDBC 3.0 getParameterType calls in setNull in StatementCreatorUtils [SPR-11100] #15726 - ""CglibAopProxy: Unable to proxy method"" WARN when bean class contains static final method [SPR-11107] #15733 - Type resolution fails for uninitialized factory-method declaration [SPR-11112] #15738 - Cannot autowire qualified scoped-proxy `@Bean` definitions [SPR-11116] #15742 - Dependency Injection issue when using ManagedMap or ManagedList in BeanDefinitionParser [SPR-11131] #15757 - Fix tests related to java.beans.BeanInfo changes in JDK8-b117 [SPR-11139] #15765 - ServletTestExecutionListener breaks old code [SPR-11144] #15771 - Recently changes of GenericTypeAwarePropertyDescriptor breaks BeanUtils.copyProperties() [SPR-11209] #15834","closed","","spring-projects-issues","2019-01-10T22:03:44Z","2019-01-14T03:22:43Z"
"","22240","4.3.21 Backported Issues","- ExceptionHandlerExceptionResolver started to log on WARN level [SPR-17383] #21916 - Clarify if `@DependsOn` influences bean destroy lifecycle ordering [SPR-17384] #21917 - MethodValidationPostProcessor still validates FactoryBean methods on CGLIB proxies [SPR-17386] #21919 - DefaultListableBeanFactory.getBeanNamesForAnnotation : Improve javadoc [SPR-17392] #21925 - SpringFactoriesLoader should tolerate whitespace [SPR-17413] #21946 - Spring MVC DispatcherServlet initialization parameter contextClass in documentation should implement ConfigurableWebApplicationContext not WebApplicationContext [SPR-17414] #21947 - Spring logs a nasty looking stack trace for unhandled classpath URL [SPR-17417] #21950 - ResourceUrlEncodingFilter does not work with HttpServletRequestWrapper [SPR-17421] #21954 - RestTemplate does not throw exception for custom error codes [SPR-17439] #21971 - Doc: Class-level `@Transactional` doesn't demarcate transactions for public methods in parent class [SPR-17445] #21977 - NamedParameterJdbcTemplate batchUpdate returns an array of size 1 when the batchArgs passed is an empty array [SPR-17476] #22008 - FastByteArrayInputStream.read() wrong return value [SPR-17492] #22024 - Reserializing a lenient fallback DefaultListableBeanFactory causes an error [SPR-17508] #22040 - Expose mapped handler as request attribute in spring-webmvc [SPR-17518] #22050 - getBeanNamesForType(ResolvableType) doesn't work for raw singleton instance from `@Bean` method with generic return type [SPR-17524] #22056 - Misleading alias definition example in reference documentation, part 1.3.1 [SPR-17536] #22068","closed","","spring-projects-issues","2019-01-10T22:05:16Z","2019-01-14T03:12:52Z"
"","22230","4.3.14 Backported Issues","- Error in RestTemplate when setting the same HTTP header through ClientHttpRequestInterceptor and HttpEntity [SPR-15066] #19632 - Update Stomp Client Recommendation in Docs [SPR-15624] #20183 - Combining `@Retryable` and `@Scheduled`/`@JmsListener` doesn't work [SPR-16196] #20744 - Exception when receiving Long collection in MessageMapping [SPR-16252] #20799 - NPE in FunctionReference due to race condition in SpelExpression.getValue() [SPR-16255] #20802 - spring-web CORS requires X-Forwarded-Port [SPR-16262] #20809 - Reduce access on user in SimpleBrokerMessageHandler.handleMessageInternal [SPR-16264] #20811 - Stomp Broker Relay may ignore configured destination prefixes [SPR-16265] #20812 - Embedded cglib 3.2.5 not closing input streams that read class files [SPR-16267] #20814 - config.enableSimpleBroker(""/topic"", ""/queue""); Should be config.enableSimpleBroker(""/topic"", ""queue""); [SPR-16275] #20822 - BeanUtils.isSimpleValueType() returns false for enums overriding a method [SPR-16278] #20825 - Unnecessary file system access in SimpleMetadataReaderFactory.getMetadataReader [SPR-16281] #20828 - Allow to inject enum with package visibility [SPR-16284] #20831 - Ambiguous mapping error when using generic interface [SPR-16288] #20835 - Improve performance of some string operations [SPR-16293] #20840 - Programmatic creation of caching proxies using CacheProxyFactoryBean does not work [SPR-16295] #20842 - Access-Control-Allow-Origin header returns wrong value using SockJS  [SPR-16304] #20851 - Incorrect SpEL syntax in reference documentation [SPR-16315] #20862 - Large transaction timeout value (Integer.MAX_VALUE for example) results in transaction expiring immediately after starting. [SPR-16316] #20863 - `@JmsListener` concurrency property is ignored if DefaultJmsListenerContainerFactory#concurrency is set [SPR-16338] #20885 - JMS Producers are cached even when the destination is a temporary queue causing a memory leak [SPR-16353] #20900 - ComponentScanBeanDefinitionParser::parseTypeFilters should not fail on ClassNotFoundException [SPR-16356] #20903 - TestExecutionListener class not found logged at INFO [SPR-16369] #20916 - Use ArrayList instead of LinkedList for known size [SPR-16378] #20924 - EclipseLink does not log SQL parameters when using showSql [SPR-16383] #20929","closed","","spring-projects-issues","2019-01-10T22:05:07Z","2019-01-14T03:21:57Z"
"","22233","4.3.16 Backported Issues","- EL1072E when evaluating compiled null-safe expression [SPR-16489] #21032 - ClassCastException in TestDispatcherServlet [SPR-16695] #21236","closed","","spring-projects-issues","2019-01-10T22:05:10Z","2019-01-14T03:21:12Z"
"","22208","3.1.4 Backported Issues","- EhCacheCacheManager throws assertion error for ehcache configuration with only default cache configured [SPR-7955] #12610 - MemoryLeak in Cglib2AopProxy.ProxyCallbackFilter [SPR-8008] #12663 - org.springframework.jmx.export.metadata.AttributesJmxAttributeSource has been removed but is still mentioned in the documentation [SPR-8916] #13556 - Doc: Bad snippet for CompositeCacheManager [SPR-9064] #13703 - SpringContextResourceAdapter does not fulfill whole JCA 1.5 contract [SPR-9162] #13800 - CachedIntrospectionResults cannot be cleared for null class loaders [SPR-9189] #13827 - MimeMessageHelper does not handle attachment file name encoding [SPR-9258] #13896 - BridgeMethodResolver throws exception when trying to find bridged method if method is declired in interface or it is abstract [SPR-9330] #13968 - Doc: Spring 3.x and Hibernate 4 are not compatible. Unable to use HibernateTemplate. [SPR-9365] #14002 - FreeMarkerConfigurationFactory's instance variable become enlarged whenever call create method. [SPR-9389] #14025 - exposeAccessContext should also be available for JndiRmiClientInterceptor [SPR-9428] #14063 - LocalVariableTableParameterNameDiscoverer doesn't support bridged methods [SPR-9429] #14065 - MBeanExporter#destroy logs warnings about explicitly unregistered mbeans [SPR-9451] #14086 - SimpleDriverDataSource doesn't use the connectionProperties specified [SPR-9461] #14096 - Error in doc on JCA CCI - ConnectionSpecConnectionFactoryAdapter [SPR-9466] #14101 - WebApplicationInitializer with AnnotationConfigWebApplicationContext parent gets reset to null by ContextLoaderListener [SPR-9591] #14225 - Add migration instructions regarding component-scanning against ""org"" base package [SPR-9843] #14476 - MockHttpServletResponse.getHeaderNames is incompatible with Servlet 3.0 [SPR-9885] #14518 - ResourcePropertySource cannot load JDK 5 properties xml [SPR-9896] #14529 - ContextLoader incorrectly refreshes already refreshed context [SPR-9996] #14630 - SpringBeanAutowiringInterceptor not closing ApplicationContext after EJB initialisation exception [SPR-10013] #14647 - Concurrent Consumers Not Allowed for Durable Subscription [SPR-10037] #14671 - Example shows deprecated ScheduledTimerTask [SPR-10050] #14683 - Unnecessary reading of java.lang.Object input stream [SPR-10058] #14691 - AbstractCachingViewResolver - caching redirect views leads to memory leak  [SPR-10065] #14698 - EclipseLink marks transaction RollbackOnly when applying timeout for ""nonread"" queries [SPR-10068] #14701 - NamedParameterJdbcTemplate for ""insert / select"" clause, set NULL value causes JConnect 7 (Sybase) problem - java.io.IOException: JZ0SL: Unsupported SQL type 0. - Affects 3.1.3.RELEASE, works in 3.1.1.RELEASE [SPR-10084] #14717 - HierarchicalUriComponents.equals() incorrectly returns false when other object is not an instance of OpaqueUriComponents [SPR-10088] #14721 - SpEl bug while reading boolean fields [SPR-10091] #14724 - DMLC: JMS resources are never cleared under certain conditions [SPR-10092] #14725 - Implement support of Jackson2 for MappingJacksonMessageConverter [SPR-10099] #14732 - JMSTemplate.receive() and receiveSelected() don't use ""receiveTimeout"" property if in a transaction [SPR-10109] #14742 - Processing java.math.BigDecimal via Spring's ExtendedBeanInfo fails sporadically [SPR-10111] #14744 - SpEL support for static finals on interfaces [SPR-10125] #14758 - MessageSourceResourceBundle.containsKey throws NullPointerException [SPR-10136] #14769 - EntityManagerFactoryUtils.findEntityManagerFactory() does not search parent contexts if persistence unit name is unspecified [SPR-10160] #14793 - Consider bridge methods in SpEL properties [SPR-10162] #14795 - Community Download site mentioned in the docs doesn't work [SPR-10171] #14804 - AbstractMessageConverterMethodProcessor returns allSupportedMediaTypes with HttpMediaTypeNotAcceptableException [SPR-10175] #14808 - Attribute mode removed from annotation-driven definition in spring-task.xsd [SPR-10177] #14810 - Update to spring 3.1.3 causes SqlException when executing sql statement with null parameters, caused by changes in StatementCreatorUtils.setNull method. [SPR-10185] #14818 - FormHttpMessageConverter#writePart NPE on 'partBody.getClass()' [SPR-10187] #14820 - Fix castor website  [SPR-10189] #14822 - MockHttpServletRequest must not throw an exception on getParameter(null) [SPR-10192] #14825 - RequestMappingInfoHandlerMapping.handleNoMatch returns null instead of throwing an exception [SPR-10193] #14826 - HttpEntityMethodProcessor does not support HttpEntity/ResponseEntity subclasses [SPR-10207] #14840 - MBeanExporter/MBeanRegistrationSupport leaks ObjectNames in registeredBeans [SPR-10957] #15585","closed","","spring-projects-issues","2019-01-10T22:03:31Z","2019-01-14T03:22:37Z"
"","22224","3.2.14 Backported Issues","- Documentation error in ""SimpleJdbcInsert"" section [SPR-12639] #17240 - Javadoc for ModelAttributeMethodProcessor.validateIfApplicable is misleading [SPR-12655] #17256 - Consider rewording ack modes on the listener container javadocs [SPR-12705] #17302 - `@Scheduled` no longer works in case of multiple proxied target classes implementing the same interface [SPR-12709] #17306 - ServletUriComponentsBuilder#initFromRequest can cause NPE [SPR-12723] #17320 - Deadlock publishing event while creating listener bean [SPR-12739] #17336 - Specified MVC resource at root level not considered ""under location"" [SPR-12747] #17344 - EncodedResource does not include charset in equals() implementation [SPR-12767] #17364 - Document null input requirements in Converter [SPR-12780] #17378 - PropertyResourceConfigurerTests class throwing exception during build in 4 test methods [SPR-12794] #17391 - StandardMultipartHttpServletRequest.StandardMultipartFile not serializable [SPR-12795] #17392 - Doc: Lifecycle (not SmartLifecycle) beans not started at refresh() time [SPR-12855] #17453 - Incorrect value in InvalidPropertyException message from BeanWrapperImpl.setPropertyValue [SPR-12866] #17464 - CronSequenceGenerator constructor goes into infinite loop with invalid increments [SPR-12871] #17469 - PatternMatchUtils infinite loop bug [SPR-12971] #17563 - CustomBooleanEditor may run into NPE when configured with allowEmpty=false [SPR-13010] #17601 - NPE for alias resolved to null in SimpleAliasRegistry [SPR-13016] #17607 - Remoting over JMS with receiveTimeout blocks service forever [SPR-13052] #17644 - When use a `@args` as pointcut, there is case that occur a NPE at calling the unrelated method [SPR-13102] #17693 - XML input vulnerability based on DTD declaration [SPR-13136] #17727","closed","","spring-projects-issues","2019-01-10T22:03:54Z","2019-01-14T03:22:08Z"
"","22238","4.3.19 Backported Issues","- Doc: ThreadPoolTaskExecutor's defaults vs setting queueCapacity for common pool scenarios [SPR-16944] #21483 - Doc: AsyncConfigurer causes dependencies to be created early [SPR-16945] #21484 - AbstractJackson2HttpMessageConverter incorrectly logs at WARN level after upgrading to Jackson 2.9 [SPR-16947] #21486 - ConcurrentReferenceHashMap does not enforce visibility of cached EntrySet [SPR-16994] #21532 - Map injection fails to find bean produced with `@Bean` when additional method with same name exists [SPR-16999] #21537 - Update documentation references to Number/Currency/PercentStyleFormatter [SPR-17022] #21560 - Incorrect Class reference in documentation [SPR-17042] #21580 - AOP and use of redirect view can lead to unbounded caching in AbstractAutoProxyCreator [SPR-17045] #21583 - Fix outdated javadoc of ConfigurationClassPostProcessor [SPR-17062] #21600 - MethodBeforeAdviceInterceptor should implement BeforeAdvice marker [SPR-17088] #21625 - Classification of ClassCastExceptions doesn't work in JDK 11 (OpenJDK) [SPR-17093] #21630 - Revise BeanFactory vs ApplicationContext section in reference docs [SPR-17095] #21632 - SchedulerAccessor needs to catch primary key violation on reschedule (due to Quartz race condition) [SPR-17114] #21651 - InitializingBean/DisposableBean javadoc should not just refer to singletons [SPR-17131] #21668 - CheckboxTag incorrectly processing hidden field through RequestDataValueProcessor [SPR-17147] #21684 - `@Scheduled` task runs twice on bean with target-class scoped proxy (when injected) [SPR-17166] #21702 - Consistent warn logging for handled exceptions [SPR-17178] #21714 - Removed Jackson view property ""renderedAttributes"" still mentioned in Spring Framework docs [SPR-17182] #21718 - SimpleAliasRegistry.hasAlias does not properly resolve multiple chained aliases [SPR-17191] #21726 - Support both filters and views in AbstractJackson2HttpMessageConverter [SPR-17209] #21742 - Compiled elvis operator does not work correctly when default value is a complex expression [SPR-17214] #21747 - Documentation for `@Transactional` timeout (in seconds) [SPR-17226] #21759 - EL1072 when evaluating compiled expression using method SpelExpression.getValue(Object rootObject, Class\ expectedResultType) [SPR-17229] #21762","closed","","spring-projects-issues","2019-01-10T22:05:13Z","2019-01-14T03:20:10Z"
"","22232","4.3.13 Backported Issues","- Doc: ControllerAdvice `@ExceptionHandler` matching for root vs cause in multi-advice scenario [SPR-16074] #20623 - Improve documentation of lite configuration mode [SPR-16076] #20625 - Clarify Bean destroyMethod documentation [SPR-16078] #20627 - Checkbox/RadioButton incorrectly converts collections of enums with a custom converter [SPR-16082] #20631 - `@ModelAttribute` binding defined globally for particular attribute rather than per method invocation [SPR-16083] #20632 - Prevent WebSocket buffer overflow through application-level flow control [SPR-16089] #20638 - SchedulingConfigurer and JmsListenerConfigurer should respect `@Order` [SPR-16090] #20639 - Doc: `@Async` in an Interceptor postHandle() doesn't work [SPR-16092] #20641 - Avoid temporary String creation in StringUtils.starts/endsWithIgnoreCase [SPR-16095] #20644 - WebSphereUowTransactionManager swallows original exception when commit fails for another reason [SPR-16102] #20650 - Incorrectly identify bridged method on interface [SPR-16103] #20651 - Compatibility with OpenPDF as alternative to iText 2.1.7 [SPR-16107] #20655 - Incorrect SpEL example in reference documentation [SPR-16111] #20659 - PathMatchingResourcePatternResolver returns duplicate resources when using classpath* prefix [SPR-16117] #20665 - SpEL method invocation with varargs on proxy [SPR-16122] #20670 - AbstractRequestExpectationManager fails with ""Expectations already declared"" when ResponseCreator.createResponse throws an exception [SPR-16132] #20680 - MockHttpServletRequest with Host: set builds wrong getRequestURL() [SPR-16138] #20686 - Field name is used to match on bean name when `@Autowired` matches several beans by type [SPR-16142] #20690 - ClassPathResource.createRelative is using wrong ClassPathResource constructor for the returned resource [SPR-16146] #20694 - Early ApplicationContext close call may lead to ApplicationEventMulticaster/LifecycleProcessor access exception [SPR-16149] #20697 - When using NamedParameterJdbcTemplate, NVARCHAR or NCLOB(4000 characters or less) columns are not properly populated since StatementCreatorUtils does setString for these types instead of setNString. [SPR-16154] #20702 - MockHttpServletResponse.getDateHeader fails with NPE for non-existing header [SPR-16160] #20708 - Make JpaVendorAdapters JTA-aware (in particular for Hibernate 5.1/5.2) [SPR-16162] #20710 - Reduce access on headers for STOMP messaging [SPR-16165] #20713 - spring-jdbc : Improve memory allocations when substituting named parameters. [SPR-16170] #20718 - Explicitly document UriTemplate as thread-safe [SPR-16173] #20721 - NumberFormatException caused by property paths from JSR-303 based validation with no index into a collection [SPR-16177] #20725 - Wrong byte code for compiled SpEL when JDK proxy method invocation is used [SPR-16191] #20739 - Document common use cases for `@Order` vs `@Priority` vs `@DependsOn` [SPR-16213] #20761 - Deprecate Castor support [SPR-16219] #20767","closed","","spring-projects-issues","2019-01-10T22:05:06Z","2019-01-14T03:21:20Z"
"","22227","4.2.7 Backported Issues","- Doc. Unable to use bean() PCD to define a Pointcut in Aspect created by using annotation `@Aspect` [SPR-13535] #18111 - Doc: `@Transactional` on private methods with aspectj mode [SPR-13843] #18416 - Doc: Different behavior for `@Named` and `@Component` [SPR-14087] #18659 - Reference Documentation: Why does not exist an XML configuration version for `@Async`? [SPR-14164] #18736 - Meta-`@Conditional` lookup does not work consistently with ASM [SPR-14257] #18829 - Memory leak on STOMP broker connections that fail before heartbeats start [SPR-14266] #18838 - markBeanAsCreated does not clear merged bean definition in a thread-safe fashion [SPR-14269] #18841 - Doc: `@Component` bean auto naming working differently for two capital letter start [SPR-14272] #18844 - SimpleBrokerMessageHandler makes an assertion about the type of the MessageHeaderAccessor, but doesn't seem to care [SPR-14279] #18851 - Clarify `@Bean`(autowire=NO) [SPR-14282] #18854 - Label ""for"" attribute is wrongly documented as required [SPR-14287] #18859 - `@Bean` not detected in extended interface [SPR-14288] #18860 - StringIndexOutOfBoundsException when calling BeanWrapperImpl.setPropertyValue(""[']"", ""foobar"") [SPR-14293] #18865 - SettableListenableFuture.setException(Throwable) doesn't work for Error [SPR-14298] #18870 - Spring Web should process requests with empty/invalid mime type [SPR-14309] #18881 - Cannot put  inside  [SPR-14311] #18883 - Consistent Error handling in MessageChannel implementations [SPR-14323] #18895 - After-completion callback not triggered for custom Throwable subclass [SPR-14329] #18901 - EventListenerMethodProcessor resolves classes (by MethodIntrospector) of lazy beans causing NoClassDefFoundError [SPR-14330] #18902 - Race condition in handling of `@Lookup` annotation [SPR-14333] #18905 - AllEncompassingFormHttpMessageConverter ignores JAXB XML when Jackson used for JSON [SPR-14336] #18908 - Different error codes on same formatter registered in different ways [SPR-14345] #18917 - Allow method inlining of ObjectUtils.nullSafeEquals() [SPR-14349] #18921 - SockJs heartbeat during message send closes socket [SPR-14356] #18928 - Upgrade to CGLIB 3.2.4 [SPR-14385] #18958 - Deadlock while creating a new thread on bean initialization with transactional code invocation [SPR-14388] #18961 - Improve error handling when resolving message payloads [SPR-14394] #18967 - Ambiguous sentence in the cache documentation [SPR-14399] #18017 - Cache infrastructure using AspectJ is not properly configured [SPR-14413] #18984 - Add missing package-info files for common packages [SPR-14420] #18991 - Return type implementing DeferredResult is rejected with exception [SPR-14423] #18994","closed","","spring-projects-issues","2019-01-10T22:04:44Z","2019-01-14T03:22:02Z"
"","22236","4.3.18 Backported Issues","- Deprecate JSONP support and update MappingJackson2JsonView defaults [SPR-16798] #21338 - Incorrect Java Syntax in Spring Framework Documentation [SPR-16811] #21351 - Process cannot exit when the SchedulerFactoryBean fails to initialize [SPR-16816] #21356 - Connection acquired while calling a stored procedure via JPA is not released [SPR-16826] #21366 - Restrict allowed HTTP methods in HiddenHttpMethodFilter [SPR-16836] #21376 - Confusing javadoc in YamlProcessor.setDocumentMatchers [SPR-16849] #21389 - Spring MVC: `@EnableScheduling` needs to be redeclared for each application context [SPR-16852] #21392 - Spring WebSocket: Indicate Stomp disconnect event would be executed twice [SPR-16861] #21400 - AbstractRequestLoggingFilter.isIncludeHeaders() is accidentally public [SPR-16881] #21420 - ReflectivePropertyAccessor should cache sorted methods [SPR-16882] #21421 - Fix faulty BeanPostProcessorChecker logs with `@EnableCaching` [SPR-16896] #21435 - AbstractMethodMessageHandler does not rethrow Errors [SPR-16912] #21451 - Javadoc for FunctionReference mentions SpEL Lambdas [SPR-16930] #21469 - `@PathVariable`'s javadoc wrongly states it supports MultiValueMaps [SPR-16936] #21475","closed","","spring-projects-issues","2019-01-10T22:05:12Z","2019-01-14T03:20:34Z"
"","22235","5.0.10 Backported Issues","- DataBufferUtils does not release DataBuffer on error cases [SPR-16782] #21322 - Typo on ServletUriComponentsBuilder javadoc comments [SPR-17255] #21788 - UriComponentsBuilder.uriComponents doesn't properly clone unmodifiable queryParams [SPR-17256] #21789 - Javadoc for BufferingClientHttpRequestFactory is missing the end of a sentence [SPR-17261] #21794 - MockHttpServletResponse doesn't propagate Content-Language response header [SPR-17284] #21817 - Concurrency Exception during bean configuration related to not thread safe getBeanPostProcessor access [SPR-17286] #21819 - Support for removeHeader in MockHttpServletRequest [SPR-17295] #21828 - Misleading description in Autowired javadoc [SPR-17299] #21832 - Unnecessary sort in AbstractApplicationEventMulticaster [SPR-17307] #21840 - Sanity checks for HTTP range requests [SPR-17318] #21851 - HTTP 404 for static resources with last modified = 0L (breaks Docker images build with Jib) [SPR-17320] #21853 - ApplicationListener is missing from Collection returned by getApplicationListeners() if it was added after the multicaster was initialised [SPR-17324] #21858 - HeaderResultMatchers susceptible to slight variations in the date format [SPR-17330] #21864 - ServerWebInputException is throw each time Http request with mandatory request parameters is handled. [SPR-17338] #21872 - Integer overflow while uploading big files (> 2.1 GB) using webflux [SPR-17345] #21879 - AnnotationMetadata.getAnnotationAttributes inconsistency for empty array in ASM implementation [SPR-17347] #21881 - MockAsyncContext not found. Did request wrapper not delegate startAsync? [SPR-17353] #21887 - Comparators.nullsLow creates wrong kind of NullSafeComparator [SPR-17357] #21891 - DateTimeFormat Javadoc is not correct [SPR-17366] #21899 - MethodValidationPostProcessor validates FactoryBean methods for which validation is not applicable [SPR-17374] #21907","closed","","spring-projects-issues","2019-01-10T22:05:40Z","2019-01-14T03:20:43Z"
"","22203","4.0.8 Backported Issues","- ContextLoaderServlet is mentioned in doc, but does not exist [SPR-7725] #12381 - Log warning for single optional constructor when no default constructor to fall back to [SPR-12161] #16775 - XML bean singleton attribute silently ignored [SPR-12167] #16781 - SocketUtils should not be an abstract class [SPR-12169] #16783 - HttpHeaders should accept empty Content-Type header [SPR-12173] #16787 - Regression: Slow TypeDescriptor lookups in CachedIntrospectionResults on IBM JVM 6 [SPR-12185] #16799 - Java 8 bridge method handling can lead to false positive detection of autowired annotations [SPR-12187] #16801 - Scheduled/JmsListenerAnnotationBeanPostProcessor needlessly scans every scoped instance [SPR-12189] #16803 - `@Qualifier` resolution fails with Spring Batch parent/child context arrangement [SPR-12191] #16805 - Spring HTTP clients do not enforce RFC 6265 (cookies in a single header) [SPR-12196] #16810 - Make MockRestServiceServer error messages more descriptive [SPR-12230] #16845 - NPE in DirectFieldAccessorTests with latest jdk8u40 [SPR-12235] #16850 - WebSocketMessageBrokerConfigurationSupport requiring JDK 7+ due to setRemoveOnCancelPolicy [SPR-12238] #16852 - Further locking optimizations for the retrieval of non-singleton beans [SPR-12250] #16864 - org.springframework.context.support.LiveBeansView.generateJson(Set\) generates invalid JSON when resources already double-quoted [SPR-12252] #16866 - Web Async responses force concurrentResult.toString() call [SPR-12253] #16867 - Update default SockJS CDN [SPR-12254] #16868 - Tracking ASM 5.0.4 development [SPR-12255] #16869 - condition vs. conditional typo in `@Cacheable` reference documenation [SPR-12273] #16878 - Duplicate entries in ResolvableType cache [SPR-12275] #16880 - DataSourceTransactionManager closes JDBC connection on doBegin failure but leaves it attached to transaction object [SPR-12280] #16885 - Provider<...> declaration for `@Value` method argument fails with TypeMismatchException [SPR-12297] #16903 - TextMessage.toString() throws StringIndexOutOfBoundsException if payload contains multibyte characters [SPR-12307] #16912 - Private `@Scheduled` methods end up on 'empty' proxy instance in case of CGLIB auto-proxying [SPR-12308] #16913 - AnnotationUtils provides poor diagnostics if getDeclaredAnnotations throws an exception [SPR-12325] #16930 - Regression: Commons Logging setup in AnnotationUtils causes early initialization of logging system [SPR-12329] #16934 - ServerEndpointExporter causes refresh to fail with java.lang.IllegalStateException: javax.websocket.server.ServerContainer not available [SPR-12340] #16945 - Directory traversal with static resource handling (CVE-2014-3625) [SPR-12354] #16959 - Tiles 2.x: TilesConfigurer NPE when no definitions found [SPR-12362] #16967 - ResponseStatusExceptionResolver does not get a MessageSource injected in the MVC Java config [SPR-12380] #16987 - Improve diagnostics when AnnotationAttributesReadingVisitor triggers an ArrayStoreException from Class.getAnnotations() [SPR-12387] #16995 - TimerTaskExecutor wasn't removed from documentation [SPR-12389] #16997 - ConfigurationClassUtils fails to introspect inner classes with dot name syntax (and silently ignores it) [SPR-12390] #16998 - PersistenceAnnotationBeanPostProcessor should check for PersistenceContext.synchronization method instead of synchronizationType [SPR-12396] #17004 - HIbernateJpaSessionFactory only works for hibernate < 4.3 [SPR-12401] #17009 - task:executor keep-alive not explained in documentation [SPR-12407] #17015 - Log context cache statistics in the TestContext framework [SPR-12409] #17017 - ShallowEtagHeaderFilter is not Servlet 2.5 compatible [SPR-12414] #17022 - StompDecoder StringIndexOutOfBoundsException with Apache ActiveMQ [SPR-12418] #17025 - Java 8 introspection causes breakage with FreeMarker Configuration bean [SPR-12448] #17053","closed","","spring-projects-issues","2019-01-10T22:04:15Z","2019-01-14T03:22:47Z"
"","22204","3.2.12 Backported Issues","- ContextLoaderServlet is mentioned in doc, but does not exist [SPR-7725] #12381 - Log warning for single optional constructor when no default constructor to fall back to [SPR-12161] #16775 - HttpHeaders should accept empty Content-Type header [SPR-12173] #16787 - Scheduled/JmsListenerAnnotationBeanPostProcessor needlessly scans every scoped instance [SPR-12189] #16803 - `@Qualifier` resolution fails with Spring Batch parent/child context arrangement [SPR-12191] #16805 - Spring HTTP clients do not enforce RFC 6265 (cookies in a single header) [SPR-12196] #16810 - Make MockRestServiceServer error messages more descriptive [SPR-12230] #16845 - Further locking optimizations for the retrieval of non-singleton beans [SPR-12250] #16864 - org.springframework.context.support.LiveBeansView.generateJson(Set\) generates invalid JSON when resources already double-quoted [SPR-12252] #16866 - Web Async responses force concurrentResult.toString() call [SPR-12253] #16867 - DataSourceTransactionManager closes JDBC connection on doBegin failure but leaves it attached to transaction object [SPR-12280] #16885 - Provider<...> declaration for `@Value` method argument fails with TypeMismatchException [SPR-12297] #16903 - Private `@Scheduled` methods end up on 'empty' proxy instance in case of CGLIB auto-proxying [SPR-12308] #16913 - Directory traversal with static resource handling (CVE-2014-3625) [SPR-12354] #16959 - Tiles 2.x: TilesConfigurer NPE when no definitions found [SPR-12362] #16967 - ResponseStatusExceptionResolver does not get a MessageSource injected in the MVC Java config [SPR-12380] #16987 - ConfigurationClassUtils fails to introspect inner classes with dot name syntax (and silently ignores it) [SPR-12390] #16998 - Log context cache statistics in the TestContext framework [SPR-12409] #17017","closed","","spring-projects-issues","2019-01-10T22:03:51Z","2019-01-14T03:22:45Z"
"","22214","4.2.8 Backported Issues","- Constructor sets the source incorrectly in org.springframework.beans.PropertyValue [SPR-8337] #12985 - ConfigurationClassParser needs to load annotations through source class loader [SPR-10343] #14977 - Regression: Insert statement fails with inconsistent datatypes on Oracle 12c driver [SPR-14191] #18764 - When I try to acquire MD5 using DigestUtils, java.lang.OutOfMemoryError occurs. [SPR-14427] #18998 - Avoid canonicalName call for already-seen bean name [SPR-14433] #19004 - SSE: Terminating chunk not sent using tomcat >= 8.0.35 [SPR-14444] #19014 - `@RequestMapping` consumes/produces InvalidMediaTypeException should mention offending class & method [SPR-14452] #19021 - MethodBasedEvaluationContext.lazyLoadArguments() execution fails for empty variable arguments call [SPR-14453] #19022 - UrlPathHelper in PathExtensionContentNegotiationStrategy should be configurable [SPR-14454] #19023 - CronSequenceGenerator causes StackOverflowError with reversed range values [SPR-14462] #19031 - Ineffective synchronization in StandardTypeConverter constructor [SPR-14465] #19034 - MessageHeaderAccessor doesn't remove headers if they are null [SPR-14468] #19037 - ResourcePatternUtils.getResourcePatternResolver does not accept null arg [SPR-14500] #19069 - LinkedCaseInsensitiveMap doesn't override HashMap.clone() [SPR-14509] #19078 - Do not fail with a circular `@Import` error caused by an `@ComponentScan` [SPR-14517] #19086 - Avoid JNDI property lookup attempts for invalid JNDI keys [SPR-14518] #19087 - StackOverflowError for advisor search against factory-bean reference to FactoryBean [SPR-14551] #19119 - ArrayIndexOutOfBoundsException in MethodBasedEvaluationContext [SPR-14554] #19122 - SockJS heartbeat is causing  application send Message to fail similar to (SPR-14356) [SPR-14564] #19133 - StompSubProtocolHandler responds with ERROR (Session closed.) on DISCONNECT when using SimpleBrokerMessageHandler [SPR-14568] #19137 - Avoid repeated getParameterType calls for setNull with Oracle 12c driver [SPR-14574] #19143 - NoHandlerFoundException is mapped to 404 twice [SPR-14598] #19167 - Improve performance of assertion in StompSubProtocolHandler [SPR-14624] #19191 - Fix assertions in StompHeaderAccessor [SPR-14625] #19192 - Protect against getParameterType cursor leak with Oracle 12c JDBC driver [SPR-14629] #19196 - Improve performance of StompCommand.getMessageType() [SPR-14636] #19203 - CommonsMultipartResolver should explicitly convert FileSizeLimitExceededException next to SizeLimitExceededException [SPR-14638] #19204 - ResolvableType for a raw type is not assignable to generic types of the same class [SPR-14648] #19214 - TypeConverterSupport does not propagate custom exceptions anymore [SPR-14661] #19225 - Default async request timeout handling does not work with Jetty 9.x [SPR-14669] #19233 - Better Exception Message for JMS Jackson Converter Error [SPR-14672] #19236 - AbstractPollingMessageListenerContainer's workaround for Tibco causes performance delays during ems failover [SPR-14697] #19261 - NPE during websocket disconnect [SPR-14703] #19268 - StringUtils.parseLocaleString(): does not parse locale string in java 7 for Serbian (Latin) [SPR-14718] #19283 - exception during websocket client close [SPR-14721] #19286 - ScriptTemplateView should check template resource [SPR-14729] #19294","closed","","spring-projects-issues","2019-01-10T22:04:46Z","2019-01-14T04:03:46Z"
"","22215","3.2.18 Backported Issues","- Constructor sets the source incorrectly in org.springframework.beans.PropertyValue [SPR-8337] #12985 - Clarify `@Bean`(autowire=NO) [SPR-14282] #18854 - Label ""for"" attribute is wrongly documented as required [SPR-14287] #18859 - ObjectToObjectConverter should be able to use constructors on non-public classes [SPR-14304] #18876 - Async advisor retrieval blocks when triggered by singleton init method [SPR-14324] #18896 - Allow method inlining of ObjectUtils.nullSafeEquals() [SPR-14349] #18921 - Doc: SpEL behavior when comparing value to null [SPR-14361] #18933 - Deadlock while creating a new thread on bean initialization with transactional code invocation [SPR-14388] #18961 - Ambiguous sentence in the cache documentation [SPR-14399] #18017 - CronSequenceGenerator causes StackOverflowError with reversed range values [SPR-14462] #19031 - Ineffective synchronization in StandardTypeConverter constructor [SPR-14465] #19034 - ResourcePatternUtils.getResourcePatternResolver does not accept null arg [SPR-14500] #19069 - LinkedCaseInsensitiveMap doesn't override HashMap.clone() [SPR-14509] #19078 - StackOverflowError for advisor search against factory-bean reference to FactoryBean [SPR-14551] #19119 - StringUtils.parseLocaleString(): does not parse locale string in java 7 for Serbian (Latin) [SPR-14718] #19283 - Normalize resource URL in ResourceServlet [SPR-14946] #19513 - Concurrency problem in DeferredResult: potential double execution of handleResult [SPR-14978] #19544 - SpEL and Date Literals [SPR-14987] #19553 - MBeanExporter fails against null beans [SPR-15031] #19598","closed","","spring-projects-issues","2019-01-10T22:03:59Z","2019-01-14T03:22:24Z"
"","22225","4.1.8 Backported Issues","- ConcurrentModificationException when doing a merge on AbstractEnvironment [SPR-13213] #17805 - PathResourceResolver should not resolve ""/"" as a JAR resource [SPR-13241] #17832 - Make AbstractFallbackTransactionAttributeSource.computeTransactionAttribute(…) protected [SPR-13246] #17837 - PropertyOrFieldReference throws ClassCastException [SPR-13247] #17838 - Doc: Clarify AUTO_ACKNOWLEDGE semantics with SimpleMessageListenerContainer [SPR-13278] #17869 - Race condition when inbound message handling fails and StompSubProtocolHandler sends ERROR frame [SPR-13326] #17911 - Avoid ambiguous property warning for setter methods with multiple parameters [SPR-13349] #17933 - Regression: SpringHandlerInstantiator breaks stand-alone support in the MVC Test framework [SPR-13375] #17957 - Support for last-modified resolution in Tomcat's unpackwar=false mode [SPR-13393] #17434 - ScopedProxyMode resolution for custom scope meta-annotation not working with `@Bean` methods (with ASM-based scanning) [SPR-13394] #17974 - Misleading note on readonly and disabled flags in spring-form.tld [SPR-13397] #17977 - StompDecoder fails for partial headers containing escape sequence [SPR-13416] #17995 - ConcurrentModificationException in SingleConnectionFactory$AggregatedExceptionListener [SPR-13421] #18000 - ClasspathXmlApplicationContext cannot be closed twice [SPR-13425] #18004 - MessagingException should not provide empty description String to NestedRuntimeException [SPR-13447] #18027 - DeferredResult not thread-safe for isSetOrExpired call [SPR-13451] #18031 - ConcurrentMapCache.putIfAbsent doesn't support null values [SPR-13458] #18038 - AbstractEmbeddedDatabaseConfigurer.shutdown does not close JDBC resources [SPR-13474] #18053 - YamlProcessor subclasses can no longer instantiate StrictMapAppenderConstructor [SPR-13504] #18082 - Documentation for Portlet MVC does not refer to Portlet 2.0 spec (JSR-286) [SPR-13513] #18090 - PathResourceTests.lastModified() fails on Linux [SPR-13542] #18118 - Null Pointer when receiving an invalid transport type during SockJS request [SPR-13545] #18121 - Protect against RFD exploits [SPR-13548] #18124 - Consistently detect spring-beans.dtd reference [SPR-13549] #18125 - Dispel the myth that Spring MVC Test only works with JUnit [SPR-13552] #18128 - JCacheCache doesn't recognize null values in other JVMs [SPR-13553] #18129 - DefaultSubscriptionRegistry loses track of subscribers in its cache [SPR-13555] #18131 - Close processing triggered by shutdown hook isn't thread safe [SPR-13556] #18132 - Clarify whether HttpInputMessage.getBody() is allowed to return null [SPR-13563] #18139 - Compatibility with GlassFish 4.1.1 / Tyrus 1.12 [SPR-13566] #18142","closed","","spring-projects-issues","2019-01-10T22:04:30Z","2019-01-14T03:22:06Z"
"","22226","3.2.15 Backported Issues","- ConcurrentModificationException when doing a merge on AbstractEnvironment [SPR-13213] #17805 - Doc: Clarify AUTO_ACKNOWLEDGE semantics with SimpleMessageListenerContainer [SPR-13278] #17869 - Avoid ambiguous property warning for setter methods with multiple parameters [SPR-13349] #17933 - Misleading note on readonly and disabled flags in spring-form.tld [SPR-13397] #17977 - DeferredResult not thread-safe for isSetOrExpired call [SPR-13451] #18031 - AbstractEmbeddedDatabaseConfigurer.shutdown does not close JDBC resources [SPR-13474] #18053 - Documentation for Portlet MVC does not refer to Portlet 2.0 spec (JSR-286) [SPR-13513] #18090 - Protect against RFD exploits [SPR-13548] #18124 - JCacheCache doesn't recognize null values in other JVMs [SPR-13553] #18129 - Backport corrected ContentNegotiationManager reference in MVC chapter [SPR-13558] #18134 - Clarify whether HttpInputMessage.getBody() is allowed to return null [SPR-13563] #18139","closed","","spring-projects-issues","2019-01-10T22:03:55Z","2019-01-14T03:22:04Z"
"","22200","3.0.7 Backported Issues","- CollectionsToCollectionsConverter no longer handles java.util.Collections$EmptyList -> java.util.Collections$EmptyList [SPR-7293] #11952 - `@Transactional` with qualifier can't find PlatformTransactionManager defined in parent context [SPR-7679] #12335 - ResourceHttpRequestHandler shouldn't return 404 when mime-type of existing resource can't be determined (and maybe try harder) [SPR-7713] #12369 - CollectionToCollectionConverter does not convert if the source is empty [SPR-7728] #12384 - Setting ""file-encoding"" attribute in a ""context:property-placeholder"" element in spring xml configuration doesn't work [SPR-8024] #12679 - Exception during SpringSessionSynchronization.aftercompletion() results in IllegalStateException/SessionHolder never unbound from thread [SPR-8757] #13399 - Using DataBinder with an auto-growing list is broken [SPR-8828] #13470 - PortletUtils.getSessionMutex() needs to use APPLICATION_SCOPE [SPR-8888] #13529","closed","","spring-projects-issues","2019-01-10T22:03:20Z","2019-01-14T03:22:50Z"
"","22206","4.3.15 Backported Issues","- Clarify that RestTemplate registers an AllEncompassingFormHttpMessageConverter by default [SPR-7885] #12541 - Spring Websockets Broker relay supporting a cluster of STOMP endpoint addresses [SPR-12452] #17057 - Spring MVC and AOP: `@EnableAspectJAutoProxy` needs to be redeclared for each application context [SPR-14753] #19319 - Precondition failed for PUT methods on ResponseEntity return types [SPR-15780] #20335 - Doc: Spring AOP dependency on aspectjweaver [SPR-15801] #20356 - Doc: ReloadableResourceBundleMessageSource's setUseCodeAsDefaultMessage causes the ValidationMessages.properties to not be found and used correctly [SPR-15986] #20536 - SubProtocolWebSocketHandler should not log ERROR on ""No messages received after ..."" [SPR-16409] #20955 - ServletServerHttpRequest.getURI() may throw a java.net.URISyntaxException [SPR-16414] #20960 - AbstractClientSockJsSession.close call does not propagate IOException from disconnect [SPR-16415] #20961 - Spurious WARNINGs when XML declared TransactionProxyFactoryBean's target bean depends on an annotation declared bean that depends on another bean [SPR-16427] #20973 - Doc: hibernate.dialect_resolvers vs HibernateJpaVendorAdapter.setDatabase [SPR-16428] #20974 - Lambda error detection might not work on JDK 9 [SPR-16435] #20981 - Quartz Scheduler - configurable SchedulerFactory [SPR-16439] #20985 - CachingConnectionFactory - Invalid session in session cache [SPR-16450] #20995 - MockMvcRequestBuilder does not decode pathInfo [SPR-16453] #20998 - Avoid String concatenation for not-null assertion in BeanProperty/DirectFieldBindingResult [SPR-16455] #21000 - AcceptHeaderLocaleResolver should match country locales against supported language locales [SPR-16457] #21002 - MimeType compareTo implementation is not compatible with equals [SPR-16458] #21003 - GSON converter only serialises fields of controller method return type, ignoring subclass fields of response object [SPR-16461] #21006 - Doc: `@Transactional`.isolation does not guarantee the specified isolation level [SPR-16463] #21008 - SimpleJdbcCall can't access synonyms in Oracle database [SPR-16478] #21022 - Set thread interrupt flag on InterruptedException [SPR-16479] #21023 - JsonMappingException when trying to instantiate org.springframework.messaging.Message [SPR-16486] #21029 - Doc: AbstractMessageListenerContainer rejecting messages on shutdown causes message loss in AUTO_ACK mode [SPR-16487] #21030 - Deadlock in SubProtocolWebSocketHandler on shutdown with Undertow [SPR-16488] #21031 - NPE in Spring-JDBC with Oracle and SimpleJdbcInsert [SPR-16495] #21038 - ExceptionHandlerExceptionResolver advice applicability check may fail against interface-based controller proxy [SPR-16496] #21039 - FormTag renders empty \ tag [SPR-16498] #21041 - ForwardedHeaderFilter garbles query params during sendRedirect() [SPR-16506] #21049 - StringIndexOutOfBoundsException when rewriting links in CSS resources [SPR-16526] #21069 - Spurious ERROR-level logging when using SSEEmitter [SPR-16528] #21071 - GsonHttpMessageConverter cannot be used in an SseEmitter because it closes the response stream [SPR-16529] #21072 - testBindInstantFromJavaUtilDate fails on systems in the Pacific/Auckland time zone [SPR-16534] #21077 - Support for ResolvableType.getType().getTypeName() on Java 8 [SPR-16535] #21078 - WebApplicationContextFacesELResolver#isReadOnly always return false [SPR-16543] #21086 - Incorrect description for class-level `@Transactional` with AspectJ [SPR-16552] #21095 - PostgresTableMetaDataProvider.isGetGeneratedKeysSimulated() does not detect Postgres 10 [SPR-16556] #21099 - Consistent incrementer arrangement for PostgreSQL, DB2 and SAP HANA [SPR-16558] #21101 - Missing PersistenceException cause message in refresh failure warn log [SPR-16559] #21102 - Reading annotations in ConfigurationClassParser does not fall back to ASM on Google App Engine [SPR-16564] #21106 - Inconsistent synchronization in AbstractBeanFactoryBasedTargetSource and JdbcAccessor [SPR-16570] #21112 - WebAsyncManager concurrentResult should be volatile [SPR-16571] #21113 - TransactionTemplate inherits equals()/hashCode() from DefaultTransactionDefinition [SPR-16572] #21114 - SimpleAliasRegistry registerAlias not atomic [SPR-16577] #21119 - URIEditor should not double escape classpath: URIs [SPR-16581] #21123 - RestTemplate with HttpComponentsClientHttpRequestFactory and no buffering with an interceptor throws UnsupportedOperationException [SPR-16582] #21124 - Inconsistent handling of null values through Java 8 accessors in ConcurrentReferenceHashMap [SPR-16584] #21126 - MockMvcResultMatchers.jsonPath(String).value() should have a matching method to declare the expected type [SPR-16587] #21129 - Support for SimpleEvaluationContext in SpEL [SPR-16588] #21130 - Doc: `@PropertySource` meta-annotation not detected next to direct annotation [SPR-16592] #21134 - Consistent volatile access to running flag in Lifecycle implementations [SPR-16596] #21137 - AcceptHeaderLocaleResolver chooses wrong Locale for language match [SPR-16599] #21140 - Doc: `@Scope` not inherited from base class [SPR-16602] #21143 - CallMetaDataContext.reconcileParameters doesn't catch output parameters with DatabaseMetaData.procedureColumnResult type (on Postgres) [SPR-16611] #21152 - Clean duplicate slash and backslash in resource URLs [SPR-16616] #21157 - Consistent thread-safe iteration in DefaultSingletonBeanRegistry [SPR-16620] #21161 - FactoryBeanRegistrySupport atomicity issues [SPR-16625] #21166 - Address race condition within spring that causes about-to-be-created-bean exceptions [SPR-16627] #21168 - When `@DependsOn` throws a NoSuchBeanDefinitionException it should include the dependent bean for clarity [SPR-16628] #21169 - An error occurs if a blank character exists before and after the delimiter of the MIME type parameter. [SPR-16630] #21171 - Generate multipart boundary using SecureRandom  [SPR-16635] #21176 - Multipart Upload with Commons Fileupload on lazy mode downloads data on cleanup [SPR-16640] #21181 - Concurrent result may be missed due to a race condition in MockMvc [SPR-16648] #21189 - ServletUriComponentsBuilder should replace context path when X-Forwarded-Prefix is present [SPR-16650] #21191 - Annotation lookup on parameter in inner class constructor fails when using javac from JDK versions prior to 9 [SPR-16652] #21193 - Incorrect Javadocs for ReflectionUtils.doWithLocalFields [SPR-16658] #21199 - UriComponentsBuilder Forwarded header parsing can throw java.lang.NumberFormatException [SPR-16660] #21201 - NamedParameterUtils.parseSqlStatement should parse :{x} style parameter correctly [SPR-16663] #21204 - Reduce ClassUtils.forName overhead (in particular for annotation introspection purposes) [SPR-16667] #21208 - Unable to bind a null value for UUID column with PostgreSQL [SPR-16669] #21210 - SimpleMailMessage's handling of to/cc/bcc arrays is inconsistent [SPR-16671] #21212 - Add cpp to mime.types as text/plain [SPR-16678] #21219","closed","","spring-projects-issues","2019-01-10T22:05:09Z","2019-01-14T03:22:41Z"
"","22220","3.2.5 Backported Issues","- Cannot override singleton with scoped proxy [SPR-10744] #15370","closed","","spring-projects-issues","2019-01-10T22:03:43Z","2019-01-14T03:22:15Z"
"","22218","4.1.9 Backported Issues","- Allow setting custom ClassPathBeanDefinitionScanner on AnnotationConfigWebApplicationContext [SPR-9324] #13962 - Fix cron trigger example in reference documentation [SPR-10474] #15107 - SpEL compiler creating bad byte code for some values that are added together via OpPlus [SPR-12426] #17032 - Revisit remaining XmlBeanFactory usage in reference documentation [SPR-13485] #18064 -  does not reliably find declared ContentNegotiationManager [SPR-13559] #18135 - Content-Disposition header causes download in browser for Spring Boot Actuator endpoints [SPR-13587] #18164 - Skip Content-Disposition header when status != 2xx [SPR-13588] #18165 - AbstractJdbcCall's compiled variable should be declared as volatile [SPR-13617] #18195 - webjars resource handling may run into NPE in JarURLInputStream [SPR-13620] #18198 - Avoid NPE for anonymous SqlParameter in CallMetaDataContext [SPR-13628] #18206 - Content-Disposition added for `@ResponseBody` methods explicitly mapped to "".html"" or other extensions [SPR-13629] #18207 - Content-Disposition with fixed file name ""f.txt"" causes confusion [SPR-13643] #18220 - SerializableTypeWrapper.MethodInvokeTypeProvider can be exploited for unsafe deserialization [SPR-13656] #18232 - CommonsMultipartFile.getOriginalFilename() does not strip file path properly [SPR-13662] #18237 - Revisit BeansException warn logging after startup failure [SPR-13663] #18238 - Error in RequestEntity\'s javadoc [SPR-13666] #18241 - AbstractApplicationContext.isRunning throws IllegalStateException when called too early [SPR-13667] #18242 - Implement containsKey for HttpHeaders returned from ServletServerHttpResponse [SPR-13668] #18243 - SimpAnnotationMethodMessageHandler fails when no applicationDestinationPrefixes configured or Rabbit endpoint present [SPR-13704] #18279 - CssLinkResourceTransformer is incompatible with FixedVersionStrategy VersionResourceResolver [SPR-13727] #18300 - Doc: Scope.registerDestructionCallback may get called for inner beans [SPR-13739] #18312 - BeanFactoryAnnotationUtils.qualifiedBeanOfType should not instantiate all beans of given type before checking qualifier [SPR-13741] #18314 - SubProtocolWebSocketHandler does not update lastSessionCheckTime [SPR-13745] #18318 - Cacheable#key should define the available arguments [SPR-13746] #18319 - The URL content negotiation ""format"" parameter values are case sensitive and only lowercase values are accepted [SPR-13747] #18320 - Formatting error in AOP documentation [SPR-13750] #18323 - MockHttpServletResponse.setIntHeader throws exception for 'Content-Length' header [SPR-13752] #18325 - Documentation is missing for sendTimeLimit bufferSizeLimit for ConcurrentWebSocketSessionDecorator [SPR-13753] #18326 - Second call to MVC handler method with Optional parameter fails with argument type mismatch [SPR-13755] #18328 - ResourceUrlEncodingFilter improperly encodes URLs on root page [SPR-13757] #18330 - ControllerAdviceBean javadoc is inconsistent with its implementation [SPR-13759] #18332 - allowed-origins are not resolved from properties variables [SPR-13760] #18333 - Inefficient and inconsistent setAllowedOrigins collection types in AbstractSockJsService/OriginHandshakeInterceptor [SPR-13761] #18334 - Configure view controllers with the ApplicationContext [SPR-13762] #18335 - AbstractRequestLoggingFilter with startAsync: unwrap request to find ContentCachingRequestWrapper  [SPR-13764] #18338 - Fix Javadoc for Jackson2ObjectMapperFactoryBean [SPR-13765] #18339 - MessagingMessageListenerAdapter provides a BytesMessage that has already been read [SPR-13769] #18343 - Support for Microsoft SQL Server driver version 4 and above [SPR-13772] #18346 - Allow for setting TTL on a response sent by `@JmsListener` [SPR-13774] #18348 - VerifyError when trying to compile constructor invocation with SpEL [SPR-13781] #18355 - Jdbc4SqlXmlHandler should return null as documented (instead of throwing NPE) [SPR-13782] #18356 - Defensive error reporting when ConfigurationClassParser introspects declared methods via StandardAnnotationMetadata [SPR-13791] #18364 - VersionResourceResolver's versionStrategyMap should keep insertion order [SPR-13798] #18371","closed","","spring-projects-issues","2019-01-10T22:04:31Z","2019-01-14T03:22:18Z"
"","22196","2.0.9 Backported Issues","- AbstractTemplateView and getContentType() method [SPR-2327] #7016 - LocalContainerEntityManagerFactoryBean could accept ""classpath*:/"" path locations [SPR-3979] #8659 - Documentation Type-o [SPR-4051] #8730 - Class cast exception in AbstractBeanDefinition.getBeanClassName() [SPR-4059] #8738 - Add MIME type for CSV files [SPR-4236] #8914 - Typo in JavaDoc (thrown should be throw) [SPR-4309] #8988 - PersistenceAnnotationBeanPostProcessor throws BeanCurrentlyInCreationException exception during injection of PersistenceContext [SPR-4315] #8994 - Minor inconsistency in documentation - section 3.2.3.2.3. (instance factory method name) [SPR-4326] #9005 - Improve error message when sending a non-Serializable message using the JmsTemplate [SPR-4342] #9021 - Thread interrupt can lead to deadlock in ConcurrencyThrottleSupport [SPR-4346] #9025 - IntArrayPropertyEditor - property editor for int[] [SPR-4362] #9040 - Omission in docs of PropertiesLoaderSupport [SPR-4370] #9048 - TopLinkTransactionManager unable to expose a TopLink transaction to JDBC access code [SPR-4382] #9061 - OptionWriter renders item Maps incorrectly (no preselection) [SPR-4385] #9064 - Add ORA-2292 to dataIntegrityViolationCodes in sql-error-codes.xml [SPR-4392] #9071 - Spring Web MVC reference documentation typos [SPR-4394] #9073 - Documentation 3.3.6: misspelling in dependeny-check mode ""objects"" [SPR-4400] #9078 - Map SQL Error code 2601 in Microsoft SQL Server to DataIntegrityViolationException [SPR-4404] #9082 - MIsmatch between dynamic-language FortuneController.groovy and doco example [SPR-4405] #9083 -  tag produces incorrect action attribute under Glassfish v2 [SPR-4407] #9085 - Ref. Manual - unclear sentence in 9.6 Programmatic transaction management [SPR-4415] #9093 - Ref. Manual - literal html markup in Table 9.2 [SPR-4416] #9094 - Enum values are not converted correctly when a formatted xml configuration is used. [SPR-4423] #9101 - JavaDoc - trailing '}' in AbstractRoutingDataSource [SPR-4426] #9104 - ServletRequestAttributes wrongly returns a null http session on child threads. [SPR-4434] #9112 - ShadowingClassLoader.doLoadClass(String) throws a StringIndexOutOfBoundsException during parsing packageName for the class under the default package(no package) [SPR-4443] #9121 - java.lang.ClassCastException: org.springframework.jndi.JndiObjectFactoryBean during undeployment of a webapp [SPR-4476] #9153 - Documentation - Marker Interface Confusion [SPR-4499] #9177 - CustomizableTraceInterceptor does not escape '$' while logging exception information [SPR-4507] #9184 - LazyConnectionDataSourceProxy should accept defaultTransactionIsolation by name [SPR-4520] #9197 - grammar error in section 4.7.2.1 [SPR-4521] #9198 - mock.jndi.SimpleNamingContext.createSubcontext does not work correctly [SPR-4552] #9229 - Tiny improvement in JavaDOC for ContextLoader [SPR-4580] #9257 - XmlBeanDefinitionReader resistant to subclassing to control validation [SPR-4584] #9261 - NativeJdbcExtractorAdapter .getNativeConnectionConnection() returning a null [SPR-4597] #9274 - Javadoc: mispelling in MethodInvoker.getArguments [SPR-4609] #9286 - OncePerRequestFilter should clean up its request attribute [SPR-4621] #9298 - Errors from a MethodInvokingJob are only logged at WARN/INFO level (and twice...) [SPR-4630] #9307 - Add MySQL NDB error codes to sql-error-codes.xml [SPR-4635] #9312 - Confusing message thrown from AbstractJasperReportsView with subreports [SPR-4660] #9337 - form:errors tag returning incorrect value from doStartTag [SPR-4741] #9418 - 11.2.1.1.3. Other operations. Error in redaction: bind / binding. [SPR-4744] #9421 - Document Reference Manual in 11.3.5. DriverManagerDataSource not implements SmartDataSource   [SPR-4752] #9429 - User Guide refers to apparently non-existent class FormatHelper   [SPR-4761] #9438 - typo: 3.4.5.2. Using a custom scope - should say customScope, not scope [SPR-4779] #9456 - RemoteAccessException does not have the serialVersionUID defined [SPR-4826] #9502 - Documentation: Spring AOP Pointcuts match 'public' modifiers only [SPR-4861] #9537 - CustomizableTraceInterceptor throws exception when $[arguments] contains ""\$"" [SPR-4878] #9554 - Map SQL Error code 1222 in Microsoft SQL Server to CannotAcquireLockException [SPR-4879] #9555 - Log4jConfigurer indirectly triggers automatic log4j configuration [SPR-4884] #9560 - [XsltView] URI base for imports is meaningless [SPR-4894] #9570 - bean factory post processor documentation review [SPR-4900] #9576 - Duplicate mappings in org/springframework/mail/mime.types [SPR-4912] #9587 - MessageSourceResourceBundle should override getLocale() [SPR-4921] #9596 - Small typo in reference documentation - chapter 19 JMS [SPR-4941] #9616 - Spring 2.x doesn't resume after DataAccessResourceFailureException on begin of inner transaction [SPR-4967] #9642 - Possible property matches don't show up in BeanFactory error messages anymore [SPR-4998] #9673 - getBean(String, Object[]) does not throw BeanDefinitionStoreException when bean in creation is a singleton [SPR-5005] #9680 - Update documentation to latest Quartz Javadoc [SPR-5019] #9694 - error in documentation, chapter 3.8.2 (baseName attribute) [SPR-5022] #9697 - Incorrect wording in class javadoc for DelegatingVariableResolver. [SPR-5048] #9723 - NullPointerException in AbstractAutoProxyCreator [SPR-5080] #9754 - Doc: viewClass property required when defiining the URLBasedVIewResolver bean defintion [SPR-5099] #9772 - Duplicate JavaDoc paragraph in AbstractMessageListenerContainer [SPR-5113] #9786 - Spelling Mistake [SPR-5121] #9794 - ConfigurableMimeFileTypeMap does not close mime type input stream [SPR-5168] #9841 - Velocity WebappLoader requires ServetContext VelocityEngine attribute [SPR-5209] #9882 - StringUtils.delete goes into eternal loop [SPR-5227] #9901","closed","","spring-projects-issues","2019-01-10T22:02:47Z","2019-01-14T03:22:58Z"
"","22213","4.3.22 Backported Issues","- 'default-lazy-init' attribute is not processed when XSD validation is disabled [SPR-8335] #12983 - Spring JavaMailSenderImpl does not show proper message when recipient list is empty [SPR-17540] #22072 - Error in reference documentation sentence in part 1.8.1. Customizing Beans by Using a BeanPostProcessor [SPR-17556] #22088 - Potential resource leak in DataSourceUtils.doGetConnection [SPR-17559] #22091 - Typo in SpEL Evaluation Context Sample [SPR-17581] #22113 - SpEL, error parsing big InlineMap  [SPR-17605] #22137 - `@Value` Optional<...> field injection fails in case of registered ConversionService [SPR-17607] #22139 - Cannot convert from Collection to RegularEnumSet [SPR-17619] #22151","closed","","spring-projects-issues","2019-01-10T22:05:17Z","2019-01-14T03:22:27Z"
"","22212","5.0.12 Backported Issues","- 'default-lazy-init' attribute is not processed when XSD validation is disabled [SPR-8335] #12983 - Spring JavaMailSenderImpl does not show proper message when recipient list is empty [SPR-17540] #22072 - Error in reference documentation sentence in part 1.8.1. Customizing Beans by Using a BeanPostProcessor [SPR-17556] #22088 - Potential resource leak in DataSourceUtils.doGetConnection [SPR-17559] #22091 - NettyDataBufferFactory.join should return original buffer as-is in case of a single element (for compatibility with Netty 4.1.32) [SPR-17560] #22092 - SpEL variable evaluation fails with NPE against ConcurrentHashMap [SPR-17565] #22097 - MockHttpServletRequest changes Accept-Language header values [SPR-17566] #22098 - Typo in SpEL Evaluation Context Sample [SPR-17581] #22113 - Clarify whether spring-jms 5.x is still able to run with a JMS 1.1 provider [SPR-17583] #22115 - Exporting a lazily initialized bean (which implements SelfNaming and is annotated with ManagedResource annotation) gives IllegalStateException [SPR-17592] #22124 - SpEL, error parsing big InlineMap  [SPR-17605] #22137 - `@Value` Optional<...> field injection fails in case of registered ConversionService [SPR-17607] #22139 - ChannelSendOperator does not propagate cancel signal to the server  [SPR-17609] #22141 - Cannot convert from Collection to RegularEnumSet [SPR-17619] #22151 - MockMvcResultMatchers.forwardedUrl argument is not declared as nullable [SPR-17623] #22155 - UriComponentsBuilder.toUriString() is broken [SPR-17630] #22161","closed","","spring-projects-issues","2019-01-10T22:05:43Z","2019-01-14T03:22:29Z"
"","22309","WebClient indefinitely retries on ""Connection reset by peer"", caused by reactor netty","**Affects:** spring-webflux-5.1.4.RELEASE  Reactor netty retries GET calls indefinitely on getting ""IOException: Connection reset by peer"" again and again. We do not want this to happen as we have our own retry logic added to WebClient call and want that to be executed instead of reactor netty's retries. In our tests, webclient keeps executing the same call and runs out of jvm memory. If we do the same using spring resttemplate, it works perfectly fine. It throws ResourceAccessException and exits successfully.  ```java import com.github.tomakehurst.wiremock.WireMockServer; import com.github.tomakehurst.wiremock.client.MappingBuilder; import com.github.tomakehurst.wiremock.client.WireMock; import com.github.tomakehurst.wiremock.core.WireMockConfiguration; import com.github.tomakehurst.wiremock.http.Fault; import com.github.tomakehurst.wiremock.http.RequestMethod; import com.github.tomakehurst.wiremock.matching.RequestPatternBuilder; import io.netty.channel.ChannelOption; import io.netty.handler.ssl.SslContext; import io.netty.handler.ssl.SslContextBuilder; import org.springframework.http.HttpHeaders; import org.springframework.http.MediaType; import org.springframework.http.client.reactive.ClientHttpConnector; import org.springframework.http.client.reactive.ReactorClientHttpConnector; import org.springframework.http.client.reactive.ReactorResourceFactory; import org.springframework.util.SocketUtils; import org.springframework.web.reactive.function.client.*; import org.testng.annotations.AfterClass; import org.testng.annotations.BeforeClass; import org.testng.annotations.Test; import reactor.core.Exceptions; import reactor.core.publisher.Flux; import reactor.core.publisher.Mono; import reactor.netty.channel.BootstrapHandlers; import reactor.netty.resources.ConnectionProvider; import reactor.netty.resources.LoopResources;  import javax.net.ssl.SSLException; import java.io.IOException; import java.nio.charset.StandardCharsets; import java.time.Duration;  public class ConnectionReset {      private static final int PORT = SocketUtils.findAvailableTcpPort();     private WireMockServer server;     private WireMock wireMock;     private ReactorResourceFactory reactorResourceFactory;     private String baseUrl;      @BeforeClass     public void setup() {         this.server = new WireMockServer(WireMockConfiguration.wireMockConfig()                 .port(PORT));         this.server.start();         this.wireMock = new WireMock(PORT);         this.wireMock.resetMappings();         this.baseUrl = ""http://localhost:"" + PORT;          this.reactorResourceFactory = new ReactorResourceFactory();         this.reactorResourceFactory.setUseGlobalResources(false);         this.reactorResourceFactory.setLoopResourcesSupplier(() -> LoopResources.create(""webflux-http-test"", 1, true));         this.reactorResourceFactory.setConnectionProviderSupplier(() -> ConnectionProvider.fixed(""test"", 1));         this.reactorResourceFactory.afterPropertiesSet();     }      private ClientHttpConnector getClientHttpConnector() {         return new ReactorClientHttpConnector(this.reactorResourceFactory, httpClient -> httpClient.tcpConfiguration(tcpClient -> {             try {                 // We are going to load default trust manager                 final SslContext sslContext = SslContextBuilder.forClient()                         .build();                 tcpClient.secure(t -> t.sslContext(sslContext))                         .bootstrap(bootstrap -> {                             BootstrapHandlers.connectionObserver(bootstrap, null);                             return bootstrap;                         })                         .option(ChannelOption.SO_KEEPALIVE, false)                         .option(ChannelOption.CONNECT_TIMEOUT_MILLIS, 5_000);                 return tcpClient;             } catch (final SSLException ex) {                 throw new IllegalStateException(""Unable to create SSL context"", ex);             }         }));     }      @AfterClass     public void tearDown() {         this.reactorResourceFactory.destroy();         this.wireMock.shutdown();         this.server.stop();     }      @Test     public void testReset() {         final String mockEndpoint = ""/my/endpoint"";         final RequestPatternBuilder reqPatternBuilder = RequestPatternBuilder.newRequestPattern(                 RequestMethod.GET, WireMock.urlEqualTo(mockEndpoint));         final MappingBuilder mappingBuilder = WireMock.get(WireMock.urlEqualTo(reqPatternBuilder.build().getUrl()));          reqPatternBuilder.withHeader(HttpHeaders.ACCEPT, WireMock.containing(MediaType.APPLICATION_JSON_VALUE))                 .withHeader(HttpHeaders.ACCEPT_CHARSET, WireMock.containing(StandardCharsets.UTF_8.name().toLowerCase()));         mappingBuilder.willReturn(WireMock.aResponse()                 .withFault(Fault.CONNECTION_RESET_BY_PEER)); // throwing Connection reset          this.wireMock.register(mappingBuilder);          final WebClient webClient = WebClient.builder()                 .baseUrl(this.baseUrl)                 .clientConnector(getClientHttpConnector())                 .build();          String output = webClient.get()                 .uri(this.baseUrl + mockEndpoint)                 .headers(httpHeaders -> {                     httpHeaders.add(HttpHeaders.ACCEPT, MediaType.APPLICATION_JSON_VALUE);                     httpHeaders.add(HttpHeaders.ACCEPT_CHARSET, StandardCharsets.UTF_8.name());                 })                 .retrieve()                 .bodyToMono(String.class)                 .retryWhen(this::untilMaxRetries) // want this to be executed                 .block();         System.out.println(output);     }      // 5 max retries     public Flux untilMaxRetries(final Flux throwableFlux) {         return throwableFlux.zipWith(                 Flux.range(1, 5),                 (ex, index) -> {                      // I prefer to match more specific exception than IOException.                     // For eg: PrematureCloseException is a inner class within HttpClientOperations.                     // It would be good to make them public, so that one can write some behavioral code.                     if (!(ex instanceof WebClientResponseException) && !(ex instanceof IOException)) {                         throw Exceptions.propagate(ex);                     }                     if (index >= 5) {                         throw Exceptions.propagate(ex);                     }                     return index;                 })                 /*                  * Delay happens on the default 'parallel' executor.                  * This is acceptable since the task is just to re-subscribe the post request, which then delegates                  * work to the executor of the corresponding web client.                  */                 .flatMap(index -> Mono.delay(Duration.ofMillis(100)));     } } ```","closed","status: invalid,","nidhi7","2019-01-25T19:34:05Z","2019-01-25T21:10:14Z"
"","22304","MockHttpServletResponse setHeader() not checking if response is already committed","**Affects:** spring-test 4.3.16 (Maybe still the case in master)  Had a bug in my code where I was setting a header after the HttpResponse was committed. MockMvc tests were not failing but real-life app did not behave the same (with Tomcat)  https://github.com/spring-projects/spring-framework/blob/master/spring-test/src/main/java/org/springframework/mock/web/MockHttpServletResponse.java#L556  compared to this  https://github.com/apache/tomcat/blob/trunk/java/org/apache/catalina/connector/ResponseFacade.java#L532  Is it intentionally missing the isCommitted() check?","closed","status: superseded,","raphdg","2019-01-24T13:35:19Z","2019-10-31T11:34:56Z"
"","22627","[RestTemplate] buffering of POST request cause OutOfMemory","**Affects:** spring-framework-5.1.2.RELEASE  --- I have spring application which upload zip files to server(which I don't own). My issue is related with uploading large ZipFiles using RestTemplate. When I try to make http request RestTemplate load in-memory the whole file before start uploading. I have tried to use  [Http Streaming feature](https://github.com/spring-projects/spring-framework/pull/312) but the server doesn't support chunks streaming, it is require to set http header `Content-Length` to upload content. I found that in Apache Http Client version 4.4 provides HttpEntity interface which do not cache the whole request in-memory. If you add File in MultiparEntityBuilder `Content-Length` of the request is calculated without reading and loading the file in-memory.  When http request has been executed apache httpclient open FileStream to the file and directly send bytes to the server. I would like to ask why in Spring RestTemplate this is not implemented in this way? Is it possible RestTemplate to be enhanced to calculate Content-Length size of request without loading content in-memory?","closed","status: declined,","theghost5800","2019-03-21T14:42:31Z","2019-03-27T19:32:47Z"
"","22311","Support annotation on the method of interface in spring-aop integrate with aspectj","**Affects:** spring-aop:5.0.9.RELEASE, spring-boot-starter-aop:2.0.5.RELEASE  ``` public interface FooService {   @MyAnnotation    void hello(); } public class FooServiceImpl implements FooService {   void hello(); } ```  ``` public class MyAspect {   @Pointcut(""@annotation(MyAnnotation"")      public void myPointcut() {    }   @Around(""myPointcut()"")   public Object around(ProceedingJoinPoint pjp) throws Throwable {      ...   } } ``` ``` @Configuration public class MyAopConfiguration {     @Bean     public MyAspect myAspect () {         return new MyAspect();     } } ``` Using spring-aop like the code above, it doesn't work, `around(ProceedingJoinPoint pjp)` never execute.  If put the `@MyAnnotation` on the implement method of `FooServiceImpl`, it works. ``` public interface FooService {    void hello(); } public class FooServiceImpl  implements FooService {   @MyAnnotation   void hello(); } ``` Learned from two questions in stackoverflow: [https://stackoverflow.com/questions/6594457/aspectj-annotation-pointcut-not-triggered-for-interface-annotations](https://stackoverflow.com/questions/6594457/aspectj-annotation-pointcut-not-triggered-for-interface-annotations) [https://stackoverflow.com/questions/7178782/aspectj-pointcut-for-methods-that-override-an-interface-method-with-an-annotati](https://stackoverflow.com/questions/7178782/aspectj-pointcut-for-methods-that-override-an-interface-method-with-an-annotati)  **According to the Java 5 specification, non-type annotations are not inherited, and annotations on types are only inherited if they have the @Inherited meta-annotation.**  It's seems that it's unpossible in spring-aop.  I tried the code without spring-aop, only using aspectjweaver 1.7.4,  and add a aop.xml in the resources/META-INF ```                            ``` and add JVM parameter:  `-javaagent:xxx/aspectjweaver-1.7.4.jar` It works no matter the `@MyAnnotation` is on the interface or class. And then in `around(ProceedingJoinPoint pjp)`, I can get the `@MyAnnotation` with the api of pjp, like this: ``` MethodSignature signature = (MethodSignature)joinPoint.getSignature(); Class targetClass = pjp.getTarget().getClass(); Method method = targetClass.getDeclaredMethod(signature.getName(), signature.getMethod().getParameterTypes()); MyAnnotation myAnnotation = method.getAnnotation(MyAnnotation.class);  or   Class[] interfaces = targetClass.getInterfaces(); for (Class anInterface : interfaces) {    Method method = targetClass.getDeclaredMethod(signature.getName(),     signature.getMethod().getParameterTypes());    MyAnnotation myAnnotation = method.getAnnotation(MyAnnotation.class); } ``` So I think spring-aop may also have way to solve this problem, since it's a common scene for users to add annotation on the method of interface.  Something in `AopUtils#getMostSpecificMethod`,`AspectJExpressionPointcut#getShadowMatch(Method targetMethod, Method originalMethod)` may be about, I'm not sure.  Could you please give some help?","open","in: core,","cdfive","2019-01-26T13:19:44Z","2021-11-10T09:51:26Z"
"","22459","CorsInterceptor should add to the first interceptor in InterceptorChain?","**Affects:** Spring Webmvc 4.3.14  --- I use CorsRegistry to add cors configuration support, but it does not work. I found the cors process code in AbstractHandlerMapping ```Java protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request, 			HandlerExecutionChain chain, CorsConfiguration config) {  		if (CorsUtils.isPreFlightRequest(request)) { 			HandlerInterceptor[] interceptors = chain.getInterceptors(); 			chain = new HandlerExecutionChain(new PreFlightHandler(config), interceptors); 		} 		else { 			chain.addInterceptor(new CorsInterceptor(config)); 		} 		return chain; 	} ```  the code add the CorsInterceptor to the end of InterceptorChain， but a LoginInterceptor has exist in the InterceptorChain, and before CorsInterceptor now. so when the request reach, spring mvc will execute the LoginInterceptor first, and the LoginInterceptor throw a NotLoginException. It cause that CorsInterceptor to not execute, so the brower client will throw error.  Maybe it's a bug and the CorsInterceptor should add to the first interceptor in InterceptorChain?","closed","type: enhancement,","wayshall","2019-02-23T10:40:55Z","2019-04-09T19:45:49Z"
"","22706","Deprecate ClassUtils.isCglibProxy methods","**Affects:** Spring Framework Core 4.x, 5.x with both Java 8 and Java 11  This test fails at the second assertion:  ```java   @Test   public void testLambdaIsNotACglibProxy() {          Runnable anonymous = new Runnable() {       @Override       public void run() {        }     };      System.out.println(anonymous.getClass());     assertFalse(ClassUtils.isCglibProxy(anonymous));      Runnable lambda = () -> {};        System.out.println(lambda.getClass());     assertFalse(ClassUtils.isCglibProxy(lambda)); // <-- fails   } ```  It fails because the lambda expression will have a class name like: `class spring.ClassUtilsTest$$Lambda$231/0x0000000800149440` and `isCglibProxy()` treats everything as a cglib proxy which has a `$$` in the class name.  `isCglibProxy()` should have a better check so it would return false for lambda objects.","closed","in: core,","akiraly","2019-03-28T21:46:47Z","2019-03-31T11:51:20Z"
"","22731","ProtobufEncoder and ProtobufDecoder buffer leaks","**Affects:** Spring Framework 5.1.5 --- ## Issue After upgrading from **2.0.6.RELEASE** version to **2.1.3.RELEASE** I started seeing a lot of memory leaks related to `org.springframework.http.codec.protobuf.ProtobufEncoder#encodeMessage` in logs (see below).  ### Technical details: * OS:  ``` Linux version 2.6.32-573.7.1.el6.x86_64 (mockbuild@c6b8.bsys.dev.centos.org) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-16) (GCC) ) #1 SMP Tue Sep 22 22:00:00 UTC 2015 ``` * Java: ``` java version ""1.8.0_181"" Java(TM) SE Runtime Environment (build 1.8.0_181-b13) Java HotSpot(TM) 64-Bit Server VM (build 25.181-b13, mixed mode) ``` * Protobuf: 3.4.0 * Java system properties: ``` -Dspring.profiles.active=default -XX:+UseG1GC -Xmx6G -Xms6G -XX:MaxGCPauseMillis=15 -XX:MaxTenuringThreshold=1 -XX:+UnlockExperimentalVMOptions -XX:G1NewSizePercent=60 -XX:G1MaxNewSizePercent=70 -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=5 -XX:GCLogFileSize=100M -XX:+PrintGCApplicationStoppedTime -XX:+PrintTenuringDistribution -XX:+PrintGCCause -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGC -XX:+PrintGCDateStamps -XX:+PrintAdaptiveSizePolicy ```  ### Log example [own classes are hidden with ...] ``` 2019-04-03 07:23:43.445 ERROR [reactor-http-epoll-1] ResourceLeakDetector - LEAK: ByteBuf.release() was not called before it's garbage-collected. See http://netty.io/wiki/reference-counted-objects.html for mo re information. Recent access records:  #1:         io.netty.buffer.AdvancedLeakAwareByteBuf.writeBytes(AdvancedLeakAwareByteBuf.java:616)         io.netty.buffer.ByteBufOutputStream.write(ByteBufOutputStream.java:68)         com.google.protobuf.CodedOutputStream$OutputStreamEncoder.doFlush(CodedOutputStream.java:2985)         com.google.protobuf.CodedOutputStream$OutputStreamEncoder.flush(CodedOutputStream.java:2896)         com.google.protobuf.AbstractMessageLite.writeTo(AbstractMessageLite.java:87)         org.springframework.http.codec.protobuf.ProtobufEncoder.encodeMessage(ProtobufEncoder.java:89)         org.springframework.http.codec.protobuf.ProtobufEncoder.lambda$encode$1(ProtobufEncoder.java:78)         reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:107)         reactor.core.publisher.FluxJust$WeakScalarSubscription.request(FluxJust.java:99)         reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:162)         reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request(FluxPeekFuseable.java:138)         reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request(FluxPeekFuseable.java:138)         reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request(FluxPeekFuseable.java:138)         reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:102)         reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1878)         reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1752)         reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:64)         reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe(FluxPeekFuseable.java:172)         reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe(FluxPeekFuseable.java:172)         reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe(FluxPeekFuseable.java:172)         reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)         reactor.core.publisher.FluxJust.subscribe(FluxJust.java:70)         reactor.core.publisher.FluxMapFuseable.subscribe(FluxMapFuseable.java:63)         reactor.core.publisher.FluxPeekFuseable.subscribe(FluxPeekFuseable.java:86)         reactor.core.publisher.FluxPeekFuseable.subscribe(FluxPeekFuseable.java:86)         reactor.core.publisher.FluxPeekFuseable.subscribe(FluxPeekFuseable.java:86)         reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)         reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)         reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)         reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)         reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)         reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1505)         reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:241)         reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:121)         reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:204)         reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:185)         reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:73)         reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:73)         reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:73)         reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext(FluxDoFinally.java:123)         reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1505)         reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:241)         reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:121)         reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2070)         reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:162)         reactor.core.publisher.MonoFlatMap$FlatMapInner.onSubscribe(MonoFlatMap.java:230)         reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)         reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)         reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)         reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)         reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:204)         reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1505)         reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:241)         reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:204)         reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:121)         reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1505)         reactor.core.publisher.MonoReduceSeed$ReduceSeedSubscriber.onComplete(MonoReduceSeed.java:156)         reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:136)         reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:794)         reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:560)         reactor.core.publisher.FluxFlatMap$FlatMapMain.innerComplete(FluxFlatMap.java:863)         reactor.core.publisher.FluxFlatMap$FlatMapInner.onComplete(FluxFlatMap.java:957)         reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onComplete(FluxPeekFuseable.java:271)         reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onComplete(FluxPeekFuseable.java:271)         reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:321)         reactor.core.publisher.FluxPeekFuseable$PeekFuseableConditionalSubscriber.onComplete(FluxPeekFuseable.java:578)         reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:321)         reactor.core.publisher.FluxSubscribeOnCallable$CallableSubscribeOnSubscription.run(FluxSubscribeOnCallable.java:251)         reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:50)         reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:27)         java.util.concurrent.FutureTask.run(FutureTask.java:266)         java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)         java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)         java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)         java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)         java.lang.Thread.run(Thread.java:748) #2:         io.netty.buffer.AdvancedLeakAwareByteBuf.writeBytes(AdvancedLeakAwareByteBuf.java:616)         io.netty.buffer.ByteBufOutputStream.write(ByteBufOutputStream.java:68)         com.google.protobuf.CodedOutputStream$OutputStreamEncoder.doFlush(CodedOutputStream.java:2985)         com.google.protobuf.CodedOutputStream$OutputStreamEncoder.flushIfNotAvailable(CodedOutputStream.java:2980)         com.google.protobuf.CodedOutputStream$OutputStreamEncoder.writeInt32(CodedOutputStream.java:2659)         com.google.protobuf.CodedOutputStream.writeEnum(CodedOutputStream.java:301)         com....Result.writeTo(...Result.java:312)         com.google.protobuf.CodedOutputStream$OutputStreamEncoder.writeMessageNoTag(CodedOutputStream.java:2783)         com.google.protobuf.CodedOutputStream$OutputStreamEncoder.writeMessage(CodedOutputStream.java:2759)         com....Response.writeTo(...Response.java:134)         com.google.protobuf.AbstractMessageLite.writeTo(AbstractMessageLite.java:86)         org.springframework.http.codec.protobuf.ProtobufEncoder.encodeMessage(ProtobufEncoder.java:89)         org.springframework.http.codec.protobuf.ProtobufEncoder.lambda$encode$1(ProtobufEncoder.java:78)         reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:107)         reactor.core.publisher.FluxJust$WeakScalarSubscription.request(FluxJust.java:99)         reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:162)         reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request(FluxPeekFuseable.java:138)         reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request(FluxPeekFuseable.java:138)         reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request(FluxPeekFuseable.java:138)         reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:102)         reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1878)         reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1752)         reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:64)         reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe(FluxPeekFuseable.java:172)         reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe(FluxPeekFuseable.java:172)         reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe(FluxPeekFuseable.java:172)         reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)         reactor.core.publisher.FluxJust.subscribe(FluxJust.java:70)         reactor.core.publisher.FluxMapFuseable.subscribe(FluxMapFuseable.java:63)         reactor.core.publisher.FluxPeekFuseable.subscribe(FluxPeekFuseable.java:86)         reactor.core.publisher.FluxPeekFuseable.subscribe(FluxPeekFuseable.java:86)         reactor.core.publisher.FluxPeekFuseable.subscribe(FluxPeekFuseable.java:86)         reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)         reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)         reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)         reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)         reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)         reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1505)         reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:241)         reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:121)         reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:204)         reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:185)         reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:73)         reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:73)         reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:73)         reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext(FluxDoFinally.java:123)         reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1505)         reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:241)         reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:121)         reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2070)         reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:162)         reactor.core.publisher.MonoFlatMap$FlatMapInner.onSubscribe(MonoFlatMap.java:230)         reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)         reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)         reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)         reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)         reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:204)         reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1505)         reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:241)         reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:204)         reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:121)         reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1505)         reactor.core.publisher.MonoReduceSeed$ReduceSeedSubscriber.onComplete(MonoReduceSeed.java:156)         reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:136)         reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:794)         reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:560)         reactor.core.publisher.FluxFlatMap$FlatMapMain.innerComplete(FluxFlatMap.java:863)         reactor.core.publisher.FluxFlatMap$FlatMapInner.onComplete(FluxFlatMap.java:957)         reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onComplete(FluxPeekFuseable.java:271)         reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onComplete(FluxPeekFuseable.java:271)         reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:321)         reactor.core.publisher.FluxPeekFuseable$PeekFuseableConditionalSubscriber.onComplete(FluxPeekFuseable.java:578)         reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:321)         reactor.core.publisher.FluxSubscribeOnCallable$CallableSubscribeOnSubscription.run(FluxSubscribeOnCallable.java:251)         reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:50)         reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:27)         java.util.concurrent.FutureTask.run(FutureTask.java:266)         java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)         java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)         java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)         java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)         java.lang.Thread.run(Thread.java:748) Created at:         io.netty.buffer.PooledByteBufAllocator.newDirectBuffer(PooledByteBufAllocator.java:339)         io.netty.buffer.AbstractByteBufAllocator.directBuffer(AbstractByteBufAllocator.java:185)         io.netty.buffer.AbstractByteBufAllocator.directBuffer(AbstractByteBufAllocator.java:171)         io.netty.buffer.AbstractByteBufAllocator.buffer(AbstractByteBufAllocator.java:105)         org.springframework.core.io.buffer.NettyDataBufferFactory.allocateBuffer(NettyDataBufferFactory.java:65)         org.springframework.core.io.buffer.NettyDataBufferFactory.allocateBuffer(NettyDataBufferFactory.java:39)         org.springframework.http.codec.protobuf.ProtobufEncoder.encodeMessage(ProtobufEncoder.java:82)         org.springframework.http.codec.protobuf.ProtobufEncoder.lambda$encode$1(ProtobufEncoder.java:78)         reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:107)         reactor.core.publisher.FluxJust$WeakScalarSubscription.request(FluxJust.java:99)         reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:162)         reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request(FluxPeekFuseable.java:138)         reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request(FluxPeekFuseable.java:138)         reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request(FluxPeekFuseable.java:138)         reactor.core.publisher.MonoNext$NextSubscriber.request(MonoNext.java:102)         reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1878)         reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1752)         reactor.core.publisher.MonoNext$NextSubscriber.onSubscribe(MonoNext.java:64)         reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe(FluxPeekFuseable.java:172)         reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe(FluxPeekFuseable.java:172)         reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe(FluxPeekFuseable.java:172)         reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)         reactor.core.publisher.FluxJust.subscribe(FluxJust.java:70)         reactor.core.publisher.FluxMapFuseable.subscribe(FluxMapFuseable.java:63)         reactor.core.publisher.FluxPeekFuseable.subscribe(FluxPeekFuseable.java:86)         reactor.core.publisher.FluxPeekFuseable.subscribe(FluxPeekFuseable.java:86)         reactor.core.publisher.FluxPeekFuseable.subscribe(FluxPeekFuseable.java:86)         reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40)         reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)         reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)         reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)         reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)         reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1505)         reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:241)         reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:121)         reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:204)         reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:185)         reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:73)         reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:73)         reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:73)         reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext(FluxDoFinally.java:123)         reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1505)         reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:241)         reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:121)         reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2070)         reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:162)         reactor.core.publisher.MonoFlatMap$FlatMapInner.onSubscribe(MonoFlatMap.java:230)         reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)         reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)         reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)         reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)         reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:204)         reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1505)         reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:241)         reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext(FluxPeekFuseable.java:204)         reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:121)         reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1505)         reactor.core.publisher.MonoReduceSeed$ReduceSeedSubscriber.onComplete(MonoReduceSeed.java:156)         reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:136)         reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:794)         reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:560)         reactor.core.publisher.FluxFlatMap$FlatMapMain.innerComplete(FluxFlatMap.java:863)         reactor.core.publisher.FluxFlatMap$FlatMapInner.onComplete(FluxFlatMap.java:957)         reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onComplete(FluxPeekFuseable.java:271)         reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onComplete(FluxPeekFuseable.java:271)         reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:321)         reactor.core.publisher.FluxPeekFuseable$PeekFuseableConditionalSubscriber.onComplete(FluxPeekFuseable.java:578)         reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:321)         reactor.core.publisher.FluxSubscribeOnCallable$CallableSubscribeOnSubscription.run(FluxSubscribeOnCallable.java:251)         reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:50)         reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:27)         java.util.concurrent.FutureTask.run(FutureTask.java:266)         java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)         java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)         java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)         java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)         java.lang.Thread.run(Thread.java:748) ```","closed","type: bug,","dmytro-babichev","2019-04-03T17:15:40Z","2019-06-11T10:26:40Z"
"","22344","mariadb-java-client 2.4.0 productName changed: breaks Spring Batch","**Affects:** Spring Framework 5.1.4-RELEASE (Spring Batch 4.1.1.RELEASE)  ---  Up to `mariadb-java-client` 2.3.0, driver product name was ""MySQL"". With version 2.4.0, it's now ""MariaDB"" (due to [this change](https://github.com/MariaDB/mariadb-connector-j/commit/5ec5099441a49c677785848132a6099b2beaee99#diff-a6869b202907d71c3d5aecefe6de0ce1R1133)), so `org/springframework/batch/support/DatabaseType.java:fromMetaData()` cannot recognize it.   -> Could you detect MariaDB as MySQL database? Thx!    Spring Batch loads `JobRepositoryFactoryBean` that calls `DatabaseType.java:fromMetaData()` and throws the following error:  ``` 23:08:09 ERROR o.s.boot.SpringApplication:858 [] Application run failed org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'application': Invocation of init method failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'batchConfigurer': Invocation of init method failed; nested exception is java.lang.IllegalStateException: Unable to initialize Spring Batch 	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:139) ~[spring-beans-5.1.4.RELEASE.jar:5.1.4.RELEASE] 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:419) ~[spring-beans-5.1.4.RELEASE.jar:5.1.4.RELEASE] 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1737) ~[spring-beans-5.1.4.RELEASE.jar:5.1.4.RELEASE] 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:576) ~[spring-beans-5.1.4.RELEASE.jar:5.1.4.RELEASE] 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498) ~[spring-beans-5.1.4.RELEASE.jar:5.1.4.RELEASE] 	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.4.RELEASE.jar:5.1.4.RELEASE] 	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.4.RELEASE.jar:5.1.4.RELEASE] 	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.4.RELEASE.jar:5.1.4.RELEASE] 	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.4.RELEASE.jar:5.1.4.RELEASE] 	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:846) ~[spring-beans-5.1.4.RELEASE.jar:5.1.4.RELEASE] 	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:863) ~[spring-context-5.1.4.RELEASE.jar:5.1.4.RELEASE] 	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546) ~[spring-context-5.1.4.RELEASE.jar:5.1.4.RELEASE] 	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142) ~[spring-boot-2.1.2.RELEASE.jar:2.1.2.RELEASE] 	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775) ~[spring-boot-2.1.2.RELEASE.jar:2.1.2.RELEASE] 	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) ~[spring-boot-2.1.2.RELEASE.jar:2.1.2.RELEASE] 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316) ~[spring-boot-2.1.2.RELEASE.jar:2.1.2.RELEASE] 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260) ~[spring-boot-2.1.2.RELEASE.jar:2.1.2.RELEASE] 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248) ~[spring-boot-2.1.2.RELEASE.jar:2.1.2.RELEASE] 	at manon.Application.main(Application.java:36) ~[classes/:na] Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'batchConfigurer': Invocation of init method failed; nested exception is java.lang.IllegalStateException: Unable to initialize Spring Batch 	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:139) ~[spring-beans-5.1.4.RELEASE.jar:5.1.4.RELEASE] 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:419) ~[spring-beans-5.1.4.RELEASE.jar:5.1.4.RELEASE] 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1737) ~[spring-beans-5.1.4.RELEASE.jar:5.1.4.RELEASE] 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:576) ~[spring-beans-5.1.4.RELEASE.jar:5.1.4.RELEASE] 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498) ~[spring-beans-5.1.4.RELEASE.jar:5.1.4.RELEASE] 	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.4.RELEASE.jar:5.1.4.RELEASE] 	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.4.RELEASE.jar:5.1.4.RELEASE] 	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.4.RELEASE.jar:5.1.4.RELEASE] 	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.4.RELEASE.jar:5.1.4.RELEASE] 	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:602) ~[spring-beans-5.1.4.RELEASE.jar:5.1.4.RELEASE] 	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:590) ~[spring-beans-5.1.4.RELEASE.jar:5.1.4.RELEASE] 	at org.springframework.context.support.AbstractApplicationContext.getBeansOfType(AbstractApplicationContext.java:1204) ~[spring-context-5.1.4.RELEASE.jar:5.1.4.RELEASE] 	at org.springframework.batch.core.configuration.annotation.SimpleBatchConfiguration.initialize(SimpleBatchConfiguration.java:114) ~[spring-batch-core-4.1.1.RELEASE.jar:4.1.1.RELEASE] 	at org.springframework.batch.core.configuration.annotation.SimpleBatchConfiguration$ReferenceTargetSource.createObject(SimpleBatchConfiguration.java:142) ~[spring-batch-core-4.1.1.RELEASE.jar:4.1.1.RELEASE] 	at org.springframework.aop.target.AbstractLazyCreationTargetSource.getTarget(AbstractLazyCreationTargetSource.java:88) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE] 	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE] 	at com.sun.proxy.$Proxy137.getTransaction(Unknown Source) ~[na:na] 	at org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:474) ~[spring-tx-5.1.4.RELEASE.jar:5.1.4.RELEASE] 	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:289) ~[spring-tx-5.1.4.RELEASE.jar:5.1.4.RELEASE] 	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98) ~[spring-tx-5.1.4.RELEASE.jar:5.1.4.RELEASE] 	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE] 	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688) ~[spring-aop-5.1.4.RELEASE.jar:5.1.4.RELEASE] 	at manon.user.service.RegistrationServiceImpl$$EnhancerBySpringCGLIB$$f2c072d8.ensureAdmin() ~[classes/:na] 	at manon.Application.initApp(Application.java:53) ~[classes/:na] 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na] 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:na] 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na] 	at java.base/java.lang.reflect.Method.invoke(Method.java:566) ~[na:na] 	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:363) ~[spring-beans-5.1.4.RELEASE.jar:5.1.4.RELEASE] 	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:307) ~[spring-beans-5.1.4.RELEASE.jar:5.1.4.RELEASE] 	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:136) ~[spring-beans-5.1.4.RELEASE.jar:5.1.4.RELEASE] 	... 18 common frames omitted Caused by: java.lang.IllegalStateException: Unable to initialize Spring Batch 	at org.springframework.boot.autoconfigure.batch.BasicBatchConfigurer.initialize(BasicBatchConfigurer.java:101) ~[spring-boot-autoconfigure-2.1.2.RELEASE.jar:2.1.2.RELEASE] 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na] 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:na] 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na] 	at java.base/java.lang.reflect.Method.invoke(Method.java:566) ~[na:na] 	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:363) ~[spring-beans-5.1.4.RELEASE.jar:5.1.4.RELEASE] 	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:307) ~[spring-beans-5.1.4.RELEASE.jar:5.1.4.RELEASE] 	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:136) ~[spring-beans-5.1.4.RELEASE.jar:5.1.4.RELEASE] 	... 48 common frames omitted Caused by: java.lang.IllegalArgumentException: DatabaseType not found for product name: [MariaDB] 	at org.springframework.batch.support.DatabaseType.fromProductName(DatabaseType.java:82) ~[spring-batch-infrastructure-4.1.1.RELEASE.jar:4.1.1.RELEASE] 	at org.springframework.batch.support.DatabaseType.fromMetaData(DatabaseType.java:121) ~[spring-batch-infrastructure-4.1.1.RELEASE.jar:4.1.1.RELEASE] 	at org.springframework.batch.core.repository.support.JobRepositoryFactoryBean.afterPropertiesSet(JobRepositoryFactoryBean.java:183) ~[spring-batch-core-4.1.1.RELEASE.jar:4.1.1.RELEASE] 	at org.springframework.boot.autoconfigure.batch.BasicBatchConfigurer.createJobRepository(BasicBatchConfigurer.java:131) ~[spring-boot-autoconfigure-2.1.2.RELEASE.jar:2.1.2.RELEASE] 	at org.springframework.boot.autoconfigure.batch.BasicBatchConfigurer.initialize(BasicBatchConfigurer.java:96) ~[spring-boot-autoconfigure-2.1.2.RELEASE.jar:2.1.2.RELEASE] 	... 55 common frames omitted ```","closed","type: enhancement,","jonathanlermitage","2019-02-04T23:09:12Z","2019-02-11T11:22:20Z"
"","22294","@CachePut evaluates key before cache condition","**Affects:** Spring Context 4.3.4 and higher  ---  Trying to use `@CachePut` on a method that might return `null`.  ```java @CachePut(cacheNames = Constants.Caches.USER, key = ""#result.id"", unless = ""#result == null"") public MyObject doSomething(); ```  You would expect the key expression not to be evaluated if the `unless` condition is `true` but this is not happening. The key is being evaluated before the `unless` condition is evaluated which leads to a   > org.springframework.expression.spel.SpelEvaluationException: EL1007E:(pos 0): Property or field 'id' cannot be found on null  ```java                 if (cacheHit != null && cachePutRequests.isEmpty() && !hasCachePut(contexts)) { 			// If there are no put requests, just use the cache hit 			cacheValue = cacheHit.get(); 			returnValue = wrapCacheValue(method, cacheValue); 		} 		else { 			// Invoke the method if we don't have a cache hit 			returnValue = invokeOperation(invoker); 			cacheValue = unwrapReturnValue(returnValue); 		}  		// Collect any explicit @CachePuts 		collectPutRequests(contexts.get(CachePutOperation.class), cacheValue, cachePutRequests);  		// Process any collected put requests, either from @CachePut or a @Cacheable miss 		for (CachePutRequest cachePutRequest : cachePutRequests) { 			cachePutRequest.apply(cacheValue); 		} ```  The `collectPutRequests` tries to evaluate the key if the `condition` passes (there is no condition). I think the keys need to be evaluated only if `unless` is `false`?","closed","status: superseded,","juanavelez","2019-01-22T23:31:08Z","2021-11-16T12:20:43Z"
"","22528","@AutoConfigureWireMock(port = 0) complains about using 'fixed port'","**Affects:** Spring Cloud Contract, 2.1.0.RELEASE  When annotating a class with `@AutoConfigureWireMock(port = 0)`, WireMock allocates a random port. However, in the log we find the following confusing message from `org.springframework.cloud.contract.wiremock.WireMockTestExecutionListener`: ""You've used fixed ports for WireMock setup - will mark context as dirty. Please use random ports, as much as possible. Your tests will be faster and more reliable and thiswarning will go away"".  This seems to be untrue on several accounts: - A random port is used as expected, as is verifiable in the debugger - Marking the context as dirty makes the tests way slower, as can be seen when using `@DirtiesContext` explicitly - Nevertheless, the warning does not go away    ---","closed","status: declined,","kiesslingh","2019-03-06T12:34:40Z","2019-03-06T13:02:58Z"
"","22486","@RequestBody raises IllegalStateException for form data","**Affects:** Spring Boot 2.1.3.RELEASE  --- Hello!  I noticed something interesting. When you make a mistake in WebFlux application, you don't see real exception, instead you see the same exception every-time:  ``` 2019-02-27 16:41:41.686 ERROR 28059 --- [or-http-epoll-1] a.w.r.e.AbstractErrorWebExceptionHandler : [2af64f7c] 500 Server Error for HTTP POST ""/hello""  java.lang.IllegalStateException: Only one connection receive subscriber allowed.         at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:271) ~[reactor-netty-0.8.5.RELEASE.jar:0.8.5.RELEASE]         at reactor.netty.channel.FluxReceive.subscribe(FluxReceive.java:121) ~[reactor-netty-0.8.5.RELEASE.jar:0.8.5.RELEASE]         at reactor.core.publisher.FluxMap.subscribe(FluxMap.java:62) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:132) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:294) ~[reactor-netty-0.8.5.RELEASE.jar:0.8.5.RELEASE]         at reactor.core.publisher.FluxPeek.subscribe(FluxPeek.java:83) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:132) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:294) ~[reactor-netty-0.8.5.RELEASE.jar:0.8.5.RELEASE]         at reactor.core.publisher.FluxMap.subscribe(FluxMap.java:62) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:132) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoCollectList.subscribe(MonoCollectList.java:59) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:56) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:44) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:56) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:56) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:56) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE] ... ```   Example controller:  ```java package app.controllers;  import org.springframework.web.bind.annotation.PostMapping; import org.springframework.web.bind.annotation.RequestBody; import org.springframework.web.bind.annotation.RestController;  @RestController public class HelloWorld {      @PostMapping(""/hello"")     public String handle(@RequestBody String body)  {         System.out.printf(""\n\n\nbody: %s\n\n\n\n"", body);         return ""Hello WebFlux"";     } } ```  If you make correct request you will see correct response:  ``` $ curl -i -w ""\n\n"" -XPOST -d ""asd"" -H ""Content-Type: application/json"" http://localhost:8080/hello HTTP/1.1 200 OK Content-Type: text/plain;charset=UTF-8 Content-Length: 13  Hello WebFlux ```  If you make a mistake you will receive 500 and lot's of logs that don't tell you what has happened:  ``` curl -i -w ""\n\n"" -XPOST -d ""asd"" http://localhost:8080/hello HTTP/1.1 500 Internal Server Error Content-Type: application/json;charset=UTF-8 Content-Length: 16111  {""timestamp"":""2019-02-27T16:12:13.095+0000"",""path"":""/hello"",""status"":500,""error"":""Internal Server Error"",""message"":""Only one connection receive subscriber allowed."",""trace"":""java.lang.IllegalStateException: Only one connection receive subscriber allowed.\n\tat reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:271)\n\tat reactor.netty.channel.FluxReceive.subscribe(FluxReceive.java:121)\n\tat reactor.core.publisher.FluxMap.subscribe(FluxMap.java:62)\n\tat reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:132)\n\tat reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:294)\n\tat   ... ```  You can see the same exception in application logs:    ``` 2019-02-27 17:12:13.109 ERROR 32312 --- [or-http-epoll-3] a.w.r.e.AbstractErrorWebExceptionHandler : [8aba656e] 500 Server Error for HTTP POST ""/hello""  java.lang.IllegalStateException: Only one connection receive subscriber allowed.         at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:271) ~[reactor-netty-0.8.5.RELEASE.jar:0.8.5.RELEASE]         at reactor.netty.channel.FluxReceive.subscribe(FluxReceive.java:121) ~[reactor-netty-0.8.5.RELEASE.jar:0.8.5.RELEASE]         at reactor.core.publisher.FluxMap.subscribe(FluxMap.java:62) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:132) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:294) ~[reactor-netty-0.8.5.RELEASE.jar:0.8.5.RELEASE]         at reactor.core.publisher.FluxPeek.subscribe(FluxPeek.java:83) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:132) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:294) ~[reactor-netty-0.8.5.RELEASE.jar:0.8.5.RELEASE]         at reactor.core.publisher.FluxMap.subscribe(FluxMap.java:62) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:132) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoCollectList.subscribe(MonoCollectList.java:59) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:56) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoFilterFuseable.subscribe(MonoFilterFuseable.java:44) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:56) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:56) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:56) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoSubscriberContext.subscribe(MonoSubscriberContext.java:47) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:61) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:61) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:61) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoDefaultIfEmpty.subscribe(MonoDefaultIfEmpty.java:37) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:61) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:61) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.Mono.subscribe(Mono.java:3694) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoZip.subscribe(MonoZip.java:128) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:61) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:61) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:61) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:153) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:61) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:61) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:61) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:61) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:353) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:353) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:353) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:275) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:849) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:353) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:114) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:353) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2070) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:438) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:155) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.request(FluxOnAssembly.java:438) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1878) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1752) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:422) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:422) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoCallableOnAssembly.subscribe(MonoCallableOnAssembly.java:82) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:61) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.Mono.subscribe(Mono.java:3694) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:442) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:212) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onSubscribe(FluxOnAssembly.java:422) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:139) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:63) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:132) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.FluxOnAssembly.subscribe(FluxOnAssembly.java:132) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:61) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:61) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:61) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:61) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:61) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:353) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:121) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:353) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1505) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoProcessor.onNext(MonoProcessor.java:389) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:353) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:353) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:121) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.FluxContextStart$ContextStartSubscriber.onNext(FluxContextStart.java:103) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:353) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:287) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:353) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:331) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:353) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1505) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.MonoCollectList$MonoBufferAllSubscriber.onComplete(MonoCollectList.java:118) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:363) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:136) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:363) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:252) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:363) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:136) ~[reactor-core-3.2.6.RELEASE.jar:3.2.6.RELEASE]         at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:372) ~[reactor-netty-0.8.5.RELEASE.jar:0.8.5.RELEASE]         at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:196) ~[reactor-netty-0.8.5.RELEASE.jar:0.8.5.RELEASE]         at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:337) ~[reactor-netty-0.8.5.RELEASE.jar:0.8.5.RELEASE]         at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:334) ~[reactor-netty-0.8.5.RELEASE.jar:0.8.5.RELEASE]         at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:453) ~[reactor-netty-0.8.5.RELEASE.jar:0.8.5.RELEASE]         at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:141) ~[reactor-netty-0.8.5.RELEASE.jar:0.8.5.RELEASE]         at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) ~[netty-transport-4.1.33.Final.jar:4.1.33.Final]         at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) ~[netty-transport-4.1.33.Final.jar:4.1.33.Final]         at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) ~[netty-transport-4.1.33.Final.jar:4.1.33.Final]         at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:191) ~[reactor-netty-0.8.5.RELEASE.jar:0.8.5.RELEASE]         at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) ~[netty-transport-4.1.33.Final.jar:4.1.33.Final]         at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) ~[netty-transport-4.1.33.Final.jar:4.1.33.Final]         at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) ~[netty-transport-4.1.33.Final.jar:4.1.33.Final]         at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438) ~[netty-transport-4.1.33.Final.jar:4.1.33.Final]         at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:323) ~[netty-codec-4.1.33.Final.jar:4.1.33.Final]         at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:297) ~[netty-codec-4.1.33.Final.jar:4.1.33.Final]         at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253) ~[netty-transport-4.1.33.Final.jar:4.1.33.Final]         at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) ~[netty-transport-4.1.33.Final.jar:4.1.33.Final]         at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) ~[netty-transport-4.1.33.Final.jar:4.1.33.Final]         at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) ~[netty-transport-4.1.33.Final.jar:4.1.33.Final]         at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408) ~[netty-transport-4.1.33.Final.jar:4.1.33.Final]         at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) ~[netty-transport-4.1.33.Final.jar:4.1.33.Final]         at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) ~[netty-transport-4.1.33.Final.jar:4.1.33.Final]         at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930) ~[netty-transport-4.1.33.Final.jar:4.1.33.Final]         at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:799) ~[netty-transport-native-epoll-4.1.33.Final-linux-x86_64.jar:4.1.33.Final]         at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:427) ~[netty-transport-native-epoll-4.1.33.Final-linux-x86_64.jar:4.1.33.Final]         at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:328) ~[netty-transport-native-epoll-4.1.33.Final-linux-x86_64.jar:4.1.33.Final]         at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:905) ~[netty-common-4.1.33.Final.jar:4.1.33.Final]         at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_201]         Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException:  Assembly trace from producer [reactor.core.publisher.FluxMap] :         reactor.core.publisher.Flux.map(Flux.java:5689)         reactor.netty.ByteBufFlux.fromInbound(ByteBufFlux.java:70) Error has been observed by the following operator(s):         |_      Flux.map ⇢ reactor.netty.ByteBufFlux.fromInbound(ByteBufFlux.java:70)         |_      Flux.doOnNext ⇢ reactor.netty.ByteBufFlux.retain(ByteBufFlux.java:282)         |_      Flux.map ⇢ org.springframework.http.server.reactive.ReactorServerHttpRequest.getBody(ReactorServerHttpRequest.java:166)         |_      Flux.collectList ⇢ org.springframework.core.io.buffer.DataBufferUtils.join(DataBufferUtils.java:438)         |_      Mono.filter ⇢ org.springframework.core.io.buffer.DataBufferUtils.join(DataBufferUtils.java:439)         |_      Mono.map ⇢ org.springframework.core.io.buffer.DataBufferUtils.join(DataBufferUtils.java:440)         |_      Mono.map ⇢ org.springframework.core.codec.AbstractDataBufferDecoder.decodeToMono(AbstractDataBufferDecoder.java:68)         |_      Mono.error ⇢ org.springframework.web.reactive.result.method.annotation.AbstractMessageReaderArgumentResolver.lambda$readBody$4(AbstractMessageReaderArgumentResolver.java:186)         |_      Mono.onErrorResume ⇢ org.springframework.web.reactive.result.method.annotation.AbstractMessageReaderArgumentResolver.readBody(AbstractMessageReaderArgumentResolver.java:186)         |_      Mono.switchIfEmpty ⇢ org.springframework.web.reactive.result.method.annotation.AbstractMessageReaderArgumentResolver.readBody(AbstractMessageReaderArgumentResolver.java:188)         |_      Mono.defaultIfEmpty ⇢ org.springframework.web.reactive.result.method.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:192)         |_      Mono.doOnError ⇢ org.springframework.web.reactive.result.method.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:193)         |_      Mono.zip ⇢ org.springframework.web.reactive.result.method.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:200)         |_      Mono.flatMap ⇢ org.springframework.web.reactive.result.method.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:135)         |_      Mono.defer ⇢ org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter.handle(RequestMappingHandlerAdapter.java:199)         |_      Mono.then ⇢ org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter.handle(RequestMappingHandlerAdapter.java:199)         |_      Mono.doOnNext ⇢ org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter.handle(RequestMappingHandlerAdapter.java:200)         |_      Mono.doOnNext ⇢ org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter.handle(RequestMappingHandlerAdapter.java:201)         |_      Mono.error ⇢ org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter.handleException(RequestMappingHandlerAdapter.java:234)         |_      Mono.onErrorResume ⇢ org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter.handle(RequestMappingHandlerAdapter.java:202)         |_      Mono.flatMap ⇢ org.springframework.web.reactive.DispatcherHandler.handle(DispatcherHandler.java:151)         |_      Mono.flatMap ⇢ org.springframework.web.reactive.DispatcherHandler.handle(DispatcherHandler.java:152)         |_      Mono.defer ⇢ org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119)         |_      Mono.flatMap ⇢ org.springframework.web.filter.reactive.HiddenHttpMethodFilter.filter(HiddenHttpMethodFilter.java:90)         |_      Mono.defer ⇢ org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119)  ```    ---  This exception is masking real problem and causing a lot of confusion. I noticed that there is a lot issues that mention this exception, so this seems like a widespread problem: https://github.com/spring-projects/spring-framework/issues?q=is%3Aissue+Only+one+connection+receive  Would it be possible to present real exception in logs to make debugging easier?  Thanks!","closed","type: enhancement,","kichewko-giga","2019-02-27T16:16:16Z","2019-04-10T13:28:20Z"
"","22771","WebClient fails to send POST body when ObjectMapper FLUSH_AFTER_WRITE_VALUE is false","**Affects:** Spring 5.1.6.RELEASE / Spring Boot 2.1.4.RELEASE  ---  We have a pre-existing Jackson `ObjectMapper` that is configured with `FLUSH_AFTER_WRITE_VALUE = false`. We are trying to configure the WebFlux `WebClient` to use this ObjectMapper for encoding and decoding. (See following code for how this is configured). When `FLUSH_AFTER_WRITE_VALUE = false`, when making a POST request with this `WebClient` instance, the request body is never written, and the receiving API only receives a null request body. When `FLUSH_AFTER_WRITE_VALUE = true` on this same pre-existing and pre-configured ObjectMapper, the POST request works as expected and the request body is successfully sent to the receiving API.  *Expected behavior* When the Jackson ObjectMappper used for encoding/decoding in WebClient is set to `FLUSH_AFTER_WRITE_VALUE = false`, POST bodies should be sent to the downstream service instead of null.  ---  Code:  Here is our configuration for wiring a pre-existing ObjectMapper in to the `WebClient.Builder`:  ``` ObjectMapper objectMapper = new ObjectMapper();         objectMapper.configure(SerializationFeature.FLUSH_AFTER_WRITE_VALUE, false);          ExchangeStrategies jacksonStrategy = ExchangeStrategies.builder()                 .codecs(config -> {                     config.defaultCodecs().jackson2JsonEncoder(new Jackson2JsonEncoder(objectMapper, MediaType.APPLICATION_JSON));                     config.defaultCodecs().jackson2JsonDecoder(new Jackson2JsonDecoder(objectMapper, MediaType.APPLICATION_JSON));                 }).build();          WebClient.builder().exchangeStrategies(jacksonStrategy); ```  The usage looks straightforward:  ``` return webClient.post()                 .uri(API_URL)                 .syncBody(new RequestDTO())                 .exchange()                 .flatMap(clientResponse -> clientResponse.bodyToMono(ResponseDTO.class)); ```  We can verify with WireMock or with an actual receiving API that the `RequestDTO` request body is not present in the outbound request. For example:  ```                                                Request was not matched                                                =======================  ----------------------------------------------------------------------------------------------------------------------- | Closest stub                                             | Request                                                  | -----------------------------------------------------------------------------------------------------------------------                                                            | POST                                                       | POST /api/v1/instant                                            | /api/v1/instant                                                            | {                                                          |                                                     <<<<< Body is not present   ""instant"" : ""1970-01-01T00:00:12.345Z""                   | }                                                          |                                                            | ----------------------------------------------------------------------------------------------------------------------- ```  If we set `FLUSH_AFTER_WRITE_VALUE` back to `true`, with everything else being equal, we observe that the request body is written as expected.","closed","type: bug,","scottjohnson","2019-04-09T00:45:03Z","2019-04-15T12:42:56Z"
"","22619","ExceptionHandlerExceptionResolver should support exceptions from any handler","**Affects:** Spring 5.0.9  I have a Spring Boot service where custom JSON error responses are returned for cases like 400, 404, 415, 500 etc. This works great by using `@ExceptionHandler`.  Recently we added static resources to the mix. But when accessing one of them that does not exist, the default Spring 404 JSON body is returned instead of ours. As it turns out, `ExceptionHandlerExceptionResolver` and superclasses are refusing to resolve due to the fact that the handler method is not instance of `HandlerMethod` but `ResourceHttpRequestHandler` and error handling ends up somewhere in dispatcher servlet with the ""default"" 404 response.  I've managed to re-use `ExceptionHandlerExceptionResolver` also for static resources not found, but it is quite hackish and does not feel right - see below. Are there any plans to add support for this to `ExceptionHandlerExceptionResolver`? Or did I overlook something?  ```java @EnableWebMvc @Configuration public class WebConfiguration implements WebMvcConfigurer {      @Override     public void addResourceHandlers(ResourceHandlerRegistry registry) {         registry                 .addResourceHandler(""/apidocs/**"")                 .addResourceLocations(""classpath:/apidocs/"")                 .resourceChain(true)                 .addResolver(new ThrowingPathResourceResolver());     }      @Override     public void extendHandlerExceptionResolvers(List resolvers) {          ExceptionHandlerExceptionResolver defaultResolver = (ExceptionHandlerExceptionResolver) resolvers.stream()                 .filter(resolver -> resolver instanceof ExceptionHandlerExceptionResolver).findAny()                 .orElseThrow(() -> new IllegalStateException(                         ""No registered "" + ExceptionHandlerExceptionResolver.class.getSimpleName() + "" found.""));          ExceptionHandlerExceptionResolver resolver = new ResourceExceptionHandlerExceptionResolver();         resolver.setApplicationContext(defaultResolver.getApplicationContext());         resolver.setContentNegotiationManager(defaultResolver.getContentNegotiationManager());         resolver.setCustomArgumentResolvers(defaultResolver.getCustomArgumentResolvers());         resolver.setCustomReturnValueHandlers(defaultResolver.getCustomReturnValueHandlers());          resolver.afterPropertiesSet();          resolver.setReturnValueHandlers(defaultResolver.getReturnValueHandlers() == null ? null                 : defaultResolver.getReturnValueHandlers().getHandlers());         resolver.setArgumentResolvers(defaultResolver.getArgumentResolvers() == null ? null                 : defaultResolver.getArgumentResolvers().getResolvers());          resolvers.add(resolver);     }      private class ResourceExceptionHandlerExceptionResolver extends ExceptionHandlerExceptionResolver {          @Override         public ModelAndView resolveException(HttpServletRequest request, HttpServletResponse response, Object handler,                 Exception ex) {              if (handler instanceof ResourceHttpRequestHandler) {                 return doResolveException(request, response, (HandlerMethod) null, ex);             }             return null;         }     }      public class ResourceNotFoundException extends RuntimeException {         private static final long serialVersionUID = 1L;          public ResourceNotFoundException(String message) {             super(message);         }     }      private class ThrowingPathResourceResolver extends PathResourceResolver {          @Override         public Resource resolveResource(HttpServletRequest request, String requestPath,                 List locations, ResourceResolverChain chain) {              Resource resource = super.resolveResource(request, requestPath, locations, chain);             if (resource == null) {                 throw new ResourceNotFoundException(                         ""The resource "" + request.getRequestURL() + "" could not be found."");             }              return resource;         }     } ```","closed","type: enhancement,","vghero","2019-03-20T17:13:43Z","2021-04-07T12:06:20Z"
"","22440","Data-Redis: JedisConnectionFactory ignores ssl settings in JedisCluster constructor call","**Affects:** data-redis:2.1.4  JedisConnectionFactory:418       return StringUtils.hasText(getPassword()) 				? new JedisCluster(hostAndPort, connectTimeout, readTimeout, redirects,       getPassword(), poolConfig) 				: new JedisCluster(hostAndPort, connectTimeout, readTimeout, redirects, poolConfig);  Use the `JedisCluster` constructor with ssl parameter, if `clientConiguration.useSsl` is true.  The current implementation fails without any logs when sending `sendCommand(AUTH)` because SSL ist not considered. This results in a successful app start. The app will fail on the first redis server call, because the `JedisClusterConnectionHandler` class variable `cache` is empty.","closed","for: external-project,","hannes-angst","2019-02-20T11:59:32Z","2019-03-22T11:46:08Z"
"","22510","Jackson2Tokenizer ignores USE_BIG_DECIMAL_FOR_FLOATS deserialization feature","**Affects:** `spring-web-5.1.3.RELEASE`  ---  In `org.springframework.http.codec.json.Jackson2Tokenizer` ctor `TokenBuffer` is created without passing `DeserializationContext` inside `com.fasterxml.jackson.databind.util.TokenBuffer`. This leads to `USE_BIG_DECIMAL_FOR_FLOATS` being ignored when parsing.  ```java private Jackson2Tokenizer(JsonParser parser, boolean tokenizeArrayElements) {     Assert.notNull(parser, ""'parser' must not be null"");      this.parser = parser;     this.tokenizeArrayElements = tokenizeArrayElements;     this.tokenBuffer = new TokenBuffer(parser); // <--- here     this.inputFeeder = (ByteArrayFeeder) this.parser.getNonBlockingInputFeeder(); } ```","closed","type: enhancement,","ilya-murzinov","2019-03-05T09:02:21Z","2019-04-11T12:33:20Z"
"","22732","Can't use JNDI test context (SimpleNamingContext) with Hibernate 5.2","**Affects:** `spring-test` 5.1.6.RELEASE  I am trying to create datasources to bind them in JNDI to run my JUnit tests.   ```java SimpleNamingContextBuilder jndiCtx = new SimpleNamingContextBuilder(); jndiCtx.bind(JNDI_TRANSACTION_MANAGER, createTransactionManager()); jndiCtx.bind(JNDI_DATASOURCE_NAME, createDataSource()); jndiCtx.activate(); ```  When I do a `lookup()` it works, as the code bellow:  ```java DataSource ds = new InitialContext().doLookup(JNDI_DATASOURCE_NAME); System.out.println(ds); //it works ```  But when running Hibernate, it throws an exception:    Stack trace  ``` 16:31:47.619 [main] INFO org.springframework.mock.jndi.SimpleNamingContextBuilder - Static JNDI binding: [java:/TransactionManager] = [Transaction: unknown] 16:31:47.696 [main] INFO org.springframework.mock.jndi.SimpleNamingContextBuilder - Static JNDI binding: [my-datasource/datasource] = [org.apache.commons.dbcp2.BasicDataSource@ef9296d] 16:31:47.696 [main] INFO org.springframework.mock.jndi.SimpleNamingContextBuilder - Activating simple JNDI environment 16:31:47.701 [main] DEBUG org.springframework.mock.jndi.SimpleNamingContext - Static JNDI lookup: [my-datasource/datasource] org.apache.commons.dbcp2.BasicDataSource@ef9296d 16:31:48.695 [main] INFO org.hibernate.validator.util.Version - Hibernate Validator 4.1.0.Final 16:31:48.699 [main] DEBUG org.hibernate.validator.engine.resolver.DefaultTraversableResolver - Found javax.persistence.PersistenceUtil on classpath. 16:31:48.699 [main] INFO org.hibernate.validator.engine.resolver.DefaultTraversableResolver - Instantiated an instance of org.hibernate.validator.engine.resolver.JPATraversableResolver. 16:31:48.701 [main] DEBUG org.hibernate.validator.xml.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only  javax.persistence.PersistenceException: [PersistenceUnit: pu-coparticipacao] Unable to build Hibernate SessionFactory 	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.persistenceException(EntityManagerFactoryBuilderImpl.java:967) 	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:892) 	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:58) 	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) 	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:39) 	at br.com.qualirede.coparticipacao.base.AbstractDaoCDITest.(AbstractDaoCDITest.java:61) 	at br.com.qualirede.coparticipacao.cdi.LiquibaseProducerCDITest.(LiquibaseProducerCDITest.java:15) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) 	at org.junit.platform.commons.util.ReflectionUtils.newInstance(ReflectionUtils.java:352) 	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:60) 	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.instantiateTestClass(ClassTestDescriptor.java:208) 	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.instantiateAndPostProcessTestInstance(ClassTestDescriptor.java:195) 	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$testInstanceProvider$0(ClassTestDescriptor.java:185) 	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$testInstanceProvider$1(ClassTestDescriptor.java:189) 	at java.util.Optional.orElseGet(Optional.java:267) 	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$testInstanceProvider$2(ClassTestDescriptor.java:188) 	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:81) 	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:58) 	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.prepare(HierarchicalTestExecutor.java:89) 	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:74) 	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120) 	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184) 	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175) 	at java.util.Iterator.forEachRemaining(Iterator.java:116) 	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481) 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471) 	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151) 	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174) 	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) 	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418) 	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120) 	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) 	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108) 	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79) 	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120) 	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184) 	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175) 	at java.util.Iterator.forEachRemaining(Iterator.java:116) 	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481) 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471) 	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151) 	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174) 	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) 	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418) 	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120) 	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) 	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108) 	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79) 	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:55) 	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) 	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) 	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) 	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) 	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:69) 	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) 	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) 	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) Caused by: org.hibernate.engine.jndi.JndiException: Error parsing JNDI name [my-datasource/datasource] 	at org.hibernate.engine.jndi.internal.JndiServiceImpl.parseName(JndiServiceImpl.java:124) 	at org.hibernate.engine.jndi.internal.JndiServiceImpl.locate(JndiServiceImpl.java:95) 	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.configure(DatasourceConnectionProviderImpl.java:98) 	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) 	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:240) 	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:210) 	at org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:77) 	at org.hibernate.internal.SessionFactoryImpl$1.obtainConnection(SessionFactoryImpl.java:419) 	at org.hibernate.hql.spi.id.IdTableHelper.executeIdTableCreationStatements(IdTableHelper.java:67) 	at org.hibernate.hql.spi.id.global.GlobalTemporaryTableBulkIdStrategy.finishPreparation(GlobalTemporaryTableBulkIdStrategy.java:125) 	at org.hibernate.hql.spi.id.global.GlobalTemporaryTableBulkIdStrategy.finishPreparation(GlobalTemporaryTableBulkIdStrategy.java:42) 	at org.hibernate.hql.spi.id.AbstractMultiTableBulkIdStrategyImpl.prepare(AbstractMultiTableBulkIdStrategyImpl.java:88) 	at org.hibernate.internal.SessionFactoryImpl.(SessionFactoryImpl.java:302) 	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:445) 	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:889) 	... 60 more Caused by: javax.naming.OperationNotSupportedException: SimpleNamingContext does not support [javax.naming.Name] 	at org.springframework.mock.jndi.SimpleNamingContext.getNameParser(SimpleNamingContext.java:291) 	at javax.naming.InitialContext.getNameParser(InitialContext.java:505) 	at org.hibernate.engine.jndi.internal.JndiServiceImpl.parseName(JndiServiceImpl.java:118) 	... 74 more ```    This happens because the mock is incomplete. `SimpleNamingContext` class has unimplemented methods, so we can't use it with Hibernate 5.2.  ```java public class SimpleNamingContext implements Context {      // ...     public NameParser getNameParser(Name name) throws NamingException {         throw new OperationNotSupportedException(""SimpleNamingContext does not support [javax.naming.Name]"");     }      public NameParser getNameParser(String name) throws NamingException {         throw new OperationNotSupportedException(""SimpleNamingContext does not support [javax.naming.Name]"");     }      public Name composeName(Name name, Name prefix) throws NamingException {         throw new OperationNotSupportedException(""SimpleNamingContext does not support [javax.naming.Name]"");     }     // ... } ```","closed","status: feedback-provided,","edpichler","2019-04-03T19:42:21Z","2019-04-10T13:53:57Z"
"","22751","WebClient request header is not sent during request/response exchange","**Affects:** \5.0.5.RELEASE   Spring: 5.0.5.RELEASE Spring Webflux: 5.0.5.RELEASE Spring Boot: 2.0.6.RELEASE  Within an application that uses the WebClient class to make requests to an API which requires an Authorization header, after upgrading the application libraries from Spring Boot 2.0.1.RELEASE to 2.0.6.RELEASE, the client fails to send headers which are set by `.header(""Authorization"", ""Bearer "" + this.apiKey)`.  Ex.              Mono request = wc.get().uri(""/families"")                 .accept(MediaType.APPLICATION_JSON)                 .header(""Authorization"", ""Bearer "" + this.apiKey)                 .exchange();  This happens regardless of whether I resolve the response asynchronously or using block():               response = request             .doOnRequest(req -> {                 LOGGER.info(this.apiUrl +""/families"");              })             .doOnSuccess((ClientResponse res) -> {                 LOGGER.info(res.toString)             });             //.block();  Oddly enough, I'm using a .filter() when I build the WebClient and it reports that the headers are part of the request. Compare a WebClient/Reactor/Netty request v.s. ngninx log:        2019-04-05 11:32:29.884  INFO 42008 --- [atcher-worker-1] : Getting product details for all product families      2019-04-05 11:32:31.367  INFO 42008 --- [atcher-worker-1] : Request: GET http://localhost:8080/mcapi/families      2019-04-05 11:32:31.369  INFO 42008 --- [atcher-worker-1] : Accept: application/json      2019-04-05 11:32:31.369  INFO 42008 --- [atcher-worker-1] : Authorization: Bearer blahblahblahblah...      2019-04-05 11:32:39.315  INFO 42008 --- [atcher-worker-1] : http://localhost:8080/mcapi/families    `      CUSTOM_LOG: 172.17.0.1 - - [05/Apr/2019:15:32:39 +0000] ""GET /mcapi/families HTTP/1.1"" 200 3852 ""-"" ""ReactorNetty/0.7.4.BUILD-SNAPSHOT"" ""-""""-"" ""-""  `  ... to a curl request v.s. nginx log:  `      $ curl -XGET ""http://localhost:8080/mcapi/families"" -H ""Authorization: Bearer blahblahblahblah...""  `   `      CUSTOM_LOG: 172.17.0.1 - - [05/Apr/2019:15:09:12 +0000] ""GET /mcapi/families HTTP/1.1"" 200 3852 ""-"" ""curl/7.54.0"" ""-""""Bearer blahblahblahblah..."" ""-""  `","closed","status: invalid,","dancingfrog","2019-04-05T18:25:23Z","2019-05-08T12:50:11Z"
"","22318","Avoid duplicate call to findAnnotations in DefaultListableBeanFactory.findAnnotationOnBean","**Affects:** 5.2.0.BUILD-SNAPSHOT  https://github.com/spring-projects/spring-framework/blob/d3b5ba7a361866ea96fcc64d3f76be9b5be3b8e4/spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultListableBeanFactory.java#L671-L683  If `abd.getBeanClass()` returns a `Class` that is equal to `beanType`, it looks to me like the call to `AnnotationUtils.findAnnotation` on line 680 duplicates the call made on line 673 and can be skipped.","closed","type: enhancement,","wilkinsona","2019-01-28T17:49:26Z","2019-02-06T09:17:44Z"
"","22307","ApplicationListenerMethodAdapter does not find @Ordered annotation for dynamic proxies","**Affects:** 5.1.x  Is there a specific reason for ApplicationListenerMethodAdapter to use the ""method"" variable instead of the ""targetMethod"" in its constructor when resolving Order annotations? Because for dynamic proxies, this results in a funny situation: EventListener annotation is present on the target class's method, but the Order annotation must be placed on the interface's method, otherwise it is not found.  	... 	EventListener ann = AnnotatedElementUtils.findMergedAnnotation(this.targetMethod, EventListener.class); 	... 	this.order = resolveOrder(method);  later, in resolveOrder(): 	Order ann = AnnotatedElementUtils.findMergedAnnotation(method, Order.class);","closed","type: bug,","gviczai","2019-01-25T12:53:27Z","2019-02-11T08:16:52Z"
"","22797","Disable ShallowEtagHeaderFilter when ETag handled in application","**Affects:** 5.1.6.RELEASE  --- Hello,  I am working on a web application that serves some files stored in AWS S3, acting as a proxy. S3 provides ETags for these files. I would like to reuse those ETags but `ShallowEtagHeaderFilter` does not seem to allow it.  When I let the `ShallowEtagHeaderFilter` to generate the ETag, it consumes too much memory for big files.  When I set the ETag manually in the controller, the `If-None-Match` header does not seem to be considered. I would need to copy some pieces of code from `ShallowEtagHeaderFilter` in order to have a full working feature.  So I ended up not using ETags for this endpoint for now: `ShallowEtagHeaderFilter.disableContentCaching(request);`   I would expect `ShallowEtagHeaderFilter` to be able to consider the existing ETag instead of regenerating it.  Thanks","closed","type: enhancement,","mickaeltr","2019-04-15T13:25:41Z","2020-02-29T12:47:05Z"
"","22720","o.s.h.server.reactive.ChannelSendOperator may leak the memory on cancel/error","**Affects:** 5.1.6.RELEASE  --- `org.springframework.http.server.reactive.ChannelSendOperator` does prefetch  https://github.com/spring-projects/spring-framework/blob/master/spring-web/src/main/java/org/springframework/http/server/reactive/ChannelSendOperator.java#L132  When cancel/error signal is received by `org.springframework.http.server.reactive.ChannelSendOperator.WriteCompletionBarrier` the item that was prefetched should be freed.  This is related to https://github.com/spring-cloud/spring-cloud-gateway/issues/810","closed","type: bug,","violetagg","2019-04-01T15:01:29Z","2019-04-02T13:50:53Z"
"","22793","Different property resolution if property value is empty","**Affects:** 5.1.6 / 4.3.23 + Spring Tools 4.2.0  ```java @Component public class PropertiesTest {  	@Value(""${key}"") 	String property;          @Value(""${key}"") 	String[] propertyArr; 	 } ```  If a property `key` is defined without a value in application.properties (i.e. `key=`) the variable `property` is initialized with an empty String and `propertyArr` with an empty String array.  If `key` is defined without a value in a 'Spring Boot App' Eclipse launch configuration instead (""Override Properties"" feature) the start of the application fails:  ``` java.lang.IllegalArgumentException: Could not resolve placeholder 'key' in value ""${key}"" ````  Spring should *always* resolve a property with an empty value as an empty String / String array.","closed","for: external-project,","renetrefft","2019-04-14T10:27:44Z","2019-04-17T09:19:43Z"
"","22789","Extract MimeTypeUtils.ConcurrentLruCache and make it public","**Affects:** 5.1.6  --- I'm using a custom `LruCache` based on `LinkedHashMap.removeEldestEntry` and I ran a search in this repository to see if such a thing is already provided to discover there is a nice `MimeTypeUtils.ConcurrentLruCache`, but it's private.  Is there a chance to extract it somewhere else and make it public?","closed","type: enhancement,","andrei-ivanov","2019-04-12T07:26:13Z","2020-08-26T14:05:59Z"
"","22791","Illegal reflective access in ContextOverridingClassLoader.isEligibleForOverriding","**Affects:** 5.1.6  --- ``` java.lang.reflect.InaccessibleObjectException: Unable to make protected final java.lang.Class java.lang.ClassLoader.findLoadedClass(java.lang.String) accessible: module java.base does not ""opens java.lang"" to unnamed module @5922ae77   at java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:340) ~[?:?]   at java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:280) ~[?:?]   at java.lang.reflect.Method.checkCanSetAccessible(Method.java:198) ~[?:?]   at java.lang.reflect.Method.setAccessible(Method.java:192) ~[?:?]   at org.springframework.util.ReflectionUtils.makeAccessible(ReflectionUtils.java:602) ~[spring-core-5.1.6.RELEASE.jar!/:5.1.6.RELEASE]   at org.springframework.context.support.ContextTypeMatchClassLoader$ContextOverridingClassLoader.isEligibleForOverriding(ContextTypeMatchClassLoader.java:93) ~[spring-context-5.1.6.RELEASE.jar!/:5.1.6.RELEASE]   at org.springframework.core.OverridingClassLoader.loadClass(OverridingClassLoader.java:87) ~[spring-core-5.1.6.RELEASE.jar!/:5.1.6.RELEASE]   at java.lang.ClassLoader.loadClass(ClassLoader.java:521) ~[?:?]   at org.springframework.core.OverridingClassLoader.loadClass(OverridingClassLoader.java:82) ~[spring-core-5.1.6.RELEASE.jar!/:5.1.6.RELEASE]   at org.springframework.context.support.ContextTypeMatchClassLoader.loadClass(ContextTypeMatchClassLoader.java:69) ~[spring-context-5.1.6.RELEASE.jar!/:5.1.6.RELEASE]   at org.springframework.beans.factory.support.AbstractBeanFactory.doResolveBeanClass(AbstractBeanFactory.java:1444) ~[spring-beans-5.1.6.RELEASE.jar!/:5.1.6.RELEASE]   at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1384) ~[spring-beans-5.1.6.RELEASE.jar!/:5.1.6.RELEASE]   at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineTargetType(AbstractAutowireCapableBeanFactory.java:680) ~[spring-beans-5.1.6.RELEASE.jar!/:5.1.6.RELEASE]   at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.predictBeanType(AbstractAutowireCapableBeanFactory.java:647) ~[spring-beans-5.1.6.RELEASE.jar!/:5.1.6.RELEASE]   at org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:1518) ~[spring-beans-5.1.6.RELEASE.jar!/:5.1.6.RELEASE]   at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:507) ~[spring-beans-5.1.6.RELEASE.jar!/:5.1.6.RELEASE]   at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:477) ~[spring-beans-5.1.6.RELEASE.jar!/:5.1.6.RELEASE]   at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:191) ~[spring-context-5.1.6.RELEASE.jar!/:5.1.6.RELEASE]   at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:721) ~[spring-context-5.1.6.RELEASE.jar!/:5.1.6.RELEASE]   at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:534) ~[spring-context-5.1.6.RELEASE.jar!/:5.1.6.RELEASE]   at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142) ~[spring-boot-2.1.4.RELEASE.jar!/:2.1.4.RELEASE]   at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775) ~[spring-boot-2.1.4.RELEASE.jar!/:2.1.4.RELEASE]   at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) ~[spring-boot-2.1.4.RELEASE.jar!/:2.1.4.RELEASE]   at org.springframework.boot.SpringApplication.run(SpringApplication.java:316) ~[spring-boot-2.1.4.RELEASE.jar!/:2.1.4.RELEASE]   at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260) ~[spring-boot-2.1.4.RELEASE.jar!/:2.1.4.RELEASE]   at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248) ~[spring-boot-2.1.4.RELEASE.jar!/:2.1.4.RELEASE] ```  Or in test: ``` java.lang.IllegalStateException: Failed to load ApplicationContext  	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125) 	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108) 	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190) 	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132) 	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246) 	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227) 	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289) 	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) 	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291) 	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246) 	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97) 	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) 	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) 	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61) 	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70) 	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48) 	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48) 	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48) 	at org.junit.rules.RunRules.evaluate(RunRules.java:20) 	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) 	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190) 	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) 	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) 	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) 	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) 	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make protected final java.lang.Class java.lang.ClassLoader.findLoadedClass(java.lang.String) accessible: module java.base does not ""opens java.lang"" to unnamed module @376b4233 	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:340) 	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:280) 	at java.base/java.lang.reflect.Method.checkCanSetAccessible(Method.java:198) 	at java.base/java.lang.reflect.Method.setAccessible(Method.java:192) 	at org.springframework.util.ReflectionUtils.makeAccessible(ReflectionUtils.java:602) 	at org.springframework.context.support.ContextTypeMatchClassLoader$ContextOverridingClassLoader.isEligibleForOverriding(ContextTypeMatchClassLoader.java:93) 	at org.springframework.core.OverridingClassLoader.loadClass(OverridingClassLoader.java:87) 	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521) 	at org.springframework.core.OverridingClassLoader.loadClass(OverridingClassLoader.java:82) 	at org.springframework.context.support.ContextTypeMatchClassLoader.loadClass(ContextTypeMatchClassLoader.java:69) 	at org.springframework.beans.factory.support.AbstractBeanFactory.doResolveBeanClass(AbstractBeanFactory.java:1444) 	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1384) 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineTargetType(AbstractAutowireCapableBeanFactory.java:680) 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.predictBeanType(AbstractAutowireCapableBeanFactory.java:647) 	at org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:1518) 	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:507) 	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:477) 	at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:191) 	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:721) 	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:534) 	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775) 	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316) 	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127) 	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99) 	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117) 	... 28 more ```","open","in: core,","andrei-ivanov","2019-04-12T13:34:25Z","2022-02-21T00:58:58Z"
"","22607","RuntimeException inside TaskDecorator prevents thread from terminating","**Affects:** 5.1.5.RELEASE  If a `RuntimeException` is thrown inside `TaskDecorator`'s `Runnable`, instead of application getting shut down, it logs the exception and gets hung forever.  ```java public class AsyncExecutor {      public static void main(String[] args) throws InterruptedException, ExecutionException {         runWithDecorator();         System.out.println(""Execution complete"");         System.exit(0);     }      private static void runWithDecorator() throws ExecutionException, InterruptedException {         getExecutorWithDecorator()                 .submit(() -> System.out.println(""Executing async task""))                 .get();      }      private static ThreadPoolTaskExecutor getExecutorWithDecorator() {         ThreadPoolTaskExecutor threadPoolTaskExecutor = new ThreadPoolTaskExecutor();         threadPoolTaskExecutor.setTaskDecorator(new AsyncTaskDecorator());         threadPoolTaskExecutor.initialize();         return threadPoolTaskExecutor;     }      private static class AsyncTaskDecorator implements TaskDecorator {          @Override         public Runnable decorate(Runnable runnable) {             return () -> {                 if (true) {                     throw new RuntimeException();                 }                 runnable.run();             };         }     } } ```  ---","closed","status: feedback-provided,","yp-palF","2019-03-17T21:38:50Z","2019-04-21T16:41:03Z"
"","22761","Avoid MessageFormat processing for default @Pattern validation message","**Affects:** 5.1.5 RELEASE  **Example1**  Let's say a form bean has the following annotation:  @Pattern(regexp = ""[\\w.'-]{1,}@[\\w.'-]{1,}"") private String email;`   If an invalid email is given, validation fails and the following error message is presented by form:errors tag.  ... must match ""[\w.-]{1,}@[\w.-][Ljavax.validation.constraints.Pattern$Flag;@4f413b2c""  Single quotes disappear and the second `{1,}` occurrence is replaced with `[Ljavax.validation.constraints.Pattern$Flag;@4f413b2c`.  **Example2:**  private Integer age;   Supply `age={0}aaa'bbb` then you get the following error message:  Failed to convert property value of type java.lang.String to required type java.lang.Integer  for property age; nested exception is java.lang.NumberFormatException: For input string:  ""org.springframework.context.support.DefaultMessageSourceResolvable: codes formData.age,age];  arguments []; default message [age]aaabbb""  Again, `{0}` is replaced and single quote disappears.  The cause is that the values (the regexp in example1 and the user input in example2) are passed to `java.text.MessageFormat#applyPattern()` with no proper escaping.  It looks like the bug (example1) is similar to #11988.","closed","type: enhancement,","t-tera","2019-04-08T06:36:28Z","2019-04-08T13:50:08Z"
"","22410","DefaultConversionService fails to properly convert an Object[] to a int[]","**Affects:** 5.1.5   Converting an array of `Object` to an array of `int` behaves very different from converting it to an array of `Integer`.  ``` DefaultConversionService.getSharedInstance().convert(new Object[]{23, 47, 4711}, Integer[].class); ``` results in `new Integer[]{23,47,4711}` as expected..  ``` DefaultConversionService.getSharedInstance().convert(new Object[]{23, 47, 4711}, int[].class); ``` results in `new int[]{23}`, i.e. an array only containing the first element.  The result of the second expression should be `new int[]{23,47,4711}`  A preliminary analysis of what is going on by @odrotbohm :  > The different path is taken in the assignability check-in `ConversionUtils.canConvertElements(…)`. `Integer` is assignable to `Object`, `int` is not. That's why the `ArrayToArrayConverter` is ruled out eagerly.","closed","type: bug,","schauder","2019-02-13T15:33:22Z","2019-02-14T13:50:09Z"
"","22507","Remove `FieldInterceptor` in docstring","**Affects:** 5.1.5  If Spring does not support `FieldInterceptor`, let us remove it from `Interceptor`'s docstring? Link: https://github.com/spring-projects/spring-framework/blob/master/spring-aop/src/main/java/org/aopalliance/intercept/Interceptor.java#L35","closed","type: task,","j2gg0s","2019-03-05T03:12:20Z","2019-03-05T13:31:25Z"
"","22626","Resource leak when Controller returns a ResponseEntity","**Affects:** 5.1.5  I return a stream with `BodyBuilder.body(new InputStreamResource(stream))` from a `@Controller`:  ```java @SpringBootApplication @Controller public class Issue22626 {  	@Autowired(required = false) 	private Supplier source = () -> new NullInputStream(10000);  	@GetMapping(""/"") 	public ResponseEntity download() { 		var resource = new InputStreamResource(source.get()); 		return ok().eTag(""Issue22626"").lastModified(22626).body(resource); 	}  	public static void main(String[] args) { 		run(Issue22626.class, args); 	} } ```  That stream is a proxy which helps me to detect resource leaks. The proxy contains the stack trace of the last read operation and a scheduled task to close the resource and log an error after 10 minutes of inactivity.  In the region 5 out of 10000 streams, I see a resource leak. That is, the log shows the ""Returning resource"" message, then shows that the thread is already serving others requests and then after 10 minutes I see a message from my stream proxy that the resource is leaking. There was no read operation at all called on that stream. Which means the framework left the resource untouched and never reaches `ResourceHttpMessageConverter.writeContent()` (which would then close the stream). I tried to dig into the framework, but it is for me not possible to understand what is going on at all.   ~Note, this is an production issue which happens in the region 5 out of 10000, I cannot provide something to reproduce this memory leak. I will however try my best to give some more follow up information.~ I will provide a minimal application to reproduce the issue.  All I can see is that the framework assumes that ResourceHttpMessageConverter.writeContent() would close the resource. I think that is too late. Obviously many things could happen before reaching that place (and something silently does… ~my suspicion goes into a unfortunately timed client sided connection closing~) which leaves the resource unclosed. Could you please revise the framework code in regard of serving a Controller which returns an InputStream and make sure that the very first thing into which this Controller returns wraps the stream into a try-with-resource block?","closed","status: invalid,","mixcloud-downloader","2019-03-21T12:57:03Z","2022-05-18T20:37:01Z"
"","22708","Expose Jaxb2Marshaller createMarshaller() and createUnmarshaller() methods","**Affects:** 5.1.5  --- Having defined a `Jaxb2Marshaller` with some custom properties to be used with Spring AMQP, I'm trying now to re-use it and to use the JAXB `Marshaller`/`Unmarshaller` it can generate directly with a `javax.ws.rs.ext.ContextResolver`, but those methods are protected so I can't invoke them directly. As a temporary workaround, I've used reflection.  Please make them public.","closed","type: enhancement,","andrei-ivanov","2019-03-29T15:26:04Z","2019-04-02T14:56:28Z"
"","22481","WebFlux ServerResponse built from other ServerResponse drops cookies and hints","**Affects:** 5.1.5  ---  Static interface method `ServerResponse.from`(references to constructor of `DefaultServerResponseBuilder`) no setting `cookies` and `hints` fields from provided `ServerResponse`:  ```java public DefaultServerResponseBuilder(ServerResponse other) { 	Assert.notNull(other, ""ServerResponse must not be null""); 	this.statusCode = (other instanceof AbstractServerResponse ? 			((AbstractServerResponse) other).statusCode : other.statusCode().value()); 	this.headers.addAll(other.headers()); } ```  May causing cookies and hints not pass down through `HandlerFilterFunction` chain: ```java @Override public Mono filter(ServerRequest request, HandlerFunction next) {     return next.handle(request).flatMap(it -> ServerResponse.from(it).syncBody("""")); } ```","closed","in: web,","xJoeWoo","2019-02-27T12:36:19Z","2019-03-26T14:49:46Z"
"","22416","ReflectUtils.defineClass() ignores the ClassLoader argument in Java 11","**Affects:** 5.1.5  ---  In Java 11 [`ReflectUtils.defineClass()`](https://github.com/spring-projects/spring-framework/blob/v5.1.5.RELEASE/spring-core/src/main/java/org/springframework/cglib/core/ReflectUtils.java#L489) uses the new `MethodHandles.Lookup.defineClass()`, this method uses the `contextClass`'s classloader, instead of the `loader` argument.  This difference in behaviour in Java 8 and Java 11 sometimes produces unexpected errors (eg. java.lang.LinkageError: attempted duplicate class definition)  Related issue #22310","closed","in: core,","dvega","2019-02-14T18:04:15Z","2019-03-27T18:53:49Z"
"","22317","Kotlin Beans DSL doesn't work with `object`","**Affects:** 5.1.4.RELEASE  Those are the steps to reproduce:  * Create a new project using Maven/Kotlin/Spring Web Flux with the Spring Initializer * Use the following code snippet:  ```kotlin     import org.springframework.boot.autoconfigure.SpringBootApplication     import org.springframework.boot.runApplication     import org.springframework.context.support.beans          @SpringBootApplication     class FailApplication          fun beans() = beans {         bean {             object : Foo() {                 override fun bar() = 42             }         }     }          abstract class Foo {         abstract fun bar(): Int     }          fun main(args: Array) {         runApplication(*args) {             addInitializers(beans())         }     } ```  This is the log I get: ```   .   ____          _            __ _ _  /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \ ( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \  \\/  ___)| |_)| | | | | || (_| |  ) ) ) )   '  |____| .__|_| |_|_| |_\__, | / / / /  =========|_|==============|___/=/_/_/_/  :: Spring Boot ::        (v2.1.2.RELEASE)  2019-01-28 16:36:47.794 ERROR 87999 --- [           main] o.s.boot.SpringApplication               : Application run failed  java.lang.NoClassDefFoundError: ch/frankel/blog/spring/fail/FailApplicationKt$beans$1$1$1 	at ch.frankel.blog.spring.fail.FailApplicationKt$beans$1.invoke(FailApplication.kt:41) ~[classes/:na] 	at ch.frankel.blog.spring.fail.FailApplicationKt$beans$1.invoke(FailApplication.kt) ~[classes/:na] 	at org.springframework.context.support.BeanDefinitionDsl.initialize(BeanDefinitionDsl.kt:286) ~[spring-context-5.1.4.RELEASE.jar:5.1.4.RELEASE] 	at org.springframework.context.support.BeanDefinitionDsl.initialize(BeanDefinitionDsl.kt:78) ~[spring-context-5.1.4.RELEASE.jar:5.1.4.RELEASE] 	at org.springframework.boot.SpringApplication.applyInitializers(SpringApplication.java:649) ~[spring-boot-2.1.2.RELEASE.jar:2.1.2.RELEASE] 	at org.springframework.boot.SpringApplication.prepareContext(SpringApplication.java:373) ~[spring-boot-2.1.2.RELEASE.jar:2.1.2.RELEASE] 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314) ~[spring-boot-2.1.2.RELEASE.jar:2.1.2.RELEASE] 	at ch.frankel.blog.spring.fail.FailApplicationKt.main(FailApplication.kt:29) [classes/:na] Caused by: java.lang.ClassNotFoundException: ch.frankel.blog.spring.fail.FailApplicationKt$beans$1$1$1 	at java.net.URLClassLoader.findClass(URLClassLoader.java:381) ~[na:1.8.0_181] 	at java.lang.ClassLoader.loadClass(ClassLoader.java:424) ~[na:1.8.0_181] 	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349) ~[na:1.8.0_181] 	at java.lang.ClassLoader.loadClass(ClassLoader.java:357) ~[na:1.8.0_181] 	... 8 common frames omitted   Process finished with exit code 1 ```  Expected behavior: starts normally  Mitigation: create a dedicated child class of `Foo` and register it. This works, but forces to create additional boiler-plate code","closed","status: declined,","nfrankel","2019-01-28T15:44:44Z","2019-01-30T12:17:28Z"
"","22409","Directly registered FactoryBeans are instantiated more aggressively than those defined via @Bean methods","**Affects:** 5.1.4.RELEASE  This relates to https://github.com/spring-projects/spring-boot/issues/15898.  When a `FactoryBean` is defined via component scanning, it is instantiated more aggressively than when it is defined via a `@Bean` method. The following tests should illustrate the differing behaviour:  ```java package com.example.demo;  import org.junit.Test; import org.springframework.beans.factory.BeanFactoryUtils; import org.springframework.beans.factory.FactoryBean; import org.springframework.context.ApplicationContext; import org.springframework.context.annotation.AnnotationConfigApplicationContext; import org.springframework.context.annotation.Bean; import org.springframework.context.annotation.ComponentScan; import org.springframework.context.annotation.Configuration; import org.springframework.stereotype.Component;  public class AggressiveFactoryBeanInstantiationTests {  	@Test 	public void componentScannedFactoryBean() { 		try (AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext()) { 			context.register(ComponentScanConfiguration.class); 			context.addBeanFactoryPostProcessor((factory) -> { 				BeanFactoryUtils.beanNamesForTypeIncludingAncestors(factory, String.class); 			}); 			context.refresh(); 		} 	}  	@Test 	public void beanMethodFactoryBean() { 		try (AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext()) { 			context.register(BeanMethodConfiguration.class); 			context.addBeanFactoryPostProcessor((factory) -> { 				BeanFactoryUtils.beanNamesForTypeIncludingAncestors(factory, String.class); 			}); 			context.refresh(); 		} 	}  	@Configuration 	static class BeanMethodConfiguration {  		@Bean 		public SimpleFactoryBean simpleFactoryBean(ApplicationContext applicationContext) { 			return new SimpleFactoryBean(applicationContext); 		}  	}  	@Configuration 	@ComponentScan 	static class ComponentScanConfiguration {  	}  	@Component 	static class SimpleFactoryBean implements FactoryBean {  		public SimpleFactoryBean(ApplicationContext applicationContext) {  		}  		@Override 		public Object getObject() throws Exception { 			return new Object(); 		}  		@Override 		public Class getObjectType() { 			return Object.class; 		}  	}  } ```  `beanMethodFactoryBean` will successfully refresh the application context. `componentScannedFactoryBean` fails as an attempt is made to create `SimpleFactoryBean` using a non-existent default constructor:  ``` org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [/Users/awilkinson/dev/workspaces/spring-projects/spring-boot/2.1.x/gh-15898/target/test-classes/com/example/demo/AggressiveFactoryBeanInstantiationTests$BeanMethodConfiguration.class]; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'aggressiveFactoryBeanInstantiationTests.SimpleFactoryBean' defined in file [/Users/awilkinson/dev/workspaces/spring-projects/spring-boot/2.1.x/gh-15898/target/test-classes/com/example/demo/AggressiveFactoryBeanInstantiationTests$SimpleFactoryBean.class]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.example.demo.AggressiveFactoryBeanInstantiationTests$SimpleFactoryBean]: No default constructor found; nested exception is java.lang.NoSuchMethodException: com.example.demo.AggressiveFactoryBeanInstantiationTests$SimpleFactoryBean.() 	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:454) 	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:316) 	at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:275) 	at org.springframework.context.annotation.ComponentScanAnnotationParser.parse(ComponentScanAnnotationParser.java:132) 	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:287) 	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:242) 	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:191) 	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:295) 	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:242) 	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:199) 	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:167) 	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:315) 	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:232) 	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:275) 	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:95) 	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:691) 	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:528) 	at com.example.demo.AggressiveFactoryBeanInstantiationTests.componentScannedFactoryBean(AggressiveFactoryBeanInstantiationTests.java:22) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) 	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) 	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) 	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) 	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) 	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) 	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) 	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) 	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:89) 	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:41) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:541) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:763) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:463) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:209) Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'aggressiveFactoryBeanInstantiationTests.SimpleFactoryBean' defined in file [/Users/awilkinson/dev/workspaces/spring-projects/spring-boot/2.1.x/gh-15898/target/test-classes/com/example/demo/AggressiveFactoryBeanInstantiationTests$SimpleFactoryBean.class]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.example.demo.AggressiveFactoryBeanInstantiationTests$SimpleFactoryBean]: No default constructor found; nested exception is java.lang.NoSuchMethodException: com.example.demo.AggressiveFactoryBeanInstantiationTests$SimpleFactoryBean.() 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1270) 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1164) 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getSingletonFactoryBeanForTypeCheck(AbstractAutowireCapableBeanFactory.java:974) 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:848) 	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:574) 	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:514) 	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:477) 	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:598) 	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:590) 	at org.springframework.boot.context.TypeExcludeFilter.match(TypeExcludeFilter.java:65) 	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.isCandidateComponent(ClassPathScanningCandidateComponentProvider.java:492) 	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:431) 	... 40 more Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.example.demo.AggressiveFactoryBeanInstantiationTests$SimpleFactoryBean]: No default constructor found; nested exception is java.lang.NoSuchMethodException: com.example.demo.AggressiveFactoryBeanInstantiationTests$SimpleFactoryBean.() 	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:83) 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1262) 	... 51 more Caused by: java.lang.NoSuchMethodException: com.example.demo.AggressiveFactoryBeanInstantiationTests$SimpleFactoryBean.() 	at java.lang.Class.getConstructor0(Class.java:3082) 	at java.lang.Class.getDeclaredConstructor(Class.java:2178) 	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:78) 	... 52 more ```  In the `@Bean` method case, the attempt to determine the type produced by the `FactoryBean` is abandoned earlier. As far as I can tell that's due to the following logic:  https://github.com/spring-projects/spring-framework/blob/77e815135b1f849b229307f92ef4a1d585b3aa59/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java#L855-L860","closed","type: enhancement,","wilkinsona","2019-02-13T10:46:45Z","2021-02-14T12:15:35Z"
"","22306","NPE in AbstractHandlerMethodMapping when trace logging is enabled and a handler's class loader does not provide package information","**Affects:** 5.1.4.RELEASE  In the unlikely event of trace logging being enabled and a handler's class having been loaded by a class loader that does not provide package information, `Class.getPackage()` will return `null` and the following line will NPE:  https://github.com/spring-projects/spring-framework/blob/6bdf2c26852611b3c3fd1505cd3ddc782739ad52/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerMethodMapping.java#L289","closed","type: regression,","wilkinsona","2019-01-24T20:28:55Z","2019-01-25T14:49:52Z"
"","22319","Unable to obtain SessionCookieConfig using Java based config","**Affects:** 5.1.4.RELEASE  In Spring Session, we try to provide convenience of configuring our default `CookieSerializer` using Servlet API's `SessionCookieConfig`. The code involved can be seen [here](https://github.com/spring-projects/spring-session/blob/0e89539e203ccd5dd7ed97832211a0f7a0a6d918/spring-session-core/src/main/java/org/springframework/session/config/annotation/web/http/SpringHttpSessionConfiguration.java#L170-L190).  In a plain Spring app, without Spring Boot involved, this fails with Java based config due to inability to obtain `SessionCookieConfig` off injected `ServletContext`. However, the same action succeeds with XML based config.  I've put together a [minimal sample app](https://github.com/vpavic/spring-sessioncookieconfig-issue) that exhibits this behavior.  Running XML config based sample using `./gradlew :sample-xml:tomcatRun` will yield the following log output:  ``` Jan 29, 2019 12:38:24 AM sample.Config setServletContext INFO: Obtained SessionCookieConfig: org.apache.catalina.core.ApplicationSessionCookieConfig@5fbade79 ```  While running Java config based sample using `./gradlew :sample-java:tomcatRun` will result in the following error logged:  ``` Jan 29, 2019 12:38:14 AM sample.Config setServletContext WARNING: Cannot obtain SessionCookieConfig java.lang.UnsupportedOperationException: Section 4.4 of the Servlet 3.0 specification does not permit this method to be called from a ServletContextListener that was not defined in web.xml, a web-fragment.xml file nor annotated with @WebListener         at org.apache.catalina.core.StandardContext$NoPluggabilityServletContext.getSessionCookieConfig(StandardContext.java:6891)         at sample.Config.setServletContext(Config.java:20)         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)         at java.lang.reflect.Method.invoke(Method.java:498)         at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:708)         at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)         at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)         at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)         at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)         at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)         at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)         at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)         at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)         at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)         at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:846)         at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:863)         at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)         at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:400)         at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:291)         at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)         at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4898)         at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5363)         at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:145)         at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1410)         at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1400)         at java.util.concurrent.FutureTask.run(FutureTask.java:266)         at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)         at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)         at java.lang.Thread.run(Thread.java:748)  ```  This was originally reported against Spring Session in spring-projects/spring-session#1040.","open","type: enhancement,","vpavic","2019-01-29T00:03:23Z","2019-12-15T18:29:55Z"
"","22384","WebClient using default reactor-netty client leaks netty ByteBufs on timeout","**Affects:** 5.1.4.RELEASE  I see buffer leak reports from Netty's ResourceLeakDetector when a Mono.timeout cancels a subscription to the Mono returned from bodyToMono. I've created a demo project with a test case which seems to reliably reproduce the issue. A separate test case is included which uses the reactor-netty HttpClient directly instead of using it through the WebClient wrapper - and I have not seen any leak reports in this case with the current version of reactor-netty (v0.8.4.RELEASE).  Demo project with mentioned test cases can be found here: https://github.com/danielra/buffer-leak-repro-reactor-netty The specific test case which reproduces the leak can be seen here: https://github.com/danielra/buffer-leak-repro-reactor-netty/blob/master/src/test/java/com/example/demo/DemoApplicationTests.java#L59  The tests can be run via `./gradlew clean test --debug`. Please note that the tests ""pass"" unconditionally, but buffer leak reports can be viewed in the console output.  Here is an example of the leak report log messages I have observed from this test case: [webclient_buffer_leak_example_log.txt](https://github.com/spring-projects/spring-framework/files/2842764/webclient_buffer_leak_example_log.txt)  ---","closed","for: external-project,","danielra","2019-02-07T21:56:29Z","2020-04-24T21:22:02Z"
"","22285","Scheduled annotation not work in conjunction cron expression and fixedRate","**Affects:** 5.1.4.RELEASE  ---  Hi All, I had some problems to use in different `@Component` classes the `@Scheduled` annotation in different way. I leave here an example about that: Component A  `@Component` `public class ComponentA {` `  @Scheduled(fixedRate = 10000, initialDelay = 100)` `  public void test() {` `  //do something...` ` }` `}`  `@Component` `public class ComponentB {` `  @Scheduled(cron = ""0/15 * * * * *"")` `  public void test1() {` `  //do something...` `  }` `}`  I see the scheduler create two different method scheduled, but the componentB with the cron expression will not work as request in the expression. It will have a weird behavior.  Can you check please? Regards","closed","status: invalid,","antonioiorfino","2019-01-21T13:22:55Z","2019-01-21T14:06:44Z"
"","22405","IllegalArgumentException when overriding empty 'excludeFilters' array on @ComponentScan","**Affects:** 5.1.4.RELEASE  (Similar to #16681) When you override `excludeFilters` in `@ComponentScan` with multiple `Filters`, an `IllegalArgumentException` will be thrown. (It works correctly in Spring Framework 4 (\>=4.0.7).) Excerpt:  ``` java @Configuration @ComponentScan(basePackages = ""a"", excludeFilters = {}) // can be empty public class Cfg1 {}  @ComponentScan(basePackages = { ""a"", ""b"" }, excludeFilters = {         @Filter(type = FilterType.REGEX, pattern = ""c""),         @Filter(type = FilterType.REGEX, pattern = ""d"")     }) public class Cfg2 extends Cfg1 {} ```  The current ""result"":  ``` java.lang.IllegalStateException: Failed to load ApplicationContext     ... Caused by: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to parse configuration class [...]; nested exception is java.lang.IllegalArgumentException: Attribute 'excludeFilters' is of type [Filter[]], but [AnnotationAttributes[]] was expected in attributes for annotation [org.springframework.context.annotation.ComponentScan]     at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:181)     at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:315)     at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:232)     at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:275)     at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:95)     at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:691)     at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:528)     ... Caused by: java.lang.IllegalArgumentException: Attribute 'excludeFilters' is of type [Filter[]], but [AnnotationAttributes[]] was expected in attributes for annotation [org.springframework.context.annotation.ComponentScan]     at org.springframework.core.annotation.AnnotationAttributes.assertAttributeType(AnnotationAttributes.java:365)     at org.springframework.core.annotation.AnnotationAttributes.getRequiredAttribute(AnnotationAttributes.java:345)     at org.springframework.core.annotation.AnnotationAttributes.getAnnotationArray(AnnotationAttributes.java:295)     at org.springframework.context.annotation.ComponentScanAnnotationParser.parse(ComponentScanAnnotationParser.java:101)     at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:287)     at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:242)     at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:191)     at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:295)     at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:242)     at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:199)     at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:167)     ... ```","closed","type: regression,","ogmios-voice","2019-02-11T20:43:19Z","2019-02-12T08:24:02Z"
"","22406","OriginHandshakeInterceptor same origin check always fails","**Affects:** 5.1.4+  `OriginHandshakeInterceptor` is always registered for a `websocket:message-broker`. This interceptor checks all handshakes whether their origin is same as the websocket origin, or if it's in a list of allowed origins. The problem is that same origin always fails when loading websocket, since the origin from a webpage has an http/https scheme, while the websocket has ws/wss scheme. [Best practices](https://tools.ietf.org/html/rfc6454#section-3.2) encourage checking scheme for same origin, but this is a possible exception.  I think a fix would be having WebUtils do special check to explicitly allow this type of request      ObjectUtils.nullSafeEquals(scheme, originUrl.getScheme() ||        ""ws"".equals(scheme) && ""http"".equals(originUrl.getScheme() ||        ""wss"".equals(scheme) && ""https"".equals(origin.getScheme)","closed","","ghost","2019-02-11T22:26:54Z","2022-02-18T19:09:58Z"
"","22346","PathMatchingResourcePatternResolver may double-wrap jar: URLs","**Affects:** 5.1.4  When `PathMatchingResourcePatternResolver` is adding all class loader jar roots, it may wrap a URL with `jar:` and `!/` even though it is already so wrapped:  https://github.com/spring-projects/spring-framework/blob/32c4f6eb1876bc19ab83fad8ac5a0cf2104c7964/spring-core/src/main/java/org/springframework/core/io/support/PathMatchingResourcePatternResolver.java#L373-L387  This results in URLs like this:  ``` jar:jar:file:/Users/awilkinson/dev/temp/gh-15844/target/gh-15844-0.0.1-SNAPSHOT.jar!/BOOT-INF/lib/spring-boot-2.1.3.BUILD-SNAPSHOT.jar!/!/ ```  While such URLs work, they cause some extra work for Spring Boot's fat jar support to strip the URL back down again.  The creation of the wrapped URL also results in the creation of a new `StringBuilder`, `String`, and `URL` that appears to be unnecessary. Perhaps the protocol of the URL could be checked, and if it's `jar`, it could be used as-is to create the `URL` resource?","closed","type: enhancement,","wilkinsona","2019-02-05T10:29:22Z","2019-02-11T13:52:25Z"
"","22293","EventListenerMethodProcessor defeats lazy factory beans","**Affects:** 5.1.4  I was attempting to fix https://github.com/spring-projects/spring-amqp/issues/885 to avoid eager initialization of a lazy factory bean as reported in the linked Stack Overflow question.  After fixing it, I found the FB is still instantiated, but by the `EventListenerMethodProcessor` instead...  https://github.com/spring-projects/spring-framework/blob/155ef5fd778579c9bae3469244a3aee64f079ac5/spring-context/src/main/java/org/springframework/context/event/EventListenerMethodProcessor.java#L100-L103","open","in: core,","garyrussell","2019-01-22T20:07:47Z","2021-07-16T14:30:28Z"
"","22432","SimpleJdbcInsert Uses Incorrect Catalog for Metadata","**Affects:** 5.1.4  I have a local MySQL database, and that database has catalogs for different environments: dev, qa, staging ...  Each of these has a relatively similar set of tables, but there are differences due to different versions of the schema.  I have a Spring app that is configured to connect to a particular database / catalog, which it is doing just fine. I added a SimpleJdbcInsert in a test and it fails because it's trying to insert into a database column that isn't there.  After some digging around in the internals, I can see that if I don't specify the Catalog in the SimpleJdbcInsert setup, it leaves that null all the way down to the database metadata retrieval, which returns all of the matching tables. Then in `locateTableAndProcessMetaData`, Spring-JDBC stores each of those tables into a map by table name, and each successive table with the same name overwrites the others.  I guess what I expected is that if SimpleJdbcInsert needs table metadata, it would use the current catalog's table if I haven't specified another catalog. As it stands, the only way I can use SimpleJdbcInsert is to specify the table name to avoid it picking a random table from another catalog when deciding what columns to use.","closed","status: duplicate,","geoffreywiseman","2019-02-19T15:27:15Z","2019-02-19T15:56:56Z"
"","22368","WebClient's ResponseSpec should provide access to response headers","**Affects:** 5.1.4  --- This in an enhancement request for `WebClient`.  Currently there are two ways to process the response with `WebClient`: 1. `WebClient#exchange()` gives full access to the `ClientResponse` (including the HTTP response headers), but it requires one to handle erroneous HTTP status codes manually. 2. `WebClient#retrieve()` simplifies error handling, but prevents access to `ClientResponse`.  I find myself using `retrieve()` almost exclusively, but sometimes I have to resort to `exchange()` (and doing my own error handling) due to the limitation described above.  It would be really nice for `WebClient#retrieve()` to provide access to `ClientResponse` (or at least the HTTP response headers) while still taking care of the bad status code handling.  An example use case of this is extracting a value from a HTTP header or a cookie in addition to deserializing the body to an object.  A potential implementation of this could be to add `Mono clientResponse();` to `WebClient.ResponseSpec`. `DefaultResponseSpec` would call `.cache()` on the `responseMono` in the constructor, and return that from the new `clientResponse()` method.  That would allow one to write something like: ```java WebClient.ResponseSpec responseSpec = webClient.get().uri(""http://..."").retrieve(); responseSpec.bodyToMono(MyObject.class)     .zipWith(responseSpec.clientResponse())     .map((body, clientResponse) -> {         // Access clientResponse.headers(), etc.     }     ... ```  An alternative solution could be to simply make `DefaultResponseSpec` `public`, so that one could do this manually: ```java Mono clientResponseMono = webClient.get().uri(""http://..."").exchange().cache(); new DefaultResponseSpec(clientResponseMono)     .bodyToMono(MyObject.class)     .zipWith(clientResponseMono)     .map((body, clientResponse) -> {         // Access clientResponse.headers(), etc.     }     ... ```","closed","type: enhancement,","csabakos","2019-02-06T21:42:57Z","2019-07-18T13:31:11Z"
"","22351","WebFlux ServerResponse builders are dropping cookies","**Affects:** 5.1.4  --- The `ServerResponse` builder functions that return `Mono` behave inconsistently with regards to the `cookies` that might have been already set on the response. Some builder functions drop the `cookies` field, while some preserve it.  The desired behavior is that all builder functions should preserve `cookies`.  Example of builder function that behaves correctly: ``` Mono body(BodyInserter inserter) ```  List of builder functions that behave incorrectly (drop `cookies`): ``` > Mono body(P publisher, Class elementClass) > Mono body(P publisher, ParameterizedTypeReference typeReference) Mono syncBody(Object body)  Mono render(String name, Object... modelAttributes) Mono render(String name, Map model) ```  Test case to reproduce the bug: ```     @Test     public void testCookiesPersistIncorrect() {         final Mono serverResponse = ServerResponse.ok()                 .cookie(ResponseCookie.from(""foo"", ""bar"").build())                 .syncBody(""body"");          assertFalse(serverResponse.block().cookies().isEmpty());     } ```  Test case to show that `body(BodyInserter inserter)` behaves correctly: ```     @Test     public void testCookiesPersistCorrect() {         final Mono serverResponse = ServerResponse.ok()                 .cookie(ResponseCookie.from(""foo"", ""bar"").build())                 .body(BodyInserters.fromObject(""body""));          assertFalse(serverResponse.block().cookies().isEmpty());     } ```  It's worth noting that the `hints` field may be susceptible to the same issue.","closed","","csabakos","2019-02-05T22:28:30Z","2019-03-26T15:34:53Z"
"","22389","ObjectProvider.ifAvailable and ObjectProvider.getIfAvailable should take scope availability into consideration.","**Affects:** 5.1.4  --- `ObjectProvider.ifAvailable` and `ObjectProvider.getIfAvailable` should take scope availability into consideration.  Example: Invoking `ObjectProvider.ifAvailable` for a _request_ scoped bean when the _request_ scope isn't actually available will trigger an error: ```org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scopedTarget.tenant': Scope 'request' is not active for the current thread; consider defining a scoped proxy for this bean if you intend to refer to it from a singleton; nested exception is java.lang.IllegalStateException: No thread-bound request found: Are you referring to request attributes outside of an actual web request, or processing a request outside of the originally receiving thread? If you are actually operating within a web request and still receive this message, your code is probably running outside of DispatcherServlet: In this case, use RequestContextListener or RequestContextFilter to expose the current request.   at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:365)   at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)   at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)   at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:672)   at Tenant$$EnhancerBySpringCGLIB$$4e4ce2a6.getName()   at EntityManagerAspect.lambda$0(EntityManagerAspect.java:34)   at org.springframework.beans.factory.ObjectProvider.ifAvailable(ObjectProvider.java:93)   at EntityManagerAspect.enableMultiTenantsFilter(EntityManagerAspect.java:33)   at org.hibernate.internal.SessionFactoryImpl.createEntityManager(SessionFactoryImpl.java:614)   at org.hibernate.internal.SessionFactoryImpl.createEntityManager(SessionFactoryImpl.java:154)   at org.apache.logging.log4j.core.appender.db.jpa.JpaDatabaseManager.connectAndStart(JpaDatabaseManager.java:77)   ... 18 more Caused by: java.lang.IllegalStateException: No thread-bound request found: Are you referring to request attributes outside of an actual web request, or processing a request outside of the originally receiving thread? If you are actually operating within a web request and still receive this message, your code is probably running outside of DispatcherServlet: In this case, use RequestContextListener or RequestContextFilter to expose the current request.   at org.springframework.web.context.request.RequestContextHolder.currentRequestAttributes(RequestContextHolder.java:131)   at org.springframework.web.context.request.AbstractRequestAttributesScope.get(AbstractRequestAttributesScope.java:42)   at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:353) ``` And the only workaround I see is to manually check if the scope is available, which IMHO defeats the purpose of such a method (and a generic way to check if a scope is available doesn't seem to exist).","closed","status: duplicate,","andrei-ivanov","2019-02-08T10:57:24Z","2020-07-19T16:00:06Z"
"","22735","Inconsistent behavior when autowiring multiple beans by type as collection without matching beans","**Affects:** 5.1.0 and later  Autowiring multiple beans as a collection results in different behavior depending on the type of injection used when no matching beans are found.  Using field injection or setter injection leads to an `UnsatisfiedDependencyException`. Whereas constructor injection results in an empty collection. According to the docs this should fail too.  [1.9.2. Using `@Autowired`](https://docs.spring.io/spring/docs/current/spring-framework-reference/core.html#beans-autowired-annotation) > By default, the autowiring fails whenever zero candidate beans are available. The default behavior is to treat annotated methods, constructors, and fields as indicating required dependencies.  A demo of this can be found here: https://github.com/therob/bug-demo-inject-collection Just execute the included test with `mvn test` or your favourite IDE.","closed","in: core,","therob","2019-04-04T09:25:45Z","2019-04-09T17:17:48Z"
"","22525","No provision for multiple brokerMessagingTemplate in spring-websocket","**Affects:** 5.0.6.RELEASE  **Aim**: Support multiple `SimpMessagingTemplate` beans inside the same application using WebSockets.  **My use case**: Configuring WebSockets with an external relay to a message broker. Following the configuration example in the [Reference Manual](https://docs.spring.io/spring/docs/5.0.12.RELEASE/spring-framework-reference/web.html#websocket-stomp-message-flow) helps in setting up a basic functionality.  **Problem**: [AbstractMessageBrokerConfiguration#brokerMessagingTemplate](https://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/messaging/simp/config/AbstractMessageBrokerConfiguration.html#brokerMessagingTemplate--) registers a `SimpMessagingTemplate` class by default. Overriding the `@Bean` method does not help.  **Expected**: There should be a way to bootstrap bean creation using a qualifier. This is required since if another module tries to create its own WebSocket configuration, this will either override or result in a creation error.","closed","in: web,","adityarar","2019-03-06T06:42:25Z","2022-02-18T19:09:59Z"
"","22602","CssLinkResourceTransformer cannot process a blank value of a url() link","**Affects:** 5.0.10.RELEASE  ---  I have some CSS files contain the following content:  ```css .csv-3 .csFilters {   background: transparent url() no-repeat left top; } ```  When a request for these files come in, the `CssLinkResourceTransformer` parses the `url()` to `ContentChunkInfo` instance (lines 85-87).  And then It processes each of the `ContentChunkInfo` instances by transforming the URL to a absolute path (line 103).  But the absolute path will be the location of a folder because the `link` parameter is a `null` value.   And then it goes into the `resolveUrlPath` method and throws a `NullPointerException`, because the program tries to close a `FileInputStream` which refers to a folder and that is impossible.  This also suppresses the actual exception.","closed","in: core,","xzleah","2019-03-15T14:09:25Z","2019-04-18T14:09:18Z"
"","22286","Support constructor injection without @Autowired when using JUnit Jupiter in spring-test","**Affects:** 5.0 GA  ---  In the current implementation, `org.springframework.test.context.junit.jupiter.ParameterAutowireUtils.isAutowirable(Parameter parameter, int parameterIndex)` checks elements annotated with `@Autowired`, `@Qualifier` and `@Value` only.  ```java static boolean isAutowirable(Parameter parameter, int parameterIndex) {     if (ApplicationContext.class.isAssignableFrom(parameter.getType())) {         return true;     }     AnnotatedElement annotatedParameter = getEffectiveAnnotatedParameter(parameter, parameterIndex);     return (AnnotatedElementUtils.hasAnnotation(annotatedParameter, Autowired.class) ||             AnnotatedElementUtils.hasAnnotation(annotatedParameter, Qualifier.class) ||             AnnotatedElementUtils.hasAnnotation(annotatedParameter, Value.class)); } ```  When the JUnit Jupiter test class like below, it will not work properly.  ```java import org.junit.jupiter.api.Test; import org.junit.jupiter.api.extension.ExtendWith; import org.springframework.test.context.ContextConfiguration; import lombok.RequiredArgsConstructor;  @ExtendWith(SpringExtension.class) @ContextConfiguration(classes = ContextBean.class) @RequiredArgsConstructor class Junit5WithLombokTest {      private final DataSource dataSource;          @Test     void test() {         System.out.println(""test-datasource: "" + dataSource);     } } ```  The above code will produce an error below:  ``` org.junit.jupiter.api.extension.ParameterResolutionException: No ParameterResolver registered for parameter [final javax.sql.DataSource dataSource] in constructor [public com.springtest.test.Junit5WithLombokTest(javax.sql.DataSource)]     at org.junit.jupiter.engine.execution.ExecutableInvoker.resolveParameter(ExecutableInvoker.java:191)     at org.junit.jupiter.engine.execution.ExecutableInvoker.resolveParameters(ExecutableInvoker.java:174)     at org.junit.jupiter.engine.execution.ExecutableInvoker.resolveParameters(ExecutableInvoker.java:135)     at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:61)     at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeTestClassConstructor(ClassTestDescriptor.java:345)     at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.instantiateTestClass(ClassTestDescriptor.java:290)     at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.instantiateTestClass(ClassTestDescriptor.java:281)     at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.instantiateAndPostProcessTestInstance(ClassTestDescriptor.java:269)     at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$testInstancesProvider$2(ClassTestDescriptor.java:259)     at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$testInstancesProvider$3(ClassTestDescriptor.java:263)     ... ```  Why not check the parameter name or type whether exists in current ApplicationContext?  For example:  ```java static boolean isAutowirable(ExtensionContext extensionContext,                              ParameterNameDiscoverer nameDiscoverer,                              Parameter parameter,                              int parameterIndex) {     ApplicationContext ctx = SpringExtension.getApplicationContext(extensionContext);          String name = parameter.getName();     if (ctx.containsBean(name)) {         return true;     }      Executable executable = parameter.getDeclaringExecutable();      String[] names = null;     if (executable instanceof Constructor) {         names = nameDiscoverer.getParameterNames((Constructor) executable);     } else if (executable instanceof Method) {         names = nameDiscoverer.getParameterNames((Method) executable);     }      name = (null == names || names.length <= parameterIndex) ? null : names[parameterIndex];     if (null != name && ctx.containsBean(name)) {         return true;     }      try {         if (null != ctx.getBean(parameter.getType())) {             return true;         }     } catch (Exception ignore) {}      return isAutowirable(parameter, parameterIndex); }  ```","closed","type: enhancement,","JaynLau","2019-01-21T13:30:05Z","2019-05-08T20:03:59Z"
"","22741","BeanDefinitionOverrideException in WebMvcAutoConfiguration for Bean requestMappingHandlerAdapter","**Affects:** 2.1.4.RELEASE  I'm trying to extend `org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration.EnableWebMvcConfiguration` which is titled as `configuration equivalent to @EnableWebMvc`  I need to edit this specific configuration due to a problem with request mapping in combination with feign.  But when I extend the class I get an exception: `Caused by: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'requestMappingHandlerAdapter'`  And the requestMappingHandlerAdapter is beeing overridden in WebMvcAutoConfiguration.EnableWebMvcConfiguration:  ```java @Bean @Override public RequestMappingHandlerAdapter requestMappingHandlerAdapter() { 	RequestMappingHandlerAdapter adapter = super.requestMappingHandlerAdapter(); 	adapter.setIgnoreDefaultModelOnRedirect(this.mvcProperties == null 			|| this.mvcProperties.isIgnoreDefaultModelOnRedirect()); 	return adapter; } ```  which is a Bean defined in WebMvcConfigurationSupport, which is extended by DelegatingWebMvcConfiguration: ```java @Bean public RequestMappingHandlerAdapter requestMappingHandlerAdapter() ``` A workaround would be to add the configuration `spring.main.allow-bean-definition-overriding: true` but i guess that this should be reported as a bug.","open","in: web,","michabremicker","2019-04-05T10:42:40Z","2021-11-11T09:40:23Z"
"","22652","STOMP servers MUST handle a STOMP frame in the same manner as a CONNECT frame","**Affects:**  Spring WebSocket 5.1.5.RELEASE  ---  STOMP servers MUST handle a STOMP frame in the same manner as a CONNECT frame.  In `StompSubProtocolHandler` (line 183) checking stomp command CONNECT, but in Stomp 1.2 must be command STOMP. if client sending STOMP command , the following check returns `false`.  ```java StompCommand command = headerAccessor.getCommand();  boolean isConnect = StompCommand.CONNECT.equals(command); ```  Please fix this.","closed","type: enhancement,","Funkisl","2019-03-25T12:14:05Z","2019-03-27T20:20:53Z"
"","22284","WebClient throws ""java.lang.IllegalStateException: Only one connection receive subscriber allowed"" on Post Method with content-type x-www-form-urlencoded","**Affects:**  Spring Boot v2.1.2  When I create a REST Controller which delegates POST requests to another web service i get the following exception when setting content-type header to x-www-form-urlencoded:   ``` java.lang.IllegalStateException: Only one connection receive subscriber allowed. 	at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:271) [reactor-netty-0.8.4.RELEASE.jar:0.8.4.RELEASE] 	at reactor.netty.channel.FluxReceive.lambda$subscribe$2(FluxReceive.java:124) [reactor-netty-0.8.4.RELEASE.jar:0.8.4.RELEASE] 	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404) ~[netty-common-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:466) ~[netty-transport-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:897) ~[netty-common-4.1.31.Final.jar:4.1.31.Final] 	at java.lang.Thread.run(Thread.java:745) ~[na:1.8.0_121] ```  Run the test case to reproduce the error or run application and excecute the following cURL:  `curl -X POST ""http://localhost:8080/test/post"" -H ""content-type: application/x-www-form-urlencoded""`  Attachment:  [one-connection.zip](https://github.com/spring-projects/spring-framework/files/2778333/one-connection.zip)  Similar Issue: #22096","closed","status: invalid,","awilhelmer","2019-01-21T09:38:03Z","2019-06-17T14:26:27Z"
"","22636","Add options.linksource to build.gradle javadoc","**Affects:**  Spring 5+   Adding this options.linksource to the javadoc configuration in  build.gradle would generate a very convenient link from javadoc entries to the underlying code. This would make it much easier to view the actual implementations rather than searching for the source by hand.   This option has been available in javadoc for a long time,  wondering why it is not used.","closed","status: declined,","sdwarwick","2019-03-21T20:58:42Z","2019-04-22T11:13:20Z"
"","22726","Spring logging support enhancement","**Affects:**  5.2.x  Many Spring projects use the pattern  ```java if (this.logger.isDebugEnabled()) {     this.logger.debug(); } ```  To avoid evaluating `` (often a `StringBuilder`) unless the level is enabled.  With the advent of lambdas, this code could be simpler, using `Supplier`...  ```java this.logger.debug(() -> ); ```  or  ```java this.logger.debug(new LogMessage(() -> )); ```  After some discussion with Juergen, a couple of options emerged...  >Anyway, in terms of common code, I could imagine both a LogAccessor type (including Supplier-based log methods) and a LogMessage type (including a Supplier-based constructor) in the core.log package, leaving the choice up to the caller.","closed","type: enhancement,","garyrussell","2019-04-02T13:06:01Z","2019-04-27T17:25:53Z"
"","22501","webflux: no logging for 499 request","**Affects:**  Spring 5.1.5  --- I'm trying to log 499 requests, and couldn't find any way to do this.  How to reproduce this: * go to https://start.spring.io/ and generate a demo project with `Reactive Web` dependency. * enable logging: `logging.level.root=TRACE` * add a slow response endpoint:  ``` 	@GetMapping(""/test"") 	public Mono test() { 	    return Mono.delay(Duration.ofSeconds(3)).thenReturn(""OK""); 	} ```  curl without max-time: ``` 2019-03-04 14:24:40.870 DEBUG 17854 --- [or-http-epoll-1] r.n.http.server.HttpServerOperations     : [id: 0xf340263d, L:/127.0.0.1:8080 - R:/127.0.0.1:57494] New http connection, requesting read 2019-03-04 14:24:40.871 DEBUG 17854 --- [or-http-epoll-1] reactor.netty.channel.BootstrapHandlers  : [id: 0xf340263d, L:/127.0.0.1:8080 - R:/127.0.0.1:57494] Initialized pipeline DefaultChannelPipeline{(BootstrapHandlers$BootstrapInitializerHandler#0 = reactor.netty.channel.BootstrapHandlers$BootstrapInitializerHandler), (reactor.left.httpCodec = io.netty.handler.codec.http.HttpServerCodec), (reactor.left.httpTrafficHandler = reactor.netty.http.server.HttpTrafficHandler), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)} 2019-03-04 14:24:40.876 DEBUG 17854 --- [or-http-epoll-1] r.n.http.server.HttpServerOperations     : [id: 0xf340263d, L:/127.0.0.1:8080 - R:/127.0.0.1:57494] Increasing pending responses, now 1 2019-03-04 14:24:40.876 DEBUG 17854 --- [or-http-epoll-1] reactor.netty.http.server.HttpServer     : [id: 0xf340263d, L:/127.0.0.1:8080 - R:/127.0.0.1:57494] Handler is being applied: org.springframework.http.server.reactive.ReactorHttpHandlerAdapter@725b6ea3 2019-03-04 14:24:40.876 TRACE 17854 --- [or-http-epoll-1] o.s.w.s.adapter.HttpWebHandlerAdapter    : [f340263d] HTTP GET ""/test"", headers={masked} 2019-03-04 14:24:40.877 TRACE 17854 --- [or-http-epoll-1] o.s.b.f.s.DefaultListableBeanFactory     : Returning cached instance of singleton bean 'demoApplication' 2019-03-04 14:24:40.877 DEBUG 17854 --- [or-http-epoll-1] s.w.r.r.m.a.RequestMappingHandlerMapping : [f340263d] Mapped to public reactor.core.publisher.Mono com.example.demo.DemoApplication.test() 2019-03-04 14:24:40.878 DEBUG 17854 --- [or-http-epoll-1] o.s.w.r.r.m.a.ResponseBodyResultHandler  : Using 'text/plain;charset=UTF-8' given [*/*] and supported [text/plain;charset=UTF-8, text/event-stream, text/plain;charset=UTF-8, */*] 2019-03-04 14:24:40.878 DEBUG 17854 --- [or-http-epoll-1] o.s.w.r.r.m.a.ResponseBodyResultHandler  : [f340263d] 0..1 [java.lang.String] 2019-03-04 14:24:43.879 TRACE 17854 --- [     parallel-4] o.s.core.codec.CharSequenceEncoder       : [f340263d] Writing ""OK"" 2019-03-04 14:24:43.882 DEBUG 17854 --- [or-http-epoll-1] r.n.channel.ChannelOperationsHandler     : [id: 0xf340263d, L:/127.0.0.1:8080 - R:/127.0.0.1:57494] Writing object DefaultHttpResponse(decodeResult: success, version: HTTP/1.1) HTTP/1.1 200 OK Content-Type: text/plain;charset=UTF-8 Content-Length: 2 2019-03-04 14:24:43.885 DEBUG 17854 --- [or-http-epoll-1] r.n.channel.ChannelOperationsHandler     : [id: 0xf340263d, L:/127.0.0.1:8080 - R:/127.0.0.1:57494] Writing object  2019-03-04 14:24:43.886 TRACE 17854 --- [or-http-epoll-1] r.n.channel.ChannelOperationsHandler     : [id: 0xf340263d, L:/127.0.0.1:8080 - R:/127.0.0.1:57494] Pending write size = 2 2019-03-04 14:24:43.886 TRACE 17854 --- [or-http-epoll-1] o.s.w.s.adapter.HttpWebHandlerAdapter    : [f340263d] Completed 200 OK, headers={masked} 2019-03-04 14:24:43.887 TRACE 17854 --- [or-http-epoll-1] o.s.h.s.r.ReactorHttpHandlerAdapter      : [f340263d] Handling completed 2019-03-04 14:24:43.887 DEBUG 17854 --- [or-http-epoll-1] r.n.http.server.HttpServerOperations     : [id: 0xf340263d, L:/127.0.0.1:8080 - R:/127.0.0.1:57494] Last HTTP response frame 2019-03-04 14:24:43.887 DEBUG 17854 --- [or-http-epoll-1] r.n.channel.ChannelOperationsHandler     : [id: 0xf340263d, L:/127.0.0.1:8080 - R:/127.0.0.1:57494] Writing object EmptyLastHttpContent 2019-03-04 14:24:43.887 DEBUG 17854 --- [or-http-epoll-1] r.n.http.server.HttpServerOperations     : [id: 0xf340263d, L:/127.0.0.1:8080 - R:/127.0.0.1:57494] Decreasing pending responses, now 0 2019-03-04 14:24:43.888 DEBUG 17854 --- [or-http-epoll-1] r.n.http.server.HttpServerOperations     : [id: 0xf340263d, L:/127.0.0.1:8080 - R:/127.0.0.1:57494] Last Http packet was sent, terminating channel 2019-03-04 14:24:43.890 TRACE 17854 --- [or-http-epoll-1] reactor.netty.channel.ChannelOperations  : [id: 0xf340263d, L:/127.0.0.1:8080 - R:/127.0.0.1:57494] Disposing ChannelOperation from a channel  java.lang.Exception: ChannelOperation terminal stack 	at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:372) [reactor-netty-0.8.5.RELEASE.jar:0.8.5.RELEASE] 	at reactor.netty.http.server.HttpServerOperations.cleanHandlerTerminate(HttpServerOperations.java:517) [reactor-netty-0.8.5.RELEASE.jar:0.8.5.RELEASE] 	at reactor.netty.http.server.HttpTrafficHandler.operationComplete(HttpTrafficHandler.java:306) [reactor-netty-0.8.5.RELEASE.jar:0.8.5.RELEASE] 	at reactor.netty.http.server.HttpTrafficHandler.operationComplete(HttpTrafficHandler.java:54) [reactor-netty-0.8.5.RELEASE.jar:0.8.5.RELEASE] 	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:511) [netty-common-4.1.33.Final.jar:4.1.33.Final] 	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:504) [netty-common-4.1.33.Final.jar:4.1.33.Final] 	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:483) [netty-common-4.1.33.Final.jar:4.1.33.Final] 	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:424) [netty-common-4.1.33.Final.jar:4.1.33.Final] 	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:103) [netty-common-4.1.33.Final.jar:4.1.33.Final] 	at io.netty.util.internal.PromiseNotificationUtil.trySuccess(PromiseNotificationUtil.java:48) [netty-common-4.1.33.Final.jar:4.1.33.Final] 	at io.netty.channel.ChannelOutboundBuffer.safeSuccess(ChannelOutboundBuffer.java:703) [netty-transport-4.1.33.Final.jar:4.1.33.Final] 	at io.netty.channel.ChannelOutboundBuffer.remove(ChannelOutboundBuffer.java:258) [netty-transport-4.1.33.Final.jar:4.1.33.Final] 	at io.netty.channel.epoll.AbstractEpollStreamChannel.writeBytes(AbstractEpollStreamChannel.java:269) [netty-transport-native-epoll-4.1.33.Final-linux-x86_64.jar:4.1.33.Final] 	at io.netty.channel.epoll.AbstractEpollStreamChannel.doWriteSingle(AbstractEpollStreamChannel.java:483) [netty-transport-native-epoll-4.1.33.Final-linux-x86_64.jar:4.1.33.Final] 	at io.netty.channel.epoll.AbstractEpollStreamChannel.doWrite(AbstractEpollStreamChannel.java:441) [netty-transport-native-epoll-4.1.33.Final-linux-x86_64.jar:4.1.33.Final] 	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:938) [netty-transport-4.1.33.Final.jar:4.1.33.Final] 	at io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe.flush0(AbstractEpollChannel.java:512) [netty-transport-native-epoll-4.1.33.Final-linux-x86_64.jar:4.1.33.Final] 	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:905) [netty-transport-4.1.33.Final.jar:4.1.33.Final] 	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1370) [netty-transport-4.1.33.Final.jar:4.1.33.Final] 	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776) [netty-transport-4.1.33.Final.jar:4.1.33.Final] 	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768) [netty-transport-4.1.33.Final.jar:4.1.33.Final] 	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749) [netty-transport-4.1.33.Final.jar:4.1.33.Final] 	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.flush(CombinedChannelDuplexHandler.java:533) [netty-transport-4.1.33.Final.jar:4.1.33.Final] 	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115) [netty-transport-4.1.33.Final.jar:4.1.33.Final] 	at io.netty.channel.CombinedChannelDuplexHandler.flush(CombinedChannelDuplexHandler.java:358) [netty-transport-4.1.33.Final.jar:4.1.33.Final] 	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776) [netty-transport-4.1.33.Final.jar:4.1.33.Final] 	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768) [netty-transport-4.1.33.Final.jar:4.1.33.Final] 	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749) [netty-transport-4.1.33.Final.jar:4.1.33.Final] 	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117) [netty-transport-4.1.33.Final.jar:4.1.33.Final] 	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776) [netty-transport-4.1.33.Final.jar:4.1.33.Final] 	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768) [netty-transport-4.1.33.Final.jar:4.1.33.Final] 	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749) [netty-transport-4.1.33.Final.jar:4.1.33.Final] 	at reactor.netty.channel.ChannelOperationsHandler.doWrite(ChannelOperationsHandler.java:283) [reactor-netty-0.8.5.RELEASE.jar:0.8.5.RELEASE] 	at reactor.netty.channel.ChannelOperationsHandler.drain(ChannelOperationsHandler.java:465) [reactor-netty-0.8.5.RELEASE.jar:0.8.5.RELEASE] 	at reactor.netty.channel.ChannelOperationsHandler.flush(ChannelOperationsHandler.java:194) [reactor-netty-0.8.5.RELEASE.jar:0.8.5.RELEASE] 	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776) [netty-transport-4.1.33.Final.jar:4.1.33.Final] 	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768) [netty-transport-4.1.33.Final.jar:4.1.33.Final] 	at io.netty.channel.AbstractChannelHandlerContext.access$1500(AbstractChannelHandlerContext.java:38) [netty-transport-4.1.33.Final.jar:4.1.33.Final] 	at io.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask.write(AbstractChannelHandlerContext.java:1175) [netty-transport-4.1.33.Final.jar:4.1.33.Final] 	at io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask.run(AbstractChannelHandlerContext.java:1098) [netty-transport-4.1.33.Final.jar:4.1.33.Final] 	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:163) [netty-common-4.1.33.Final.jar:4.1.33.Final] 	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java) [netty-common-4.1.33.Final.jar:4.1.33.Final] 	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404) [netty-common-4.1.33.Final.jar:4.1.33.Final] 	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333) [netty-transport-native-epoll-4.1.33.Final-linux-x86_64.jar:4.1.33.Final] 	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:905) [netty-common-4.1.33.Final.jar:4.1.33.Final] 	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_202] ```  curl with max-time 1s: ``` 2019-03-04 14:23:49.660 DEBUG 17854 --- [or-http-epoll-4] r.n.http.server.HttpServerOperations     : [id: 0xc8f60fa9, L:/127.0.0.1:8080 - R:/127.0.0.1:57486] New http connection, requesting read 2019-03-04 14:23:49.660 DEBUG 17854 --- [or-http-epoll-4] reactor.netty.channel.BootstrapHandlers  : [id: 0xc8f60fa9, L:/127.0.0.1:8080 - R:/127.0.0.1:57486] Initialized pipeline DefaultChannelPipeline{(BootstrapHandlers$BootstrapInitializerHandler#0 = reactor.netty.channel.BootstrapHandlers$BootstrapInitializerHandler), (reactor.left.httpCodec = io.netty.handler.codec.http.HttpServerCodec), (reactor.left.httpTrafficHandler = reactor.netty.http.server.HttpTrafficHandler), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)} 2019-03-04 14:23:49.663 DEBUG 17854 --- [or-http-epoll-4] r.n.http.server.HttpServerOperations     : [id: 0xc8f60fa9, L:/127.0.0.1:8080 - R:/127.0.0.1:57486] Increasing pending responses, now 1 2019-03-04 14:23:49.664 DEBUG 17854 --- [or-http-epoll-4] reactor.netty.http.server.HttpServer     : [id: 0xc8f60fa9, L:/127.0.0.1:8080 - R:/127.0.0.1:57486] Handler is being applied: org.springframework.http.server.reactive.ReactorHttpHandlerAdapter@725b6ea3 2019-03-04 14:23:49.665 TRACE 17854 --- [or-http-epoll-4] o.s.w.s.adapter.HttpWebHandlerAdapter    : [c8f60fa9] HTTP GET ""/test"", headers={masked} 2019-03-04 14:23:49.666 TRACE 17854 --- [or-http-epoll-4] o.s.b.f.s.DefaultListableBeanFactory     : Returning cached instance of singleton bean 'demoApplication' 2019-03-04 14:23:49.666 DEBUG 17854 --- [or-http-epoll-4] s.w.r.r.m.a.RequestMappingHandlerMapping : [c8f60fa9] Mapped to public reactor.core.publisher.Mono com.example.demo.DemoApplication.test() 2019-03-04 14:23:49.669 DEBUG 17854 --- [or-http-epoll-4] o.s.w.r.r.m.a.ResponseBodyResultHandler  : Using 'text/plain;charset=UTF-8' given [*/*] and supported [text/plain;charset=UTF-8, text/event-stream, text/plain;charset=UTF-8, */*] 2019-03-04 14:23:49.669 DEBUG 17854 --- [or-http-epoll-4] o.s.w.r.r.m.a.ResponseBodyResultHandler  : [c8f60fa9] 0..1 [java.lang.String] 2019-03-04 14:23:50.660 TRACE 17854 --- [or-http-epoll-4] reactor.netty.channel.ChannelOperations  : [id: 0xc8f60fa9, L:/127.0.0.1:8080 ! R:/127.0.0.1:57486] Disposing ChannelOperation from a channel  java.lang.Exception: ChannelOperation terminal stack 	at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:372) [reactor-netty-0.8.5.RELEASE.jar:0.8.5.RELEASE] 	at reactor.netty.channel.ChannelOperations.onInboundClose(ChannelOperations.java:341) [reactor-netty-0.8.5.RELEASE.jar:0.8.5.RELEASE] 	at reactor.netty.channel.ChannelOperationsHandler.channelInactive(ChannelOperationsHandler.java:121) [reactor-netty-0.8.5.RELEASE.jar:0.8.5.RELEASE] 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:245) [netty-transport-4.1.33.Final.jar:4.1.33.Final] 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:231) [netty-transport-4.1.33.Final.jar:4.1.33.Final] 	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:224) [netty-transport-4.1.33.Final.jar:4.1.33.Final] 	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:75) [netty-transport-4.1.33.Final.jar:4.1.33.Final] 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:245) [netty-transport-4.1.33.Final.jar:4.1.33.Final] 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:231) [netty-transport-4.1.33.Final.jar:4.1.33.Final] 	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:224) [netty-transport-4.1.33.Final.jar:4.1.33.Final] 	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelInactive(CombinedChannelDuplexHandler.java:420) [netty-transport-4.1.33.Final.jar:4.1.33.Final] 	at io.netty.handler.codec.ByteToMessageDecoder.channelInputClosed(ByteToMessageDecoder.java:390) [netty-codec-4.1.33.Final.jar:4.1.33.Final] 	at io.netty.handler.codec.ByteToMessageDecoder.channelInactive(ByteToMessageDecoder.java:355) [netty-codec-4.1.33.Final.jar:4.1.33.Final] 	at io.netty.channel.CombinedChannelDuplexHandler.channelInactive(CombinedChannelDuplexHandler.java:223) [netty-transport-4.1.33.Final.jar:4.1.33.Final] 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:245) [netty-transport-4.1.33.Final.jar:4.1.33.Final] 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:231) [netty-transport-4.1.33.Final.jar:4.1.33.Final] 	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:224) [netty-transport-4.1.33.Final.jar:4.1.33.Final] 	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1403) [netty-transport-4.1.33.Final.jar:4.1.33.Final] 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:245) [netty-transport-4.1.33.Final.jar:4.1.33.Final] 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:231) [netty-transport-4.1.33.Final.jar:4.1.33.Final] 	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:912) [netty-transport-4.1.33.Final.jar:4.1.33.Final] 	at io.netty.channel.AbstractChannel$AbstractUnsafe$8.run(AbstractChannel.java:826) [netty-transport-4.1.33.Final.jar:4.1.33.Final] 	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:163) [netty-common-4.1.33.Final.jar:4.1.33.Final] 	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java) [netty-common-4.1.33.Final.jar:4.1.33.Final] 	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404) [netty-common-4.1.33.Final.jar:4.1.33.Final] 	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:333) [netty-transport-native-epoll-4.1.33.Final-linux-x86_64.jar:4.1.33.Final] 	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:905) [netty-common-4.1.33.Final.jar:4.1.33.Final] 	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_202] ```  I'm curious why the `onErrorResume` doesn't work and there's some `isDisconnectedClientError` detection in the `handleUnresolvedError` callback.  https://github.com/spring-projects/spring-framework/blob/0ca5afd8e469321230cae7004f75c1a955737aa6/spring-web/src/main/java/org/springframework/web/server/adapter/HttpWebHandlerAdapter.java#L243-L247  Any advice is appreciated.","closed","status: invalid,","flisky","2019-03-04T06:33:23Z","2019-03-04T15:39:23Z"
"","22733","End Of Life for Spring 4.3.x  is not clear","**Affects: 4.3.x**  The documentation on the https://github.com/spring-projects/spring-framework/wiki/Spring-Framework-Versions page is not clear as to when 4.3.x will no longer be supported.  When you say Until 2020, does that mean 12/31/2019, 12/31/2020, or x/x/2020?  This is an important distinction and is not clear in that document.","closed","type: documentation,","JoelBarsotti","2019-04-03T20:20:14Z","2019-04-03T22:44:10Z"
"","2055","Support W3C Web Annotation Protocol Media Type","**According to the document:** - [**W3C Web Annotation Protocol**](https://www.w3.org/TR/annotation-protocol/)       **The following media type can be supported by the framework:**       application/ld+json; profile=""http://www.w3.org/ns/anno.jsonld""","closed","","vedatakses","2018-12-16T21:51:04Z","2018-12-17T14:09:54Z"
"","22149","Spring MVC @RequestHeader value is ignored [SPR-17617]","**[zsenyeg](https://jira.spring.io/secure/ViewProfile.jspa?name=zsenyeg)** opened **[SPR-17617](https://jira.spring.io/browse/SPR-17617?redirect=false)** and commented  `RequestHeaderMethodArgumentResolver` creates `RequestHeaderNamedValueInfo` information from annotation using only name value of RequestHeader annotation.  In generated codes for example swagger codegen 3, only the value attribute is filled, and because of that in the rest interface the name of the method argument will be used, that is might be different than the name (or value) of the RequestHeader annotation.  For example: ```java @RequestHeader(value = ""Consent-ID"",required = false) String consentId ```     Name attribute of annotation is not filled, because of that method argument name consentId will be used, and won't found among the http request headers.      ---  **Affects:** 5.1.2  **Attachments:** - [RequestHeaderMethodArgumentResolverTest.java](https://jira.spring.io/secure/attachment/26165/RequestHeaderMethodArgumentResolverTest.java) (_2.61 kB_)","closed","in: web,","spring-projects-issues","2018-12-21T13:12:13Z","2019-03-11T18:16:15Z"
"","22134","Problem with dependency injection [SPR-17602]","**[Zohar Cohen](https://jira.spring.io/secure/ViewProfile.jspa?name=zcohen)** opened **[SPR-17602](https://jira.spring.io/browse/SPR-17602?redirect=false)** and commented  Hi,  I am facing a strange behavior with dependency injection in my project, there is an unexpected initialization of one of our constructors.  I am using Spring 5.0.6.RELEASE with XML configuration, we have the following structure:  **Entity P** - this class depended on two entities and a String:  ```java public class P {public class P {    public P(D1 d1, D2 d2, String input){       System.out.println(""P Constructor: D1: ""+d1+"", D2: ""+d2+"" , Input: ""+input);   } } ```   **Entity S** - this class inject to the depended class, the class contains two constructors, we are                     initializing only the empty constructor     ```java public class S {public class S {   public S() {    System.out.println(""S Empty Constructor!"");  }   public S(String str) {    System.out.println(""S Argument Constructor!"");  } } ```      **Entity D1**  ```java public class D1 {public class D1 {   public D1(String input) {    System.out.println(""D1 Constructor with input: "" + input);  }   public D1(S s, String input) {    System.out.println(""D1 Constructor with two inputs"");  } } ```     **Entity D2**     ```java public class D2 {public class D2 {    public D2(String input) {      System.out.println(""D2 Constructor with input: "" + input);  }   public D2(S s, String input) {     System.out.println(""D2 Constructor with two inputs"");  } } ```     XML configuration:  ```java                                                 ```      Based on the configuration file, the following activities should happen:  1) S - calling to empty constructor.  2) P - we are calling to the contractors with two depended and MS string.  3) D2 - constructorr with one input 'MS'.  4) D1 - constructore with input 'MS'     The issue is that during the autowiring process Spring initializes the S constructor with the String argument which is not expected to be called. Program Output: **S Argument Constructor!** D1 Constructor with input: MS **S Argument Constructor!** D2 Constructor with input: MS P Constructor: D1: com.zohar.D1@4566e5bd, D2: com.zohar.D2@1ed4004b , Input: MS S Empty Constructor!   This seems like a private case due to the second constructors that the depended class have (Seems like an issue with the reflection process).    The solution to this issue is to add the wrapper class as a type to the 'constructor-arg' tag:   \ \ \  \   \  \ \  \   The question is: why we are having this issue in case the type is not set where it is not mandatory?    Attached is the zip with this example.   Thank you very much in advance.    Zohar                  ---  **Affects:** 5.0.6  **Attachments:** - [SpringDI.zip](https://jira.spring.io/secure/attachment/26158/SpringDI.zip) (_6.78 MB_)","closed","in: core,","spring-projects-issues","2018-12-14T19:18:37Z","2022-02-18T21:01:47Z"
"","22022","WebMvcConfigurer StackOverFlowException [SPR-17490]","**[zl7261](https://jira.spring.io/secure/ViewProfile.jspa?name=zl7261)** opened **[SPR-17490](https://jira.spring.io/browse/SPR-17490?redirect=false)** and commented  I want to add a function that can access static file by URL.  And I know in spring boot 2 you can do this with 2 way .  extends WebMvcConfigurationSupport or implements implements WebMvcConfigurer override the addResourceHandlers() method.  But when I implements WebMvcConfigurer,I meet a stackoverflowException. It is confused to me.  Here's my code. Both of them are very simple. But the extend's code is running good.Another is not.  ```java @configuration public class WebFileConfiguration implements WebMvcConfigurer {     @Override public void addResourceHandlers(ResourceHandlerRegistry registry) {      //addResourceHandler = url请求的路径     registry.addResourceHandler(""/txt/**"")     //addResourceLocations=图片存放在服务器的真实路径             .addResourceLocations(""file:D://"");     addResourceHandlers(registry); }  }  ```  ```java @configuration public class WebFileConfiguration extends WebMvcConfigurationSupport {     @Override public void addResourceHandlers(ResourceHandlerRegistry registry) {      //addResourceHandler = url请求的路径     registry.addResourceHandler(""/txt/**"")     //addResourceLocations=图片存放在服务器的真实路径             .addResourceLocations(""file:D://"");     super.addResourceHandlers(registry); } }  ```  **There is my error log.** **I thought maybe my D disk is too many file that too long for ArrayList's size.But I change the resouceLocation it's same error.**  **My D: disk only used less than 8 gb , about 15000 files ,and less than 3500 folders.**  2018-10-29 14:38:26.517 INFO 31056 --- [ restartedMain] ConditionEvaluationReportLoggingListener :  Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled. 2018-10-29 14:38:26.524 ERROR 31056 --- [ restartedMain] o.s.boot.SpringApplication : Application run failed  org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'resourceHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.web.servlet.HandlerMapping]: Factory method 'resourceHandlerMapping' threw exception; nested exception is java.lang.StackOverflowError at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:590) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1247) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE] at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE] at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE] at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE] at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE] at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE] at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE] at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE] at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140) ~[spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE] at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762) [spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE] at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:398) [spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE] at org.springframework.boot.SpringApplication.run(SpringApplication.java:330) [spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE] at org.springframework.boot.SpringApplication.run(SpringApplication.java:1258) [spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE] at org.springframework.boot.SpringApplication.run(SpringApplication.java:1246) [spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE] at com.freego.report.crm.ReportCrmApplication.main(ReportCrmApplication.java:36) [classes/:na] at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181] at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181] at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181] at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181] at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-2.0.4.RELEASE.jar:2.0.4.RELEASE] Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.web.servlet.HandlerMapping]: Factory method 'resourceHandlerMapping' threw exception; nested exception is java.lang.StackOverflowError at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE] at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:582) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE] ... 23 common frames omitted Caused by: java.lang.StackOverflowError: null at java.util.ArrayList.addAll(ArrayList.java:581) ~[na:1.8.0_181] at org.springframework.web.servlet.config.annotation.ResourceHandlerRegistration.addResourceLocations(ResourceHandlerRegistration.java:83) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]   ---  **Reference URL:** https://github.com/codecentric/spring-boot-starter-batch-web/issues/57","closed","status: invalid,","spring-projects-issues","2018-10-29T07:12:21Z","2019-01-12T05:17:46Z"
"","22091","Potential resource leak in DataSourceUtils.doGetConnection [SPR-17559]","**[Yurx](https://jira.spring.io/secure/ViewProfile.jspa?name=cherio)** opened **[SPR-17559](https://jira.spring.io/browse/SPR-17559?redirect=false)** and commented  Method doGetConnection in org.springframework.jdbc.datasource.DataSourceUtils has code that leaks (or has potential to leak) resources.  Objects like logger, DataSource, Connection, etc are used or expected to be referenced between the connection is created and returned. Use of those objects can raise exceptions and cause a connection to be created but not returned from the function. This prevents the caller from being able to release that connection.  The solution is simple and quite standard - try/catch clause is needed, see attachment.  This affects all recent versions including 5.0.x and 5.1.x   ---  **Affects:** 5.0.11, 5.1.3  **Attachments:** - [2018-12-03 DataSourceUtils-doGetConnection-resource-leak.png](https://jira.spring.io/secure/attachment/26135/2018-12-03+DataSourceUtils-doGetConnection-resource-leak.png) (_17.26 kB_)  **Backported to:** [5.0.12](https://github.com/spring-projects/spring-framework/milestone/193?closed=1), [4.3.22](https://github.com/spring-projects/spring-framework/milestone/171?closed=1)","closed","type: bug,","spring-projects-issues","2018-12-03T19:16:25Z","2019-01-09T09:57:56Z"
"","22045","With WebDataBinder, the empty value of Boolean is not Null but FALSE [SPR-17513]","**[yoshikawaa](https://jira.spring.io/secure/ViewProfile.jspa?name=yoshikawaa1)** opened **[SPR-17513](https://jira.spring.io/browse/SPR-17513?redirect=false)** and commented  With WebDataBinder, why the empty value of Boolean is not Null but FALSE ?  ##### Form backing bean  ```java public class SampleForm {   private Boolean finished;   // getter and setter... } ```  ##### Request Parameter  * finished=true -> TRUE * finished=false -> FALSE * finished= -> Null * _finished= -> FALSE ???     ""_"" prefixed value is converted to empty value in WebDataBinder#getEmptyValue .     If we use 3 pattern value (TRUE, FALSE, Null(=default)), it may becomes a problem.  Because the result are different when explicitly sending finished= and when implicit _finished= is sent.     Thanks.   ---  **Affects:** 4.3.20, 5.1.2  **Reference URL:** https://github.com/spring-projects/spring-framework/blob/v5.1.2.RELEASE/spring-web/src/main/java/org/springframework/web/bind/WebDataBinder.java#L282-L285","closed","status: declined,","spring-projects-issues","2018-11-18T10:58:14Z","2019-01-12T16:20:32Z"
"","22094","Support concrete Map subtypes for @RequestParam arguments","**[yl-yue](https://jira.spring.io/secure/ViewProfile.jspa?name=yl-yue)** opened **[SPR-17562](https://jira.spring.io/browse/SPR-17562?redirect=false)** and commented  [Problem description](https://github.com/spring-projects/spring-boot/issues/15377)  Github problem notes  ## _[Additional description](https://github.com/spring-projects/spring-boot/issues/15377)_  #### _*expect*_  `@RequestParam` annotation Subclasses of map are supported, Not just HashMap.  #### implementation  As github described it.  Or you can override the default Argument Resolvers by customizing the Argument Resolvers, as in the comments below.   ---  **Affects:** 5.0.10  **Reference URL:** https://github.com/spring-projects/spring-boot/issues/15377","closed","type: enhancement,","spring-projects-issues","2018-12-04T09:02:22Z","2019-08-01T08:26:50Z"
"","22078","Reactive HTTP header adapters don't print header values in toString [SPR-17546]","**[Yin Jifeng](https://jira.spring.io/secure/ViewProfile.jspa?name=flisky)** opened **[SPR-17546](https://jira.spring.io/browse/SPR-17546?redirect=false)** and commented  ```java private String formatHeaders(HttpHeaders responseHeaders) {      return this.enableLoggingRequestDetails ?                responseHeaders.toString() : responseHeaders.isEmpty() ? ""{}"" : ""{masked}""; } ```  The responseHeaders goes with 'ReadOnlyHttpHeaders' -> 'HttpHeaders' -> NettyHeadersAdapters, and NettyHeadersAdapters has no  ```java public String toString() {     return this.headers.toString(); } ```    ---  **Affects:** 5.1.3  **Reference URL:** https://github.com/spring-projects/spring-framework/blob/v5.1.3.RELEASE/spring-web/src/main/java/org/springframework/web/server/adapter/HttpWebHandlerAdapter.java#L271-L274  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/8eef97da336c6b4f7bacb3c573e23d02b0d204cb","closed","type: enhancement,","spring-projects-issues","2018-11-28T10:40:34Z","2019-01-09T13:06:52Z"
"","21964","MethodValidationPostProcessor does not support JDK proxy from FactoryBean [SPR-17431]","**[Yanming Zhou](https://jira.spring.io/secure/ViewProfile.jspa?name=quaff)** opened **[SPR-17431](https://jira.spring.io/browse/SPR-17431?redirect=false)** and commented  ```java  package com.example;  import static org.junit.Assert.assertEquals;  import javax.validation.ConstraintViolationException; import javax.validation.Validator; import javax.validation.constraints.NotEmpty;  import org.aopalliance.intercept.MethodInterceptor; import org.junit.Test; import org.junit.runner.RunWith; import org.springframework.aop.framework.ProxyFactory; import org.springframework.beans.factory.FactoryBean; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.context.annotation.Bean; import org.springframework.context.annotation.Configuration; import org.springframework.context.annotation.Lazy; import org.springframework.test.context.ContextConfiguration; import org.springframework.test.context.junit4.SpringRunner; import org.springframework.validation.annotation.Validated; import org.springframework.validation.beanvalidation.LocalValidatorFactoryBean; import org.springframework.validation.beanvalidation.MethodValidationPostProcessor;  import com.example.MethodValidationPostProcessorTests.MyConfiguration;  @RunWith(SpringRunner.class) @ContextConfiguration(classes = MyConfiguration.class) public class MethodValidationPostProcessorTests {  	@Autowired 	private MyInterface myInterface;  	@Autowired 	private MyInterface myImplementation;  	@Test(expected = ConstraintViolationException.class) 	public void testJdkProxy() throws Exception { 		assertEquals("""", myInterface.echo("""")); 	}  	@Test(expected = ConstraintViolationException.class) 	public void testImplementation() throws Exception { 		assertEquals("""", myImplementation.echo("""")); 	}  	@Validated 	public interface MyInterface {  		public String echo(@NotEmpty String text);  	}  	@Configuration 	static class MyConfiguration {  		@Bean 		public FactoryBean myInterface() { 			return new FactoryBean() {  				@Override 				public MyInterface getObject() throws Exception { 					return (MyInterface) new ProxyFactory(MyInterface.class, 							(MethodInterceptor) mi -> mi.getArguments()[0]) 									.getProxy(MyInterface.class.getClassLoader()); 				}  				@Override 				public Class getObjectType() { 					return MyInterface.class; 				}  			}; 		}  		@Bean 		public MyInterface myImplementation() { 			return new MyInterface() {  				@Override 				public String echo(String text) { 					return text; 				}  			}; 		}  		@Bean 		public LocalValidatorFactoryBean validatorFactory() { 			return new LocalValidatorFactoryBean(); 		}  		@Bean 		public static MethodValidationPostProcessor methodValidationPostProcessor(@Lazy Validator validator) { 			MethodValidationPostProcessor postProcessor = new MethodValidationPostProcessor(); 			postProcessor.setValidator(validator); 			return postProcessor; 		}  	}  } ```  testImplementation() pass and testJdkProxy() failed  ---  **Affects:** 5.1.1  **Issue Links:** - #21907 MethodValidationPostProcessor validates FactoryBean methods for which validation is not applicable - #21919 MethodValidationPostProcessor still validates FactoryBean methods on CGLIB proxies","open","in: core,","spring-projects-issues","2018-10-25T07:46:51Z","2019-01-11T13:16:34Z"
"","22007","Use of Hooks.onOperatorDebug causes performance degradation on 404 errors [SPR-17475]","**[xenv](https://jira.spring.io/secure/ViewProfile.jspa?name=xenv)** opened **[SPR-17475](https://jira.spring.io/browse/SPR-17475?redirect=false)** and commented  This problem has existed since Springboot 2.0, but I don't know why nobody mentioned it. It would be exploited by attackers and consume all the resources of the server.     When we create a Webfilter in Webflux, if there is a large amount of 404 access, it will cause the Filter chain to be seriously misassembled, resulting in a huge amount of code being executed repeatedly, consuming the resources of the entire server.     To reproduce this problem, we just need to create a Webflux project from SPRING INITIALIZR and create a simple Webfilter, and open the log mode.     The simple WebFilter like this:     ```java @Component public class TestFilter implements WebFilter {     @NonNull     @Override     public Mono filter(@NonNull ServerWebExchange ctx, @NonNull WebFilterChain chain) {         Hooks.onOperatorDebug();         return chain.filter(ctx).log();     } } ```        Or you can download the project from my github:  https://github.com/xenv/webflux-bug-example      And then, you just need to access a few urls that don't exist, like /404, you will see that the wrongly assembled Filter chain is getting longer and longer.     ```java Error has been observed by the following operator(s):Error has been observed by the following operator(s): |_ Mono.error ⇢ org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$0(ResourceWebHandler.java:327) |_ Mono.defer ⇢ org.springframework.web.reactive.resource.ResourceWebHandler.handle(ResourceWebHandler.java:325) |_ Mono.defer ⇢ org.springframework.web.reactive.resource.ResourceWebHandler.handle(ResourceWebHandler.java:325) |_ Mono.switchIfEmpty ⇢ org.springframework.web.reactive.resource.ResourceWebHandler.handle(ResourceWebHandler.java:325) |_ Mono.switchIfEmpty ⇢ org.springframework.web.reactive.resource.ResourceWebHandler.handle(ResourceWebHandler.java:325) |_ Mono.flatMap ⇢ org.springframework.web.reactive.resource.ResourceWebHandler.handle(ResourceWebHandler.java:329) |_ Mono.flatMap ⇢ org.springframework.web.reactive.resource.ResourceWebHandler.handle(ResourceWebHandler.java:329) |_ Mono.then ⇢ org.springframework.web.reactive.result.SimpleHandlerAdapter.handle(SimpleHandlerAdapter.java:46) |_ Mono.then ⇢ org.springframework.web.reactive.result.SimpleHandlerAdapter.handle(SimpleHandlerAdapter.java:46) |_ Mono.flatMap ⇢ org.springframework.web.reactive.DispatcherHandler.handle(DispatcherHandler.java:151) |_ Mono.flatMap ⇢ org.springframework.web.reactive.DispatcherHandler.handle(DispatcherHandler.java:151) |_ Mono.flatMap ⇢ org.springframework.web.reactive.DispatcherHandler.handle(DispatcherHandler.java:152) |_ Mono.flatMap ⇢ org.springframework.web.reactive.DispatcherHandler.handle(DispatcherHandler.java:152) |_ Mono.defer ⇢ org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119) |_ Mono.defer ⇢ org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119) |_ Mono.log ⇢ com.example.demo.TestFilter.filter(TestFilter.java:19) |_ Mono.log ⇢ com.example.demo.TestFilter.filter(TestFilter.java:19) |_ Mono.defer ⇢ org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119) |_ Mono.defer ⇢ org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119) |_ Mono.error ⇢ org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$0(ResourceWebHandler.java:327) |_ Mono.defer ⇢ org.springframework.web.reactive.resource.ResourceWebHandler.handle(ResourceWebHandler.java:325) |_ Mono.switchIfEmpty ⇢ org.springframework.web.reactive.resource.ResourceWebHandler.handle(ResourceWebHandler.java:325) |_ Mono.flatMap ⇢ org.springframework.web.reactive.resource.ResourceWebHandler.handle(ResourceWebHandler.java:329) |_ Mono.then ⇢ org.springframework.web.reactive.result.SimpleHandlerAdapter.handle(SimpleHandlerAdapter.java:46) |_ Mono.flatMap ⇢ org.springframework.web.reactive.DispatcherHandler.handle(DispatcherHandler.java:151) |_ Mono.flatMap ⇢ org.springframework.web.reactive.DispatcherHandler.handle(DispatcherHandler.java:152) |_ Mono.defer ⇢ org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119) |_ Mono.log ⇢ com.example.demo.TestFilter.filter(TestFilter.java:19) |_ Mono.defer ⇢ org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119) |_ Mono.defer ⇢ org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119) |_ Mono.error ⇢ org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$0(ResourceWebHandler.java:327) |_ Mono.defer ⇢ org.springframework.web.reactive.resource.ResourceWebHandler.handle(ResourceWebHandler.java:325) |_ Mono.switchIfEmpty ⇢ org.springframework.web.reactive.resource.ResourceWebHandler.handle(ResourceWebHandler.java:325) |_ Mono.flatMap ⇢ org.springframework.web.reactive.resource.ResourceWebHandler.handle(ResourceWebHandler.java:329) |_ Mono.then ⇢ org.springframework.web.reactive.result.SimpleHandlerAdapter.handle(SimpleHandlerAdapter.java:46) |_ Mono.flatMap ⇢ org.springframework.web.reactive.DispatcherHandler.handle(DispatcherHandler.java:151) |_ Mono.flatMap ⇢ org.springframework.web.reactive.DispatcherHandler.handle(DispatcherHandler.java:152) |_ Mono.defer ⇢ org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119) |_ Mono.log ⇢ com.example.demo.TestFilter.filter(TestFilter.java:19) |_ Mono.defer ⇢ org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119) |_ Mono.defer ⇢ org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119) |_ Mono.error ⇢ org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$0(ResourceWebHandler.java:327) |_ Mono.defer ⇢ org.springframework.web.reactive.resource.ResourceWebHandler.handle(ResourceWebHandler.java:325) |_ Mono.switchIfEmpty ⇢ org.springframework.web.reactive.resource.ResourceWebHandler.handle(ResourceWebHandler.java:325) |_ Mono.flatMap ⇢ org.springframework.web.reactive.resource.ResourceWebHandler.handle(ResourceWebHandler.java:329) |_ Mono.then ⇢ org.springframework.web.reactive.result.SimpleHandlerAdapter.handle(SimpleHandlerAdapter.java:46) |_ Mono.flatMap ⇢ org.springframework.web.reactive.DispatcherHandler.handle(DispatcherHandler.java:151) |_ Mono.flatMap ⇢ org.springframework.web.reactive.DispatcherHandler.handle(DispatcherHandler.java:152) |_ Mono.defer ⇢ org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119) |_ Mono.log ⇢ com.example.demo.TestFilter.filter(TestFilter.java:19) |_ Mono.defer ⇢ org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119) |_ Mono.defer ⇢ org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119) |_ Mono.error ⇢ org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$0(ResourceWebHandler.java:327) |_ Mono.defer ⇢ org.springframework.web.reactive.resource.ResourceWebHandler.handle(ResourceWebHandler.java:325) |_ Mono.switchIfEmpty ⇢ org.springframework.web.reactive.resource.ResourceWebHandler.handle(ResourceWebHandler.java:325) |_ Mono.flatMap ⇢ org.springframework.web.reactive.resource.ResourceWebHandler.handle(ResourceWebHandler.java:329) |_ Mono.then ⇢ org.springframework.web.reactive.result.SimpleHandlerAdapter.handle(SimpleHandlerAdapter.java:46) |_ Mono.flatMap ⇢ org.springframework.web.reactive.DispatcherHandler.handle(DispatcherHandler.java:151) |_ Mono.flatMap ⇢ org.springframework.web.reactive.DispatcherHandler.handle(DispatcherHandler.java:152) |_ Mono.defer ⇢ org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119) |_ Mono.log ⇢ com.example.demo.TestFilter.filter(TestFilter.java:19) |_ Mono.defer ⇢ org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119) |_ Mono.defer ⇢ org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119) |_ Mono.error ⇢ org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$0(ResourceWebHandler.java:327) |_ Mono.defer ⇢ org.springframework.web.reactive.resource.ResourceWebHandler.handle(ResourceWebHandler.java:325) |_ Mono.switchIfEmpty ⇢ org.springframework.web.reactive.resource.ResourceWebHandler.handle(ResourceWebHandler.java:325) |_ Mono.flatMap ⇢ org.springframework.web.reactive.resource.ResourceWebHandler.handle(ResourceWebHandler.java:329) |_ Mono.then ⇢ org.springframework.web.reactive.result.SimpleHandlerAdapter.handle(SimpleHandlerAdapter.java:46) |_ Mono.flatMap ⇢ org.springframework.web.reactive.DispatcherHandler.handle(DispatcherHandler.java:151) |_ Mono.flatMap ⇢ org.springframework.web.reactive.DispatcherHandler.handle(DispatcherHandler.java:152) |_ Mono.defer ⇢ org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119) |_ Mono.log ⇢ com.example.demo.TestFilter.filter(TestFilter.java:19) |_ Mono.defer ⇢ org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119) |_ Mono.defer ⇢ org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119) |_ Mono.error ⇢ org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$0(ResourceWebHandler.java:327) |_ Mono.defer ⇢ org.springframework.web.reactive.resource.ResourceWebHandler.handle(ResourceWebHandler.java:325) |_ Mono.switchIfEmpty ⇢ org.springframework.web.reactive.resource.ResourceWebHandler.handle(ResourceWebHandler.java:325) |_ Mono.flatMap ⇢ org.springframework.web.reactive.resource.ResourceWebHandler.handle(ResourceWebHandler.java:329) |_ Mono.then ⇢ org.springframework.web.reactive.result.SimpleHandlerAdapter.handle(SimpleHandlerAdapter.java:46) |_ Mono.flatMap ⇢ org.springframework.web.reactive.DispatcherHandler.handle(DispatcherHandler.java:151) |_ Mono.flatMap ⇢ org.springframework.web.reactive.DispatcherHandler.handle(DispatcherHandler.java:152) |_ Mono.defer ⇢ org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119) |_ Mono.log ⇢ com.example.demo.TestFilter.filter(TestFilter.java:19) |_ Mono.defer ⇢ org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119) |_ Mono.defer ⇢ org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119) |_ Mono.error ⇢ org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$0(ResourceWebHandler.java:327) |_ Mono.defer ⇢ org.springframework.web.reactive.resource.ResourceWebHandler.handle(ResourceWebHandler.java:325) |_ Mono.switchIfEmpty ⇢ org.springframework.web.reactive.resource.ResourceWebHandler.handle(ResourceWebHandler.java:325) |_ Mono.flatMap ⇢ org.springframework.web.reactive.resource.ResourceWebHandler.handle(ResourceWebHandler.java:329) |_ Mono.then ⇢ org.springframework.web.reactive.result.SimpleHandlerAdapter.handle(SimpleHandlerAdapter.java:46) |_ Mono.flatMap ⇢ org.springframework.web.reactive.DispatcherHandler.handle(DispatcherHandler.java:151) |_ Mono.flatMap ⇢ org.springframework.web.reactive.DispatcherHandler.handle(DispatcherHandler.java:152) |_ Mono.defer ⇢ org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119) |_ Mono.log ⇢ com.example.demo.TestFilter.filter(TestFilter.java:19) |_ Mono.defer ⇢ org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119) |_ Mono.defer ⇢ org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119) |_ Mono.error ⇢ org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$0(ResourceWebHandler.java:327) |_ Mono.defer ⇢ org.springframework.web.reactive.resource.ResourceWebHandler.handle(ResourceWebHandler.java:325) |_ Mono.switchIfEmpty ⇢ org.springframework.web.reactive.resource.ResourceWebHandler.handle(ResourceWebHandler.java:325) |_ Mono.flatMap ⇢ org.springframework.web.reactive.resource.ResourceWebHandler.handle(ResourceWebHandler.java:329) |_ Mono.then ⇢ org.springframework.web.reactive.result.SimpleHandlerAdapter.handle(SimpleHandlerAdapter.java:46) |_ Mono.flatMap ⇢ org.springframework.web.reactive.DispatcherHandler.handle(DispatcherHandler.java:151) |_ Mono.flatMap ⇢ org.springframework.web.reactive.DispatcherHandler.handle(DispatcherHandler.java:152) |_ Mono.defer ⇢ org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119) |_ Mono.log ⇢ com.example.demo.TestFilter.filter(TestFilter.java:19) |_ Mono.defer ⇢ org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119) |_ Mono.defer ⇢ org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119) |_ Mono.error ⇢ org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$0(ResourceWebHandler.java:327) |_ Mono.defer ⇢ org.springframework.web.reactive.resource.ResourceWebHandler.handle(ResourceWebHandler.java:325) |_ Mono.switchIfEmpty ⇢ org.springframework.web.reactive.resource.ResourceWebHandler.handle(ResourceWebHandler.java:325) |_ Mono.flatMap ⇢ org.springframework.web.reactive.resource.ResourceWebHandler.handle(ResourceWebHandler.java:329) |_ Mono.then ⇢ org.springframework.web.reactive.result.SimpleHandlerAdapter.handle(SimpleHandlerAdapter.java:46) |_ Mono.flatMap ⇢ org.springframework.web.reactive.DispatcherHandler.handle(DispatcherHandler.java:151) |_ Mono.flatMap ⇢ org.springframework.web.reactive.DispatcherHandler.handle(DispatcherHandler.java:152) |_ Mono.defer ⇢ org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119) |_ Mono.log ⇢ com.example.demo.TestFilter.filter(TestFilter.java:19) |_ Mono.defer ⇢ org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119) |_ Mono.defer ⇢ org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119) |_ Mono.error ⇢ org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$0(ResourceWebHandler.java:327) |_ Mono.defer ⇢ org.springframework.web.reactive.resource.ResourceWebHandler.handle(ResourceWebHandler.java:325) |_ Mono.switchIfEmpty ⇢ org.springframework.web.reactive.resource.ResourceWebHandler.handle(ResourceWebHandler.java:325) |_ Mono.flatMap ⇢ org.springframework.web.reactive.resource.ResourceWebHandler.handle(ResourceWebHandler.java:329) |_ Mono.then ⇢ org.springframework.web.reactive.result.SimpleHandlerAdapter.handle(SimpleHandlerAdapter.java:46) |_ Mono.flatMap ⇢ org.springframework.web.reactive.DispatcherHandler.handle(DispatcherHandler.java:151) |_ Mono.flatMap ⇢ org.springframework.web.reactive.DispatcherHandler.handle(DispatcherHandler.java:152) |_ Mono.defer ⇢ org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119) |_ Mono.log ⇢ com.example.demo.TestFilter.filter(TestFilter.java:19) |_ Mono.defer ⇢ org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119) |_ Mono.defer ⇢ org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119) |_ Mono.error ⇢ org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$0(ResourceWebHandler.java:327) |_ Mono.defer ⇢ org.springframework.web.reactive.resource.ResourceWebHandler.handle(ResourceWebHandler.java:325) |_ Mono.switchIfEmpty ⇢ org.springframework.web.reactive.resource.ResourceWebHandler.handle(ResourceWebHandler.java:325) |_ Mono.flatMap ⇢ org.springframework.web.reactive.resource.ResourceWebHandler.handle(ResourceWebHandler.java:329) |_ Mono.then ⇢ org.springframework.web.reactive.result.SimpleHandlerAdapter.handle(SimpleHandlerAdapter.java:46) |_ Mono.flatMap ⇢ org.springframework.web.reactive.DispatcherHandler.handle(DispatcherHandler.java:151) |_ Mono.flatMap ⇢ org.springframework.web.reactive.DispatcherHandler.handle(DispatcherHandler.java:152) |_ Mono.defer ⇢ org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119) ```     **If you request a 404 page 10,000 times with a script, the response time of the 404 page may reach 1000-2000ms, and the CPU rises to 100%, which is very terrible. I hope it can be fixed soon. Thank you.**      ---  **Affects:** 5.1.2","closed","type: enhancement,","spring-projects-issues","2018-11-07T13:16:03Z","2018-11-27T10:00:04Z"
"","22174","FormHttpMessageConverter should support non-String form values [SPR-17645]","**[wsy](https://jira.spring.io/secure/ViewProfile.jspa?name=wsy)** opened **[SPR-17645](https://jira.spring.io/browse/SPR-17645?redirect=false)** and commented  HttpEntity takes generic type T as request body.  When T is MultiValueMap, and the values of the map contains non-string values such as Integer, an invoke to RestTemplate (with Content-Type ""application/x-www-form-urlencoded"") will cause ClassCastException.  I've attached a demo project that can re-produce this bug.   ```java MultiValueMap body = new LinkedMultiValueMap(); body.add(""Parameter1"", ""Value1""); // This is fine body.add(""Parameter2"", 2147483647); // This value will trigger the bug after calling RestTemplate to send out this request. ```  I've already submitted a pull request. [Pull Request #2078](https://github.com/spring-projects/spring-framework/pull/2078)     ---  **Affects:** 5.1.2  **Attachments:** - [Spring-Bug-Demo.tar.gz](https://jira.spring.io/secure/attachment/26172/Spring-Bug-Demo.tar.gz) (_1.14 kB_)  **Referenced from:** pull request https://github.com/spring-projects/spring-framework/pull/2078, and commits https://github.com/spring-projects/spring-framework/commit/a82f04908345faf943c033082642fda34eb16f6d","closed","type: enhancement,","spring-projects-issues","2019-01-08T06:05:11Z","2019-01-09T13:06:52Z"
"","21899","DateTimeFormat Javadoc is not correct [SPR-17366]","**[volkovandr](https://jira.spring.io/secure/ViewProfile.jspa?name=volkovandr)** opened **[SPR-17366](https://jira.spring.io/browse/SPR-17366?redirect=false)** and commented  The javadoc here: https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/format/annotation/DateTimeFormat.ISO.html#DATE_TIME  states that the ISO DATE_TIME format uses the pattern   `yyyy-MM-dd'T'HH:mm:ss.SSSZ`  but in fact the pattern is   `yyyy-MM-dd'T'HH:mm:ss.SSSXXX`  The change was made by this commit:  https://github.com/spring-projects/spring-framework/commit/bb94ba6e3ff8dfc053c5808d337289e8df37e935#diff-4e8b86c8c802560c74bf5647b9c91bb6  The javadoc needs to be changed to reflect the reality. The same also applies for the TIME format.  ---  **Affects:** 5.0.3, 5.0.4, 5.0.5, 5.0.6, 5.0.7, 5.0.8, 5.0.9, 5.1 GA  **Issue Links:** - #21939 Incorrect datetime format in Javadoc (_**""is duplicated by""**_)  **Referenced from:** pull request https://github.com/spring-projects/spring-framework/pull/1989, and commits https://github.com/spring-projects/spring-framework/commit/b0433810da05c4da6103e8df388ad8ccef455ff0, https://github.com/spring-projects/spring-framework/commit/61403e3bd38da03e3eec41b331aaf71a48e26122  **Backported to:** [5.0.10](https://github.com/spring-projects/spring-framework/milestone/191?closed=1)","closed","in: core,","spring-projects-issues","2018-10-11T08:36:27Z","2019-01-11T13:13:22Z"
"","22101","RestControllerAdvice with custom annotations is not working properly [SPR-17569]","**[volkanto](https://jira.spring.io/secure/ViewProfile.jspa?name=volkanto)** opened **[SPR-17569](https://jira.spring.io/browse/SPR-17569?redirect=false)** and commented  We have two different controllers for two different versions of the API. We are trying to distinguish the exception handling too. Regarding this need, we created custom annotations to distinguish the controllers.     Here are the custom annotations for the version definitions:  ```java @Target(ElementType.TYPE) @Retention(RetentionPolicy.RUNTIME) public @interface ApiV1 { }  @Target(ElementType.TYPE) @Retention(RetentionPolicy.RUNTIME) public @interface ApiV2 { } ```     Here are the controller implementations with the custom version annotations:  ```java @ApiV1 @RequestMapping(""/path"") @RestController public class XYZControllerImpl implements com.xyz.XYZController { ... }  @ApiV2 @RequestMapping(""/v2/path"") @RestController public class XYZControllerV2Impl implements com.xyz.v2.XYZController { ... } ```     And here are the custom exception handlers regarding the version declarations:  ```java @RestControllerAdvice(annotations = ApiV1.class) public class ExceptionHandlerForV1 {           private static final String ONLY_APPLICATION_JSON_SUPPORTED = ""only 'application/json' supported"";          ...             @ExceptionHandler(HttpMediaTypeNotSupportedException.class)         @ResponseStatus(HttpStatus.BAD_REQUEST)         public CustomResponse handleHttpMediaTypeNotSupportedException(HttpMediaTypeNotSupportedException e) {                 return new CustomResponse(CustomResponse.Status.INVALID_REQUEST, ONLY_APPLICATION_JSON_SUPPORTED);         }          ...  }  @RestControllerAdvice(annotations = ApiV2.class)  public class ExceptionHandlerForV2 { ... } ```     If a **HttpMediaTypeNotSupportedException** occurs, it is not handled by **ExceptionHandlerForV1**. We are getting Spring's exception instead of our custom exception. But if I remove _*annotations = ApiV1.class*_ part from the **ExceptionHandlerForV1**, this class is getting a global exception handler and related exceptions caught by this handler in a correct way. And also same behavior happens for **MethodNotAllowedException** too. But other types of exceptions handled properly.  We are wondering why this two exceptions (we tried these two exceptions so far) not handled by our custom exception handlers. Is it a design decision or a bug? If this is a design decision, how can we handle all these in our custom exception handlers?  We also tried all these cases with _Spring 5.1.3.RELEASE_ too.   ---  **Affects:** 5.0.6  **Reference URL:** #21502","closed","in: web,","spring-projects-issues","2018-12-05T16:53:40Z","2021-08-31T17:46:28Z"
"","22147","WebClient .retrieve() + bodyToMono() causes ""Only one connection receive subscriber allowed"" on 4xx and 5xx [SPR-17615]","**[Vladislav Kisel](https://jira.spring.io/secure/ViewProfile.jspa?name=encircled)** opened **[SPR-17615](https://jira.spring.io/browse/SPR-17615?redirect=false)** and commented  On 4xx and 5xx status, using WebClient ""retrieve"" + ""bodyTo..."" causes swallowed exception:  ```java java.lang.IllegalStateException: Only one connection receive subscriber allowed.  ```  Example (kotlin):  ```java WebClient.builder().build().get()         .uri(""https://jira.atlassian.com/rest/api/latest/issue/QWERTY-123"")         .retrieve()         .bodyToMono(String::class.java)         .test()         .expectError(WebClientResponseException::class.java)         .verify() ```     Probably exception handler subscribes to the connection itself so ""bodyTo..."" causes this exception.   Anyway, WebClientResponseException is being correctly thrown and IllegalStateException is just swallowed and printed to the output  ---  **Affects:** 5.1.3  **Issue Links:** - #22096 WebClient logs ""Only one connection receive subscriber allowed"" when response status is an error (_**""duplicates""**_)","closed","in: web,","spring-projects-issues","2018-12-20T22:21:57Z","2019-01-12T16:43:44Z"
"","22010","Consumes condition support for optional content [SPR-17478]","**[Vitalii Ishchenko](https://jira.spring.io/secure/ViewProfile.jspa?name=betalb)** opened **[SPR-17478](https://jira.spring.io/browse/SPR-17478?redirect=false)** and commented  Request validation behaves badly for cases when RequestBody is optional and not provided, but consumes is specified in RequestMapping annotation  i.e. having following method in controller, annotated with PostMapping, request will fail with empty body and no Content-Type. Sending dummy content type will resolve the issue     ```java @PostMapping(value = ""/records"", consumes = ""application/json"") public List queryRecords(@RequestBody(required = false) Map filter) {     return Collections.emptyList(); } ```  Fails:  ```java curl -X ""POST"" ""http://localhost:8080/records""  > POST /records HTTP/1.1 > Host: localhost:8080 > User-Agent: curl/7.54.0 > Accept: */* > < HTTP/1.1 415 < Content-Type: application/json;charset=UTF-8 < Transfer-Encoding: chunked < Date: Thu, 08 Nov 2018 08:01:09 GMT < * Connection #0 to host localhost left intact {""timestamp"":""2018-11-08T08:01:09.927+0000"",""status"":415,""error"":""Unsupported Media Type"",""message"":""Content type '' not supported"",""path"":""/records""} ```  Succeeds:  ```java curl -X ""POST"" ""http://localhost:8080/records"" \      -H 'Content-Type: application/json'  > POST /records HTTP/1.1 > Host: localhost:8080 > User-Agent: curl/7.54.0 > Accept: */* > Content-Type: application/json > < HTTP/1.1 200 < Content-Type: application/json;charset=UTF-8 < Transfer-Encoding: chunked < Date: Thu, 08 Nov 2018 08:03:31 GMT < * Connection #0 to host localhost left intact [] ```  Sample Spring Boot app is attached  ---  **Affects:** 5.1.2  **Attachments:** - [demo app.zip](https://jira.spring.io/secure/attachment/26094/demo+app.zip) (_51.97 kB_)  **Issue Links:** - #21955 `@RequestBody`(required=false) and no Content-Type Header Issue (_**""duplicates""**_)","closed","type: enhancement,","spring-projects-issues","2018-11-08T08:04:52Z","2019-05-08T04:53:56Z"
"","22142","Spring 5 Webclient throws ReadTimeout Exception [SPR-17610]","**[Viswanathan Manickam](https://jira.spring.io/secure/ViewProfile.jspa?name=manickamviswa)** opened **[SPR-17610](https://jira.spring.io/browse/SPR-17610?redirect=false)** and commented  I am getting readtimeout exception when I try to load test 1000 requests per second for 30 mins. Also, when the server sits idle for sometime and when I send request,  same error occurs the very first time but further requests process fine.  The response time for some requests is around 5 sec but other requests are in  250ms.  Please find the configuration below:   ```java @Bean public WebClient webClient() {  TcpClient tcpClient = TcpClient.create()  .option(ChannelOption.CONNECT_TIMEOUT_MILLIS, 30000)  .option(ChannelOption.SO_KEEPALIVE, true)  .doOnConnected { connection ->  connection.addHandlerLast(new ReadTimeoutHandler(5))  .addHandlerLast(new WriteTimeoutHandler(30))  }   ReactorClientHttpConnector httpConnector = new ReactorClientHttpConnector(HttpClient.from(tcpClient));   return WebClient.builder()  .clientConnector(httpConnector)  .build(); }     public Mono retryPost(String url, JSONObject body) {  Mono result = webClient.post().uri(url)  .contentType(MediaType.APPLICATION_JSON)  .accept(MediaType.APPLICATION_JSON_UTF8)  .body(BodyInserters.fromObject(body))  .exchange()  .log()  .flatMap { clientResponse ->  return handleResponse(clientResponse)  }  return result; }     private Mono handleResponse(ClientResponse clientResponse) {  if (clientResponse.statusCode().is4xxClientError() || clientResponse.statusCode().is5xxServerError()) {  return clientResponse.bodyToMono(String.class)  .flatMap { errorBody ->  return Mono.error(new CustomException(errorBody, clientResponse.statusCode().value()))  }  } else {  return clientResponse.bodyToMono(String.class).log();  } } ```   Please find the log I received:  ``` 14:39:33.092 [http-nio-8080-exec-4] INFO  reactor.Mono.SwitchIfEmpty.11 - onSubscribe(FluxSwitchIfEmpty.SwitchIfEmptySubscriber) 14:39:33.093 [http-nio-8080-exec-4] INFO  reactor.Mono.SwitchIfEmpty.11 - request(unbounded) 14:39:38.128 [reactor-http-nio-4] ERROR r.n.http.client.HttpClientConnect - [id: 0x05f49b52, L::60850 - R:] The connection observed an error io.netty.handler.timeout.ReadTimeoutException: null 14:39:38.131 [reactor-http-nio-4] ERROR reactor.Mono.SwitchIfEmpty.11 - onError(io.netty.handler.timeout.ReadTimeoutException) 14:39:38.131 [reactor-http-nio-4] ERROR reactor.Mono.SwitchIfEmpty.11 -  io.netty.handler.timeout.ReadTimeoutException: null 14:39:38.179 [http-nio-8080-exec-5] ERROR c.f.l.a.GlobalControllerExceptionHandler - null io.netty.handler.timeout.ReadTimeoutException: null ```  Let me know if I miss anything   ---  **Affects:** 5.1.3  **Reference URL:** https://stackoverflow.com/questions/53786424/springboot-webclient-throws-readtimeout-errors","closed","status: invalid,","spring-projects-issues","2018-12-18T21:51:15Z","2020-01-07T13:23:53Z"
"","22170","PLS-00306: wrong number or types of arguments in call to [SPR-17641]","**[Vishal Suryakant Deshmukh](https://jira.spring.io/secure/ViewProfile.jspa?name=vishal.deshmukh)** opened **[SPR-17641](https://jira.spring.io/browse/SPR-17641?redirect=false)** and commented  We are using SimpleJdbcCall to call oracle stored procedure from IBM WebSphere Application Server (WAS). While calling procedure we are not declaring SP In/OUT parameter as spring does it automatically by metadata lookups. After deploying application the procedure executed successfully, then for next 5-6 days we were not invoked this API but while executing it after 5-6 days we are getting error as **PLS-00306: wrong number or types of arguments in call to 'P_UPDATE_PWD'**.   We have tried application stop/start still it gives same error. Please suggest the solution ASAP.  Java Code:   ```java @Repository public class CSMDaoImpl extends AbstractBaseDao implements CSMDao { 	private SimpleJdbcCall jdbcCallUpdatePassword; 	@Autowired 	public void setJdbcCallForUpdatePassword(@Qualifier(""data_source"") DataSource dataSource) { 		this.jdbcCallUpdatePassword = new SimpleJdbcCall(dataSource) 				.withCatalogName(""PKG_API"") 				.withProcedureName(""P_UPDATE_PWD""); 		this.jdbcCallUpdatePassword.getJdbcTemplate().setQueryTimeout(5); 	}	@Override 	public MWResponseBean updatePassword(PasswordRequest request) throws Exception { 		MWResponseBean responseBean = new MWResponseBean(); 		try { 			SqlParameterSource inparam = new MapSqlParameterSource() 					.addValue(""P_P1"", request.getDetail().getP1(),OracleTypes.VARCHAR) 					.addValue(""P_P2"", request.getDetail().getP2(),OracleTypes.VARCHAR) 					.addValue(""P_P3"", request.getDetail().getP3(),OracleTypes.VARCHAR) 					.addValue(""P_P4"", request.getDetail().getP4(),OracleTypes.VARCHAR) 					.addValue(""P_P5"", request.getDetail().getP5(),OracleTypes.VARCHAR);			Map  results = jdbcCallUpdatePassword.execute(inparam);			if(results != null && !results.isEmpty()) { 				String errorFlag = (String) results.get(IAppConstants.P_RES_FLAG); 				String errorDesc = (String) results.get(IAppConstants.P_RES_DESC);				responseBean.put(IAppConstants.P_ERROR_FLAG, errorFlag); 				responseBean.put(IAppConstants.P_ERROR_DESC, errorDesc); 			} 		} catch (Exception ex) { 			throw new Exception(ex); 		} 		return responseBean;	 	} } ```  Stored Procedure Spec:   ```  create or replace PACKAGE  PKG_API AS     PROCEDURE P_UPDATE_PWD(           P_P1 IN  VARCHAR2,           P_P2 IN  VARCHAR2,           P_P3 IN  VARCHAR2,           P_P4 IN  VARCHAR2,           P_P5 IN  VARCHAR2,           P_RES_FLAG OUT VARCHAR2,           P_RES_DESC OUT VARCHAR2     ); END PKG_API; ```  Error Log:   ``` org.springframework.jdbc.BadSqlGrammarException: CallableStatementCallback; bad SQL grammar [{call PKG_API.P_UPDATE_PWD()}]; nested exception is java.sql.SQLException: ORA-06550: line 1, column 7: PLS-00306: wrong number or types of arguments in call to 'P_UPDATE_PWD' ORA-06550: line 1, column 7: PL/SQL: Statement ignored	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:231) ~[spring-jdbc-4.3.9.RELEASE.jar:4.3.9.RELEASE] 	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73) ~[spring-jdbc-4.3.9.RELEASE.jar:4.3.9.RELEASE] 	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:1099) ~[spring-jdbc-4.3.9.RELEASE.jar:4.3.9.RELEASE] 	at org.springframework.jdbc.core.JdbcTemplate.call(JdbcTemplate.java:1135) ~[spring-jdbc-4.3.9.RELEASE.jar:4.3.9.RELEASE] 	at org.springframework.jdbc.core.simple.AbstractJdbcCall.executeCallInternal(AbstractJdbcCall.java:405) ~[spring-jdbc-4.3.9.RELEASE.jar:4.3.9.RELEASE] 	at org.springframework.jdbc.core.simple.AbstractJdbcCall.doExecute(AbstractJdbcCall.java:365) ~[spring-jdbc-4.3.9.RELEASE.jar:4.3.9.RELEASE] 	at org.springframework.jdbc.core.simple.SimpleJdbcCall.execute(SimpleJdbcCall.java:198) ~[spring-jdbc-4.3.9.RELEASE.jar:4.3.9.RELEASE] 	at com.mw.dao.CSMDaoImpl.setPassword(CSMDaoImpl.java:521) [classes/:?] 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0] 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:95) ~[?:1.8.0] 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:55) ~[?:1.8.0] 	at java.lang.reflect.Method.invoke(Method.java:508) ~[?:2.6 (10-13-2016)] 	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333) [spring-aop-4.3.9.RELEASE.jar:4.3.9.RELEASE] 	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190) [spring-aop-4.3.9.RELEASE.jar:4.3.9.RELEASE] 	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157) [spring-aop-4.3.9.RELEASE.jar:4.3.9.RELEASE] 	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:136) [spring-tx-4.3.9.RELEASE.jar:4.3.9.RELEASE] 	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) [spring-aop-4.3.9.RELEASE.jar:4.3.9.RELEASE] 	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213) [spring-aop-4.3.9.RELEASE.jar:4.3.9.RELEASE] 	at com.sun.proxy.$Proxy122.updateNetBankingPassword(Unknown Source) [?:1.8.0] 	at com.mw.service.CSMServiceImpl.setPassword(CSMServiceImpl.java:950) [classes/:?] 	at com.mw.controller.CSMController.setPassword(CSMController.java:2346) [classes/:?] 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0] 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:95) ~[?:1.8.0] 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:55) ~[?:1.8.0] 	at java.lang.reflect.Method.invoke(Method.java:508) ~[?:2.6 (10-13-2016)] 	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) [spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE] 	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133) [spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE] 	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97) [spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE] 	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827) [spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE] 	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738) [spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE] 	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) [spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE] 	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967) [spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE] 	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901) [spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE] 	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) [spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE] 	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872) [spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE] 	at javax.servlet.http.HttpServlet.service(HttpServlet.java:595) [javax.j2ee.servlet.jar:?] 	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) [spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE] 	at javax.servlet.http.HttpServlet.service(HttpServlet.java:668) [javax.j2ee.servlet.jar:?] 	at com.ibm.ws.webcontainer.servlet.ServletWrapper.service(ServletWrapper.java:1233) [com.ibm.ws.webcontainer.jar:?] 	at com.ibm.ws.webcontainer.servlet.ServletWrapper.handleRequest(ServletWrapper.java:782) [com.ibm.ws.webcontainer.jar:?] 	at com.ibm.ws.webcontainer.servlet.ServletWrapper.handleRequest(ServletWrapper.java:481) [com.ibm.ws.webcontainer.jar:?] 	at com.ibm.ws.webcontainer.servlet.ServletWrapperImpl.handleRequest(ServletWrapperImpl.java:178) [com.ibm.ws.webcontainer.jar:?] 	at com.ibm.ws.webcontainer.filter.WebAppFilterChain.invokeTarget(WebAppFilterChain.java:136) [com.ibm.ws.webcontainer.jar:?] 	at com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:97) [com.ibm.ws.webcontainer.jar:?] 	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55) [spring-boot-1.5.4.RELEASE.jar:1.5.4.RELEASE] 	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE] 	at com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) [com.ibm.ws.webcontainer.jar:?] 	at com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) [com.ibm.ws.webcontainer.jar:?] 	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:110) [spring-boot-actuator-1.5.4.RELEASE.jar:1.5.4.RELEASE] 	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE] 	at com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) [com.ibm.ws.webcontainer.jar:?] 	at com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) [com.ibm.ws.webcontainer.jar:?] 	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) [spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE] 	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE] 	at com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) [com.ibm.ws.webcontainer.jar:?] 	at com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) [com.ibm.ws.webcontainer.jar:?] 	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) [spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE] 	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE] 	at com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) [com.ibm.ws.webcontainer.jar:?] 	at com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) [com.ibm.ws.webcontainer.jar:?] 	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) [spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE] 	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE] 	at com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) [com.ibm.ws.webcontainer.jar:?] 	at com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) [com.ibm.ws.webcontainer.jar:?] 	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) [spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE] 	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE] 	at com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) [com.ibm.ws.webcontainer.jar:?] 	at com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) [com.ibm.ws.webcontainer.jar:?] 	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106) [spring-boot-actuator-1.5.4.RELEASE.jar:1.5.4.RELEASE] 	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE] 	at com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) [com.ibm.ws.webcontainer.jar:?] 	at com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) [com.ibm.ws.webcontainer.jar:?] 	at org.springframework.boot.web.support.ErrorPageFilter.doFilter(ErrorPageFilter.java:115) [spring-boot-1.5.4.RELEASE.jar:1.5.4.RELEASE] 	at org.springframework.boot.web.support.ErrorPageFilter.access$000(ErrorPageFilter.java:59) [spring-boot-1.5.4.RELEASE.jar:1.5.4.RELEASE] 	at org.springframework.boot.web.support.ErrorPageFilter$1.doFilterInternal(ErrorPageFilter.java:90) [spring-boot-1.5.4.RELEASE.jar:1.5.4.RELEASE] 	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE] 	at org.springframework.boot.web.support.ErrorPageFilter.doFilter(ErrorPageFilter.java:108) [spring-boot-1.5.4.RELEASE.jar:1.5.4.RELEASE] 	at com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:195) [com.ibm.ws.webcontainer.jar:?] 	at com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:91) [com.ibm.ws.webcontainer.jar:?] 	at com.ibm.ws.webcontainer.filter.WebAppFilterManager.doFilter(WebAppFilterManager.java:967) [com.ibm.ws.webcontainer.jar:?] 	at com.ibm.ws.webcontainer.filter.WebAppFilterManager.invokeFilters(WebAppFilterManager.java:1107) [com.ibm.ws.webcontainer.jar:?] 	at com.ibm.ws.webcontainer.webapp.WebApp.handleRequest(WebApp.java:3980) [com.ibm.ws.webcontainer.jar:?] 	at com.ibm.ws.webcontainer.webapp.WebGroup.handleRequest(WebGroup.java:304) [com.ibm.ws.webcontainer.jar:?] 	at com.ibm.ws.webcontainer.WebContainer.handleRequest(WebContainer.java:1016) [com.ibm.ws.webcontainer.jar:?] 	at com.ibm.ws.webcontainer.WSWebContainer.handleRequest(WSWebContainer.java:1817) [com.ibm.ws.webcontainer.jar:?] 	at com.ibm.ws.webcontainer.channel.WCChannelLink.ready(WCChannelLink.java:200) [com.ibm.ws.webcontainer.jar:?] 	at com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.handleDiscrimination(HttpInboundLink.java:463) [com.ibm.ws.runtime.jar:?] 	at com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.handleNewRequest(HttpInboundLink.java:530) [com.ibm.ws.runtime.jar:?] 	at com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.processRequest(HttpInboundLink.java:316) [com.ibm.ws.runtime.jar:?] 	at com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.ready(HttpInboundLink.java:287) [com.ibm.ws.runtime.jar:?] 	at com.ibm.ws.tcp.channel.impl.NewConnectionInitialReadCallback.sendToDiscriminators(NewConnectionInitialReadCallback.java:214) [?:CCX.CF [o1537.01]] 	at com.ibm.ws.tcp.channel.impl.NewConnectionInitialReadCallback.complete(NewConnectionInitialReadCallback.java:113) [?:CCX.CF [o1537.01]] 	at com.ibm.ws.tcp.channel.impl.AioReadCompletionListener.futureCompleted(AioReadCompletionListener.java:175) [com.ibm.ws.runtime.jar:?] 	at com.ibm.io.async.AbstractAsyncFuture.invokeCallback(AbstractAsyncFuture.java:217) [com.ibm.ws.runtime.jar:?] 	at com.ibm.io.async.AsyncChannelFuture.fireCompletionActions(AsyncChannelFuture.java:161) [com.ibm.ws.runtime.jar:?] 	at com.ibm.io.async.AsyncFuture.completed(AsyncFuture.java:138) [com.ibm.ws.runtime.jar:?] 	at com.ibm.io.async.ResultHandler.complete(ResultHandler.java:204) [com.ibm.ws.runtime.jar:?] 	at com.ibm.io.async.ResultHandler.runEventProcessingLoop(ResultHandler.java:775) [com.ibm.ws.runtime.jar:?] 	at com.ibm.io.async.ResultHandler$2.run(ResultHandler.java:905) [com.ibm.ws.runtime.jar:?] 	at com.ibm.ws.util.ThreadPool$Worker.run(ThreadPool.java:1892) [com.ibm.ws.runtime.jar:?] Caused by: java.sql.SQLException: ORA-06550: line 1, column 7: PLS-00306: wrong number or types of arguments in call to 'P_UPDATE_PWD' ORA-06550: line 1, column 7: PL/SQL: Statement ignored	at oracle.jdbc.driver.SQLStateMapping.newSQLException(SQLStateMapping.java:70) ~[ojdbc6-11.2.0.3.jar:Oracle JDBC Driver version - ""11.1.0.7.0-Production""] 	at oracle.jdbc.driver.DatabaseError.newSQLException(DatabaseError.java:133) ~[ojdbc6-11.2.0.3.jar:Oracle JDBC Driver version - ""11.1.0.7.0-Production""] 	at oracle.jdbc.driver.DatabaseError.throwSqlException(DatabaseError.java:206) ~[ojdbc6-11.2.0.3.jar:Oracle JDBC Driver version - ""11.1.0.7.0-Production""] 	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:455) ~[ojdbc6-11.2.0.3.jar:Oracle JDBC Driver version - ""11.1.0.7.0-Production""] 	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:413) ~[ojdbc6-11.2.0.3.jar:Oracle JDBC Driver version - ""11.1.0.7.0-Production""] 	at oracle.jdbc.driver.T4C8Oall.receive(T4C8Oall.java:1034) ~[ojdbc6-11.2.0.3.jar:Oracle JDBC Driver version - ""11.1.0.7.0-Production""] 	at oracle.jdbc.driver.T4CCallableStatement.doOall8(T4CCallableStatement.java:191) ~[ojdbc6-11.2.0.3.jar:Oracle JDBC Driver version - ""11.1.0.7.0-Production""] 	at oracle.jdbc.driver.T4CCallableStatement.executeForRows(T4CCallableStatement.java:950) ~[ojdbc6-11.2.0.3.jar:Oracle JDBC Driver version - ""11.1.0.7.0-Production""] 	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1222) ~[ojdbc6-11.2.0.3.jar:Oracle JDBC Driver version - ""11.1.0.7.0-Production""] 	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3387) ~[ojdbc6-11.2.0.3.jar:Oracle JDBC Driver version - ""11.1.0.7.0-Production""] 	at oracle.jdbc.driver.OraclePreparedStatement.execute(OraclePreparedStatement.java:3488) ~[ojdbc6-11.2.0.3.jar:Oracle JDBC Driver version - ""11.1.0.7.0-Production""] 	at oracle.jdbc.driver.OracleCallableStatement.execute(OracleCallableStatement.java:3857) ~[ojdbc6-11.2.0.3.jar:Oracle JDBC Driver version - ""11.1.0.7.0-Production""] 	at oracle.jdbc.driver.OraclePreparedStatementWrapper.execute(OraclePreparedStatementWrapper.java:1374) ~[ojdbc6-11.2.0.3.jar:Oracle JDBC Driver version - ""11.1.0.7.0-Production""] 	at com.ibm.ws.rsadapter.jdbc.WSJdbcPreparedStatement.pmiExecute(WSJdbcPreparedStatement.java:1032) ~[com.ibm.ws.runtime.jar:?] 	at com.ibm.ws.rsadapter.jdbc.WSJdbcPreparedStatement.execute(WSJdbcPreparedStatement.java:629) ~[com.ibm.ws.runtime.jar:?] 	at org.springframework.jdbc.core.JdbcTemplate$6.doInCallableStatement(JdbcTemplate.java:1138) ~[spring-jdbc-4.3.9.RELEASE.jar:4.3.9.RELEASE] 	at org.springframework.jdbc.core.JdbcTemplate$6.doInCallableStatement(JdbcTemplate.java:1135) ~[spring-jdbc-4.3.9.RELEASE.jar:4.3.9.RELEASE] 	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:1083) ~[spring-jdbc-4.3.9.RELEASE.jar:4.3.9.RELEASE] 	... 97 more ```     ---  **Affects:** 4.3.22","closed","in: data,","spring-projects-issues","2019-01-05T05:52:50Z","2019-01-25T10:57:15Z"
"","22166","transaction is not rollback in case of QueryTimeoutException for oracle stored procedure call [SPR-17636]","**[Vishal Suryakant Deshmukh](https://jira.spring.io/secure/ViewProfile.jspa?name=vishal.deshmukh)** opened **[SPR-17636](https://jira.spring.io/browse/SPR-17636?redirect=false)** and commented  We are using SimpleJdbcCall to call oracle stored procedure from IBM WebSphere Application Server (WAS). The transaction management is maintained in stored procedure (at database level). We have given QueryTimeout to procedure call. Consider below scenario. 1. Request 1    1. Invoked stored procedure ABC.    2. QueryTimeoutException occured.    3. Connection is returned to WAS Connection Pool. 2. Request 2    1. Invoked stored procedure ABC for next request    2. Now received exception **ORA-02067: transaction or savepoint rollback required** as earlier Transaction is not committed or rolled back due to **QueryTimeoutException**. Please find attached exception log.    ---  **Affects:** 4.3.22  **Attachments:** - [errortrace.log](https://jira.spring.io/secure/attachment/26166/errortrace.log) (_16.90 kB_)","open","in: data,","spring-projects-issues","2019-01-04T06:40:24Z","2019-01-11T12:23:17Z"
"","21960","Provide additional debug information for memory leaks via ByteBuf.touch [SPR-17427]","**[Violeta Georgieva](https://jira.spring.io/secure/ViewProfile.jspa?name=violetagg)** opened **[SPR-17427](https://jira.spring.io/browse/SPR-17427?redirect=false)** and commented  Hi,  Netty provides the following API  ```java io.netty.buffer.ByteBuf.touch()       /**      * Records the current access location of this object for debugging purposes.      * If this object is determined to be leaked, the information recorded by this operation will be provided to you      * via {@link ResourceLeakDetector}.  This method is a shortcut to {@link #touch(Object) touch(null)}.      */     ReferenceCounted touch(); ```  When the implementation does additional transformations of the content or buffers this object, please use this **touch()** functionality. If there is a memory leak, when Netty dumps the stack traces of the components that accessed this object, it will be easier to find where the buffer was leaked.  Thanks, Violeta      ---  **Affects:** 5.1.1","closed","type: enhancement,","spring-projects-issues","2018-10-24T16:15:54Z","2019-03-29T19:57:24Z"
"","22008","NamedParameterJdbcTemplate batchUpdate returns an array of size 1 when the batchArgs passed is an empty array [SPR-17476]","**[Vinay Shankar](https://jira.spring.io/secure/ViewProfile.jspa?name=vinayshankar)** opened **[SPR-17476](https://jira.spring.io/browse/SPR-17476?redirect=false)** and commented  The batchUpdate method of NamedParameterJdbcTemplate returns an array of size 1 when the batchArgs passed is an empty array.  ```java int[] batchUpdate(String sql, SqlParameterSource[] batchArgs); ```  The batchUpdate method of the JdbcTemplate returns an empty array when the batchArgs passed is an empty array.  ```java public int[] batchUpdate(String sql, List batchArgs) throws DataAccessException; ```  I am using spring-jdbc 4.2.9  ---  **Issue Links:** - #21935 Support list in IN clause in NamedParameterJdbcTemplate.batchUpdate  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/4f5ae22a52b1d8abbd11c05eac50876eb8264026, https://github.com/spring-projects/spring-framework/commit/362c59c3102acb68145cf1689b6391cb1fb94486, https://github.com/spring-projects/spring-framework/commit/0167b79d7b7fcf77ec7a42d57d67d7ebdf411573  **Backported to:** [5.0.11](https://github.com/spring-projects/spring-framework/milestone/192?closed=1), [4.3.21](https://github.com/spring-projects/spring-framework/milestone/170?closed=1)","closed","type: bug,","spring-projects-issues","2018-11-07T20:24:46Z","2019-01-11T13:13:59Z"
"","21928","WebFlux.fn puts wrong type of HandlerMapping.BEST_MATCHING_PATTERN_ATTRIBUTE [SPR-17395]","**[Toshiaki Maki](https://jira.spring.io/secure/ViewProfile.jspa?name=making)** opened **[SPR-17395](https://jira.spring.io/browse/SPR-17395?redirect=false)** and commented  #21635 introduced `RouterFunctions.MATCHING_PATTERN_ATTRIBUTE` to WebFlux.fn, and set that mapping information as a  `String`. #21900 duplicated that same information in `HandlerMapping.BEST_MATCHING_PATTERN_ATTRIBUTE` with the same type, whereas it is expected to be of type `PathPattern`, https://github.com/spring-projects/spring-framework/blob/8de5c05af0015dca8aad94e474a33814c13539ad/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/support/RouterFunctionMapping.java#L160-L165  As a result, `ClassCastException` occurs after updating to Spring Boot 2.1.0.RC1 as Boot expects it as `PathPattern`  https://github.com/spring-projects/spring-boot/blob/v2.1.0.RC1/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/reactive/server/WebFluxTags.java#L97-L98  ---  **Affects:** 5.1.1  **Issue Links:** - #21635 Provide matched pattern information in WebFlux fn - #21900 Set BEST_MATCHING_HANDLER_ATTRIBUTE in WebFlux.fn","closed","type: bug,","spring-projects-issues","2018-10-17T16:33:00Z","2019-01-11T13:11:33Z"
"","21914","CglibAopProxy fails to handle JDK-proxied bean with SimpleBeanTargetSource [SPR-17381]","**[Toparvion](https://jira.spring.io/secure/ViewProfile.jspa?name=toparvion)** opened **[SPR-17381](https://jira.spring.io/browse/SPR-17381?redirect=false)** and commented  I have a Spring Boot application where certain beans get wrapped into 2 proxies: 1. The inner one is CGLIB proxy and is created by Spring Cloud Config by means of [ScopedProxyFactoryBean](https://github.com/spring-projects/spring-framework/blob/c037e75f26ac5ef69e4d5fc3045e101ca674dcaf/spring-aop/src/main/java/org/springframework/aop/scope/ScopedProxyFactoryBean.java) 2. The outer one is JDK proxy and is created by [DefaultAdvisorAutoProxyCreator ](https://github.com/spring-projects/spring-framework/blob/c037e75f26ac5ef69e4d5fc3045e101ca674dcaf/spring-aop/src/main/java/org/springframework/aop/framework/autoproxy/DefaultAdvisorAutoProxyCreator.java)provided by JavaMelody monitoring tool (in my case).  This particular proxy combination concerns `dataSource` bean which is of type `com.zaxxer.hikari.HikariDataSource` by default (for Spring Boot 2).  **The problem** arises when Spring Boot calls `dataSource.unwrap()` on the bean during startup:  ``` 15:19:01.203 ERROR o.s.boot.SpringApplication               : Application run failed  org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari': Invocation of init method failed; nested exception is java.lang.ClassCastException: com.sun.proxy.$Proxy76 cannot be cast to com.zaxxer.hikari.HikariDataSource 	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:139) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE] 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:416) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE] 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1691) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE] 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE] 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE] 	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE] 	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE] 	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE] 	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE] 	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE] 	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE] 	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE] 	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140) ~[spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE] 	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762) [spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE] 	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:398) [spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE] 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:330) [spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE] 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1258) [spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE] 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1246) [spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE] 	at tech.toparvion.sample.joker18.schedule.HikariJavamelodyDemoApplication.main(HikariJavamelodyDemoApplication.java:10) [classes/:na] Caused by: java.lang.ClassCastException: com.sun.proxy.$Proxy76 cannot be cast to com.zaxxer.hikari.HikariDataSource 	at com.zaxxer.hikari.HikariDataSource$$FastClassBySpringCGLIB$$eeb1ae86.invoke() ~[HikariCP-2.7.9.jar:na] 	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204) ~[spring-core-5.0.8.RELEASE.jar:5.0.8.RELEASE] 	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE] 	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE] 	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:136) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE] 	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:124) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE] 	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE] 	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE] 	at com.zaxxer.hikari.HikariDataSource$$EnhancerBySpringCGLIB$$21cdbad2.unwrap() ~[HikariCP-2.7.9.jar:na] 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_92] 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_92] 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_92] 	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_92] 	at net.bull.javamelody.JdbcWrapper$3.invoke(JdbcWrapper.java:781) ~[javamelody-core-1.72.0.jar:1.72.0] 	at net.bull.javamelody.JdbcWrapper$DelegatingInvocationHandler.invoke(JdbcWrapper.java:294) ~[javamelody-core-1.72.0.jar:1.72.0] 	at com.sun.proxy.$Proxy75.unwrap(Unknown Source) ~[na:na] 	at org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari.unwrapHikariDataSource(DataSourceJmxConfiguration.java:74) ~[spring-boot-autoconfigure-2.0.4.RELEASE.jar:2.0.4.RELEASE] 	at org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari.validateMBeans(DataSourceJmxConfiguration.java:65) ~[spring-boot-autoconfigure-2.0.4.RELEASE.jar:2.0.4.RELEASE] 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_92] 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_92] 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_92] 	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_92] 	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE] 	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:309) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE] 	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:136) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE] 	... 18 common frames omitted ```  The debugging and the stacktrace above both show that outer proxy (JDK) correctly passes the call through. But when the inner proxy (CGLIB) gets applied it performs the following (probably incorrect) steps: 1. `CglibAopProxy` class [gets](https://github.com/spring-projects/spring-framework/blob/c037e75f26ac5ef69e4d5fc3045e101ca674dcaf/spring-aop/src/main/java/org/springframework/aop/framework/CglibAopProxy.java#L672) the target object from the `targetSource` 2. `SimpleBeanTargetSource`'s `getTarget()` method is invoked which [fetches](https://github.com/spring-projects/spring-framework/blob/c037e75f26ac5ef69e4d5fc3045e101ca674dcaf/spring-aop/src/main/java/org/springframework/aop/target/SimpleBeanTargetSource.java#L35) the target object from the Spring context **once again**. 3. It receives the original bean (which is wrapped into JDK proxy on the outmost layer) and then `CglibAopProxy` [tries to proceed](https://github.com/spring-projects/spring-framework/blob/c037e75f26ac5ef69e4d5fc3045e101ca674dcaf/spring-aop/src/main/java/org/springframework/aop/framework/CglibAopProxy.java#L688) with the invocation by means of `CglibMethodInvocation`. 4. The last one fails a few steps later due to `ClassCastException` because CGLIB API is being applied to JDK proxied object.  It seems that the behavior of `SimpleBeanTargetSource`'s is incorrect in this particular case because it re-fetches the target object thus spoiling the context from which it was called.  A sample project to reproduce the issue can be found here: https://github.com/Toparvion/javamelody-issue-472 (it was initially addressed to JavaMelody authors mistakenly).  Additional details can be provided if needed.   ---  **Affects:** 5.0.5  **Reference URL:** https://github.com/Toparvion/javamelody-issue-472  1 votes, 3 watchers","open","in: core,","spring-projects-issues","2018-10-15T09:52:16Z","2019-01-11T13:11:53Z"
"","22135","Error on thymeleaf th:field in TemplateEngine process [SPR-17603]","**[Tom](https://jira.spring.io/secure/ViewProfile.jspa?name=bombadil)** opened **[SPR-17603](https://jira.spring.io/browse/SPR-17603?redirect=false)** and commented  There was little response in StackOverflow but the nature of this problem leads me to believe that it is a bug and so i'm posting this here. I have looked up and down on the web without finding anything related specifically to this.     I am also setting the priority to Major as it is putting some major problems into our development.     I am currently porting an older web application to spring, The older web application had ajax requests where it would return some html code along with some status messages in json format.     Trying to reimplement this functionality leads to error messages in spring.   Error occurs when processing thymeleaf template containing th:field using TermplateEngine process method.     Thymeleaf template  \     \Name\   \ \      Controller // — Class member — `@Autowired` private TemplateEngine templateEngine; // ----------  `@ResponseBody` `@GetMapping`(value=""/form1"") public String form1() throws JsonProcessingException  {     Customer customer = new Customer(""Burger King"");     Context templateContext = new Context(); templateContext.setVariable(""customer"", customer);     AjaxResponse response = new AjaxResponse(); response.html = templateEngine.process(""form"", templateContext); // <-- ERROR         response.additionalData = ""ab123""; return objectMapper.writeValueAsString(response); }     Error output  org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: ""class path resource [templates/form.html]"")  Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Cannot process attribute '{th:field,data-th-field}': no associated BindStatus could be found for the intended form binding operations. This can be due to the lack of a proper management of the Spring RequestContext, which is usually done through the ThymeleafView or ThymeleafReactiveView (template: ""form"" - line 3, col 21)    This error occurs only when using process method and will work as expected when returning ""form"" without `@ResponseBody`     It also works when using th:value instead of th:field.     And so to summarize this bug is causing errors when processing a thymeleaf template containing th:field using TemplateEngine .process method.  ---  **Reference URL:** https://stackoverflow.com/questions/53761744/spring-templateengine-process-error-on-thfield","closed","status: invalid,","spring-projects-issues","2018-12-17T07:19:08Z","2019-01-13T19:48:11Z"
"","22136","LocaleContextHolder should have a strategy similar to SecurityContextHolder for child Thread [SPR-17604]","**[Timothy Freyne](https://jira.spring.io/secure/ViewProfile.jspa?name=tfreyne)** opened **[SPR-17604](https://jira.spring.io/browse/SPR-17604?redirect=false)** and commented  The current LocaleContextHolder uses ThreadLocal to store the locale which works fine if you keep your execution to that thread. However in a multithreaded environment, the ThreadLocal value is not available when a new thread is started from that original thread.  Consider the following flow: 1. in Spring MVC a GET request is being processed with 'Accept-Language' = 'nl' 2. Controller that handles the GET request can read the value using LocaleContextHolder.getLocale().getLanguage() 3. Controller processes some actions in parallel using multiple threads Thread A, Thread B 4. When calling LocaleContextHolder.getLocale().getLanguage() from Thread A and B, the value 'nl' is not available.  In Spring Security this is already taken care of using org.springframework.security.core.context.InheritableThreadLocalSecurityContextHolderStrategy. The LocaleContextHolder should be coded in a similar way in order to switch threads and have the original value in the child thread.   ---  **Affects:** 5.1.3","closed","type: enhancement,","spring-projects-issues","2018-12-17T11:06:57Z","2018-12-17T14:50:38Z"
"","22100","StringHttpMessageConverter should assume charset UTF-8 for application/json [SPR-17568]","**[Thomas Meyer](https://jira.spring.io/secure/ViewProfile.jspa?name=thomasmey)** opened **[SPR-17568](https://jira.spring.io/browse/SPR-17568?redirect=false)** and commented  When using ""`@RequestBody` String jsonString"" for an `@Controller`'s `@RequestMapping` and the body is send as application/json with UTF-8 encoding, Spring uses StringHttpMessageConverter to convert the message, as the content-type will be application/json without any explicit encoding, so the StringHttpMessageConverter will fall back to the default encoding ISO-8859-1 which may is in accordance with the HTTP spec but not with RFC7159, which says: ""The default encoding is UTF-8"" (chapter 8.1)     So the suggestion would be to add an exception in the StringHttpMessageConverter to use UTF-8 charset for application/json.         ---  **Affects:** 5.1.3  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/05d616240ad08f69926368f5549b6472c27a0d5c","closed","type: enhancement,","spring-projects-issues","2018-12-05T13:51:03Z","2019-01-09T13:06:53Z"
"","22131","Error running the application as WAR in tomcat 9 [SPR-17599]","**[Teh Kok How](https://jira.spring.io/secure/ViewProfile.jspa?name=khteh)** opened **[SPR-17599](https://jira.spring.io/browse/SPR-17599?redirect=false)** and commented  #16725 is closed but it happens on Tomcat 9. The suggested code snippet does not work as it gives similar exception:  | `org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'endpointExporterInitializer' defined in class path resource [com/graphql/book/AppConfig.class]: Initialization of bean failed; nested exception is java.lang.RuntimeException: java.lang.IllegalStateException: javax.websocket.server.ServerContainer not available`|   https://github.com/eh3rrera/graphql-java-spring-boot-example/issues/10 https://github.com/graphql-java-kickstart/graphql-spring-boot/issues/165   Response I get from users@tomcat.apache.org:   ""Spring is throwing the exception. Tomcat ships with the javax.websocket.server.ServerContainer class.  I don't believe there are any differences between Tomcat 8.5.x and 9.0.x when it comes to ClassLoader layout and class visibility.  I'd ask Spring how they are performing that sanity check to see why they are throwing that exception.""  ---  **Affects:** 5.1.3  **Issue Links:** - #16725 ServerEndpointExporter causes application context refresh to fail with an NPE when used in a Spring Boot app","closed","for: external-project,","spring-projects-issues","2018-12-13T13:06:50Z","2020-01-20T10:33:36Z"
"","22070","application.yml not picked up by Tomcat 9 [SPR-17538]","**[Teh Kok How](https://jira.spring.io/secure/ViewProfile.jspa?name=khteh)** opened **[SPR-17538](https://jira.spring.io/browse/SPR-17538?redirect=false)** and commented  Hi, I am using Tomcat 9. I put application.yml into tomcat root folder but it is not picked up. W.r.t https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#boot-features-external-config, where is the right location to put application.yml? Thanks.   ---  **Affects:** 5.1.2","closed","status: invalid,","spring-projects-issues","2018-11-27T02:58:12Z","2019-01-12T05:17:38Z"
"","22089","HibernateTransactionManager (unintentionally) bound to Hibernate 5.2 SharedSessionContractImplementor [SPR-17557]","**[Taras Tielkes](https://jira.spring.io/secure/ViewProfile.jspa?name=plethora)** opened **[SPR-17557](https://jira.spring.io/browse/SPR-17557?redirect=false)** and commented  The compiled version of `HibernateTransactionManager` seems to contain a reference to `SharedSessionContractImplementor` (perhaps from the lambda call?).  When running with Hibernate 5.1.x in the classpath, resolution of `SharedSessionContractImplementor` will fail, triggering a `NoClassDefFoundError`.  Please take a look at the output of ""`javap -v`"" for the compiled version of `HibernateTransactionManager` in the latest release jar.  ---  **Affects:** 5.1.3  **Issue Links:** - #21494 Propagate read-only status to Hibernate Session through setDefaultReadOnly - #21749 HibernateTransactionManager should lazily acquire JDBC Connection (like HibernateJpaDialect)  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/0841dc5f99e004554c66dcb36981bf63e82ddd95","closed","type: regression,","spring-projects-issues","2018-12-02T14:20:45Z","2019-01-11T13:30:34Z"
"","22023","Single TransactionTemplate to perform variations of transaction configurations [SPR-17491]","**[Tadaya Tsuyukubo](https://jira.spring.io/secure/ViewProfile.jspa?name=tadaya)** opened **[SPR-17491](https://jira.spring.io/browse/SPR-17491?redirect=false)** and commented  With TransactionTemplate, for example, setReadOnly(true) is called, all executions with this template becomes readOnly transactions. If I want to perform another transaction with non-readonly, I need to create another template and so for all variation of transactions.  Instead, It would be nice to perform various transaction configurations with single TransactionTemplate.     For example:     ```java public  T execute(Consumer txConfig, TransactionCallback action) throws TransactionException  ```        ```java template.execute( txConfig -> {    txConfig.setReadOnly(true);    txConfig.setIsolationLevel(...);    ...  }, status -> {    // action to perform in transaction }); ```        --- No further details from [SPR-17491](https://jira.spring.io/browse/SPR-17491?redirect=false)","open","in: data,","spring-projects-issues","2018-11-13T19:33:07Z","2019-01-12T22:01:23Z"
"","22181","Deprecate PropertyPlaceholderConfigurer [SPR-17652]","**[Sébastien Deleuze](https://jira.spring.io/secure/ViewProfile.jspa?name=sdeleuze)** opened **[SPR-17652](https://jira.spring.io/browse/SPR-17652?redirect=false)** and commented  We should deprecate `PropertyPlaceholderConfigurer` in favor of `PropertySourcesPlaceholderConfigurer`.   --- No further details from [SPR-17652](https://jira.spring.io/browse/SPR-17652?redirect=false)","closed","in: core,","spring-projects-issues","2019-01-09T09:59:52Z","2019-02-06T15:23:48Z"
"","22177","Limit ref() and provider() visibility in Kotlin DSL [SPR-17648]","**[Sébastien Deleuze](https://jira.spring.io/secure/ViewProfile.jspa?name=sdeleuze)** opened **[SPR-17648](https://jira.spring.io/browse/SPR-17648?redirect=false)** and commented  Current Kotlin bean DSL makes it possible to shoot yourself in the foot easily by allowing to write:  ```java beans { 	val bar = ref() 	bean { Foo(bar)} } ```  Which will trigger `java.lang.IllegalStateException: org.springframework.context.support.GenericApplicationContext@2c532cd8 has not been refreshed yet`.  We should only expose `ref()` and `provider()` in the supplier responsible for providing the bean, since it will be call at the right time of the lifecycle.  We could maybe introduce some kind of `BeanDefinitionContext`:  ```java open class BeanDefinitionContext(@PublishedApi internal val context: GenericApplicationContext) {      inline fun  ref(name: String? = null): T = when (name) {         null -> context.getBean(T::class.java)         else -> context.getBean(name, T::class.java)     }      inline fun  provider() : ObjectProvider = context.getBeanProvider() } ```  And change `crossinline function: () -> T` to `crossinline function: BeanDefinitionContext.() -> T` in the bean supplier variant.  Additional notes: - We should maybe use this opportunity to provide direct access to `ObjectProvider` methods, expose `Sequence` instead of `Stream`, etc. - We should maybe think about providing a `router()` variant that leverages this `BeanDefinitionContext` since this is a common use case.  ---  No further details from [SPR-17648](https://jira.spring.io/browse/SPR-17648?redirect=false)","closed","type: enhancement,","spring-projects-issues","2019-01-08T16:22:19Z","2019-02-05T16:02:58Z"
"","22171","Refactor core documentation to make it relevant for modern Spring applications [SPR-17642]","**[Sébastien Deleuze](https://jira.spring.io/secure/ViewProfile.jspa?name=sdeleuze)** opened **[SPR-17642](https://jira.spring.io/browse/SPR-17642?redirect=false)** and commented  [Current Spring Framework core documentation](https://docs.spring.io/spring/docs/5.1.x/spring-framework-reference/core.html) is very hard to use for people developing modern Spring Boot applications. To make it easier I think we should organize it with distinct sections: * Section about what is common to XML, JavaConfig and functional beans * Section specific to XML * Section specific to JavaConfig * Section specific to functional beans (#19615)  The JavaConfig section should also be reworked to make it mostly relevant for Spring Boot application and isolate documentation not relevant for Spring Boot to make it less confusing.  ---  **Issue Links:** - #19615 Document functional configuration style - #12255 Provide proper `@Value` documentation in the reference documentation","open","in: core,","spring-projects-issues","2019-01-07T10:33:03Z","2021-11-24T20:07:19Z"
"","22158","Add logging reference documentation [SPR-17626]","**[Sébastien Deleuze](https://jira.spring.io/secure/ViewProfile.jspa?name=sdeleuze)** opened **[SPR-17626](https://jira.spring.io/browse/SPR-17626?redirect=false)** and commented  Unless I missed something, I think we have no reference documentation for the logging infrastructure we provide in `spring-jcl`, only a mention in https://github.com/spring-projects/spring-framework/wiki/What%27s-New-in-Spring-Framework-5.x which says:  Spring Framework 5.0 comes with its own Commons Logging bridge out of the box: * `spring-jcl` instead of standard Commons Logging; still excludable/overridable. * Autodetecting Log4j 2.x, SLF4J, JUL (java.util.logging) without any extra bridges.  I think it would deserve a short paragraph in our reference documentation + a link to https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#boot-features-logging for concrete implementation and configuration.  ---  **Issue Links:** - #8611 Logback support","closed","type: documentation,","spring-projects-issues","2018-12-26T08:18:43Z","2020-08-10T15:01:10Z"
"","21968","Memory Leak in class AbstractClassGenerator.ClassLoaderData [SPR-17435]","**[Sylvère Richard](https://jira.spring.io/secure/ViewProfile.jspa?name=sylvere)** opened **[SPR-17435](https://jira.spring.io/browse/SPR-17435?redirect=false)** and commented  +How to reproduce:+  create several unit tests such as this one:     ```java @RunWith(SpringRunner.class) @DirtiesContext(classMode = DirtiesContext.ClassMode.AFTER_EACH_TEST_METHOD) public class MyTest {   @Autowired   MyCGLibProxiedService myService;    @Test   public void test1() {     // test some stuff   }   @Test   public void test2() {      // test some stuff   } } ```     Because of the DirtiesContext, the application context test is closed and recreated after each test.  +Expected Behaviour:+  When running several unit tests such as the one above, the total memory needed to run the test suite should not increase as we add more tests.  In particular, when an application context is closed, the field generatedClasses (LoadingCache) of the class AbstractClassGenerator.ClassLoaderData should be cleared for that application context.  +Current Behaviour:+  The more unit tests we have, the more memory is required to run the test suite.  Indeed, the field generatedClasses caches instances of CglibAopProxy.ProxyCallbackFilter.  CglibAopProxy.ProxyCallbackFilter instance contains a reference to AdvisedSupport instance.  AdvisedSupport instance contains a reference to a closed AnnotationConfigApplicationContext.  Since all these references are strong one, it means that all closed instances of AnnotationConfigApplicationContext are _never_ collected by the GC.  !image-2018-10-25-23-24-44-279.png!  +Possible Solutions:+ * we could add a way to disable this cache when running unit tests. * we could listen to ContextClosedEvent and clear entries in the cache that reference a closed application context. * ...            ---  **Affects:** 5.0.10  **Attachments:** - [image-2018-10-25-23-24-44-279.png](https://jira.spring.io/secure/attachment/26075/image-2018-10-25-23-24-44-279.png) (_101.34 kB_)","open","in: core,","spring-projects-issues","2018-10-25T21:29:31Z","2019-01-11T13:16:40Z"
"","22133","Incorrect snippet of code in documentation [SPR-17601]","**[Sviatoslav Hryb](https://jira.spring.io/secure/ViewProfile.jspa?name=shryb)** opened **[SPR-17601](https://jira.spring.io/browse/SPR-17601?redirect=false)** and commented  Section `""1.4.2 Dependencies and Configuration in Detail""` subsection `""XML Shortcut with the c-namespace""` contains incorrect snippet of code. The names of two beans should be `""thingTwo""` and `""thingThree""`. The more detailed explanation can be seen on the screenshot that is attached.   ---  **Affects:** 5.1.3  **Reference URL:** https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/core.html#beans-factory-dependson  **Attachments:** - [Spring_Documentation_Bug.png](https://jira.spring.io/secure/attachment/26157/Spring_Documentation_Bug.png) (_47.30 kB_)  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/fc9d1760befd30570f57b8cc63b5be5d84fb482a","closed","type: documentation,","spring-projects-issues","2018-12-14T10:08:24Z","2019-01-09T13:06:52Z"
"","22153","HierarchicalUriComponents.encodeUriComponent() method can not encode Pchar [SPR-17621]","**[sunbufu](https://jira.spring.io/secure/ViewProfile.jspa?name=sunbufu)** opened **[SPR-17621](https://jira.spring.io/browse/SPR-17621?redirect=false)** and commented  Hi guy,  I have a question about HierarchicalUriComponents.encodeUriComponent() method. I think it should encode all special char in url query param, Actually, It can not encode many special char. For example + - ! $ ... in url query param. and my email is [sunyoubufu@qq.com|mailto:sunyoubufu@qq.com] .    ---  **Affects:** 5.0.6  **Reference URL:** https://github.com/spring-projects/spring-framework/blob/5.0.x/spring-web/src/main/java/org/springframework/web/util/HierarchicalUriComponents.java  **Attachments:** - [1.jpg](https://jira.spring.io/secure/attachment/26164/1.jpg) (_141.61 kB_) - [2.jpg](https://jira.spring.io/secure/attachment/26163/2.jpg) (_34.55 kB_) - [3.jpg](https://jira.spring.io/secure/attachment/26162/3.jpg) (_156.38 kB_)","closed","status: declined,","spring-projects-issues","2018-12-22T07:05:55Z","2019-01-12T16:11:23Z"
"","21947","Spring MVC DispatcherServlet initialization parameter contextClass in documentation should implement ConfigurableWebApplicationContext not WebApplicationContext [SPR-17414]","**[Sun Tao](https://jira.spring.io/secure/ViewProfile.jspa?name=buzzerrookie)** opened **[SPR-17414](https://jira.spring.io/browse/SPR-17414?redirect=false)** and commented  In section 22.2.3 table 22.2, the explanation for contextClass Paramter is ""Class that implements WebApplicationContext ...""  [Web MVC framework](https://docs.spring.io/spring/docs/4.3.18.RELEASE/spring-framework-reference/html/mvc.html#mvc-servlet-sequence)  But when I see the source code of FrameworkServlet, the method createWebApplicationContext will throw exception if  ConfigurableWebApplicationContext is not a super class of contextClass. So is it better to say contextClass should implement ConfigurableWebApplicationContext?  Thank you.   ---  **Affects:** 4.3.18  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/448182fa5c60be70e1a7a096758a431b2bf1cc37, https://github.com/spring-projects/spring-framework/commit/1c67ef4bed5e067ae1427683d917aab2750b4418, https://github.com/spring-projects/spring-framework/commit/c9f101658189a3aab0849e3e770bdea183508860  **Backported to:** [5.0.11](https://github.com/spring-projects/spring-framework/milestone/192?closed=1), [4.3.21](https://github.com/spring-projects/spring-framework/milestone/170?closed=1)","closed","type: task,","spring-projects-issues","2018-10-19T14:59:14Z","2018-10-29T11:07:58Z"
"","22178","When bean overriding is on, the same bean appearing twice in an XML stream causes an error [SPR-17649]","**[Steve Johnson](https://jira.spring.io/secure/ViewProfile.jspa?name=blatwurst)** opened **[SPR-17649](https://jira.spring.io/browse/SPR-17649?redirect=false)** and commented  I'm filing this report as suggested by snicoll, who says this may be a bug.  I started a discussion because closed issue [#13609](https://github.com/spring-projects/spring-boot/issues/13609) caused me a problem that I hadn't seen yet discussed in the context of the issue, or elsewhere.  Here is my original comment:    > [Context of discussion was change in behavior between Spring Boot 2.0 and Spring 2.1 where now overriding one bean def with another throws an exception, and the old behavior can be had with the property ""spring.main.allow-bean-definition-overriding=true""] >  > This issue is causing a problem for me because I broke my single bean definition XML file into multiple files many months ago. I'm getting the error because I'm redefining THE SAME BEAN multiple times. This happens because of multiple XML files including the same other XML file to get the definitions of the beans it references from the other file. I do this so that can use different mixes of my bean definition files and be sure that the dependent bean definitions are always available for reference. It also helps in my IDE, where it doesn't have the context of one XML file being included after another, and so it thinks the latter file is missing definitions for referenced beans. What I am doing worked fine until 2.1. >  > My work-around is to set spring.main.allow-bean-definition-overriding=true. This fixes the problem. But I'd love to have the benefit of being warned if I'm truly overriding one bean with a DIFFERENT bean. I am going to look to see if I can reorganize my bean files to avoid the need to disable the check and still get the functionality I want, but it's a pain. I just wanted to put this particular problem on record. I'm not saying what I'm doing is a proper practice. >   > If your bean definition has an `id` the framework should not redefine the same bean definition multiple times, which should automatically fix your problem. If that does not fix it, please consider creating a Spring Framework issue with a small sample that reproduces the behavior you've described. >  > [@inletfetch](https://github.com/inletfetch) thanks for the feedback. It looks odd to me that the core container throws a `BeanDefinitionOverrideException` in such a case. Could you please create a [Spring Framework issue](https://jira.spring.io/projects/SPR)?   Per his request, I have put together an example.  It's the simplest case possible.  An XML file includes two XML files that each define a bean.  Those beans both depend on a common additional bean, so each of those files includes the same additional XML file, thus causing that XML file to be parsed twice.  Here are those files:  ```java applicationContext.xml          bean1a.xml                       bean1b.xml                        bean1.xml              ```   And here's the error stream I get when I run my app:  ``` 2019-01-08 17:20:39.870 INFO 512 — [ main] hello.Application : Starting Application on US-ST032JO-MLT with PID 512 (/Users/steve/Development/inlet/inletfetch_if2/lab/gs-spring-boot/complete/target/classes started by steve in /Users/steve/Development/inlet/inletfetch_if2/lab/gs-spring-boot/complete)  2019-01-08 17:20:39.872 INFO 512 — [ main] hello.Application : No active profile set, falling back to default profiles: default  2019-01-08 17:20:40.222 WARN 512 — [ main] s.c.a.AnnotationConfigApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.parsing.BeanDefinitionParsingException: Configuration problem: Failed to import bean definitions from URL location [classpath:bean1b.xml]  Offending resource: URL [file:/Users/steve/Development/inlet/inletfetch_if2/lab/gs-spring-boot/complete/target/classes/applicationContext.xml|file:///Users/steve/Development/inlet/inletfetch_if2/lab/gs-spring-boot/complete/target/classes/applicationContext.xml]; nested exception is org.springframework.beans.factory.parsing.BeanDefinitionParsingException: Configuration problem: Failed to import bean definitions from relative location [bean1.xml]  Offending resource: class path resource [bean1b.xml]; nested exception is org.springframework.beans.factory.parsing.BeanDefinitionParsingException: Configuration problem: Failed to register bean definition with name 'testBean1'  Offending resource: class path resource [bean1.xml]; nested exception is org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'testBean1' defined in class path resource [bean1.xml]: Cannot register bean definition [Generic bean: class [not.below.app.TestBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [bean1.xml]] for bean 'testBean1': There is already [Generic bean: class [not.below.app.TestBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [bean1.xml]] bound.  2019-01-08 17:20:40.232 INFO 512 — [ main] ConditionEvaluationReportLoggingListener :  Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.  2019-01-08 17:20:40.234 ERROR 512 — [ main] o.s.b.d.LoggingFailureAnalysisReporter :  ***************************  APPLICATION FAILED TO START  ***************************  Description:  The bean 'testBean1', defined in class path resource [bean1.xml], could not be registered. A bean with that name has already been defined in class path resource [bean1.xml] and overriding is disabled.  Action:  Consider renaming one of the beans or enabling overriding by setting spring.main.allow-bean-definition-overriding=true ```  Now, I didn't get the ""APPLICATION FAILED TO START"" text before putting together my sample (don't know why...having a spring-boot-web in the mix maybe).  This text suggests that I should not expect to get away with defining a bean twice with the same name, even if it's the exact same bean.  If that's the case, in contrast to what snicholl said, then maybe I've wasted my time (and that of others) in getting to this point. But...  I'd still like to suggest that if the SAME bean is being redefined...if the same code coordinates are being read a second time...it would be great if this could be ignored.  I've had my beans broken up this way for years.  There are multiple advantages we get by doing this.  I'm not sure I can do anything but turn off the checking for duplicate definitions.  I'd much rather have what I'm doing work, but still benefit by getting an error if I'm trying to define two DIFFERENT beans with the same id, or same class type in the case of autowiring or reference by class name.  (I've attached a complete, maven-buildable example)  ---  **Reference URL:** https://github.com/spring-projects/spring-boot/issues/13609#issuecomment-452224306  **Attachments:** - [complete.tgz](https://jira.spring.io/secure/attachment/26173/complete.tgz) (_52.67 kB_)","open","in: core,","spring-projects-issues","2019-01-09T02:06:17Z","2022-06-21T08:44:26Z"
"","21936","Exception Handler returns wrong response code and partial response for large resonse payload [SPR-17403]","**[Stefan Beigel](https://jira.spring.io/secure/ViewProfile.jspa?name=apachemaven)** opened **[SPR-17403](https://jira.spring.io/browse/SPR-17403?redirect=false)** and commented  Hey everyone,  I am unsure if this is a bug or intentionally.  When you have a controller that returns a List of Objects:  ```java @RequestMapping(produces = MediaType.APPLICATION_JSON_VALUE) @ResponseBody public List getModels() { ```  And one of the objects throws an exception while serialization, like a n nullpointer in a getter, you will receive a partial response with a 200 OK. So instead of getting a 500 Internal Server Error you get back a 200 with a partial response. Looks like the response was allready half written.  For more Information please look into: [STACKOVERFLOW POST](https://stackoverflow.com/questions/52834692/spring-exception-handler-returns-partial-response-maybe-bug?noredirect=1#comment92586724_52834692) [GITHUB EXAMPLE OF THE PROBLEM](https://github.com/stefan0001/spring-exception-test/blob/master/src/main/java/test/MyController.java)   ---  **Affects:** 5.0.10  **Reference URL:** https://stackoverflow.com/questions/52834692/spring-exception-handler-returns-partial-response-maybe-bug","closed","status: declined,","spring-projects-issues","2018-10-18T08:32:39Z","2019-01-12T16:20:42Z"
"","22139","@Value Optional<...> field injection fails in case of registered ConversionService [SPR-17607]","**[ssundell](https://jira.spring.io/secure/ViewProfile.jspa?name=ssundell)** opened **[SPR-17607](https://jira.spring.io/browse/SPR-17607?redirect=false)** and commented  We've used Optional fields in our project to handle configurable features where configuration properties can be defined or left out. However, after upgrading from Springboot 1.5.3 to Springboot 2.1 and Spring Framework 5.x value injection fails.  For example, we've used annotations such as this:  ```java @Value(""${optional.value:#{null}}"") private Optional optionalConfiguration; ```  This initializes fine, but when you actually try to use the Optional, it fails with an exception:  ``` org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'nameOfTheBean': Invocation of init method failed; nested exception is java.lang.ClassCastException: java.util.Optional cannot be cast to java.lang.String 	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:139) 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:419) 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1737) ```    In other words: the type of the field is evaluated twice, and as a result, the post processor injects the intializing bean with `Optional>` instead of `Optional`.  The flow seems to be like this: 1. `DefaultListableBeanFactory.resolveDependency` recognized Optional and calls 2. `DefaultListableBeanFactory.createOptionalDependency` which then resolves the dependency and, through a couple of methods, ends up calling 3. `TypeConverterDelegate.convertIfNecessary` with both `requiredType` == String and field's `TypeDescriptor`, which then identifies the type as Optional\. This ignores the requiredType enough so that it ends up calling 4. `ObjectToOptionalConverter`, which, naturally, converts the provided property String into Optional\. 5. This brings us back to `DefaultListableBeanFactory.createOptionalDependency`, which now has Optional\ created in step 4 in its hands.... and it wraps it inside another Optional by calling `Optional.ofNullable`.    ---  **Affects:** 5.1.3  **Attachments:** - [optional.zip](https://jira.spring.io/secure/attachment/26161/optional.zip) (_3.64 kB_)  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/e714fc533af689bde390d457a1464ec2c114cf0f, https://github.com/spring-projects/spring-framework/commit/183f367f2ceec0ab224ad197b21e36c45fd5a0bd, https://github.com/spring-projects/spring-framework/commit/9cb5369cb9ead57245a945a4a3c21cfe321891b0  **Backported to:** [5.0.12](https://github.com/spring-projects/spring-framework/milestone/193?closed=1), [4.3.22](https://github.com/spring-projects/spring-framework/milestone/171?closed=1)","closed","in: core,","spring-projects-issues","2018-12-18T14:48:59Z","2019-01-09T09:57:56Z"
"","21913","i'm new with spring and from the start i found this warning while executing  [SPR-17380]","**[Soumaya Bessifi](https://jira.spring.io/secure/ViewProfile.jspa?name=soumayabs)** opened **[SPR-17380](https://jira.spring.io/browse/SPR-17380?redirect=false)** and commented  WARNING: An illegal reflective access operation has occurred WARNING: Illegal reflective access by org.springframework.cglib.core.ReflectUtils$1 (file:/C:/Users/dell/.m2/repository/org/springframework/spring-core/5.0.9.RELEASE/spring-core-5.0.9.RELEASE.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain) WARNING: Please consider reporting this to the maintainers of org.springframework.cglib.core.ReflectUtils$1 WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations WARNING: All illegal access operations will be denied in a future release  ---  **Affects:** 5.0.9  **Issue Links:** - #20414 MethodHandles.Lookup.defineClass for CGLIB class definition purposes","closed","status: declined,","spring-projects-issues","2018-10-14T22:19:02Z","2019-01-12T16:20:45Z"
"","22121","attached jar cannot be scanned  [SPR-17589]","**[soner sivri](https://jira.spring.io/secure/ViewProfile.jspa?name=sonersivri)** opened **[SPR-17589](https://jira.spring.io/browse/SPR-17589?redirect=false)** and commented  Attached jars cannot be scanned in springboot  what is the problem   if you attempt to autowire ConfigurationService, you can generate the bug  java classpath Class can be called with no error  attached sample project   cl.getResources(path) not found jar path   protected Set\ doFindAllClassPathResources(String path) throws IOException {  Set\ result = new LinkedHashSet<>(16);  ClassLoader cl = getClassLoader();  Enumeration\ resourceUrls = (cl != null ? cl.getResources(path) : ClassLoader.getSystemResources(path));  while (resourceUrls.hasMoreElements())  { URL url = resourceUrls.nextElement(); result.add(convertClassLoaderURL(url)); }  if ("""".equals(path))  { // The above result is likely to be incomplete, i.e. only containing file system references. // We need to have pointers to each of the jar files on the classpath as well... addAllClassLoaderJarRoots(cl, result); }  returnresult;  }   ---  **Attachments:** - [boot.zip](https://jira.spring.io/secure/attachment/26150/boot.zip) (_6.03 kB_) - [common-1.0.jar](https://jira.spring.io/secure/attachment/26147/common-1.0.jar) (_26.59 kB_) - [configuration-1.0.jar](https://jira.spring.io/secure/attachment/26148/configuration-1.0.jar) (_8.01 kB_) - [entity-1.0.jar](https://jira.spring.io/secure/attachment/26149/entity-1.0.jar) (_58.90 kB_)","closed","status: invalid,","spring-projects-issues","2018-12-11T11:18:44Z","2019-01-12T05:17:30Z"
"","22079","Provide access to the WebSocket close status in WebFlux","**[Sola](https://jira.spring.io/secure/ViewProfile.jspa?name=soladev)** opened **[SPR-17547](https://jira.spring.io/browse/SPR-17547?redirect=false)** and commented  Currently, both server-side and client-side on the Reactive stack cannot get CloseStatus when the other side actively closes the connection.  the CloseStatus can be useful when the remote closes with a reasonable reason.   ---  **Affects:** 5.1.3","closed","type: enhancement,","spring-projects-issues","2018-11-28T10:59:41Z","2020-05-14T14:43:17Z"
"","21937","Make InvocableHandlerMethod.getMethodArgumentValues from private to protected. [SPR-17404]","**[sofior](https://jira.spring.io/secure/ViewProfile.jspa?name=sofior)** opened **[SPR-17404](https://jira.spring.io/browse/SPR-17404?redirect=false)** and commented  I want to overwrite invokeForRequest to log the request param response and processing time to the db but the method of getMethodArgumentValues is private so I want change it to protected   ---  **Attachments:** - [LoggingRegistration.java](https://jira.spring.io/secure/attachment/26053/LoggingRegistration.java) (_5.47 kB_)  **Referenced from:** pull request https://github.com/spring-projects/spring-framework/pull/1995#issuecomment-430903192, and commits https://github.com/spring-projects/spring-framework/commit/5b5f7190bf9a2a90e5faa13fedcae2895b6e67e4","closed","type: enhancement,","spring-projects-issues","2018-10-18T08:59:59Z","2018-10-29T11:07:58Z"
"","21955","@RequestBody(required=false) and no Content-Type Header Issue [SPR-17422]","**[Simon Raess](https://jira.spring.io/secure/ViewProfile.jspa?name=rasifix)** opened **[SPR-17422](https://jira.spring.io/browse/SPR-17422?redirect=false)** and commented  Given the following controller method:  ```java @PostMapping(path=""/"", consumes=""application/json"") public void foo(@RequestBody(required=false) SomeDTO dto) {     ... } ```  If I post a request to that URL without body and no Content-Type header I get a HTTP 415 unsupported media type. If I add the Content-Type header everything works fine.  As there is no content it is strange that Spring tries to enforce the Content-Type header. This might seem a minor thing but if the consumer is out of your control, it is a bad thing.  Leaving out the ""consumes"" is also not really an option. If the body is there I want to enforce the content type.     ---  **Affects:** 5.0.10  **Issue Links:** - #22010 Request validation behaves badly for cases when RequestBody is optional and not provided in request (_**""is duplicated by""**_)","closed","type: enhancement,","spring-projects-issues","2018-10-23T06:52:37Z","2019-01-11T13:17:03Z"
"","22119","@Scheduled methods in @Lazy beans are not scheduled [SPR-17587]","**[Silvio Assunção Junior](https://jira.spring.io/secure/ViewProfile.jspa?name=assuncao.s)** opened **[SPR-17587](https://jira.spring.io/browse/SPR-17587?redirect=false)** and commented  The issue #17470 was not resolved,  the problem continue  I checked the code of **ScheduledAnnotationBeanPostProcessor** and the tasks will registered on method **postProcessAfterInitialization**, but lazy Beans it is not created or initialized, than Beans with `@Scheduled` and `@Lazy` does not work correctly  The Schedule will be registered only if I will use the Bean (Force a creation)  Other guys with the same problem https://stackoverflow.com/questions/47585846/why-spring-schedule-do-not-work-with-lazy  ---  **Affects:** 4.3.18  **Reference URL:** #17470  **Issue Links:** - #17470 `@Scheduled` methods in `@Lazy` beans are not scheduled","closed","in: core,","spring-projects-issues","2018-12-10T17:18:31Z","2019-01-14T04:15:38Z"
"","22160","MethodParameter.isOptional() fails with ArrayIndexOutOfBoundsException [SPR-17629]","**[shollander](https://jira.spring.io/secure/ViewProfile.jspa?name=shollander)** opened **[SPR-17629](https://jira.spring.io/browse/SPR-17629?redirect=false)** and commented  Calling `org.springframework.core.MethodParameter.isOptional()` can fail with an `ArrayIndexOutOfBoundsException`.  I have a custom `ResponseBodyAdvice` class that calls this method in `supports()`. It fails when it hits `org.springframework.boot.actuate.endpoint.web.servelt.WebMvcEndpointHandlerMappings$WebMvcLinksHandler.links` with the following exception:  ``` java.lang.ArrayIndexOutOfBoundsException: -1     at org.springframework.web.method.HandlerMethod$HandlerMethodParamater.getParameterAnnotations(HandlerMethod.java:484) ~[spring-web-5.1.3.RELEASE.jar:5.1.3.RELEASE]     at org.springframework.core.MethodParameter.hasNullableAnnotation(MethodParameter.java:357) ~[spring-core-5.1.3.RELEASE.jar:5.1.3.RELEASE]     at org.springframework.core.MethodParameter.isOptional(MethodParameter.java:345) ~[spring-core-5.1.3.RELEASE.jar:5.1.3.RELEASE]     at com.example.advice.OptionalResponseBodyAdvice.supports(OptionalResponseBodyAdvice.java:18) ~[main/:na]     at org.springframework.web.servlet.mvc.method.annotation.RequestBodyAdviceChain.processBody(RequestBodyAdviceChain.java:140) ~[spring-webmvc-5.1.3.RELEASE.jar:5.1.3.RELEASE] ```  ---  **Affects:** 5.1.3  **Issue Links:** - #15682 Enable REST controller method parameter annotations on an interface  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/1faeeaea14f8961a49d280da528fa4623fe7cfee","closed","type: bug,","spring-projects-issues","2018-12-28T13:36:55Z","2019-01-24T10:34:13Z"
"","21986","Support @TestPropertySource as a repeated annotation [SPR-17454]","**[shollander](https://jira.spring.io/secure/ViewProfile.jspa?name=shollander)** opened **[SPR-17454](https://jira.spring.io/browse/SPR-17454?redirect=false)** and commented  `@TestPropertySource` should ideally be supported as a repeatable annotation, just like `@PropertySource` is.  One use case for me is to create custom composed annotations with different `@TestPropertySource` declarations to provide a clear and non-error prone method of setting various properties for integration tests.  It would be very useful to be able to use a combination of multiple composed annotations with different `@TestPropertySource` declarations.   --- No further details from [SPR-17454](https://jira.spring.io/browse/SPR-17454?redirect=false)","closed","status: superseded,","spring-projects-issues","2018-11-01T16:32:33Z","2019-07-20T11:49:52Z"
"","21971","RestTemplate does not throw exception for custom error codes [SPR-17439]","**[shollander](https://jira.spring.io/secure/ViewProfile.jspa?name=shollander)** opened **[SPR-17439](https://jira.spring.io/browse/SPR-17439?redirect=false)** and commented  Normally, `RestTemplate` is expected to throw an exception if the server returns an HTTP error code. However, is the server returns a custom error code (4xx or 5xx), no exception is thrown and the call returns normally.  ---  **Affects:** 4.3.20, 5.0.10  **Issue Links:** - #20529 RestTemplate doesn't consistently tolerate unknown HTTP status codes - #20656 DefaultResponseErrorHandler.hasError doesn't tolerate unknown status codes - #20918 RestTemplate.ResponseEntityResponseExtractor doesn't tolerate unknown status codes - #21145 DefaultResponseErrorHandler wastes the body of a response with an unknown status - #21993 DefaultResponseErrorHandler does not handle status values outside of HttpStatus enum  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/97ac1c22c5adde64ae72a3b0d874a913a349c1fb, https://github.com/spring-projects/spring-framework/commit/4a51acbeb22ac15c818fe4c50891198311fc3fd8, https://github.com/spring-projects/spring-framework/commit/1c1b94285d122068b0a577dc1b497093ed58a8ef, https://github.com/spring-projects/spring-framework/commit/738097def2407166ff9d58c25836180f95eda77d  **Backported to:** [5.0.11](https://github.com/spring-projects/spring-framework/milestone/192?closed=1), [4.3.21](https://github.com/spring-projects/spring-framework/milestone/170?closed=1)","closed","type: regression,","spring-projects-issues","2018-10-26T19:54:46Z","2019-01-11T13:16:51Z"
"","22064","WebClient no longer encodes query parameters [SPR-17532]","**[ShaManHFel](https://jira.spring.io/secure/ViewProfile.jspa?name=shamanhfel)** opened **[SPR-17532](https://jira.spring.io/browse/SPR-17532?redirect=false)** and commented  The following sample code used to work in 5.0.8 but stopped working in 5.1.2:     `WebClient.builder()` `.baseUrl(""https://www.google.com"")` `.build()` `.get()` `.uri(builder -> builder` `.path(""search"")` `*.queryParam(""q"", ""some spaces in the value"")*` `.build())` `.retrieve()` `.bodyToMono(String.class)` `.block();{color`}     `In 5.0.8 the result from this code was the following call:`  > `GET /search?q=some%20spaces%20in%20the%20value HTTP/1.1` > `user-agent: ReactorNetty/0.7.8.RELEASE` > `host: [www.google.com](http://www.google.com/)`  `In 5.1.2 the result is:`  > `Exception in thread ""main"" java.lang.IllegalArgumentException: Illegal character in query at index 36: https://www.google.com/search?q=some spaces in the value` > ` at java.net.URI.create(URI.java:852)` > ` at org.springframework.web.util.DefaultUriBuilderFactory$DefaultUriBuilder.createUri(DefaultUriBuilderFactory.java:391)` > ` at org.springframework.web.util.DefaultUriBuilderFactory$DefaultUriBuilder.build(DefaultUriBuilderFactory.java:384)` > ` at com.vmware.identity.SpringBug.lambda$main$0(SpringBug.java:19)` > ` at org.springframework.web.reactive.function.client.DefaultWebClient$DefaultRequestBodyUriSpec.uri(DefaultWebClient.java:189)` > ` at org.springframework.web.reactive.function.client.DefaultWebClient$DefaultRequestBodyUriSpec.uri(DefaultWebClient.java:153)` > ` at com.vmware.identity.SpringBug.main(SpringBug.java:16)` > `Caused by: java.net.URISyntaxException: Illegal character in query at index 36: https://www.google.com/search?q=some spaces in the value` > ` at java.net.URI$Parser.fail(URI.java:2848)` > ` at java.net.URI$Parser.checkChars(URI.java:3021)` > ` at java.net.URI$Parser.parseHierarchical(URI.java:3111)` > ` at java.net.URI$Parser.parse(URI.java:3053)` > ` at java.net.URI.(URI.java:588)` > ` at java.net.URI.create(URI.java:850)` > ` ... 6 more`  `As evident from the error, the queryParam() method no longer encodes the query parameter values. This seems to be caused by a change in DefaultUriBuilderFactory where the default encoding mode was changed ``to `EncodingMode.TEMPLATE_AND_VALUES.  ---  **Affects:** 5.1.2  **Issue Links:** - #21997 WebClient's UriBuilder option should encode path parameters passed into build (_**""duplicates""**_)","closed","in: web,","spring-projects-issues","2018-11-22T16:16:42Z","2019-01-12T16:44:12Z"
"","22009","Add ExponentialRandomBackOffPolicy [SPR-17477]","**[Sam Mefford](https://jira.spring.io/secure/ViewProfile.jspa?name=sammefford)** opened **[SPR-17477](https://jira.spring.io/browse/SPR-17477?redirect=false)** and commented  While Spring Retry has an [ExponentialRandomBackOffPolicy](https://github.com/spring-projects/spring-retry/blob/master/src/main/java/org/springframework/retry/backoff/ExponentialBackOffPolicy.java), Spring org.springframework.util.backoff only has ExponentialBackOff, with no random features.  Since org.springframework.util.backoff is reusable on many projects (such as with RestTemplate, see #17922), this functionality could be generally useful.    Since Spring Retry isn't [async](https://github.com/spring-projects/spring-retry/issues/25), its utility is limited.  And Spring Retry's ExponentialRandomBackOffPolicy is tied to its blocking implementation, with a call to Thread.sleep hard-coded in the only Sleeper implementation.   It could be beneficial for use cases which require async to have access to a general-purpose ExponentialRandomBackOffPolicy implementation.  ---  **Reference URL:** https://github.com/spring-projects/spring-retry/blob/master/src/main/java/org/springframework/retry/backoff/ExponentialRandomBackOffPolicy.java","open","type: enhancement,","spring-projects-issues","2018-11-07T22:16:44Z","2019-01-11T13:13:55Z"
"","22183","Document effect of @DirtiesContext when used with constructor injection [SPR-17654]","**[Sam Brannen](https://jira.spring.io/secure/ViewProfile.jspa?name=sbrannen)** opened **[SPR-17654](https://jira.spring.io/browse/SPR-17654?redirect=false)** and commented  ## Overview  A recent discussion in the #spring channel on Kotlin Slack pointed out that issues arise when using `@DirtiesContext` to evict an `ApplicationContext` from the cache between test methods if the test class is executed with JUnit Jupiter and `@TestInstance(PER_CLASS)` semantics.  ## Analysis  Constructor injection for Spring-managed components will not work properly if `@DirtiesContext` is used to evict the test's `ApplicationContext` before or after test methods.  The reason is that the test instance will retain references to beans that came from a (now) closed `ApplicationContext`, and dependency injection will not occur again (to reset the references) since the constructor will only be invoked once.  To use `@DirtiesContext` before or after methods, one must allow dependencies from Spring to be injected via fields or setter/configuration methods.  ## Deliverables  - Document this in the _Testing_ chapter of the reference manual  ---  **Affects:** 5.0.12  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/bd9d3334a29b74a3f2a93dd7c286b90c17d9633b, https://github.com/spring-projects/spring-framework/commit/cf565067fe5b2f9c503e2653c81ba9512993fc48","closed","type: documentation,","spring-projects-issues","2019-01-09T13:18:09Z","2019-01-12T19:48:48Z"
"","22176","Document effect of preemptive timeouts on transactional tests [SPR-17647]","**[Sam Brannen](https://jira.spring.io/secure/ViewProfile.jspa?name=sbrannen)** opened **[SPR-17647](https://jira.spring.io/browse/SPR-17647?redirect=false)** and commented  ## Overview  As discussed in JUnit 5 issue [1701](https://github.com/junit-team/junit5/issues/1701), developers are often unaware of the effect that a preemptive timeout in a testing framework can have on transactional tests in Spring.  Documenting such use cases in the _Testing_ chapter of the Spring Reference Manual, analogous to how I documented it in the [JUnit 5 User Guide](https://junit.org/junit5/docs/snapshot/user-guide/#writing-tests-assertions-preemptive-timeouts), would help improve awareness.  ## Deliverables  - Document effect of preemptive timeouts on transactional tests in the _Testing_ chapter. - Mention JUnit Jupiter's `assertTimeoutPreemptively()`. - Mention JUnit 4's `Timeout` rule and `timeout` support. - Mention TestNG's `timeOut` support.  ---  **Reference URL:** https://github.com/junit-team/junit5/issues/1701  **Issue Links:** - #10792 Support timed transactional TestNG tests in the TestContext framework  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/e1e6224acb4fcf0d24f0a1134284752b20d611ec, https://github.com/spring-projects/spring-framework/commit/df13e4dd5e85cc1fde12277f17ad7a7f64ce7e3d","closed","type: documentation,","spring-projects-issues","2019-01-08T12:42:22Z","2019-01-11T15:23:37Z"
"","22069","Upgrade to JUnit 5.3.2 [SPR-17537]","**[Sam Brannen](https://jira.spring.io/secure/ViewProfile.jspa?name=sbrannen)** opened **[SPR-17537](https://jira.spring.io/browse/SPR-17537?redirect=false)** and commented  We just released JUnit 5.3.2, just in time for inclusion in Spring 5.1.3.  ---  **Affects:** 5.1.2  **Reference URL:** https://github.com/junit-team/junit5/releases/tag/r5.3.2  **Issue Links:** - #21666 Upgrade to JUnit Jupiter 5.3  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/82eb82a04064ddd69a9b2e93d6e7f50bff60baf4","closed","type: task,","spring-projects-issues","2018-11-25T20:36:06Z","2019-01-11T13:32:07Z"
"","22066","MethodParameter.findParameterIndex() is not thread-safe [SPR-17534]","**[Sam Brannen](https://jira.spring.io/secure/ViewProfile.jspa?name=sbrannen)** opened **[SPR-17534](https://jira.spring.io/browse/SPR-17534?redirect=false)** and commented  ## Status Quo  As discussed in #22065, `org.springframework.core.MethodParameter.findParameterIndex(Parameter)` is not thread-safe due to the manner in which `java.lang.reflect.Executable.getParameters()` is implemented in the JDK.  ## Proposed Solution  The following change has been verified to result in thread-safe behavior.  Whether or not we want two iterations is up for debate.  ```java protected static int findParameterIndex(Parameter parameter) { 	Executable executable = parameter.getDeclaringExecutable(); 	Parameter[] allParams = executable.getParameters(); 	 	// Try first with identity checks for greater performance. 	for (int i = 0; i < allParams.length; i++) { 		if (parameter == allParams[i]) { 			return i; 		} 	} 	// Potentially try again with object equality in order to avoid race 	// conditions while accessing java.lang.reflect.Executable.getParameters(). 	for (int i = 0; i < allParams.length; i++) { 		if (parameter.equals(allParams[i])) { 			return i; 		} 	} 	throw new IllegalArgumentException(""Given parameter ["" + parameter + 			""] does not match any parameter in the declaring executable""); } ```  ## Deliverables  1. Ensure that `MethodParameter.findParameterIndex()` is thread-safe  ---  **Affects:** 5.0.10, 5.1 GA  **Issue Links:** - #22065 Parameter resolution in SpringExtension is not thread-safe  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/81fde5ec4103e3db28bf79073691938a4743b121, https://github.com/spring-projects/spring-framework/commit/f0e69e06b7c0b4b1c8cbf7c17cfc21ab92ce983c  **Backported to:** [5.0.11](https://github.com/spring-projects/spring-framework/milestone/192?closed=1)","closed","in: core,","spring-projects-issues","2018-11-23T15:03:35Z","2019-01-11T13:32:17Z"
"","22065","Parameter resolution in SpringExtension is not thread-safe [SPR-17533]","**[Sam Brannen](https://jira.spring.io/secure/ViewProfile.jspa?name=sbrannen)** opened **[SPR-17533](https://jira.spring.io/browse/SPR-17533?redirect=false)** and commented  ## Status Quo  `ParameterAutowireUtils` (used internally by the `SpringExtension`) creates a `SynthesizingMethodParameter` via `SynthesizingMethodParameter.forParameter()` which looks up the index of the current `Parameter` via `MethodParameter.findParameterIndex(Parameter)`.  `findParameterIndex()` iterates over the array of parameters returned from `java.lang.reflect.Executable.getParameters()` which is unfortunately not thread-safe.  Specifically, the implementation of `java.lang.reflect.Executable.privateGetParameters()` writes to a `private transient volatile Parameter[] parameters` field in such a way that competing threads may receive references to different arrays.  ## Deliverables  1. Ensure that parameter resolution within the `SpringExtension` is thread-safe.  ---  **Affects:** 5.0.10, 5.1 GA  **Reference URL:** https://github.com/junit-team/junit5/issues/1686  **Issue Links:** - #22066 MethodParameter.findParameterIndex() is not thread-safe  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/58cde3c2e6fc6c03b581d15cf6a0e2deb9d86a59, https://github.com/spring-projects/spring-framework/commit/aa7f69a5d1790b2a2bc9e82e70ead060763c4ec9, https://github.com/spring-projects/spring-framework/commit/cd67b285e1038323fd4e8434ec48e40190d63236  **Backported to:** [5.0.11](https://github.com/spring-projects/spring-framework/milestone/192?closed=1)","closed","type: bug,","spring-projects-issues","2018-11-23T14:54:57Z","2019-01-11T13:31:40Z"
"","22028","AOP support for SPR-17223 & PR#1950 [SPR-17496]","**[s-mop](https://jira.spring.io/secure/ViewProfile.jspa?name=s-mop)** opened **[SPR-17496](https://jira.spring.io/browse/SPR-17496?redirect=false)** and commented  In previous commit at PR#1950 we supported register RequestMapping on Interface which implement in parent class.And it works well in our production environment for this 7 weks. See #21756     And several days ago I realized that I can't register a AOP cutpoint for the scenario.  So i tried to changed the logic of org.springframework.aop.support.AopUtils.getMostSpecificMethod(Method, Class)  Now this logic will try to find specific method in targetClass's interfaces first.Instead of only do that in targetClass.  I hope this commit can make my PR more helpful;)  ---  **Affects:** 5.1 GA  **Reference URL:** https://github.com/spring-projects/spring-framework/pull/1950/commits/c76f017172938a9883e14b6804550ec0ca35f035  **Issue Links:** - #21756 getMappingForMethod failed when implement a interface method(with `@RequestMapping`) in super class  **Referenced from:** pull request https://github.com/spring-projects/spring-framework/pull/1950","closed","type: enhancement,","spring-projects-issues","2018-11-15T08:41:49Z","2021-12-03T11:17:00Z"
"","22087","[Improvement request] Obtain request context from WebClientException. [SPR-17555]","**[Ryosuke Hasebe](https://jira.spring.io/secure/ViewProfile.jspa?name=be-hase)** opened **[SPR-17555](https://jira.spring.io/browse/SPR-17555?redirect=false)** and commented  I wanna obtain request context from WebClientException. It is useful to be able to record both request and response when catching exceptions.     https://github.com/spring-projects/spring-framework/blob/f5da737bd459a86a59c347040625715fcf55f57b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/WebClientException.java  https://github.com/spring-projects/spring-framework/blob/f5da737bd459a86a59c347040625715fcf55f57b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/WebClientResponseException.java  ---  **Issue Links:** - #21624 Add ability to retrieve associated ClientRequest from WebClientResponseException (_**""duplicates""**_)","closed","type: enhancement,","spring-projects-issues","2018-12-02T07:24:17Z","2019-01-11T13:30:14Z"
"","22057","ForwardedHeaderTransformer double encodes [SPR-17525]","**[Ryosuke Hasebe](https://jira.spring.io/secure/ViewProfile.jspa?name=be-hase)** opened **[SPR-17525](https://jira.spring.io/browse/SPR-17525?redirect=false)** and commented  Version: 5.1.2 RELEASE  The UriComponentsBuilder encodes the already encoded query parameter again. Please check. :)  https://github.com/spring-projects/spring-framework/blob/master/spring-web/src/main/java/org/springframework/web/server/adapter/ForwardedHeaderTransformer.java#L88   ---  **Affects:** 5.1.2  **Backported to:** [5.0.11](https://github.com/spring-projects/spring-framework/milestone/192?closed=1)","closed","type: bug,","spring-projects-issues","2018-11-21T10:21:42Z","2018-11-27T09:13:11Z"
"","22083","Add String based URI template variants to RequestEntity  [SPR-17551]","**[Ryon Day](https://jira.spring.io/secure/ViewProfile.jspa?name=ryonday)** opened **[SPR-17551](https://jira.spring.io/browse/SPR-17551?redirect=false)** and commented  The `RestTemplateBuilder` documentation for the `rootUri()` method states:  ""Set a root URL that should be applied to each request that starts with '/'.""  However, the following code does not result in `RestTemplate` expanding the URI:  ```java UriTemplate template = new UriTemplate(""/foo?bar={bar}"");  this.restTemplate = restTemplateBuilder  .rootUri(URI.create(""http://foo.bar""))  .build();  URI uri = template.expand(""baz""); RequestEntity req = RequestEntity.get(uri)  .accept(MediaType.APPLICATION_JSON)  .header(accountLinkHeader, accountLinksHeader)  .build(); String response = restTemplate.exchange(req, String.class); ```     Moreover, the exception received is EXTREMELY ambiguous when this doesn't work. In fact, the Spring exception thrown occludes the initial Apache exception (which states there's no host).   ---  **Affects:** 5.1.3","closed","status: superseded,","spring-projects-issues","2018-11-29T20:18:45Z","2020-01-27T14:36:07Z"
"","22169","Spring MVC - Kotlin: Cannot bind MultipartFile in constructor [SPR-17640]","**[Ryan Bohn](https://jira.spring.io/secure/ViewProfile.jspa?name=rbohn)** opened **[SPR-17640](https://jira.spring.io/browse/SPR-17640?redirect=false)** and commented  When using spring mvc with Kotlin,  I prefer to use data classes  with immutable fields.  This works for most cases.  However, when I'm using MultipartFile as a field on a request object, I am forced to use a var field and make the field nullable in order to get it to work.  I've attached a sample project exhibiting this behavior.  Just follow the instructions in the README.txt.   ---  **Affects:** 5.1.3  **Attachments:** - [issue.zip](https://jira.spring.io/secure/attachment/26167/issue.zip) (_17.19 kB_)","closed","type: enhancement,","spring-projects-issues","2019-01-04T22:44:49Z","2020-08-06T16:29:15Z"
"","21950","Spring logs a nasty looking stack trace for unhandled classpath URL [SPR-17417]","**[rsmckinney](https://jira.spring.io/secure/ViewProfile.jspa?name=rsmckinney)** opened **[SPR-17417](https://jira.spring.io/browse/SPR-17417?redirect=false)** and commented  [Manifold](http://manifold.systems/) adds a URL with custom protocol, `manifoldclass:` to the classpath, which is supported by `URLClassLoader`.  However, Spring assumes classpath URLs are file-based when it scans the classpath during `SpringApplication.run()`.   If Spring encounters a URL that is not file-based, it throws a `FileNotFoundException` it subsequently catches and logs a warning.  But it still logs the stack trace to the console, which is alarming if not misleading.  Better:  omit the stack trace from the warning message.   Best:  provide an API or convention to handle a non-file protocol, or exclude it from the scan.  #### Log  ` :: Spring Boot ::        (v2.0.6.RELEASE) :: Spring Boot ::        (v2.0.6.RELEASE)` `2018-10-20 11:48:01.252  INFO 18328 — [           main] com.example.demo.DemoApplication         : Starting DemoApplication on LAPTOP-1OGNGP8A with PID 18328 (C:\Temp\spring\demo\demo\target\classes started by scott in C:\Temp\spring\demo\demo)2018-10-20 11:48:01.258  INFO 18328 — [           main] com.example.demo.DemoApplication         : No active profile set, falling back to default profiles: default2018-10-20 11:48:01.313  INFO 18328 — [           main] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1f97cf0d: startup date [Sat Oct 20 11:48:01 PDT 2018]; root of context hierarchy2018-10-20 11:48:01.413  *WARN 18328 — [           main] .i.s.PathMatchingResourcePatternResolver : Cannot search for matching files underneath URL [manifoldclass://414493378/com/example/demo/] because it does not correspond to a directory in the file system*` `java.io.FileNotFoundException: URL [manifoldclass://414493378/com/example/demo/] cannot be resolved to absolute file path because it does not reside in the file system: manifoldclass://414493378/com/example/demo/ at org.springframework.util.ResourceUtils.getFile(ResourceUtils.java:217) ~[spring-core-5.0.10.RELEASE.jar:5.0.10.RELEASE] at org.springframework.core.io.AbstractFileResolvingResource.getFile(AbstractFileResolvingResource.java:131) ~[spring-core-5.0.10.RELEASE.jar:5.0.10.RELEASE] at org.springframework.core.io.UrlResource.getFile(UrlResource.java:225) ~[spring-core-5.0.10.RELEASE.jar:5.0.10.RELEASE] at org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingFileResources(PathMatchingResourcePatternResolver.java:697) [spring-core-5.0.10.RELEASE.jar:5.0.10.RELEASE] at org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:510) [spring-core-5.0.10.RELEASE.jar:5.0.10.RELEASE] at org.springframework.core.io.support.PathMatchingResourcePatternResolver.getResources(PathMatchingResourcePatternResolver.java:282) [spring-core-5.0.10.RELEASE.jar:5.0.10.RELEASE] at org.springframework.context.support.AbstractApplicationContext.getResources(AbstractApplicationContext.java:1307) [spring-context-5.0.10.RELEASE.jar:5.0.10.RELEASE] at org.springframework.context.support.GenericApplicationContext.getResources(GenericApplicationContext.java:233) [spring-context-5.0.10.RELEASE.jar:5.0.10.RELEASE] at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:421) [spring-context-5.0.10.RELEASE.jar:5.0.10.RELEASE] at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:316) [spring-context-5.0.10.RELEASE.jar:5.0.10.RELEASE] at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:275) [spring-context-5.0.10.RELEASE.jar:5.0.10.RELEASE] at org.springframework.context.annotation.ComponentScanAnnotationParser.parse(ComponentScanAnnotationParser.java:132) [spring-context-5.0.10.RELEASE.jar:5.0.10.RELEASE] at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:288) [spring-context-5.0.10.RELEASE.jar:5.0.10.RELEASE] at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:245) [spring-context-5.0.10.RELEASE.jar:5.0.10.RELEASE] at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:202) [spring-context-5.0.10.RELEASE.jar:5.0.10.RELEASE] at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:170) [spring-context-5.0.10.RELEASE.jar:5.0.10.RELEASE] at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:316) [spring-context-5.0.10.RELEASE.jar:5.0.10.RELEASE] at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:233) [spring-context-5.0.10.RELEASE.jar:5.0.10.RELEASE] at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:271) [spring-context-5.0.10.RELEASE.jar:5.0.10.RELEASE] at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:91) [spring-context-5.0.10.RELEASE.jar:5.0.10.RELEASE] at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:692) [spring-context-5.0.10.RELEASE.jar:5.0.10.RELEASE] at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:530) [spring-context-5.0.10.RELEASE.jar:5.0.10.RELEASE] at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-2.0.6.RELEASE.jar:2.0.6.RELEASE] at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:386) [spring-boot-2.0.6.RELEASE.jar:2.0.6.RELEASE] at org.springframework.boot.SpringApplication.run(SpringApplication.java:307) [spring-boot-2.0.6.RELEASE.jar:2.0.6.RELEASE] at org.springframework.boot.SpringApplication.run(SpringApplication.java:1242) [spring-boot-2.0.6.RELEASE.jar:2.0.6.RELEASE] at org.springframework.boot.SpringApplication.run(SpringApplication.java:1230) [spring-boot-2.0.6.RELEASE.jar:2.0.6.RELEASE] at com.example.demo.DemoApplication.main(DemoApplication.java:12) [classes/:na]` `2018-10-20 11:48:01.931  INFO 18328 — [           main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup2018-10-20 11:48:01.944  INFO 18328 — [           main] com.example.demo.DemoApplication         : Started DemoApplication in 1.088 seconds (JVM running for 2.041)`   ---  **Affects:** 4.3.20, 5.0.10  **Reference URL:** https://github.com/manifold-systems/manifold/issues/22  **Backported to:** [5.0.11](https://github.com/spring-projects/spring-framework/milestone/192?closed=1), [4.3.21](https://github.com/spring-projects/spring-framework/milestone/170?closed=1)","closed","in: core,","spring-projects-issues","2018-10-21T04:37:38Z","2018-10-29T11:07:58Z"
"","22161","UriComponentsBuilder.toUriString() is broken [SPR-17630]","**[rougou](https://jira.spring.io/secure/ViewProfile.jspa?name=rougou)** opened **[SPR-17630](https://jira.spring.io/browse/SPR-17630?redirect=false)** and commented  UriComponentsBuilder.toUriString() (and possibly UriComponentsBuilder.encode()) is broken as of 5.0.8.  The code was [changed](https://github.com/spring-projects/spring-framework/commit/93b7a4838ecefba10015f0f79e74b61055944064#diff-73d13991926d9c9b00031a62c7e39c95R445) from   ```java return build(false).encode().toUriString(); ```   to  ```java return encode().build().toUriString(); ```  without any change to the javadoc.  There are 2 problems with this (other than the javadoc issue) 1. UriComponentsBuilder itself gets mutated by calling toUriString(), which is unexpected behavior. 2. If you have a query param value with curly braces such as ""{{{{"", an IllegalStateException will now be thrown. If you have a closing brace such as ""{{{}"", no exception will be thrown but it won't be url-encoded, either.  On top of that, the javadoc for UriComponentsBuilder.encode() basically says it will give the expected result while UriComponents.encode() will not, but not encoding braces and throwing IllegalStateExceptions is obviously not the expected result. It seems the variable expansion mechanism introduced is affecting behavior even when this feature is not used.        ---  **Affects:** 5.0.8, 5.1.1  **Issue Links:** - #21565 HtmlUnitRequestBuilder decodes plus sign in query parameter - #21577 Support stricter encoding of URI variables in UriComponents  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/b219c6ce15637a7a190a657f864e631e428b5378, https://github.com/spring-projects/spring-framework/commit/5aa131a259571a19497c0bba48f7030b16f682a8, https://github.com/spring-projects/spring-framework/commit/124e8179b2c4b5b1615057a3fb083ee7ee2522ea, https://github.com/spring-projects/spring-framework/commit/dc3f953f4b82e411a1f4b35fe0ab2cd4973c4967, https://github.com/spring-projects/spring-framework/commit/c6e50087a076dc55a5e1baef430ce94cb10da927, https://github.com/spring-projects/spring-framework/commit/63984800e4c94e6a5a98e561a4c9284db705babf  **Backported to:** [5.0.12](https://github.com/spring-projects/spring-framework/milestone/193?closed=1)","closed","type: bug,","spring-projects-issues","2018-12-28T16:22:00Z","2019-01-13T19:42:18Z"
"","22141","ChannelSendOperator does not propagate cancel signal to the server  [SPR-17609]","**[Rossen Stoyanchev](https://jira.spring.io/secure/ViewProfile.jspa?name=rstoya05-aop)** opened **[SPR-17609](https://jira.spring.io/browse/SPR-17609?redirect=false)** and commented  This is a follow-up to #22038 in which writing with `Content-Length: 0` and `byte[0]` was causing hanging. The issue was fixed in 5.1.3 by using `response.setComplete()` instead of writing an empty byte array. However the underlying issue of hanging with `Content-Length: 0` and `byte[0]` remains.  After further investigation, there is an issue in `ChanelSendOperator` in that it currently only cancels the upstream write `Publisher`. So in a case where a cancel happens after the first signal (onNext, onError, onComplete) is emitted, and therefore after the server write Subscriber is hooked in, in that scenario only the upstream write Publisher is notified to stop sending, but the server write Subscriber is not aware.  In addition to the sample in #22038 there is also a sample in https://github.com/reactor/reactor-netty/issues/518.  ---  **Affects:** 5.1.3  **Issue Links:** - #22038 HTTP GET from Chrome with WebFlux Rest Controller never completes  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/09da10cc6c585995f4623793aa2b2f6a38b5284d  **Backported to:** [5.0.12](https://github.com/spring-projects/spring-framework/milestone/193?closed=1)","closed","type: bug,","spring-projects-issues","2018-12-18T19:41:10Z","2019-01-11T15:25:23Z"
"","22107","Fix potential leaks from Mono.just(dataBuffer) or Flux.just(dataBuffer) [SPR-17575]","**[Rossen Stoyanchev](https://jira.spring.io/secure/ViewProfile.jspa?name=rstoya05-aop)** opened **[SPR-17575](https://jira.spring.io/browse/SPR-17575?redirect=false)**  When using `Mono.just` or `Flux.just` data buffers can be allocated before subscription and consequently won't even see a cancellation signal in case the connection is closed.  The second issue is that if `Mono.just` or `Flux.just` is passed into `response#writeWith` those will not see a cancellation signal because cancellation is not propagated to them (i.e. can't cancel what's already been materialized).  ---  **Affects:** 5.1.3","closed","type: task,","spring-projects-issues","2018-12-06T17:12:20Z","2019-03-27T01:16:20Z"
"","22106","Enable io.netty.leakDetection at paranoid level in WebFlux tests  [SPR-17574]","**[Rossen Stoyanchev](https://jira.spring.io/secure/ViewProfile.jspa?name=rstoya05-aop)** opened **[SPR-17574](https://jira.spring.io/browse/SPR-17574?redirect=false)** and commented   ---  **Affects:** 5.1.3  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/388ce928615919c356e4b4c7576902c139f47b0b","closed","type: task,","spring-projects-issues","2018-12-06T16:08:07Z","2019-01-09T13:06:52Z"
"","22105","Integrate Reactor debugging features in WebFlux  [SPR-17573]","**[Rossen Stoyanchev](https://jira.spring.io/secure/ViewProfile.jspa?name=rstoya05-aop)** opened **[SPR-17573](https://jira.spring.io/browse/SPR-17573?redirect=false)** and commented  Reactor [debugging features](https://projectreactor.io/docs/core/release/reference/#debugging) include:  1. Stack trace collection at assembly time, i.e. `Hooks.onOperatorDebug()`. Spring Boot enables this with devtools and it's also controlled via property `spring.reactor.stacktrace-mode.enabled`. 1. `checkpoint` operator with description string. This is of interest since it allows attaching information to exceptions in production without much overhead. 1. `log` operator for signals. Potentially of interest at TRACE log level to track emissions or and/or detect completion of processing stages. 1. `tag` operator for monitoring tools.  ---  **Affects:** 5.1.3","closed","type: enhancement,","spring-projects-issues","2018-12-06T15:28:58Z","2019-03-15T20:28:49Z"
"","22033","Enforce use of unpooled data buffers for WebFlux on 5.0.x [SPR-17501]","**[Rossen Stoyanchev](https://jira.spring.io/secure/ViewProfile.jspa?name=rstoya05-aop)** opened **[SPR-17501](https://jira.spring.io/browse/SPR-17501?redirect=false)** and commented  Many of the fixes to prevent leaking pooled data buffers (e.g. #21941) cannot be backported to 5.0.x which cannot use the `doOnDiscard` hook introduced in reactor-core 3.2. The goal for this ticket is to prevent the issue in 5.0.x by using unpooled buffers by default, and by copying and not retaining any buffers received from the Reactor Netty side.      ---  **Affects:** 5.0.10  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/18da718bf5be81e0888d38a9b5b627f1c0f774b1","closed","type: enhancement,","spring-projects-issues","2018-11-15T17:09:51Z","2019-01-11T13:33:57Z"
"","22001","Improve visibility of GitHub wiki [SPR-17469]","**[Rossen Stoyanchev](https://jira.spring.io/secure/ViewProfile.jspa?name=rstoya05-aop)** opened **[SPR-17469](https://jira.spring.io/browse/SPR-17469?redirect=false)** and commented  The landing page of the reference docs has a link to the Wiki but it's a bit lost in that opening paragraph and many do not notice it outside the structure of the main sections. To improve we can add Overview to the main list, and also a line for the Wiki listing specific types of information.   ---  **Affects:** 5.0.10  **Backported to:** [5.0.11](https://github.com/spring-projects/spring-framework/milestone/192?closed=1)","closed","type: documentation,","spring-projects-issues","2018-11-05T15:55:23Z","2018-11-27T09:13:11Z"
"","21987","Reactive infrastructure for annotated method invocation in spring-messaging [SPR-17455]","**[Rossen Stoyanchev](https://jira.spring.io/secure/ViewProfile.jspa?name=rstoya05-aop)** opened **[SPR-17455](https://jira.spring.io/browse/SPR-17455?redirect=false)** and commented  Non-blocking, reactive contract equivalents for: * `InvocableHandlerMethod` and related contracts for resolving method parameters and handling return values. * `AbstractMethodMessageHandler` and sub-classes for message handling through the invocation of annotated handler methods. * Implementations of argument resolvers and return value handlers, including use of codecs for payload encoding and decoding.  ---  **Affects:** 5.1.2  This issue is a sub-task of #21292","closed","type: task,","spring-projects-issues","2018-11-01T23:39:49Z","2019-03-05T04:58:09Z"
"","21957","Review Jetty ClientHttpConnector code for buffer handling on error/cancellation [SPR-17424]","**[Rossen Stoyanchev](https://jira.spring.io/secure/ViewProfile.jspa?name=rstoya05-aop)** opened **[SPR-17424](https://jira.spring.io/browse/SPR-17424?redirect=false)** and commented  The request writing side is using Jetty's `ContentChunk` callbacks to release the input `DataBuffer`. However the use of `flatMap` from `writeAndFlushWith` could prefetch and requires a `Flux#onDiscard` hook.  ---  **Affects:** 5.1.1  This issue is a sub-task of #21941","closed","type: task,","spring-projects-issues","2018-10-23T16:48:40Z","2019-01-11T13:17:13Z"
"","21943","Review DataBuffer handling in Servlet and Undertow server adapters [SPR-17410]","**[Rossen Stoyanchev](https://jira.spring.io/secure/ViewProfile.jspa?name=rstoya05-aop)** opened **[SPR-17410](https://jira.spring.io/browse/SPR-17410?redirect=false)** and commented  For Reactor Netty, we can drop onDiscard from server request, since Reactor Netty is expected to handle this. Likewise for the Undertow which does not use Reactor Core upstream for the server request body.  Review the use of data buffers in the Reactive Streams adapter layer to ensure discarding of in-flight data buffers on error and cancellation.  ---  **Affects:** 5.0.10, 5.1.1  This issue is a sub-task of #21941  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/862dd239759053db0a6afc6c8f1703570f21a73f, https://github.com/spring-projects/spring-framework/commit/0e8ed5931de5d420180473290deaa65d59a9ea54, https://github.com/spring-projects/spring-framework/commit/36510cf80825f0fe3afc6c0800de9363920b0d8b, https://github.com/spring-projects/spring-framework/commit/8de86b7fb3407fdf6196fcc182456d5278fda65e  **Backported to:** [5.0.11](https://github.com/spring-projects/spring-framework/milestone/192?closed=1)","closed","type: task,","spring-projects-issues","2018-10-18T20:02:52Z","2019-01-11T13:17:35Z"
"","21942","Improve guidance on working with and releasing DataBuffer's [SPR-17409]","**[Rossen Stoyanchev](https://jira.spring.io/secure/ViewProfile.jspa?name=rstoya05-aop)** opened **[SPR-17409](https://jira.spring.io/browse/SPR-17409?redirect=false)** and commented  In particular focusing on releasing in case of error and cancellation signal scenarios, for code that deals with data buffers directly, i.e. outside of the built-in codecs. This could be custom encocders or decoders, a WebSocketHandler processing DataBuffers, or any other code (e.g. Spring Cloud Gateway) that handles DataBuffer's in a pipeline with operators that might do pre-fetching and queuing like flatMap.  ---  **Affects:** 5.0.10, 5.1.1  This issue is a sub-task of #21941  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/4faee165db315afe47fc2daca4e1db41ec256c0d, https://github.com/spring-projects/spring-framework/commit/8223ed38c8e99a03268ce22862d8faaa602cca0c","closed","type: documentation,","spring-projects-issues","2018-10-18T19:54:06Z","2019-01-11T13:18:03Z"
"","21941","Review DataBuffer handling code for proper release in case of error or cancellation [SPR-17408]","**[Rossen Stoyanchev](https://jira.spring.io/secure/ViewProfile.jspa?name=rstoya05-aop)** opened **[SPR-17408](https://jira.spring.io/browse/SPR-17408?redirect=false)** and commented  Recent, related efforts on this topic include #21563, #21779, and #21322, but those changes needs some refinement plus a comprehensive review of all `DataBuffer` handling code with an eye towards error and cancellation signal cases.  This is an umbrella ticket with sub-tasks: 1. #21944 `DataBufferUtils`. 2. #21943 `ReactorServerHttpRequest` to drop the onDiscard hook. 3. #21943 Reactive Streams bridge in spring-web (Servlet, Undertow, HTTP and WebSocket). 4. #21951 Decoders and message readers. 5. #21952 Encoders and message writers. 6. #21957 Jetty `ClientHttpConnector`. 7. #21942 Update docs for releasing data buffers on error/cancellation.  For 4) and 5) above, perhaps we should consider inserting a common onDiscard at the point of using codecs to ensure consistent behavior? Of course individual codecs still need to be able to do the right thing on their own, but perhaps a hint could be passed in to indicate when onDiscard is handled externally..     ---  **Affects:** 5.0.10, 5.1.1  **Sub-tasks:** - #21942 Improve guidance on working with and releasing DataBuffer's - #21943 Review DataBuffer handling in Servlet and Undertow server adapters - #21944 Review DataBufferUtils - #21951 Review decoders and message readers - #21952 Review encoders and message writers - #21957 Review Jetty ClientHttpConnector code for buffer handling on error/cancellation  **Issue Links:** - #21563 DataBufferUtils#join could leak buffers in case of error from the source - #21322 DataBufferUtils does not release DataBuffer on error cases - #21779 Use doOnDiscard to free internally queued data buffers  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/149d416e8e7a256838c4e0a2b65c9023e31a5e3b, https://github.com/spring-projects/spring-framework/commit/488a1d45618b9d9f0ad204dfc97edca463184e8c","closed","type: enhancement,","spring-projects-issues","2018-10-18T19:43:46Z","2019-01-11T13:18:05Z"
"","21926","Remove transfer-encoding check in EncoderHttpMessageWriter and related workaround in ReactorServerHttpResponse [SPR-17393]","**[Rossen Stoyanchev](https://jira.spring.io/secure/ViewProfile.jspa?name=rstoya05-aop)** opened **[SPR-17393](https://jira.spring.io/browse/SPR-17393?redirect=false)** and commented  EncoderHttpMessageWriter computes and sets the content-length for Mono values since 5.0.5, see #21085, but also checks to make sure there is no ""transfer-encoding"" header set already. Since Reactor Netty sets ""transfer-encoding: chunked"" by default int the beginning, this became and issue, after the recent changes in 5.1.1, see -SPR-17250,- to wrap the headers of the underlying server, in turn requiring a workaround in ReactorServerHttpResponse.  While the check for whether transfer-encoding is set isn't an issue in itself, it should not be necessary. It's not a header set by the application typically. Arguably it's better to remove this check in order to be able to remove the workaround in ReactorServerHttpResponse, and essentially leave the decision for transfer-encoding to Reactor Netty.   ---  **Affects:** 5.1.1  **Issue Links:** - #21783 Improve WebFlux performance for header management - #21085 EncoderHttpMessageWriter never sets Content-Length","closed","type: enhancement,","spring-projects-issues","2018-10-16T14:28:15Z","2019-01-11T13:11:14Z"
"","22114","Improve status code handling on WebFlux router predicates [SPR-17582]","**[rodolphocouto](https://jira.spring.io/secure/ViewProfile.jspa?name=rodolphocouto)** opened **[SPR-17582](https://jira.spring.io/browse/SPR-17582?redirect=false)** and commented  The request predicates were designed to return a boolean to match the request, so the WebFlux router engine always returns the same status code (404) when the predicate returns false.  The problem is that some predicates need custom responses, for example:  ```java RequestPredicates.accept() should return 406 (Not Acceptable) RequestPredicates.contentType() should return 415 (Unsupported Media Type) RequestPredicates.GET() or POST() or any other method should return 405 (Method Not Allowed) ```  My suggestion is to redesign the RequestPredicate to be able to return customized responses to properly handle each HTTP status code.  Does it make sense?   ---  **Affects:** 5.1.3","closed","type: enhancement,","spring-projects-issues","2018-12-08T17:08:55Z","2019-01-28T16:09:28Z"
"","22039","Add unique number to WebFlux log prefix for Reactor Netty server","**[Robbert van Waveren](https://jira.spring.io/secure/ViewProfile.jspa?name=robbert)** opened **[SPR-17507](https://jira.spring.io/browse/SPR-17507?redirect=false)** and commented  Expected behavior: Every HTTP request is logged with a unique log prefix regardless of any tcp/ip connection or thread reuse.  Observed behavior: Consecutive HTTP requests from Chrome (using keep-alive) that are handled by the same reactor-http-nio thread are logged with the same log prefix.     ---  **Affects:** 5.1.2  **Attachments:** - [issue-project.zip](https://jira.spring.io/secure/attachment/26100/issue-project.zip) (_9.08 kB_)  **Issue Links:** - #22038 HTTP GET from Chrome with WebFlux Rest Controller never completes","closed","type: enhancement,","spring-projects-issues","2018-11-16T13:13:23Z","2021-01-22T08:11:44Z"
"","22038","HTTP GET from Chrome with WebFlux Rest Controller never completes [SPR-17506]","**[Robbert van Waveren](https://jira.spring.io/secure/ViewProfile.jspa?name=robbert)** opened **[SPR-17506](https://jira.spring.io/browse/SPR-17506?redirect=false)** and commented  Expected behavior: Every request is handled the same way.  Observed behavior:  When returning Mono.empty() from an `@RestController` the following occurs:  When Chrome is used to make the GET requests the first request is handled on reactor-http-nio-2 thread and seems to be handled correct. When making a second request (using F5) after that (using keep-alive) the request is handled on the same reactor-http-nio-2 thread, however this request never completes according to chrome and keeps in the ""pending"" state forever. When making another request (using F5) after that, the request is handled by reactor-http-nio-1 thread and seems to be handled correct. When making another request (using F5) after that, the request is handled by the same reactor-http-nio-1 thread and again never completes.  The behavior is repeatable, failing exactly 50% of requests (the second request on the same reactor thread).  tested using Windows 10 / Chrome 70.0.3538.102  Note that the TRACE logging actually shows the same logging for both the properly handled and the failing requests as if completed succesfully.  Furthermore all requests that seem to be handled by the same tcp/ip connection and reactor-thread also use the same log prefix for which I'll make a separate ticket.  ---  **Affects:** 5.1.2  **Attachments:** - [issue-project.zip](https://jira.spring.io/secure/attachment/26099/issue-project.zip) (_9.08 kB_)  **Issue Links:** - #21753 WebClient does not write Mono.empty() request body - #22141 ChannelSendOperator does not propagate cancel signal to the server - #22039 WebFlux log prefix improvements for Reactor Netty","closed","type: bug,","spring-projects-issues","2018-11-16T13:06:45Z","2019-01-11T13:34:06Z"
"","21954","ResourceUrlEncodingFilter does not work with HttpServletRequestWrapper [SPR-17421]","**[Rob Winch](https://jira.spring.io/secure/ViewProfile.jspa?name=rwinch)** opened **[SPR-17421](https://jira.spring.io/browse/SPR-17421?redirect=false)** and commented  This is effectively reopening of #17152 I was able to reproduce this without Spring Security via a Filter that wraps the HttpServletRequest. See https://github.com/rwinch/spring-framework-issues/tree/SPR-12550-Security/SPR-12550 There are instructions in the README for reproducing.  ---  **Affects:** 4.3.19  **Issue Links:** - #21521 ForwardedHeaderFilter does not respect Servlet forwarding - #17152 Rewriting URLs with version-resolver using JSP and c:url doesn't work when Spring dispatcher servlet is not mapped to root (_**""supersedes""**_)  **Backported to:** [5.0.11](https://github.com/spring-projects/spring-framework/milestone/192?closed=1), [4.3.21](https://github.com/spring-projects/spring-framework/milestone/170?closed=1)","closed","type: bug,","spring-projects-issues","2018-10-22T20:48:52Z","2019-01-11T13:17:09Z"
"","21959","Add config option for ""processorCache"" for embedded tomcat [SPR-17426]","**[Rimal](https://jira.spring.io/secure/ViewProfile.jspa?name=rimal)** opened **[SPR-17426](https://jira.spring.io/browse/SPR-17426?redirect=false)** and commented   --- No further details from [SPR-17426](https://jira.spring.io/browse/SPR-17426?redirect=false)","closed","status: invalid,","spring-projects-issues","2018-10-24T08:59:34Z","2019-01-12T05:17:54Z"
"","22052","Add protected method to StandaloneMockMvcBuilder to register additional MVC infrastructure components [SPR-17520]","**[Reijhanniel Jearl Campos](https://jira.spring.io/secure/ViewProfile.jspa?name=devcsrj)** opened **[SPR-17520](https://jira.spring.io/browse/SPR-17520?redirect=false)** and commented  We're heavily using Spring MVC, and its awesome Spring MVC test. Our use case is fairly advanced, for we write our custom `org.springframework.web.servlet.HandlerMapping` and `org.springframework.web.servlet.HandlerAdapter` . To make use of Spring MVC test however, we needed to duplicate `org.springframework.test.web.servlet.setup.StandaloneMockMvcBuilder` just to allow customization of such beans.  I found a ticket (#16166) that similarly describes the same, albeit only for:  ```java /**  * Configure factory to create a custom {@link RequestMappingHandlerMapping}.  * @param factory the factory  * @since 5.0  */ public StandaloneMockMvcBuilder setCustomHandlerMapping(Supplier factory) {    this.handlerMappingFactory = factory;    return this; } ```  We cannot use this method, because we're not relying on `RequestMappingHandlerMapping` and it doesn't yet have a setter for custom `HandlerAdapter` s.  Is there a better way to do this?  ---  **Affects:** 5.1.2  **Issue Links:** - #16166 Provide public methods to register and un-register handler method mappings  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/270099383be3020948967d9615143ad6d30675a7","closed","type: task,","spring-projects-issues","2018-11-20T07:19:12Z","2019-01-11T13:32:27Z"
"","21998","Support for parameter name introspection on Kotlin inline classes [SPR-17466]","**[reckter](https://jira.spring.io/secure/ViewProfile.jspa?name=reckter)** opened **[SPR-17466](https://jira.spring.io/browse/SPR-17466?redirect=false)** and commented  In org.springframework.core.KotlinReflectionParameterDiscoverer::get ParameterNames() spring tries to get names of parameters, by getting the kotlin function and calling getParameters() on it.  If you use the new inline class feature (since kotlin 1.3) in data classes, spring data mongo can not build the mapper, because the function mentioned above, returns null.  The cause for this is, that kotlin create a syntetic constructer as the default constructor, that unboxes the inline classes. Because of that, the ReflectJvmMapping.getKotlinFunction returns null, as the function is not a kotlin function, but a created one.  The getParameterNames function should support syntetic functions, if somehow possible, so we can use inline classes fully in the spring framework.     ---  **Affects:** 5.1.2  **Issue Links:** - #20945 Upgrade to Kotlin 1.3","open","in: kotlin,","spring-projects-issues","2018-11-05T10:17:20Z","2022-01-19T11:01:50Z"
"","21995","@RequestBody with Mono argument throws 400 BAD_REQUEST ""Request body is missing:"" [SPR-17463]","**[Ralph Schaer](https://jira.spring.io/secure/ViewProfile.jspa?name=ralsa)** opened **[SPR-17463](https://jira.spring.io/browse/SPR-17463?redirect=false)** and commented  In a Spring Boot application with reactive web I have a POST endpoint with a request body of type Mono. This works fine with Spring Boot 2.0.6 (Spring 5.0.10). But when I upgraded to Spring Boot 2.1.0 (Spring 5.1.2) the application throws an error ""Request body is missing""     To reproduce the problem create a Spring Boot 2.1.0 application with Spring Initializr and add ""Reactive Web"" as sole dependency.   Then add a PostMapping method to the main class  ``` @SpringBootApplication @RestController public class DemoApplication { 	public static void main(String[] args) { 		SpringApplication.run(DemoApplication.class, args); 	} 	     @PostMapping(""/register"")     public void register(@RequestBody Mono token) {         token.subscribe(System.out::println);     }	 } ```  When you call this endpoint with curl the application throws an error  ``` curl -v -d ""token"" -H ""Content-Type: text/plain"" http://localhost:8080/register ```  ``` reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.web.server.ServerWebInputException: 400 BAD_REQUEST ""Request body is missing: public void com.example.demo.DemoApplication.register(reactor.core.publisher.Mono)"" Caused by: org.springframework.web.server.ServerWebInputException: 400 BAD_REQUEST ""Request body is missing: public void com.example.demo.DemoApplication.register(reactor.core.publisher.Mono)""         at org.springframework.web.reactive.result.method.annotation.AbstractMessageReaderArgumentResolver.handleMissingBody(AbstractMessageReaderArgumentResolver.java:223) ~[spring-webflux-5.1.2.RELEASE.jar:5.1.2.RELEASE]         at org.springframework.web.reactive.result.method.annotation.AbstractMessageReaderArgumentResolver.lambda$readBody$5(AbstractMessageReaderArgumentResolver.java:188) ~[spring-webflux-5.1.2.RELEASE.jar:5.1.2.RELEASE] ```  When you change the Spring Boot dependency to 2.0.6.RELEASE and run the same curl command you see that it works without any problems.   ---  **Affects:** 5.1.2","closed","status: invalid,","spring-projects-issues","2018-11-04T09:23:46Z","2021-10-25T05:47:22Z"
"","22060","Efficient type matching support for large number of beans [SPR-17528]","**[Rahul Shinde](https://jira.spring.io/secure/ViewProfile.jspa?name=rsjira22)** opened **[SPR-17528](https://jira.spring.io/browse/SPR-17528?redirect=false)** and commented  During profiling the application, it was found that around 19% of time was spent in the various BeanFactory methods. See JFR snapshot:  ![sbf_jfr_before.png](https://jira.spring.io/secure/attachment/26106/sbf_jfr_before.png)  Our application has over 10K beans and around 3K beans loaded at startup (~10% of them during and remaining immediately after ApplicationContext refresh). The current implementation of _DefaultListableBeanFactory::doGetBeanNamesForType_ invokes _AbstractBeanFactory::predictBeanType_ twice for every type lookup (one via _isFactoryBean_ and the other during _isTypeMatch_) As the _doGetBeanNamesForType_ implementation iterates over all the available bean definitions, in our case, the number of calls to predictBeanType quickly escalate to 10K * 3K * 2 = 60M.  The existing cache inside of _DefaultListableBeanFactory_ does help for subsequent lookups though. I initially tried to minimize the number of calls to predictBeanType by adding a caching layer however the code in doGetBeanNamesForType seemed a bit hard to understand given the various corner cases it deals with.  ![sbf_code.png](https://jira.spring.io/secure/attachment/26108/sbf_code.png) (_107.01 kB_)  It gave 10 seconds improvements however the lookup in the cache started showing up as the new hotspot.  Since the iteration over all the 10K bean definitions for every type lookup seemed to be the root cause, after several attempts, this is what I came up with (See PR). The implementation goes over all the bean definitions and caches the type to name mapping once. It grabs the super types as well to avoid supplying a partial list of bean names in some cases.  Here is the JFR Hot Methods after applying the change:  ![sbf_jfr_after.png](https://jira.spring.io/secure/attachment/26107/sbf_jfr_after.png) (_89.60 kB_)  This has helped speed up our application by around 25 seconds with no other change. So far, it has been working fine for us on all our automated tests. I would like to get your opinion on the change and if you think this would cause any long term breakages as Spring evolves.  Also it would be great if the core implementation itself can support more efficient lookups for types with sizeable beans in the registry.     ---  **Affects:** 5.1 GA  **Attachments:** - [sbf_code.png](https://jira.spring.io/secure/attachment/26108/sbf_code.png) (_107.01 kB_) - [sbf_jfr_after.png](https://jira.spring.io/secure/attachment/26107/sbf_jfr_after.png) (_89.60 kB_) - [sbf_jfr_before.png](https://jira.spring.io/secure/attachment/26106/sbf_jfr_before.png) (_140.60 kB_)  **Issue Links:** - #17677 Autowiring with `@Autowired`/`@Inject` get much slower than with `@Resource` as the number of classes increases - #18188 Improve performance of #getBeanNamesForType() while the BeanFactory configuration is not yet frozen  **Referenced from:** pull request https://github.com/spring-projects/spring-framework/pull/2021","open","type: enhancement,","spring-projects-issues","2018-11-21T21:28:42Z","2020-09-14T21:53:36Z"
"","22082","Equals checks to MediaType.ALL should not be affected the presence of parameters [SPR-17550]","**[Raffaele Litto](https://jira.spring.io/secure/ViewProfile.jspa?name=r_litto)** opened **[SPR-17550](https://jira.spring.io/browse/SPR-17550?redirect=false)** and commented  I discovered this while trying to create an annotation for non-json Controllers with `@RequestMapping(accept=""!application/json"")` When the RequestMappingInfo invokes  ```java ProducesRequestCondition produces = this.producesCondition.getMatchingCondition(request);  ```  the code checks if the accepted media type contains MEDIA_ALL. But in my case the header contained a quality argument:  ``` text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8  ```  and, after parsing, resulted in a mediatype **/** with quality 0.8 this failed to match with the check at the end of the ProducesRequestCondition  ```java 		else if (acceptedMediaTypes.contains(MediaType.ALL)) { 			return EMPTY_CONDITION; 		}  ```  From what I see there are multiple places where there is an attempt to match MediaType ignoring the fact that they might have a quality on them. Either there should be an overload of .equals and .hashcode to ignore the quality, or create an ad-hoc method to compare them without considering the quality and use it every time they check for presence inside a collection   ---  **Affects:** 4.3.20, 5.1.3  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/4b24bcb79983dce73c0d957ab9f9ccb37c1ca955","closed","type: enhancement,","spring-projects-issues","2018-11-29T19:29:20Z","2019-01-09T13:06:52Z"
"","21988","ApplicationListenerMethodAdapter can't be removed  after targetBean destroy [SPR-17456]","**[Pramy](https://jira.spring.io/secure/ViewProfile.jspa?name=pramy)** opened **[SPR-17456](https://jira.spring.io/browse/SPR-17456?redirect=false)** and commented  I know a bean implement `ApplicationListener` will be remove from Context when it destroy,  but `ApplicationListenerMethodAdapter` can't be remove   ---  1.ParentContext invoke close method  2.Listener destroy    it did not implements ApplicationListener when use ` @EventListener`  3.NamedContext destroy    it will invoke close method and publish close event, and parentContext will also publish close   event, `ApplicationListenerMethodAdapter` working will invoke `conetext#getBean`  ---  ```java @SpringBootApplication public class DemoApplication {      public static void main(String[] args) {         ConfigurableApplicationContext context = SpringApplication.run(DemoApplication.class, args);         context.close();     }      class Listener implements DisposableBean {          @EventListener(ContextClosedEvent.class)         public void close(ApplicationEvent event) {             System.out.println(""---------------invoke listener""+event );         }         @Override         public void destroy() throws Exception {             System.out.println(""--------------------listener destroy-----------------------"");         }     }       //1.insure NamedContextFactory initialize before listener     //2.insure NamedContextFactory destroy after listener     @Bean     public Listener listener() {         //3.initialize context values         namedContextFactory().getInstance(""demo"",DemoApplication.class);         return new Listener();     }      @Bean     public NamedContextFactory namedContextFactory() {         return new NamedContextFactory(Config.class         ,""demo"",""demo"") {};     }      @Configuration     class Config{} } ```  ---  **Affects:** 5.0.9, 5.0.10, 5.1.1, 5.1.2  **Reference URL:** https://github.com/Pramy/spring-listener-bug  **Attachments:** - [demo.rar](https://jira.spring.io/secure/attachment/26082/demo.rar) (_32.98 kB_)  **Referenced from:** pull request https://github.com/spring-projects/spring-framework/pull/2006","open","in: core,","spring-projects-issues","2018-11-02T05:03:08Z","2019-01-13T04:07:00Z"
"","21994","LocalValidatorFactoryBean doesn't implement ValidatorFactory.getClockProvider() [SPR-17462]","**[pjverity](https://jira.spring.io/secure/ViewProfile.jspa?name=pjverity)** opened **[SPR-17462](https://jira.spring.io/browse/SPR-17462?redirect=false)** and commented  Using spring-boot 2.1.0.RELEASE, I use the starter:  `` `  org.springframework.boot` `  spring-boot-starter-validation` ``  This places `javax.validation:validation-api:2.0.1.Final` on the classpath. That version of the validation API has an interface method `ValidatorFactory.``ClockProvider getClockProvider()` which isn't implemented by `LocalValidatorFactoryBean`.  The code is here:  https://github.com/spring-projects/spring-framework/blob/a0880f7ea97a0329aaf1b7dbe0877eca10f060f8/spring-context/src/main/java/org/springframework/validation/beanvalidation/LocalValidatorFactoryBean.java#L87   ---  **Affects:** 5.1.2  **Reference URL:** https://github.com/spring-projects/spring-framework/blob/a0880f7ea97a0329aaf1b7dbe0877eca10f060f8/spring-context/src/main/java/org/springframework/validation/beanvalidation/LocalValidatorFactoryBean.java#L87","closed","in: core,","spring-projects-issues","2018-11-02T18:54:19Z","2020-11-19T06:59:53Z"
"","22184","UnsupportedMediaTypeException for application/fastinfoset Content-Type in reactive web client [SPR-17655]","**[Piyush Parmar](https://jira.spring.io/secure/ViewProfile.jspa?name=piyparmar)** opened **[SPR-17655](https://jira.spring.io/browse/SPR-17655?redirect=false)** and commented  ``` org.springframework.web.reactive.function.UnsupportedMediaTypeException: Content type 'application/fastinfoset' not supported for bodyType=org.springframework.web.reactive.function.UnsupportedMediaTypeException: Content type 'application/fastinfoset' not supported for bodyType=*  at org.springframework.web.reactive.function.BodyInserters.unsupportedError(BodyInserters.java:300)  at org.springframework.web.reactive.function.BodyInserters.lambda$writeWithMessageWriters$9(BodyInserters.java:290) at java.util.Optional.orElseGet(Optional.java:267)  at org.springframework.web.reactive.function.BodyInserters.writeWithMessageWriters(BodyInserters.java:290)  at org.springframework.web.reactive.function.BodyInserters.lambda$fromObject$1(BodyInserters.java:85)  at org.springframework.web.reactive.function.client.DefaultClientRequestBuilder$BodyInserterRequest.writeTo(DefaultClientRequestBuilder.java:249)  at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$exchange$1(ExchangeFunctions.java:103)  at org.springframework.http.client.reactive.ReactorClientHttpConnector.lambda$connect$2(ReactorClientHttpConnector.java:110)  at reactor.netty.http.client.HttpClientConnect$HttpClientHandler.requestWithBody(HttpClientConnect.java:529)  at reactor.netty.http.client.HttpClientConnect$HttpObserver.lambda$onStateChange$0(HttpClientConnect.java:396) at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:44) ```  --- No further details from [SPR-17655](https://jira.spring.io/browse/SPR-17655?redirect=false)","closed","status: invalid,","spring-projects-issues","2019-01-09T13:26:56Z","2019-01-12T05:13:05Z"
"","22155","MockMvcResultMatchers.forwardedUrl argument is not declared as nullable [SPR-17623]","**[Piotr Turski](https://jira.spring.io/secure/ViewProfile.jspa?name=piotr.turski)** opened **[SPR-17623](https://jira.spring.io/browse/SPR-17623?redirect=false)** and commented  ```java MockMvcResultMatchers.forwardedUrl(null) ```  according to this [jira ticket response](https://jira.spring.io/browse/SPR-10695?focusedCommentId=91886&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-91886) `null` parameter is allowed and advised   but [package-info](https://github.com/spring-projects/spring-framework/blob/a89e716cc71a8741385a0224b5d7eb7ce009e11a/spring-test/src/main/java/org/springframework/test/web/servlet/result/package-info.java) contains `@NonNullApi` so kotlin forbids using null     more details in [stackoverflow post](https://stackoverflow.com/questions/53907554/kotlin-wrong-nullability-inference-without-any-generics)            ---  **Affects:** 5.0.11, 5.1.3  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/49cc5f2f81316c437aee9fb40fa94f32d2f752bc, https://github.com/spring-projects/spring-framework/commit/7a7958f2758df2fd6630d840d1ce11ada880d1de  **Backported to:** [5.0.12](https://github.com/spring-projects/spring-framework/milestone/193?closed=1)","closed","type: bug,","spring-projects-issues","2018-12-25T01:34:58Z","2019-01-09T10:36:46Z"
"","22059","CachingMetadataReaderFactory does not release shared resource cache after context refresh [SPR-17527]","**[Philippe Julien](https://jira.spring.io/secure/ViewProfile.jspa?name=philjulien)** opened **[SPR-17527](https://jira.spring.io/browse/SPR-17527?redirect=false)** and commented  org.springframework.core.type.classreading.CachingMetadataReaderFactory.clearCache() was modified in Spring 5 to only clear the metaDataReaderCache of the LocalResourceCache instance type. When created with the constructor that takes a ResourceLoader as an argument, CachingMetadataReaderFactory will keep a strong reference on the Map that it got from the DefaultResourceLoader. This would be fine if DefaultResourceLoader.clearResourceCaches(), that is called after a context refresh, cleared the resourceCaches and the inner map that it contains, but this is not the case. So CachingMetadataReaderFactory.metaDataReaderCache remain in memory after context refresh.  In our application this increased the memory footprint by about 100mb after we updated to Spring 5.  A possible fix would be for CachingMetadataReaderFactory.clearCache() to set its metadataReaderCache to null if it's not an instance of LocalResourceCache.  ---  **Affects:** 5.0.10, 5.1.2  **Issue Links:** - #22058 CachingMetadataReaderFactory metadataReaderCache isn't cleaned up after context refresh when using the resource loader cache (_**""is duplicated by""**_)  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/23d104936390da07eedc832b5b64ecee1cdf8634, https://github.com/spring-projects/spring-framework/commit/262c702da4588e5f467fd24774357113379666b2  **Backported to:** [5.0.11](https://github.com/spring-projects/spring-framework/milestone/192?closed=1)","closed","in: core,","spring-projects-issues","2018-11-21T19:45:22Z","2019-01-11T13:32:40Z"
"","22058","CachingMetadataReaderFactory metadataReaderCache isn't cleaned up after context refresh when using the resource loader cache [SPR-17526]","**[Philippe Julien](https://jira.spring.io/secure/ViewProfile.jspa?name=philjulien)** opened **[SPR-17526](https://jira.spring.io/browse/SPR-17526?redirect=false)** and commented  CachingMetadataReaderFactory   keep a strong reference on  ---  **Issue Links:** - #22059 CachingMetadataReaderFactory does not release shared resource cache after context refresh (_**""duplicates""**_)","closed","in: core,","spring-projects-issues","2018-11-21T19:45:21Z","2019-01-12T16:44:13Z"
"","21946","SpringFactoriesLoader should tolerate whitespace [SPR-17413]","**[Philipp Foermer](https://jira.spring.io/secure/ViewProfile.jspa?name=pfoermer)** opened **[SPR-17413](https://jira.spring.io/browse/SPR-17413?redirect=false)** and commented  The original issue was raised at https://github.com/spring-projects/spring-boot/issues/14903 for Spring Boot 1.5.13.RELEASE, but mentioned, that the issue must be created for springframework.  **Scenario:** Provided a custom auto configuration definition in META-INF/spring.factories of the following form for Spring Boot: ""org.springframework.boot.autoconfigure.EnableAutoConfiguration=FQNClassA, FQNClassB"".  **Problem:** Spring failed to load the configuration class "" FQNClassB"", because no whitespace trimming was done.  **Proposed improvement:** As a java identifier can not have got any whitespace in it, whitespace trimming should be applied for a class token by SpringFactoriesLoader. In my opinion this would make a definition more robust, as whitespace mistakes are harder to review and this might be an unexpected behaviour from user perspective as whitespace is expected to be ignored.    ---  **Affects:** 4.3.17  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/dd2ce20687f14f1a501c54ef75eeb56d1bd501f5, https://github.com/spring-projects/spring-framework/commit/110796375bee6cfa5f8f3e6b22b7381ad42b1beb, https://github.com/spring-projects/spring-framework/commit/46bc145196a98e9b90b31896203bf2ff26d7fa2d  **Backported to:** [5.0.11](https://github.com/spring-projects/spring-framework/milestone/192?closed=1), [4.3.21](https://github.com/spring-projects/spring-framework/milestone/170?closed=1)","closed","type: enhancement,","spring-projects-issues","2018-10-19T09:27:03Z","2018-10-29T11:07:58Z"
"","21925","DefaultListableBeanFactory.getBeanNamesForAnnotation : Improve javadoc [SPR-17392]","**[Philipp Foermer](https://jira.spring.io/secure/ViewProfile.jspa?name=pfoermer)** opened **[SPR-17392](https://jira.spring.io/browse/SPR-17392?redirect=false)** and commented  For ""org.springframework.beans.factory.support.DefaultListableBeanFactory"" the javadoc of  ```java public java.lang.String[] getBeanNamesForAnnotation(java.lang.Class annotationType) ```  defines:  > Find all names of beans whose Class has the supplied Annotation type, without creating any bean instances yet.  It would be nice, if the wording is precised, as a registered FactoryBean BeanDefinition is eagerly initialized, if the method is invoked.  I noticed this unexpected behaviour in a custom `@Conditional` Condition implementation, causing broken factory bean instances, because required preconditions have not been initialized before factory bean was eagerly initialized.  It seems that the eager initialization issue as been worked around in ""org.springframework.boot.autoconfigure.condition.BeanTypeRegistry"" by missing this case.   ---  **Affects:** 4.3.17  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/5a6c081cfe06c6f5ed92ede4f507cc8b25125774, https://github.com/spring-projects/spring-framework/commit/cd664673ed18a106e42a630e5dde0a9c65cfff69, https://github.com/spring-projects/spring-framework/commit/da23505e94e7108a7c6e16485a50f16ec66bd03a  **Backported to:** [5.0.11](https://github.com/spring-projects/spring-framework/milestone/192?closed=1), [4.3.21](https://github.com/spring-projects/spring-framework/milestone/170?closed=1)","closed","in: core,","spring-projects-issues","2018-10-16T13:53:13Z","2018-10-29T11:07:57Z"
"","22027","AnnotationUtils won't find javax annotations [SPR-17495]","**[Phil Webb](https://jira.spring.io/secure/ViewProfile.jspa?name=pwebb)** opened **[SPR-17495](https://jira.spring.io/browse/SPR-17495?redirect=false)** and commented  Given a class `Foo` annotated with `javax.transaction.Transactional` calling:  ```java AnnotatedElementUtils.getMergedAnnotation(Foo.class, javax.interceptor.InterceptorBinding.class) ```  Will result in `null` despite the fact that `Transactional` is meta-annotated with `InterceptorBinding`.  The root cause appears to be `AnnotationUtils.hasPlainJavaAnnotationsOnly` which does `name.startsWith(""java"")` and perhaps should do `name.startsWith(""java."")`.  https://github.com/spring-projects/spring-framework/blob/b9603680bc1de8d472ee463d99c11cc229dad2aa/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java#L953   ---  **Reference URL:** https://github.com/spring-projects/spring-boot/issues/15175  **Referenced from:** commits https://github.com/spring-projects/spring-boot/commit/79b5dd3ae701649f4a926827db84a6b6c7d9ffc0","closed","status: declined,","spring-projects-issues","2018-11-14T22:37:50Z","2019-03-11T18:20:35Z"
"","22002","Provide an memory efficient alternative to ClientHttpRequestInterceptor","**[Phil Webb](https://jira.spring.io/secure/ViewProfile.jspa?name=pwebb)** opened **[SPR-17470](https://jira.spring.io/browse/SPR-17470?redirect=false)** and commented  See [this issue](https://github.com/spring-io/artifactory-resource/issues/27) for some background.  Currently the `BasicAuthenticationInterceptor` class is a `ClientHttpRequestInterceptor` which causes the entire body to be read into a byte array and can cause `OutOfMemoryError` errors. I've managed to work around the issue by [using a AbstractClientHttpRequestFactoryWrapper](https://github.com/spring-io/artifactory-resource/commit/62215780e903bac4eb13c7b5f4ccf4aba8deb540), but it would be really nice if there was a better way to do this. Perhaps we can create an alternative `ClientHttpRequestInterceptor` that can be used when only headers need to be changed.   ---  **Reference URL:** https://github.com/spring-io/artifactory-resource/issues/27","closed","type: enhancement,","spring-projects-issues","2018-11-05T19:31:33Z","2019-09-12T23:03:28Z"
"","21963","SpringBeanContainer for Hibernate 5 does not deal with NoSuchBeanDefinitionException [SPR-17430]","**[Phil Webb](https://jira.spring.io/secure/ViewProfile.jspa?name=pwebb)** opened **[SPR-17430](https://jira.spring.io/browse/SPR-17430?redirect=false)** and commented  Originally raised [as a Spring Boot issue](https://github.com/spring-projects/spring-boot/issues/14935) with a [sample application](https://github.com/spring-projects/spring-boot/files/2505904/hibernate-search-issues.zip).  The fallback logic fixed in #21548 works by catching `BeanCreationException` but unfortunately that doesn't seem to cover all cases. We probably need to additionally catch `NoSuchBeanDefinitionException`.  The sample application provided throws the following stacktrace:  ``` java.lang.reflect.InvocationTargetException     at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)     at jdk.internal.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)     at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke (Method.java:566)     at org.springframework.boot.maven.AbstractRunMojo$LaunchRunner.run (AbstractRunMojo.java:558)     at java.lang.Thread.run (Thread.java:834) Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.search.exception.SearchException: HSEARCH000139: Unable to instantiate FieldBridge for uid of class java.util.UUID     at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean (AbstractAutowireCapableBeanFactory.java:1745)     at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean (AbstractAutowireCapableBeanFactory.java:576)     at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean (AbstractAutowireCapableBeanFactory.java:498)     at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0 (AbstractBeanFactory.java:320)     at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton (DefaultSingletonBeanRegistry.java:222)     at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean (AbstractBeanFactory.java:318)     at org.springframework.beans.factory.support.AbstractBeanFactory.getBean (AbstractBeanFactory.java:199)     at org.springframework.context.support.AbstractApplicationContext.getBean (AbstractApplicationContext.java:1083)     at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization (AbstractApplicationContext.java:853)     at org.springframework.context.support.AbstractApplicationContext.refresh (AbstractApplicationContext.java:546)     at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh (ServletWebServerApplicationContext.java:140)     at org.springframework.boot.SpringApplication.refresh (SpringApplication.java:771)     at org.springframework.boot.SpringApplication.refreshContext (SpringApplication.java:395)     at org.springframework.boot.SpringApplication.run (SpringApplication.java:314)     at config.Application.main (Application.java:46)     at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)     at jdk.internal.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)     at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke (Method.java:566)     at org.springframework.boot.maven.AbstractRunMojo$LaunchRunner.run (AbstractRunMojo.java:558)     at java.lang.Thread.run (Thread.java:834) Caused by: javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.search.exception.SearchException: HSEARCH000139: Unable to instantiate FieldBridge for uid of class java.util.UUID     at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory (AbstractEntityManagerFactoryBean.java:402)     at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet (AbstractEntityManagerFactoryBean.java:377)     at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet (LocalContainerEntityManagerFactoryBean.java:341)     at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods (AbstractAutowireCapableBeanFactory.java:1804)     at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean (AbstractAutowireCapableBeanFactory.java:1741)     at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean (AbstractAutowireCapableBeanFactory.java:576)     at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean (AbstractAutowireCapableBeanFactory.java:498)     at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0 (AbstractBeanFactory.java:320)     at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton (DefaultSingletonBeanRegistry.java:222)     at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean (AbstractBeanFactory.java:318)     at org.springframework.beans.factory.support.AbstractBeanFactory.getBean (AbstractBeanFactory.java:199)     at org.springframework.context.support.AbstractApplicationContext.getBean (AbstractApplicationContext.java:1083)     at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization (AbstractApplicationContext.java:853)     at org.springframework.context.support.AbstractApplicationContext.refresh (AbstractApplicationContext.java:546)     at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh (ServletWebServerApplicationContext.java:140)     at org.springframework.boot.SpringApplication.refresh (SpringApplication.java:771)     at org.springframework.boot.SpringApplication.refreshContext (SpringApplication.java:395)     at org.springframework.boot.SpringApplication.run (SpringApplication.java:314)     at config.Application.main (Application.java:46)     at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)     at jdk.internal.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)     at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke (Method.java:566)     at org.springframework.boot.maven.AbstractRunMojo$LaunchRunner.run (AbstractRunMojo.java:558)     at java.lang.Thread.run (Thread.java:834) Caused by: org.hibernate.search.exception.SearchException: HSEARCH000139: Unable to instantiate FieldBridge for uid of class java.util.UUID     at org.hibernate.search.bridge.impl.BridgeFactory.createFieldBridgeFromAnnotation (BridgeFactory.java:400)     at org.hibernate.search.bridge.impl.BridgeFactory.findExplicitFieldBridge (BridgeFactory.java:350)     at org.hibernate.search.bridge.impl.BridgeFactory.buildFieldBridge (BridgeFactory.java:203)     at org.hibernate.search.engine.metadata.impl.AnnotationMetadataProvider.bindFieldAnnotation (AnnotationMetadataProvider.java:1335)     at org.hibernate.search.engine.metadata.impl.AnnotationMetadataProvider.checkForField (AnnotationMetadataProvider.java:1258)     at org.hibernate.search.engine.metadata.impl.AnnotationMetadataProvider.initializeMemberLevelAnnotations (AnnotationMetadataProvider.java:1065)     at org.hibernate.search.engine.metadata.impl.AnnotationMetadataProvider.initializeClass (AnnotationMetadataProvider.java:615)     at org.hibernate.search.engine.metadata.impl.AnnotationMetadataProvider.doGetTypeMetadataFor (AnnotationMetadataProvider.java:192)     at org.hibernate.search.engine.metadata.impl.AnnotationMetadataProvider.getTypeMetadataFor (AnnotationMetadataProvider.java:181)     at org.hibernate.search.engine.metadata.impl.AnnotationMetadataProvider.getTypeMetadataFor (AnnotationMetadataProvider.java:165)     at org.hibernate.search.spi.SearchIntegratorBuilder.initDocumentBuilders (SearchIntegratorBuilder.java:445)     at org.hibernate.search.spi.SearchIntegratorBuilder.createNewFactoryState (SearchIntegratorBuilder.java:244)     at org.hibernate.search.spi.SearchIntegratorBuilder.buildNewSearchFactory (SearchIntegratorBuilder.java:200)     at org.hibernate.search.spi.SearchIntegratorBuilder.buildSearchIntegrator (SearchIntegratorBuilder.java:128)     at org.hibernate.search.hcore.impl.HibernateSearchSessionFactoryObserver.boot (HibernateSearchSessionFactoryObserver.java:127)     at org.hibernate.search.hcore.impl.HibernateSearchSessionFactoryObserver.sessionFactoryCreated (HibernateSearchSessionFactoryObserver.java:94)     at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated (SessionFactoryObserverChain.java:35)     at org.hibernate.internal.SessionFactoryImpl. (SessionFactoryImpl.java:372)     at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build (SessionFactoryBuilderImpl.java:467)     at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build (EntityManagerFactoryBuilderImpl.java:939)     at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory (SpringHibernateJpaPersistenceProvider.java:57)     at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory (LocalContainerEntityManagerFactoryBean.java:365)     at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory (AbstractEntityManagerFactoryBean.java:390)     at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet (AbstractEntityManagerFactoryBean.java:377)     at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet (LocalContainerEntityManagerFactoryBean.java:341)     at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods (AbstractAutowireCapableBeanFactory.java:1804)     at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean (AbstractAutowireCapableBeanFactory.java:1741)     at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean (AbstractAutowireCapableBeanFactory.java:576)     at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean (AbstractAutowireCapableBeanFactory.java:498)     at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0 (AbstractBeanFactory.java:320)     at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton (DefaultSingletonBeanRegistry.java:222)     at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean (AbstractBeanFactory.java:318)     at org.springframework.beans.factory.support.AbstractBeanFactory.getBean (AbstractBeanFactory.java:199)     at org.springframework.context.support.AbstractApplicationContext.getBean (AbstractApplicationContext.java:1083)     at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization (AbstractApplicationContext.java:853)     at org.springframework.context.support.AbstractApplicationContext.refresh (AbstractApplicationContext.java:546)     at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh (ServletWebServerApplicationContext.java:140)     at org.springframework.boot.SpringApplication.refresh (SpringApplication.java:771)     at org.springframework.boot.SpringApplication.refreshContext (SpringApplication.java:395)     at org.springframework.boot.SpringApplication.run (SpringApplication.java:314)     at config.Application.main (Application.java:46)     at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)     at jdk.internal.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)     at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke (Method.java:566)     at org.springframework.boot.maven.AbstractRunMojo$LaunchRunner.run (AbstractRunMojo.java:558)     at java.lang.Thread.run (Thread.java:834) Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.locationguru.app.model.UUIDBridge' available     at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean (DefaultListableBeanFactory.java:343)     at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean (DefaultListableBeanFactory.java:335)     at org.springframework.orm.hibernate5.SpringBeanContainer.createBean (SpringBeanContainer.java:154)     at org.springframework.orm.hibernate5.SpringBeanContainer.getBean (SpringBeanContainer.java:109)     at org.hibernate.search.cfg.impl.HibernateOrmBeanContainerBeanResolver.resolve (HibernateOrmBeanContainerBeanResolver.java:63)     at org.hibernate.search.engine.service.beanresolver.impl.ReflectionFallbackBeanResolver.resolve (ReflectionFallbackBeanResolver.java:40)     at org.hibernate.search.bridge.impl.BridgeFactory.createFieldBridgeFromAnnotation (BridgeFactory.java:371)     at org.hibernate.search.bridge.impl.BridgeFactory.findExplicitFieldBridge (BridgeFactory.java:350)     at org.hibernate.search.bridge.impl.BridgeFactory.buildFieldBridge (BridgeFactory.java:203)     at org.hibernate.search.engine.metadata.impl.AnnotationMetadataProvider.bindFieldAnnotation (AnnotationMetadataProvider.java:1335)     at org.hibernate.search.engine.metadata.impl.AnnotationMetadataProvider.checkForField (AnnotationMetadataProvider.java:1258)     at org.hibernate.search.engine.metadata.impl.AnnotationMetadataProvider.initializeMemberLevelAnnotations (AnnotationMetadataProvider.java:1065)     at org.hibernate.search.engine.metadata.impl.AnnotationMetadataProvider.initializeClass (AnnotationMetadataProvider.java:615)     at org.hibernate.search.engine.metadata.impl.AnnotationMetadataProvider.doGetTypeMetadataFor (AnnotationMetadataProvider.java:192)     at org.hibernate.search.engine.metadata.impl.AnnotationMetadataProvider.getTypeMetadataFor (AnnotationMetadataProvider.java:181)     at org.hibernate.search.engine.metadata.impl.AnnotationMetadataProvider.getTypeMetadataFor (AnnotationMetadataProvider.java:165)     at org.hibernate.search.spi.SearchIntegratorBuilder.initDocumentBuilders (SearchIntegratorBuilder.java:445)     at org.hibernate.search.spi.SearchIntegratorBuilder.createNewFactoryState (SearchIntegratorBuilder.java:244)     at org.hibernate.search.spi.SearchIntegratorBuilder.buildNewSearchFactory (SearchIntegratorBuilder.java:200)     at org.hibernate.search.spi.SearchIntegratorBuilder.buildSearchIntegrator (SearchIntegratorBuilder.java:128)     at org.hibernate.search.hcore.impl.HibernateSearchSessionFactoryObserver.boot (HibernateSearchSessionFactoryObserver.java:127)     at org.hibernate.search.hcore.impl.HibernateSearchSessionFactoryObserver.sessionFactoryCreated (HibernateSearchSessionFactoryObserver.java:94)     at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated (SessionFactoryObserverChain.java:35)     at org.hibernate.internal.SessionFactoryImpl. (SessionFactoryImpl.java:372)     at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build (SessionFactoryBuilderImpl.java:467)     at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build (EntityManagerFactoryBuilderImpl.java:939)     at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory (SpringHibernateJpaPersistenceProvider.java:57)     at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory (LocalContainerEntityManagerFactoryBean.java:365)     at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory (AbstractEntityManagerFactoryBean.java:390)     at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet (AbstractEntityManagerFactoryBean.java:377)     at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet (LocalContainerEntityManagerFactoryBean.java:341)     at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods (AbstractAutowireCapableBeanFactory.java:1804)     at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean (AbstractAutowireCapableBeanFactory.java:1741)     at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean (AbstractAutowireCapableBeanFactory.java:576)     at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean (AbstractAutowireCapableBeanFactory.java:498)     at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0 (AbstractBeanFactory.java:320)     at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton (DefaultSingletonBeanRegistry.java:222)     at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean (AbstractBeanFactory.java:318)     at org.springframework.beans.factory.support.AbstractBeanFactory.getBean (AbstractBeanFactory.java:199)     at org.springframework.context.support.AbstractApplicationContext.getBean (AbstractApplicationContext.java:1083)     at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization (AbstractApplicationContext.java:853)     at org.springframework.context.support.AbstractApplicationContext.refresh (AbstractApplicationContext.java:546)     at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh (ServletWebServerApplicationContext.java:140)     at org.springframework.boot.SpringApplication.refresh (SpringApplication.java:771)     at org.springframework.boot.SpringApplication.refreshContext (SpringApplication.java:395)     at org.springframework.boot.SpringApplication.run (SpringApplication.java:314)     at config.Application.main (Application.java:46)     at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)     at jdk.internal.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)     at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke (Method.java:566)     at org.springframework.boot.maven.AbstractRunMojo$LaunchRunner.run (AbstractRunMojo.java:558)     at java.lang.Thread.run (Thread.java:834) ```  ---  **Affects:** 5.1.1  **Reference URL:** https://github.com/spring-projects/spring-boot/issues/14935  **Issue Links:** - #21548 org.springframework.orm.hibernate5.SpringBeanContainer ignores the fallback bean instance producer  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/3681d58e98797f67592f930fa3b11229a7876a18","closed","type: bug,","spring-projects-issues","2018-10-25T00:25:35Z","2019-01-11T13:16:25Z"
"","21949","Support for bare double dash in argument parsing with SimpleCommandLineArgsParser [SPR-17416]","**[Phil Webb](https://jira.spring.io/secure/ViewProfile.jspa?name=pwebb)** opened **[SPR-17416](https://jira.spring.io/browse/SPR-17416?redirect=false)** and commented  Originally raise [as a Spring Boot issue](https://github.com/spring-projects/spring-boot/issues/14909):  I would like Spring Boot application to support guideline 10 of POSIX.1-2017 - Utility argument convention section:  | The first -- argument that is not an option-argument should be accepted as a delimiter indicating the end of options. Any following arguments should be treated as operands, even if they begin with the '-' character.  The desired behavior is to recognize the `--` and leave all the arguments to the right of it alone.  Just for context: in `2.0.x` passing `--` to a SpringBoot application results in an error (sample trace below). The double dash is treated as an invalid option (whose name is zero-length) and there seems to be no way to configure this behavior.  ``` java.lang.IllegalArgumentException: Invalid argument syntax: -- 	at org.springframework.core.env.SimpleCommandLineArgsParser.parse(SimpleCommandLineArgsParser.java:75) 	at org.springframework.core.env.SimpleCommandLinePropertySource.(SimpleCommandLinePropertySource.java:90) 	at org.springframework.boot.DefaultApplicationArguments$Source.(DefaultApplicationArguments.java:76) 	at org.springframework.boot.DefaultApplicationArguments.(DefaultApplicationArguments.java:42) 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:321) 	at com.netflix.genie.GenieAgentApplication.run(GenieAgentApplication.java:63) ```    ---  **Reference URL:** https://github.com/spring-projects/spring-boot/issues/14909","open","in: core,","spring-projects-issues","2018-10-20T00:26:40Z","2019-01-11T13:17:37Z"
"","21894","""IllegalArgumentException: wrong number of arguments"" is thrown instead of NoUniqueBeanDefinitionException [SPR-17361]","**[Phil Webb](https://jira.spring.io/secure/ViewProfile.jspa?name=pwebb)** opened **[SPR-17361](https://jira.spring.io/browse/SPR-17361?redirect=false)** and commented  Until recently [this test](https://github.com/spring-projects/spring-boot/blob/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/diagnostics/analyzer/NoUniqueBeanDefinitionFailureAnalyzerTests.java#L192-L200) would throw a `NoUniqueBeanDefinitionException`. It now throws the following:  ``` 2018-10-10 12:51:25.019  WARN ${sys:PID} --- [           main] s.c.a.AnnotationConfigApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'consumer' defined in org.springframework.boot.diagnostics.analyzer.NoUniqueBeanDefinitionFailureAnalyzerTests$MethodConsumer: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [java.lang.String]: Illegal arguments to factory method 'consumer'; args: ; nested exception is java.lang.IllegalArgumentException: wrong number of arguments org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'consumer' defined in org.springframework.boot.diagnostics.analyzer.NoUniqueBeanDefinitionFailureAnalyzerTests$MethodConsumer: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [java.lang.String]: Illegal arguments to factory method 'consumer'; args: ; nested exception is java.lang.IllegalArgumentException: wrong number of arguments 	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:625) 	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:605) 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1292) 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1131) 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538) 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498) 	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) 	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) 	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) 	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) 	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:852) 	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:863) 	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546) 	at org.springframework.boot.diagnostics.analyzer.NoUniqueBeanDefinitionFailureAnalyzerTests.createFailure(NoUniqueBeanDefinitionFailureAnalyzerTests.java:110) 	at org.springframework.boot.diagnostics.analyzer.NoUniqueBeanDefinitionFailureAnalyzerTests.failureAnalysisForMethodConsumer(NoUniqueBeanDefinitionFailureAnalyzerTests.java:57) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) 	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) 	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) 	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) 	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) 	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) 	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) 	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) 	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86) 	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:538) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:760) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:460) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:206) Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [java.lang.String]: Illegal arguments to factory method 'consumer'; args: ; nested exception is java.lang.IllegalArgumentException: wrong number of arguments 	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:172) 	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:620) 	... 37 more Caused by: java.lang.IllegalArgumentException: wrong number of arguments 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) 	... 38 more  ```  ---  **Issue Links:** - #19778 Cyclic bean methods cause IllegalArgumentException instead of BeanCurrentlyInCreationException (_**""duplicates""**_)","closed","type: enhancement,","spring-projects-issues","2018-10-10T19:58:01Z","2019-01-11T13:13:14Z"
"","21948","Cannot overwrite content-type response header with WebFlux [SPR-17415]","**[Peter Luttrell](https://jira.spring.io/secure/ViewProfile.jspa?name=pluttrell)** opened **[SPR-17415](https://jira.spring.io/browse/SPR-17415?redirect=false)** and commented  I originally reported https://github.com/spring-projects/spring-boot/issues/13635 which [Brian Clozel](https://jira.spring.io/secure/ViewProfile.jspa?name=bclozel) troubleshooted and transferred to #21619 and then resolved. This resolved my original issue when I upgraded to Spring Boot 2.1.0.M4 (Spring 5.1.0.RELEASE).  But when I upgraded to Spring Boot 2.1.0.RC1 (Spring 5.1.1.RELEASE), the issue came back.   Here is sample output in the original Spring Boot report and the example in #21619 when using 2.1.0.M4/5.1.0.RELEASE:  ``` $ http localhost:8080/binary-test apiKey==bad HTTP/1.1 403 Forbidden Content-Length: 36 Content-Type: application/json;charset=UTF-8  {     ""developerMessage"": ""access denied"" }   $ http localhost:8080/test                    HTTP/1.1 400 Bad Request Content-Length: 32 Content-Type: application/json  {     ""field1"": ""test-error-response"" } ```     And here is exactly the same two calls when I only switch to 2.1.0.RC1/5.1.1.RELEASE:  ``` $ http localhost:8080/binary-test apiKey==bad HTTP/1.1 406 Not Acceptable Content-Length: 157 Content-Type: application/json;charset=UTF-8  {     ""error"": ""Not Acceptable"",     ""message"": ""Could not find acceptable representation"",     ""path"": ""/binary-test"",     ""status"": 406,     ""timestamp"": ""2018-10-19T23:33:58.349+0000"" }  $ http localhost:8080/test                    HTTP/1.1 400 Bad Request Content-Length: 32 Content-Type: text/plain;charset=UTF-8 Content-Type: application/json   http: error: LookupError: unknown encoding: UTF-8, application/json ```        ---  **Affects:** 5.1.1  **Issue Links:** - #21619 ResponseEntityResultHandler does not overwrite existing response headers","closed","type: regression,","spring-projects-issues","2018-10-19T23:46:19Z","2019-01-11T13:17:40Z"
"","21896","WebTestClient throws IllegalArgumentException for invalid Parameters [SPR-17363]","**[Peter Luttrell](https://jira.spring.io/secure/ViewProfile.jspa?name=pluttrell)** opened **[SPR-17363](https://jira.spring.io/browse/SPR-17363?redirect=false)** and commented  Experienced with Spring 5.1.0 RELEASE that is included with SpringBoot 2.1.0.M4.  With the following controller:   ```java @RestController class SimpleController {    @PostMapping(       path = ""/test"",       params = ""p"",       consumes = MediaType.APPLICATION_JSON_UTF8_VALUE   )   Mono test(@RequestBody Simple simple) {     return Mono.just(simple);   }    @Data   @NoArgsConstructor   @AllArgsConstructor   private static class Simple {     private Long num;   }  } ```  And the following tests:  ```java @ExtendWith({RestDocumentationExtension.class, SpringExtension.class}) @SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT) @AutoConfigureWebTestClient class DocTests {    @Autowired   protected WebTestClient webTestClient;    @BeforeEach   void setUp(ApplicationContext applicationContext, RestDocumentationContextProvider restDocumentation) {     this.webTestClient = WebTestClient.bindToApplicationContext(applicationContext)         .configureClient()         .filter(documentationConfiguration(restDocumentation))         .build();   }    private static final String BODY = ""{\""num\"":123}"";    @Test   void springErrorGenerator() {     webTestClient.post()         .uri(""/test"")         .contentType(MediaType.APPLICATION_JSON_UTF8)         .syncBody(BODY)         .exchange()         .expectStatus().isBadRequest()         .expectHeader().contentType(MediaType.APPLICATION_JSON_UTF8)         .expectBody()         .consumeWith(document(""spring-error""));   }    @Test   void demonstrateOk() {     webTestClient.post()         .uri(uriBuilder -> uriBuilder.path(""/test"").queryParam(""p"", ""test"").build())         .contentType(MediaType.APPLICATION_JSON_UTF8)         .syncBody(BODY)         .exchange()         .expectStatus().isOk();   }  } ```  I'm experiencing the following exception:  ```java java.lang.IllegalArgumentException: Request body incomplete.java.lang.IllegalArgumentException: Request body incomplete.  at org.springframework.util.Assert.isTrue(Assert.java:118) at org.springframework.test.web.reactive.server.ExchangeResult.getRequestBodyContent(ExchangeResult.java:149) at org.springframework.restdocs.webtestclient.WebTestClientRequestConverter.convert(WebTestClientRequestConverter.java:73) at org.springframework.restdocs.webtestclient.WebTestClientRequestConverter.convert(WebTestClientRequestConverter.java:60) at org.springframework.restdocs.generate.RestDocumentationGenerator.handle(RestDocumentationGenerator.java:199) at org.springframework.restdocs.webtestclient.WebTestClientRestDocumentation.lambda$document$0(WebTestClientRestDocumentation.java:81) at org.springframework.test.web.reactive.server.DefaultWebTestClient$DefaultBodyContentSpec.lambda$consumeWith$3(DefaultWebTestClient.java:540) at org.springframework.test.web.reactive.server.ExchangeResult.assertWithDiagnostics(ExchangeResult.java:194) at org.springframework.test.web.reactive.server.DefaultWebTestClient$DefaultBodyContentSpec.consumeWith(DefaultWebTestClient.java:540) at example.DocTests.springErrorGenerator(DocTests.java:50) at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.base/java.lang.reflect.Method.invoke(Method.java:566) at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:515) at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:171) at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:72) at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:167) at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:114) at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:59) at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:105) at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:72) at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:95) at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:71) at java.base/java.util.ArrayList.forEach(ArrayList.java:1540) at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38) at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:110) at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:72) at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:95) at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:71) at java.base/java.util.ArrayList.forEach(ArrayList.java:1540) at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38) at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:110) at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:72) at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:95) at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:71) at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32) at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51) at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220) at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188) at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202) at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181) at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128) at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:74) at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ```  Note that with request body is the same for both and is valid. The 'springErrorGenerator' test generates the error. Note that with this test, I am attempting to capture using Spring Rest Docs the Spring response body when the required URL parameter is missing, such as can be displayed by making a test call such as this:   ```java $ echo '{""num"":2}' | http POST localhost:8080/test HTTP/1.1 400 Bad Request Content-Length: 175 Content-Type: application/json;charset=UTF-8  {     ""error"": ""Bad Request"",     ""message"": ""Unsatisfied query parameter conditions: [[p]], actual parameters: {}"",     ""path"": ""/test"",     ""status"": 400,     ""timestamp"": ""2018-10-11T07:11:47.206+0000"" } ```         ---  **Affects:** 5.1 GA  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/8df0bc88d2f9f662919881ed3081f133656e37c8, https://github.com/spring-projects/spring-framework/commit/c567e65eea1f2bee2776c4b4df020bb4d036cf90","closed","type: bug,","spring-projects-issues","2018-10-11T07:04:07Z","2018-10-15T07:48:39Z"
"","22048","StringUtils.parseLocaleString parses invalid locales successfully [SPR-17516]","**[Petar Tahchiev](https://jira.spring.io/secure/ViewProfile.jspa?name=ptahchiev)** opened **[SPR-17516](https://jira.spring.io/browse/SPR-17516?redirect=false)** and commented  Prior to spring-core 5.1.x calling this method:  ``` StringUtils.parseLocaleString(""some-locale-that-does-not-exist"") ```  would throw IllegalArgumentException. However in spring-core 5.1.x (tested with 5.1.3.BUILD-SNAPSHOT) it doesn't. It simply returns a java.util.Locale object with language=""some-locale-that-does-not-exist"", region="""", country=""""  ---  **Affects:** 5.1.2  **Issue Links:** - #21241 CookieLocaleResolver is not RFC6265 compliant when setting a locale and time zone","closed","in: core,","spring-projects-issues","2018-11-18T15:53:46Z","2019-06-25T08:41:56Z"
"","21985","Error in Lifecycle Callbacks section [SPR-17453]","**[Periklis Ntanasis](https://jira.spring.io/secure/ViewProfile.jspa?name=master_ex)** opened **[SPR-17453](https://jira.spring.io/browse/SPR-17453?redirect=false)** and commented  There is a minor error in the reference documentation, in the [Initialization Callbacks](https://docs.spring.io/spring/docs/current/spring-framework-reference/core.html#beans-factory-lifecycle-initializingbean) and [Destruction Callbacks](https://docs.spring.io/spring/docs/current/spring-framework-reference/core.html#beans-factory-lifecycle-disposablebean) sections.  In the Initialization Callbacks section it is mentioned:  _We recommend that you do not use the InitializingBean interface, because it unnecessarily couples the code to Spring._  After that there are displayed 2 code examples. The second one uses the _InitializingBean_ callback interface and couples the code to Spring. However, the text mentions ""_However, the second of the two preceding definitions does not couple the code to Spring._"" which is wrong. It should say the **first** of the two...  The same happens in the next section regarding the Destruction Callbacks.   ---  **Affects:** 5.1.2  **Reference URL:** https://docs.spring.io/spring/docs/current/spring-framework-reference/core.html#beans-factory-lifecycle-initializingbean  **Referenced from:** pull request https://github.com/spring-projects/spring-framework/pull/2004","closed","type: documentation,","spring-projects-issues","2018-10-31T23:06:32Z","2018-11-27T10:00:04Z"
"","22173","Document synchronous use of WebClient [SPR-17644]","**[Pavlo Morozov](https://jira.spring.io/secure/ViewProfile.jspa?name=pm)** opened **[SPR-17644](https://jira.spring.io/browse/SPR-17644?redirect=false)** and commented  ResTemplate javaDoc says it will be deprecated  https://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/web/client/RestTemplate.html  Also this page mentions the new class to call over HTTP. It is possible to use it in **both synchronous and asynchronous** ways:  > WebClient offers a modern alternative to the RestTemplate with efficient support for both sync and async, as well as streaming scenarios  Though I not see in javaDoc for WebClient any note about synchronous way it works:  https://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/web/reactive/function/client/WebClient.html     So it is not clear **how to use WebClient in synchronous way**?     Also I have wider question related on StackOverflow, any help would be nice: https://stackoverflow.com/questions/54078309/spring-boot-http-call-to-remote-web-service   ---  **Affects:** 5.1.3","closed","type: documentation,","spring-projects-issues","2019-01-07T16:54:10Z","2019-01-24T10:41:12Z"
"","22182","ResponseSpec.bodyToMono subscribes twice in case of empty body [SPR-17653]","**[Pavel Kryl](https://jira.spring.io/secure/ViewProfile.jspa?name=pavel@kryl.eu)** opened **[SPR-17653](https://jira.spring.io/browse/SPR-17653?redirect=false)** and commented  I think that I have just discovered a bug in spring web client. I am writing a reactive kotlin server, retrieving data from microservices, so I have a WebClient and when the response arrives, I am doing:  ```java webClientResponseSpec.retrieve().bodyToMono(MyBean::class.java) ```  If the server response is empty however (without set Content-Length header), this fails with:  ``` java.lang.IllegalStateException: Only one connection receive subscriber allowed.java.lang.IllegalStateException: Only one connection receive subscriber allowed. at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:277) [reactor-netty-0.8.2.RELEASE.jar:0.8.2.RELEASE] at reactor.netty.channel.FluxReceive.subscribe(FluxReceive.java:127) [reactor-netty-0.8.2.RELEASE.jar:0.8.2.RELEASE] at reactor.core.publisher.FluxMap.subscribe(FluxMap.java:62) [reactor-core-3.2.2.RELEASE.jar:3.2.2.RELEASE] at reactor.core.publisher.FluxLift.subscribe(FluxLift.java:46) [reactor-core-3.2.2.RELEASE.jar:3.2.2.RELEASE] at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:290) [reactor-netty-0.8.2.RELEASE.jar:0.8.2.RELEASE] at reactor.core.publisher.FluxMap.subscribe(FluxMap.java:62) [reactor-core-3.2.2.RELEASE.jar:3.2.2.RELEASE] at reactor.core.publisher.FluxLift.subscribe(FluxLift.java:46) [reactor-core-3.2.2.RELEASE.jar:3.2.2.RELEASE] at reactor.core.publisher.FluxMap.subscribe(FluxMap.java:62) [reactor-core-3.2.2.RELEASE.jar:3.2.2.RELEASE] at reactor.core.publisher.FluxLift.subscribe(FluxLift.java:46) [reactor-core-3.2.2.RELEASE.jar:3.2.2.RELEASE] at reactor.core.publisher.Flux.subscribe(Flux.java:7734) [reactor-core-3.2.2.RELEASE.jar:3.2.2.RELEASE] at reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber.onComplete(FluxConcatArray.java:207) [reactor-core-3.2.2.RELEASE.jar:3.2.2.RELEASE] at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:90) [spring-cloud-sleuth-core-2.0.1.RELEASE.jar:2.0.1.RELEASE] at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:81) [reactor-core-3.2.2.RELEASE.jar:3.2.2.RELEASE] at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:90) [spring-cloud-sleuth-core-2.0.1.RELEASE.jar:2.0.1.RELEASE] at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:81) [reactor-core-3.2.2.RELEASE.jar:3.2.2.RELEASE] at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:90) [spring-cloud-sleuth-core-2.0.1.RELEASE.jar:2.0.1.RELEASE] at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:1713) [reactor-core-3.2.2.RELEASE.jar:3.2.2.RELEASE] at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:90) [spring-cloud-sleuth-core-2.0.1.RELEASE.jar:2.0.1.RELEASE] at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:136) [reactor-core-3.2.2.RELEASE.jar:3.2.2.RELEASE] at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:90) [spring-cloud-sleuth-core-2.0.1.RELEASE.jar:2.0.1.RELEASE] at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:136) [reactor-core-3.2.2.RELEASE.jar:3.2.2.RELEASE] at org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:90) [spring-cloud-sleuth-core-2.0.1.RELEASE.jar:2.0.1.RELEASE] at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:136) [reactor-core-3.2.2.RELEASE.jar:3.2.2.RELEASE] at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:378) [reactor-netty-0.8.2.RELEASE.jar:0.8.2.RELEASE] at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:202) [reactor-netty-0.8.2.RELEASE.jar:0.8.2.RELEASE] at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:343) [reactor-netty-0.8.2.RELEASE.jar:0.8.2.RELEASE] at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:325) [reactor-netty-0.8.2.RELEASE.jar:0.8.2.RELEASE] at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:372) [reactor-netty-0.8.2.RELEASE.jar:0.8.2.RELEASE] at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:522) [reactor-netty-0.8.2.RELEASE.jar:0.8.2.RELEASE] at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:141) [reactor-netty-0.8.2.RELEASE.jar:0.8.2.RELEASE] at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) [netty-transport-4.1.29.Final.jar:4.1.29.Final] at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) [netty-transport-4.1.29.Final.jar:4.1.29.Final] at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) [netty-transport-4.1.29.Final.jar:4.1.29.Final] at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102) [netty-codec-4.1.29.Final.jar:4.1.29.Final] at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) [netty-transport-4.1.29.Final.jar:4.1.29.Final] at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) [netty-transport-4.1.29.Final.jar:4.1.29.Final] at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) [netty-transport-4.1.29.Final.jar:4.1.29.Final] at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438) [netty-transport-4.1.29.Final.jar:4.1.29.Final] at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:310) [netty-codec-4.1.29.Final.jar:4.1.29.Final] at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:284) [netty-codec-4.1.29.Final.jar:4.1.29.Final] at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253) [netty-transport-4.1.29.Final.jar:4.1.29.Final] at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) [netty-transport-4.1.29.Final.jar:4.1.29.Final] at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) [netty-transport-4.1.29.Final.jar:4.1.29.Final] at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) [netty-transport-4.1.29.Final.jar:4.1.29.Final] at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1434) [netty-transport-4.1.29.Final.jar:4.1.29.Final] at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) [netty-transport-4.1.29.Final.jar:4.1.29.Final] at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) [netty-transport-4.1.29.Final.jar:4.1.29.Final] at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:965) [netty-transport-4.1.29.Final.jar:4.1.29.Final] at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:808) [netty-transport-native-epoll-4.1.29.Final-linux-x86_64.jar:4.1.29.Final] at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:410) [netty-transport-native-epoll-4.1.29.Final-linux-x86_64.jar:4.1.29.Final] at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:310) [netty-transport-native-epoll-4.1.29.Final-linux-x86_64.jar:4.1.29.Final] at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884) [netty-common-4.1.29.Final.jar:4.1.29.Final] at java.lang.Thread.run(Thread.java:834) [?:?] ```    In such a wrong case (when body is expected, but none arrives) I would either presume a more readable exception/error signal or null emission or complete/empty signal. Any of these three options would be better than this IllegalStateException.  Please note, that the error does not occur if I parse to String::class.java.   ---  **Affects:** 5.1.3","closed","in: web,","spring-projects-issues","2019-01-09T10:37:03Z","2019-01-17T20:43:33Z"
"","22004","Call setter-method for array when binding model data [SPR-17472]","**[Patrik Starck](https://jira.spring.io/secure/ViewProfile.jspa?name=patrikstarck)** opened **[SPR-17472](https://jira.spring.io/browse/SPR-17472?redirect=false)** and commented  ## Problem  This is an issue concerning when you bind data for a model, for example when submitting a form with a modelAttribute bound to it. If the item to be set is of a multidimensional type, the setter of the property will never be called.   Consider the following code:     ```java public class Product {      private String name;     private String imageStr;     private List productImageList;      public String getName() {         return this.name;     }      public void setName(String name) {         this.name = name;     }      public List getProductImageList() {         return this.productImageList;     }      public void setProductImageList(List productImageList) {         this.productImageList = productImageList;         if (productImageList != null) {             this.imageStr = [...]// convert list to json string         }     }  } ```  And the corresponding JSP-page:  ```java                               ```  When submitting the form, the ""setName"" is be called, but not the ""setProductImageList"".  I don't think this is intened?  ## Proposed Solution  The problem occurs in the class **AbstractNestablePropertyAccessor** in function **processKeyedProperty**. When using an array/list/vector or other multi-dimensional container, the function doesn't call the write method for the current **PropertyHandler**.  A fix would be to add this line of code  ```java ph.setValue(list); ```  after this line  ```java list.add(convertedValue); ```  Then one would apply the same approach for ""Map"" and ""Array"" as well which is defined in the same function.   ---  **Affects:** 5.1.2","closed","in: core,","spring-projects-issues","2018-11-06T18:02:57Z","2019-01-12T16:20:36Z"
"","22163","HtmlUnit WebClient configuration with MockMvcWebClientBuilder  behaves differently than manually creating WebClient [SPR-17632]","**[Patrick Adler](https://jira.spring.io/secure/ViewProfile.jspa?name=616slayer616)** opened **[SPR-17632](https://jira.spring.io/browse/SPR-17632?redirect=false)** and commented  ""Logging out"" by removing the jsessionid  cookie in with HtmlUnits WebClient seems to behave differently, depending on how the WebClient is created.  I have created an example project [here](https://github.com/616slayer616/Spring-htmlunit-problem)  There are 3 tests (NoRememberMeLoginAutoconfigured, NoRememberMeLoginMockMvcWebClientBuilder and NoRememberMeLoginManually) and only the manually configured WebClient behaves as expected.     The problem is that the WebClient stays ""logged in"" although the session cookie has been deleted. This does not happen when configuring it manually (new WebClient) or when accessing the  page with a browser.  I used an HandlerInterceptorAdapter to verify that the cookies are not sent for the second request. Feel free to check this again (HandlerInterceptorAdapter is included in the example project) because I might have overlooked something.     I have also explained the problem on [stackoverflow](https://stackoverflow.com/questions/53958957/htmlunit-stays-logged-in-after-removing-jsessionid-cookie) and the [Spring Boot issue tracker](https://github.com/spring-projects/spring-boot/issues/15592) on GitHub. Where I was told that the relevant code probably lies within the spring framework.     I think the example project demonstrated the problem very obviously but I would be glad to further explain any uncertainties abotu my issue.       ---  **Affects:** 5.1.2  **Reference URL:** https://github.com/spring-projects/spring-boot/issues/15592","open","in: web,","spring-projects-issues","2019-01-01T13:10:24Z","2021-11-08T11:17:38Z"
"","22061","XpathResultMatchers to support Hamcrest Matcher [SPR-17529]","**[Pat Turner](https://jira.spring.io/secure/ViewProfile.jspa?name=itchyknee)** opened **[SPR-17529](https://jira.spring.io/browse/SPR-17529?redirect=false)** and commented  While _org.springframework.test.web.servlet.result.XpathResultMatchers_ supports Hamcrest matcher against a single org.w3c.dom.Node, it doesn't allow matching against multiple nodes via the _org.w3c.dom.NodeList_.     Suggest addition of a new ResultMatcher method in _XpathResultMatchers_ and supporting _XpathExpectationsHelper_:  `public ResultMatcher nodeList(final Matcher matcher)`     My motivation for this is to allow checking that XHTML element IDs are unique across the document, and to do this, I need to match all elements with an ID.  E.g.   `//*[@id]`     Happy to contribute if you think this is worthwhile adding to framework.   ---  **Affects:** 5.1.2  **Referenced from:** pull request https://github.com/spring-projects/spring-framework/pull/2023","closed","status: superseded,","spring-projects-issues","2018-11-22T09:19:54Z","2019-11-11T14:47:12Z"
"","22123","WebFluxTags.outcome() should return OUTCOME_SUCCESS when status null [SPR-17591]","**[pascal gehl](https://jira.spring.io/secure/ViewProfile.jspa?name=paskos)** opened **[SPR-17591](https://jira.spring.io/browse/SPR-17591?redirect=false)** and commented  WebFluxTags.outcome() returns OUTCOME_UNKNOWN when  exchange.getResponse().getStatusCode() returns null. When WebFluxTags.status() assumes that the status is HttpStatus.OK in the same situation. As a result a lot of webflux metrics are contain UNKNOWN tag.  WebFluxTags.outcome() should return OUTCOME_SUCCESS.    ---  **Affects:** 5.1.3","closed","status: invalid,","spring-projects-issues","2018-12-11T16:39:21Z","2019-01-12T05:17:29Z"
"","21973","[Enhancement] @Bean can only inject one dependency,can I inject many dependencies in one method? [SPR-17441]","**[Paleozoic](https://jira.spring.io/secure/ViewProfile.jspa?name=paleozoic)** opened **[SPR-17441](https://jira.spring.io/browse/SPR-17441?redirect=false)** and commented  When inject two beans,such as the following code:  ```java @Bean(""bean1"") public Bean buildBean1(){     Bean bean = new Bean();     return bean ; } @Bean(""bean2"") public Bean buildBean2(){     Bean bean = new Bean();     return bean ; } ```  can I just write the code? such as:  ```java @Beans public Map buildBeans(){     Map beans = new HashMap<>();     beans.put(""bean1"",new Bean());     beans.put(""bean2"",new Bean());    return beans ; } ```  sometimes we can not confirm how many beans to inject,we have to write complex `BeanDefinition` and then `registerBeanDefinition`. if we have `@Beans`,everything is easy~   ---  **Affects:** 5.1.1","open","in: core,","spring-projects-issues","2018-10-29T00:51:40Z","2019-01-11T13:15:20Z"
"","22080","Retry mechanism for system connection to remote message broker fails [SPR-17548]","**[ori v](https://jira.spring.io/secure/ViewProfile.jspa?name=orivid)** opened **[SPR-17548](https://jira.spring.io/browse/SPR-17548?redirect=false)** and commented  Hello,  I am using the spring websocket relay broker feature, where ActiveMQ is my message broker.  I have encountered a critical issue where my server gets disconnected from the ActiveMQ, the retry mechanism for the ""system"" connection with activemq kicks in, trying to reconnect to ActiveMQ, and while performing the reconnection experiences the following exception:   org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler - Transport failure: java.lang.IllegalStateException: No TcpConnection available   causing that attempt to fail.  After that  retry attempt, the retry mechanism **stops** and does not try to reestablish the connection with ActiveMQ ever again.     From looking at the StompBrokerRelayMessageHandler.java file in the spring-framework project, I can see that this error originates from the initHeartbeats flow, after the CONNECTED frame was received from ActiveMQ.  If there is a disconnection between the spring relay broker and ActiveMQ, the expectation is that the retry mechanism will continue to try and establish connection with the message broker, even if encountering errors, until successfully establishing the ""system"" connection with the message broker (in my case ActiveMQ)     In my project I am using the following libraries (together with all the relevant spring libraries)  \io.projectreactor.ipc\ \reactor-netty\ \0.7.11.RELEASE\  \io.netty\ \netty-all\ \4.1.30.Final\     If you need any more information/details, i will be happy to supply them.  Thank you, and looking forward to your response.         ---  **Affects:** 5.0.7  **Reference URL:** https://github.com/spring-projects/spring-framework/blob/master/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java  **Attachments:** - [Partial Logs.txt](https://jira.spring.io/secure/attachment/26125/Partial+Logs.txt) (_18.33 kB_)","open","status: feedback-provided,","spring-projects-issues","2018-11-29T09:44:10Z","2019-09-30T07:44:13Z"
"","22067","ResourceUrlEncodingFilter versioning breaks when URL contains fragment [SPR-17535]","**[Ondřej Kraus](https://jira.spring.io/secure/ViewProfile.jspa?name=neverberlerfellerer)** opened **[SPR-17535](https://jira.spring.io/browse/SPR-17535?redirect=false)** and commented  resolveUrlPath in ResourceUrlEncodingRequestWrapper in ResourceUrlEncodingFilter checks for query string, but not for fragment. This breaks versioning when URLs with fragment are used (tested with Thymeleaf):  ``` th:src=""@{/assets/images/icons/sprite.svg#face1}"" ```  does not add version. Replacing getQueryParamsIndex with something that checks for both question mark and hash mark fixes it.  ---  **Affects:** 5.1.2  **Issue Links:** - #17956 ResourceUrlProvider should only consider paths and not request parameters  **Referenced from:** pull request https://github.com/spring-projects/spring-framework/pull/2025, and commits https://github.com/spring-projects/spring-framework/commit/959cf61647b582b7153eaa7627ae439e2d06c7b5, https://github.com/spring-projects/spring-framework/commit/029101c79a881d22b51dc2de8490fffca71ce3b6","closed","type: enhancement,","spring-projects-issues","2018-11-23T15:43:35Z","2019-03-09T14:44:28Z"
"","22150","Allow reuse of database error code translation without referring to JDBC module [SPR-17618]","**[Oliver Drotbohm](https://jira.spring.io/secure/ViewProfile.jspa?name=olivergierke)** opened **[SPR-17618](https://jira.spring.io/browse/SPR-17618?redirect=false)** and commented  The error code based creation of `DataAccessException` instances in `spring-jdbc` would be very useful to reuse from within Spring Data R2DBC. We'd like to avoid dragging in JDBC as it's somewhat competing technology and especially with Boot enabling features through classpath inspection we'd like to avoid having to have `spring-jdbc` on the classpath.  ---  **Issue Links:** - #21996 Remove java.sql dependencies from ReflectionUtils and TransactionDefinition","closed","type: enhancement,","spring-projects-issues","2018-12-21T14:59:06Z","2019-02-11T08:37:54Z"
"","21938","Allow binding all MultipartFile instances as handler method argument [SPR-17405]","**[Oliver Drotbohm](https://jira.spring.io/secure/ViewProfile.jspa?name=olivergierke)** opened **[SPR-17405](https://jira.spring.io/browse/SPR-17405?redirect=false)** and commented  For cases in which the names of the files of a multipart request are not static but need to be dynamically calculated, it would be cool if there was a `MultipartFiles` object available for injection into a Spring MVC controller method similar to what we have with `HttpHeaders`.  The use case is to find a JSON document under a well known parameter name in a multipart request that then in turn contains the parameter names under which to lookup the files.  Using `someMethod(@RequestParam(""json"") SomeModel model, MultipartHttpServletRequest request)` already works but feels quite low level, especially if all you're interested in are the files.  ---  **Issue Links:** - #18467 Part list/array gets resolved to all parts in current request - #18422 MultipartFile argument requires multipart request even when optional (and empty)  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/f0f1979fc534ff6d742c0ab62fce84fd6aa3e7f1  0 votes, 6 watchers","closed","type: enhancement,","spring-projects-issues","2018-10-18T12:46:36Z","2019-01-11T13:17:58Z"
"","21983","URI encode needs to allow reserved characters unencoded [SPR-17451]","**[Oleksii Kostyliev](https://jira.spring.io/secure/ViewProfile.jspa?name=preeze)** opened **[SPR-17451](https://jira.spring.io/browse/SPR-17451?redirect=false)** and commented     `org.springframework.web.util.UriUtils#encode(java.lang.String, java.nio.charset.Charset)` needs to allow reserved characters (as defined per https://tools.ietf.org/html/rfc3986#section-2.2) unencoded in a URI.  Under the hood `UriUtils#encode(java.lang.String, java.nio.charset.Charset)` calls out to  `UriUtils#encode(source, charset, HierarchicalUriComponents.Type.URI);`  Current implementation of `isAllowed` for `org.springframework.web.util.HierarchicalUriComponents.Type#URI` simply delegates to `HierarchicalUriComponents.Type#isUnreserved`.  According to the RFC3896 (https://tools.ietf.org/html/rfc3986#section-2) spec, the following characters may be used without percent encoding: * Reserved: `gen-delims`, `sub-delims` * Unreserved:  `ALPHA / DIGIT / ""-"" / ""."" / ""_"" / ""~""`  There is also `HierarchicalUriComponents.Type#isReserved` method that is never referenced from any where within spring-web jar - another sign of a bug.  The correct implementation for `HierarchicalUriComponents.Type#URI#isAllowed` should be:  ```java URI { 	@Override 	public boolean isAllowed(int c) { 		return isUnreserved(c) || isReserved(c); 	} }; ```    ---  **Affects:** 5.1.2  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/f3c29fe2e6d2b1b1da4acc09d00bf2c67f10ff3e  1 votes, 3 watchers","closed","status: declined,","spring-projects-issues","2018-10-31T13:34:08Z","2019-01-12T16:20:41Z"
"","22035","Add protected methods to resolve the target type for payload arguments [SPR-17503]","**[olegz](https://jira.spring.io/secure/ViewProfile.jspa?name=olegz)** opened **[SPR-17503](https://jira.spring.io/browse/SPR-17503?redirect=false)** and commented  While working on https://github.com/spring-cloud/spring-cloud-stream/issues/1527 I noticed that MessageConversion was not attempted on handler with signature `public Person echo(Object value)` where the payload was actually `byte[]`     I believe it is due to the following code on line 130. I believe the order of arguments should be different `if (ClassUtils.isAssignable(payloadClass, targetClass))`      ---  **Affects:** 5.1.2","closed","type: enhancement,","spring-projects-issues","2018-11-15T07:18:18Z","2019-05-06T13:45:09Z"
"","22125","Regression: IllegalStateException: Ambiguous handler methods is thrown for explicit HEAD mapping [SPR-17593]","**[Oleg Alexeyev](https://jira.spring.io/secure/ViewProfile.jspa?name=blacklion)** opened **[SPR-17593](https://jira.spring.io/browse/SPR-17593?redirect=false)** and commented  Similar to #18753, Spring WebFlux cannot distinguish GET and HEAD mappings for the same endpoint. This worked nicely in 5.0.1.  ``` 11.12.2018 21:11:43,711 ERROR [o.s.w.s.a.HttpWebHandlerAdapter] - [6907b734] 500 Server Error for HTTP HEAD ""/installation/operation/1544557547710"" java.lang.IllegalStateException: Ambiguous handler methods mapped for '/installation/operation/1544557547710': {public reactor.core.publisher.Mono InstallationOperationController.operationExists(java.lang.Long), public reactor.core.publisher.Flux InstallationOperationController.installationPackageForOperation(java.lang.Long)} 	at org.springframework.web.reactive.result.method.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:339) ~[spring-webflux-5.1.3.RELEASE.jar:5.1.3.RELEASE] 	at org.springframework.web.reactive.result.method.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:295) ~[spring-webflux-5.1.3.RELEASE.jar:5.1.3.RELEASE] 	at org.springframework.web.reactive.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:174) ~[spring-webflux-5.1.3.RELEASE.jar:5.1.3.RELEASE] 	at org.springframework.web.reactive.DispatcherHandler.lambda$handle$0(DispatcherHandler.java:148) ~[spring-webflux-5.1.3.RELEASE.jar:5.1.3.RELEASE] 	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:368) ~[reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:212) ~[reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:139) ~[reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:63) ~[reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.FluxConcatMap.subscribe(FluxConcatMap.java:121) ~[reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.MonoNext.subscribe(MonoNext.java:40) ~[reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44) ~[reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60) ~[reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60) ~[reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52) ~[reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44) ~[reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61) ~[reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44) ~[reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.Mono.subscribe(Mono.java:3608) ~[reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172) ~[reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56) ~[reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:70) ~[reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:57) ~[reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:57) ~[reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.MonoSubscriberContext.subscribe(MonoSubscriberContext.java:47) ~[reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.MonoDoFinallyFuseable.subscribe(MonoDoFinallyFuseable.java:48) ~[reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.netty.http.server.HttpServerHandle.onStateChange(HttpServerHandle.java:64) ~[reactor-netty-0.8.3.RELEASE.jar:0.8.3.RELEASE] 	at reactor.netty.tcp.TcpServerBind$ChildObserver.onStateChange(TcpServerBind.java:226) ~[reactor-netty-0.8.3.RELEASE.jar:0.8.3.RELEASE] 	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:434) ~[reactor-netty-0.8.3.RELEASE.jar:0.8.3.RELEASE] 	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:141) ~[reactor-netty-0.8.3.RELEASE.jar:0.8.3.RELEASE] 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) ~[netty-transport-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) ~[netty-transport-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) ~[netty-transport-4.1.31.Final.jar:4.1.31.Final] 	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:159) ~[reactor-netty-0.8.3.RELEASE.jar:0.8.3.RELEASE] 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) ~[netty-transport-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) ~[netty-transport-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) ~[netty-transport-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438) ~[netty-transport-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:323) ~[netty-codec-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:297) ~[netty-codec-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253) ~[netty-transport-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) ~[netty-transport-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) ~[netty-transport-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) ~[netty-transport-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1432) ~[netty-handler-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.handler.ssl.SslHandler.decodeNonJdkCompatible(SslHandler.java:1211) ~[netty-handler-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1245) ~[netty-handler-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:502) ~[netty-codec-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:441) ~[netty-codec-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:278) ~[netty-codec-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) ~[netty-transport-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) ~[netty-transport-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) ~[netty-transport-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1434) ~[netty-transport-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) ~[netty-transport-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) ~[netty-transport-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:965) ~[netty-transport-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) ~[netty-transport-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:648) ~[netty-transport-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:583) ~[netty-transport-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:500) ~[netty-transport-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:462) ~[netty-transport-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:897) ~[netty-common-4.1.31.Final.jar:4.1.31.Final] 	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_192] ```  ---  **Affects:** 5.1.3  **Issue Links:** - #18753 Regression: Handler method detection reporting ambiguous methods for explicit HEAD mapping","closed","type: regression,","spring-projects-issues","2018-12-12T13:07:05Z","2019-01-11T13:27:53Z"
"","22014","WebClient throws ""Only one connection receive subscriber allowed"" when response has content but no Content-Type header [SPR-17482]","**[Nischit Shetty](https://jira.spring.io/secure/ViewProfile.jspa?name=nischit7)** opened **[SPR-17482](https://jira.spring.io/browse/SPR-17482?redirect=false)** and commented  I stumbled upon this issue while executing a uncommon outbound API.  Refer the test case at which simulates the issue. https://github.com/nischit7/my-exp-webflux-stream/blob/master/src/test/java/com/example/spring/stream/controller/MoreThanOnSubscriberTest.java  In essence, I am bringing up a mock server which is supposed to return NO media type header. I know for an API, NO response header doesnt seem right. For the moment, pls assume its a negative test case.  On running that test, I get an error -  ``` java.lang.IllegalStateException: Only one connection receive subscriber allowed.   at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:277) at reactor.netty.channel.FluxReceive.subscribe(FluxReceive.java:127)at  reactor.core.publisher.FluxMap.subscribe(FluxMap.java:62) at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:290) at reactor.core.publisher.FluxMap.subscribe(FluxMap.java:62) at reactor.core.publisher.FluxMap.subscribe(FluxMap.java:62) at reactor.core.publisher.Flux.subscribe(Flux.java:7734) at reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber.onComplete(FluxConcatArray.java:207) at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:81) at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:81) at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:1713) at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:136) at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:136) at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:136)at  reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:378) at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:202) at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:343) at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:325) at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:372) at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:522) at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:141) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438) at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:310) at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:284) at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1434) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:965) at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:628) at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:563) at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:480) at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:442) at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884) at java.lang.Thread.run(Thread.java:748)Suppressed: java.lang.Exception: #block terminated with an error   at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:93)  at reactor.core.publisher.Mono.block(Mono.java:1475)  at com.example.spring.stream.controller.MoreThanOnSubscriberTest.moreThanOneSubscriberError(MoreThanOnSubscriberTest.java:83)  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)  at java.lang.reflect.Method.invoke(Method.java:498)  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)  at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)  at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)  at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)  at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)  at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)  at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)  at org.junit.runners.ParentRunner.run(ParentRunner.java:363)  at org.junit.runner.JUnitCore.run(JUnitCore.java:137)  at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)  at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)  at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)  at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ```  Note the line number 69 in that test class. I have intentionally commented it. Now uncomment the line and re-rerun the test case. This time, it should be successful. Comment that line again.  Now another interesting thing to note. When you change the version of spring-webflux to 5.0.10.RELEASE, you should see it successful. Change the version of spring-webflix to 5.1.1.RELEASE, it will fail. So obviously something has changed. I do see spring finds no content-type response header and defaults it to octet stream. After which I have not digged further, why it fails.     ---  **Affects:** 5.1 GA  **Reference URL:** https://stackoverflow.com/questions/53144412/spring-webclient-throws-only-one-connection-receive-subscriber-allowed-when-re  **Issue Links:** - #21592 ClientResponse's body ignored on UnsupportedMediaTypeException - #22108 WebClient throws ""Only one connection receive subscriber allowed."" when response generates a WebClientResponseException  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/a5339d71eae50e2cb6e572d52a823a26d1d103f1","closed","type: bug,","spring-projects-issues","2018-11-09T05:07:37Z","2019-01-13T19:53:55Z"
"","22003","@Cacheable does not make sense when bean is depended by other bean which class implements FactoryBean [SPR-17471]","**[Nikolas Andr](https://jira.spring.io/secure/ViewProfile.jspa?name=nikolayandr)** opened **[SPR-17471](https://jira.spring.io/browse/SPR-17471?redirect=false)** and commented  The next case does not work when cacheable behavior is desired   **Bean A** has methods with annotation **`@Cachable`**. **Bean B** a has dependency on **Bean A** and also **Bean B** implements **org.springframework.beans.factory.FactoryBean** and Spring initializes **Bean B** before enabling caching(when proxies are created for beans which methods have annotation **`@Cacheable`**)   ---  **Affects:** 4.3.20","closed","in: core,","spring-projects-issues","2018-11-06T07:38:51Z","2019-01-12T16:20:37Z"
"","22179","Upgrade my project to 4.3.15, start seeing internal.xml.ValidationXmlParser - No META-INF/validation.xml [SPR-17650]","**[Nikita Karnwal](https://jira.spring.io/secure/ViewProfile.jspa?name=nik28)** opened **[SPR-17650](https://jira.spring.io/browse/SPR-17650?redirect=false)** and commented  i recently upgrade spring from 3.2 to 4.3.15 Release. After that seeing below issue:     2019-01-09 06:42:02,321 [WebContainer : 21] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Log4jLoggerProvider 2019-01-09 06:42:02,322 [WebContainer : 21] INFO internal.util.Version - HV000001: Hibernate Validator 5.2.5.Final 2019-01-09 06:42:02,359 [WebContainer : 21] DEBUG engine.resolver.DefaultTraversableResolver - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver 2019-01-09 06:42:02,362 [WebContainer : 21] DEBUG engine.resolver.DefaultTraversableResolver - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. 2019-01-09 06:42:02,378 [WebContainer : 21] DEBUG internal.engine.ConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator 2019-01-09 06:42:02,379 [WebContainer : 21] DEBUG internal.engine.ConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory 2019-01-09 06:42:02,380 [WebContainer : 21] DEBUG internal.engine.ConfigurationImpl - Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy651 2019-01-09 06:42:02,385 [WebContainer : 21] DEBUG internal.xml.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. 2019-01-09 06:42:02,390 [WebContainer : 21] DEBUG internal.xml.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader 2019-01-09 06:42:02,391 [WebContainer : 21] DEBUG internal.xml.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL 2019-01-09 06:42:02,391 [WebContainer : 21] DEBUG internal.xml.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader 2019-01-09 06:42:02,391 [WebContainer : 21] DEBUG internal.xml.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.      ---  **Affects:** 4.3.15  **Attachments:** - [ValidatorError.txt](https://jira.spring.io/secure/attachment/26174/ValidatorError.txt) (_4.18 kB_)","closed","in: core,","spring-projects-issues","2019-01-09T07:03:40Z","2019-01-12T05:16:33Z"
"","22099","th:hasErrors() creates model attributes if not present (side-effect) [SPR-17567]","**[Nicolai Ehemann](https://jira.spring.io/secure/ViewProfile.jspa?name=mcnetic)** opened **[SPR-17567](https://jira.spring.io/browse/SPR-17567?redirect=false)** and commented  I'm not 100% sure this is a problem of spring core or perhaps thymeleaf (due to my lack of knowledge of internals), but I suspect the problem is actually with spring:  Calling th:hasErrors() in a thymeleaf template can have the potentially unwanted side-effect of creating model attributes while evaluating the thymeleaf template.  One way I found to reproduce this is using uninitialized nested model attributes. If I have a model attribute that has another object as a field, and that field is not initialized per construction, it will be initialized upon calling th:hasErrors() on it.  For example, I have a model attribute `person` with a field `address` which in turn has a field `street`. Consider the following thymeleaf snippet:  ```            ```  I don't think hasErrors() should have such unexpected side effects.  I made a minimal modification to the spring example project gs-validating-form-input to demonstrate/reproduce the issue: https://github.com/McNetic/gs-validating-form-input/commit/55a265fa0b8a2df4f60af211699d43633319fd88    (I know the examples are not very meaningful)   ---  **Affects:** 5.1.2  **Reference URL:** https://github.com/McNetic/gs-validating-form-input/commit/55a265fa0b8a2df4f60af211699d43633319fd88","open","in: web,","spring-projects-issues","2018-12-05T12:52:38Z","2019-01-11T13:29:56Z"
"","21910","Vulnerability in Spring dependency 'jackson-mapper-asl 1.9.13' [SPR-17377]","**[Nick Eckert](https://jira.spring.io/secure/ViewProfile.jspa?name=nickeckert)** opened **[SPR-17377](https://jira.spring.io/browse/SPR-17377?redirect=false)** and commented  Our binary scanner (Protecode SC) revealed a vulnerability in jackson-mapper-asl 1.9.13 which is a dependency of org.springframework.security.oauth2 from Springframework v4.3.19 RELEASE.  Please either upgrade the component or document why Spring isn't affected by this vulnerability.   ---  **Affects:** 4.3.19  **Reference URL:** https://nvd.nist.gov/vuln/detail/CVE-2016-7051","closed","in: core,","spring-projects-issues","2018-10-12T23:24:43Z","2019-01-12T05:17:58Z"
"","21909","Vulnerability in Spring dependency 'jackson-core-asl 1.9.13' [SPR-17376]","**[Nick Eckert](https://jira.spring.io/secure/ViewProfile.jspa?name=nickeckert)** opened **[SPR-17376](https://jira.spring.io/browse/SPR-17376?redirect=false)** and commented  Our binary scanner (Protecode SC) revealed vulnerabilities in jackson-core-asl 1.9.13 which is a dependency of jackson-mapper-asl 1.9.13 which is a dependency of org.springframework.security.oauth2 from Springframework v4.3.19 RELEASE.     https://nvd.nist.gov/vuln/detail/CVE-2018-7489  https://nvd.nist.gov/vuln/detail/CVE-2017-15095  https://nvd.nist.gov/vuln/detail/CVE-2017-7525  https://nvd.nist.gov/vuln/detail/CVE-2017-17485  https://nvd.nist.gov/vuln/detail/CVE-2018-5968     Please either upgrade the component or document why Spring isn't affected by these vulnerabilities.   ---  **Affects:** 4.3.19","closed","in: core,","spring-projects-issues","2018-10-12T23:22:36Z","2019-01-12T05:17:59Z"
"","21956","Spring Boot incompatibility: starter-web + actuator + cloud-consul [SPR-17423]","**[Nejc](https://jira.spring.io/secure/ViewProfile.jspa?name=neikius)** opened **[SPR-17423](https://jira.spring.io/browse/SPR-17423?redirect=false)** and commented  When including the aforementioned libs in 1 project there will be an error: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.ArrayStoreException: sun.reflect.annotation.TypeNotPresentExceptionProxy     Attached a minimal mvn app that produces this. This is a runtime problem: mvn spring-boot:run produces it.     Not sure whether this is the correct place for reporting this, thanks in advance for any pointers if so.   ---  **Attachments:** - [springbug.zip](https://jira.spring.io/secure/attachment/26064/springbug.zip) (_2.09 kB_)","closed","status: invalid,","spring-projects-issues","2018-10-23T16:46:25Z","2019-01-12T05:17:55Z"
"","21927","Content-Type not set correctly on @ControllerAdvice [SPR-17394]","**[mpapenbr](https://jira.spring.io/secure/ViewProfile.jspa?name=mpapenbr)** opened **[SPR-17394](https://jira.spring.io/browse/SPR-17394?redirect=false)** and commented  Given a class with `@ControllerAdvice` annotation  ```java @ControllerAdvice @RequestMapping(produces = {  ""application/vnd.someapp-v1.0+json;charset=utf-8"" }) public class RestErrorHandler { ... @ExceptionHandler(OperationWithProblemsException.class) @ResponseStatus(HttpStatus.UNPROCESSABLE_ENTITY)  @ResponseBody public OperationResult processOperationWithProblemsException(OperationWithProblemsException ex) {     return ex.getResult(); } ```  When running with Spring 5.0.X the content type specified in the produces-attribute of the RequestMapping annotation was respected and sent to the client upon this exception.  Starting with Spring 5.1.0 this has somehow changed and now I get   ``` application/json;charset=UTF-8 ```  instead of the expected  ``` application/vnd.someapp-v1.0+json;charset=utf-8 ```  ---  **Affects:** 5.1.1  **Issue Links:** - #20865 `@RequestMapping` produces condition should not impact error responses","closed","in: core,","spring-projects-issues","2018-10-16T15:14:51Z","2022-01-18T09:41:15Z"
"","22054","WebTestClient.BodySpec.isEmpty() returns false on byte[0] [SPR-17522]","**[mowol](https://jira.spring.io/secure/ViewProfile.jspa?name=mowol)** opened **[SPR-17522](https://jira.spring.io/browse/SPR-17522?redirect=false)** and commented  WebTestClient.BodySpec.isEmpty() returns false on a Mono.empty().  In debug-view the responseBody is a MonoProcessor with a value of byte[0].     Interestingly enough, WebTestClient.BodySpec.getBodyAsString() has the following code:  ```java if (body == null || body.length == 0) {		    return """";		 } ```  where a byte[0] would be considered empty.   ---  **Affects:** 5.0.9  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/759013eb17cf1a0d6ecd69b0769f90a74cae6f87","closed","type: enhancement,","spring-projects-issues","2018-11-20T14:15:18Z","2019-01-08T22:41:13Z"
"","22165","CorsConfigurationSource DispatcherServlet returns 403 for request when Access-Control-Request-Method header is included [SPR-17634]","**[mike baranski](https://jira.spring.io/secure/ViewProfile.jspa?name=mike.baranski)** opened **[SPR-17634](https://jira.spring.io/browse/SPR-17634?redirect=false)** and commented  See Reference URL.  I have this configuration:     ```java @Bean CorsConfigurationSource corsConfigurationSource() {  LOGGER.info(""Configuring CORS"");  CorsConfiguration configuration = new CorsConfiguration();  configuration.setAllowedOrigins(Arrays.asList(""http://localhost:3000"", ""https://localhost:3000"", ""http://localhost:2199"", ""https://localhost:2199""));  configuration.setAllowCredentials(true);  configuration.setAllowedHeaders(  Arrays.asList(""Access-Control-Allow-Headers"",  ""Access-Control-Allow-Origin"", ""Access-Control-Request-Method"",  ""Access-Control-Request-Headers"", ""Origin"", ""Cache-Control"",  ""Content-Type"", ""Authorization"", ""Accept""));  configuration.setAllowedMethods(  Arrays.asList(""DELETE"", ""GET"", ""POST"", ""PATCH"", ""PUT""));  UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource();  source.registerCorsConfiguration(""/**"", configuration);  return source; }   @Override   protected void configure(HttpSecurity http) throws Exception {     LOGGER.info(""Starting security configuration"");     http.sessionManagement()         .sessionCreationPolicy(SessionCreationPolicy.STATELESS);     http         .cors().and()         .csrf().ignoringAntMatchers(""/**"").and()         .authorizeRequests()         .antMatchers(HttpMethod.GET, ""/auth/**"").permitAll()         .antMatchers(HttpMethod.POST, ""/auth/**"").permitAll()         .antMatchers(HttpMethod.OPTIONS, ""/auth/**"").permitAll()         .requestMatchers(CorsUtils::isPreFlightRequest).permitAll()         .antMatchers(""/**"").hasRole(""USER"");  ```  If I make a CURL request like this I get 403 from the Dispatcher servlet -  ``` curl -v -XOPTIONS -H 'Access-Control-Request-Headers: content-type' -H 'Origin: http://localhost:3001' http://localhost:8080/auth/create-account  -H 'Access-Control-Request-Method: POST' ```  If I make a CURL request without the Access-Control-Request-Method header it works. Clearly I have allowed that header and the POST is a valid endpoint in my app:  ```java @RestController @RequestMapping(""/auth"") public class AuthEndpoint {   private static final Logger LOGGER = LoggerFactory.getLogger(       AuthEndpoint.class); @PostMapping(""/create-account"")   public ResponseEntity createAccount(       @RequestBody @Valid NewAccountDTO newAccountDTO) {     LOGGER.debug(""Creating account {}"", newAccountDTO);     ... } } ```  If I add this to the AuthEndpoint class it works with both CURL requests:  `@CrossOrigin(origins = ""http://localhost:3000"")`   ---  **Affects:** 5.1.3  **Reference URL:** https://stackoverflow.com/questions/54000519/spring-boot-cors-configuration-issue-access-control-request-method-post/54002148#54002148","closed","status: invalid,","spring-projects-issues","2019-01-02T11:54:37Z","2019-01-12T05:17:24Z"
"","21972","Consistent error handling when streaming with servlet vs reactive stack [SPR-17440]","**[Michal Domagala](https://jira.spring.io/secure/ViewProfile.jspa?name=michaldo)** opened **[SPR-17440](https://jira.spring.io/browse/SPR-17440?redirect=false)** and commented  Consider the following code:  ```java  @RequestMapping(""/1"") Flux v1()     return Flux.error(new ResponseStatusException(BAD_REQUEST));  @RequestMapping(""/2"") Flux v2()     return Flux.concat(Flux.just(""x""),Flux.error(new ResponseStatusException(BAD_REQUEST))); ```    In reactive stack initial exception has special treatment: class `ChannelSendOperator` has special state NEW: /** No emissions from the upstream source yet. */  Due special treatment http response status for `/1` is 400 and for `/2` is 200 In servlet stack http response status for both endpoints is 200  Nice to have consistent implementation. Reactive stack way is correct one.   ---  **Affects:** 5.0.10  **Reference URL:** https://stackoverflow.com/questions/53013088/how-to-peep-if-flux-has-exception","closed","type: enhancement,","spring-projects-issues","2018-10-28T18:14:02Z","2019-05-06T16:27:44Z"
"","22097","SpEL variable evaluation fails with NPE against ConcurrentHashMap [SPR-17565]","**[Michael Igler](https://jira.spring.io/secure/ViewProfile.jspa?name=michael.igler)** opened **[SPR-17565](https://jira.spring.io/browse/SPR-17565?redirect=false)** and commented  After upgrading from spring-boot 2.1.0.RELEASE to 2.1.1.RELEASE I get an NPE when the following code is evaluated:  ``` @Override  @PreAuthorize(""hasPermission(#entity, 'write')"")   S save(@P(""entity"") S entity, int depth); ```  ``` Caused by: java.lang.NullPointerException at java.util.concurrent.ConcurrentHashMap.putVal(ConcurrentHashMap.java:1011) at java.util.concurrent.ConcurrentHashMap.put(ConcurrentHashMap.java:1006) at org.springframework.expression.spel.support.StandardEvaluationContext.setVariable(StandardEvaluationContext.java:234) at org.springframework.security.access.expression.method.MethodSecurityEvaluationContext.addArgumentsAsVariables(MethodSecurityEvaluationContext.java:115) at org.springframework.security.access.expression.method.MethodSecurityEvaluationContext.lookupVariable(MethodSecurityEvaluationContext.java:70) at org.springframework.expression.spel.ExpressionState.lookupVariable(ExpressionState.java:146) at org.springframework.expression.spel.ast.VariableReference.getValueInternal(VariableReference.java:76) at org.springframework.expression.spel.ast.MethodReference.getArguments(MethodReference.java:163) at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:93) at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:116) at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:300) at org.springframework.security.access.expression.ExpressionUtils.evaluateAsBoolean(ExpressionUtils.java:26) at org.springframework.security.access.expression.method.ExpressionBasedPreInvocationAdvice.before(ExpressionBasedPreInvocationAdvice.java:59) at org.springframework.security.access.prepost.PreInvocationAuthorizationAdviceVoter.vote(PreInvocationAuthorizationAdviceVoter.java:72) at org.springframework.security.access.prepost.PreInvocationAuthorizationAdviceVoter.vote(PreInvocationAuthorizationAdviceVoter.java:40) at org.springframework.security.access.vote.AffirmativeBased.decide(AffirmativeBased.java:63) at org.springframework.security.access.intercept.AbstractSecurityInterceptor.beforeInvocation(AbstractSecurityInterceptor.java:233) at org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor.invoke(MethodSecurityInterceptor.java:65) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) at com.sun.proxy.$Proxy194.save(Unknown Source) at de.company.ebm.backlog.web.TimeFrameController.createEntity(TimeFrameController.java:75) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:752) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) at org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor.invoke(MethodSecurityInterceptor.java:69) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688) at de.emons.ebm.backlog.web.TimeFrameController$$EnhancerBySpringCGLIB$$a8a5f58f.createEntity() at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189) at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102) at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800) at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038) at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942) at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005) ... 73 more  ```     If downgrading to spring 5.1.2.RELEASE it works again.  ---  **Affects:** 5.1.3  **Issue Links:** - #21980 StandardEvaluationContext does not support concurrent variable access  **Backported to:** [5.0.12](https://github.com/spring-projects/spring-framework/milestone/193?closed=1)","closed","in: core,","spring-projects-issues","2018-12-04T15:22:51Z","2019-01-13T19:51:39Z"
"","21970","Having two bean factory methods with different return type results in NoSuchBeanDefinitionException [SPR-17437]","**[Matúš Sekáč](https://jira.spring.io/secure/ViewProfile.jspa?name=msekac)** opened **[SPR-17437](https://jira.spring.io/browse/SPR-17437?redirect=false)** and commented  When I create two bean factory methods with the same name and different return type (and with qualifiers of course), the Application Context fails to start and the error message suggests that there is no bean of either type defined. This is misleading error message. It should either work (all information to distinguish beans is there), or fail with proper error message (Eg. ambiguous factory method definition).  See attached example project.   ---  **Affects:** 5.0.10  **Attachments:** - [spring-example.zip](https://jira.spring.io/secure/attachment/26077/spring-example.zip) (_73.62 kB_)","open","in: core,","spring-projects-issues","2018-10-26T12:39:36Z","2019-01-11T13:16:38Z"
"","22032","Illegal reflective access operation warning for toString() on CGLIB proxies [SPR-17500]","**[Matej Spiller-Muys](https://jira.spring.io/secure/ViewProfile.jspa?name=mspiller)** opened **[SPR-17500](https://jira.spring.io/browse/SPR-17500?redirect=false)** and commented  There are still some cases left that should be looked at. This WARNING is displayed when running application for a while.  ```java WARNING: Illegal reflective access using Lookup on org.springframework.cglib.core.ReflectUtils (file:/Users/X/.m2/repository/org/springframework/spring-core/5.1.2.RELEASE/spring-core-5.1.2.RELEASE.jar) to class java.lang.Object 	at org.springframework.cglib.core.ReflectUtils.defineClass(ReflectUtils.java:497) 	at org.springframework.cglib.core.AbstractClassGenerator.generate(AbstractClassGenerator.java:359) 	at org.springframework.cglib.core.AbstractClassGenerator$ClassLoaderData$3.apply(AbstractClassGenerator.java:106) 	at org.springframework.cglib.core.AbstractClassGenerator$ClassLoaderData$3.apply(AbstractClassGenerator.java:104) 	at org.springframework.cglib.core.internal.LoadingCache$2.call(LoadingCache.java:54) 	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264) 	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java) 	at org.springframework.cglib.core.internal.LoadingCache.createEntry(LoadingCache.java:61) 	at org.springframework.cglib.core.internal.LoadingCache.get(LoadingCache.java:34) 	at org.springframework.cglib.core.AbstractClassGenerator$ClassLoaderData.get(AbstractClassGenerator.java:130) 	at org.springframework.cglib.core.AbstractClassGenerator.create(AbstractClassGenerator.java:315) 	at org.springframework.cglib.reflect.FastClass$Generator.create(FastClass.java:65) 	at org.springframework.cglib.proxy.MethodProxy.helper(MethodProxy.java:135) 	at org.springframework.cglib.proxy.MethodProxy.init(MethodProxy.java:76) 	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:216) 	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684) 	at net.xxx.service.impl.ServiceImpl$$EnhancerBySpringCGLIB$$49f6ec4b.toString() 	at net.xxx.MessageConsumer.onMessageHandler(MessageConsumer.java:216) 	at net.xxx.Consumer.onMessage(Consumer.java:144) 	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1520) 	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1411) 	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1387) 	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1366) 	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:848) 	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:832) 	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$700(SimpleMessageListenerContainer.java:78) 	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1073) 	at java.base/java.lang.Thread.run(Thread.java:834) WARNING: Illegal reflective access by org.springframework.cglib.core.ReflectUtils (file:/Users/X/.m2/repository/org/springframework/spring-core/5.1.2.RELEASE/spring-core-5.1.2.RELEASE.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain) 	at org.springframework.cglib.core.ReflectUtils.defineClass(ReflectUtils.java:521) 	at org.springframework.cglib.core.AbstractClassGenerator.generate(AbstractClassGenerator.java:359) 	at org.springframework.cglib.core.AbstractClassGenerator$ClassLoaderData$3.apply(AbstractClassGenerator.java:106) 	at org.springframework.cglib.core.AbstractClassGenerator$ClassLoaderData$3.apply(AbstractClassGenerator.java:104) 	at org.springframework.cglib.core.internal.LoadingCache$2.call(LoadingCache.java:54) 	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264) 	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java) 	at org.springframework.cglib.core.internal.LoadingCache.createEntry(LoadingCache.java:61) 	at org.springframework.cglib.core.internal.LoadingCache.get(LoadingCache.java:34) 	at org.springframework.cglib.core.AbstractClassGenerator$ClassLoaderData.get(AbstractClassGenerator.java:130) 	at org.springframework.cglib.core.AbstractClassGenerator.create(AbstractClassGenerator.java:315) 	at org.springframework.cglib.reflect.FastClass$Generator.create(FastClass.java:65) 	at org.springframework.cglib.proxy.MethodProxy.helper(MethodProxy.java:135) 	at org.springframework.cglib.proxy.MethodProxy.init(MethodProxy.java:76) 	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:216) 	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684) 	at net.xxx.service.impl.ServiceImpl$$EnhancerBySpringCGLIB$$49f6ec4b.toString() 	at net.xxx.MessageConsumer.onMessageHandler(MessageConsumer.java:216) 	at net.xxx.consumer.Consumer.onMessage(Consumer.java:144) 	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1520) 	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1411) 	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1387) 	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1366) 	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:848) 	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:832) 	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$700(SimpleMessageListenerContainer.java:78) 	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1073) 	at java.base/java.lang.Thread.run(Thread.java:834)  ```  I am using Java 11.0.1 with Spring Boot 2.1.0.  ---  **Affects:** 5.1.2  **Issue Links:** - #16241 CglibAopProxy needs to detect package-visible methods when defined in a different ClassLoader - #20414 MethodHandles.Lookup.defineClass for CGLIB class definition purposes  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/2a5d7690b6259c4f8a00be387d4b38f554ac9b88","closed","in: core,","spring-projects-issues","2018-11-15T10:08:48Z","2019-01-11T13:33:55Z"
"","22180","Add note to Scope documentation on SimpleTransactionScope [SPR-17651]","**[Marten Deinum](https://jira.spring.io/secure/ViewProfile.jspa?name=mdeinum)** opened **[SPR-17651](https://jira.spring.io/browse/SPR-17651?redirect=false)** and commented  While doing some research I came across the `SimpleTransactionScope` class. Which isn't documented in the Scope section of the reference guide, unlike the `SimpleThreadScope` which is.       ---  **Reference URL:** https://docs.spring.io/spring/docs/current/spring-framework-reference/core.html#beans-factory-scopes","closed","type: documentation,","spring-projects-issues","2019-01-09T07:21:43Z","2019-02-05T00:00:19Z"
"","22053","ResponseEntityExceptionHandler is ignored [SPR-17521]","**[Marrache Mickael](https://jira.spring.io/secure/ViewProfile.jspa?name=miko95)** opened **[SPR-17521](https://jira.spring.io/browse/SPR-17521?redirect=false)** and commented  When upgrading Spring Boot from version 2.0.4 to 2.0.6, the Spring dependencies are upgraded from version 5.0.8 to 5.0.10.  With the new version, my _`@ControllerAdvice`_ is ignored, while it is not with the previous version.     ```java @ControllerAdvice public class RestExceptionHandler extends ResponseEntityExceptionHandler { } ```  Moreover, I observe new warnings in the logs:  ``` 2018-11-20 12:50:16.703 WARN 3316 --- [qtp124323713-18] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.IllegalArgumentException: Page index must not be less than zero!] ```     ---  **Affects:** 5.0.9  **Attachments:** - [spring-issue-test.zip](https://jira.spring.io/secure/attachment/26104/spring-issue-test.zip) (_4.98 kB_)  **Referenced from:** commits https://github.com/spring-projects/spring-framework-issues/commit/d98f55abaf9781946408f13dc64393e7dddee4b1, https://github.com/spring-projects/spring-framework-issues/commit/b281f0eb382206a1645142765fa2d757142cd2d6","closed","status: invalid,","spring-projects-issues","2018-11-20T13:11:30Z","2019-01-12T20:08:25Z"
"","22046","[Docs]: How to customize WebSocket server config with STOMP over WebSocket [SPR-17514]","**[Marrache Mickael](https://jira.spring.io/secure/ViewProfile.jspa?name=miko95)** opened **[SPR-17514](https://jira.spring.io/browse/SPR-17514?redirect=false)** and commented  I would like to customize the Jetty `WebSocketPolicy` when using Spring Web Sockets with STOMP.  Here is my config class:  ```java @Configuration @EnableWebSocketMessageBroker public class WebSocketConfig extends AbstractSecurityWebSocketMessageBrokerConfigurer {      @Override     public void configureWebSocketTransport(WebSocketTransportRegistration registration) {              registration.setMessageSizeLimit(128 * 1024);     } } ```  When setting the message size limit via the `WebSocketTransportRegistration`, it doesn't solve the problem since there is a text message size check made by Jetty before Spring is involved. You can see it via the following stack trace:     ```  org.eclipse.jetty.websocket.api.MessageTooLargeException: Text message size [70412] exceeds maximum size [65536]  at org.eclipse.jetty.websocket.api.WebSocketPolicy.assertValidTextMessageSize(WebSocketPolicy.java:140) ~[websocket-api-9.4.11.v20180605.jar:9.4.11.v20180605]  at org.eclipse.jetty.websocket.common.Parser.assertSanePayloadLength(Parser.java:127) ~[websocket-common-9.4.11.v20180605.jar:9.4.11.v20180605]  at org.eclipse.jetty.websocket.common.Parser.parseFrame(Parser.java:485) ~[websocket-common-9.4.11.v20180605.jar:9.4.11.v20180605]  at org.eclipse.jetty.websocket.common.Parser.parse(Parser.java:241) ~[websocket-common-9.4.11.v20180605.jar:9.4.11.v20180605]  at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.readParse(AbstractWebSocketConnection.java:560) [websocket-common-9.4.11.v20180605.jar:9.4.11.v20180605]  at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:391) [websocket-common-9.4.11.v20180605.jar:9.4.11.v20180605]  at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:281) [jetty-io-9.4.11.v20180605.jar:9.4.11.v20180605]  at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:102) [jetty-io-9.4.11.v20180605.jar:9.4.11.v20180605]  at org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:118) [jetty-io-9.4.11.v20180605.jar:9.4.11.v20180605]  at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:333) [jetty-util-9.4.11.v20180605.jar:9.4.11.v20180605]  at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:310) [jetty-util-9.4.11.v20180605.jar:9.4.11.v20180605]  at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:168) [jetty-util-9.4.11.v20180605.jar:9.4.11.v20180605]  at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:126) [jetty-util-9.4.11.v20180605.jar:9.4.11.v20180605]  at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:366) [jetty-util-9.4.11.v20180605.jar:9.4.11.v20180605]  at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:762) [jetty-util-9.4.11.v20180605.jar:9.4.11.v20180605]  at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:680) [jetty-util-9.4.11.v20180605.jar:9.4.11.v20180605]  at java.lang.Thread.run(Thread.java:745) [na:1.8.0_101] ```  Therefore, I'm looking for a way to provide a custom `WebSocketPolicy` and pass it when the `JettyRequestUpgradeStrategy` is created but I can't find a way to do it.  It looks possible when the following configuration class is used but then it misses message broker configuration:  ```java @Configuration @EnableWebSocket public class WebSocketConfig implements WebSocketConfigurer {  } ```      ---  **Affects:** 5.0.10  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/d6a5c3428be0f2d011c042761e18f822ebb4aba0","closed","in: web,","spring-projects-issues","2018-11-18T11:31:20Z","2019-01-13T04:01:18Z"
"","22044","Jetty WebSocketClient stopped too early [SPR-17512]","**[Marrache Mickael](https://jira.spring.io/secure/ViewProfile.jspa?name=miko95)** opened **[SPR-17512](https://jira.spring.io/browse/SPR-17512?redirect=false)** and commented  I'm using the following configuration:     ```java @Bean(initMethod=""start"", destroyMethod = ""stop"") @Autowired public WebSocketStompClient webSocketStompClient(ObjectMapper objectMapper) {     org.eclipse.jetty.websocket.client.WebSocketClient jettyClient = new org.eclipse.jetty.websocket.client.WebSocketClient();     jettyClient.setStopAtShutdown(false);      JettyWebSocketClient client = new JettyWebSocketClient(jettyClient);      WebSocketStompClient stompClient = new WebSocketStompClient(client);      stompClient.setAutoStartup(false);      MappingJackson2MessageConverter messageConverter = new MappingJackson2MessageConverter();     messageConverter.setObjectMapper(objectMapper);       stompClient.setMessageConverter(messageConverter);      ThreadPoolTaskScheduler taskScheduler = new ThreadPoolTaskScheduler();      taskScheduler.setPoolSize(poolSize);      taskScheduler.setThreadNamePrefix(threadNamePrefix);      taskScheduler.initialize();          stompClient.setTaskScheduler(taskScheduler);      return stompClient; } ```  As you can see, the only managed bean here should be _WebSocketStompClient_. I also explicitly disable the ""stops at shutdown"" feature of the Jetty _WebSocketClient_ so that I manage start/stop myself (vis Spring).  When I terminate application, the Jetty _WebSocketClient_ is closed first and I can't explain why. It should not be registered in Spring at all (I don't use the _`@Bean`_ annotation). I note that it uses Jetty specific lifecycle annotations which should not interfere with Spring.  Not sure what is going on here.  Here are the relevant logs:  ```java 2018-11-18 10:40:19.027 INFO 24580 — [ Thread-24] o.s.c.support.DefaultLifecycleProcessor : Stopping beans in phase 2147483647  2018-11-18 10:40:19.049 DEBUG 24580 — [ Thread-24] o.e.j.websocket.client.WebSocketClient : Stopping WebSocketClient@f661366[httpClient=HttpClient@79c97cb{STARTED},openSessions.size=1] ```  ---  **Affects:** 5.0.10","closed","in: web,","spring-projects-issues","2018-11-18T09:10:36Z","2019-01-12T20:09:27Z"
"","21920","ReadInactivityTask scheduled for a while even after connection is closed [SPR-17387]","**[Marrache Mickael](https://jira.spring.io/secure/ViewProfile.jspa?name=miko95)** opened **[SPR-17387](https://jira.spring.io/browse/SPR-17387?redirect=false)** and commented  I have a configuration with client+server heartbeats (10000,10000). After 30s without receiving anything from the server, the ReadInactivityTask is executed so I can see in the logs the following line:  ```java o.s.m.simp.stomp.DefaultStompSession : Server has gone quiet. Closing connection in session id=13cf6d16-f7e1-ce12-0bce-7be6725a4f02. ```  Looking at the code, I see that the underlying TcpConnection is closed. However, I do see ReadInactivityTask executed again and again until it stops at some point.  For some reason, the tasks are not canceled immediately. Here is the relevant code:  ```java @Override public void afterConnectionClosed(WebSocketSession session, CloseStatus closeStatus) throws Exception {     cancelInactivityTasks();     this.connectionHandler.afterConnectionClosed(); }  private void cancelInactivityTasks() {     for (ScheduledFuture task : this.inactivityTasks) {         try {             task.cancel(true);         } catch (Throwable ex) {             // Ignore         }     }     this.lastReadTime = -1;     this.lastWriteTime = -1;     this.inactivityTasks.clear(); } ```  I guess the afterConnectionClosedHandler() method is not called on time.   ---  **Affects:** 5.0.8","closed","in: web,","spring-projects-issues","2018-10-16T08:26:32Z","2019-01-11T13:12:16Z"
"","21915","Session not considered disconnected when network is unreachable [SPR-17382]","**[Marrache Mickael](https://jira.spring.io/secure/ViewProfile.jspa?name=miko95)** opened **[SPR-17382](https://jira.spring.io/browse/SPR-17382?redirect=false)** and commented  Here is my configuration:  ```java @Bean(initMethod=""start"", destroyMethod = ""stop"") @Autowired  public WebSocketStompClient webSocketClient(ObjectMapper objectMapper) {     final boolean autoStartup = false;     final int poolSize = 1;     final String threadNamePrefix = ""ws-heartbeats"";      JettyWebSocketClient client = new JettyWebSocketClient();      WebSocketStompClient stompClient = new WebSocketStompClient(client);            stompClient.setAutoStartup(autoStartup);      MappingJackson2MessageConverter messageConverter = new MappingJackson2MessageConverter();     messageConverter.setObjectMapper(objectMapper);     stompClient.setMessageConverter(messageConverter);      ThreadPoolTaskScheduler taskScheduler = new ThreadPoolTaskScheduler();        taskScheduler.setPoolSize(poolSize);      taskScheduler.setThreadNamePrefix(threadNamePrefix);      taskScheduler.initialize();     stompClient.setTaskScheduler(taskScheduler);      return stompClient; }  //Then I use the client to create sessions  client.connect(url, headers, ...); ```  Based on this configuration, I'm able to create sessions that successfully connect and heartbeat works as expected (with default values 10000,10000).  However, if I disable Internet access on the client (a CentOS server), I expect to be able to detect that when I use the session, but that's not the case.  ```java // For example, after heartbeats are not received after a certain period of time,  // I expect the session to appeared disconnected session.isConnected(); // returns true even if the underlying TCP connection is bad  // More than that, if I try to use the session to send a message, no exception is thrown // The only thing that shows that something is wrong is the receipt lost task which is called in such case (after 15 seconds) Receiptable receiptable = session.send(""/app/mypath"", message); ```  Am I misunderstanding something here? Is there some checking made internally to ensure the TCP connection is good?         ---  **Affects:** 5.0.8","closed","status: declined,","spring-projects-issues","2018-10-15T14:15:52Z","2019-01-12T16:20:43Z"
"","22090","Use Netty's optimized UTF-8 encoding if available [SPR-17558]","**[Mark Paluch](https://jira.spring.io/secure/ViewProfile.jspa?name=mp911de)** opened **[SPR-17558](https://jira.spring.io/browse/SPR-17558?redirect=false)** and commented  `CharSequenceEncoder` uses `CharBuffer.wrap` and `charset.encode` to encode `String` data to its binary representation. There can be two optimizations made here:  1. `CharSequenceEncoder` uses typically UTF-8 encoding and Java's UTF-8 encoder requires significant computing time. It would make sense to detect this case and whether netty is on the class path to use netty's optimized UTF-8 encoding via `ByteBufUtil.writeUtf8(…)` 2. Encoding creates a new unpooled `ByteBuffer` when calling `Charset.encode`. Netty's `ByteBufUtil.encodeString()` can encode a `String` to a pooled buffer that reduces GC pressure.  See also attached profiling snapshot.   ---  **Attachments:** - [LettucetestApplication-2018-12-03-RenderStringToBytesCharsetEncoder.snapshot.zip](https://jira.spring.io/secure/attachment/26134/LettucetestApplication-2018-12-03-RenderStringToBytesCharsetEncoder.snapshot.zip) (_2.40 MB_) - [Write as String.png](https://jira.spring.io/secure/attachment/26133/Write+as+String.png) (_431.36 kB_)  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/5a8b8b11e429042ebcbe141f2fcb0fabd1dfae4d, https://github.com/spring-projects/spring-framework/commit/6361b0cb236e62b24a07af5d0a20f42d78d4efaa, https://github.com/spring-projects/spring-framework/commit/a00be62b046d989c94879f03711e82b5eedfdd10, https://github.com/spring-projects/spring-framework/commit/4955d08f2891810627961ac4df660b9bed64a30b  0 votes, 5 watchers","closed","type: enhancement,","spring-projects-issues","2018-12-03T14:24:09Z","2019-01-09T13:06:52Z"
"","21969","MockMvc doesn't provide content type or body in case of an HTTP error [SPR-17436]","**[marek.zurawski](https://jira.spring.io/secure/ViewProfile.jspa?name=marek)** opened **[SPR-17436](https://jira.spring.io/browse/SPR-17436?redirect=false)** and commented  I created simple Spring Boot application with [RestController](https://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/web/bind/annotation/RestController.html) and provided two test classes. One using [MockMvc](https://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/test/web/servlet/MockMvc.html) and one using [RestAssured](https://www.javadoc.io/doc/io.rest-assured/rest-assured/3.2.0). All is available in referenced git repository, commit: 5e582670001373804778abd41039cf23ba476bb9.  Each class have 2 tests. One for http 200 status code and one for 415. The problem is that I'm not able to check returned content type and body in case http 415 code as MockMvc claims that there is no content type set and body doesn't contain expected ""status"" field.   ---  **Affects:** 5.0.9  **Reference URL:** https://github.com/hawk1234/characterEncodingTest  **Attachments:** - [test_report.zip](https://jira.spring.io/secure/attachment/26076/test_report.zip) (_19.37 kB_)","closed","status: invalid,","spring-projects-issues","2018-10-26T10:14:15Z","2019-01-12T05:17:52Z"
"","22013","Support Spring Boot style flexible Duration value parsing [SPR-17481]","**[manderson23](https://jira.spring.io/secure/ViewProfile.jspa?name=manderson23)** opened **[SPR-17481](https://jira.spring.io/browse/SPR-17481?redirect=false)** and commented  Spring Boot supports specifying duration values in property files using values such as 15ms, 10s etc. (See https://github.com/spring-projects/spring-boot/issues/11078).  However, this means that there are inconsistencies when trying to use the values of these properties with Spring Framework annotations. An example was provided in https://github.com/spring-projects/spring-boot/issues/15126 where I would like to use a property value in a Scheduled annotation e.g.  ```java @Scheduled(fixedRateString = ""${my-prop.rate}"") ```  In this case I have to specify the property value using java.time.Duration syntax instead of the Spring Boot flexible syntax as `ScheduledAnnotationBeanPostProcessor` is hardcoded to use java.time.Duration parsing.  It would be good if Spring Framework also supported the flexible syntax to allow consistent property values to be used.   ---  **Affects:** 5.1.2","open","type: enhancement,","spring-projects-issues","2018-11-08T21:46:37Z","2018-11-08T21:56:51Z"
"","22152","a [SPR-17620]","**[Mahdi Amiri](https://jira.spring.io/secure/ViewProfile.jspa?name=m.amiri)** opened **[SPR-17620](https://jira.spring.io/browse/SPR-17620?redirect=false)** and commented  ---  This issue is a sub-task of #17920","closed","status: invalid,","spring-projects-issues","2018-12-22T04:39:28Z","2019-01-12T05:17:25Z"
"","21940","404.html page causes error when using Thymeleaf with Spring WebFlux [SPR-17407]","**[Mahan Hashemizadeh](https://jira.spring.io/secure/ViewProfile.jspa?name=mahanhz)** opened **[SPR-17407](https://jira.spring.io/browse/SPR-17407?redirect=false)** and commented  I upgraded from Spring boot 2.0.5 --> 2.0.6 but the 404.html page (under templates/error/404.html as I am using Thymeleaf) no longer works in my spring webflux application.  I get the following stacktrace:  ```java java.lang.UnsupportedOperationException: null  at java.util.Collections$UnmodifiableMap.put(Collections.java:1457)  at org.thymeleaf.spring5.view.reactive.ThymeleafReactiveView.render(ThymeleafReactiveView.java:361)  at org.springframework.web.reactive.function.server.DefaultRenderingResponseBuilder$DefaultRenderingResponse.lambda$writeToInternal$2(DefaultRenderingResponseBuilder.java:201) at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)  at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)  at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)  at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:450)  at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76) ... ```  It appears that **DefaultServerResponseBuilder** creates as **unmodifiableMap** model which when passed to **ThymeleafReactiveView** (in **render(...)**) fails as it attempts a **put(...)** on the unmodifiable model.  I haven't created an example app to show this issue, but if you need it then let me know.  ---  **Affects:** 5.0.10  **Issue Links:** - #21967 ThymeleafReactiveView in conjunction with RouterFunction render fails with UnsupportedOperationException (_**""is duplicated by""**_)","closed","status: invalid,","spring-projects-issues","2018-10-18T15:32:46Z","2019-01-12T05:17:57Z"
"","22151","Cannot convert from Collection to RegularEnumSet [SPR-17619]","**[Madhura Bhave](https://jira.spring.io/secure/ViewProfile.jspa?name=mbhave)** opened **[SPR-17619](https://jira.spring.io/browse/SPR-17619?redirect=false)** and commented  In Spring Boot, when binding `EnumSet` values, the `CollectionToCollectionConverter` is called with a target type of `RegularEnumSet`. `CollectionFactory` tries to create a new instance of `RegularEnumSet` and fails.  We could probably fix this by changing [this](https://github.com/spring-projects/spring-framework/blob/master/spring-core/src/main/java/org/springframework/core/CollectionFactory.java#L198) to an `isAssignable` check.  The entire stacktrace is in [this comment](https://github.com/spring-projects/spring-boot/issues/15539#issuecomment-449379463).   ---  **Affects:** 4.3.21, 5.0.11, 5.1.3  **Reference URL:** https://github.com/spring-projects/spring-boot/issues/15539  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/21baa7287bdc9a5dbf65441d045f38ce202bff98, https://github.com/spring-projects/spring-framework/commit/8685f9fea353d5a209543e102cd0941ab4dff435, https://github.com/spring-projects/spring-framework/commit/31a24720a6c7c2c6d1f088dd9d0623facb5afea1  **Backported to:** [5.0.12](https://github.com/spring-projects/spring-framework/milestone/193?closed=1), [4.3.22](https://github.com/spring-projects/spring-framework/milestone/171?closed=1)","closed","in: core,","spring-projects-issues","2018-12-22T01:34:50Z","2019-01-09T09:57:56Z"
"","22016","*Utils.find### to return Optional [SPR-17484]","**[László Stahorszki](https://jira.spring.io/secure/ViewProfile.jspa?name=rolaca11)** opened **[SPR-17484](https://jira.spring.io/browse/SPR-17484?redirect=false)** and commented  With the release of Optional in Java 8, I think it would be appropriate for methods, like AnnotationUtils.findAnnotation() to return Optional\, so that we don't need additional checking parts if an annotation in this instance exists or not  ---  **Issue Links:** - #20099 Introduce null-safety of Spring Framework API","closed","type: enhancement,","spring-projects-issues","2018-11-09T16:46:02Z","2019-01-11T13:27:24Z"
"","22075","Confusing mockMvc asserts on async result  [SPR-17543]","**[Lukas Krecan](https://jira.spring.io/secure/ViewProfile.jspa?name=dart0)** opened **[SPR-17543](https://jira.spring.io/browse/SPR-17543?redirect=false)** and commented  Let's take the following test of an asynchronous API  ``` MvcResult mvcResult = mockMvc.perform(post(""/asyncEndpoint"")             .andExpect(status().isOk()) // passes but should not             .andReturn();  mockMvc.perform(asyncDispatch(mvcResult))             .andExpect(status().isConflict()); // the real status ```  We execute the request and check the status at once. Surprisingly it passes, even if the result is not ready yet and the final status will be different. I would except first `.andExpect(status().isOk())`  to fail since the result has not yet arrived (IllegalStateException?).  It's especially surprising if you forget that you have to test async controllers differently. Then you spend nontrivial amount of time investigating why your controller is returning 200 when you expect it to return an error.    ---  **Affects:** 5.1.2","open","in: test,","spring-projects-issues","2018-11-27T19:44:15Z","2019-01-11T13:31:09Z"
"","21916","ExceptionHandlerExceptionResolver started to log on WARN level [SPR-17383]","**[Lukas Krecan](https://jira.spring.io/secure/ViewProfile.jspa?name=dart0)** opened **[SPR-17383](https://jira.spring.io/browse/SPR-17383?redirect=false)** and commented  This [commit](https://github.com/spring-projects/spring-framework/commit/04141dee65ff5e078e2a9137ff7052351f6ab66c#diff-4386c732a724a039db2007b1bac7d3d5) changed behavior of ExceptionResolver to log exceptions on WARN.  The trouble is, that we have alerts on Exceptions in logs and by default log on INFO and above so we started to get alerts for resolved exceptions.  As a workaround, we can change log level ExceptionHandlerExceptionResolver to ERROR, but we would have to change it every microservice we upgrade to newest Spring.  ---  **Affects:** 5.1.1  **Issue Links:** - #21932 AbstractHandlerExceptionResolver logs handled exceptions at WARN (_**""is duplicated by""**_) - #19473 ExceptionHandlerExceptionResolver should not log propagated exceptions at warn level - #21714 Consistent warn logging for handled exceptions  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/8e980d9a63b3bae633a7e310e94aaf52b9d490ec, https://github.com/spring-projects/spring-framework/commit/41e6aa6de2f2d8f8a322d41241ee99e75b39c1b2, https://github.com/spring-projects/spring-framework/commit/1621125ccf183412280293bff9523e06c44d1e58, https://github.com/spring-projects/spring-framework/commit/6ea3441adf5bbd9e618f4dad3a2cb3a0e0b22fbe  **Backported to:** [5.0.11](https://github.com/spring-projects/spring-framework/milestone/192?closed=1), [4.3.21](https://github.com/spring-projects/spring-framework/milestone/170?closed=1)","closed","type: bug,","spring-projects-issues","2018-10-15T14:47:58Z","2019-01-11T13:12:09Z"
"","21993","DefaultResponseErrorHandler does not handle status values outside of HttpStatus enum [SPR-17461]","**[Liam Bryan](https://jira.spring.io/secure/ViewProfile.jspa?name=.com)** opened **[SPR-17461](https://jira.spring.io/browse/SPR-17461?redirect=false)** and commented  The `DefaultResponseErrorHandler` does not handle `HttpStatus` values not specified in the enum `values`.  For example; a service we call returns `299` which reports as an error in the latest spring versions (linked code).  In _previous_ versions (checked 4.3.14 as used in current project), this wasn't reported as an error; however the thrown `UnknownHttpStatusCodeException` (which is caught, and converted to `false` for there being an error) contained the `responseBody` as one of its arguments, which in turn closed the `InputStream` or the `response` meaning that the body of the response could not be parsed to a `ResponseEntity` anywhere.     At present, this is being gotten around with a custom class:  ```java public final class UnrecognisedHttpStatusCodeFriendlyResponseErrorHandler extends DefaultResponseErrorHandler {     @Override     public boolean hasError(final ClientHttpResponse response) throws IOException {         try {             final HttpStatus.Series statusSeries = HttpStatus.Series.valueOf(response.getRawStatusCode());             return (HttpStatus.Series.CLIENT_ERROR.equals(statusSeries))                     || (HttpStatus.Series.SERVER_ERROR.equals(statusSeries));         } catch (final IllegalArgumentException iaEx) {             // Series was not in 1-5...  Something's probably wrong...             return true;         }     } }  ```  ---  **Affects:** 4.3.14, 5.1.2  **Reference URL:** https://github.com/spring-projects/spring-framework/blob/c2b55e60cd6d802114b8ea07de54c28b0873f65c/spring-web/src/main/java/org/springframework/web/client/DefaultResponseErrorHandler.java#L52  **Issue Links:** - #21971 RestTemplate does not throw exception for custom error codes - #21145 DefaultResponseErrorHandler wastes the body of a response with an unknown status","closed","in: web,","spring-projects-issues","2018-11-02T13:24:55Z","2019-02-08T21:26:15Z"
"","21967","ThymeleafReactiveView in conjunction with RouterFunction render fails with UnsupportedOperationException [SPR-17434]","**[Leonard Brünings](https://jira.spring.io/secure/ViewProfile.jspa?name=leonard84)** opened **[SPR-17434](https://jira.spring.io/browse/SPR-17434?redirect=false)** and commented  The problem is that `org.springframework.web.reactive.function.server.DefaultRenderingResponseBuilder.DefaultRenderingResponse#DefaultRenderingResponse` wraps the `model` in an `unmodifiableMap` and when `org.thymeleaf.spring5.view.reactive.ThymeleafReactiveView#render` tries to add something to the model it fails with an `UnsupportedOperationException`.  If the assumption that the model should be mutable is false, then this would be a bug in Thymeleaf instead.  ``` java.lang.UnsupportedOperationException: null 	at java.util.Collections$UnmodifiableMap.put(Collections.java:1457) ~[na:1.8.0_181] 	at org.thymeleaf.spring5.view.reactive.ThymeleafReactiveView.render(ThymeleafReactiveView.java:361) ~[thymeleaf-spring5-3.0.10.RELEASE.jar:3.0.10.RELEASE] 	at org.springframework.web.reactive.function.server.DefaultRenderingResponseBuilder$DefaultRenderingResponse.lambda$writeToInternal$2(DefaultRenderingResponseBuilder.java:201) ~[spring-webflux-5.0.10.RELEASE.jar:5.0.10.RELEASE] ```  See attached fail-demo.zip to replicate this behavior.  ---  **Affects:** 5.0.10  **Attachments:** - [fail-demo.zip](https://jira.spring.io/secure/attachment/26074/fail-demo.zip) (_50.37 kB_)  **Issue Links:** - #21940 404.html page causes error when using Thymeleaf with Spring WebFlux (_**""duplicates""**_)","closed","in: web,","spring-projects-issues","2018-10-25T14:42:19Z","2019-01-12T16:44:17Z"
"","19926","Open parameter autowiring utility for external use [SPR-17627]","**[Ledoyen Loïc](https://jira.spring.io/secure/ViewProfile.jspa?name=ledoyen)** opened **[SPR-17627](https://jira.spring.io/browse/SPR-17627?redirect=false)** and commented  ## Proposal  Open autowiring utility methods in `ParameterAutowireUtils`, so they can be used by other testing frameworks.  ## Deliverables  - Move functionality currently in `ParameterAutowireUtils` to a new location in the `spring-beans` module.   - Actual destination: TBD - Remove `ParameterAutowireUtils` from the `spring-test` module.  ---  **Reference URL:** https://github.com/spring-projects/spring-framework/pull/2060  **Issue Links:** - #18628 Introduce autowiring support for individual handler method parameters","closed","status: superseded,","spring-projects-issues","2018-12-26T17:41:26Z","2019-02-22T23:18:25Z"
"","22102","Expose a setExceptionListener method in DefaultJmsListenerContainerFactory [SPR-17570]","**[leachad](https://jira.spring.io/secure/ViewProfile.jspa?name=leachad)** opened **[SPR-17570](https://jira.spring.io/browse/SPR-17570?redirect=false)** and commented  As a user of the `spring-jms` artifacts, I would like to be able to register an exception listener on the container(s) that get generated using the `DefaultJmsListenerContainerFactory`.  Currently, this method is not configurable in the `DefaultJmsListenerContainerFactory` object but `setErrorHandler` for message processing is.   ---  **Reference URL:** https://stackoverflow.com/questions/53639178/why-does-defaultjmslistenercontainerfactory-not-expose-setexceptionlistener-meth/53639840#53639840","closed","type: enhancement,","spring-projects-issues","2018-12-05T22:46:44Z","2020-07-19T18:02:30Z"
"","22124","Exporting a lazily initialized bean (which implements SelfNaming and is annotated with ManagedResource annotation) gives IllegalStateException [SPR-17592]","**[Lavish Kothari](https://jira.spring.io/secure/ViewProfile.jspa?name=lavishkothari)** opened **[SPR-17592](https://jira.spring.io/browse/SPR-17592?redirect=false)** and commented  I'm having a bean that is * annotated with `ManagedResource` * lazily initialized * implements `SelfNaming`  I'm exporting it using spring's `AnnotationMBeanExporter`.  All this works good when I'm using spring version `4.3.16.RELEASE`, but when I upgraded my spring version to `5.0.5.RELEASE` or `5.1.3.RELEASE` this code started giving me `IllegalStateException`.  My Bean definition and the spring's context.xml looks like this:   SampleBean.java  ```java package com.jmx.trial.dummybeans;  import org.springframework.jmx.export.annotation.ManagedResource; import org.springframework.jmx.export.naming.SelfNaming;  import javax.management.MalformedObjectNameException; import javax.management.ObjectName;  @ManagedResource public class SampleBean implements SelfNaming {     @Override     public ObjectName getObjectName() throws MalformedObjectNameException {         return new ObjectName(""com.jmx.trial:name=sampleBean"");     } } ```     application-context.xml  ```java                                     ```  I understand that an extra validation was added [here](https://github.com/spring-projects/spring-framework/blob/master/spring-context/src/main/java/org/springframework/jmx/export/MBeanExporter.java#L1115), and this is causing `IllegalStateException` but I'm not completely sure why that was added.     The stack-trace looks like this:  ```java org.springframework.jmx.export.UnableToRegisterMBeanException: Unable to register MBean [sampleBean] with key 'sampleBean'; nested exception is java.lang.IllegalStateException: Not initialized      at org.springframework.jmx.export.MBeanExporter.registerBeanNameOrInstance(MBeanExporter.java:625)     at org.springframework.jmx.export.MBeanExporter.lambda$registerBeans$2(MBeanExporter.java:551)     at java.base/java.util.HashMap.forEach(HashMap.java:1336)     at org.springframework.jmx.export.MBeanExporter.registerBeans(MBeanExporter.java:551)     at org.springframework.jmx.export.MBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:434)     at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:863)     at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:863)     at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)     at org.springframework.context.support.ClassPathXmlApplicationContext.(ClassPathXmlApplicationContext.java:144)     at org.springframework.context.support.ClassPathXmlApplicationContext.(ClassPathXmlApplicationContext.java:85)     at com.jmx.trial.MBeanExporterTest.testBeanExportedWithXml(MBeanExporterTest.java:79)     at com.jmx.trial.MBeanExporterTest.testForLazyAutoDetectWithSelfNaming(MBeanExporterTest.java:44)     at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)     at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.base/java.lang.reflect.Method.invoke(Method.java:566)     at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)     at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)     at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)     at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)     at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)     at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)     at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)     at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)     at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)     at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)     at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)     at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)     at org.junit.runners.ParentRunner.run(ParentRunner.java:363)     at org.junit.runner.JUnitCore.run(JUnitCore.java:137)     at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)     at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)     at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)     at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) Caused by: java.lang.IllegalStateException: Not initialized     at org.springframework.util.Assert.state(Assert.java:73)     at org.springframework.jmx.export.MBeanExporter$NotificationPublisherAwareLazyTargetSource.postProcessTargetObject(MBeanExporter.java:1115)     at org.springframework.aop.target.LazyInitTargetSource.getTarget(LazyInitTargetSource.java:72)     at org.springframework.jmx.export.MBeanExporter$NotificationPublisherAwareLazyTargetSource.getTarget(MBeanExporter.java:1103)     at org.springframework.aop.framework.CglibAopProxy$DynamicUnadvisedInterceptor.intercept(CglibAopProxy.java:475)     at com.jmx.trial.dummybeans.SampleBean$$EnhancerBySpringCGLIB$$9cd1c95b.getObjectName()     at org.springframework.jmx.export.MBeanExporter.getObjectName(MBeanExporter.java:752)     at org.springframework.jmx.export.MBeanExporter.registerLazyInit(MBeanExporter.java:726)     at org.springframework.jmx.export.MBeanExporter.registerBeanNameOrInstance(MBeanExporter.java:596)     ... 33 more ```     My experiments: * When I don't lazily initialize the `SampleBean`, I don't get this `IllegalStateException`. * When I annotate SampleBean with `ManagedResource(objectName = ""com.jmx.trial:name=sampleBean"")` and make `SampleBean` _not_ implement `SelfNaming` interface, again I don't get `IllegalStateException` * When I debug this and place a lot of breakpoints in `MBeanExporter` and `CGLibAopProxy` I don't get this exception. (This is specifically interesting that in debug-mode the tests run successfully but in normal run mode the tests fails.)  Though not very sure, but I think implementing `SelfNaming` interface is not a very good idea as the javadocs of `SelfNaming` interface says that:  > This interface is mainly intended for internal usage.  I'm not sure if it is the problem with using `SelfNaming` interface or I'm doing something fundamentally wrong. Can you please explain this behavior and point me to the fundamentals that I'm missing.  PS: some of my findings: (might be unrelated) From [here](https://docs.spring.io/spring/docs/current/spring-framework-reference/integration.html) I found this caution point:  > Do not use interface-based AOP proxies in combination with autodetection of JMX annotations in your bean classes.  I don't completely understand this, but is this the rule that I'm violating?     I feel that the `Assert.state` that is getting called in `postProcessTargetObject` should be moved into the method `injectNotificationPublisherIfNecessary` and should be called only if `managedResource instanceof NotificationPublisherAware` is `true`.  ---  **Affects:** 5.0.5, 5.1.3  **Reference URL:** https://stackoverflow.com/questions/53711613/exporting-a-lazily-initialized-bean-which-implements-selfnaming-and-is-annotate  **Attachments:** - [lazy-autodetect-with-selfNaming.xml](https://jira.spring.io/secure/attachment/26151/lazy-autodetect-with-selfNaming.xml) (_661 bytes_) - [LazyBeanExportingTest.java](https://jira.spring.io/secure/attachment/26153/LazyBeanExportingTest.java) (_1.16 kB_) - [SampleBean.java](https://jira.spring.io/secure/attachment/26152/SampleBean.java) (_496 bytes_)  **Issue Links:** - #20276 Extend null-safety to field level  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/e95c1b3153bfa0318d0bbf440bf257ea38e792e5, https://github.com/spring-projects/spring-framework/commit/2c98c1b81a2bfb6d0d13415a2fd222b642106146  **Backported to:** [5.0.12](https://github.com/spring-projects/spring-framework/milestone/193?closed=1)","closed","in: core,","spring-projects-issues","2018-12-11T17:24:31Z","2019-01-11T13:27:57Z"
"","22103","Allow java.time types for setting the Last-Modified header [SPR-17571]","**[Lars Grefer](https://jira.spring.io/secure/ViewProfile.jspa?name=larsgrefer)** opened **[SPR-17571](https://jira.spring.io/browse/SPR-17571?redirect=false)** and commented  `org.springframework.http.ResponseEntity.HeadersBuilder.lastModified` and `org.springframework.http.HttpHeaders.setLastModified` only accept the date as `long`.  This long value is then internally converted to a `java.time.Instant` and a `java.time.ZonedDateTime`.  I propose to add overloads for the methods listed above which directly accept the ""new"" `java.time` types.  ---  **Affects:** 5.1.3  **Issue Links:** - #19441 TaskScheduler interface should support java.time.Instant/Duration - #21104 Overloaded convenience setters on HttpHeaders - #20220 Consider using ZonedDateTime in HttpHeaders - #22120 Consistent handling of null header values in HttpHeaders  **Referenced from:** pull request https://github.com/spring-projects/spring-framework/pull/2039, and commits https://github.com/spring-projects/spring-framework/commit/a240cfcf2f906cfcad6fd2dd0fcddf1bdee94e6a, https://github.com/spring-projects/spring-framework/commit/9abd4ed33d009d6cfc7cc1e3600bb8433c25860a, https://github.com/spring-projects/spring-framework/commit/6a012147c4566f0ae75a8f1fb017cd380c1d68c6","closed","type: enhancement,","spring-projects-issues","2018-12-06T00:35:34Z","2019-01-11T13:29:07Z"
"","22108","WebClient throws ""Only one connection receive subscriber allowed."" when response generates a WebClientResponseException [SPR-17576]","**[Kyle Cronin](https://jira.spring.io/secure/ViewProfile.jspa?name=kylecronin@adp)** opened **[SPR-17576](https://jira.spring.io/browse/SPR-17576?redirect=false)** and commented  Noticed this error while upgrading spring boot from 2.0.0 to 2.1.1 and was able to reproduce with a simple test created through start.spring.io. This seems to be similar to #22014 that was fixed in 5.1.3, but the error occurs regardless of ""Content-Type"" header and or body content. The sample project is attached.  ```java package com.example.webclienttest;  import static org.junit.Assert.assertEquals;  import okhttp3.mockwebserver.MockResponse; import okhttp3.mockwebserver.MockWebServer; import org.junit.After; import org.junit.Test; import org.junit.runner.RunWith; import org.springframework.boot.test.context.SpringBootTest; import org.springframework.http.HttpStatus; import org.springframework.http.MediaType; import org.springframework.test.context.junit4.SpringRunner; import org.springframework.web.reactive.function.client.WebClient; import org.springframework.web.reactive.function.client.WebClientResponseException;  @RunWith(SpringRunner.class) @SpringBootTest public class WebclienttestApplicationTests {  	private MockWebServer server = new MockWebServer();  	@After 	public void tearDown() throws Exception { 		server.shutdown(); 	}  	@Test 	public void clientTest() { 		MockResponse response = new MockResponse(); 		response.setResponseCode(400) 				.setHeader(""Content-Type"", MediaType.TEXT_PLAIN) 				.setBody(""bar""); 		this.server.enqueue(response); 		WebClient client = WebClient.builder().baseUrl(server.url(""/"").toString()).build(); 		try { 			client.get().uri(""foo"") 					.retrieve() 					.bodyToMono(String.class) 					.block(); 		} catch (WebClientResponseException e) { 			assertEquals(HttpStatus.BAD_REQUEST, e.getStatusCode()); 		} 	} } ```  The test passes but in the console you will notice the following log event:  ``` 2018-12-06 12:56:10.349 ERROR 53024 --- [ctor-http-nio-4] reactor.core.publisher.Operators         : Operator called default onErrorDropped  java.lang.IllegalStateException: Only one connection receive subscriber allowed. 	at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:277) [reactor-netty-0.8.3.RELEASE.jar:0.8.3.RELEASE] 	at reactor.netty.channel.FluxReceive.subscribe(FluxReceive.java:127) [reactor-netty-0.8.3.RELEASE.jar:0.8.3.RELEASE] 	at reactor.core.publisher.FluxMap.subscribe(FluxMap.java:62) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:290) [reactor-netty-0.8.3.RELEASE.jar:0.8.3.RELEASE] 	at reactor.core.publisher.FluxPeek.subscribe(FluxPeek.java:83) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.FluxMap.subscribe(FluxMap.java:62) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.FluxMap.subscribe(FluxMap.java:62) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.FluxOnErrorResume.subscribe(FluxOnErrorResume.java:47) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.MonoIgnoreElements.subscribe(MonoIgnoreElements.java:37) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.Mono.subscribe(Mono.java:3608) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.Mono.subscribe(Mono.java:3608) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.Mono.subscribe(Mono.java:3608) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:97) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:185) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:251) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.Operators$MonoSubscriber.onError(Operators.java:1521) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreInner.onError(MonoIgnoreThen.java:235) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:100) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.Operators.error(Operators.java:181) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.MonoError.subscribe(MonoError.java:52) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.Mono.subscribe(Mono.java:3608) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:97) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.Operators$MonoSubscriber.onError(Operators.java:1521) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreInner.onError(MonoIgnoreThen.java:235) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onError(MonoIgnoreElements.java:76) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:100) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.Operators.error(Operators.java:181) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.FluxError.subscribe(FluxError.java:43) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.Flux.subscribe(Flux.java:7734) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:97) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:126) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:126) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.Operators.error(Operators.java:181) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:157) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.Operators.error(Operators.java:180) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:277) [reactor-netty-0.8.3.RELEASE.jar:0.8.3.RELEASE] 	at reactor.netty.channel.FluxReceive.subscribe(FluxReceive.java:127) [reactor-netty-0.8.3.RELEASE.jar:0.8.3.RELEASE] 	at reactor.core.publisher.FluxMap.subscribe(FluxMap.java:62) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:290) [reactor-netty-0.8.3.RELEASE.jar:0.8.3.RELEASE] 	at reactor.core.publisher.FluxPeek.subscribe(FluxPeek.java:83) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.FluxMap.subscribe(FluxMap.java:62) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.FluxMap.subscribe(FluxMap.java:62) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.FluxOnErrorResume.subscribe(FluxOnErrorResume.java:47) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.MonoIgnoreElements.subscribe(MonoIgnoreElements.java:37) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.Mono.subscribe(Mono.java:3608) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.Mono.subscribe(Mono.java:3608) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:114) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:92) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:121) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.FluxContextStart$ContextStartSubscriber.onNext(FluxContextStart.java:103) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:287) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:331) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1476) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.MonoCollectList$MonoBufferAllSubscriber.onComplete(MonoCollectList.java:118) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:136) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:252) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:136) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] 	at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:378) [reactor-netty-0.8.3.RELEASE.jar:0.8.3.RELEASE] 	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:202) [reactor-netty-0.8.3.RELEASE.jar:0.8.3.RELEASE] 	at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:343) [reactor-netty-0.8.3.RELEASE.jar:0.8.3.RELEASE] 	at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:325) [reactor-netty-0.8.3.RELEASE.jar:0.8.3.RELEASE] 	at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:372) [reactor-netty-0.8.3.RELEASE.jar:0.8.3.RELEASE] 	at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:511) [reactor-netty-0.8.3.RELEASE.jar:0.8.3.RELEASE] 	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:141) [reactor-netty-0.8.3.RELEASE.jar:0.8.3.RELEASE] 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) [netty-transport-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) [netty-transport-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) [netty-transport-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102) [netty-codec-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) [netty-transport-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) [netty-transport-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) [netty-transport-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438) [netty-transport-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:323) [netty-codec-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:297) [netty-codec-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253) [netty-transport-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) [netty-transport-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) [netty-transport-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) [netty-transport-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1434) [netty-transport-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) [netty-transport-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) [netty-transport-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:965) [netty-transport-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) [netty-transport-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:648) [netty-transport-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:583) [netty-transport-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:500) [netty-transport-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:462) [netty-transport-4.1.31.Final.jar:4.1.31.Final] 	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:897) [netty-common-4.1.31.Final.jar:4.1.31.Final] 	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181] ```  ---  **Affects:** 5.1.3  **Attachments:** - [webclienttest.zip](https://jira.spring.io/secure/attachment/26146/webclienttest.zip) (_66.52 kB_)  **Issue Links:** - #22096 WebClient logs ""Only one connection receive subscriber allowed"" when response status is an error (_**""duplicates""**_) - #22014 WebClient throws ""Only one connection receive subscriber allowed"" when response has content but no Content-Type header","closed","in: web,","spring-projects-issues","2018-12-06T17:47:01Z","2019-01-12T16:43:53Z"
"","22144","LocalContainerEntityManagerFactoryBean.afterPropertiesSet() not called automatically post bean construction. [SPR-17612]","**[Kshitij Pandey](https://jira.spring.io/secure/ViewProfile.jspa?name=kpatspring)** opened **[SPR-17612](https://jira.spring.io/browse/SPR-17612?redirect=false)** and commented  I have following Java configuration Bean and the instance returned by it is null, which should not be the case if the ""afterPropertiesSet()"" method of the bean would have been called automatically, given that the bean class being created is implementing ""InitializingBean"" interface.  ```java @Configuration @ComponentScan(basePackages = {""com.project.src""}) @EnableJpaRepositories( basePackages=""com.*.repository"", transactionManagerRef=""scribetransactionManager"", entityManagerFactoryRef=""entityManagerFactory"" )  public class JpaConfig {   @Bean(""entityManagerFactory"") public EntityManagerFactory getEntityManagerFactory()  { LocalContainerEntityManagerFactoryBean lcemfb = new LocalContainerEntityManagerFactoryBean(); Properties properties = new Properties(); properties.put(""hibernate.dialect"", ""org.hibernate.dialect.DB2Dialect""); properties.put(""hibernate.show_sql"", ""false""); properties.put(""hibernate.jdbc.batch_size"", ""5000""); lcemfb.setJpaProperties(properties); lcemfb.setDataSource(getDataSource()); lcemfb.setPackagesToScan(new String[] {""com.**""}  );  lcemfb.setPersistenceUnitName(""persistence-unit""); lcemfb.setJpaVendorAdapter(new HibernateJpaVendorAdapter()); //lcemfb.afterPropertiesSet(); return lcemfb.getObject(); }    @Bean(""dataSource"") public DB2DataSource getScribeMainDataSource() { DB2DataSource db2ds = new DB2DataSource(); Map cpm = new HashMap<>(); pm.put(""retrieveMessagesFromServerOnGetMessage"", true); b2ds.setConnectionProperties(cpm); db2ds.setDatabaseServer(mainDatabaseServer); db2ds.setSchema(mainDatabaseSchema); db2ds.setKerberized(true); db2ds.setMinIdle(0); db2ds.setMaxIdle(2); db2ds.setMaxActive(2); db2ds.setPerformValidation(true); db2ds.setValidationTimeout(60000); db2ds.setBackgroundCleanupPeriod(30000); return db2ds; }  } ```  ---  **Affects:** 4.3.16","closed","status: invalid,","spring-projects-issues","2018-12-19T21:27:59Z","2019-01-13T19:46:47Z"
"","22095","VfsResource.getFile() broken on Wildfly 14.0.1 [SPR-17563]","**[Kristiaan Lenaerts](https://jira.spring.io/secure/ViewProfile.jspa?name=kristiaan.lenaerts)** opened **[SPR-17563](https://jira.spring.io/browse/SPR-17563?redirect=false)** and commented  Deployment of the Apereo CAS application https://apereo.github.io/cas/5.3.x/ on wildfly 14.0.1 fails with following stacktrace: 14:58:14,539 ERROR [org.springframework.boot.SpringApplication] (ServerService Thread Pool -- 95) Application startup failed: java.lang.IllegalArgumentException: object is not an instance of declaring class at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.springframework.core.io.VfsUtils.invokeVfsMethod(VfsUtils.java:100) at org.springframework.core.io.VfsUtils.getFile(VfsUtils.java:172) at org.springframework.core.io.VfsResource.getFile(VfsResource.java:90) at org.apereo.cas.util.CasVersion.getDateTime(CasVersion.java:59) at org.apereo.cas.util.SystemUtils.getSystemInfo(SystemUtils.java:50)  This also affect Jboss EAP 7.1.5 and 6.4.21  This is caused by a change in the VFS layer: https://github.com/jbossas/jboss-vfs/pull/28 The proposed fix https://github.com/jbossas/jboss-vfs/pull/30 does not reintroduce the old behaviour, but adds a new accessor that can be used to get the undelying file.  The workaround from Drools can be found here: https://github.com/kiegroup/drools/commit/2a36f67 - this should work on either version of wildfly/jboss    ---  **Affects:** 4.3.19  **Reference URL:** https://groups.google.com/forum/#!topic/jasig-cas-user/Vk9hcFRg9Bw","closed","in: core,","spring-projects-issues","2018-12-04T12:43:14Z","2019-10-21T08:13:09Z"
"","22056","getBeanNamesForType(ResolvableType) doesn't work for raw singleton instance from @Bean method with generic return type [SPR-17524]","**[Konstantin](https://jira.spring.io/secure/ViewProfile.jspa?name=vaxl)** opened **[SPR-17524](https://jira.spring.io/browse/SPR-17524?redirect=false)** and commented  When calling `beanFactory.getBeanNamesForType` with  ResolvableType.forClassWithGenerics(), if bean is lazy it works, after initialization or bean not lazy this code will not work.   Here's a case, all asserts return true:  ```java @SpringBootApplication  public class DemoApplication \{  public static void main(String[] args) {  ConfigurableApplicationContext run = SpringApplication.run(DemoApplication.class, args);  assert run.getBeanNamesForType(ResolvableType.forClassWithGenerics(Test.class, String.class)).length == 0;   assert run.getBean(run.getBeanNamesForType(ResolvableType.forClassWithGenerics(Test.class, Integer.class))[0]) != null;  assert run.getBeanNamesForType(ResolvableType.forClassWithGenerics(Test.class, Integer.class)).length == 0; }   @Bean  Test getString() \{  return new Test<>();  }   @Bean  @Lazy  Test getInteger() \{  return new Test<>();  } }   class Test\{ } ```  ---  **Affects:** 5.1.2  **Issue Links:** - #18669 getBeanNamesForType(ResolvableType) does not reliably work for beans with AOP proxies - #19578 getBeanNamesForType(ResolvableType) doesn't match generic factory method return type for yet-to-be-created bean  **Referenced from:** pull request https://github.com/spring-projects/spring-framework/pull/2027, and commits https://github.com/spring-projects/spring-framework/commit/ebbe14c3630703d4245960116e0edc3c5813dc2d, https://github.com/spring-projects/spring-framework/commit/e9f7c357b7ebd95c98bc1b159b6c8e665a0a0ec5, https://github.com/spring-projects/spring-framework/commit/7b2eebe99fe17decaa9e98b7404cb911c3631565  **Backported to:** [5.0.11](https://github.com/spring-projects/spring-framework/milestone/192?closed=1), [4.3.21](https://github.com/spring-projects/spring-framework/milestone/170?closed=1)","closed","in: core,","spring-projects-issues","2018-11-21T08:56:53Z","2019-01-11T13:32:34Z"
"","22005","The onstatus method of webclient causes a memory leak. [SPR-17473]","**[KimSeongIl](https://jira.spring.io/secure/ViewProfile.jspa?name=kimseongil)** opened **[SPR-17473](https://jira.spring.io/browse/SPR-17473?redirect=false)** and commented     ```java private WebClient webClient;      private final static int DEFAULT_CONNECT_TIMEOUT = 900;     private final static int DEFAULT_SOCKET_TIMEOUT = 900;      @PostConstruct     public void initialize() {         ReactorClientHttpConnector connector = new ReactorClientHttpConnector(options ->                 options.option(ChannelOption.CONNECT_TIMEOUT_MILLIS, DEFAULT_CONNECT_TIMEOUT)                         .poolResources(PoolResources.fixed(""httpPool"", 1000))                         .afterNettyContextInit(ctx -> {                             ctx.addHandlerLast(new ReadTimeoutHandler(DEFAULT_SOCKET_TIMEOUT, TimeUnit.MILLISECONDS));                         }));          webClient = WebClient.builder()                 .clientConnector(connector)                 .build();      }  @GetMapping(""/test"")     public Mono webclientTest() {          return webClient                 .get()                 .uri(""http://testurl.com/response500test"")                 .retrieve()                 .onStatus(httpStatus -> httpStatus != HttpStatus.OK, clientResponse -> Mono.error(new RuntimeException(String.format(""api status: %s"", clientResponse.statusCode()))))                 .bodyToMono(String.class);     } ```  The above source code called an API that responded to 500 errors with 600 tps.     ```java io.netty.util.internal.OutOfDirectMemoryError: failed to allocate 16777216 byte(s) of direct memory (used: 8573157383, max: 8589934592) ```  The onstatus method of webclient causes a memory leak.     !스크린샷 2018-11-07 오후 2.01.06.png!     In the photo attached above We used the onStatus method from 13:40 to 13:48, We removed the onStatus method from 13:55 to 14:00. Is this a bug? Why does the onStatus method cause a memory leak?  I used SpringBoot version 2.0.4 and upgraded to 2.1.0, but I still have a problem.  ---  **Affects:** 5.0.8, 5.1.2  **Attachments:** - [스크린샷 2018-11-07 오후 2.01.06.png](https://jira.spring.io/secure/attachment/26092/%E1%84%89%E1%85%B3%E1%84%8F%E1%85%B3%E1%84%85%E1%85%B5%E1%86%AB%E1%84%89%E1%85%A3%E1%86%BA+2018-11-07+%E1%84%8B%E1%85%A9%E1%84%92%E1%85%AE+2.01.06.png) (_36.31 kB_)  **Issue Links:** - #22096 WebClient logs ""Only one connection receive subscriber allowed"" when response status is an error  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/f73a5222f1e71b3b463aedb1f98516dd02380726, https://github.com/spring-projects/spring-framework/commit/c187cb2fa13af2a6ff6e92d588ba70b458707460  **Backported to:** [5.0.11](https://github.com/spring-projects/spring-framework/milestone/192?closed=1)","closed","type: enhancement,","spring-projects-issues","2018-11-07T07:10:42Z","2019-01-11T13:13:45Z"
"","22031","JmsTemplate/CachingConnectionFactory doesn't reset sessions if the underlying connection was physically closed [SPR-17499]","**[Kevin Möchel](https://jira.spring.io/secure/ViewProfile.jspa?name=kevin%20m%C3%B6chel)** opened **[SPR-17499](https://jira.spring.io/browse/SPR-17499?redirect=false)** and commented  If one uses the JmsTemplate to produce messages together with the CachingConnectionFactory it's possible to break the cached Sessions in a way that the application doesn't recover from this by itself, leaving no other options then to restart the application. We use Oracle UCP and Oracle AQ for messaging. I think the problem cam occur with every JMS implementation though.  This is the exception we observe:  > org.springframework.jms.IllegalStateException: JMS-131: Session is closed; nested exception is javax.jms.IllegalStateException: JMS-131: Session is closed > at org.springframework.jms.support.JmsUtils.convertJmsAccessException(JmsUtils.java:279) > at org.springframework.jms.support.JmsAccessor.convertJmsAccessException(JmsAccessor.java:169) > at org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:497) > at org.springframework.jms.core.JmsTemplate.send(JmsTemplate.java:580) > at org.springframework.jms.core.JmsTemplate.convertAndSend(JmsTemplate.java:668) > at com.example.jms.SessionClosedTest.testJms131(SessionClosedTest.java:171) > ... > Caused by: javax.jms.IllegalStateException: JMS-131: Session is closed > at oracle.jms.AQjmsError.throwIllegalStateEx(AQjmsError.java:471) > at oracle.jms.AQjmsSession.checkSessionStarted(AQjmsSession.java:4450) > at oracle.jms.AQjmsSession.getDBConnection(AQjmsSession.java:4392) > at oracle.jms.AQjmsSession.getAQOwner(AQjmsSession.java:6447) > at oracle.jms.AQjmsSession.createQueue(AQjmsSession.java:1387) > at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) > at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) > at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) > at java.lang.reflect.Method.invoke(Method.java:606) > at org.springframework.jms.connection.CachingConnectionFactory$CachedSessionInvocationHandler.invoke(CachingConnectionFactory.java:386) > at com.sun.proxy.$Proxy73.createQueue(Unknown Source) > at org.springframework.jms.support.destination.DynamicDestinationResolver.resolveQueue(DynamicDestinationResolver.java:84) > at org.springframework.jms.support.destination.DynamicDestinationResolver.resolveDestinationName(DynamicDestinationResolver.java:58) > at org.springframework.jms.support.destination.JmsDestinationAccessor.resolveDestinationName(JmsDestinationAccessor.java:98) > at org.springframework.jms.core.JmsTemplate.access$200(JmsTemplate.java:90) > at org.springframework.jms.core.JmsTemplate$4.doInJms(JmsTemplate.java:583) > at org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:494) > ... 33 more  ## How to reproduce the error  ### Application Configuration  Configuration of the connection pool:  ```java                                                                                                            true             10000             12000                ```  For arguments sake I set the abandonedConnectionTimeout, maxConnectionReuseTime and timeoutCheckInterval to 3, in order to force the ConnectionPool to close all connections that haven't been used for a little while.  XML-Configuration of the CachingConnectionFactory and the JmsTemplate:  ```java                                                                                  ```  Implementation of OracleAqConnectionFactoryBean:  ```java public class OracleAqConnectionFactoryBean implements FactoryBean {     ...     public QueueConnectionFactory getObject() throws Exception {         return oracle.jms.AQjmsFactory.getQueueConnectionFactory(datasource);     }     ... } ```  .h3 Test  ```java @RunWith(SpringJUnit4ClassRunner.class) @ContextConfiguration(value = { ""/resources/spring/jpa.xml"" }) public class SessionClosedTest {     @Autowired     private JmsTemplate jmsTemplate;          @Test     public void testRF242() throws Exception {         MyBusinessObject someObj = new MyBusinessObject();         this.jmsTemplate.convertAndSend(someObj);         // Funny note: If you type Thread.sleep(15000); in the line below and remove this comment, Jira is actually not able to create the issue and the ""Create Issue""-dialog completly breaks. On our own Jira we don't have this problem.         Thread.sleep(15000);         this.jmsTemplate.convertAndSend(someObj);     } } ```  The first call of _convertAndSend_ works as expected. However the second call will fail with the exception at the beginning.  It's possible to get the test above to run successfully if you call _CachingConnectionFactory#resetConnection_ after the sleep.  Spring-JMS will call _CachingConnectionFactory#resetConnection_ on its own given any JmsException, but only for Message-Consumer. I couldn't find similar behaviour for Message-Producer.  Is this something that should be adressed by Spring? The easiest fix is probably to reset the connections in the JmsTemplate if a JmsException occurs.   ---  **Affects:** 4.3.19","open","type: enhancement,","spring-projects-issues","2018-11-15T09:47:22Z","2020-12-07T08:57:44Z"
"","22073","Unable to configure more than one AsyncConfigurer implementation classes [SPR-17541]","**[Kannadasan](https://jira.spring.io/secure/ViewProfile.jspa?name=kanna)** opened **[SPR-17541](https://jira.spring.io/browse/SPR-17541?redirect=false)** and commented  I want to have a multiple implementation of AsyncConfigurer for my use cases.(i.e) I need to have a more than one ThreadPoolTaskExecutor with AsyncUncaughtExceptionHandler feature.  But I got an exception like IllegalStateException - Only one AsyncConfigurer may exist. For more detail PFA.   ---  **Attachments:** - [exception.log](https://jira.spring.io/secure/attachment/26112/exception.log) (_5.02 kB_)","closed","status: invalid,","spring-projects-issues","2018-11-27T13:32:53Z","2022-01-21T13:41:07Z"
"","21976","build source error [SPR-17444]","**[Julvae](https://jira.spring.io/secure/ViewProfile.jspa?name=julvae)** opened **[SPR-17444](https://jira.spring.io/browse/SPR-17444?redirect=false)** and commented  Version:3.2.x     run ./gradlew build  in the command line     get:Cannot expand ZIP '/Users/liaoyoujin/DIDI/code/spring-framework/build/distributions/spring-framework-3.2.0.BC-SNAPSHOT-schema.zip' as it does not exist.   ---  **Affects:** 4.3.20","closed","status: invalid,","spring-projects-issues","2018-10-30T04:44:07Z","2019-01-12T05:17:51Z"
"","22021","Jackson2ObjectMapperBuilder visibilities need to be applied in order [SPR-17489]","**[Jukka Lehtimäki](https://jira.spring.io/secure/ViewProfile.jspa?name=yakka34)** opened **[SPR-17489](https://jira.spring.io/browse/SPR-17489?redirect=false)** and commented  Jackson2ObjectMapperBuilder uses HashMap to store user specified visibilities and proceeds to iterate them with foreach. Map doesn't guarantee order so user might unknowingly override his preferred visibilities causing jackson deserialization to fail randomly at run time. Bug can go unnoticed if the server happens to start with the correct order 50% change.  How to reproduce: 1. Create custom Jackson2ObjectMapperBuilderCustomizer 2.   ```java @Bean     public Jackson2ObjectMapperBuilderCustomizer custom() {         return (jacksonObjectMapperBuilder) -> {             jacksonObjectMapperBuilder                     .visibility(PropertyAccessor.ALL, Visibility.NONE)                     .visibility(PropertyAccessor.FIELD, Visibility.ANY)         };     } ```  Notice that the first visibility sets ALL properties to NONE. Second one wants only the FIELDS to be visible. 1. Now depending on your luck it will either run the set ALL visibility to NONE first or last effectively overriding FIELD visibility unintentionally   ---  **Affects:** 5.1.2  **Issue Links:** - #20957 Jackson: Add visibility properties to Jackson2ObjectMapperBuilder  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/093254b2b35395f2afd797dd956a4a08fcc3ba06","closed","type: bug,","spring-projects-issues","2018-11-13T15:36:58Z","2019-01-11T13:27:36Z"
"","22093","Upgrade Spring Context Support to Jakarta EE's com.sun.mail:jakarta.mail and com.sun.activation:jakarta.activation [SPR-17561]","**[Juergen Zimmermann](https://jira.spring.io/secure/ViewProfile.jspa?name=juergen.zimmermann)** opened **[SPR-17561](https://jira.spring.io/browse/SPR-17561?redirect=false)** and commented  Spring Context Support is using _javax.mail:javax.mail-api_ and _javax.activation:javax.activation-api_. Meanwhile there is _com.sun.mail:jakarta.mail_ and _com.sun.activation:jakarta.activation_.   ---  **Affects:** 5.1.3","closed","type: enhancement,","spring-projects-issues","2018-12-04T07:54:41Z","2021-09-17T07:14:57Z"
"","22157","Revisit restrictions in SpEL position handling [SPR-17625]","**[Juergen Hoeller](https://jira.spring.io/secure/ViewProfile.jspa?name=juergen.hoeller)** opened **[SPR-17625](https://jira.spring.io/browse/SPR-17625?redirect=false)** and commented  As indicated #22137, position handling in SpEL nodes is historically, sharing an integer value for both start and end position in 16 bits each. This should get refactored into dedicated integer values for start and end position across all nodes, refactoring the current single-int constructors into double-int constructors.  ---  **Affects:** 5.1.4  **Issue Links:** - #22137 SpEL, error parsing big InlineMap - #22146 SpEL, InlineMap with negative values are not cached","closed","in: core,","spring-projects-issues","2018-12-25T12:29:03Z","2019-01-28T21:52:31Z"
"","22128","Support for Hibernate ORM 6.0 [SPR-17596]","**[Juergen Hoeller](https://jira.spring.io/secure/ViewProfile.jspa?name=juergen.hoeller)** opened **[SPR-17596](https://jira.spring.io/browse/SPR-17596?redirect=false)** and commented  Hibernate ORM 6.0 alpha 1 was recently released (in December 2018). Let's introduce a `org.springframework.orm.hibernate6` support package in the Spring Framework 5.2 timeframe, in parallel to our existing Hibernate ORM 5.x support.  ---  **Issue Links:** - #22049 Upgrade to Hibernate ORM 5.4","open","type: dependency-upgrade,","spring-projects-issues","2018-12-12T14:49:10Z","2022-05-10T11:51:57Z"
"","22127","Upgrade to CGLIB 3.2.10 [SPR-17595]","**[Juergen Hoeller](https://jira.spring.io/secure/ViewProfile.jspa?name=juergen.hoeller)** opened **[SPR-17595](https://jira.spring.io/browse/SPR-17595?redirect=false)** and commented  CGLIB 3.2.10 is out now, introducing a `cglib.useCache` system property.   ---  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/0ad35053fbb07761c29e55a97563f4aff984426d","closed","in: core,","spring-projects-issues","2018-12-12T14:20:42Z","2019-01-09T13:06:52Z"
"","22120","Consistent handling of null header values in HttpHeaders [SPR-17588]","**[Juergen Hoeller](https://jira.spring.io/secure/ViewProfile.jspa?name=juergen.hoeller)** opened **[SPR-17588](https://jira.spring.io/browse/SPR-17588?redirect=false)** and commented  The specific header setter methods in `HttpHeaders` use `MultiValueMap.set/add` for populating the underlying data structure. Unfortunately, `null` values are mostly being stored as `null` entries in single-entry lists for a header, or sometimes being skipped altogether. While the end result (e.g. in a populated server response) usually ignores `null` header values anyway and all `getFirst` access returns `null` just like it would in case of a non-existing header as well, some user-level accessor methods (e.g. `HttpHeaders.getCacheControl()` return a bogus text representation in case of a `null` value. Let's streamline this for 5.1.4 as a continuation of the `HttpHeaders` refactoring in the 5.1.x line.  ---  **Affects:** 5.1.3  **Reference URL:** https://github.com/eclipse/jetty.project/issues/1116  **Issue Links:** - #21783 Improve WebFlux performance for header management - #17816 SimpleClientHttpRequestFactory: headers with null values should be sent as empty Strings - #22103 Allow java.time types for setting the Last-Modified header  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/5bbbc82e19e4c2ed443ce955949137ec8c0a2e02","closed","type: task,","spring-projects-issues","2018-12-11T10:09:44Z","2019-01-11T13:28:43Z"
"","22092","NettyDataBufferFactory.join should return original buffer as-is in case of a single element (for compatibility with Netty 4.1.32) [SPR-17560]","**[Juergen Hoeller](https://jira.spring.io/secure/ViewProfile.jspa?name=juergen.hoeller)** opened **[SPR-17560](https://jira.spring.io/browse/SPR-17560?redirect=false)** and commented  `NettyDataBufferFactory.join(List)` always creates a `CompositeByteBuf`, even for a single-element list of original buffers. This is generally worth optimizing but particularly necessary for Netty 4.1.32 where `CompositeByteBuf` is enforced to have at least two elements (see our current `HttpServerTests` failures on CI).   ---  **Affects:** 5.0.11, 5.1.3  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/d5dab129097f98ed3148473422eb706c20fd10c9, https://github.com/spring-projects/spring-framework/commit/c5428e63b414043fdf5616d8f4006c84fa39c05b, https://github.com/spring-projects/spring-framework/commit/abf9ce8a34d8e386a36d265fc558ee21a02d5d16  **Backported to:** [5.0.12](https://github.com/spring-projects/spring-framework/milestone/193?closed=1)","closed","type: enhancement,","spring-projects-issues","2018-12-03T22:44:30Z","2019-01-09T10:36:46Z"
"","22049","Upgrade to Hibernate ORM 5.4 [SPR-17517]","**[Juergen Hoeller](https://jira.spring.io/secure/ViewProfile.jspa?name=juergen.hoeller)** opened **[SPR-17517](https://jira.spring.io/browse/SPR-17517?redirect=false)** and commented  While Spring Framework 5.1.x is effectively compatible with Hibernate ORM 5.4 already, we'll keep it building against Hibernate ORM 5.3.x for the time being. Let's upgrade to Hibernate ORM 5.4 for Spring Framework 5.2.  ---  **Issue Links:** - #20850 Support for Hibernate ORM 5.3 (_**""depends on""**_) - #20945 Upgrade to Kotlin 1.3 - #22128 Support for Hibernate ORM 6.0","closed","type: task,","spring-projects-issues","2018-11-18T22:02:33Z","2019-01-24T14:03:39Z"
"","21996","Remove java.sql dependencies from ReflectionUtils and TransactionDefinition [SPR-17464]","**[Juergen Hoeller](https://jira.spring.io/secure/ViewProfile.jspa?name=juergen.hoeller)** opened **[SPR-17464](https://jira.spring.io/browse/SPR-17464?redirect=false)** and commented  `ReflectionUtils` provides a helper for JDBC method invocations that throw `java.sql.SQLException`, and `TransactionDefinition` derives its transaction constants from `java.sql.Connection`. Both of those can easily be avoided in order to allow `spring-core` and the transaction abstraction in `spring-tx` to be usable on JDK 9+ images without the `java.sql` module present.  ---  **Issue Links:** - #22150 Allow reuse of database error code translation without referring to JDBC module  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/c834790135ce37dadfcc6a56e69968fc0ccaba9e, https://github.com/spring-projects/spring-framework/commit/d9c1811d21b421976fa50576b0f30f751056ebb1, https://github.com/spring-projects/spring-framework/commit/0a7dcf14f97913aa9de540d003cb3d9d6403b1e4","closed","in: core,","spring-projects-issues","2018-11-04T10:37:21Z","2019-01-28T21:52:30Z"
"","21919","MethodValidationPostProcessor still validates FactoryBean methods on CGLIB proxies [SPR-17386]","**[Juergen Hoeller](https://jira.spring.io/secure/ViewProfile.jspa?name=juergen.hoeller)** opened **[SPR-17386](https://jira.spring.io/browse/SPR-17386?redirect=false)** and commented  As mentioned in #21907 comments, the initial fix only covers the interface-based proxy case but unfortunately still runs into a stack overflow against CGLIB proxies. This incurs a significantly more expensive check at runtime, so let's see what we can do about it.  ---  **Affects:** 4.3.20, 5.0.10, 5.1.1  **Issue Links:** - #21907 MethodValidationPostProcessor validates FactoryBean methods for which validation is not applicable - #21964 MethodValidationPostProcessor does not support JDK proxy from FactoryBean  **Backported to:** [5.0.11](https://github.com/spring-projects/spring-framework/milestone/192?closed=1), [4.3.21](https://github.com/spring-projects/spring-framework/milestone/170?closed=1)","closed","in: core,","spring-projects-issues","2018-10-15T16:46:31Z","2019-01-11T13:11:58Z"
"","21906","MockHttpServletRequest doesn't reset InputStream/Reader on setContent [SPR-17373]","**[Juergen Hoeller](https://jira.spring.io/secure/ViewProfile.jspa?name=juergen.hoeller)** opened **[SPR-17373](https://jira.spring.io/browse/SPR-17373?redirect=false)** and commented  As noted on #21048, `MockHttpServletRequest` should reset the `InputStream` / `Reader` on `setContent` calls (now that is shares the stream/reader across calls).  ---  **Affects:** 5.1 GA  **Issue Links:** - #21048 MockHttpServletRequest.getReader, getInputStream should each return the same object on repeat calls","closed","type: bug,","spring-projects-issues","2018-10-12T12:38:21Z","2019-01-11T13:12:39Z"
"","21905","Upgrade to Objenesis 3.0 [SPR-17372]","**[Juergen Hoeller](https://jira.spring.io/secure/ViewProfile.jspa?name=juergen.hoeller)** opened **[SPR-17372](https://jira.spring.io/browse/SPR-17372?redirect=false)** and commented  Objenesis 3.0 is out now. We would have loved to have it for Spring Framework 5.1 GA already, so let's upgrade to it for 5.1.1 at least.  ---  **Issue Links:** - #21800 Upgrade to ASM 7.0 - #20159 Upgrade to Objenesis 2.6 for Google App Engine Standard on Java 8 and for better JDK 9 support  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/f68b1e0bce23b0d09c9b6da5f80505813a41515a, https://github.com/spring-projects/spring-framework/commit/e26ae9853efe08f6a6d8a208f3b7e6137e22cc1d, https://github.com/spring-projects/spring-framework/commit/dcf2861db506f0be7fb1789424651a1406c1e18a","closed","in: core,","spring-projects-issues","2018-10-12T10:09:29Z","2019-01-11T13:12:45Z"
"","22115","Clarify whether spring-jms 5.x is still able to run with a JMS 1.1 provider [SPR-17583]","**[João Guilherme de Souza Lima](https://jira.spring.io/secure/ViewProfile.jspa?name=jgslima)** opened **[SPR-17583](https://jira.spring.io/browse/SPR-17583?redirect=false)** and commented  Starting with 5.0.0, the dependency to the JMS API was changed in spring-jms for 2.0.  Spring documentation and/or javadocs might make clear that this does not mean that spring-jms 5.x actually _requires_ the provider used to implement 2.0.  In my case, I am evaluating the impacts to upgrade some applications I have from spring 4.x to 5.x. For other external dependencies/impacts like for instance JEE APIs like servlet-api or JPA, Spring documentation make this clearer. For instance, [LocalContainerEntityManagerFactoryBean](https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean.html)'s javadoc make it clear that JPA 2.1 is required. As I currently depends on a JMS provider (Oracle AQ) that only implements JMS 1.1, to be sure I would not have issues I had to download spring-jms code and search in it for calls to ConnectionFactory.createContext. Only after doing that I was able to see that there is no such call, and was able to conclude (yet without 100% certainty) that the upgrade of the dependency to 2.0 must have been to allow the spring-jms ConnectionFactory decorators to be 2.0 compliant.  Spring Framework Reference documentation and/or some javadoc (maybe the one of `@EnableJms`) might make this clear.  ---  **Affects:** 5.0.3  **Issue Links:** - #18366 Upgrade to JMS 2.0+  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/7b9c30f26e9dcedf1cb4a7ffe827ad458c3556bb, https://github.com/spring-projects/spring-framework/commit/6505cb93ede592161b1cf702bd68ce2f2e886765  **Backported to:** [5.0.12](https://github.com/spring-projects/spring-framework/milestone/193?closed=1)","closed","type: task,","spring-projects-issues","2018-12-09T13:56:14Z","2019-01-11T13:28:32Z"
"","22018","NPE in ClientRequest.attribute(name) when accessing null value [SPR-17486]","**[João Eiras](https://jira.spring.io/secure/ViewProfile.jspa?name=eiras)** opened **[SPR-17486](https://jira.spring.io/browse/SPR-17486?redirect=false)** and commented  Hi.  I have the following code  ``` webClient.get()   .uri(b -> b.path(""/endpoint"").build())   .attribute(""x"", null)   .retrieve()   .bodyToMono(String.class)   .block(); ```  I also have a `exchangeFilter` registered in the `webClient` which looks up attribute ""x"". When calling `clientRequest.attribute(""x"")` then I get a NPE.  ``` java.lang.NullPointerException: null   at java.util.Objects.requireNonNull(Objects.java:203)   at java.util.Optional.(Optional.java:96)   at java.util.Optional.of(Optional.java:108)   at org.springframework.web.reactive.function.client.ClientRequest.attribute(ClientRequest.java:81) ```  The solution in https://github.com/spring-projects/spring-framework/blob/master/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/ClientRequest.java#L88  ``` default Optional attribute(String name) {     return Optional.ofNullable(attributes().get(name)); } ```  Thank you.   ---  **Affects:** 5.0.10, 5.1 GA  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/5382260f30be45d69d24ef23a3f5231eb6a5eeaf, https://github.com/spring-projects/spring-framework/commit/818c2aa3b92297578b485fda011c434310ef2943, https://github.com/spring-projects/spring-framework/commit/d96a7b4bfc50b40723b3edeba793243af542e027  **Backported to:** [5.0.11](https://github.com/spring-projects/spring-framework/milestone/192?closed=1)","closed","type: bug,","spring-projects-issues","2018-11-12T10:06:02Z","2018-11-27T09:13:11Z"
"","21924","Allow setting headers in MockHttpServletRequest [SPR-17391]","**[João Cabrita](https://jira.spring.io/secure/ViewProfile.jspa?name=kewne)** opened **[SPR-17391](https://jira.spring.io/browse/SPR-17391?redirect=false)** and commented  Currently only supports adding headers, with special replacement logic for the `Content-Type` and `Accept-Language` headers.     My use case is setting a default value for any header (potentially a non-standard one) but override it in a post processor or request builder.     ---  **Affects:** 5.0.5  **Issue Links:** - #21828 Support for removeHeader in MockHttpServletRequest","closed","type: enhancement,","spring-projects-issues","2018-10-16T13:03:23Z","2019-01-11T13:11:21Z"
"","21977","Doc: Class-level `@Transactional` doesn't demarcate transactions for public methods in parent class [SPR-17445]","**[Josh Long](https://jira.spring.io/secure/ViewProfile.jspa?name=joshlong)** opened **[SPR-17445](https://jira.spring.io/browse/SPR-17445?redirect=false)** and commented  i have a class that has a `@Transactional` on the class itself. It inherits from a base class. The base class implements an interface with methods on it and has a public methods in it.   ```java @Transactional  @Service  class FooService extends BaseService \{ } ```     My expectation is that the public methods in BaseService should be demarcated in a transaction. If I do nothing but override the methods and then call the super implementation, things work as expected.      the good Dr. [dsyer](https://jira.spring.io/secure/ViewProfile.jspa?name=dsyer) investigated the issue further.  My code is https://github.com/reactive-spring-book/bootstrap/blob/master/src/main/java/rsb/bootstrap/enable/TransactionalCustomerService.java      If you remove the 3 methods, findById, save, and findAll, they are still public methods in BaseCustomerService. I have a test that tests that i can write data to the DB and see it roll back. the test fails if i have removed those methods. it succeeds when i add them.   ---  **Affects:** 5.1.2  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/ea3250c8d618bf638b69f1917b2cbacfe26b9225, https://github.com/spring-projects/spring-framework/commit/561511f66c3d0a1c7b04a3c5c568157cb7dcda2c, https://github.com/spring-projects/spring-framework/commit/f002ebd9762669a269ccad52c685d47a1c4827db  **Backported to:** [5.0.11](https://github.com/spring-projects/spring-framework/milestone/192?closed=1), [4.3.21](https://github.com/spring-projects/spring-framework/milestone/170?closed=1)","closed","type: task,","spring-projects-issues","2018-10-30T15:46:42Z","2018-11-27T08:59:03Z"
"","21904","""This feature requires ASM7"" on JDK11 on nested classes [SPR-17371]","**[Jonas Tänzer](https://jira.spring.io/secure/ViewProfile.jspa?name=jtaenzer)** opened **[SPR-17371](https://jira.spring.io/browse/SPR-17371?redirect=false)** and commented  As I understand, Spring-Boot 2.1.0 (and therefore Spring 5.1.1) will support JDK11. Therefore, we have decided to move one of our projects to the current milestone release as well as JDK11, as a proof of concept for other projects and a later migration. I was forwarded here from: https://github.com/spring-projects/spring-boot/issues/14785#issuecomment-428984674  Keep in mind, the issue can be fixed by extracting the nested classes.  In the process, I noticed that despite compiling just fine, the project will not start. Unfortunately, I don't know enough about the new ways to avoid reflection when working with the module system to debug this any deeper, but I will try to report as clearly as possible. If this is a mistake on my end (possible), please let me know. * asm 7.0-beta is on the classpath * Oracle OpenJDK11 is installed and being used by Maven 3.5 when compiling/running * problem is thrown on a package-private static nested class  Stacktrace:  ```java 2018-10-11 16:32:43.601 ERROR 9268 --- [           main] o.s.b.SpringApplication                  : Application run failed  java.lang.IllegalStateException: Cannot load configuration class: me.schaka.configuration.ErrorConfig 	at org.springframework.context.annotation.ConfigurationClassPostProcessor.enhanceConfigurationClasses(ConfigurationClassPostProcessor.java:413) ~[spring-context-5.1.0.RELEASE.jar:5.1.0.RELEASE] 	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanFactory(ConfigurationClassPostProcessor.java:253) ~[spring-context-5.1.0.RELEASE.jar:5.1.0.RELEASE] 	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:286) ~[spring-context-5.1.0.RELEASE.jar:5.1.0.RELEASE] 	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:130) ~[spring-context-5.1.0.RELEASE.jar:5.1.0.RELEASE] 	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:693) ~[spring-context-5.1.0.RELEASE.jar:5.1.0.RELEASE] 	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:530) ~[spring-context-5.1.0.RELEASE.jar:5.1.0.RELEASE] 	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140) ~[spring-boot-2.1.0.M4.jar:2.1.0.M4] 	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:797) [spring-boot-2.1.0.M4.jar:2.1.0.M4] 	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:421) [spring-boot-2.1.0.M4.jar:2.1.0.M4] 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:340) [spring-boot-2.1.0.M4.jar:2.1.0.M4] 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1291) [spring-boot-2.1.0.M4.jar:2.1.0.M4] 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1279) [spring-boot-2.1.0.M4.jar:2.1.0.M4] 	at me.schaka.Application.main(Application.java:47) [classes/:?] 	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?] 	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?] 	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?] 	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?] 	at org.springframework.boot.maven.AbstractRunMojo$LaunchRunner.run(AbstractRunMojo.java:558) [spring-boot-maven-plugin-2.1.0.M2.jar:2.1.0.M2] 	at java.lang.Thread.run(Thread.java:834) [?:?] Caused by: java.lang.UnsupportedOperationException: This feature requires ASM7 	at org.springframework.asm.ClassVisitor.visitNestMember(ClassVisitor.java:236) ~[spring-core-5.1.0.RELEASE.jar:5.1.0.RELEASE] 	at org.springframework.asm.ClassReader.accept(ClassReader.java:650) ~[spring-core-5.1.0.RELEASE.jar:5.1.0.RELEASE] 	at org.springframework.asm.ClassReader.accept(ClassReader.java:389) ~[spring-core-5.1.0.RELEASE.jar:5.1.0.RELEASE] 	at org.springframework.cglib.proxy.BridgeMethodResolver.resolveAll(BridgeMethodResolver.java:67) ~[spring-core-5.1.0.RELEASE.jar:5.1.0.RELEASE] 	at org.springframework.cglib.proxy.Enhancer.emitMethods(Enhancer.java:1238) ~[spring-core-5.1.0.RELEASE.jar:5.1.0.RELEASE] 	at org.springframework.cglib.proxy.Enhancer.generateClass(Enhancer.java:723) ~[spring-core-5.1.0.RELEASE.jar:5.1.0.RELEASE] 	at org.springframework.cglib.transform.TransformingClassGenerator.generateClass(TransformingClassGenerator.java:33) ~[spring-core-5.1.0.RELEASE.jar:5.1.0.RELEASE] 	at org.springframework.cglib.core.DefaultGeneratorStrategy.generate(DefaultGeneratorStrategy.java:25) ~[spring-core-5.1.0.RELEASE.jar:5.1.0.RELEASE] 	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanFactoryAwareGeneratorStrategy.generate(ConfigurationClassEnhancer.java:252) ~[spring-context-5.1.0.RELEASE.jar:5.1.0.RELEASE] 	at org.springframework.cglib.core.AbstractClassGenerator.generate(AbstractClassGenerator.java:354) ~[spring-core-5.1.0.RELEASE.jar:5.1.0.RELEASE] 	at org.springframework.cglib.proxy.Enhancer.generate(Enhancer.java:582) ~[spring-core-5.1.0.RELEASE.jar:5.1.0.RELEASE] 	at org.springframework.cglib.core.AbstractClassGenerator$ClassLoaderData$3.apply(AbstractClassGenerator.java:106) ~[spring-core-5.1.0.RELEASE.jar:5.1.0.RELEASE] 	at org.springframework.cglib.core.AbstractClassGenerator$ClassLoaderData$3.apply(AbstractClassGenerator.java:104) ~[spring-core-5.1.0.RELEASE.jar:5.1.0.RELEASE] 	at org.springframework.cglib.core.internal.LoadingCache$2.call(LoadingCache.java:54) ~[spring-core-5.1.0.RELEASE.jar:5.1.0.RELEASE] 	at java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[?:?] 	at org.springframework.cglib.core.internal.LoadingCache.createEntry(LoadingCache.java:61) ~[spring-core-5.1.0.RELEASE.jar:5.1.0.RELEASE] 	at org.springframework.cglib.core.internal.LoadingCache.get(LoadingCache.java:34) ~[spring-core-5.1.0.RELEASE.jar:5.1.0.RELEASE] 	at org.springframework.cglib.core.AbstractClassGenerator$ClassLoaderData.get(AbstractClassGenerator.java:130) ~[spring-core-5.1.0.RELEASE.jar:5.1.0.RELEASE] 	at org.springframework.cglib.core.AbstractClassGenerator.create(AbstractClassGenerator.java:315) ~[spring-core-5.1.0.RELEASE.jar:5.1.0.RELEASE] 	at org.springframework.cglib.proxy.Enhancer.createHelper(Enhancer.java:569) ~[spring-core-5.1.0.RELEASE.jar:5.1.0.RELEASE] 	at org.springframework.cglib.proxy.Enhancer.createClass(Enhancer.java:416) ~[spring-core-5.1.0.RELEASE.jar:5.1.0.RELEASE] 	at org.springframework.context.annotation.ConfigurationClassEnhancer.createClass(ConfigurationClassEnhancer.java:137) ~[spring-context-5.1.0.RELEASE.jar:5.1.0.RELEASE] 	at org.springframework.context.annotation.ConfigurationClassEnhancer.enhance(ConfigurationClassEnhancer.java:109) ~[spring-context-5.1.0.RELEASE.jar:5.1.0.RELEASE] 	at org.springframework.context.annotation.ConfigurationClassPostProcessor.enhanceConfigurationClasses(ConfigurationClassPostProcessor.java:402) ~[spring-context-5.1.0.RELEASE.jar:5.1.0.RELEASE] 	... 18 more  [WARNING]  java.lang.reflect.InvocationTargetException     at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)     at jdk.internal.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)     at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke (Method.java:566)     at org.springframework.boot.maven.AbstractRunMojo$LaunchRunner.run (AbstractRunMojo.java:558)     at java.lang.Thread.run (Thread.java:834) Caused by: java.lang.IllegalStateException: Cannot load configuration class: me.schaka.configuration.ErrorConfig     at org.springframework.context.annotation.ConfigurationClassPostProcessor.enhanceConfigurationClasses (ConfigurationClassPostProcessor.java:413)     at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanFactory (ConfigurationClassPostProcessor.java:253)     at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors (PostProcessorRegistrationDelegate.java:286)     at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors (PostProcessorRegistrationDelegate.java:130)     at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors (AbstractApplicationContext.java:693)     at org.springframework.context.support.AbstractApplicationContext.refresh (AbstractApplicationContext.java:530)     at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh (ServletWebServerApplicationContext.java:140)     at org.springframework.boot.SpringApplication.refresh (SpringApplication.java:797)     at org.springframework.boot.SpringApplication.refreshContext (SpringApplication.java:421)     at org.springframework.boot.SpringApplication.run (SpringApplication.java:340)     at org.springframework.boot.SpringApplication.run (SpringApplication.java:1291)     at org.springframework.boot.SpringApplication.run (SpringApplication.java:1279)     at me.schaka.Application.main (Application.java:47)     at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)     at jdk.internal.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)     at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke (Method.java:566)     at org.springframework.boot.maven.AbstractRunMojo$LaunchRunner.run (AbstractRunMojo.java:558)     at java.lang.Thread.run (Thread.java:834) Caused by: java.lang.UnsupportedOperationException: This feature requires ASM7     at org.springframework.asm.ClassVisitor.visitNestMember (ClassVisitor.java:236)     at org.springframework.asm.ClassReader.accept (ClassReader.java:650)     at org.springframework.asm.ClassReader.accept (ClassReader.java:389)     at org.springframework.cglib.proxy.BridgeMethodResolver.resolveAll (BridgeMethodResolver.java:67)     at org.springframework.cglib.proxy.Enhancer.emitMethods (Enhancer.java:1238)     at org.springframework.cglib.proxy.Enhancer.generateClass (Enhancer.java:723)     at org.springframework.cglib.transform.TransformingClassGenerator.generateClass (TransformingClassGenerator.java:33)     at org.springframework.cglib.core.DefaultGeneratorStrategy.generate (DefaultGeneratorStrategy.java:25)     at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanFactoryAwareGeneratorStrategy.generate (ConfigurationClassEnhancer.java:252)     at org.springframework.cglib.core.AbstractClassGenerator.generate (AbstractClassGenerator.java:354)     at org.springframework.cglib.proxy.Enhancer.generate (Enhancer.java:582)     at org.springframework.cglib.core.AbstractClassGenerator$ClassLoaderData$3.apply (AbstractClassGenerator.java:106)     at org.springframework.cglib.core.AbstractClassGenerator$ClassLoaderData$3.apply (AbstractClassGenerator.java:104)     at org.springframework.cglib.core.internal.LoadingCache$2.call (LoadingCache.java:54)     at java.util.concurrent.FutureTask.run (FutureTask.java:264)     at org.springframework.cglib.core.internal.LoadingCache.createEntry (LoadingCache.java:61)     at org.springframework.cglib.core.internal.LoadingCache.get (LoadingCache.java:34)     at org.springframework.cglib.core.AbstractClassGenerator$ClassLoaderData.get (AbstractClassGenerator.java:130)     at org.springframework.cglib.core.AbstractClassGenerator.create (AbstractClassGenerator.java:315)     at org.springframework.cglib.proxy.Enhancer.createHelper (Enhancer.java:569)     at org.springframework.cglib.proxy.Enhancer.createClass (Enhancer.java:416)     at org.springframework.context.annotation.ConfigurationClassEnhancer.createClass (ConfigurationClassEnhancer.java:137)     at org.springframework.context.annotation.ConfigurationClassEnhancer.enhance (ConfigurationClassEnhancer.java:109)     at org.springframework.context.annotation.ConfigurationClassPostProcessor.enhanceConfigurationClasses (ConfigurationClassPostProcessor.java:402)     at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanFactory (ConfigurationClassPostProcessor.java:253)     at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors (PostProcessorRegistrationDelegate.java:286)     at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors (PostProcessorRegistrationDelegate.java:130)     at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors (AbstractApplicationContext.java:693)     at org.springframework.context.support.AbstractApplicationContext.refresh (AbstractApplicationContext.java:530)     at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh (ServletWebServerApplicationContext.java:140)     at org.springframework.boot.SpringApplication.refresh (SpringApplication.java:797)     at org.springframework.boot.SpringApplication.refreshContext (SpringApplication.java:421)     at org.springframework.boot.SpringApplication.run (SpringApplication.java:340)     at org.springframework.boot.SpringApplication.run (SpringApplication.java:1291)     at org.springframework.boot.SpringApplication.run (SpringApplication.java:1279)     at me.schaka.Application.main (Application.java:47)     at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)     at jdk.internal.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)     at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke (Method.java:566)     at org.springframework.boot.maven.AbstractRunMojo$LaunchRunner.run (AbstractRunMojo.java:558)     at java.lang.Thread.run (Thread.java:834) ```  The class causing issues:  ```java @Configuration public class ErrorConfig implements WebServerFactoryCustomizer {  	@Override 	public void customize(ConfigurableServletWebServerFactory server) { 		server.addErrorPages(new ErrorPage(HttpStatus.NOT_FOUND, ""/404"")); 		server.addErrorPages(new ErrorPage(HttpStatus.UNAUTHORIZED, ""/401"")); 		server.addErrorPages(new ErrorPage(""/error"")); 	}  	@Component 	static class DefaultExceptionResolver implements HandlerExceptionResolver {  		private static final Logger LOG = LoggerFactory.getLogger(DefaultExceptionResolver.class);  		@Override 		public ModelAndView resolveException(final HttpServletRequest request, final HttpServletResponse response, final Object handler, 				final Exception exception) { 			Throwable[] suppressed = exception.getSuppressed(); 			Throwable suppressedException = null; 			if (suppressed != null && suppressed.length > 0) { 				suppressedException = suppressed[0]; 			} 			if (exception instanceof ClientAbortException || suppressedException instanceof ClientAbortException) { 				LOG.warn(""Client aborted connection for uri {}."", request.getRequestURI()); 			} 			else { 				LOG.error(""An uncaught exception occured processing uri "" + request.getRequestURI(), exception); 			} 			if (response.isCommitted()) { 				return new ModelAndView(); 			} 			else { 				response.setStatus(HttpServletResponse.SC_INTERNAL_SERVER_ERROR); 				return new ModelAndView(""forward:/"" + ErrorController.ERROR_PATH); 			} 		}  	}  	@ControllerAdvice(annotations = AjaxController.class) 	static class AjaxExceptionHandler extends ResponseEntityExceptionHandler {  		private static final Logger LOGGER = LoggerFactory.getLogger(AjaxExceptionHandler.class); 		private static final String ARRAY_INDEX_FORMAT = ""[%s]"";  		@ResponseStatus(HttpStatus.INTERNAL_SERVER_ERROR) 		@ExceptionHandler(value = Exception.class) 		public ResponseEntity handleGlobalError(Exception e) throws Exception { 			if (AnnotationUtils.findAnnotation(e.getClass(), ResponseStatus.class) != null) { 				throw e; 			}  			LOGGER.error(""An uncaught exception occured."", e);  			return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR) 				.body(new ErrorMessage(e.getLocalizedMessage()).exception(e.getClass().getCanonicalName())); 		}  		@Override 		protected ResponseEntity handleMethodArgumentNotValid(MethodArgumentNotValidException ex, HttpHeaders headers, HttpStatus status, 				WebRequest request) { 			List fieldErrors = ex.getBindingResult().getFieldErrors(); 			List globalErrors = ex.getBindingResult().getGlobalErrors(); 			ErrorMessage errorMessage = new ErrorMessage(""Invalid argument""); 			for (org.springframework.validation.FieldError fieldError : fieldErrors) { 				errorMessage.addFieldError(new de.personalmarkt.egg.error.FieldError(fieldError.getField(), fieldError.getDefaultMessage())); 			} 			for (org.springframework.validation.ObjectError objectError : globalErrors) { 				errorMessage.addObjectError(new ObjectError(objectError.getObjectName(), objectError.getDefaultMessage())); 			} 			return new ResponseEntity<>(errorMessage, headers, status); 		}  		@Override 		protected ResponseEntity handleHttpMediaTypeNotSupported(HttpMediaTypeNotSupportedException ex, HttpHeaders headers, HttpStatus status, 				WebRequest request) { 			String unsupported = ""Unsupported content type: "" + ex.getContentType(); 			String supported = ""Supported content types: "" + MediaType.toString(ex.getSupportedMediaTypes()); 			ErrorMessage errorMessage = new ErrorMessage(unsupported + "". "" + supported); 			return new ResponseEntity<>(errorMessage, headers, status); 		}  		@Override 		protected ResponseEntity handleHttpMessageNotReadable(HttpMessageNotReadableException ex, HttpHeaders headers, HttpStatus status, 				WebRequest request) { 			Throwable mostSpecificCause = ex.getMostSpecificCause(); 			ErrorMessage errorMessage = new ErrorMessage(""Message not readable"").exception(ex.getClass().getCanonicalName()); 			if (mostSpecificCause != null) { 				errorMessage = errorMessage.exception(mostSpecificCause.getClass().getName()); 				if (mostSpecificCause instanceof JsonMappingException) { 					JsonMappingException jsonMappingException = (JsonMappingException) mostSpecificCause; 					errorMessage.addFieldError( 							new de.personalmarkt.egg.error.FieldError(getFieldName(jsonMappingException), jsonMappingException.getOriginalMessage())); 				} 			} 			return new ResponseEntity<>(errorMessage, headers, status); 		}  		private String getFieldName(JsonMappingException e) { 			String fieldName = EMPTY; 			List path = e.getPath(); 			if (path != null && !path.isEmpty()) { 				fieldName = path.stream().map(this::toFieldName).collect(joining(""."")); 			} 			return fieldName; 		}  		private String toFieldName(JsonMappingException.Reference reference) { 			if (reference.getFieldName() != null) { 				return reference.getFieldName(); 			} 			else if (reference.getIndex() >= 0) { 				return String.format(ARRAY_INDEX_FORMAT, reference.getIndex()); 			} 			else { 				return EMPTY; 			} 		} 	}  } ```    ---  **Affects:** 5.1 GA  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/dc8f6f7177369a94c0b99c49909dd5f9313f563b, https://github.com/spring-projects/spring-framework/commit/547499528883a584651fdc12279331d56a32c5e7, https://github.com/spring-projects/spring-framework/commit/a2ae5f6972cd1b989e04d3aba46c226bf6ab9f2b","closed","in: core,","spring-projects-issues","2018-10-12T09:08:23Z","2018-10-15T07:48:38Z"
"","22050","Expose mapped handler as request attribute in spring-webmvc [SPR-17518]","**[Johnny Lim](https://jira.spring.io/secure/ViewProfile.jspa?name=izeye)** opened **[SPR-17518](https://jira.spring.io/browse/SPR-17518?redirect=false)** and commented  Javadoc for `HandlerMapping.getHandler()` says it will return `null` if no mapping found but `RequestMappingHandlerMapping.getHandler()` throws `HttpRequestMethodNotSupportedException` instead.     There's a sample project to reproduce it in the ""Reference URL"".   ---  **Affects:** 4.3.20  **Reference URL:** https://github.com/spring-projects/spring-boot/issues/15204  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/736b3c45e806a5be9be80d28759a9b85a9fbfa11, https://github.com/spring-projects/spring-framework/commit/a55ca56e344577fc771e72513e013781df0e792b, https://github.com/spring-projects/spring-framework/commit/abacc6d29ed2b7cd5ccd8498d3e4db05aa6d7dc4  **Backported to:** [5.0.11](https://github.com/spring-projects/spring-framework/milestone/192?closed=1), [4.3.21](https://github.com/spring-projects/spring-framework/milestone/170?closed=1)","closed","type: enhancement,","spring-projects-issues","2018-11-19T11:38:04Z","2019-01-11T13:33:15Z"
"","21929","CORS detection for reactive stack on tomcat/netty is broken [SPR-17396]","**[Johannes Edmeier](https://jira.spring.io/secure/ViewProfile.jspa?name=joshi)** opened **[SPR-17396](https://jira.spring.io/browse/SPR-17396?redirect=false)** and commented  The CorsUtils queries the presence of the `Origin` and `Access-Control-Request-Method` with a simple non null check. But when using the reactive stack the `TomcatHeadersAdapter#get()` and the `NettyHeadersAdapter#get()` returns an empty list (instead of null) when the requested header is not present. The effect of this is, that `OPTIONS` requests aren't handled with the (correct) annotated handler method but are incorrectly handled as preflight requests (which they aren't)  ---  **Affects:** 5.1.1  **Issue Links:** - #21783 Improve WebFlux performance for header management","closed","type: bug,","spring-projects-issues","2018-10-17T19:19:04Z","2019-01-11T13:11:31Z"
"","21958","Memory Leak In Removing Alias [SPR-17425]","**[JinZhou Huang](https://jira.spring.io/secure/ViewProfile.jspa?name=huangjinzhou)** opened **[SPR-17425](https://jira.spring.io/browse/SPR-17425?redirect=false)** and commented  In case that there is a bean named A, and it has an alias named B, and B has an alias named C, after alias B was removed through SimpleAliasRegistry#removeAlias(String), the pair B and C is still in the aliasMap of SimpleAliasRegistry. I think it should be considered as a kind of memory leak.   ---  **Affects:** 5.0.9","closed","in: core,","spring-projects-issues","2018-10-24T04:54:06Z","2022-02-18T20:52:40Z"
"","22162","Improve message for `HttpStatusCodeException` with empty status text","**[Jerzy Krolak](https://jira.spring.io/secure/ViewProfile.jspa?name=jerzykrlk)** opened **[SPR-17631](https://jira.spring.io/browse/SPR-17631?redirect=false)** and commented  I noticed that in RestTemplate-based client, I'm getting error messages like `404 null` and similar. Then I found that the Spring Boot application returns error statuses like the following:  ```java > curl -v http://localhost:8080/page-not-found (...) < HTTP/1.1 404 < Content-Type: application/json;charset=UTF-8 ```  which will look like this:  `org.springframework.web.client.HttpClientErrorException$NotFound: 404 null`  Others return results like:  ```java curl -v http://google.com/page-not-found (...) < HTTP/1.1 404 Not Found < Content-Type: text/html; charset=UTF-8 ```  Which results in a nice looking error message:  `org.springframework.web.client.HttpClientErrorException$NotFound: 404 Not Found`  I'm not sure if I should raise is as a bug - it does not seem that the status message is mandatory.  Is this a bug, or a feature?  ---  **Affects:** 5.1.3  **Issue Links:** - #19967 Exception hierarchy under HttpClientException and HttpServerException for the RestTemplate","closed","type: enhancement,","spring-projects-issues","2018-12-29T19:45:54Z","2019-01-23T10:54:37Z"
"","22072","Spring JavaMailSenderImpl does not show proper message when recipient list is empty [SPR-17540]","**[Jebil](https://jira.spring.io/secure/ViewProfile.jspa?name=jebil)** opened **[SPR-17540](https://jira.spring.io/browse/SPR-17540?redirect=false)** and commented  org.springframework.mail.javamail.JavaMailSenderImpl does not show proper message when recipient list is empty.  Currently it just throws NPE, which is hard to debug for beginners.   ---  **Referenced from:** pull request https://github.com/spring-projects/spring-framework/pull/2029, and commits https://github.com/spring-projects/spring-framework/commit/16e9b83d4358fd55e075a6ad0bdc0cdd97bedc81, https://github.com/spring-projects/spring-framework/commit/2efac5ad6b979501a1a75995c9591a4c6027cf78, https://github.com/spring-projects/spring-framework/commit/191a2d3f2555c58a82bbe14ea7d1ec627a7a3e38  **Backported to:** [5.0.12](https://github.com/spring-projects/spring-framework/milestone/193?closed=1), [4.3.22](https://github.com/spring-projects/spring-framework/milestone/171?closed=1)","closed","type: bug,","spring-projects-issues","2018-11-27T08:53:20Z","2019-01-09T09:57:56Z"
"","22077","Tests fail when using spring-context-indexer [SPR-17545]","**[Jean-Pierre Bergamin](https://jira.spring.io/secure/ViewProfile.jspa?name=ractive)** opened **[SPR-17545](https://jira.spring.io/browse/SPR-17545?redirect=false)** and commented  Test configurations are not considered anymore while running tests when the spring-context-indexer is used in the project. Out of the blue I assume that only the components in the spring.components file are loaded and test configurations are left alone - which breaks tests.  This very simple project shows this behaviour: https://github.com/ractive/spring-context-indexer  If you enable the `spring-context-indexer` in the `build.gradle` file, tests fail because not the `testClock` bean in the `TestConfig` class is used, but the actual clock bean defined in the `Config` class.   ---  **Reference URL:** https://github.com/ractive/spring-context-indexer","closed","in: core,","spring-projects-issues","2018-11-28T10:35:40Z","2019-01-12T16:20:31Z"
"","22006","Not encoding '+' in URLs anymore breaks backwards compatibility with apps running on spring 4 [SPR-17474]","**[Jean-Pierre Bergamin](https://jira.spring.io/secure/ViewProfile.jspa?name=ractive)** opened **[SPR-17474](https://jira.spring.io/browse/SPR-17474?redirect=false)** and commented  We upgraded some of our apps from spring boot 1.5.x to 2 and therefore to spring 5.x. We now have backward compatibility issues of http clients running with spring 5 and web services running with spring 4 because the + in query params on the client side is not encoded anymore. Services still running with Spring 4.x replace the + now with a space and therefore those query params are now broken on the server side (e.g. with this URL: [http://example.com?when=2007-08-31T16:47+02:00](http://example.com/?when=2007-08-31T16:47+02:00)). I'm also pretty sure that many other web frameworks besides spring 4 blindly replace a + with a space being in a query param or not and therefore see invalid query params sent from spring 5 clients now. So IMHO the change in behaviour here is dangerous and not really necessary because a + that is encoded with %2b will be properly handled by any web framework.  This change has been introduced here https://github.com/spring-projects/spring-framework/commit/f2e293aadf98cb64ba7ef3044b59f469efd21503 because of #19394        ---  **Affects:** 5.0.10  **Issue Links:** - #21399 Spring is inconsistent in the encoding/decoding of URLs (_**""duplicates""**_) - #20750 Encoding of URI Variables on RestTemplate (_**""duplicates""**_) - #19394 UriComponentBuilder doesn't work with encoded HTTP URL having '+'.","closed","in: web,","spring-projects-issues","2018-11-07T08:37:58Z","2019-01-14T04:26:16Z"
"","21974","ConcurrentModificationException in DispatcherServlet with asynchronous ApplicationEventMulticaster [SPR-17442]","**[Jared Wiltshire](https://jira.spring.io/secure/ViewProfile.jspa?name=jaredwiltshire)** opened **[SPR-17442](https://jira.spring.io/browse/SPR-17442?redirect=false)** and commented  We are occasionally seeing a ConcurrentModificationException thrown from DispatcherServlet.initHandlerMappings(ApplicationContext context) due to the sorting of the handler mappings from two different threads (DispatcherServlet line 590 in 5.0.10).  I traced the cause of this back to our use of SimpleApplicationEventMulticaster with an asynchronous task executor.  What is happening is that FrameworkServlet.initWebApplicationContext() calls configureAndRefreshWebApplicationContext(cwac) which fires off a ContextRefreshedEvent. This results in onApplicationEvent(ContextRefreshedEvent event) being called from an executor thread which then calls onRefresh(event.getApplicationContext()). Further down in initWebApplicationContext() (FrameworkServlet line 557) it checks the boolean refreshEventReceived and calls onRefresh(wac) again from the main thread as there is no synchronization.     ---  **Affects:** 5.0.10  **Issue Links:** - #21980 StandardEvaluationContext does not support concurrent variable access  **Backported to:** [5.0.11](https://github.com/spring-projects/spring-framework/milestone/192?closed=1)","closed","type: bug,","spring-projects-issues","2018-10-29T16:47:32Z","2019-01-11T13:15:29Z"
"","22024","FastByteArrayInputStream.read() wrong return value [SPR-17492]","**[janotav](https://jira.spring.io/secure/ViewProfile.jspa?name=janotav)** opened **[SPR-17492](https://jira.spring.io/browse/SPR-17492?redirect=false)** and commented  The FastByteArrayInputStream.read() returns the byte as-is without the necessary conversion to the 0..255 int value and thus breaking the InputStream contract.      ---  **Referenced from:** pull request https://github.com/spring-projects/spring-framework/pull/2016, and commits https://github.com/spring-projects/spring-framework/commit/35da9f1ddf4e740344ad12154d9f1b59ec155bd6, https://github.com/spring-projects/spring-framework/commit/12f168290d114006b187bf1b1231609c1a5ba7d4, https://github.com/spring-projects/spring-framework/commit/ed9afa3686a9a0310c8f32ed2142732d5075946c  **Backported to:** [5.0.11](https://github.com/spring-projects/spring-framework/milestone/192?closed=1), [4.3.21](https://github.com/spring-projects/spring-framework/milestone/170?closed=1)","closed","in: core,","spring-projects-issues","2018-11-13T21:01:27Z","2018-11-27T08:59:02Z"
"","22098","MockHttpServletRequest changes Accept-Language header values [SPR-17566]","**[Jan Engehausen](https://jira.spring.io/secure/ViewProfile.jspa?name=smurf667)** opened **[SPR-17566](https://jira.spring.io/browse/SPR-17566?redirect=false)** and commented  Greetings,  after switching to Spring 5 (via Spring Boot 2) I am unhappy with the behaviour of `org.springframework.mock.web.MockHttpServletRequest` in regards to handling the `Accept-Language` header. It seems that it is getting manipulated when values for this header are set. In short, I potentially do not get back the value I am setting. If I set a literal value, e.g. `ru, fr;q=0.5, *;q=0.1` then I expect to get this back when I read it again. However, it gets transformed into e.g. `ru, fr`.  I am attaching a test showing the issue.  While I might work around this by subclassing the mock request where used directly, when I use fancier things like `org.springframework.test.web.servlet.MockMvc` this does not work (at least I don't know how). The request is built internally, and my code using that request sees the above demonstrated unexpected value.  ```java public void testSomething() throws Exception {  mockMvc.perform(  get(""/my/controller/url"")  .header(HttpHeaders.ACCEPT_LANGUAGE, ""ru, fr;q=0.5, *;q=0.1"")  )  .andExpect(status().isOk()); )  ```  Suggestions on how to circumvent this problem or a fix would be appreciated!  Thanks, Jan  ---  **Affects:** 5.0.11, 5.1.3  **Attachments:** - [lang-tag-demo.zip](https://jira.spring.io/secure/attachment/26138/lang-tag-demo.zip) (_3.62 kB_)  **Issue Links:** - #20999 MockHttpServletRequest.addHeader fails for invalid LanguageRange in Accept-Language - #19773 Mock MVC / RequestBuilder should handle Accept-Language header appropriately  **Backported to:** [5.0.12](https://github.com/spring-projects/spring-framework/milestone/193?closed=1)","closed","type: bug,","spring-projects-issues","2018-12-04T16:30:56Z","2019-01-11T13:29:30Z"
"","21921","Ability to customize Jaxb Marshaller in Jaxb2XmlEncoder [SPR-17388]","**[Jakub Štiller](https://jira.spring.io/secure/ViewProfile.jspa?name=delorien84)** opened **[SPR-17388](https://jira.spring.io/browse/SPR-17388?redirect=false)** and commented  I would like to have ability to customize Jaxb Marshller inside org.springframework.http.codec.xml.Jaxb2XmlEncoder.      My goal is to setup Marshaller to output CDATA element, as described here https://coderleaf.wordpress.com/2016/11/14/handling-cdata-with-jaxb/ . Currently there is no way how to setup custom properties into Marshaller.     Current workaround is to create custom XmlEncoder as copy paste of org.springframework.http.codec.xml.Jaxb2XmlEncoder and with customization of Marshaller   ---  **Affects:** 5.1.1  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/46a5fb7a9133a0c4a392ce23597623c64a16aa3c, https://github.com/spring-projects/spring-framework/commit/de453ace86074886b87184bf09a770e07e933d45","closed","type: enhancement,","spring-projects-issues","2018-10-16T09:02:40Z","2018-11-27T10:00:04Z"
"","22081","Do not swallow exception cause when context refresh fails [SPR-17549]","**[Jake Robb](https://jira.spring.io/secure/ViewProfile.jspa?name=jakerobb)** opened **[SPR-17549](https://jira.spring.io/browse/SPR-17549?redirect=false)** and commented  I have a bean that is failing to initialize and throwing an exception. The cause of the cause of the cause of that exception is the real, underlying issue.  The exception propagates to AbstractApplicationContext.refresh, at which point it is logged as a warning:  ```java if (logger.isWarnEnabled()) {    logger.warn(""Exception encountered during context initialization - "" +          ""cancelling refresh attempt: "" + ex); } ```  Note that the exception is being string-concatenated (and therefore toString'd), rather than passing the exception itself to the logger. This means that only the exception's type and message get written to the log, which in turn means that I only learn that my bean failed to initialize, but not why. It also means I get no stacktrace.  The fix here is to replace the `+` with a `,`. I'll be submitting a pull request shortly.  ---  **Affects:** 5.0.4, 5.0.11  **Issue Links:** - #18238 Revisit BeansException warn logging after startup failure","open","in: core,","spring-projects-issues","2018-11-29T18:10:56Z","2019-02-21T15:08:50Z"
"","21978","Some Spring Framework modules still reference groovy-all artifact [SPR-17446]","**[Ian Young](https://jira.spring.io/secure/ViewProfile.jspa?name=iay)** opened **[SPR-17446](https://jira.spring.io/browse/SPR-17446?redirect=false)** and commented  For Spring Framework 5.1, the Groovy dependency was updated to Groovy 2.5. Here's an extract from [Groovy's documentation](http://groovy-lang.org/download.html#buildtools):  > Packaging Scheme: > 2.4.X: The core plus all the modules merged into one ""fat jar"". Optional dependencies are marked as optional, so you may need to include some of the optional dependencies to use some features of Groovy, e.g. AntBuilder, GroovyMBeans... > 2.5+: A ""fat pom"" groovy-all-x.y.z.pom referring to the core plus all modules (excluding optional ones). In order to cater to the module system of Java 9+, the groovy-all-x.y.z.jar file is no longer available.  In some places (because of issues with Java modularity with the arrival of Java 9) the reference to the `groovy-all` artifact has been made more focused and replaced with references to individual groovy components (see commit 0092653d42f61107b81ca41a1b8470f2fe433927):  > This commit changes the dependency from `groovy-all` to more focused > dependencies on Groovy in the `spring-beans` and `spring-context` > modules. This change seems to avoid the automatic loading of Groovy > enhancements to JAXB (shipped with `groovy-xml`).  However, there are a few other places where references to `groovy-all` still occur _as an apparent compilation dependency_:  ``` $ grep -r ""groovy-all"" * spring-test/spring-test.gradle:	optional(""org.codehaus.groovy:groovy-all:${groovyVersion}"") spring-tx/spring-tx.gradle:	testCompile(""org.codehaus.groovy:groovy-all:${groovyVersion}"") spring-web/spring-web.gradle:	optional(""org.codehaus.groovy:groovy-all:${groovyVersion}"") spring-webmvc/spring-webmvc.gradle:	optional(""org.codehaus.groovy:groovy-all:${groovyVersion}"") ```  These don't cause issues at run time because the dependency on the `groovy-all` artifact (which no longer exists, as it has become essentially a BOM) is optional.  They do cause issues if you try to recursively resolve the dependencies of an application using Spring Framework using Maven, because it goes looking for the artifact that no longer exists.  The right fix for this, I think, would be to replace those references to `groovy-all` to instead reference the components of Groovy that each module actually (optionally?) requires.   ---  **Affects:** 5.1.2  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/f65408f646cd42e9bc7701b3294938d393a36905","closed","type: task,","spring-projects-issues","2018-10-30T17:47:38Z","2018-11-27T10:00:04Z"
"","22040","Reserializing a lenient fallback DefaultListableBeanFactory causes an error [SPR-17508]","**[hwanders](https://jira.spring.io/secure/ViewProfile.jspa?name=hwanders)** opened **[SPR-17508](https://jira.spring.io/browse/SPR-17508?redirect=false)** and commented  In #20321 the deserialization of `DefaultListableBeanFactory.SerializedBeanFactoryReference` was changed: * Instead of resolving a not-found ID to a `StaticListableBeanFactory`, it is now resolved to a `DefaultListableBeanFactory`.  The old `StaticListableBeanFactory` does not implement `Serializable` while `DefaultListableBeanFactory` indeed does. When obaining such a lenient fallback `DefaultListableBeanFactory` from `SerializedBeanFactoryReference#readResolve`, it does _not_ get a `serializationId` assigned.  This causes later reserializations [and they may appear, since the class implements `Serializable`] to fail with a `NotSerializableException(""DefaultListableBeanFactory has no serialization id"")`.  Maybe the desired ID (which could not be looked up in the static map `serializableFactories`) should be used:  ```java // Lenient fallback: dummy factory in case of original factory not found... DefaultListableBeanFactory factory = new DefaultListableBeanFactory(); // make the factory effectively serializable  factory.setSerializationId(this.id); return factory; ```  But perhaps this causes undesired side-effects because other dead references to the same factory will become alive when they are deserialized in later calls (they will find the registered dummy factory).     This is actually happening in our software when opening our web application, using an old session containing an `OAuth2ClientContext` after changing the application's bean definitions.  We are using the `spring-boot-starter-parent` 1.5.7 but some tests on 1.5.17 (which uses 4.3.20) indicate that this is still an issue.  ---  **Affects:** 4.3.20  **Issue Links:** - #20321 ClassCastException during deserialization of ScopedObject  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/f5aeb8147302138c74127c312b2f3af661c98da7, https://github.com/spring-projects/spring-framework/commit/37a50d701eecad0ebd4177c17c70f84ac090113d, https://github.com/spring-projects/spring-framework/commit/22f4b1ce6ba9b871cb1f389a830a6a8655b04828  **Backported to:** [5.0.11](https://github.com/spring-projects/spring-framework/milestone/192?closed=1), [4.3.21](https://github.com/spring-projects/spring-framework/milestone/170?closed=1)","closed","in: core,","spring-projects-issues","2018-11-16T15:58:09Z","2019-01-13T19:52:19Z"
"","22051","Add Annotation for bean overriding [SPR-17519]","**[huehnerlady](https://jira.spring.io/secure/ViewProfile.jspa?name=huehnerlady)** opened **[SPR-17519](https://jira.spring.io/browse/SPR-17519?redirect=false)** and commented  `We like the idea that with spring boot 2.1.0 the default value for the property `spring.main.allow-bean-definition-overriding` is now set to false.`  But this comes with a challenge. We have tests which override one specific bean with a mock for integration testing. Now for these tests we get a BeanOverrideException. We currently use the workaround with setting the property `spring.main.allow-bean-definition-overriding` to `true` for these specific tests, but in the end we might miss other overridden beans in a test which makes the app fail to start later. So we have to add another (expensive) Integration test that checks whether the app starts up without any errors.  So my proposal is to add an annotation - kind of similar to `@Primary`, that says that you actively want to override ONE SPECIFIC bean and make THIS bean primary.  Other idea is to just have an annotation to allow ONE SPECIFIC bean to be overridden and add the `@Primary` annotation as well.  What do you think?   ---  **Reference URL:** https://github.com/spring-projects/spring-boot/issues/15216#event-1975334888","open","in: core,","spring-projects-issues","2018-11-19T17:59:20Z","2021-11-10T12:00:10Z"
"","22076","export runnable JAR files from within eclipse [SPR-17544]","**[huangliusong](https://jira.spring.io/secure/ViewProfile.jspa?name=huangliusong)** opened **[SPR-17544](https://jira.spring.io/browse/SPR-17544?redirect=false)** and commented  Spring-based project to export into a jar to do then, the second option of eclipse is used to derive the executable jar, couldn't find the namespace, normal, in the eclipse runtime is derived when won't run, https://gitee.com/huangliusong/demo2 this is the source code, hope you glad   --- No further details from [SPR-17544](https://jira.spring.io/browse/SPR-17544?redirect=false)","closed","status: invalid,","spring-projects-issues","2018-11-28T01:33:25Z","2019-01-12T05:17:35Z"
"","21923","Increase the preprocessing when executing asynchronous calls [SPR-17390]","**[hqch0708](https://jira.spring.io/secure/ViewProfile.jspa?name=hqch0708)** opened **[SPR-17390](https://jira.spring.io/browse/SPR-17390?redirect=false)** and commented  When the method is marked `@async`, it allows developers to customize the pre-processing to meet functional requirements when performing asynchronous calls through a thread pool.  For example, you can customize ThreadFactory to pass information from ThreadLocal to asynchronous threads as ThreadName when you create a thread, and then perform pre-processing at the asynchronous call.   ---  **Affects:** 5.1.1  **Referenced from:** pull request https://github.com/spring-projects/spring-framework/pull/1994","open","in: core,","spring-projects-issues","2018-10-16T11:11:21Z","2019-01-11T13:11:22Z"
"","21930","LogFormatUtils.formatValue does not leniently handle toString() exceptions [SPR-17397]","**[Hans](https://jira.spring.io/secure/ViewProfile.jspa?name=springbob)** opened **[SPR-17397](https://jira.spring.io/browse/SPR-17397?redirect=false)** and commented  Steps to reproduce: 1. create two entities with a JPA-one-to-many-relationship between the two 2. annotate both classes with lombok's `@Data` (generating e.g. toString()) 3. set logging.level.org.springframework.web to DEBUG 4. POST a new child object with a parent reference 5. Spot the exception. In my case, backend state was correct, frontend stopped working.  Lombok's autogenerated toString() methods probably result in an endless loop in this call:  https://github.com/spring-projects/spring-framework/blob/fdaceeb6c97ae166a9c09f00678383b266dfe2e3/spring-core/src/main/java/org/springframework/core/log/LogFormatUtils.java#L50  Besides excluding some fields from being toStringified() by lombok, this method probably shouldn't throw an error in any case so you might consider try-catching the call.   ---  **Affects:** 5.1.1  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/7ff938b3ef0e20e3f18544abb53c3bf17d3a15ec","closed","in: core,","spring-projects-issues","2018-10-17T19:42:49Z","2018-10-29T11:07:58Z"
"","22015","SimpleJdbcInsert mixes column names from different databases in MySQL [SPR-17483]","**[Hans Desmet](https://jira.spring.io/secure/ViewProfile.jspa?name=desmethans)** opened **[SPR-17483](https://jira.spring.io/browse/SPR-17483?redirect=false)** and commented  The script **createDatabases.sql** creates two MySQL databases: **example1** and **example2**. Each database has as table **persons:** * The database **example1** has as column **firstname** in this table. * The database **example2** has as column **lastname** in this table.  The test **SimpleJdbcInsertTest** tries to insert a record in the database **example1**.  ```java @RunWith(SpringRunner.class) @JdbcTest @AutoConfigureTestDatabase(replace = Replace.NONE) public class SimpleJdbcInsertTest { 	@Autowired 	private DataSource dataSource; 	private SimpleJdbcInsert insert;  	@Before 	public void before() { 		insert = new SimpleJdbcInsert(dataSource); 	}  	@Test 	public void insertPerson() { 		insert.withTableName(""persons""); 		insert.execute(Collections.singletonMap(""firstname"", ""joe"")); 	} } ```  The test fails, because SimpleJdbcInsert sends following statement to the database:  ```sql INSERT INTO persons (lastname) VALUES(?) ```  This statement uses the wrong column **lastname** from the **other** database: **example2**.  The example project uses Spring Boot **2.1.0** When you revert to Spring Boot **2.0.6**, the code works.  I think the problem is caused by the way the MySQL JDBC driver **8.0.13** provides meta data has changed, compared to the driver **5.1.47**. I have tried to indiciate this in the test **ColumNames**, provided in the project.   ---  **Affects:** 5.1.2  **Reference URL:** https://github.com/desmethans/simplejdbcinsert.git","open","in: data,","spring-projects-issues","2018-11-09T10:20:55Z","2019-01-11T13:27:27Z"
"","22036","add ability to ignore exceptions when using @Cacheable annotation [SPR-17504]","**[Gökhan Öner](https://jira.spring.io/secure/ViewProfile.jspa?name=gokhanoner)** opened **[SPR-17504](https://jira.spring.io/browse/SPR-17504?redirect=false)** and commented  When using distributed caching solutions, the cache could be unavailable for any reason. Instead of throwing an exception, to increase availability, an attribute can be added to `Cacheable` annotation like in the `Transactional` `rollbackFor`, and if defined these exceptions thrown by underlying cache managers can be ignored bot both get/put & method can be called directly, without caching the result.     Circuit Breaker pattern could be used here but you need to provide for each method & implement an additional method. This seems more fluent.   --- No further details from [SPR-17504](https://jira.spring.io/browse/SPR-17504?redirect=false)","closed","in: core,","spring-projects-issues","2018-11-15T19:46:18Z","2019-01-12T05:17:43Z"
"","21962","ProtobufDecoder assumes number of bytes in delimited format will not be split into chunks [SPR-17429]","**[Grzegorz Ligas](https://jira.spring.io/secure/ViewProfile.jspa?name=ligasgr)** opened **[SPR-17429](https://jira.spring.io/browse/SPR-17429?redirect=false)** and commented  Following the introduction of Protobuf (de)serialization in #20331 the deserialisation process assumes two things which are invalid:   - DataBuffer behaves like InputStream (returns -1 when no data left)   - Data in DataBuffer will somehow magically avoid splitting bytes that represent messageBytesToRead across two separate DataBuffer instances (which can happen in practice. I actually saw that the first time I ran decoding of delimited stream bigger than few items     To solve the issue I think it would be necessary to: * introduce some additional DataBuffer as a member of MessageDecoderFunction to keep the data from the previous instance of input (DataBuffer) from previous item in Flux that was not a full integer * stop using -1 as a signal for failure of parsing. -1 as a byte value can be just a part of some valid varint32 representation. Instead I would propose trying to readVarint32 given the available remaining data in current input and if it fails then restore the read position to before the read and store the remaining bytes from input in the additional buffer proposed in point above * once in next flux item check if there is some data in the additional buffer and if there is then try appending enough of data from new input into the additional buffer to make sure we can read varint32 (64 bytes seems to be the maximum required to read it). Try read the value and if succeeded then restore the input read position to the place right after the last byte necessary to read the varint32. * set the messageBytesToRead based on the read varint32 and proceed to the normal flow     This is obviously just one proposed solution, there's many that will work equally well.  To reproduce the issue a sample test would have to be created similar to the test ""decodeSplitChunks()"" in [spring-web/src/test/java/org/springframework/http/codec/protobuf/ProtobufDecoderTests.java](https://github.com/spring-projects/spring-framework/commit/6b6384a09ed643252e46551d2cf58dbf5b485c88#diff-d4f4eb68b6d9573c1aa727bd8b023acc)  that would split the initial and/or subsequent messageBytesToRead varint32 into separate DataBuffers. For that the sample messages sizes may have to be increased significantly. Also it would be good to add a test that verifies that a messageBytesToRead that has got varint32 representation starting with a byte value -1 (as int) is not throwing exception.     Please let me know if you need any further details or help in preparing reproducing test and/or solution.  ---  **Affects:** 5.1 RC2  **Issue Links:** - #20331 Support Protobuf serialization in WebFlux  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/91de8d265e332ba378f191105592190d4f90bb48","closed","type: bug,","spring-projects-issues","2018-10-24T21:20:55Z","2019-06-14T10:59:12Z"
"","22012","JDK 11: Illegal reflective access by org.springframework.util.ReflectionUtils [SPR-17480]","**[Grigory Kislin](https://jira.spring.io/secure/ViewProfile.jspa?name=gkislin)** opened **[SPR-17480](https://jira.spring.io/browse/SPR-17480?redirect=false)** and commented  With --illegal-access=debug:  WARNING: Illegal reflective access by org.springframework.util.ReflectionUtils (file:/C:/java/maven_repo/org/springframework/spring-core/5.1.2.RELEASE/spring-core-5.1.2.RELEASE.jar) to method java.util.HashMap$Node.getKey()WARNING: Illegal reflective access by org.springframework.util.ReflectionUtils (file:/C:/java/maven_repo/org/springframework/spring-core/5.1.2.RELEASE/spring-core-5.1.2.RELEASE.jar) to method java.util.HashMap$Node.getKey() at org.springframework.util.ReflectionUtils.makeAccessible(ReflectionUtils.java:493) at org.springframework.expression.spel.support.ReflectivePropertyAccessor$OptimalPropertyAccessor.read(ReflectivePropertyAccessor.java:691) at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:204) at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104) at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51) at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406) at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:90) at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:111) at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:328) at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263) at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166) at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66) at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109) at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138) at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144) at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74) at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95) at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633) at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918) at org.thymeleaf.engine.StandaloneElementTag.beHandled(StandaloneElementTag.java:228) at org.thymeleaf.engine.Model.process(Model.java:282) at org.thymeleaf.engine.Model.process(Model.java:290) at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367) at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221) at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640) at org.thymeleaf.engine.CloseElementTag.beHandled(CloseElementTag.java:139) at org.thymeleaf.engine.Model.process(Model.java:282) at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1587) at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205) at org.thymeleaf.engine.Model.process(Model.java:282) at org.thymeleaf.engine.Model.process(Model.java:290) at org.thymeleaf.engine.GatheringModelProcessable.process(GatheringModelProcessable.java:78)   ---  **Affects:** 5.1.2","closed","status: invalid,","spring-projects-issues","2018-11-08T19:02:17Z","2019-01-12T05:17:49Z"
"","22140","Static resource are not accessible via HTTP POST method [SPR-17608]","**[Govinda Sakhare](https://jira.spring.io/secure/ViewProfile.jspa?name=govi20)** opened **[SPR-17608](https://jira.spring.io/browse/SPR-17608?redirect=false)** and commented  I tried to access resource lying under static resource folder but as it seems static resource access via POST is not supported in spring.  I have already raised an issue in Spring boot project: https://github.com/spring-projects/spring-boot/issues/15485   ---  **Reference URL:** https://stackoverflow.com/questions/36476638/spring-boot-allowing-post-access-to-static-content","closed","type: enhancement,","spring-projects-issues","2018-12-18T17:36:50Z","2018-12-18T20:29:59Z"
"","21982","Improve output from logging the map of request mappings [SPR-17450]","**[Gleb Tlaloc](https://jira.spring.io/secure/ViewProfile.jspa?name=tlaloc)** opened **[SPR-17450](https://jira.spring.io/browse/SPR-17450?redirect=false)** and commented  MVC mappings was automatically logged in previous releases of Spring MVC. This was removed in June 2018 for v5.1.0, see the [commit](https://github.com/spring-projects/spring-framework/commit/28a5c3009ea0c31f879c0bb8b9e6cfd33faa81e5#diff-b91ebdcf6fba7c4886849e8144a7e687). The change was titled as ""Logging improvements for WebFlux"". But frankly, I don't see any improvement in removing a valuable log command without any appropriate replacement.  This was removed from `o.s.w.s.h.AbstractHandlerMethodMapping.MappingRegistry.register(...)`:  ```java if (logger.isInfoEnabled()) {     logger.info(""Mapped \"""" + mapping + ""\"" onto "" + handlerMethod);				} ```  Even with log level TRACE, this information is no longer logged by any Spring component. During development this logs are a very good (and fast) information source to self-review the final configuration of HTTP mappings.  I couldn't find any documentation that explains this change.  Could you please do a review to assess if this change is intended? And if it is intended can you please publish some kind of documentation to explain what to do/use instead? Or, can you please consider to reenable this log again (at least on DEBUG level)?   ---  **Affects:** 5.1.2  **Reference URL:** https://github.com/spring-projects/spring-framework/commit/28a5c3009ea0c31f879c0bb8b9e6cfd33faa81e5#diff-b91ebdcf6fba7c4886849e8144a7e687  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/c89e6c616ab2ff47f987eb8db6a3ad68b1ed3b4e","closed","type: enhancement,","spring-projects-issues","2018-10-31T13:09:49Z","2020-05-22T07:26:29Z"
"","22185","CVE-2018-1000873 via Jackson 2.8.11 in Spring 4 [SPR-17656]","**[GFriedrich](https://jira.spring.io/secure/ViewProfile.jspa?name=gfriedrich)** opened **[SPR-17656](https://jira.spring.io/browse/SPR-17656?redirect=false)** and commented  Hi,  I just got aware of the [CVE-2018-1000873](https://nvd.nist.gov/vuln/detail/CVE-2018-1000873). Unfortunately it affects all versions of Jackson < 2.9.8. As far as I can see, Spring 4 uses version 2.8.11 as optional dependency. So I guess it would be safe to update the version without breaking Spring. Is my assumption correct? If so: Are you planning to update the Jackson version for the Spring 4.x branch and create a release?  Thanks in advance for any info.   ---  **Affects:** 4.3.22","closed","status: invalid,","spring-projects-issues","2019-01-09T16:12:47Z","2019-01-11T15:22:51Z"
"","21918","Update Apache POI in Spring 4.3.x [SPR-17385]","**[GFriedrich](https://jira.spring.io/secure/ViewProfile.jspa?name=gfriedrich)** opened **[SPR-17385](https://jira.spring.io/browse/SPR-17385?redirect=false)** and commented  I just saw that Spring WebMVC in the 4.3.x branch has an optional dependency of Apache POI 3.14.  This version of Apache POI is vulnerable to CVE-2017-5644 and CVE-2017-12626  I'm wondering whether it would be possible to update to the latest Apache POI 3.x on this branch?  I know that Spring 4.3.x is in some kind of maintenance mode, but maybe it's an easy task. But you know for sure better than I do. :)  Thanks in advance.   ---  **Affects:** 4.3.20  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/bf9043c7375ea56bc963d33e8e67d9d6077a9838","closed","type: task,","spring-projects-issues","2018-10-15T16:44:45Z","2019-01-09T09:57:55Z"
"","21965","CssLinkResourceTransformer breaks absolute paths [SPR-17432]","**[Gareth Smith](https://jira.spring.io/secure/ViewProfile.jspa?name=garethdanielsmith)** opened **[SPR-17432](https://jira.spring.io/browse/SPR-17432?redirect=false)** and commented  Setup required to reproduce bug: * An application that is deployed at the webapp root - i.e. with an empty context path. * A css file being served by the application, via `CssLinkResourceTransformer`, within a non-top-level folder, e.g. `/some/path/to/styles.css` * An absolute url within that css file, e.g. `/images/icon.png`  In this case, `CssLinkResourceTransformer` breaks the absolute path to the icon by turning it into `/some/path/to/images/icon.png` - i.e. the absolute path inside the the CSS file is intepreted as being a path that is relative to the CSS file itself.  This seems like a bug to me. I have attached a test case: [^csslinkresourcetransformertest.zip]   ---  **Affects:** 5.0.6  **Attachments:** - [csslinkresourcetransformertest.zip](https://jira.spring.io/secure/attachment/26073/csslinkresourcetransformertest.zip) (_19.88 kB_)  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/2146e137873f51cddcff9b1d01bd6c229778098c, https://github.com/spring-projects/spring-framework/commit/3b7c0fc1a180db015020c19ec460ec621c5c3774  **Backported to:** [5.0.11](https://github.com/spring-projects/spring-framework/milestone/192?closed=1)","closed","type: bug,","spring-projects-issues","2018-10-25T10:14:59Z","2018-10-29T11:07:58Z"
"","22148","WebClient should provide CookieStore support [SPR-17616]","**[GanMing](https://jira.spring.io/secure/ViewProfile.jspa?name=xyuu)** opened **[SPR-17616](https://jira.spring.io/browse/SPR-17616?redirect=false)** and commented  I encountered a problem with cookie management when I migrated the StatefullRestTemplate to WebClient.  [StatefullRestTemplate](https://github.com/folkengine/StatefulRestClient/blob/master/src/main/java/com/electronicpanopticon/spring/web/rest/StatefullRestTemplate.java)  I expect to be able to provide a method compatible with the implementation of java.net.CookieStore, I found the following information.  [CookieStoreImpl](https://github.com/vert-x3/vertx-web/blob/master/vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/CookieStoreImpl.java)  Or Reactor Netty's HttpClient can provide features like CookieStore.   ---  **Affects:** 5.1.3","closed","type: enhancement,","spring-projects-issues","2018-12-21T03:49:03Z","2019-01-28T09:53:51Z"
"","21979","Add Path to @Controller [SPR-17447]","**[GabrielBB](https://jira.spring.io/secure/ViewProfile.jspa?name=gabrielbb)** opened **[SPR-17447](https://jira.spring.io/browse/SPR-17447?redirect=false)** and commented  Instead of:  `@RestController`  `@RequestMapping(""/api/"")`  It would be cleaner to do this:  `@RestController(""/api/"")`  ---  **Reference URL:** https://github.com/spring-projects/spring-boot/issues/15021  **Issue Links:** - #21585 Add ability to specify request mapping within `@RestController` (_**""duplicates""**_)  1 votes, 1 watchers","closed","type: enhancement,","spring-projects-issues","2018-10-30T18:05:05Z","2019-01-12T20:12:10Z"
"","22055","ReactorNettyTcpClient constructor with callback to initialize TcpClient [SPR-17523]","**[Gabriel Dogaru](https://jira.spring.io/secure/ViewProfile.jspa?name=gdogaru)** opened **[SPR-17523](https://jira.spring.io/browse/SPR-17523?redirect=false)** and commented  This is the same issue as #17057  The solution there does not apply anymore because that constructor was removed in this commit https://github.com/spring-projects/spring-framework/commit/ffbc75ae47936c8668c55332e5b70142279f64ac#diff-11144739384955df1f8f38cbcde8d95b     ---  **Affects:** 5.1.2  **Reference URL:** #17057  **Issue Links:** - #20933 Upgrade to Reactor Netty 0.8 - #17057 Spring Websockets Broker relay supporting a cluster of STOMP endpoint addresses  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/24848ec1bcec59d3fc93ddd77a084b637266db93","closed","type: enhancement,","spring-projects-issues","2018-11-20T20:08:23Z","2020-11-06T02:05:27Z"
"","21901","Null response status in WebFilter after controller method [SPR-17368]","**[Florian Beaufumé](https://jira.spring.io/secure/ViewProfile.jspa?name=fbeaufume)** opened **[SPR-17368](https://jira.spring.io/browse/SPR-17368?redirect=false)** and commented  I developed a simple org.springframework.web.server.WebFilter, in a reactive application based on Spring Boot 2.0.5, to log the HTTP response status (and other data not relevant here).  The filter method is basically:  ```java return chain.filter(exchange).doAfterTerminate(  () -> System.out.println(""Status="" + exchange.getResponse().getStatusCode())); ```  For many REST controller methods the logged **status is null**.  From my StackOverflow post https://stackoverflow.com/questions/52668050/spring-webflux-statuscode-is-null-in-a-webfilter I discovered that +the status is null when the return type of the REST controller does **not** use ResponseEntity+, e.g.: void, Mono\, String, Mono\, MyBean, Mono\, etc.  +The status is correctly 200 when the return type uses ResponseEntity+: ReponseEntity\, Mono>, ReponseEntity\, Mono>, ReponseEntity\, Mono>, etc.  I wrote a MWE, see https://github.com/fbeaufume/webflux-filter-sample  Looks like a bug to me. Is it? Any hope for a fix?  Regards, Florian   ---  **Affects:** 5.0.9  **Reference URL:** https://stackoverflow.com/questions/52668050/spring-webflux-statuscode-is-null-in-a-webfilter  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/75b1396768079f4044db0fef70dd5f889c1c8931","closed","type: enhancement,","spring-projects-issues","2018-10-11T12:12:31Z","2019-01-11T13:13:17Z"
"","22096","WebClient logs ""Only one connection receive subscriber allowed"" when response status is an error [SPR-17564]","**[Fethullah Misir](https://jira.spring.io/secure/ViewProfile.jspa?name=fethullah%20misir)** opened **[SPR-17564](https://jira.spring.io/browse/SPR-17564?redirect=false)** and commented  WebClient throws an IllegalStateException with:  ```java Only one connection receive subscriber allowed ```   when the server response status is 4xx / 5xx.  The issue is not reproducible with Spring Boot 2.1.0.RELEASE / WebFlux 5.1.2.RELEASE.      I  reproduced the issue with the test below:  ```java @Test public void testRetrieveDoesThrowMultipleSubscriberError() {    stubFor( get( urlEqualTo( ""/notFound"" ) )          .willReturn( aResponse().withHeader( HttpHeaders.CONTENT_TYPE, MediaType.APPLICATION_JSON_VALUE )                                  .withBody( ""{}"" )                                  .withStatus( HttpStatus.NOT_FOUND_404 ) ) );     StepVerifier.create( webClient.get()                                  .uri( ""/notFound"" )                                  .accept( MediaType.APPLICATION_JSON )                                  .retrieve()                                   .bodyToMono( String.class ) )                .expectError( WebClientException.class )                .verify(); }   ```  The test pasess, however the below stack trace is logged:   ```java Caused by: java.lang.IllegalStateException: Only one connection receive subscriber allowed.         ... 143 common frames omitted         Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: Assembly trace from producer [reactor.core.publisher.FluxMap] :         reactor.core.publisher.Flux.map(Flux.java:5655)         reactor.netty.ByteBufFlux.fromInbound(ByteBufFlux.java:70)         reactor.netty.channel.ChannelOperations.receive(ChannelOperations.java:225)         org.springframework.http.client.reactive.ReactorClientHttpResponse.getBody(ReactorClientHttpResponse.java:64)         org.springframework.web.reactive.function.BodyExtractors.consumeAndCancel(BodyExtractors.java:268)         org.springframework.web.reactive.function.BodyExtractors.lambda$skipBodyAsMono$21(BodyExtractors.java:264) ..... .....         io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:500)         io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:462)         io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:897) Error has been observed by the following operator(s):         |_      Flux.map ? reactor.netty.ByteBufFlux.fromInbound(ByteBufFlux.java:70)         |_      Flux.doOnSubscribe ? org.springframework.http.client.reactive.ReactorClientHttpResponse.getBody(ReactorClientHttpResponse.java:65)   ```     I attached a sample, to reproduce the issue.  It seams that the issue is related to the default status handler. When registering a custom one, the stacktrace is not logged and it works as expected.  ```java StepVerifier.create( webClient.get()                               .uri( ""/notFound"" )                               .accept( MediaType.APPLICATION_JSON )                               .retrieve()                               .onStatus( status -> true, response -> Mono.error(IllegalStateException::new ) )                               .bodyToMono( String.class ) )             .expectError( IllegalStateException.class )             .verify();  ```              ---  **Affects:** 5.1.3  **Attachments:** - [webclient-multi-subscriber.zip](https://jira.spring.io/secure/attachment/26136/webclient-multi-subscriber.zip) (_3.42 kB_)  **Issue Links:** - #22147 WebClient .retrieve() + bodyToMono() causes ""Only one connection receive subscriber allowed"" on 4xx and 5xx (_**""is duplicated by""**_) - #22108 WebClient throws ""Only one connection receive subscriber allowed."" when response generates a WebClientResponseException (_**""is duplicated by""**_) - #22005 The onstatus method of webclient causes a memory leak.  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/7a5f8e03bc53ad78f76be82ecdd5fc8b8e86797a","closed","type: bug,","spring-projects-issues","2018-12-04T12:50:02Z","2019-01-21T14:50:01Z"
"","21935","Support list in IN clause in NamedParameterJdbcTemplate.batchUpdate [SPR-17402]","**[Fedor Bobin](https://jira.spring.io/secure/ViewProfile.jspa?name=fuud)** opened **[SPR-17402](https://jira.spring.io/browse/SPR-17402?redirect=false)** and commented  It will be nice to allow do batch queries with list in IN clause. Now it is not supported because query is expanded but NamedParameterBatchUpdateUtils does not aware of it.  ---  **Issue Links:** - #22008 NamedParameterJdbcTemplate batchUpdate returns an array of size 1 when the batchArgs passed is an empty array  **Referenced from:** pull request https://github.com/spring-projects/spring-framework/pull/1997, and commits https://github.com/spring-projects/spring-framework/commit/a3d763d137f954e86378dc2fdce31f06a8cfc0e3  2 votes, 4 watchers","closed","type: enhancement,","spring-projects-issues","2018-10-18T08:30:17Z","2021-05-20T16:48:40Z"
"","22011","WebFluxController doesn't respect status code from ServerResponse [SPR-17479]","**[Fabian Pfaff](https://jira.spring.io/secure/ViewProfile.jspa?name=fap)** opened **[SPR-17479](https://jira.spring.io/browse/SPR-17479?redirect=false)** and commented  I have a failing test in an example repo here:  https://github.com/vogellacompany/codeexamples-javaweb/blob/301d885b52d1fc4fc562cec31ec224734ed810ae/com.vogella.spring.user/src/test/java/com/vogella/spring/user/controller/UserRestControllerTest.java#L47  I'm trying to respond with a 404 http status code if the Mono is empty:  https://github.com/vogellacompany/codeexamples-javaweb/blob/301d885b52d1fc4fc562cec31ec224734ed810ae/com.vogella.spring.user/src/main/java/com/vogella/spring/user/controller/UserRestController.java#L55  If I use the line below and throw an Exception marked with `@ResponseStatus` the test passes.  ---  **Affects:** 5.1.2  **Reference URL:** https://github.com/vogellacompany/codeexamples-javaweb/blob/301d885b52d1fc4fc562cec31ec224734ed810ae/com.vogella.spring.user/src/main/java/com/vogella/spring/user/controller/UserRestController.java#L55  **Issue Links:** - #20236 WebFlux and ServerResponse possible issue (_**""duplicates""**_)","closed","status: declined,","spring-projects-issues","2018-11-08T15:58:26Z","2019-01-14T04:25:56Z"
"","21991","MediaType.parseMediaTypes fails if the input contains a comma [SPR-17459]","**[Fabian Kürten](https://jira.spring.io/secure/ViewProfile.jspa?name=fkuerten)** opened **[SPR-17459](https://jira.spring.io/browse/SPR-17459?redirect=false)** and commented  For the class `org.springframework.http.MediaType`  Parsing a list of media types fails if a media type contains a comma "","". For example this fails with InvalidMediaTypeException:  ``` MediaType.parseMediaTypes(""foo/bar;param=\"",\""""); ```  While the comma is the separator for different media types in a header my understanding is that it is legal to use `tspecial` characters (like comma) inside a quoted string. However the implementation of `parseMediaTypes` tokenizes blindly by comma, ignoring quotes. The resulting parts are invalid media types (ends with an open quote) which leads to the exception.     ---  **Affects:** 5.0.4, 5.1.2  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/f4b05dc2e730ca667daf8861c6eb2d9a6b83d534, https://github.com/spring-projects/spring-framework/commit/7bbd4c681fd009898a62cac6e11eae77039a4119, https://github.com/spring-projects/spring-framework/commit/ba3fef3e8a55c56523deb0ba436fee6c74c4d60a","closed","type: enhancement,","spring-projects-issues","2018-11-02T10:00:31Z","2018-11-27T10:00:05Z"
"","22154","@RequestMapping without @Controller registered as handler [SPR-17622]","**[Eugene Tenkaev](https://jira.spring.io/secure/ViewProfile.jspa?name=hronom)** opened **[SPR-17622](https://jira.spring.io/browse/SPR-17622?redirect=false)** and commented  Following this approach here http://projects.spring.io/spring-cloud/spring-cloud.html#spring-cloud-feign-inheritance  If you add root `@RequestMapping` to the `UserService` it will be registered as handler in Spring MVC application.  Example project to reproduce here https://github.com/Hronom/test-shared-mapping-interface  Related discussions: * https://github.com/spring-cloud/spring-cloud-netflix/issues/466 * https://stackoverflow.com/questions/29284911/can-a-spring-cloud-feign-client-share-interface-with-an-spring-web-controller  To handle this properly need to avoid registration of controller that has only `@RequestMapping` annotation.  Proposed solution: Register handler only if it has annotation `@Controller` or `@RestController`.  ---  **Affects:** 5.1.3  **Issue Links:** - #16747 Introduce proxy-based REST client similar to HttpInvokerProxyFactoryBean  1 votes, 3 watchers","closed","type: enhancement,","spring-projects-issues","2018-12-23T16:57:25Z","2021-12-14T07:11:12Z"
"","21908","HandlerInterceptorAdapter: unexpected behaviour for different methods on the same endpoint [SPR-17375]","**[Enrico Graziani](https://jira.spring.io/secure/ViewProfile.jspa?name=mrnerich84)** opened **[SPR-17375](https://jira.spring.io/browse/SPR-17375?redirect=false)** and commented  ## **Problem**  While testing how HandlerInterceptorAdapter works, we found out that by: - registering the interceptor for /some/** - having a controller with a registered method GET /some/thing  will cause the interceptor to be executed for: -  GET /some/thing - all [VERB] /some/**   _*APART*_ [VERB] /some/thing  e.g. so POST /some/thing will not pass through the above interceptor     IMO This sounds confusing. The +expected behaviour+ would be to either execute the interceptor for: * all available methods/endpoint for the registered interceptor   in this example, [VERB] /some/** requests * or, only the method/endpoint registered in the controllers   in this example,  GET /some/thing  # Background  We have a requirement to log every request and collect metrics in Splunk. We were thinking on registering a HandlerInterceptorAdapter for holding these behaviours.  # Code Snippets  Application is annotated with `@SpringBootApplication`  Controller is annotated with `@RestController`  springBootVersion = ""2.0.2.RELEASE""  ## **Application**  ```java @SpringBootApplication public class Application {      private static final Logger logger = LoggerFactory.getLogger(Application.class);      public static void main(String[] args) {         logger.info(""Starting Application"");         SpringApplication.run(Application.class, args);     } } ```  ## **WebConfig**  ```java @Configuration public class WebConfig implements WebMvcConfigurer {      @Autowired     private LoggerRequestInterceptor loggerRequestInterceptor;      @Override     public void addInterceptors(InterceptorRegistry registry) {         registry.addInterceptor(loggerRequestInterceptor)                 .addPathPatterns(""/some/**"");     } } ```  ## **LoggerRequestInterceptor**  ```java @Component public class LoggerRequestInterceptor extends HandlerInterceptorAdapter {     private static final Logger logger = LoggerFactory.getLogger(LoggerRequestInterceptor.class);      @Override     public boolean preHandle(             HttpServletRequest request,             HttpServletResponse response,             Object handler) {         logger.info(MessageFormat.format(                 ""{0} {1}"",                 request.getMethod(),                 request.getRequestURI()         ));         return true;     }  } ```  ## **Controller**  ```java @RestController @RequestMapping(""/some/"") public class HoldingController {      @GetMapping(path = {""/thing""}, produces={""application/json""})     public String getHoldingsMaterial() {         return ""hi"";     } } ```  ## **Behaviours**  GET /some/thing  ```java *.LoggerRequestInterceptor   : GET /some/thing ```  GET /some/notExisting  ```java *.LoggerRequestInterceptor   : GET /some/notExisting ```  POST /some/thing  ```java o.s.web.servlet.PageNotFound             : Request method 'POST' not supported ```    ---  **Affects:** 5.0.6","closed","status: declined,","spring-projects-issues","2018-10-12T15:03:43Z","2019-01-12T16:20:46Z"
"","21939","Incorrect datetime format in Javadoc [SPR-17406]","**[Em](https://jira.spring.io/secure/ViewProfile.jspa?name=empeer42)** opened **[SPR-17406](https://jira.spring.io/browse/SPR-17406?redirect=false)** and commented  This is a javadoc for  org.springframework.format.annotation.DataTimeFormat  /** * The most common ISO DateTime Format {`@code` yyyy-MM-dd'T'HH:mm:ss.SSSZ}, * e.g. ""2000-10-31T01:30:00.000-05:00"". *   \This is the default if no annotation value is specified.  */ DATE_TIME,    Actually the ISO8601 format for datetime is: ""yyyy-MM-dd'T'HH:mm:ss.SSSXXX""  whereas the format ""yyyy-MM-dd'T'HH:mm:ss.SSSZ"" is  RFC 822 format.     However you correctly initialize formatter in  org.springframework.format.annotation.DataFormatter.ISO_PATTERNS. formats.put(ISO.DATE_TIME, ""yyyy-MM-dd'T'HH:mm:ss.SSSXXX"");    The resolution:  -use in Javadoc the pattern ""yyyy-MM-dd'T'HH:mm:ss.SSSXXX""  instead of ""yyyy-MM-dd'T'HH:mm:ss.SSSZ""    Thanks    ---  **Affects:** 5.0.7  **Issue Links:** - #21899 DateTimeFormat Javadoc is not correct (_**""duplicates""**_)","closed","in: core,","spring-projects-issues","2018-10-18T14:22:24Z","2019-01-12T16:44:18Z"
"","22037","SimpleNamingContextBuilder: Second builder does not change JNDI context after first has been deactivated [SPR-17505]","**[Eelco de Lang](https://jira.spring.io/secure/ViewProfile.jspa?name=armhart)** opened **[SPR-17505](https://jira.spring.io/browse/SPR-17505?redirect=false)** and commented  When creating the SimpleNamingContextBuilder for a second time, it doesn't work well. Different testcases can cause eachother to fail. The second will be missing it's JDNI settings. This is caused by the fact that the first SimpleNamingContextBuilder is still connected to the NamingManager.  ```java @Test public void testSimpleNamingContextBuilder() 	throws NamingException, MalformedURLException, IllegalStateException { 	SimpleNamingContextBuilder builder = SimpleNamingContextBuilder.emptyActivatedContextBuilder(); 	builder.bind(""url/testname"", ""WillNotBeCleared""); 	builder.deactivate();  	SimpleNamingContextBuilder builder2 = SimpleNamingContextBuilder.emptyActivatedContextBuilder(); 	builder2.clear(); 	builder2.bind(""url/testname"", ""ThisIsNotSet"");  	InitialContext initialContext2 = new InitialContext(); 	assertEquals(""WillNotBeCleared"", initialContext2.lookup(""url/testname"")); } ```    ---  **Affects:** 4.3.14, 5.1.2","open","in: core,","spring-projects-issues","2018-11-16T10:04:20Z","2019-01-11T13:34:08Z"
"","22104","META-INF/spring.components files created by spring-context-indexer are not being used [SPR-17572]","**[edavedian](https://jira.spring.io/secure/ViewProfile.jspa?name=edavedian)** opened **[SPR-17572](https://jira.spring.io/browse/SPR-17572?redirect=false)** and commented  Hello, we have a spring 5 based web application (not boot) comprised of several maven modules deployed in Tomcat 8 as a WAR file.  I came across the spring context indexer here https://docs.spring.io/spring/docs/current/spring-framework-reference/core.html#beans-scanning-index.  I followed the instructions and updated the pom files to add the dependency and after the build I can see that each of the generated jars contains META-INF/spring.components file which contain the beans that have `@Component` annotation on them.  But during application startup, I don't see the spring.components files being used.  To make sure this was the case, I commented out all _component_-_scan_ in spring XML files and the startup generates bean not found exceptions.  Is this supposed to work as described or there is more configuration that needs to be added?   ---  **Affects:** 5.0.7  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/54f5b7d0ee63366ef7e1401c3bfedee84bccdce2","closed","status: invalid,","spring-projects-issues","2018-12-06T03:04:42Z","2019-01-12T05:17:34Z"
"","22117","How to debug in webflux? [SPR-17585]","**[eacdy](https://jira.spring.io/secure/ViewProfile.jspa?name=eacdy)** opened **[SPR-17585](https://jira.spring.io/browse/SPR-17585?redirect=false)** and commented  I use Spring Boot 2.1.1.RELEASE with  webflux.  Dependencies are like below:     ```java      org.springframework.boot     spring-boot-starter-webflux  ```     Here goes the Controller, **I use Hooks.onOperatorDebug(); as reactor's document says it Can open debug mode.**     ```java @RestController public class TestController {     @GetMapping(""/test"")     public Mono test(String a) {         Hooks.onOperatorDebug();         return Mono.just(""test1"")                 .map(t -> t + ""test2"")                 .zipWith(Mono.error(() -> new IllegalArgumentException(""error"")));     }      @PostMapping(""/test"")     public Mono post(@RequestBody Req req) {         return Mono.just(req);     } }  class Req {     private String a;     private String b;      public String getA() {         return a;     }      public void setA(String a) {         this.a = a;     }      public String getB() {         return b;     }      public void setB(String b) {         this.b = b;     } } ```     log level is below:     ```java logging:   level:     root: trace ```        When I call  , I Can only get logs like below:  ```java 2018-12-10 17:18:42.965 DEBUG 30489 --- [ctor-http-nio-2] r.n.http.server.HttpServerOperations     : [id: 0xb40b3015, L:/0:0:0:0:0:0:0:1:8080 - R:/0:0:0:0:0:0:0:1:50514] Increasing pending responses, now 12018-12-10 17:18:42.965 DEBUG 30489 --- [ctor-http-nio-2] r.n.http.server.HttpServerOperations     : [id: 0xb40b3015, L:/0:0:0:0:0:0:0:1:8080 - R:/0:0:0:0:0:0:0:1:50514] Increasing pending responses, now 12018-12-10 17:18:42.965 DEBUG 30489 --- [ctor-http-nio-2] reactor.netty.http.server.HttpServer     : [id: 0xb40b3015, L:/0:0:0:0:0:0:0:1:8080 - R:/0:0:0:0:0:0:0:1:50514] Handler is being applied: org.springframework.http.server.reactive.ReactorHttpHandlerAdapter@1075e83b2018-12-10 17:18:42.966 TRACE 30489 --- [ctor-http-nio-2] o.s.w.s.adapter.HttpWebHandlerAdapter    : [b40b3015] HTTP GET ""/test?a=b"", headers={masked}2018-12-10 17:18:42.966 TRACE 30489 --- [ctor-http-nio-2] o.s.b.f.s.DefaultListableBeanFactory     : Returning cached instance of singleton bean 'testController'2018-12-10 17:18:42.966 DEBUG 30489 --- [ctor-http-nio-2] s.w.r.r.m.a.RequestMappingHandlerMapping : [b40b3015] Mapped to public reactor.core.publisher.Mono com.itmuch.webfluxtest.TestController.test(java.lang.String)2018-12-10 17:18:42.967 DEBUG 30489 --- [ctor-http-nio-2] reactor.core.publisher.Hooks             : Enabling stacktrace debugging via onOperatorDebug2018-12-10 17:18:42.967 DEBUG 30489 --- [ctor-http-nio-2] reactor.core.publisher.Hooks             : Hooking onEachOperator: onOperatorDebug2018-12-10 17:18:42.968 DEBUG 30489 --- [ctor-http-nio-2] o.s.w.r.r.m.a.ResponseBodyResultHandler  : Using 'application/json;charset=UTF-8;q=0.8' given [text/html, application/xhtml+xml, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8] and supported [application/json;charset=UTF-8, application/*+json;charset=UTF-8, text/event-stream]2018-12-10 17:18:42.968 DEBUG 30489 --- [ctor-http-nio-2] o.s.w.r.r.m.a.ResponseBodyResultHandler  : [b40b3015] 0..1 [?]2018-12-10 17:18:42.974 TRACE 30489 --- [ctor-http-nio-2] o.s.w.r.function.server.RouterFunctions  : [b40b3015] Matched org.springframework.boot.autoconfigure.web.reactive.error.DefaultErrorWebExceptionHandler$$Lambda$520/760265546@76f0b1372018-12-10 17:18:42.974 TRACE 30489 --- [ctor-http-nio-2] o.s.c.e.PropertySourcesPropertyResolver  : Searching for key 'spring.template.provider.cache' in PropertySource 'server.ports'2018-12-10 17:18:42.974 TRACE 30489 --- [ctor-http-nio-2] o.s.c.e.PropertySourcesPropertyResolver  : Searching for key 'spring.template.provider.cache' in PropertySource 'configurationProperties'2018-12-10 17:18:42.974 TRACE 30489 --- [ctor-http-nio-2] o.s.c.e.PropertySourcesPropertyResolver  : Searching for key 'spring.template.provider.cache' in PropertySource 'systemProperties'2018-12-10 17:18:42.974 TRACE 30489 --- [ctor-http-nio-2] o.s.c.e.PropertySourcesPropertyResolver  : Searching for key 'spring.template.provider.cache' in PropertySource 'systemEnvironment'2018-12-10 17:18:42.974 TRACE 30489 --- [ctor-http-nio-2] o.s.c.e.PropertySourcesPropertyResolver  : Searching for key 'spring.template.provider.cache' in PropertySource 'random'2018-12-10 17:18:42.975 TRACE 30489 --- [ctor-http-nio-2] o.s.c.e.PropertySourcesPropertyResolver  : Searching for key 'spring.template.provider.cache' in PropertySource 'applicationConfig: [classpath:/application.yml]'2018-12-10 17:18:42.975 TRACE 30489 --- [ctor-http-nio-2] o.s.c.e.PropertySourcesPropertyResolver  : Could not find key 'spring.template.provider.cache' in any property source2018-12-10 17:18:42.975 TRACE 30489 --- [ctor-http-nio-2] o.s.c.e.PropertySourcesPropertyResolver  : Searching for key 'spring.template.provider.cache' in PropertySource 'server.ports'2018-12-10 17:18:42.975 TRACE 30489 --- [ctor-http-nio-2] o.s.c.e.PropertySourcesPropertyResolver  : Searching for key 'spring.template.provider.cache' in PropertySource 'configurationProperties'2018-12-10 17:18:42.975 TRACE 30489 --- [ctor-http-nio-2] o.s.c.e.PropertySourcesPropertyResolver  : Searching for key 'spring.template.provider.cache' in PropertySource 'systemProperties'2018-12-10 17:18:42.975 TRACE 30489 --- [ctor-http-nio-2] o.s.c.e.PropertySourcesPropertyResolver  : Searching for key 'spring.template.provider.cache' in PropertySource 'systemEnvironment'2018-12-10 17:18:42.975 TRACE 30489 --- [ctor-http-nio-2] o.s.c.e.PropertySourcesPropertyResolver  : Searching for key 'spring.template.provider.cache' in PropertySource 'random'2018-12-10 17:18:42.975 TRACE 30489 --- [ctor-http-nio-2] o.s.c.e.PropertySourcesPropertyResolver  : Searching for key 'spring.template.provider.cache' in PropertySource 'applicationConfig: [classpath:/application.yml]'2018-12-10 17:18:42.975 TRACE 30489 --- [ctor-http-nio-2] o.s.c.e.PropertySourcesPropertyResolver  : Could not find key 'spring.template.provider.cache' in any property source2018-12-10 17:18:42.975 TRACE 30489 --- [ctor-http-nio-2] o.s.c.e.PropertySourcesPropertyResolver  : Searching for key 'spring.template.provider.cache' in PropertySource 'server.ports'2018-12-10 17:18:42.975 TRACE 30489 --- [ctor-http-nio-2] o.s.c.e.PropertySourcesPropertyResolver  : Searching for key 'spring.template.provider.cache' in PropertySource 'configurationProperties'2018-12-10 17:18:42.975 TRACE 30489 --- [ctor-http-nio-2] o.s.c.e.PropertySourcesPropertyResolver  : Searching for key 'spring.template.provider.cache' in PropertySource 'systemProperties'2018-12-10 17:18:42.975 TRACE 30489 --- [ctor-http-nio-2] o.s.c.e.PropertySourcesPropertyResolver  : Searching for key 'spring.template.provider.cache' in PropertySource 'systemEnvironment'2018-12-10 17:18:42.975 TRACE 30489 --- [ctor-http-nio-2] o.s.c.e.PropertySourcesPropertyResolver  : Searching for key 'spring.template.provider.cache' in PropertySource 'random'2018-12-10 17:18:42.975 TRACE 30489 --- [ctor-http-nio-2] o.s.c.e.PropertySourcesPropertyResolver  : Searching for key 'spring.template.provider.cache' in PropertySource 'applicationConfig: [classpath:/application.yml]'2018-12-10 17:18:42.975 TRACE 30489 --- [ctor-http-nio-2] o.s.c.e.PropertySourcesPropertyResolver  : Could not find key 'spring.template.provider.cache' in any property source2018-12-10 17:18:42.976 DEBUG 30489 --- [ctor-http-nio-2] .a.w.r.e.DefaultErrorWebExceptionHandler : [b40b3015] Resolved [IllegalArgumentException: error] for HTTP GET /test2018-12-10 17:18:42.976 TRACE 30489 --- [ctor-http-nio-2] o.s.core.codec.CharSequenceEncoder       : [b40b3015] Writing ""Whitelabel Error PageThis application has no configured error view, so you are seeing this as a fallback.Mon Dec 10 17:18:42 CST 2018There was an unexpected error (type=Internal Server Error, status=500).error""2018-12-10 17:18:42.977 DEBUG 30489 --- [ctor-http-nio-2] r.n.channel.ChannelOperationsHandler     : [id: 0xb40b3015, L:/0:0:0:0:0:0:0:1:8080 - R:/0:0:0:0:0:0:0:1:50514] Writing object DefaultHttpResponse(decodeResult: success, version: HTTP/1.1)HTTP/1.1 500 Internal Server ErrorContent-Type: text/htmlContent-Length: 2972018-12-10 17:18:42.977 DEBUG 30489 --- [ctor-http-nio-2] r.n.channel.ChannelOperationsHandler     : [id: 0xb40b3015, L:/0:0:0:0:0:0:0:1:8080 - R:/0:0:0:0:0:0:0:1:50514] Writing object 2018-12-10 17:18:42.977 TRACE 30489 --- [ctor-http-nio-2] r.n.channel.ChannelOperationsHandler     : [id: 0xb40b3015, L:/0:0:0:0:0:0:0:1:8080 - R:/0:0:0:0:0:0:0:1:50514] Pending write size = 2972018-12-10 17:18:42.978 TRACE 30489 --- [ctor-http-nio-2] o.s.w.s.adapter.HttpWebHandlerAdapter    : [b40b3015] Completed 500 INTERNAL_SERVER_ERROR, headers={masked}2018-12-10 17:18:42.978 TRACE 30489 --- [ctor-http-nio-2] o.s.h.s.r.ReactorHttpHandlerAdapter      : [b40b3015] Handling completed2018-12-10 17:18:42.978 DEBUG 30489 --- [ctor-http-nio-2] r.n.http.server.HttpServerOperations     : [id: 0xb40b3015, L:/0:0:0:0:0:0:0:1:8080 - R:/0:0:0:0:0:0:0:1:50514] Last HTTP response frame2018-12-10 17:18:42.978 DEBUG 30489 --- [ctor-http-nio-2] r.n.channel.ChannelOperationsHandler     : [id: 0xb40b3015, L:/0:0:0:0:0:0:0:1:8080 - R:/0:0:0:0:0:0:0:1:50514] Writing object EmptyLastHttpContent2018-12-10 17:18:42.978 DEBUG 30489 --- [ctor-http-nio-2] r.n.http.server.HttpServerOperations     : [id: 0xb40b3015, L:/0:0:0:0:0:0:0:1:8080 - R:/0:0:0:0:0:0:0:1:50514] Decreasing pending responses, now 02018-12-10 17:18:42.979 TRACE 30489 --- [ctor-http-nio-2] reactor.netty.channel.ChannelOperations  : [id: 0xb40b3015, L:/0:0:0:0:0:0:0:1:8080 - R:/0:0:0:0:0:0:0:1:50514] Disposing ChannelOperation from a channel java.lang.Exception: ChannelOperation terminal stack at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:363) [reactor-netty-0.8.3.RELEASE.jar:0.8.3.RELEASE] at reactor.netty.http.server.HttpServerOperations.cleanHandlerTerminate(HttpServerOperations.java:509) [reactor-netty-0.8.3.RELEASE.jar:0.8.3.RELEASE] at reactor.netty.http.server.HttpTrafficHandler.operationComplete(HttpTrafficHandler.java:297) [reactor-netty-0.8.3.RELEASE.jar:0.8.3.RELEASE] at reactor.netty.http.server.HttpTrafficHandler.operationComplete(HttpTrafficHandler.java:54) [reactor-netty-0.8.3.RELEASE.jar:0.8.3.RELEASE] at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:511) [netty-common-4.1.31.Final.jar:4.1.31.Final] at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:485) [netty-common-4.1.31.Final.jar:4.1.31.Final] at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:424) [netty-common-4.1.31.Final.jar:4.1.31.Final] at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:103) [netty-common-4.1.31.Final.jar:4.1.31.Final] at io.netty.util.internal.PromiseNotificationUtil.trySuccess(PromiseNotificationUtil.java:48) [netty-common-4.1.31.Final.jar:4.1.31.Final] at io.netty.channel.ChannelOutboundBuffer.safeSuccess(ChannelOutboundBuffer.java:696) [netty-transport-4.1.31.Final.jar:4.1.31.Final] at io.netty.channel.ChannelOutboundBuffer.remove(ChannelOutboundBuffer.java:258) [netty-transport-4.1.31.Final.jar:4.1.31.Final] at io.netty.channel.nio.AbstractNioByteChannel.doWriteInternal(AbstractNioByteChannel.java:216) [netty-transport-4.1.31.Final.jar:4.1.31.Final] at io.netty.channel.nio.AbstractNioByteChannel.doWrite0(AbstractNioByteChannel.java:209) [netty-transport-4.1.31.Final.jar:4.1.31.Final] at io.netty.channel.socket.nio.NioSocketChannel.doWrite(NioSocketChannel.java:397) [netty-transport-4.1.31.Final.jar:4.1.31.Final] at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:934) [netty-transport-4.1.31.Final.jar:4.1.31.Final] at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360) [netty-transport-4.1.31.Final.jar:4.1.31.Final] at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901) [netty-transport-4.1.31.Final.jar:4.1.31.Final] at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1396) [netty-transport-4.1.31.Final.jar:4.1.31.Final] at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776) [netty-transport-4.1.31.Final.jar:4.1.31.Final] at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768) [netty-transport-4.1.31.Final.jar:4.1.31.Final] at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749) [netty-transport-4.1.31.Final.jar:4.1.31.Final] at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.flush(CombinedChannelDuplexHandler.java:533) [netty-transport-4.1.31.Final.jar:4.1.31.Final] at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115) [netty-transport-4.1.31.Final.jar:4.1.31.Final] at io.netty.channel.CombinedChannelDuplexHandler.flush(CombinedChannelDuplexHandler.java:358) [netty-transport-4.1.31.Final.jar:4.1.31.Final] at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776) [netty-transport-4.1.31.Final.jar:4.1.31.Final] at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768) [netty-transport-4.1.31.Final.jar:4.1.31.Final] at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749) [netty-transport-4.1.31.Final.jar:4.1.31.Final] at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117) [netty-transport-4.1.31.Final.jar:4.1.31.Final] at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776) [netty-transport-4.1.31.Final.jar:4.1.31.Final] at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768) [netty-transport-4.1.31.Final.jar:4.1.31.Final] at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749) [netty-transport-4.1.31.Final.jar:4.1.31.Final] at reactor.netty.channel.ChannelOperationsHandler.doWrite(ChannelOperationsHandler.java:283) [reactor-netty-0.8.3.RELEASE.jar:0.8.3.RELEASE] at reactor.netty.channel.ChannelOperationsHandler.drain(ChannelOperationsHandler.java:465) [reactor-netty-0.8.3.RELEASE.jar:0.8.3.RELEASE] at reactor.netty.channel.ChannelOperationsHandler.flush(ChannelOperationsHandler.java:194) [reactor-netty-0.8.3.RELEASE.jar:0.8.3.RELEASE] at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776) [netty-transport-4.1.31.Final.jar:4.1.31.Final] at io.netty.channel.AbstractChannelHandlerContext.invokeWriteAndFlush(AbstractChannelHandlerContext.java:802) [netty-transport-4.1.31.Final.jar:4.1.31.Final] at io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:814) [netty-transport-4.1.31.Final.jar:4.1.31.Final] at io.netty.channel.AbstractChannelHandlerContext.writeAndFlush(AbstractChannelHandlerContext.java:794) [netty-transport-4.1.31.Final.jar:4.1.31.Final] at io.netty.channel.AbstractChannelHandlerContext.writeAndFlush(AbstractChannelHandlerContext.java:837) [netty-transport-4.1.31.Final.jar:4.1.31.Final] at io.netty.channel.DefaultChannelPipeline.writeAndFlush(DefaultChannelPipeline.java:1071) [netty-transport-4.1.31.Final.jar:4.1.31.Final] at io.netty.channel.AbstractChannel.writeAndFlush(AbstractChannel.java:300) [netty-transport-4.1.31.Final.jar:4.1.31.Final] at reactor.netty.http.server.HttpServerOperations.onOutboundComplete(HttpServerOperations.java:487) [reactor-netty-0.8.3.RELEASE.jar:0.8.3.RELEASE] at reactor.netty.channel.ChannelOperations.onComplete(ChannelOperations.java:191) [reactor-netty-0.8.3.RELEASE.jar:0.8.3.RELEASE] at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:383) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:321) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:383) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] at reactor.core.publisher.FluxPeekFuseable$PeekFuseableConditionalSubscriber.onComplete(FluxPeekFuseable.java:578) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:383) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] at reactor.core.publisher.Operators$MonoSubscriber.onComplete(Operators.java:1516) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] at reactor.core.publisher.MonoIgnoreThen$ThenAcceptInner.onComplete(MonoIgnoreThen.java:314) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:383) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] at reactor.core.publisher.Operators.complete(Operators.java:131) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:45) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:153) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] at reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:70) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:71) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] at reactor.core.publisher.MonoPeekTerminal.subscribe(MonoPeekTerminal.java:61) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] at reactor.core.publisher.MonoOnAssembly.subscribe(MonoOnAssembly.java:76) [reactor-core-3.2.3.RELEASE.jar:3.2.3.RELEASE] at reactor.netty.http.server.HttpServerHandle.onStateChange(HttpServerHandle.java:64) [reactor-netty-0.8.3.RELEASE.jar:0.8.3.RELEASE] at reactor.netty.tcp.TcpServerBind$ChildObserver.onStateChange(TcpServerBind.java:226) [reactor-netty-0.8.3.RELEASE.jar:0.8.3.RELEASE] at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:434) [reactor-netty-0.8.3.RELEASE.jar:0.8.3.RELEASE] at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:141) [reactor-netty-0.8.3.RELEASE.jar:0.8.3.RELEASE] at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) [netty-transport-4.1.31.Final.jar:4.1.31.Final] at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) [netty-transport-4.1.31.Final.jar:4.1.31.Final] at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) [netty-transport-4.1.31.Final.jar:4.1.31.Final] at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:159) [reactor-netty-0.8.3.RELEASE.jar:0.8.3.RELEASE] at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) [netty-transport-4.1.31.Final.jar:4.1.31.Final] at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) [netty-transport-4.1.31.Final.jar:4.1.31.Final] at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) [netty-transport-4.1.31.Final.jar:4.1.31.Final] at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438) [netty-transport-4.1.31.Final.jar:4.1.31.Final] at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:323) [netty-codec-4.1.31.Final.jar:4.1.31.Final] at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:297) [netty-codec-4.1.31.Final.jar:4.1.31.Final] at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253) [netty-transport-4.1.31.Final.jar:4.1.31.Final] at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) [netty-transport-4.1.31.Final.jar:4.1.31.Final] at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) [netty-transport-4.1.31.Final.jar:4.1.31.Final] at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) [netty-transport-4.1.31.Final.jar:4.1.31.Final] at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1434) [netty-transport-4.1.31.Final.jar:4.1.31.Final] at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) [netty-transport-4.1.31.Final.jar:4.1.31.Final] at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) [netty-transport-4.1.31.Final.jar:4.1.31.Final] at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:965) [netty-transport-4.1.31.Final.jar:4.1.31.Final] at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) [netty-transport-4.1.31.Final.jar:4.1.31.Final] at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:648) [netty-transport-4.1.31.Final.jar:4.1.31.Final] at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:583) [netty-transport-4.1.31.Final.jar:4.1.31.Final] at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:500) [netty-transport-4.1.31.Final.jar:4.1.31.Final] at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:462) [netty-transport-4.1.31.Final.jar:4.1.31.Final] at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:897) [netty-common-4.1.31.Final.jar:4.1.31.Final] at java.lang.Thread.run(Thread.java:748) [na:1.8.0_192] 2018-12-10 17:18:42.980 DEBUG 30489 --- [ctor-http-nio-2] r.n.channel.ChannelOperationsHandler     : [id: 0xb40b3015, L:/0:0:0:0:0:0:0:1:8080 - R:/0:0:0:0:0:0:0:1:50514] No ChannelOperation attached. Dropping: EmptyLastHttpContent ```  **The reactor's debug mode is not been actived.**  **So I wonder How to debug in spring webflux?Or is there anyway help us find errors in our code quickly?**         ---  **Affects:** 5.1.3","closed","status: invalid,","spring-projects-issues","2018-12-10T09:20:43Z","2019-01-12T05:17:31Z"
"","21903","Setting expires header to blank is not valid [SPR-17370]","**[Dwayne D'Souza](https://jira.spring.io/secure/ViewProfile.jspa?name=dgdsouza)** opened **[SPR-17370](https://jira.spring.io/browse/SPR-17370?redirect=false)** and commented  `    ``@Override` `    ``public` `void` `addResourceHandlers(ResourceHandlerRegistry registry) {` `        ``registry.addResourceHandler(``""/js/**""``) ` `                ``.addResourceLocations(``""/js/""``) ` `                ``.setCacheControl(CacheControl.maxAge(``365``, TimeUnit.DAYS));` `    ``}` {{}} If the resource already has an expires header Spring sets the expires header to an empty string. This is not valid and causes the resource to be uncacheable.    https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.21   “HTTP/1.1 clients and caches MUST treat other invalid date formats, especially including the value ""0"", as in the past (i.e., ""already expired"").”     ---  **Affects:** 5.1 GA","closed","status: declined,","spring-projects-issues","2018-10-11T22:44:38Z","2019-01-12T16:20:47Z"
"","22030","State repository iterator doesn't find states for machineId==null [SPR-17498]","**[Dmytro Holubyev](https://jira.spring.io/secure/ViewProfile.jspa?name=hypnoise)** opened **[SPR-17498](https://jira.spring.io/browse/SPR-17498?redirect=false)** and commented  When using Oracle as a repository database, population of data fails due to invalid iterator condition. Line 83:  ```java for (RepositoryState s : stateRepository.findByMachineId(machineId == null ? """" : machineId)) { ```  \ == """" (as equivalent to \ == NULL) in Oracle always fails, thus returning empty result set. Operator ""IS NULL"" should be used instead.  Maven: org.springframework.statemachine:spring-statemachine-data-common:2.0.2.RELEASE   ---  **Attachments:** - [RepositoryStateMachineModelFactory.java](https://jira.spring.io/secure/attachment/26098/RepositoryStateMachineModelFactory.java) (_13.99 kB_)","closed","status: invalid,","spring-projects-issues","2018-11-15T09:47:02Z","2019-01-12T05:17:44Z"
"","22172","MockHttpServletRequestBuilder does not allow invalid content type for testing [SPR-17643]","**[dmitry87](https://jira.spring.io/secure/ViewProfile.jspa?name=dmitry87)** opened **[SPR-17643](https://jira.spring.io/browse/SPR-17643?redirect=false)** and commented     ```java Invalid mime type ""yaml"": does not contain '/' org.springframework.http.InvalidMediaTypeException: Invalid mime type ""yaml"": does not contain '/'  at org.springframework.http.MediaType.parseMediaType(MediaType.java:512)  at org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder.contentType(MockHttpServletRequestBuilder.java:277) ```  One of the app in stack sends invalid content type. Currently it is impossible to cover this in Unit test because `MockHttpServletRequestBuilder` uses MediaType.parse(contentType: String).toString() to get the value and it fails to get to ExceptionHandler  I propose that `MockHttpServletRequestBuilder` could accept any string for contentType. In this case when we send payload with invalid(unparsable) contentType to our controller we will handle InvalidMediaTypeException with our exception handler in Unit tests      ---  **Affects:** 5.1.3  **Referenced from:** pull request https://github.com/spring-projects/spring-framework/pull/2077","closed","status: superseded,","spring-projects-issues","2019-01-07T15:10:50Z","2019-12-13T15:04:37Z"
"","21898","spring Bean Overriding 2.1.x in nested class @Configuration @Bean creation fails with 'A bean with that name has already been defined' [SPR-17365]","**[Dirk Hoffmann](https://jira.spring.io/secure/ViewProfile.jspa?name=dhoffi)** opened **[SPR-17365](https://jira.spring.io/browse/SPR-17365?redirect=false)** and commented  upgrading to spring-boot 2.1.0.M4 Bean overriding has been disabled by default. If you are relying on overriding, you will need to set spring.main.allow-bean-definition-overriding to true.  But why is a Bean defined in an inner class also treated like a duplicate bean definition. Is this a bug? or has this some explanation?  e.g.:     ```java @Configuration public class BusinessLogicConfig {     @Configuration class BusinessLogicSourceConfig {         @Bean public BusinessLogic businessLogic() {             return new BusinessLogic(""source"");         }     } }   ```  works fine up to spring-boot 2.0.x  but when using e.g. spring-boot 2.1.0.M4 it gives me an error on startup:     ```java The bean 'businessLogic', defined in class path resource [com/example/di/bootconfigs/BusinessLogicConfig$BusinessLogicSourceConfig.class], could not be registered.  A bean with that name has already been defined in URL [jar:file:/.../di/build/libs/di-0.0.1-SNAPSHOT.jar!/BOOT-INF/classes!/com/example/di/businesslogic/BusinessLogic.class]  and overriding is disabled.    Action:    Consider renaming one of the beans or enabling overriding by setting spring.main.allow-bean-definition-overriding=true   ```  As I clearly only have a single definition of the bean (only defined in an inner `@Configuration` class) this seems like a bug to me.  **If you ask why I am using a nested inner `@Configuration` class:**  I often have demo code, demonstrating distributed system behavior in which I need more than one app to demonstrate things. As I don't want to have multiple App code, I just start the same App with different profiles and the profile is injecting ""different business logic"" which I want to ""keep together"" in one file, like:     ```java @Configuration public class BusinessLogicConfig {       @Value(""${app.info.instance_index}"")     private String instanceIndex;          @Profile({ ""source"" }) // unused fake BusinessLogic for pure sources     @Configuration     class BusinessLogicSourceConfig {         @Bean         public BusinessLogic businessLogic() {             return new BusinessLogic(""source"", instanceIndex);         }     }          @Profile({ ""sink"" }) // unused fake BusinessLogic for pure sinks     @Configuration     class BusinessLogicSinkConfig {         @Bean         public BusinessLogic businessLogic() {             return new BusinessLogic(""sink"", instanceIndex);         }     }    @Profile({ ""tier1"" })     @Configuration     class BusinessLogicTier1Config {         @Bean         public BusinessLogic businessLogic() {             return new BusinessLogic(""tier1"", instanceIndex);         }     }           @Profile({ ""tier2"" })     @Configuration     class BusinessLogicTier2Config {         @Bean         public BusinessLogic businessLogic() {             return new BusinessLogic(""tier2"", instanceIndex);         }     }           @Profile({ ""tier3"" })     @Configuration     class BusinessLogicTier3Config {         @Bean         public BusinessLogic businessLogic() {             return new BusinessLogic(""tier3"", instanceIndex);         }     }        }   ```  source code at: git@gitlab.com:hoffi_scratch/di.git      ---  **Affects:** 5.1 GA  **Reference URL:** https://gitlab.com/hoffi_scratch/di","open","in: core,","spring-projects-issues","2018-10-11T08:04:51Z","2019-01-11T13:13:25Z"
"","21989","Spring MVC: wrong HttpServletRequest::getServletPath and HttpServletRequest::getPathInfo with forwarding [SPR-17457]","**[DENIS ANISIMOV](https://jira.spring.io/secure/ViewProfile.jspa?name=danis)** opened **[SPR-17457](https://jira.spring.io/browse/SPR-17457?redirect=false)** and commented  I have a web application (Spring boot) which does forwarding.  Without forwarding **HttpServletRequest** class methods **getServletPath** and **getPathInfo** **for the URL ""http://localhost:8080/some_path"" gives:  - **getServletPath()** returns ** """"  - **getPathInfo()** returns ** ""/some_path"".     When I apply forwarding those methods return :     - **getServletPath()** returns ** ""/some_path""  - **getPathInfo()** returns **null**.     The source code is attached along with maven POM file.     There is a commented out block.  If you uncomment it then the methods start to return expected values. But the commented code introduces a hack with the dispatcher servlet which breaks other things in unpredictable and unexpected ways.     First of all: the behavior with the HttpServletRequest::getServletPath and HttpServletRequest::getPathInfo methods is totally unexpected at least. It's very confusing.  We have a logic which checks whether the servlet path has no a trailing slash and path info is null.  In this case it adds the trailing slash to the servlet path and redirects to this new location which totally breaks the application with the redirected URL.     Also it looks like a bug (though it's apparently done intentionally for some reasons):  why it works as expected when dispatcher servlet registration is modified ?  So it should work in this way also when it's not modified.   ---  **Affects:** 5.0.6  **Attachments:** - [MyServlet.java](https://jira.spring.io/secure/attachment/26079/MyServlet.java) (_1.32 kB_) - [MyServletInitializer.java](https://jira.spring.io/secure/attachment/26078/MyServletInitializer.java) (_2.96 kB_) - [pom.xml](https://jira.spring.io/secure/attachment/26080/pom.xml) (_1.88 kB_)  **Referenced from:** commits https://github.com/spring-projects/spring-framework-issues/commit/1ed6aff30844f4af8d0c3ade4c8febe3b3fc1d4f","closed","status: declined,","spring-projects-issues","2018-11-02T06:46:30Z","2019-01-12T16:20:40Z"
"","22146","SpEL, InlineMap with negative values are not cached  [SPR-17614]","**[Davide Pallaoro](https://jira.spring.io/secure/ViewProfile.jspa?name=davide.pallaoro)** opened **[SPR-17614](https://jira.spring.io/browse/SPR-17614?redirect=false)** and commented  Hi there,  I’ve seen that InlineMap class have a nice mechanism that, cache the value of the map if it is constant.  But if the map contains a negative number this caching mechanism is not working.     Take for example the following test  ```java package test;  import org.springframework.expression.Expression; import org.springframework.expression.ExpressionParser; import org.springframework.expression.spel.standard.SpelExpressionParser; import org.testng.Assert; import org.testng.annotations.Test;  public class MapCacheTest {      @Test     public void testMapCached() {         parseMap(""{1 : 2, 3 : 4}"");     }      @Test     public void testMapNOTCached() {         parseMap(""{-1 : 2, 3 : 4}"");     }      private void parseMap(String s) {         ExpressionParser parser = new SpelExpressionParser();         Expression expression = parser.parseExpression(s);         Object value = expression.getValue();         Assert.assertNotNull(value);     } } ```   If you run the previous code, (using org.springframework.spring-expression:5.1.3.RELEASE) and set a breakpoint in  ```java org.springframework.expression.spel.ast.InlineMap#getValueInternal ```  which code is the following..    ```java @Override public TypedValue getValueInternal(ExpressionState expressionState) throws EvaluationException {      if (this.constant != null) {           return this.constant;      }      else {           Map returnValue = new LinkedHashMap<>();           int childcount = getChildCount();           for (int c = 0; c < childcount; c++) { ```  You will notice that when executing **MapCacheTest.testMapCached()** this.constant is returned.  But when running **MapCacheTest.testMapNOTCached()** the code jump into the else statement and create a new map each time this method is called.     In a scenario with an high concurrency and with pretty big maps, this could decrease the performance of the app.     Let me know if everything is clear or you need some further details.  Many thanks and kind regards.     ---  **Affects:** 5.1.3  **Issue Links:** - #22137 SpEL, error parsing big InlineMap - #22157 Revisit restrictions in SpEL position handling","closed","status: superseded,","spring-projects-issues","2018-12-20T11:26:20Z","2021-11-25T21:56:32Z"
"","22137","SpEL, error parsing big InlineMap  [SPR-17605]","**[Davide Pallaoro](https://jira.spring.io/secure/ViewProfile.jspa?name=davide.pallaoro)** opened **[SPR-17605](https://jira.spring.io/browse/SPR-17605?redirect=false)** and commented  Hi,  In the project where I am working now, one of the components uses SpEL for parsing formulas stored in files.  Some of those formulas could be InlineMap, and I have encountered a problem when parsing pretty big maps (tens of thousands of elements).     Here you can find a short program that simulates the issue. If you, place the following files [^yes-works.spel] and [^not-works.spel] in /tmp/spel-test and run the following java class, using org.springframework:spring-expression 5.1.3-RELEASE  ```java package test;  import org.springframework.expression.Expression; import org.springframework.expression.spel.standard.SpelExpressionParser; import org.testng.annotations.Test;  import java.io.IOException; import java.nio.file.Files; import java.nio.file.Path; import java.nio.file.Paths; import java.util.Map;  public class LoadBigMap {      @Test     public void notWork() throws IOException {         readMap(""not-works.spel"");     }      @Test     public void yesWork() throws IOException {         readMap(""yes-works.spel"");     }      private static void readMap(String path) throws IOException {         String spelString = readFile(path);         Expression expression = new SpelExpressionParser().parseExpression(spelString);         Map value = (Map) expression.getValue();         System.out.println(value.size());     }      private static String readFile(String path) throws IOException {         Path currentDir = Paths.get(""."");         System.out.println(currentDir.toAbsolutePath());         return new String(Files.readAllBytes(Paths.get(""/tmp/spel-test"", path)));     }  } ```  yesWork() will parse the map correctly and notWork() will raise the following exception  ``` java.lang.IllegalArgumentException: Pos must not be 0  	at org.springframework.util.Assert.isTrue(Assert.java:118) 	at org.springframework.expression.spel.ast.SpelNodeImpl.(SpelNodeImpl.java:73) 	at org.springframework.expression.spel.ast.Literal.(Literal.java:40) 	at org.springframework.expression.spel.ast.StringLiteral.(StringLiteral.java:37) 	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.maybeEatLiteral(InternalSpelExpressionParser.java:868) 	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.eatStartNode(InternalSpelExpressionParser.java:505) 	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.eatPrimaryExpression(InternalSpelExpressionParser.java:351) 	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.eatUnaryExpression(InternalSpelExpressionParser.java:345) 	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.eatPowerIncDecExpression(InternalSpelExpressionParser.java:304) 	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.eatProductExpression(InternalSpelExpressionParser.java:282) 	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.eatSumExpression(InternalSpelExpressionParser.java:264) 	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.eatRelationalExpression(InternalSpelExpressionParser.java:218) 	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.eatLogicalAndExpression(InternalSpelExpressionParser.java:205) 	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.eatLogicalOrExpression(InternalSpelExpressionParser.java:192) 	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.eatExpression(InternalSpelExpressionParser.java:153) 	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.maybeEatInlineListOrMap(InternalSpelExpressionParser.java:669) 	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.eatStartNode(InternalSpelExpressionParser.java:521) 	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.eatPrimaryExpression(InternalSpelExpressionParser.java:351) 	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.eatUnaryExpression(InternalSpelExpressionParser.java:345) 	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.eatPowerIncDecExpression(InternalSpelExpressionParser.java:304) 	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.eatProductExpression(InternalSpelExpressionParser.java:282) 	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.eatSumExpression(InternalSpelExpressionParser.java:264) 	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.eatRelationalExpression(InternalSpelExpressionParser.java:218) 	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.eatLogicalAndExpression(InternalSpelExpressionParser.java:205) 	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.eatLogicalOrExpression(InternalSpelExpressionParser.java:192) 	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.eatExpression(InternalSpelExpressionParser.java:153) 	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.doParseExpression(InternalSpelExpressionParser.java:131) 	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:61) 	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:33) 	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:52) 	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:43) 	at test.LoadBigMap.readMap(LoadBigMap.java:28) 	at test.LoadBigMap.notWork(LoadBigMap.java:17) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80) 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:673) 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:842) 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1166) 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125) 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109) 	at org.testng.TestRunner.runWorkers(TestRunner.java:1178) 	at org.testng.TestRunner.privateRun(TestRunner.java:757) 	at org.testng.TestRunner.run(TestRunner.java:608) 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334) 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329) 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291) 	at org.testng.SuiteRunner.run(SuiteRunner.java:240) 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86) 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1158) 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1083) 	at org.testng.TestNG.run(TestNG.java:999) 	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72) 	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123) ```  The files [^not-works.spel] and [^yes-works.spel] differ only for a space in position 655350.  It would be great that as long as the 2 maps contain the same items, both of them would be parsed correctly.     Looking into the code of spring I’ve noticed that the method  ```java org.springframework.expression.spel.standard.InternalSpelExpressionParser#toPos(org.springframework.expression.spel.standard.Token) ```  compress startPos and endPos into one single integer(32 bits), the problem here is that 655350 is bigger than (16bit) and therefore the result is not the expected one.  Moreover, I have noticed that in case of a InlineMap, it looks like that the value of pos is never read.     Let me know if everything is clear or you need some further details.  I’m pretty new into the Spring world, and I hope that I followed all the correct process in order to submit this issue, if not, please let me know.     Many thanks and kind regards.  ---  **Affects:** 4.3.21, 5.0.11, 5.1.3  **Attachments:** - [not-works.spel](https://jira.spring.io/secure/attachment/26159/not-works.spel) (_7.62 MB_) - [yes-works.spel](https://jira.spring.io/secure/attachment/26160/yes-works.spel) (_7.62 MB_)  **Issue Links:** - #22146 SpEL, InlineMap with negative values are not cached - #22157 Revisit restrictions in SpEL position handling  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/b2756f5bd2075138ee03f64946bdc391f85b6647, https://github.com/spring-projects/spring-framework/commit/c02446c5a80820f32c4bb160491c452caa4d6175, https://github.com/spring-projects/spring-framework/commit/15f255a5ebf5faf689cabd6d3ad8e5540df81648  **Backported to:** [5.0.12](https://github.com/spring-projects/spring-framework/milestone/193?closed=1), [4.3.22](https://github.com/spring-projects/spring-framework/milestone/171?closed=1)","closed","in: core,","spring-projects-issues","2018-12-18T12:09:13Z","2019-01-23T11:39:44Z"
"","22017","Allow customizing of DefaultSubscriptionRegistry messageEvalContext [SPR-17485]","**[David Melia](https://jira.spring.io/secure/ViewProfile.jspa?name=mzz6wh)** opened **[SPR-17485](https://jira.spring.io/browse/SPR-17485?redirect=false)** and commented  Hi,  org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry contains  ```java private static EvaluationContext messageEvalContext =           SimpleEvaluationContext.forPropertyAccessors(new SimpMessageHeaderPropertyAccessor()).build(); ```  but with no way to override it.  If you think about a stock broking site contain 1000s of price updates I need the ability to add a selector header to filter only the stocks that the customer is interested in. To do that using the default cut down EvaluationContext the selector would be very clunky.  If I can add my own function to the evaluation context i.e  ```java messageEvalContext.setVariable(""myCustomStockSymbolFilterFunction"" . . . ```  then the selector would be simplified i.e.  ```java #myCustomStockSymbolFilterFunction(headers['simpDestination'],{'MSFT','BARC'}) ```     Therefore: * Could you add the ability to override the EvaluationContext?   * If so would it be possible to make SimpMessageHeaderPropertyAccessor available somehow?  Thanks         ---  **Affects:** 5.1.2","open","type: enhancement,","spring-projects-issues","2018-11-11T21:07:50Z","2018-11-22T14:28:47Z"
"","22175","Lazy cache provider initialization [SPR-17646]","**[Dave Syer](https://jira.spring.io/secure/ViewProfile.jspa?name=david_syer)** opened **[SPR-17646](https://jira.spring.io/browse/SPR-17646?redirect=false)** and commented  Several opportunities:  * Pointcut processing is expensive, and involves reflecting on all methods of all beans. Clearly this doesn't scale well and could be indexed away. Could also be used with `@Transactional` (and `@Secured` etc.). * The cache provider (e.g. EhCache) has expensive internal initialization. This could perhaps be deferred until the cache is actually used. * Some other stuff in Spring Boot might help (condition evaluation and import selection)  Some analysis and benchmarks here: https://github.com/spring-projects-experimental/spring-init/issues/5  ---  **Affects:** 5.1.3  **Reference URL:** https://github.com/spring-projects-experimental/spring-init/issues/5","open","type: enhancement,","spring-projects-issues","2019-01-08T08:43:18Z","2019-03-27T18:54:29Z"
"","22109","ObjectProvider Map resolution inconsistency between resolveDependency and getBeanProvider [SPR-17577]","**[Dave Syer](https://jira.spring.io/secure/ViewProfile.jspa?name=david_syer)** opened **[SPR-17577](https://jira.spring.io/browse/SPR-17577?redirect=false)** and commented  `DefaultListableBeanFactory` has 2 methods that can be used to extract an `ObjectProvider`, and they behave inconsistently if the dependency is of type `Map`.  Here's a test that fails:  ```java @SpringBootTest @RunWith(SpringRunner.class) public class SampleApplicationTests {  	@Autowired 	public ObjectProvider> provider;  	@Autowired 	private Bar bar;  	@Autowired 	private DefaultListableBeanFactory beans;  	@Test 	public void test() { 		assertThat(bar).isNotNull(); 	}  	@Test 	public void fails() { 		ObjectProvider> provider = beans.getBeanProvider( 				ResolvableType.forClassWithGenerics(Map.class, String.class, Bar.class)); 		assertThat(provider.getIfAvailable()).isNotEmpty(); 	}  	@Test 	public void auto() { 		assertThat(provider.getIfAvailable()).isNotEmpty(); 	}  	@Test 	public void descriptor() { 		DependencyDescriptor descriptor = new DependencyDescriptor( 				ReflectionUtils.findField(SampleApplicationTests.class, ""provider""), 				true); 		@SuppressWarnings(""unchecked"") 		ObjectProvider> provider = (ObjectProvider>) beans 				.resolveDependency(descriptor, ""test""); 		assertThat(provider.getIfAvailable()).isNotEmpty(); 	}  }  @SpringBootConfiguration class SampleConfiguration {  	@Bean 	public Foo foo() { 		return new Foo(); 	}  	@Bean 	public Bar bar(Map foo) { 		return new Bar(foo.values().iterator().next()); 	}  }  class Bar {      private final Foo foo;      public Bar(Foo foo) {         this.foo = foo;     }      public Foo getFoo() {         return this.foo;     } }  class Foo {      private String value;      public Foo() {     }      public Foo(String value) {         this.value = value;     }      public String getValue() {         return this.value;     }      public void setValue(String value) {         this.value = value;     }      @Override     public String toString() {         return ""Foo [value="" + this.value + ""]"";     }  }  ```    ---  **Affects:** 5.1.3","closed","in: core,","spring-projects-issues","2018-12-07T10:07:00Z","2019-01-08T11:27:10Z"
"","22062","Migrate JSON projection features from Spring Data [SPR-17530]","**[Dave Syer](https://jira.spring.io/secure/ViewProfile.jspa?name=david_syer)** opened **[SPR-17530](https://jira.spring.io/browse/SPR-17530?redirect=false)** and commented  Spring Data Commons has some really cool tools for projecting JSON onto a user provided interface. The basic machinery for that is re-usable far beyond Spring Data (web endpoints, messaging, RPC, etc.), so it would be good to find it a more central home. The main abstraction is `ProjectionFactory`: https://github.com/spring-projects/spring-data-commons/blob/master/src/main/java/org/springframework/data/projection/ProjectionFactory.java.   ---  **Reference URL:** https://github.com/spring-projects/spring-data-commons  1 votes, 6 watchers","closed","in: core,","spring-projects-issues","2018-11-22T10:04:56Z","2019-07-01T12:39:20Z"
"","21990","Documentation on @Async is confusing and biased to XML [SPR-17458]","**[Dave Syer](https://jira.spring.io/secure/ViewProfile.jspa?name=david_syer)** opened **[SPR-17458](https://jira.spring.io/browse/SPR-17458?redirect=false)** and commented  Look at this section of the user guide (on `@Async`): https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/integration.html#scheduling-annotation-support-qualification. It explains how to customize the `Executor` but with reference to an unlinked section that is XML-based (""the 'annotation-driven' element""). It would be better just to repeat what is in the other section (or link to it) and make sure it refers to annotations.   ---  **Reference URL:** https://github.com/spring-guides/gs-async-method/issues/12#issuecomment-435299155  **Referenced from:** pull request https://github.com/spring-projects/spring-framework/pull/2009, and commits https://github.com/spring-projects/spring-framework/commit/3232825a5550742e8ab91ee540e731d341112ba0","closed","type: documentation,","spring-projects-issues","2018-11-02T09:29:49Z","2018-11-27T10:00:05Z"
"","21945","Add bean definition attribute for ConfigurationClassPostProcessor to skip ""lite"" bean detection [SPR-17412]","**[Dave Syer](https://jira.spring.io/secure/ViewProfile.jspa?name=david_syer)** opened **[SPR-17412](https://jira.spring.io/browse/SPR-17412?redirect=false)** and commented  `ConfigurationClassPostProcessor` does a lot of wheel spinning, even in an app with zero `@Configuration` classes. If there was a bean definition attribute that told it ""don't analyze this class"" we could short circuit a lot of that processing in a higher level tool (e.g. in Spring Boot).  ---  **Affects:** 5.1.1  **Issue Links:** - #21379 A lite configuration class's member classes are processed when it's imported but not when it's registered directly - #21739 Revisit `@Bean` introspection between `@Configuration` classes and 'lite' beans  1 votes, 2 watchers","closed","type: enhancement,","spring-projects-issues","2018-10-19T08:43:03Z","2019-04-10T15:34:57Z"
"","22112","WebMvcConfigurerComposite: Overridden method 'WebMvcConfigurer.addCorsMappings' never called [SPR-17580]","**[Dave Cleary](https://jira.spring.io/secure/ViewProfile.jspa?name=cleardave)** opened **[SPR-17580](https://jira.spring.io/browse/SPR-17580?redirect=false)** and commented  Through some debugging, found that [addWebMvcConfigurers](https://github.com/spring-projects/spring-framework/blob/f15bd882112886a7ac5f384b45e947af3488d9dd/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/WebMvcConfigurerComposite.java#L42) is called after [addCorsMappings](https://github.com/spring-projects/spring-framework/blob/f15bd882112886a7ac5f384b45e947af3488d9dd/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/WebMvcConfigurerComposite.java#L99). Because of this the overridden addCorsMappings is never called. For now my workaround is using the CorsFilter but I would rather setup in the Web Configuration.   ---  **Affects:** 5.1.3","closed","status: declined,","spring-projects-issues","2018-12-07T16:42:50Z","2019-01-12T16:19:58Z"
"","22159","DefaultExceptionHandler logs warning cannot be disabled [SPR-17628]","**[danielrohe](https://jira.spring.io/secure/ViewProfile.jspa?name=danielrohe)** opened **[SPR-17628](https://jira.spring.io/browse/SPR-17628?redirect=false)** and commented  Before the change the warn logger was not enabled for DefaultHandlerExceptionResolver and it only logged on warn level in case the exception was one of ConversionNotSupportedException, TypeMismatchException, HttpMessageNotReadableException, HttpMessageNotWritableException.  With the latest changes from #21916 the DefaultHandlerExceptionResolver warn logger got enabled by default in the constructor and can't be disabled (setting to null in Configuration class causes NPE). This leads to the state that all resolved exceptions are logged at warn level in AbstractHandlerExceptionResolver logException method. So not only the exceptions mentioned above but also HttpRequestMethodNotSupportedException, HttpMediaTypeNotSupportedException, HttpMediaTypeNotAcceptableException, MissingPathVariableException, MissingServletRequestParameterException, ServletRequestBindingException, MethodArgumentNotValidException, MissingServletRequestPartException, BindException, NoHandlerFoundException.  Can you please clarify what is the logging behavior of DefaultHandlerExceptionResolver?  In my opinion warn logging in this class should also be configurable and not enabled by default. So that developers are free to choose whether they want to have it disabled or enabled. As a side note: it should also honor the application property spring.mvc.log-resolved-exception  ---  **Affects:** 5.1.3","closed","type: enhancement,","spring-projects-issues","2018-12-28T09:46:51Z","2019-01-18T23:31:10Z"
"","21932","AbstractHandlerExceptionResolver logs handled exceptions at WARN [SPR-17399]","**[Dale Ogilvie](https://jira.spring.io/secure/ViewProfile.jspa?name=dale77)** opened **[SPR-17399](https://jira.spring.io/browse/SPR-17399?redirect=false)** and commented  We have a ControllerAdvice exceptionHandler which logs 404 at INFO, as this is not an error we care about. However, ExceptionHandlerExceptionResolver logs at WARN after calling our handler. This should not happen.  Example log:  ```java 2018-10-18 10:24:43,594 BELLHOP INFO  main   * HttpClient Error: 404 Not Found, ErrorMessage [url=/api/platforms/NOTFOUND/radio, reason={""message"":""No configuration found for NOTFOUND""}] * api.RestExceptionHandlerController            * main * nz.co.trimble.bellhop.api.RestExceptionHandlerController 2018-10-18 10:24:43,631 BELLHOP WARN  main   * Resolved [org.springframework.web.client.HttpClientErrorException: 404 Not Found]          * annotation.ExceptionHandlerExceptionResolver  * main * org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver  ```  ```java @Override public ModelAndView resolveException(     HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) {    if (shouldApplyTo(request, handler)) {     prepareResponse(ex, response);     ModelAndView result = doResolveException(request, response, handler, ex);     if (result != null) {       // Print warn message when warn logger is not enabled...       if (logger.isWarnEnabled() && (this.warnLogger == null || !this.warnLogger.isWarnEnabled())) {         logger.warn(""Resolved ["" + ex + ""]"" + (result.isEmpty() ? """" : "" to "" + result));       }       // warnLogger with full stack trace (requires explicit config)       logException(ex, request);     }     return result;   }   else {     return null;   } } ```  ---  **Affects:** 4.3.19  **Issue Links:** - #21916 ExceptionHandlerExceptionResolver started to log on WARN level (_**""duplicates""**_) - #21714 Consistent warn logging for handled exceptions","closed","type: enhancement,","spring-projects-issues","2018-10-17T21:41:48Z","2019-01-11T13:11:42Z"
"","22167","Request forwarding is not working with ServletHttpHandlerAdapter in servlet 3.1 container  [SPR-17637]","**[codecracker2014](https://jira.spring.io/secure/ViewProfile.jspa?name=codecracker2014)** opened **[SPR-17637](https://jira.spring.io/browse/SPR-17637?redirect=false)** and commented  I'm trying to write reactive view resolver for apache tiles. Tiles forwards request to jsp and jsp calls   `getOutputStream which can't be called twice as already called in org.springframework.http.server.reactive.ServletServerHttpResponse constructor.` `Below is the resulting exception.`  ``` java.lang.IllegalStateException: getOutputStream() has already been called for this response at org.apache.catalina.connector.Response.getWriter(Response.java:624) ```  Is request forwarding not supported with web-flux?   --- No further details from [SPR-17637](https://jira.spring.io/browse/SPR-17637?redirect=false)","closed","status: invalid,","spring-projects-issues","2019-01-04T06:53:06Z","2019-01-12T05:17:13Z"
"","21931","package org/springframework/core/log doesn't fit with future Java 9 Module [SPR-17398]","**[ClaudioElio](https://jira.spring.io/secure/ViewProfile.jspa?name=claudioelio)** opened **[SPR-17398](https://jira.spring.io/browse/SPR-17398?redirect=false)** and commented  Hi  I wonder why has been created this package instead of extending the spring-jcl  if needed, it would be necessary not to call inner implementation of common-logging or Java 9 Module mechanism (that I'm trying to fit to Spring Framework in my spare time) is giving duplicated module exception (split package)  Thanks    ---  **Affects:** 5.1.1  **Reference URL:** https://github.com/spring-projects/spring-framework/blob/master/spring-core/src/main/java/org/springframework/core/log/CompositeLog.java","closed","in: core,","spring-projects-issues","2018-10-17T19:47:20Z","2022-02-18T20:56:25Z"
"","21984","ClassUtils.forName fails to load class from ContextTypeMatchClassLoader [SPR-17452]","**[Christoph Empl](https://jira.spring.io/secure/ViewProfile.jspa?name=chrempl)** opened **[SPR-17452](https://jira.spring.io/browse/SPR-17452?redirect=false)** and commented  #21867 changed the implementation of `ClassUtils#forName`: classloading is implemented with `Class#forName` instead of `Classloader#loadClass`.   Since this change one of our Spring-components (""`ClassA`"") isn't found as an autowiring candidate for an interface (""`InterfaceA`"") anymore: `Class.forName(""ClassA"", false, clToUse) ` clToUse: (e.g.)  ``` org.springframework.context.support.ContextTypeMatchClassLoader@34d89c26 ```  Results in: `ClassA -` its classloader is another instance of  `ContextTypeMatchClassLoader`: (e.g.)  ``` org.springframework.context.support.ContextTypeMatchClassLoader$ContextOverridingClassLoader@3a2db42b ```  This classloader has two loaded classes: `InterfaceA` and `ClassA`.  In contrast, `clToUse.loadClass(""ClassA"")` returns the expected result: `ClassA`, its classloader is the parent of `clToUse`     The affected project uses openjdk 11 (11+28).   The somehow weird behaviour of `Class#forName` is already mentioned in #18631 and #7300.           ---  **Affects:** 5.1.1, 5.1.2  **Issue Links:** - #18631 ClassUtils.forName() performance - #21867 ClassUtils could use long form of Class.forName - #7300 Class.forName() produces different results to ClassLoader.loadClass() in certain circumstances  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/5cd525a2b06fdb4e54a958c0741921c17345b455","closed","in: core,","spring-projects-issues","2018-10-31T16:07:51Z","2019-01-11T13:14:57Z"
"","22168","JOptCommandLinePropertySource selects property names in an inconsistent way [SPR-17639]","**[chludwig-haufe](https://jira.spring.io/secure/ViewProfile.jspa?name=chludwig-haufe)** opened **[SPR-17639](https://jira.spring.io/browse/SPR-17639?redirect=false)** and commented  I recently had to build a Spring Boot command line application whose application context depends on command line options. I specified the qualified property names (i.e., `"".""` as option alias names using the `OptionParser#addAll(List)` method of JOpt's fluent interface. I injected a customized `StandardEnvironment` with a `JOptCommandLinePropertySource` based on the parsed command line arguments into the `SpringApplication`. To my surprise, however, some of the properties were never bound to the corresponding `@ConfigurationProperties` object.  I found that this was caused by the implementation of `JOptCommandLinePropertySource#getPropertyNames()`: A comment in the source code claims _""only the longest name is used for enumerating""._ However, the implementation always returns the _last_ element of `OptionSpec#options()`. This is, in general, _not_ the longest option name, because `OptionSpec#options()` * first clusters the option names into short and long options and * then sorts these groups lexicographically, respectively.  For some options, `JOptCommandLinePropertySource#getPropertyNames()` therefore contained the qualified alias name required for binding the property to the `@ConfigurationProperties` object, while for other options it contained the unqualified option alias. Admittedly, the documentation of `JOptCommandLinePropertySource` never specifies which property names are enumerated; but I can't see a scenario where the current behavior is useful.  This ticket's reference URL points to a JUnit class that demonstrates this behavior. The test class also includes alternative property name selection strategies that would work better in my scenario. (I wonder why `JOptCommandLinePropertySource#getPropertyNames()` needs to filter the option alias names in the first place.)   ---  **Affects:** 5.0.11, 5.1.3, 5.1.4  **Reference URL:** https://github.com/chludwig-haufe/JOptCommandLinePropertySource-Issues/blob/master/src/test/java/com/haufe/bugreports/spring/wrongpropertynamedemo/JOptCommandLinePropertySourceTests.java","open","in: core,","spring-projects-issues","2019-01-04T20:56:01Z","2019-01-11T15:24:21Z"
"","21980","StandardEvaluationContext does not support concurrent variable access [SPR-17448]","**[chenzhiguo](https://jira.spring.io/secure/ViewProfile.jspa?name=chenzhiguo)** opened **[SPR-17448](https://jira.spring.io/browse/SPR-17448?redirect=false)** and commented  I invoke a method with SpEL. Sometimes, the param used by the method i invoke is null!!     ```java @Test public void testAsyncBuildNull() {     int i = 0;     PageRequest param = new PageRequest();     param.setPin(""chenzhiguo"");     for (; i < 5000; i++) {         defaultSpELParser.setVariable(""param"", param);         defaultSpELParser.setVariable(""param""+ i,defaultSpELParser.doAsyncParser(""@extendDemoService.syncGetJsfData2(#param)"", Object.class));         System.out.println(""######Start:"" + i);     }     for (int x=0; x < 5000; x++) {         try { System.out.println(""Result：""+defaultSpELParser.doParserByTemplate(""#{#param"" + x +"".get()}""));         } catch (Exception e) {             e.printStackTrace();         }     } } ```  ```java @Async @Override public  Future doAsyncParser(String expression, Class beanType) {     if (null == expression) {         expression = """";     }     return new AsyncResult<>(expressionParser.parseExpression(expression)             .getValue(evaluationContext, beanType)); } ```  ```java public String syncGetJsfData2(PageRequest param) {     if (null == param) {         LOGGER.error(""param is null""); // always goto here at the first or second time when i test 5000 times         return ""null"";     }      return param.getPin(); } ```  I think the ""StandardEvaluationContext""->variables = new HashMap<>();  Is it thread  unsafe  when the SpEL working?  So, I extend StandardEvaluationContext to MyEvaluationContext and it working properly.  ```java public class MyEvaluationContext extends StandardEvaluationContext {      private final Map variables = new ConcurrentHashMap<>();      @Override     public void setVariable(String name, @Nullable Object value) {         this.variables.put(name, value);     }      @Override     public void setVariables(Map variables) {         this.variables.putAll(variables);     }      @Override     public void registerFunction(String name, Method method) {         this.variables.put(name, method);     }      @Override     @Nullable     public Object lookupVariable(String name) {         return this.variables.get(name);     } } ```  But I'm not sure exactly why. I look forward to your reply.  Thanks.  ---  **Affects:** 5.0.5  **Issue Links:** - #21974 ConcurrentModificationException in DispatcherServlet with asynchronous ApplicationEventMulticaster - #21819 Concurrency Exception during bean configuration related to not thread safe getBeanPostProcessor access - #22097 SpEL variable evaluation fails with NPE against ConcurrentHashMap  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/591e7f1f725d20ed84388efb4e55bed3aa50ff7c, https://github.com/spring-projects/spring-framework/commit/59fa647e2d57392b3a43af2c107a237948a92b12  **Backported to:** [5.0.11](https://github.com/spring-projects/spring-framework/milestone/192?closed=1)","closed","type: enhancement,","spring-projects-issues","2018-10-31T06:35:07Z","2019-01-11T13:15:39Z"
"","21897","How does DeferredResult get the value after the timeout [SPR-17364]","**[chenlingmin](https://jira.spring.io/secure/ViewProfile.jspa?name=chenlingmin)** opened **[SPR-17364](https://jira.spring.io/browse/SPR-17364?redirect=false)** and commented  At present, The timeoutResult definition occurs before the timeout.  !image-2018-10-11-15-39-35-080.png!  The value at t1 time is A, and t2 time is B. If t2 time is timeout time, I can't return value of t2      ---  **Attachments:** - [image-2018-10-11-15-39-35-080.png](https://jira.spring.io/secure/attachment/26046/image-2018-10-11-15-39-35-080.png) (_4.66 kB_)  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/4ee704cedfb6c7e02843bde24cf75f630f6b64b6","closed","type: enhancement,","spring-projects-issues","2018-10-11T07:40:11Z","2018-10-15T07:48:40Z"
"","22019","Illegal reflective access by ReflectionUtils [SPR-17487]","**[Carl Henrik Klåvus](https://jira.spring.io/secure/ViewProfile.jspa?name=carl.henrik.klavus)** opened **[SPR-17487](https://jira.spring.io/browse/SPR-17487?redirect=false)** and commented  Tried to upgrade 5.0.8 -> 5.1.2 in order to get rid of illegal reflective access but got a new one.  WARNING: An illegal reflective access operation has occurred WARNING: Illegal reflective access by org.springframework.util.ReflectionUtils (file:/home/user/.m2/repository/org/springframework/spring-core/5.1.2.RELEASE/spring-core-5.1.2.RELEASE.jar) to constructor java.lang.invoke.MethodHandles$Lookup(java.lang.Class) WARNING: Please consider reporting this to the maintainers of org.springframework.util.ReflectionUtils   ---  **Affects:** 5.1.2  **Issue Links:** - [DATACMNS-1373](https://jira.spring.io/browse/DATACMNS-1373) Align class loading in ClassGeneratingEntityInstantiator with ClassGeneratingPropertyAccessorFactory","closed","in: core,","spring-projects-issues","2018-11-13T09:18:27Z","2019-01-12T05:17:48Z"
"","21975","Allow @Scheduled methods to have parameters [SPR-17443]","**[Caleb Cushing](https://jira.spring.io/secure/ViewProfile.jspa?name=xenoterracide)** opened **[SPR-17443](https://jira.spring.io/browse/SPR-17443?redirect=false)** and commented  I can accept that the parameters need to be some sort of Bean or otherwise resolvable like from property sources, but it seems like that should be possible.  ```java    @Scheduled( fixedRateString = CREATED_SCHEDULE_PLACEHOLDER )     void publishCreatedEmrs( @Value( CREATED_SCHEDULE_PLACEHOLDER ) Duration duration ) { .... code that queries by duration here ```    ---  **Affects:** 5.0.10","open","type: enhancement,","spring-projects-issues","2018-10-29T22:35:34Z","2019-06-04T12:45:04Z"
"","21961","Support docker secrets api as a property source [SPR-17428]","**[Caleb Cushing](https://jira.spring.io/secure/ViewProfile.jspa?name=xenoterracide)** opened **[SPR-17428](https://jira.spring.io/browse/SPR-17428?redirect=false)** and commented  The secrets API from inside fo a container, which is what I'm talking about is simply  /run/secrets/keyname (value is the contents of the file)  it appears that having a keyname that contains dots is allowed, so spring could simply look at that directory and for files with the same key name as they would be in a properties file.  https://docs.docker.com/engine/swarm/secrets/ https://diogomonica.com/2017/03/27/why-you-shouldnt-use-env-variables-for-secret-data/   --- No further details from [SPR-17428](https://jira.spring.io/browse/SPR-17428?redirect=false)","closed","in: core,","spring-projects-issues","2018-10-24T19:44:00Z","2022-02-18T20:51:58Z"
"","21895","AnnotationUtils.getAnnotations() not return null but empty array [SPR-17362]","**[Caleb Cushing](https://jira.spring.io/secure/ViewProfile.jspa?name=xenoterracide)** opened **[SPR-17362](https://jira.spring.io/browse/SPR-17362?redirect=false)** and commented  AnnotationUtils.getAnnotations() should return an empty array, instead of null... it's worth also noting that I found a bug (simply reading the usages in our projects/libraries) in one of the other spring projects that would not exist if this didn't return null. And another project that handles correctly (the same) for both null and empty.   --- No further details from [SPR-17362](https://jira.spring.io/browse/SPR-17362?redirect=false)","closed","type: enhancement,","spring-projects-issues","2018-10-10T20:35:12Z","2018-10-10T21:10:02Z"
"","21893","expose ReflectionUtils.getDeclaredFields [SPR-17360]","**[Caleb Cushing](https://jira.spring.io/secure/ViewProfile.jspa?name=xenoterracide)** opened **[SPR-17360](https://jira.spring.io/browse/SPR-17360?redirect=false)** and commented  I find myself fairly often wanting to do stuff like this  ```java public static String[] getFieldNames( Class clazz ) {     return Stream.of( clazz.getDeclaredFields() ).map( Field::getName ).toArray( String[]::new ); } ```  however this is less efficient because it doesn't take advantage of a Field cache, I'd rather make use of Spring's Field Cache than use my own. So if I could write the following that'd be great.  ```java public static String[] getFieldNames( Class clazz ) {     return Stream.of( ReflectionUtils.getDeclaredFfields(clazz) ).map( Field::getName ).toArray( String[]::new ); ```  P.S. I understand Util is not generally meant as a published api, though I still think it should be (and possibly in it's own jar)   --- No further details from [SPR-17360](https://jira.spring.io/browse/SPR-17360?redirect=false)","closed","in: core,","spring-projects-issues","2018-10-10T18:38:31Z","2022-02-18T20:57:32Z"
"","22116","spring.io->Spring Boot Reference Manual  (request Not Found) [SPR-17584]","**[cafebaby](https://jira.spring.io/secure/ViewProfile.jspa?name=zhouzhou19950825)** opened **[SPR-17584](https://jira.spring.io/browse/SPR-17584?redirect=false)** and commented  spring.io->Spring Boot Reference Manual  (request Not Found)  address:https://docs.spring.io/spring-boot/docs/current-SNAPSHOT/reference/htmlsingle/   --- No further details from [SPR-17584](https://jira.spring.io/browse/SPR-17584?redirect=false)","closed","status: invalid,","spring-projects-issues","2018-12-10T02:24:52Z","2019-01-12T05:17:32Z"
"","22145","Add a getAttribute method to the org.springframework.ui.Model interface [SPR-17613]","**[Brice Roncace](https://jira.spring.io/secure/ViewProfile.jspa?name=broncace)** opened **[SPR-17613](https://jira.spring.io/browse/SPR-17613?redirect=false)** and commented  Having a `getAttribute` method would fit naturally with the other model attribute handling methods like `addAttribute` and `containsAttribute.`   ---  **Affects:** 5.1.3","closed","type: enhancement,","spring-projects-issues","2018-12-19T22:09:14Z","2019-01-28T21:52:31Z"
"","22034","Remove Content-Length response header before delegating to WebExceptionHandlers [SPR-17502]","**[Brian Clozel](https://jira.spring.io/secure/ViewProfile.jspa?name=bclozel)** opened **[SPR-17502](https://jira.spring.io/browse/SPR-17502?redirect=false)** and commented  Given the following controller in Spring WebFlux:  ```java @RestController public class TestController {  	@GetMapping(path = ""/"", produces = MediaType.TEXT_PLAIN_VALUE) 	public Flux text(ServerWebExchange exchange) { 		exchange.getResponse().getHeaders().setContentLength(12); 		return Flux.error(new IllegalStateException()); 	} } ```  When this handler is used, the thrown exception is being handled by the `WebExceptionHandlers` configured instances. At that point, the response might be committed or not.  When used in Spring Boot, this will cause HTTP clients to partially read the actual error response (JSON or HTML), since those are written in chunked encoding mode. Also, other encoders will opt out and won't override any existing `""Content-Length""` header.  We should (in `ExceptionHandlingWebHandler` ?) make sure that we try and remove the `""Content-Length""` response header as the error response won't be of the same length.   ---  **Affects:** 5.0.10, 5.1.2  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/617b94afb64455b729987bf3f336a68a8402594b, https://github.com/spring-projects/spring-framework/commit/3203d39821dc25e4a481697d5a298f0303d0a3e0, https://github.com/spring-projects/spring-framework/commit/5342c6e493395f9b986d1144bceff99b3ee8c6bd  **Backported to:** [5.0.11](https://github.com/spring-projects/spring-framework/milestone/192?closed=1)  1 votes, 4 watchers","closed","type: bug,","spring-projects-issues","2018-11-15T18:23:52Z","2018-11-27T09:13:11Z"
"","21966","Configure ResourceUrlProvider in WebFlux and resource chain infrastructure [SPR-17433]","**[Brian Clozel](https://jira.spring.io/secure/ViewProfile.jspa?name=bclozel)** opened **[SPR-17433](https://jira.spring.io/browse/SPR-17433?redirect=false)** and commented  Unlike what the reference documentation states, the default Spring WebFlux configuration does not provide a `ResourceUrlProvider` bean.  Also, the `AppCacheManifestTransformer` and `CssLinkResourceTransformer` both need a reference to the `ResourceUrlProvider` when dealing with absolute links. This needs to be configured during the resource chain setup as the `ResourceUrlProvider` needs to be aware of the application context.   ---  **Affects:** 5.0.10, 5.1.1  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/fc957e95bb8c65e042b5eeb5d11ead60c277c53d, https://github.com/spring-projects/spring-framework/commit/8de86b7fb3407fdf6196fcc182456d5278fda65e, https://github.com/spring-projects/spring-framework/commit/2d14bd706650c94cb212722d566dc3a4244892a5, https://github.com/spring-projects/spring-framework/commit/0e8ed5931de5d420180473290deaa65d59a9ea54  **Backported to:** [5.0.11](https://github.com/spring-projects/spring-framework/milestone/192?closed=1)","closed","type: bug,","spring-projects-issues","2018-10-25T13:56:09Z","2018-10-29T11:07:59Z"
"","21953","Relax handler supports checks in WebFlux RequestMappingHandlerAdapter [SPR-17420]","**[Brian Clozel](https://jira.spring.io/secure/ViewProfile.jspa?name=bclozel)** opened **[SPR-17420](https://jira.spring.io/browse/SPR-17420?redirect=false)** and commented  This is useful for implementations extending `RequestMappingHandlerAdapter` and `HandlerMapping` - something done in Spring Boot for its Actuator reactive endpoints support.   ---  **Affects:** 5.1.1  **Reference URL:** https://github.com/spring-projects/spring-boot/issues/14292","closed","type: enhancement,","spring-projects-issues","2018-10-22T18:31:23Z","2018-10-29T11:07:59Z"
"","21922","Add viewController-like support in WebFlux [SPR-17389]","**[Brian Clozel](https://jira.spring.io/secure/ViewProfile.jspa?name=bclozel)** opened **[SPR-17389](https://jira.spring.io/browse/SPR-17389?redirect=false)** and commented  This is something that's often requested by the community, especially for static pages support - see [here](https://github.com/spring-projects/spring-boot/issues/9785).  We could add a `viewController`-like support on the `WebFluxConfigurer` to help Spring Boot support that requested feature.   ---  **Affects:** 5.1.1  **Reference URL:** https://github.com/spring-projects/spring-boot/issues/9785","closed","type: enhancement,","spring-projects-issues","2018-10-16T09:56:18Z","2019-01-29T17:39:28Z"
"","22025","WebFlux HttpServer Prematurely Closing Connection [SPR-17493]","**[Brandon M](https://jira.spring.io/secure/ViewProfile.jspa?name=bm3780)** opened **[SPR-17493](https://jira.spring.io/browse/SPR-17493?redirect=false)** and commented  I'm seeing an issue using WebFlux Netty-based server where connections are being closed _before_ the HTTP response is written.   +**Observed Behavior**+  For HTTP requests with ""_Connection: close_"" header, the response is not being flushed prior to the connection being closed.  See log snippet:  ``` 2018-11-13T18:06:29,405 WARN i.n.h.l.LoggingHandler - [id: 0x8522ec14, L:/192.168.1.1:8443 - R:/192.168.124.1:12345] ACTIVE 2018-11-13T18:06:29,406 WARN i.n.h.l.LoggingHandler - [id: 0x8522ec14, L:/192.168.1.1:8443 - R:/192.168.124.1:12345] READ COMPLETE 2018-11-13T18:06:29,411 WARN i.n.h.l.LoggingHandler - [id: 0x8522ec14, L:/192.168.1.1:8443 - R:/192.168.124.1:12345] USER EVENT: SslHandshakeCompletionEvent(SUCCESS) 2018-11-13T18:06:29,412 WARN i.n.h.l.LoggingHandler - [id: 0x8522ec14, L:/192.168.1.1:8443 - R:/192.168.124.1:12345] READ: 171B ====[BEGIN HTTP Request]====  GET /foo/bar  HTTP/1.1  host: mycompany.org  Connection: close ====[END HTTP Request]==== 2018-11-13T18:06:29,480 WARN i.n.h.l.LoggingHandler - [id: 0x8522ec14, L:/192.168.1.1:8443 - R:/192.168.124.1:12345] WRITE: 395B  =====[BEGIN HTTP Response]====  HTTP/1.1 200 OK  . . .     . . .  Connection: close =====[END HTTP Response]==== 2018-11-13T18:06:29,480 WARN i.n.h.l.LoggingHandler - [id: 0x8522ec14, L:/192.168.1.1:8443 - R:/192.168.124.1:12345] FLUSH 2018-11-13T18:06:29,480 WARN i.n.h.l.LoggingHandler - [id: 0x8522ec14, L:/192.168.1.1:8443 - R:/192.168.124.1:12345] CLOSE 2018-11-13T18:06:29,480 WARN i.n.h.l.LoggingHandler - [id: 0x8522ec14, L:/192.168.1.1:8443 - R:/192.168.124.1:12345] USER EVENT: SslCloseCompletionEvent(java.nio.channels.ClosedChannelException) 2018-11-13T18:06:29,480 WARN i.n.h.l.LoggingHandler - [id: 0x8522ec14, L:/192.168.1.1:8443 - R:/192.168.124.1:12345] INACTIVE 2018-11-13T18:06:29,481 WARN i.n.h.l.LoggingHandler - [id: 0x8522ec14, L:/192.168.1.1:8443 - R:/192.168.124.1:12345] UNREGISTERED 2018-11-13T18:06:29,481 ERROR o.s.w.s.a.HttpWebHandlerAdapter - [0x8522ec14] Error [reactor.netty.channel.AbortedException: Connection has been closed] for HTTP GET ""/foo/bar"", but ServerHttpResponse already committed (200 OK) ```  +**Expected Behavior**+ HTTP response should first be written to the client before the connection is closed.      ---  **Affects:** 5.1.2","closed","status: invalid,","spring-projects-issues","2018-11-13T22:26:04Z","2019-01-12T05:17:45Z"
"","22110","Spring Boot 2.x not converting Protobuf to JSON Using ProtobufJsonFormatHttpMessageConverter [SPR-17578]","**[Brajveer Singh](https://jira.spring.io/secure/ViewProfile.jspa?name=brajveer)** opened **[SPR-17578](https://jira.spring.io/browse/SPR-17578?redirect=false)** and commented  I am using ProtobufJsonFormatHttpMessageConverter in Springboot 2.0 ```Java @bean ProtobufJsonFormatHttpMessageConverter protobufJsonFormatHttpMessageConverter() {     JsonFormat.Printer printer = JsonFormat.printer().omittingInsignificantWhitespace();     JsonFormat.Parser parser = JsonFormat.parser().ignoringUnknownFields();     return new ProtobufJsonFormatHttpMessageConverter(parser,printer,(ExtensionRegistry)null); } ``` While running application, it's not converting output to JSON rather its printing as Protobuf text as below.  ����Chris� Richardson*� �[crichardson@email.com|mailto:crichardson@email.com]��   ---  **Affects:** 5.1.3","closed","for: stackoverflow,","spring-projects-issues","2018-12-07T14:47:22Z","2019-10-21T17:52:37Z"
"","22043","ServerSentEventHttpMessageReader leaves a leading space on field decoding [SPR-17511]","**[Boris Morris](https://jira.spring.io/secure/ViewProfile.jspa?name=bmorris591)** opened **[SPR-17511](https://jira.spring.io/browse/SPR-17511?redirect=false)** and commented  When decoding fields, the following code is used  ```java data.append(line.substring(5)) ```  When the field is formatted as  ``` name:  ```  Then the leading space is left on field.  ---  **Affects:** 5.1.2  **Issue Links:** - #22042 ServerSentEventHttpMessageReader fails to process keep-alive events","closed","type: bug,","spring-projects-issues","2018-11-17T19:27:22Z","2019-01-22T21:28:31Z"
"","22042","Support for null literal in Jackson2JsonDecoder [SPR-17510]","**[Boris Morris](https://jira.spring.io/secure/ViewProfile.jspa?name=bmorris591)** opened **[SPR-17510](https://jira.spring.io/browse/SPR-17510?redirect=false)** and commented  When consuming the [Nest Developer API](https://developers.nest.com/reference/api-overview) using `WebClient` I encounter an error on `keep-alive` events.  I am unsure whether this is because of the Nest API not complying with the SSE spec or because of `ServerSentEventHttpMessageReader` not being tolerant enough.  ---  The Nest Developer API in SSE send two types of messages: 1. data frames 2. keep alive frames  A data frame is structured thus:  ``` event: put data:   ```  A keep alive frame is structured thus:  ``` event: keep-alive data: null  ```  The thing to note is the literal `null` in the `data` field.  When connecting to the endpoint with `WebClient` I see the following error:  ``` 2018-11-17 19:21:48.010 ERROR 75491 --- [ctor-http-nio-4] reactor.Flux.MonoFlatMapMany.1           : onError(java.lang.NullPointerException: The mapper returned a null value.) 2018-11-17 19:21:48.013 ERROR 75491 --- [ctor-http-nio-4] reactor.Flux.MonoFlatMapMany.1           : java.lang.NullPointerException: The mapper returned a null value. 	at java.base/java.util.Objects.requireNonNull(Objects.java:246) ~[na:na] 	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:100) ~[reactor-core-3.2.2.RELEASE.jar:3.2.2.RELEASE] 	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:664) ~[reactor-core-3.2.2.RELEASE.jar:3.2.2.RELEASE] 	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:540) ~[reactor-core-3.2.2.RELEASE.jar:3.2.2.RELEASE] 	at reactor.core.publisher.FluxFlatMap$FlatMapInner.onSubscribe(FluxFlatMap.java:924) ~[reactor-core-3.2.2.RELEASE.jar:3.2.2.RELEASE] 	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:139) ~[reactor-core-3.2.2.RELEASE.jar:3.2.2.RELEASE] 	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:63) ~[reactor-core-3.2.2.RELEASE.jar:3.2.2.RELEASE] 	at reactor.core.publisher.Flux.subscribe(Flux.java:7734) ~[reactor-core-3.2.2.RELEASE.jar:3.2.2.RELEASE] 	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:389) ~[reactor-core-3.2.2.RELEASE.jar:3.2.2.RELEASE] 	at reactor.core.publisher.FluxMapSignal$FluxMapSignalSubscriber.onNext(FluxMapSignal.java:147) ~[reactor-core-3.2.2.RELEASE.jar:3.2.2.RELEASE] 	at reactor.core.publisher.FluxJust$WeakScalarSubscription.request(FluxJust.java:99) ~[reactor-core-3.2.2.RELEASE.jar:3.2.2.RELEASE] 	at reactor.core.publisher.FluxMapSignal$FluxMapSignalSubscriber.request(FluxMapSignal.java:225) ~[reactor-core-3.2.2.RELEASE.jar:3.2.2.RELEASE] 	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:335) ~[reactor-core-3.2.2.RELEASE.jar:3.2.2.RELEASE] 	at reactor.core.publisher.FluxMapSignal$FluxMapSignalSubscriber.onSubscribe(FluxMapSignal.java:115) ~[reactor-core-3.2.2.RELEASE.jar:3.2.2.RELEASE] 	at reactor.core.publisher.FluxJust.subscribe(FluxJust.java:70) ~[reactor-core-3.2.2.RELEASE.jar:3.2.2.RELEASE] 	at reactor.core.publisher.FluxMapSignal.subscribe(FluxMapSignal.java:69) ~[reactor-core-3.2.2.RELEASE.jar:3.2.2.RELEASE] 	at reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97) ~[reactor-core-3.2.2.RELEASE.jar:3.2.2.RELEASE] 	at reactor.core.publisher.FluxMap.subscribe(FluxMap.java:62) ~[reactor-core-3.2.2.RELEASE.jar:3.2.2.RELEASE] 	at reactor.core.publisher.MonoSingle.subscribe(MonoSingle.java:58) ~[reactor-core-3.2.2.RELEASE.jar:3.2.2.RELEASE] 	at reactor.core.publisher.Mono.subscribe(Mono.java:3590) ~[reactor-core-3.2.2.RELEASE.jar:3.2.2.RELEASE] 	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:442) ~[reactor-core-3.2.2.RELEASE.jar:3.2.2.RELEASE] 	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onNext(FluxConcatMap.java:244) ~[reactor-core-3.2.2.RELEASE.jar:3.2.2.RELEASE] 	at reactor.core.publisher.FluxBufferPredicate$BufferPredicateSubscriber.emit(FluxBufferPredicate.java:295) ~[reactor-core-3.2.2.RELEASE.jar:3.2.2.RELEASE] 	at reactor.core.publisher.FluxBufferPredicate$BufferPredicateSubscriber.onNextNewBuffer(FluxBufferPredicate.java:257) ~[reactor-core-3.2.2.RELEASE.jar:3.2.2.RELEASE] 	at reactor.core.publisher.FluxBufferPredicate$BufferPredicateSubscriber.tryOnNext(FluxBufferPredicate.java:211) ~[reactor-core-3.2.2.RELEASE.jar:3.2.2.RELEASE] 	at reactor.core.publisher.FluxBufferPredicate$BufferPredicateSubscriber.onNext(FluxBufferPredicate.java:184) ~[reactor-core-3.2.2.RELEASE.jar:3.2.2.RELEASE] 	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:287) ~[reactor-core-3.2.2.RELEASE.jar:3.2.2.RELEASE] 	at reactor.core.publisher.FluxContextStart$ContextStartSubscriber.onNext(FluxContextStart.java:103) ~[reactor-core-3.2.2.RELEASE.jar:3.2.2.RELEASE] 	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:213) ~[reactor-core-3.2.2.RELEASE.jar:3.2.2.RELEASE] 	at reactor.core.publisher.FluxBufferPredicate$BufferPredicateSubscriber.emit(FluxBufferPredicate.java:295) ~[reactor-core-3.2.2.RELEASE.jar:3.2.2.RELEASE] 	at reactor.core.publisher.FluxBufferPredicate$BufferPredicateSubscriber.onNextNewBuffer(FluxBufferPredicate.java:257) ~[reactor-core-3.2.2.RELEASE.jar:3.2.2.RELEASE] 	at reactor.core.publisher.FluxBufferPredicate$BufferPredicateSubscriber.tryOnNext(FluxBufferPredicate.java:211) ~[reactor-core-3.2.2.RELEASE.jar:3.2.2.RELEASE] 	at reactor.core.publisher.FluxBufferPredicate$BufferPredicateSubscriber.onNext(FluxBufferPredicate.java:184) ~[reactor-core-3.2.2.RELEASE.jar:3.2.2.RELEASE] 	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drainAsync(FluxFlattenIterable.java:395) ~[reactor-core-3.2.2.RELEASE.jar:3.2.2.RELEASE] 	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drain(FluxFlattenIterable.java:638) ~[reactor-core-3.2.2.RELEASE.jar:3.2.2.RELEASE] 	at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.onNext(FluxFlattenIterable.java:242) ~[reactor-core-3.2.2.RELEASE.jar:3.2.2.RELEASE] 	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:114) ~[reactor-core-3.2.2.RELEASE.jar:3.2.2.RELEASE] 	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:114) ~[reactor-core-3.2.2.RELEASE.jar:3.2.2.RELEASE] 	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:211) ~[reactor-netty-0.8.2.RELEASE.jar:0.8.2.RELEASE] 	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:327) ~[reactor-netty-0.8.2.RELEASE.jar:0.8.2.RELEASE] 	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:310) ~[reactor-netty-0.8.2.RELEASE.jar:0.8.2.RELEASE] 	at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:538) ~[reactor-netty-0.8.2.RELEASE.jar:0.8.2.RELEASE] 	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:141) ~[reactor-netty-0.8.2.RELEASE.jar:0.8.2.RELEASE] 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) ~[netty-transport-4.1.29.Final.jar:4.1.29.Final] 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) ~[netty-transport-4.1.29.Final.jar:4.1.29.Final] 	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) ~[netty-transport-4.1.29.Final.jar:4.1.29.Final] 	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102) ~[netty-codec-4.1.29.Final.jar:4.1.29.Final] 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) ~[netty-transport-4.1.29.Final.jar:4.1.29.Final] 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) ~[netty-transport-4.1.29.Final.jar:4.1.29.Final] 	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) ~[netty-transport-4.1.29.Final.jar:4.1.29.Final] 	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438) ~[netty-transport-4.1.29.Final.jar:4.1.29.Final] 	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:310) ~[netty-codec-4.1.29.Final.jar:4.1.29.Final] 	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:284) ~[netty-codec-4.1.29.Final.jar:4.1.29.Final] 	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253) ~[netty-transport-4.1.29.Final.jar:4.1.29.Final] 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) ~[netty-transport-4.1.29.Final.jar:4.1.29.Final] 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) ~[netty-transport-4.1.29.Final.jar:4.1.29.Final] 	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) ~[netty-transport-4.1.29.Final.jar:4.1.29.Final] 	at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1429) ~[netty-handler-4.1.29.Final.jar:4.1.29.Final] 	at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1199) ~[netty-handler-4.1.29.Final.jar:4.1.29.Final] 	at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1243) ~[netty-handler-4.1.29.Final.jar:4.1.29.Final] 	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:489) ~[netty-codec-4.1.29.Final.jar:4.1.29.Final] 	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:428) ~[netty-codec-4.1.29.Final.jar:4.1.29.Final] 	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:265) ~[netty-codec-4.1.29.Final.jar:4.1.29.Final] 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) ~[netty-transport-4.1.29.Final.jar:4.1.29.Final] 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) ~[netty-transport-4.1.29.Final.jar:4.1.29.Final] 	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) ~[netty-transport-4.1.29.Final.jar:4.1.29.Final] 	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1434) ~[netty-transport-4.1.29.Final.jar:4.1.29.Final] 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) ~[netty-transport-4.1.29.Final.jar:4.1.29.Final] 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) ~[netty-transport-4.1.29.Final.jar:4.1.29.Final] 	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:965) ~[netty-transport-4.1.29.Final.jar:4.1.29.Final] 	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) ~[netty-transport-4.1.29.Final.jar:4.1.29.Final] 	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:628) ~[netty-transport-4.1.29.Final.jar:4.1.29.Final] 	at io.netty.channel.nio.NioEventLoop.processSelectedKeysPlain(NioEventLoop.java:528) ~[netty-transport-4.1.29.Final.jar:4.1.29.Final] 	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:482) ~[netty-transport-4.1.29.Final.jar:4.1.29.Final] 	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:442) ~[netty-transport-4.1.29.Final.jar:4.1.29.Final] 	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884) ~[netty-common-4.1.29.Final.jar:4.1.29.Final] 	at java.base/java.lang.Thread.run(Thread.java:834) ~[na:na] ```  This is caused by the `Decoder` returning `null` when trying to parse the `""null""` value for data.  I have attached a custom `HttpMessageReader` (in Kotlin) that handles this situation by filtering these events. Obviously that does not work for the case where the user wants ""wrapped"" events,.  ---  **Affects:** 5.1.2  **Attachments:** - [NestSseDecoder.kt](https://jira.spring.io/secure/attachment/26101/NestSseDecoder.kt) (_2.77 kB_)  **Issue Links:** - #22043 ServerSentEventHttpMessageReader leaves a leading space on field decoding","closed","type: enhancement,","spring-projects-issues","2018-11-17T19:25:23Z","2019-01-18T23:33:06Z"
"","21992","Aliases in parameter annotations on a controller interface are not evaluated [SPR-17460]","**[Bogdan Zafirov](https://jira.spring.io/secure/ViewProfile.jspa?name=bogdan.zafirov)** opened **[SPR-17460](https://jira.spring.io/browse/SPR-17460?redirect=false)** and commented  The problem is explained in this Stack Overflow answer: https://stackoverflow.com/a/8005644. As pointed out in the comment to this answer, this is ""problem"" is already solved in other frameworks such as Jersey.  The goal would be Spring Framework to consider/evaluate the annotations on interface methods (e.g. public void getUser(`@RequestParam`(""user-id"")), so a developer doesn't have to define the annotations in the implementing class again.  By generating a server implementation from a OAS3 contract (e.g. https://github.com/OpenAPITools/openapi-generator) one can easily face this problem, since the annotations from the generated code (a Java Interface) will not be evaluated on a HTTP call.  ---  **Affects:** 5.1.2  **Attachments:** - [rest-annotations.zip](https://jira.spring.io/secure/attachment/26085/rest-annotations.zip) (_69.61 kB_)  **Issue Links:** - #15682 Enable REST controller method parameter annotations on an interface  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/c58da71006cbc37c6bf062693c2d96a8fafab6f4","closed","type: bug,","spring-projects-issues","2018-11-02T11:19:34Z","2019-01-11T13:14:22Z"
"","21917","Clarify if @DependsOn influences bean destroy lifecycle ordering [SPR-17384]","**[Bob Tiernay](https://jira.spring.io/secure/ViewProfile.jspa?name=btiernay)** opened **[SPR-17384](https://jira.spring.io/browse/SPR-17384?redirect=false)** and commented  Currently it is unclear from the documentation if having a `@DependsOn` relationship between two beans implies that the dependant bean will be destroyed after the dependency:   https://docs.spring.io/spring/docs/current/spring-framework-reference/core.html#sect5  ??If you want to influence the startup creation order of certain beans, consider declaring some of them as `@Lazy`(for creation on first access instead of on startup) or as `@DependsOn` certain other beans (making sure that specific other beans are created before the current bean, beyond what the latter’s direct dependencies imply).??  https://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/context/annotation/DependsOn.html  ??Beans on which the current bean depends. Any beans specified are guaranteed to be created by the container before this bean. Used infrequently in cases where a bean does not explicitly depend on another through properties or constructor arguments, but rather depends on the side effects of another bean's initialization.??  However, the semantics of destroy are clear in the XML case:  https://docs.spring.io/spring/docs/current/spring-framework-reference/core.html#beans-factory-dependson  ??The `depends-on` attribute in the bean definition can specify both an initialization-time dependency and, in the case of [singleton](https://docs.spring.io/spring/docs/current/spring-framework-reference/core.html#beans-factory-scopes-singleton) beans only, a corresponding destroy-time dependency. Dependent beans that define a `depends-on` relationship with a given bean are destroyed first, prior to the given bean itself being destroyed. Thus, `depends-on` can also control shutdown order.??      ---  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/c73b98cf3328fd5eff0bdf67fed65d9bf26662d1, https://github.com/spring-projects/spring-framework/commit/00b7782b5f09c46f17b30ea0dda28f87efe242b8, https://github.com/spring-projects/spring-framework/commit/a3bdeb2c53161f6dcb6118650d62dc59ec44a3ca  **Backported to:** [5.0.11](https://github.com/spring-projects/spring-framework/milestone/192?closed=1), [4.3.21](https://github.com/spring-projects/spring-framework/milestone/170?closed=1)","closed","in: core,","spring-projects-issues","2018-10-15T16:00:46Z","2018-10-29T11:07:58Z"
"","21902","Method validation with @Validated not working [SPR-17369]","**[blaugold](https://jira.spring.io/secure/ViewProfile.jspa?name=blaugold)** opened **[SPR-17369](https://jira.spring.io/browse/SPR-17369?redirect=false)** and commented  I would like to use validation groups in my service layer to validate dtos, but am not able to trigger validation exceptions when using `@Validated` on a method parameter. `@Valid` works, but to use groups I need `@Validated` to work. I have isolated the issue in a reproduction repo which includes these minimal classes:  ```java class Obj(          @field:NotNull         var default: String? = """",          @field:NotNull(groups = [GroupA::class])         var groupA: String? = """"  ) {      interface GroupA      companion object {         val Valid = Obj()         val Invalid = Obj(null, null)         val DefaultInvalid = Obj(null, """")         val GroupAInvalid = Obj("""", null)     }  }  @Service @Validated class Service {      fun plainMethod(obj: Obj) {}      fun validMethod(@Valid obj: Obj) {}      fun validatedMethod(@Validated obj: Obj) {}      fun groupValidatedMethod(@Validated(Obj.GroupA::class) obj: Obj) {}  } ```  `Service.validMethod` throws as expected if `obj` is invalid (for default group constraints), but the methods where `@Validated` is used do not seem to validated `obj` at all.  I was not able to find any examples where `@Validated` is used in a service, only in controllers, but from the docs I got the impression this should work.   ---  **Affects:** 5.0.9  **Reference URL:** https://github.com/blaugold/spring-method-validation-issue","closed","in: core,","spring-projects-issues","2018-10-11T13:08:36Z","2019-01-12T16:20:48Z"
"","22074","Fix support of @ControllerAdvice registrations in the MockMvcBuilders standalone setup [SPR-17542]","**[Benoit BERAUD](https://jira.spring.io/secure/ViewProfile.jspa?name=benoit74)** opened **[SPR-17542](https://jira.spring.io/browse/SPR-17542?redirect=false)** and commented  MockMvcBuilders is supposed to support any kind of `@ControllerAdvice` (see #17348, especially last comment from [Rossen Stoyanchev](https://jira.spring.io/secure/ViewProfile.jspa?name=rstoya05-aop)).  Indeed it seems to work only with ExceptionHandlers.   See attached file for a test which succeeds (ExceptionHandlerTests, copied from Spring source code) and a failing test (GenericControllerAdviceTests, creation of my own). Files are also present here : https://gist.github.com/benoit74/651a9348120613e42b0e2ee4894a6e5e  Bug seems to be present since the implementation of #17348 (for instance bug seen in Spring Boot 1.5.17, e.g. Spring 4.3.20). A backport to 4.3 would be greatly appreciated (even if EOL is quite close ...).  ---  **Affects:** 5.1.2  **Attachments:** - [controllerAdvice.zip](https://jira.spring.io/secure/attachment/26113/controllerAdvice.zip) (_23.11 kB_)  **Issue Links:** - #17348 Support `@ControllerAdvice` registrations in the MockMvcBuilders standalone setup","closed","status: invalid,","spring-projects-issues","2018-11-27T14:11:09Z","2020-04-16T12:56:50Z"
"","22063","ActiveProfiles not working with meta-annotation [SPR-17531]","**[Benjamin Maurer](https://jira.spring.io/secure/ViewProfile.jspa?name=bmaurer)** opened **[SPR-17531](https://jira.spring.io/browse/SPR-17531?redirect=false)** and commented  DELETED  It was my mistake, not a bug. But I can't delete this issue myself...   ---  **Affects:** 5.1.2","closed","status: invalid,","spring-projects-issues","2018-11-22T10:48:30Z","2019-01-12T05:17:39Z"
"","21997","WebClient's UriBuilder option should encode path parameters passed into build [SPR-17465]","**[Benjamin Conlan](https://jira.spring.io/secure/ViewProfile.jspa?name=bjc)** opened **[SPR-17465](https://jira.spring.io/browse/SPR-17465?redirect=false)** and commented  When using the reactive web WebClient's uribuilder building a Uri path value doesn't get encoded as expected:  (Excuse code here... Composed from phone)  ```java webClient.get().uri(builder -> builder.path(""/{test}"").build(""encode/this"")) ```  Behaves differently to:  ```java webClient.get().uri(""/{test}"", ""encode/this"") ```  I would expect the url path segment in the 1st case to also be encoded.  ---  **Affects:** 5.0.8  **Issue Links:** - #22064 WebClient no longer encodes query parameters (_**""is duplicated by""**_)  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/24051619a5d67848ebee635170325d8842a2b445, https://github.com/spring-projects/spring-framework/commit/e4c84ec7576bc2986357b5bf12b646d663ef9730  **Backported to:** [5.0.11](https://github.com/spring-projects/spring-framework/milestone/192?closed=1)","closed","type: bug,","spring-projects-issues","2018-11-05T08:47:55Z","2020-03-17T21:44:03Z"
"","22047","Allow org.springframework.web.bind.annotation.RequestBody on fields (and setters) [SPR-17515]","**[Behrang Saeedzadeh](https://jira.spring.io/secure/ViewProfile.jspa?name=behrangsa)** opened **[SPR-17515](https://jira.spring.io/browse/SPR-17515?redirect=false)** and commented  Currently, the correct handler signature to handle a request such as  ```java POST http://localhost:8080/points?x=640&y=480 Content-Type: application/json  { ""circle"": { ""radius"": ""3.14"" } }  ```  is something like:  ```java @PostMapping public  CreateShapResponse createShape(CreateShapeParams params, @RequestBody CreateShapeBody body) {  }  @Data public class CreateShapeParams {      private Double x;      private Double y;  }  @Data public class CreateShapeBody {      private Circle;      @Data     public static class Circle {         private Double radius;     } } ```  It would be nice if it was possible to merge the `CreateShapeParams` and `CreateShapeBody` POJOs into one `CreateShapeRequest` and have a single argument handler method. Then we could rewrite the controller as:  ```java @PostMapping  public  CreateShapResponse createShape(CreateShapeRequest request) {  }   @Data public class CreateShapeRequest {      private Double x;      private Double y;      @RequestBody     private Body body;      @Data      public static class Body {           private Circle;           @Data         public static class Circle {             private Double radius;         }      } } ```  This would enable an API structure that is becoming more and more common.  For example, AWS SDKs have `XyzRequest` classes that encapsulate all the request details, from parameters to body and, IIRC, headers too (which means `org.springframework.web.bind.annotation.RequestHeader` should be allowed on POJO fields and setters too).  Response-side annotations (e.g. `ResponseBody`, `ResponseStatus`, etc.) should be allowed on fields (and setters) as well.   --- No further details from [SPR-17515](https://jira.spring.io/browse/SPR-17515?redirect=false)","open","type: enhancement,","spring-projects-issues","2018-11-18T13:42:39Z","2018-11-18T15:07:35Z"
"","21912","org.springframework.cglib (in particular org.springframework.cglib.proxy.Enhancer) are missing from the source code bundle [SPR-17379]","**[Behrang Saeedzadeh](https://jira.spring.io/secure/ViewProfile.jspa?name=behrangsa)** opened **[SPR-17379](https://jira.spring.io/browse/SPR-17379?redirect=false)** and commented  The `spring-core-5.0.9.RELEASE-sources.jar` file seem to be missing `org.springframework.cglib.proxy.Enhancer` and a number of other (or probably all) cglib `.java` files.     ---  **Affects:** 5.0.9  **Reference URL:** http://central.maven.org/maven2/org/springframework/spring-core/5.0.9.RELEASE/spring-core-5.0.9.RELEASE-sources.jar  **Issue Links:** - #21522 CGLIB source code not included in source jar (_**""duplicates""**_)","closed","in: core,","spring-projects-issues","2018-10-13T06:22:45Z","2019-01-12T16:44:19Z"
"","21911","Add a section to the documentation for setting a Spring project using Maven or Gradle [SPR-17378]","**[Behrang Saeedzadeh](https://jira.spring.io/secure/ViewProfile.jspa?name=behrangsa)** opened **[SPR-17378](https://jira.spring.io/browse/SPR-17378?redirect=false)** and commented  At the moment, there's only a small section in the docs that suggests users to use Spring Boot to get started: https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/overview.html#overview-getting-started  But there are times where users want to * Create plain old vanilla Spring projects, without any dependencies on Spring Boot. * Migrate old Spring projects to newer versions  There are a number of blog posts of varying qualities about how to approach this around the Web: * https://blog.frankel.ch/easier-spring-version-management/ (2014) * https://www.baeldung.com/spring-with-maven (2018)  Even older versions of Spring had this documented: * https://docs.spring.io/spring/docs/4.3.3.BUILD-SNAPSHOT/spring-framework-reference/html/overview.html * https://docs.spring.io/spring/docs/5.0.0.M5/spring-framework-reference/html/overview.html#dependency-management  Looks like somehow this has been omitted from the docs for newer versions of Spring.  It would be nice if this information was added back to the reference docs.      ---  **Affects:** 5.1 GA  **Reference URL:** https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/overview.html#overview-getting-started","closed","status: declined,","spring-projects-issues","2018-10-13T06:12:38Z","2020-04-01T18:49:05Z"
"","22020","Invalid encoding of MultiValueMap when using UriComponentsBuilder [SPR-17488]","**[Bartłomiej Mazur](https://jira.spring.io/secure/ViewProfile.jspa?name=gotofinal)** opened **[SPR-17488](https://jira.spring.io/browse/SPR-17488?redirect=false)** and commented  In my code I have simple endpoint that just accepts all parameters using `MultiValueMap` do some transforms and then ask other resource via GET request using      ```java UriComponentsBuilder.fromUriString(listingUri)      .path(LISTING_PATH)      .queryParams(parameters) // .encode() // or here, it still won't work.      .build()      .encode()      .toUri(); ```     And if some value of that map contains string like `2+3` then `+` will be not encoded. Even if it was already encoded when sent to my endpoint, spring will decode it inside that multimap and will not encode it again when creating URI from that map.     Note that I don't use templates here, I just need to pass reviced parameters to other service.   ---  **Affects:** 5.0.8","closed","status: declined,","spring-projects-issues","2018-11-13T10:51:10Z","2019-01-12T16:20:34Z"
"","22130","Enable/Disable CORS revisited [SPR-17598]","**[ayush-finix](https://jira.spring.io/secure/ViewProfile.jspa?name=ayush-finix)** opened **[SPR-17598](https://jira.spring.io/browse/SPR-17598?redirect=false)** and commented  Similar issue to #18266, however, disabling the cors processor doesn't work well enough.  We're building a proxy server where even the options requests should just be forwarded to the upstream, and the cors settings are somewhat interfering with this since there's CorsUtils.isPreflightRequest calls peppered around in various place (mostly referenced in the above ticket).  A few things I'd like to bring up:  After overriding RequestMappingHandlerMapping like  ```java public class CorsNoopHandlerMapping extends RequestMappingHandlerMapping {    public CorsNoopHandlerMapping() {     setOrder(0);  // Make it override the default handler mapping.   }    @Override   protected HandlerExecutionChain getCorsHandlerExecutionChain(HttpServletRequest request,       HandlerExecutionChain chain, CorsConfiguration config) {     return chain;  // Return the same chain it uses for everything else.   } } ```  in X extends WebMvcConfigurationSupport  ```java @Override protected RequestMappingHandlerMapping createRequestMappingHandlerMapping() {   return new CorsNoopHandlerMapping(); } ```  Disabling the cors processor and setting spring.mvc.dispatch-options-request=true still resolves a controller like the below to method 2     ```java @RequestMapping(path = ""/**"", method = {RequestMethod.OPTIONS})  method1() {}  @RequestMapping(path = ""/**"", method = {RequestMethod.DELETE, RequestMethod.GET, RequestMethod.HEAD, RequestMethod.POST, RequestMethod.PATCH, RequestMethod.PUT, RequestMethod.TRACE}) method2() {} ```  because the default RequestMethodsRequestCondition still checks preflight requests  https://github.com/spring-projects/spring-framework/blob/v5.1.2.RELEASE/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/condition/RequestMethodsRequestCondition.java#L108  Aside: Why are all the condition classes final?     There's seems to be a lot of hoops to jump through to just make **any** OPTIONS call (with Origin header for example) resolve to something like method1, and it's really unfortunate that there's no sane way to override the CorsUtils methods or just disable the feature entirely. Sorry if this isn't the right place to discuss this, and please let me know if there's any more information necessary.  ---  **Affects:** 5.1.2, 5.1.3  **Issue Links:** - #18266 Enable/Disable Spring CORS option","closed","status: declined,","spring-projects-issues","2018-12-13T00:40:11Z","2021-01-08T16:15:11Z"
"","22026","UserCredentialsDataSourceAdapter is not updating the credentials [SPR-17494]","**[Arunprasad](https://jira.spring.io/secure/ViewProfile.jspa?name=arunjumbo)** opened **[SPR-17494](https://jira.spring.io/browse/SPR-17494?redirect=false)** and commented  Hi Team,  I have a requirement like where I have a password to connect to database  which will be sent by different team through rest api. So in persistence context I connect to the service and get the password and create datasource object with the credentials, now since connection is made using persistence context it will create some active threads. But if suppose I am using the application and suddenly password changed and I have to get the updated password, since there is no functionality to check when the password is changed, I have to call the webservice before each database call in my application. If password is changed then I am using USerCredentialsDataSource Adaptor and setting the changed password, but issue here is even though password is changed the connections are still made with old password. So I am missing something in the code, please help.    ---  **Attachments:** - [Spring case.docx](https://jira.spring.io/secure/attachment/26097/Spring+case.docx) (_43.23 kB_)","open","in: data,","spring-projects-issues","2018-11-14T11:01:22Z","2019-01-11T13:27:01Z"
"","22143","TomcatHttpHandlerAdapter is not aware of Server[Request|Response]Wrapper [SPR-17611]","**[Arjen Poutsma](https://jira.spring.io/secure/ViewProfile.jspa?name=arjen.poutsma)** opened **[SPR-17611](https://jira.spring.io/browse/SPR-17611?redirect=false)** and commented  In `TomcatServerHttpRequest#createTomcatHttpHeaders`, it is assumed that the given `HttpServletRequest` is a `org.apache.catalina.connector.RequestFacade`, while it could be a `HttpServletRequestWrapper`. Similarly, `TomcatServerHttpResponse#createTomcatHttpHeaders` assumes that the given response is a `ResponseFacade`, while it could be a `HttpServletResponseWrapper`.    ---  **Affects:** 5.1.3  **Reference URL:** https://github.com/spring-projects/spring-boot/issues/15489  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/5e4a8966eecfa45404e47f2a21a999eebbabb8be","closed","type: bug,","spring-projects-issues","2018-12-19T11:03:21Z","2019-01-09T13:06:53Z"
"","22126","Composed RequestPredicates have invalid string representation [SPR-17594]","**[Arjen Poutsma](https://jira.spring.io/secure/ViewProfile.jspa?name=arjen.poutsma)** opened **[SPR-17594](https://jira.spring.io/browse/SPR-17594?redirect=false)** and commented  While using the ToStringVisitor, `GET(""/foo"").and(contentType(MediaType.TEXT_PLAIN)` results in the string ""((GET && /foo)Content-Type: text/plain)"" while it should be ""((GET && /foo) && Content-Type: text/plain)"". Note missing ""&&""   ---  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/058608021eac30e10d79ae0fd47b1b4936d6ce5d","closed","type: bug,","spring-projects-issues","2018-12-12T13:50:47Z","2019-01-09T13:06:53Z"
"","21981","Add abstract base classes for Encoder/Decoder [SPR-17449]","**[Arjen Poutsma](https://jira.spring.io/secure/ViewProfile.jspa?name=arjen.poutsma)** opened **[SPR-17449](https://jira.spring.io/browse/SPR-17449?redirect=false)** and commented  Recent reviews on `Encoder` and `Decoder` classes has shown that it is still too easy to make mistakes when creating them. We should add abstract base classes or helper classes that check common codec testing scenarios: * Encode a Flux of objects into a Flux of data buffers. Release the returned data buffers, but make sure that there are not other buffers which are still allocated. * Decode a Flux of data buffers into a Flux of objects. Make sure that all data buffers have been released. * As above, but with an error in the input stream. * As above, but cancel the stream after one received element.  ---  No further details from [SPR-17449](https://jira.spring.io/browse/SPR-17449?redirect=false)","closed","type: enhancement,","spring-projects-issues","2018-10-31T11:54:47Z","2019-01-13T19:55:09Z"
"","21952","Review encoders and message writers [SPR-17419]","**[Arjen Poutsma](https://jira.spring.io/secure/ViewProfile.jspa?name=arjen.poutsma)** opened **[SPR-17419](https://jira.spring.io/browse/SPR-17419?redirect=false)** and commented  Review encoders and message writers for both error and cancellation signals  ---  This issue is a sub-task of #21941","closed","type: task,","spring-projects-issues","2018-10-22T10:26:46Z","2019-01-11T13:17:42Z"
"","21951","Review decoders and message readers [SPR-17418]","**[Arjen Poutsma](https://jira.spring.io/secure/ViewProfile.jspa?name=arjen.poutsma)** opened **[SPR-17418](https://jira.spring.io/browse/SPR-17418?redirect=false)** and commented  Review decoders and message readers for  both error and cancellation signals.  ---  This issue is a sub-task of #21941","closed","type: task,","spring-projects-issues","2018-10-22T10:25:14Z","2019-01-11T13:17:44Z"
"","21944","Review DataBufferUtils [SPR-17411]","**[Arjen Poutsma](https://jira.spring.io/secure/ViewProfile.jspa?name=arjen.poutsma)** opened **[SPR-17411](https://jira.spring.io/browse/SPR-17411?redirect=false)** and commented  DataBufferUtils should handle both error and cancellation signals. Currently join does error only, while readByteChannel and readAsynchronousFileChannel do onDiscard which does both. Other methods like takeUntil to be reviewed.  ---  This issue is a sub-task of #21941","closed","type: task,","spring-projects-issues","2018-10-19T08:32:18Z","2019-01-11T13:17:33Z"
"","21900","Set BEST_MATCHING_HANDLER_ATTRIBUTE in WebFlux.fn [SPR-17367]","**[Arjen Poutsma](https://jira.spring.io/secure/ViewProfile.jspa?name=arjen.poutsma)** opened **[SPR-17367](https://jira.spring.io/browse/SPR-17367?redirect=false)** and commented  Assign the first matching handler function to the exchange attribute `HandlerMapping.BEST_MATCHING_HANDLER_ATTRIBUTE`.  ---  **Issue Links:** - #21797 Handler Interceptor Adapter in Spring WebFlux - #21928 WebFlux.fn puts wrong type of HandlerMapping.BEST_MATCHING_PATTERN_ATTRIBUTE  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/8de5c05af0015dca8aad94e474a33814c13539ad","closed","type: enhancement,","spring-projects-issues","2018-10-11T11:39:17Z","2019-01-11T13:13:20Z"
"","21999","Type annotations and generic types causing ArrayIndexOutOfBoundsException [SPR-17467]","**[aprantl](https://jira.spring.io/secure/ViewProfile.jspa?name=aprantl1)** opened **[SPR-17467](https://jira.spring.io/browse/SPR-17467?redirect=false)** and commented  We just tried upgrading our project to from Spring Framework 5.0.8 to 5.1.2 but unfortunately we hit a blocker which seems to be some kind of regression. At least my Google search yielded [a two year old ASM bug report](https://gitlab.ow2.org/asm/asm/issues/317615) which also have been fixed shortly after .  We are getting an `ArrayIndexOutOfBoundException` when initialising the ApplicationContext or when calling certain methods that make use of type annotations in the method body. Additionally, it seem to be necessary that the affected class inherits from a generic type.  I've attached a small test project that should help reproducing the bug. If you execute the test you should see the error. Downgrading the dependency to Spring Framework 5.0.8 solves the issue.  Our test systems use MacOs und CentOs with JDK 1.8.0_181.  ---  **Affects:** 5.1.2  **Attachments:** - [project.zip](https://jira.spring.io/secure/attachment/26084/project.zip) (_18.27 kB_)  **Issue Links:** - #22029 ArrayIndexOutOfBoundsException when reading metadata for a class that uses javax.validation.NotNull on a local variable (_**""is duplicated by""**_) - #18661 Type annotations cause ArrayIndexOutOfBoundsException in ASM ClassReader  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/2ac4355ec075fec77a8fbafd635fb4fefba81d4e  1 votes, 3 watchers","closed","in: core,","spring-projects-issues","2018-11-05T14:17:31Z","2019-01-11T13:14:25Z"
"","22132","Support for vararg message arguments in MessageSource [SPR-17600]","**[Ankur Pathak](https://jira.spring.io/secure/ViewProfile.jspa?name=ankur%20pathak)** opened **[SPR-17600](https://jira.spring.io/browse/SPR-17600?redirect=false)** and commented  Current message arguments are passed as Object Array and it is not elegant. Since now  Spring Framework is based on Java 8. We can support Vararg based message arguments  in MessageSource by using Java 8 Interface default methods which delegates calls to  Object Array based methods. And it will be a easy to go chage as we won't have to   implement those methods in any implementation of MessageSource.     I will be providing a pull request for this issue.   ---  **Affects:** 5.1.3  **Referenced from:** pull request https://github.com/spring-projects/spring-framework/pull/2053","closed","status: superseded,","spring-projects-issues","2018-12-14T04:44:44Z","2020-03-12T15:44:20Z"
"","22122","Add public EMPTY constant in StringUtils [SPR-17590]","**[Ankur Pathak](https://jira.spring.io/secure/ViewProfile.jspa?name=ankur%20pathak)** opened **[SPR-17590](https://jira.spring.io/browse/SPR-17590?redirect=false)** and commented  All spring projects are using """" as empty string. And """" is scattered at all places in all Spring projects. It would be better to add public constant  EMPTY in StringUtils and use it in all spring projects.   I will be providing a pull request for this issue.      ---  **Affects:** 5.1.3","closed","in: core,","spring-projects-issues","2018-12-11T15:52:39Z","2019-01-16T11:30:02Z"
"","21934","Doc: Support for validation in WebFlux.fn [SPR-17401]","**[Ankur Pathak](https://jira.spring.io/secure/ViewProfile.jspa?name=ankur%20pathak)** opened **[SPR-17401](https://jira.spring.io/browse/SPR-17401?redirect=false)** and commented  Well said, documnetation for Spring Web Flux functioal is just great as compared to controller  style. But it keeps silence on saying how to perform validation with Functional Style.  Either we should have documentation improvement mentioning how validation will be done  with functional style or we should have dedicate support for it.   ---  **Affects:** 5.0.10, 5.1 GA, 5.1.1  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/15f8863f19738ab3d3745f46ffe997ca6307b9f8  1 votes, 3 watchers","closed","type: documentation,","spring-projects-issues","2018-10-18T02:02:41Z","2019-01-09T13:06:52Z"
"","21933","Improve documentation on reactive types for ResponseEntity [SPR-17400]","**[Ankur Pathak](https://jira.spring.io/secure/ViewProfile.jspa?name=ankur%20pathak)** opened **[SPR-17400](https://jira.spring.io/browse/SPR-17400?redirect=false)** and commented  The documentation of Spring WebFlux Contoller Style is not proper and in general give three  example of using it: 1. Mono\ sayHello(){} 2. Flux\ sayHello(){} 3. ResponeEntity sayHello(){}  But what if I have Flux and Mono and I have custom headers to set, then what I have to do  no comment on that. I have seen many example on internet no one sure on that abd doing  the things as per their wish for example: 1. ResponseEntity> sayHello() {} 2. ResponseEntity> sayHello() {} 3. Mono> sayHello() {} : May be blocking 4. Mono> sayHello() {} Its Blocking  What is the correct way of doing it?? Please improve the documentation to cover these cases.  Or Provide the Support for Mono And Flux in ResponseEntity itself like: 1. ResponseEntity.publisher(someMono).ok; 2. ResponseEntity.publisher(someFlux).noResponse();  Its a blocker in migrating projects in Spring MVC to Spring Flux. Till the time documentation  or support improvement is done, Please provide the correct solution in current situation.     All these cases are properly covered for functional style and should be properly covered for  controller style as well.      ---  **Affects:** 5.0.10, 5.1.1  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/2eae37dde038cdc92a08a41d083f7b9c7cd0074d, https://github.com/spring-projects/spring-framework/commit/d492d7b6a44f779f296ab6fbf236a51aa30d1805  **Backported to:** [5.0.11](https://github.com/spring-projects/spring-framework/milestone/192?closed=1)","closed","in: web,","spring-projects-issues","2018-10-18T01:52:15Z","2018-10-29T11:07:58Z"
"","22118","spring-jcl routes logging inefficiently against SLF4J with log4j-to-slf4j setup [SPR-17586]","**[Andy Wilkinson](https://jira.spring.io/secure/ViewProfile.jspa?name=awilkinson)** opened **[SPR-17586](https://jira.spring.io/browse/SPR-17586?redirect=false)** and commented  If `org.apache.logging.log4j.spi.ExtendedLogger` (part of `log4j-api`) is on the classpath, `spring-jcl` will produce a `org.apache.commons.logging.Log` that logs by delegating to the Log4j2 API. In a setup where Log4j 2's implementation is not on the classpath and its `log4j-to-slf4j` module is being used to route logging performed via the Log4j 2 API into SLF4J, this isn't as efficient as it could be. It leaves logging being routed as follows:  `Commons Logging -> Log4j2 -> SLF4J -> Logging back end`  If a check was made for a type from `log4j-core` before choosing to route into Log4j2, this could be more efficient in `log4j-core`'s absence:  `Commons Logging -> SLF4J -> Logging back end`  ---  **Affects:** 5.0.11, 5.1.3  **Issue Links:** - #21835 java.lang.AbstractMethodError: org.apache.commons.logging.LogFactory.setAttribute(..) - #21127 Allow spring-jcl to be found by Commons Logging's service discovery - #19081 Revisit Commons Logging vs java.util.logging vs SLF4J vs Log4j 2  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/4b4503085a41b21c3de4612180946c87d1fca3f6","closed","type: enhancement,","spring-projects-issues","2018-12-10T17:10:48Z","2019-01-11T13:28:50Z"
"","22084","Using @ComponentScan on a @Configuration class causes temporary unconditional bean registration [SPR-17552]","**[Andy Wilkinson](https://jira.spring.io/secure/ViewProfile.jspa?name=awilkinson)** opened **[SPR-17552](https://jira.spring.io/browse/SPR-17552?redirect=false)** and commented  Please see the referenced Spring Boot issue for a sample that reproduces the problem and my analysis of the cause.   ---  **Affects:** 5.1.3  **Reference URL:** https://github.com/spring-projects/spring-boot/issues/15348","open","in: core,","spring-projects-issues","2018-11-30T11:14:44Z","2019-01-11T13:30:26Z"
"","22029","ArrayIndexOutOfBoundsException when reading metadata for a class that uses javax.validation.NotNull on a local variable [SPR-17497]","**[Andy Wilkinson](https://jira.spring.io/secure/ViewProfile.jspa?name=awilkinson)** opened **[SPR-17497](https://jira.spring.io/browse/SPR-17497?redirect=false)** and commented  ``` org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [D:\dev\oss\okb\target\classes\de\thd\okb\component\MailHelper.class]; nested exception is java.lang.ArrayIndexOutOfBoundsException: 257 	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:454) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE] 	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:316) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE] 	at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:275) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE] 	at org.springframework.context.annotation.ComponentScanAnnotationParser.parse(ComponentScanAnnotationParser.java:132) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE] 	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:287) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE] 	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:242) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE] 	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:199) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE] 	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:167) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE] 	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:315) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE] 	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:232) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE] 	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:275) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE] 	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:95) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE] 	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:691) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE] 	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:528) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE] 	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140) ~[spring-boot-2.1.0.RELEASE.jar:2.1.0.RELEASE] 	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775) [spring-boot-2.1.0.RELEASE.jar:2.1.0.RELEASE] 	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) [spring-boot-2.1.0.RELEASE.jar:2.1.0.RELEASE] 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316) [spring-boot-2.1.0.RELEASE.jar:2.1.0.RELEASE] 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260) [spring-boot-2.1.0.RELEASE.jar:2.1.0.RELEASE] 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248) [spring-boot-2.1.0.RELEASE.jar:2.1.0.RELEASE] 	at de.thd.okb.OkbApplication.main(OkbApplication.java:38) [classes/:na] Caused by: java.lang.ArrayIndexOutOfBoundsException: 257 	at org.springframework.asm.ClassReader.readLabel(ClassReader.java:2440) ~[spring-core-5.1.2.RELEASE.jar:5.1.2.RELEASE] 	at org.springframework.asm.ClassReader.createLabel(ClassReader.java:2456) ~[spring-core-5.1.2.RELEASE.jar:5.1.2.RELEASE] 	at org.springframework.asm.ClassReader.readTypeAnnotations(ClassReader.java:2522) ~[spring-core-5.1.2.RELEASE.jar:5.1.2.RELEASE] 	at org.springframework.asm.ClassReader.readCode(ClassReader.java:1686) ~[spring-core-5.1.2.RELEASE.jar:5.1.2.RELEASE] 	at org.springframework.asm.ClassReader.readMethod(ClassReader.java:1275) ~[spring-core-5.1.2.RELEASE.jar:5.1.2.RELEASE] 	at org.springframework.asm.ClassReader.accept(ClassReader.java:679) ~[spring-core-5.1.2.RELEASE.jar:5.1.2.RELEASE] 	at org.springframework.asm.ClassReader.accept(ClassReader.java:391) ~[spring-core-5.1.2.RELEASE.jar:5.1.2.RELEASE] 	at org.springframework.core.type.classreading.SimpleMetadataReader.(SimpleMetadataReader.java:65) ~[spring-core-5.1.2.RELEASE.jar:5.1.2.RELEASE] 	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:103) ~[spring-core-5.1.2.RELEASE.jar:5.1.2.RELEASE] 	at org.springframework.core.type.classreading.CachingMetadataReaderFactory.getMetadataReader(CachingMetadataReaderFactory.java:123) ~[spring-core-5.1.2.RELEASE.jar:5.1.2.RELEASE] 	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:430) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE] 	... 20 common frames omitted ```  Please see the referenced Spring Boot issue for a sample that reproduces the problem when run using Java 8.  ---  **Affects:** 5.1.2  **Reference URL:** https://github.com/spring-projects/spring-boot/issues/15178  **Issue Links:** - #21999 Type annotations and generic types causing ArrayIndexOutOfBoundsException (_**""duplicates""**_)","closed","in: core,","spring-projects-issues","2018-11-15T09:41:59Z","2019-01-12T16:44:15Z"
"","21907","MethodValidationPostProcessor validates FactoryBean methods for which validation is not applicable [SPR-17374]","**[Andy Wilkinson](https://jira.spring.io/secure/ViewProfile.jspa?name=awilkinson)** opened **[SPR-17374](https://jira.spring.io/browse/SPR-17374?redirect=false)** and commented  Please see the referenced Spring Boot issue for some background. I've also attached a sample project that reproduces the StackOverflowError that's caused by an attempt to validate a factory bean's `getObjectType()` method while trying to retrieve the `Validator` from the context due to the validator being `@Lazy`.  As described in the Boot issue, my investigation of the problem has led me to wonder if `MethodValidationPostProcessor` is doing more than it should. In this particular case, the `FactoryBean` is annotated with `@Validated` but its `getObjectType()` method is not annotated with any validation annotations. As such, I would not expect a call to that method to attempt to use the `Validator` which, due to its laziness, then triggers an attempt to retrieve the `Validator` from the context which causes the factory bean's `getObjectType()` method to be called again.     ---  **Affects:** 4.3.19, 5.0.9, 5.1 GA  **Reference URL:** https://github.com/spring-projects/spring-boot/issues/13922  **Attachments:** - [lazy-validator-problem.zip](https://jira.spring.io/secure/attachment/26048/lazy-validator-problem.zip) (_49.12 kB_)  **Issue Links:** - #21919 MethodValidationPostProcessor still validates FactoryBean methods on CGLIB proxies - #21964 MethodValidationPostProcessor does not support JDK proxy from FactoryBean  **Backported to:** [5.0.10](https://github.com/spring-projects/spring-framework/milestone/191?closed=1), [4.3.20](https://github.com/spring-projects/spring-framework/milestone/169?closed=1)","closed","in: core,","spring-projects-issues","2018-10-12T14:18:37Z","2019-01-11T13:12:35Z"
"","22138","@Profile mishandles ""not"" operand mixed with ""&"" [SPR-17606]","**[Andrzej Leśkiewicz](https://jira.spring.io/secure/ViewProfile.jspa?name=endriu_l)** opened **[SPR-17606](https://jira.spring.io/browse/SPR-17606?redirect=false)** and commented  I encountered strange bug with regard to handling of `Profile` conditions and active profiles. Below is a table describing tested combinations and expected results |`@Profile` value|Active profiles|Expected result|Actual result| |:---|:---|:---|:---| |!a & b|b|true|true| |b & !a|b|true|true| |**!a & b**|a|false|**true**| |b & !a|a|false|false| |!a & b|ab|false|false| |b & !a|ab|false|false|  As shown in the table above, test **notAandBShouldNotAcceptWhenAActive** should not accept the bean, but it does, and just different order of operations in `@Profile` is enough to behave accordingly. Tests were performed on JDK8. I created simple project to verify it and linked it with this issue.     Junit test ot reproduce is as follows:   ```java @Test public void notAandBShouldNotAcceptWhenAActive() throws Exception {     // given     Profiles notAAndB = Profiles.of(""!a & b"");     AbstractEnvironment environment = new MockEnvironment();     environment.setActiveProfiles(""a"");     // when     boolean acceptsProfiles = environment.acceptsProfiles(notAAndB);     // then     assertThat(acceptsProfiles).isFalse(); } ```  ---  **Affects:** 5.1.3  **Reference URL:** https://github.com/aleskiewicz/spring-profiles-operators-test  **Issue Links:** - #17063 Support AND operator in `@Profile` annotation  **Referenced from:** pull request https://github.com/spring-projects/spring-framework/pull/2066, and commits https://github.com/spring-projects/spring-framework/commit/952045c216d5d95e0dcfed346b6f06f8303bd13b","closed","in: core,","spring-projects-issues","2018-12-18T13:33:30Z","2019-01-12T20:05:59Z"
"","22000","Spring AOP interacting with Mockk [SPR-17468]","**[amir20001](https://jira.spring.io/secure/ViewProfile.jspa?name=amir20001)** opened **[SPR-17468](https://jira.spring.io/browse/SPR-17468?redirect=false)** and commented  I have this simple service.  ```java @Service public class Foo {      @Retryable(include = {SocketTimeoutException.class, SocketException.class}, backoff = @Backoff(random = true, multiplier = 5))     public void bar (){         System.out.println(""here"");     } } ```     When i try to mock this service for an integration test with the following code.  ```java @Bean @Primary fun foo() = mockk() ```   i get this stack trace.           ```java Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'foo' defined in com.foo.test: Initialization of bean failed; nested exception is org.springframework.aop.framework.AopConfigException: Could not generate CGLIB subclass of class com.foo.service.Foo$ByteBuddy$vscid5z3$ByteBuddy$LSYFaVIs: Common causes of this problem include using a final class or a non-visible class; nested exception is org.springframework.cglib.core.CodeGenerationException: java.lang.NoClassDefFoundError-->com/foo/service/Foo$ByteBuddy$vscid5z3$ByteBuddy$LSYFaVIs 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:584) 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498) 	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) 	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) 	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) 	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) 	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:846) 	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:863) 	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546) 	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775) 	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) 	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316) 	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127) 	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99) 	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117) 	... 24 more Caused by: org.springframework.aop.framework.AopConfigException: Could not generate CGLIB subclass of class com.foo.service.Foo$ByteBuddy$vscid5z3$ByteBuddy$LSYFaVIs: Common causes of this problem include using a final class or a non-visible class; nested exception is org.springframework.cglib.core.CodeGenerationException: java.lang.NoClassDefFoundError-->com/foo/service/Foo$ByteBuddy$vscid5z3$ByteBuddy$LSYFaVIs 	at org.springframework.aop.framework.CglibAopProxy.getProxy(CglibAopProxy.java:208) 	at org.springframework.aop.framework.ProxyFactory.getProxy(ProxyFactory.java:110) 	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.createProxy(AbstractAutoProxyCreator.java:473) 	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.wrapIfNecessary(AbstractAutoProxyCreator.java:352) 	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessAfterInitialization(AbstractAutoProxyCreator.java:301) 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:434) 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1749) 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:576) 	... 38 more Caused by: org.springframework.cglib.core.CodeGenerationException: java.lang.NoClassDefFoundError-->com/foo/service/Foo$ByteBuddy$vscid5z3$ByteBuddy$LSYFaVIs 	at org.springframework.cglib.core.ReflectUtils.defineClass(ReflectUtils.java:526) 	at org.springframework.cglib.core.AbstractClassGenerator.generate(AbstractClassGenerator.java:359) 	at org.springframework.cglib.proxy.Enhancer.generate(Enhancer.java:582) 	at org.springframework.cglib.core.AbstractClassGenerator$ClassLoaderData$3.apply(AbstractClassGenerator.java:106) 	at org.springframework.cglib.core.AbstractClassGenerator$ClassLoaderData$3.apply(AbstractClassGenerator.java:104) 	at org.springframework.cglib.core.internal.LoadingCache$2.call(LoadingCache.java:54) 	at java.util.concurrent.FutureTask.run(FutureTask.java:266) 	at org.springframework.cglib.core.internal.LoadingCache.createEntry(LoadingCache.java:61) 	at org.springframework.cglib.core.internal.LoadingCache.get(LoadingCache.java:34) 	at org.springframework.cglib.core.AbstractClassGenerator$ClassLoaderData.get(AbstractClassGenerator.java:130) 	at org.springframework.cglib.core.AbstractClassGenerator.create(AbstractClassGenerator.java:315) 	at org.springframework.cglib.proxy.Enhancer.createHelper(Enhancer.java:569) 	at org.springframework.cglib.proxy.Enhancer.createClass(Enhancer.java:416) 	at org.springframework.aop.framework.ObjenesisCglibAopProxy.createProxyClassAndInstance(ObjenesisCglibAopProxy.java:58) 	at org.springframework.aop.framework.CglibAopProxy.getProxy(CglibAopProxy.java:205) 	... 45 more Caused by: java.lang.NoClassDefFoundError: com/foo/service/Foo$ByteBuddy$vscid5z3$ByteBuddy$LSYFaVIs 	at java.lang.ClassLoader.defineClass1(Native Method) 	at java.lang.ClassLoader.defineClass(ClassLoader.java:763) 	at sun.reflect.GeneratedMethodAccessor23.invoke(Unknown Source) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.springframework.cglib.core.ReflectUtils.defineClass(ReflectUtils.java:523) 	... 59 more Caused by: java.lang.ClassNotFoundException: com.foo.service.Foo$ByteBuddy$vscid5z3$ByteBuddy$LSYFaVIs 	at java.net.URLClassLoader.findClass(URLClassLoader.java:381) 	at java.lang.ClassLoader.loadClass(ClassLoader.java:424) 	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349) 	at java.lang.ClassLoader.loadClass(ClassLoader.java:357) 	... 65 more ```     if I remove the Retryable annotation it works fine. this was also working in version: 5.0.7.RELEASE      ---  **Affects:** 5.1.2","closed","in: core,","spring-projects-issues","2018-11-05T14:48:43Z","2019-01-11T13:14:50Z"
"","22129","Duplicate word in spring docs [SPR-17597]","**[Amir Pashazadeh](https://jira.spring.io/secure/ViewProfile.jspa?name=pasha)** opened **[SPR-17597](https://jira.spring.io/browse/SPR-17597?redirect=false)** and commented  There is following sentence in docs:  > this information is encapsulated in a single single module      ---  **Affects:** 5.1.3  **Reference URL:** https://docs.spring.io/spring/docs/5.1.3.RELEASE/spring-framework-reference/core.html#aop-ataspectj-or-xml  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/ef72baad3a078c455157b7ed37737927a8691f5e","closed","type: documentation,","spring-projects-issues","2018-12-12T19:35:07Z","2019-01-09T13:06:53Z"
"","22113","Typo in SpEL Evaluation Context Sample [SPR-17581]","**[Amir Pashazadeh](https://jira.spring.io/secure/ViewProfile.jspa?name=pasha)** opened **[SPR-17581](https://jira.spring.io/browse/SPR-17581?redirect=false)** and commented  In the sample it is written  ```java EvaluationContext context = SimpleEvaluationContext().forReadOnlyDataBinding().build();  ```  but it must be  ```java EvaluationContext context = SimpleEvaluationContext.forReadOnlyDataBinding().build();  ```  And parentheses are redundant.   ---  **Affects:** 5.1.3  **Reference URL:** https://docs.spring.io/spring/docs/5.1.3.RELEASE/spring-framework-reference/core.html#expressions-type-conversion  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/b00f98fccf11bdcf8353f47fecb2933d556969c4, https://github.com/spring-projects/spring-framework/commit/288c97bd2d2436db15329ddc2a673ba0f67cfd47, https://github.com/spring-projects/spring-framework/commit/474ac2d9755718364b661e8acf3710c97a6cda09  **Backported to:** [5.0.12](https://github.com/spring-projects/spring-framework/milestone/193?closed=1), [4.3.22](https://github.com/spring-projects/spring-framework/milestone/171?closed=1)","closed","type: documentation,","spring-projects-issues","2018-12-08T01:06:11Z","2019-01-09T09:57:56Z"
"","22088","Error in reference documentation sentence in part 1.8.1. Customizing Beans by Using a BeanPostProcessor [SPR-17556]","**[Amir Pashazadeh](https://jira.spring.io/secure/ViewProfile.jspa?name=pasha)** opened **[SPR-17556](https://jira.spring.io/browse/SPR-17556?redirect=false)** and commented  In following paragraph  > The `org.springframework.beans.factory.config.BeanPostProcessor` interface consists of exactly two callback methods. When such a class is registered as a post-processor with the container, for each bean instance that is created by the container, the post-processor gets a callback from the container both before container initialization methods (such as `InitializingBean.afterPropertiesSet()`, **after** any declared init method) are called, and after any bean initialization callbacks. The post-processor can take any action with the bean instance, including ignoring the callback completely. A bean post-processor typically checks for callback interfaces, or it may wrap a bean with a proxy. Some Spring AOP infrastructure classes are implemented as bean post-processors in order to provide proxy-wrapping logic.  I believe after should be replaced with or,'cause statement in the parentheses is describing initializing methods.   ---  **Affects:** 5.1.3  **Reference URL:** https://docs.spring.io/spring/docs/5.1.3.RELEASE/spring-framework-reference/core.html#beans-factory-extension-bpp  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/5e153e4a77fc77ae0cbb6a632c97355aabfa00a0, https://github.com/spring-projects/spring-framework/commit/4decaa2da67e063ff3351c879271c5c8baf29412, https://github.com/spring-projects/spring-framework/commit/7a45d5fdae6a3cd7b96ad2ee564cce27fd3b027e  **Backported to:** [5.0.12](https://github.com/spring-projects/spring-framework/milestone/193?closed=1), [4.3.22](https://github.com/spring-projects/spring-framework/milestone/171?closed=1)","closed","type: documentation,","spring-projects-issues","2018-12-02T08:14:05Z","2019-01-09T09:57:56Z"
"","22068","Misleading alias definition example in reference documentation, part 1.3.1 [SPR-17536]","**[Amir Pashazadeh](https://jira.spring.io/secure/ViewProfile.jspa?name=pasha)** opened **[SPR-17536](https://jira.spring.io/browse/SPR-17536?redirect=false)** and commented  In the later example documentation describes a situation for Subsystem A and SubSystem B, the example must perform the same thing on both, but it does not. I believe its some typo in the example XML, and must become:    ```java   ```    ---  **Affects:** 5.1.2  **Reference URL:** https://docs.spring.io/spring/docs/5.1.2.RELEASE/spring-framework-reference/core.html#beans-beanname-alias  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/80b8382f00dcb2eb0a3fee8073f8de92aa57d09e, https://github.com/spring-projects/spring-framework/commit/0761446c0493e2603ce92e8c7b3cfdf081a0e285, https://github.com/spring-projects/spring-framework/commit/9600e015b7e9602a39af4fb446e7b2c3d1ea4e37  **Backported to:** [5.0.11](https://github.com/spring-projects/spring-framework/milestone/192?closed=1), [4.3.21](https://github.com/spring-projects/spring-framework/milestone/170?closed=1)","closed","type: documentation,","spring-projects-issues","2018-11-24T22:40:09Z","2018-11-27T08:59:03Z"
"","22041","Automatic unit test generation  :: Randoop [SPR-17509]","**[Amador Zamora](https://jira.spring.io/secure/ViewProfile.jspa?name=amadorzamora)** opened **[SPR-17509](https://jira.spring.io/browse/SPR-17509?redirect=false)** and commented  Hi everyone.  I write this post to know if there is a Spring project that generates classes of unit tests automatically ?.  I found one tool called Randoop (https://randoop.github.io/randoop/ and it works perfect, but I would like to know if there is any current integration with spring or with STS for randoop?     Best regards,      Amador   --- No further details from [SPR-17509](https://jira.spring.io/browse/SPR-17509?redirect=false)","closed","status: invalid,","spring-projects-issues","2018-11-17T18:28:00Z","2019-01-12T05:17:42Z"
"","22164","HttpHeaders.EMPTY is not immutable [SPR-17633]","**[Alfred Thomas](https://jira.spring.io/secure/ViewProfile.jspa?name=alfred.thomas)** opened **[SPR-17633](https://jira.spring.io/browse/SPR-17633?redirect=false)** and commented  According to the Javadoc, HttpHeaders.EMPTY is immutable. I found that by using the following code, headers could be added to HttpHeaders.EMPTY. From then on, any further calls will result in a non-empty HttpHeaders.  ```java HttpHeaders myHeaders = HttpHeaders.writableHttpHeaders(HttpHeaders.EMPTY); my.add(HttpHeaders.ACCEPT_ENCODING, ""gzip""); ```  I have written a simple unit test to explain this issue:  ```java @Test public void testUpdateEmptyHeaders() {     assertEquals(0, HttpHeaders.EMPTY.size()); // **Success**     HttpHeaders myHeaders = HttpHeaders.writableHttpHeaders(HttpHeaders.EMPTY);     myHeaders.add(HttpHeaders.ACCEPT_ENCODING, ""gzip"");     assertEquals(0, HttpHeaders.EMPTY.size()); // **Assert Fails** } ```  This caused a bug in my code where I subsequently used HttpHeaders.EMPTY again to create a new writable HttpHeaders object. I then unknowingly introduced headers used in the previous object  ---  **Affects:** 5.1.3  **Reference URL:** https://stackoverflow.com/questions/53982635/possible-bug-in-spring-httpheaders  **Issue Links:** - #21783 Improve WebFlux performance for header management  **Referenced from:** commits https://github.com/spring-projects/spring-framework/commit/6e3f974951b71b6566392f58135b71ffca6fd135","closed","type: bug,","spring-projects-issues","2019-01-02T10:45:40Z","2019-01-11T15:24:14Z"
"","22086","Doc: Producing JMS messages with JmsTemplate can cause problems with Artemis cluster [SPR-17554]","**[Alexander Kosarev](https://jira.spring.io/secure/ViewProfile.jspa?name=akosarev)** opened **[SPR-17554](https://jira.spring.io/browse/SPR-17554?redirect=false)** and commented  There is a service with _spring-boot-starter-activemq_ in dependencies. Producing JMS messages with JmsTemplate can cause problems with an Artemis cluster if the service connected to the cluster using ActiveMQ failover transport.  Message redistribution fails on one of the cluster nodes at some point, and then messages start to stick in a service queue with name like _$.artemis.internal.sf.CLUSTER_NAME.NODE_NAME_. The failed node can only receive messages from other cluster nodes after that but not send. Stuck messages can be delivered only after node's restart.  Typical stack trace on the failed node looks like:  ```java 2018-12-01 15:50:15,152 WARN  [org.apache.activemq.artemis.core.server] AMQ222151: removing consumer which did not handle a message, consumer=ClusterConnectionBridge@c7532ab [name=$.artemis.internal.sf.amq-cluster.da830009-f4bb-11e8-9942-96a451134f87, queue=QueueImpl[name=$.artemis.internal.sf.amq-cluster.da830009-f4bb-11e8-9942-96a451134f87, postOffice=PostOfficeImpl [server=ActiveMQServerImpl::serverUUID=ff7d54e0-f4bd-11e8-bb28-2cd05a8d61d6], temp=false]@35abb427 targetConnector=ServerLocatorImpl (identity=(Cluster-connection-bridge::ClusterConnectionBridge@c7532ab [name=$.artemis.internal.sf.amq-cluster.da830009-f4bb-11e8-9942-96a451134f87, queue=QueueImpl[name=$.artemis.internal.sf.amq-cluster.da830009-f4bb-11e8-9942-96a451134f87, postOffice=PostOfficeImpl [server=ActiveMQServerImpl::serverUUID=ff7d54e0-f4bd-11e8-bb28-2cd05a8d61d6], temp=false]@35abb427 targetConnector=ServerLocatorImpl [initialConnectors=[TransportConfiguration(name=amq-cluster-node01-connector, factory=org-apache-activemq-artemis-core-remoting-impl-netty-NettyConnectorFactory) ?port=61616&host=192-168-1-107], discoveryGroupConfiguration=null]]::ClusterConnectionImpl@1815556070[nodeUUID=ff7d54e0-f4bd-11e8-bb28-2cd05a8d61d6, connector=TransportConfiguration(name=amq-cluster-node02-connector, factory=org-apache-activemq-artemis-core-remoting-impl-netty-NettyConnectorFactory) ?port=61716&host=192-168-1-107, address=, server=ActiveMQServerImpl::serverUUID=ff7d54e0-f4bd-11e8-bb28-2cd05a8d61d6])) [initialConnectors=[TransportConfiguration(name=amq-cluster-node01-connector, factory=org-apache-activemq-artemis-core-remoting-impl-netty-NettyConnectorFactory) ?port=61616&host=192-168-1-107], discoveryGroupConfiguration=null]], message=Reference[363508]:NON-RELIABLE:CoreMessage[messageID=363508,durable=false,userID=null,priority=0, timestamp=0,expiration=0, durable=false, address=ActiveMQ.Advisory.TempQueue,size=1081,properties=TypedProperties[__HDR_BROKER_IN_TIME=1543661415147,_AMQ_ROUTING_TYPE=0,__HDR_GROUP_SEQUENCE=0,__HDR_COMMAND_ID=0,__HDR_DATASTRUCTURE=[0000 0066 0800 0000 0000 0178 0100 2849 443A 6173 6B2D 6C61 7074 6F70 2D33  ...  3061 2D38 3837 392D 6139 6536 6565 3664 3564 6331 0100 0000 0000 0000 0000),_AMQ_ROUTE_TO$.artemis.internal.sf.amq-cluster.da830009-f4bb-11e8-9942-96a451134f87=[0000 0000 0006 036B),bytesAsLongs(394091],_AMQ_DUPL_ID=ID:ask-laptop-46697-1543660919081-1:1:0:0:12817,__HDR_MESSAGE_ID=[0000 004C 6E00 017B 0100 2549 443A 6173 6B2D 6C61 7074 6F70 2D34 3636 3937  ...  0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 3211 0000 0000 0000 0000),__HDR_DROPPABLE=false,__HDR_ARRIVAL=0,__HDR_PRODUCER_ID=[0000 0039 7B01 0025 4944 3A61 736B 2D6C 6170 746F 702D 3436 3639 372D 3135  ... 33 3636 3039 3139 3038 312D 313A 3100 0000 0000 0000 0000 0000 0000 0000 00),JMSType=Advisory]]@614876900: java.lang.IndexOutOfBoundsException: writerIndex: 4 (expected: readerIndex(0) <= writerIndex <= capacity(0)) 	at io.netty.buffer.AbstractByteBuf.writerIndex(AbstractByteBuf.java:118) [netty-all-4.1.24.Final.jar:4.1.24.Final] 	at io.netty.buffer.WrappedByteBuf.writerIndex(WrappedByteBuf.java:129) [netty-all-4.1.24.Final.jar:4.1.24.Final] 	at org.apache.activemq.artemis.core.buffers.impl.ResetLimitWrappedActiveMQBuffer.writerIndex(ResetLimitWrappedActiveMQBuffer.java:128) [artemis-core-client-2.6.3.jar:2.6.3] 	at org.apache.activemq.artemis.core.buffers.impl.ResetLimitWrappedActiveMQBuffer.(ResetLimitWrappedActiveMQBuffer.java:60) [artemis-core-client-2.6.3.jar:2.6.3] 	at org.apache.activemq.artemis.core.message.impl.CoreMessage.internalWritableBuffer(CoreMessage.java:360) [artemis-core-client-2.6.3.jar:2.6.3] 	at org.apache.activemq.artemis.core.message.impl.CoreMessage.getBodyBuffer(CoreMessage.java:353) [artemis-core-client-2.6.3.jar:2.6.3] 	at org.apache.activemq.artemis.core.client.impl.ClientProducerImpl.doSend(ClientProducerImpl.java:242) [artemis-core-client-2.6.3.jar:2.6.3] 	at org.apache.activemq.artemis.core.client.impl.ClientProducerImpl.send(ClientProducerImpl.java:129) [artemis-core-client-2.6.3.jar:2.6.3] 	at org.apache.activemq.artemis.core.server.cluster.impl.BridgeImpl.deliverStandardMessage(BridgeImpl.java:743) [artemis-server-2.6.3.jar:2.6.3] 	at org.apache.activemq.artemis.core.server.cluster.impl.BridgeImpl.handle(BridgeImpl.java:619) [artemis-server-2.6.3.jar:2.6.3] 	at org.apache.activemq.artemis.core.server.impl.QueueImpl.handle(QueueImpl.java:2983) [artemis-server-2.6.3.jar:2.6.3] 	at org.apache.activemq.artemis.core.server.impl.QueueImpl.deliver(QueueImpl.java:2334) [artemis-server-2.6.3.jar:2.6.3] 	at org.apache.activemq.artemis.core.server.impl.QueueImpl.access$2000(QueueImpl.java:107) [artemis-server-2.6.3.jar:2.6.3] 	at org.apache.activemq.artemis.core.server.impl.QueueImpl$DeliverRunner.run(QueueImpl.java:3209) [artemis-server-2.6.3.jar:2.6.3] 	at org.apache.activemq.artemis.utils.actors.OrderedExecutor.doTask(OrderedExecutor.java:42) [artemis-commons-2.6.3.jar:2.6.3] 	at org.apache.activemq.artemis.utils.actors.OrderedExecutor.doTask(OrderedExecutor.java:31) [artemis-commons-2.6.3.jar:2.6.3] 	at org.apache.activemq.artemis.utils.actors.ProcessorBase.executePendingTasks(ProcessorBase.java:66) [artemis-commons-2.6.3.jar:2.6.3] 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [rt.jar:1.8.0_191] 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [rt.jar:1.8.0_191] 	at org.apache.activemq.artemis.utils.ActiveMQThreadFactory$1.run(ActiveMQThreadFactory.java:118) [artemis-commons-2.6.3.jar:2.6.3]2018-12-01 15:50:15,158 WARN  [org.apache.activemq.artemis.core.server.impl.QueueImpl] null: java.util.NoSuchElementException 	at org.apache.activemq.artemis.utils.collections.PriorityLinkedListImpl$PriorityLinkedListIterator.repeat(PriorityLinkedListImpl.java:172) [artemis-commons-2.6.3.jar:2.6.3] 	at org.apache.activemq.artemis.core.server.impl.QueueImpl.deliver(QueueImpl.java:2353) [artemis-server-2.6.3.jar:2.6.3] 	at org.apache.activemq.artemis.core.server.impl.QueueImpl.access$2000(QueueImpl.java:107) [artemis-server-2.6.3.jar:2.6.3] 	at org.apache.activemq.artemis.core.server.impl.QueueImpl$DeliverRunner.run(QueueImpl.java:3209) [artemis-server-2.6.3.jar:2.6.3] 	at org.apache.activemq.artemis.utils.actors.OrderedExecutor.doTask(OrderedExecutor.java:42) [artemis-commons-2.6.3.jar:2.6.3] 	at org.apache.activemq.artemis.utils.actors.OrderedExecutor.doTask(OrderedExecutor.java:31) [artemis-commons-2.6.3.jar:2.6.3] 	at org.apache.activemq.artemis.utils.actors.ProcessorBase.executePendingTasks(ProcessorBase.java:66) [artemis-commons-2.6.3.jar:2.6.3] 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [rt.jar:1.8.0_191] 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [rt.jar:1.8.0_191] 	at org.apache.activemq.artemis.utils.ActiveMQThreadFactory$1.run(ActiveMQThreadFactory.java:118) [artemis-commons-2.6.3.jar:2.6.3] ```  This problem doesn't occur with Spring Boot 1.5.18+, 2.0.7+ and 2.1.0+ if default properties are used. But it occurs if older versions of dependencies are used or JMS caching is disabled or plain ActiveMQConnectionFactory used instead of CachingConnectionFactory or PooledConnectionFactory.  Example project and configuration of cluster with 2 nodes are attached.     Tested on Artemis 2.6.3 and relative JBoss AMQ 7   ---  **Affects:** 4.3.21, 5.1.3  **Attachments:** - [broker_1.xml](https://jira.spring.io/secure/attachment/26129/broker_1.xml) (_9.01 kB_) - [broker_2.xml](https://jira.spring.io/secure/attachment/26128/broker_2.xml) (_9.01 kB_) - [sandbox-jms-test.zip](https://jira.spring.io/secure/attachment/26130/sandbox-jms-test.zip) (_72.13 kB_)","open","type: task,","spring-projects-issues","2018-12-01T11:28:49Z","2018-12-03T11:49:58Z"
"","22111","Add RouterFunction bean id to the RouterFunctions.Visitor [SPR-17579]","**[Alex Boyko](https://jira.spring.io/secure/ViewProfile.jspa?name=aboyko)** opened **[SPR-17579](https://jira.spring.io/browse/SPR-17579?redirect=false)** and commented  STS team attempts to find a spot in the source code that declares RM using functional style using the JSON data from the Actuator.  For example for the source code  ``` @Bean public RouterFunction route(VetsHandler vetsHandler) \{  	return RouterFunctions 		.route(RequestPredicates.GET(""/vets"").and(RequestPredicates.accept(MediaType.TEXT_PLAIN)), vetsHandler::vets) 		.andRoute(RequestPredicates.GET(""/vets.html""), vetsHandler::vetsHtml); } ```     We'd like to find for `/vets` and `/vets.html` routes the method:  ``` public RouterFunction route(...) ```  There are two pieces of data to help find the method: **predicate** and **handler.**  The handler data should be the most helpful in matching the method. However, based on the handler data we cannot match the `route()` method unfortunately. The lambda with magic numbers is useless in this case.  It'd be great if each router function could hold the id of the RouterFunction bean for example or expose the RouterFunction bean id in the `RouterFunctions.Visitor` such that instead of  ``` void route(RequestPredicate predicate, HandlerFunction handlerFunction) ```  we'd have:  ``` void route(RequestPredicate predicate, HandlerFunction handlerFunction, String beanId) ```  Down the stream Boot Actuator could pick that bean id and pass it down to JMX bean data for the functional RM. Thus we on the STS side could find the method defining bean with the id and then associate that place in the source code to a place where functional RM is defined.  Otherwise, currently actuator has an aggregate RouterFuctions object that has all RMs and extracts predicates and handlers for each RM from the aggregate RouterFuctions object with a help of RouterFunctions.Visitor  Here is the related Boot Actuator issue: https://github.com/spring-projects/spring-boot/issues/15230   ---  **Affects:** 5.1.3  **Reference URL:** https://github.com/spring-projects/spring-boot/issues/15230","closed","type: enhancement,","spring-projects-issues","2018-12-07T16:38:48Z","2018-12-11T11:10:28Z"
"","22156","RestTemplate can't set timeout pre request  [SPR-17624]","**[ailin zhou](https://jira.spring.io/secure/ViewProfile.jspa?name=ailin%20zhou)** opened **[SPR-17624](https://jira.spring.io/browse/SPR-17624?redirect=false)** and commented  Use RestTemplate send request to difference url, we want different request have different SocketTimeout parameter.   Currently RestTemplate doesn't have any interface costum timeout for pre request.   The HttpComponentsClientHttpRequestFactory can custum RequestConfig but when use with RestTemplate we have no chance to set timeout parameter.   --- No further details from [SPR-17624](https://jira.spring.io/browse/SPR-17624?redirect=false)","closed","type: enhancement,","spring-projects-issues","2018-12-25T09:30:55Z","2019-01-02T09:26:57Z"
"","22071","ResponseBodyAdvice should ignore non-match type instead throw exception [SPR-17539]","**[abccbaandy](https://jira.spring.io/secure/ViewProfile.jspa?name=abccbaandy)** opened **[SPR-17539](https://jira.spring.io/browse/SPR-17539?redirect=false)** and commented  When I use   ```java public class MyAdvice implements ResponseBodyAdvice ```  and my response data is  ```java ResponseEntity ```  ResponseBodyAdvice will throw ClassCastException, because we can't use ""supports"" to check the type. It make type declare in ResponseBodyAdvice interface useless.     Currently, there is a workaround, use Object  ```java ResponseBodyAdvice ```  and check the type in beforeBodyWrite, like this  ```java @Override public Object beforeBodyWrite(Object o, MethodParameter returnType, MediaType selectedContentType, Class> selectedConverterType, ServerHttpRequest request, ServerHttpResponse response) {     if (!(o instanceof MyVo)) {         return o;     }     // do rest things here } ```  but it doesn't look like a best practice.     update:  after study the source, I found there is a class cast before call beforeBodyWrite  RequestResponseBodyAdviceChain  ```java private  Object processBody(@Nullable Object body, MethodParameter returnType, MediaType contentType,       Class> converterType,       ServerHttpRequest request, ServerHttpResponse response) {     for (ResponseBodyAdvice advice : getMatchingAdvice(returnType, ResponseBodyAdvice.class)) {       if (advice.supports(returnType, converterType)) {          body = ((ResponseBodyAdvice) advice).beforeBodyWrite((T) body, returnType,                contentType, converterType, request, response);       }    }    return body; } ```  Can we check body is T before call beforeBodyWrite?   ---  **Affects:** 5.0.9","closed","type: enhancement,","spring-projects-issues","2018-11-27T04:14:35Z","2018-11-28T17:38:57Z"
"","22253","Fix typo in issue template","(obvious fix)","closed","","PascalSchumacher","2019-01-14T20:21:36Z","2019-01-15T00:27:47Z"
"","2042","Fix typo in core-beans.adoc","(obvious fix)","closed","","PascalSchumacher","2018-12-07T10:22:45Z","2018-12-07T10:30:50Z"
"","2037","Fix typo in core-beans.adoc","(obvious fix)","closed","","PascalSchumacher","2018-12-03T19:50:23Z","2018-12-03T20:22:41Z"
"","22322","Failed resource lookups when not starting application via maven spring-boot plugin","###### Disclaimer: I am aware that fully supporting the module system is a non-goal of Spring Boot and the Spring framework (or was, last I checked). This is merely hoping that a fix exists/is simple. If need be I'd be glad to have a go at it myself, alas my current understanding is a bit too limited at the moment, and all I know of the cause of the issue really boils down to a few shaky hypothesis.  Hello,  After a bit of fiddling, I got a Spring Boot app to run properly on the module-path via the `spring-boot:run` maven goal. (why even try using JPMS? long story short, because JavaFX sort-of needs it).  Split packages, required modules, dynamic proxies etc work fine, but one issue is left, some classpath resource issues with Spring when the application is not ran using that maven goal (i.e. when started like any other Java app).  #### Versions where I have had the issue (although it's not very relevant afaik) - Java 10, 11, 12 - Maven 3.6.0 (3.5.... as well) - Spring Boot 2.1.2 (no particular overrides, so basically Spring 5.1.4 under it) - No specific OS (same on the main 2 and a few linux distros)  #### Issue :  Running the main class ""normally"" instead of via the maven goal aforementioned yields various properties being undefined crashes with:  `Error creating ... 'entityManagerFactory' ... Invocation of init method failed; ... Unable to resolve persistence unit root URL ... class path resource [] cannot be resolved to URL because it does not exist`  #### The cause is :  The `defaultPersistenceUnitManager` looks up ""classpath:"" as a resource during initialization, and then this is transformed to a URL via the `ClassPathResource` class, entering  ```java protected URL resolveURL() { 	if (this.clazz != null) { 		return this.clazz.getResource(this.path); 	} 	else if (this.classLoader != null) { 		return this.classLoader.getResource(this.path); <-- issue here 	} 	else { 		return ClassLoader.getSystemResource(this.path); 	} } ``` and the difference is how the second branch of the `if` works between directly running or running via maven.  Via maven goal : `this.classLoader.getResource(this.path);` evaluates to `path/to/project/target/classes`  Without maven goal : `this.classLoader.getResource(this.path);` evaluates to `null`, which in turn makes the `ClassPathResource#exists` method return `false` and apparently generates confusion in the autoconfiguration.  That said, this is not only an auto-configuration issue as excluding this one (the Hibernate one) yields other issues that indicate that `application.properties` is not being read properly, or at least that keys defined in `.properties` files do not end up in the `Environment` as they should.  #### My current workaround :  The ""trick"", which gives me hope the solution is not too out of this world, which is using the `spring-boot:run` maven plugin+task.  I believe it might be working because it overrides the classloader of the main thread in [RunMojo#L94](https://github.com/spring-projects/spring-boot/blob/7b120c1c978eae7e3e333443881035ae7e838f95/spring-boot-project/spring-boot-tools/spring-boot-maven-plugin/src/main/java/org/springframework/boot/maven/RunMojo.java#L94) ?  This issue is either a question (sorry) if the fix is on the client side, or basically asking for guidance on how to go about it. Also I know this looks like it might be Spring Boot / Autoconfiguration related, but really it is about the `ClassUtils#getDefaultClassLoader` class loader behaving apparently slightly differently when in a module path, yet the Spring Boot plugin ""fixing"" it somehow (as if it just disabled modules my app would not start due to JavaFX 11 not really supporting the classpath anymore)  I will try to provide a sample project to demonstrate the issue asap. In the meantime, you can check it directly here : https://github.com/Tristan971/Lyrebird (clean install whole project and then start the lyrebird module's application class both via `mvn spring-boot:run` and by running the `Lyrebird` class.  Thank you for the (long, sorry again) read.","open","in: core,","Tristan971","2019-01-30T07:44:57Z","2021-11-12T12:17:47Z"
"","22535","Support for multiple external brokers","### The problem  `` effectively supports only one instance per application, which is a painful limitation in some projects. It would be much better if you could encapsulate different business concerns into separate endpoints with different sets of prefixes and other rules.  I debugged into the issue, trying to find out what could be done and realized that there was not much at the moment.  Specifically, `org.springframework.web.socket.config.MessageBrokerBeanDefinitionParser` has constants for the names for all beans it is registering, including an instance of `SimpMessagingTemplate` under the name `""brokerMessagingTemplate""`. This is even mentioned in [the official documentation](https://docs.spring.io/spring/docs/current/spring-framework-reference/web.html#websocket-stomp-user-destination):  > The bean name is `""brokerMessagingTemplate""` if required for qualification with `@Qualifier.`""  This design has its benefits because obviously `MessageBrokerBeanDefinitionParser` registers quite a couple of beans with some complex wiring. Hiding this complexity is a good thing in general. However, if you look more closely you must admit that this approach totally defeats the idea of IoC because there's nothing you can configure and tweak anymore. Everything is hard-wired, just like direct construction.  I'm sure there would be a better solution.  ### My current suggestion/vision  1. `` gets an optional argument named something like ""broker-messaging-template"" by which one can reference any own bean that is an instance of `SimpMessagingTemplate` to be used for this message broker. 2. There's another (yet to be implemented) bean definition parser that is able to create these beans, something like ``. If no other arguments are given, this creates the default wiring under the name/qualifier ""abc"". However you should be able to adjust everything (converters, channels, scheduler) if needed.","open","status: feedback-provided,","TLN2","2019-03-07T03:28:51Z","2021-01-16T01:13:31Z"
"","22526","@Transactional annotation can't establish dependency relationship between beans","### Problem Description  I use spring framework in my projects. In my application scenario, I need to use multiple data sources. In order to ensure that each data source transaction can be consistent and isolated from each other, I defined multiple transaction managers. I add the `@Transactional` annotation to the method that requires transaction processing and specify the specific transaction manager through `@Transactional(""transactionManager"")`.  The Spring container not only manages the bean lifecycle but also includes the management of the dependencies between the beans. For example, the dependencies between the beans that is woven by the `@Autowired` and `@Resource` annotations can be established, which in order to close the application correctly according to the bean dependencies.  However, I find the approach that the `@Transactional` annotation specifies the 'transactionManager' qualifier does not establish the dependency between the beans, so that an exception may occur when the application is closed and the bean is destroyed. For example, when the transaction manager bean is destroyed first, if other beans that depend on the transaction manager bean have not been destroyed, there will throw exceptions.  ### Java code below ```java @Component @Slf4j public class UserManager {      @Resource     private UserDao userDao;      @Transactional(""transactionManager"")     public UserEntity updateUserInfo(UserReq req) {         ...     }  } ```  ### Question  I don't understand the design that the `@Transactional` annotation can't establish the dependencies between the beans. What is the starting point of this design? If it is reasonable and acceptable, then how can we ensure that the dependencies can be established correctly?","open","status: feedback-provided,","upcgaolei","2019-03-06T07:43:34Z","2019-03-12T06:44:55Z"
"","22765","Introduce publishEvent() convenience method in TestContext","## Status Quo  It has always been possible for a `TestExecutionListener` to publish an `ApplicationEvent` to the current test's `ApplicationContext` via `testContext.getApplicationContext().publishEvent(new MyEvent())`; however, that resulted in undesirable loading of the `ApplicationContext` in some cases.  Typically people only want to publish events if the `ApplicationContext` is currently available.  The `testContext.hasApplicationContext()` support introduced in gh-22756 makes it possible to only publish events if the `ApplicationContext` is currently available as follows.  ```java if (testContext.hasApplicationContext()) { 	testContext.getApplicationContext().publishEvent(new MyEvent()); } ```  This issue aims to introduce a convenience method in the `TestContext` API that performs the above with lazy creation of the actual `ApplicationEvent`.  ## Deliverables  - [x] Introduce `publishEvent()` convenience method in `TestContext`.","closed","type: enhancement,","sbrannen","2019-04-08T12:39:39Z","2019-04-08T13:20:49Z"
"","22610","Short circuit merged annotation searches for marker annotations","## Status Quo  Annotation search algorithms that return merged annotations (e.g., `getMergedAnnotation()` and `findMergedAnnotation()` in `AnnotatedElementUtils`) currently perform a complex search, conversion of attributes to a map, and conversion back into a merged, synthesized annotation _even if_ the sought annotation is a ""marker annotation"" (i.e., an annotation with no attributes).  One could argue that the caller should never request Spring to find/get a merged annotation for a sought marker annotation; however, I have recently seen such a use case where the implementer was simply unaware of the fact that it doesn't make sense to merge non-existing attributes. On the other hand, some framework code may blindly invoke ""merging"" search algorithms simply because it is not known in advance if the sought annotation type is a marker annotation.  ## Proposal  Update affected search algorithms to forgo the expensive ""merged"" search and instead perform a simple search for the marker annotation (e.g., potentially via `getAnnotation()` or `findAnnotation()` in `AnnotationUtils`).  Note that if `AnnotationUtils.getAttributeMethods(Class annotationType)` returns an empty list, that means that the `annotationType` is a marker annotation.","closed","in: core,","sbrannen","2019-03-19T12:59:31Z","2019-06-20T12:56:11Z"
"","22756","Add support to query if ApplicationContext is available in the TestContext framework","## Status Quo  A custom `TestExecutionListener` can gain access to the test's `ApplicationContext` via `TestContext#getApplicationContext()`; however, there are times when a custom `TestExecutionListener` would like to know if the `ApplicationContext` is already available (i.e., has already been successfully loaded and cached) before proceeding with a particular action.  Invoking `TestContext#getApplicationContext()` just to see if the `ApplicationContext` can be loaded is not a good option, since that will eagerly load the context, potentially resulting in negative side effects.  ## Proposal  Introduce support in the TestContext framework that allows a `TestExecutionListener` to query whether the test's `ApplicationContext` has already been loaded.  ## Related Issues  - prerequisite for #18490  ## Deliverables  - [x] Introduce `boolean hasApplicationContext()` in the `TestContext` API. - [x] Introduce `boolean isContextLoaded(MergedContextConfiguration)` in the `CacheAwareContextLoaderDelegate` API.","closed","type: enhancement,","sbrannen","2019-04-06T13:23:39Z","2019-04-06T14:09:04Z"
"","22779","Deprecate mock JNDI support in the spring-test module","## Overview  The _mock_ JNDI support in the `org.springframework.mock.jndi` package is 15 years old, only partially implemented (see #22732), and typically not very useful for a modern Spring application where beans such as a `DataSource` should ideally be registered as stand-alone beans in the `ApplicationContext` and swapped out for integration tests (e.g., via bean definition profiles).  We should therefore deprecate this support and recommend that users use something better suited such as [Simple-JNDI](https://github.com/h-thurow/Simple-JNDI).  ## Related Issues  - #22732   ## Deliverables  - [x] Deprecate all types in the `org.springframework.mock.jndi` package in `spring-test`. - [x] Retain the repackaged copies in `org.springframework.tests.mock.jndi` in the `src/test/java` source tree of `spring-context` for internal testing purposes.","closed","type: task,","sbrannen","2019-04-10T13:45:13Z","2019-04-10T14:01:23Z"
"","22492","Introduce `mode` attribute in @Transactional","## Overview  I‘m TX-LCN distributed transaction framework developer (https://github.com/codingapi/tx-lcn).  Different distributed services may have different transaction modes under distributed systems. For example, there are three services A, B, and C, where A and C are relational databases. B is the NoSql variant. When A, B, and C participate in a transaction together, B cannot use the database variant for transaction management. B can adopt the TCC mode. Therefore, there are problems of coexistence of multiple transaction modes under this transaction. Our framework attempts to be unified with the JTA specification, but the extension of distributed transactions under tx is still annotated with `@Transactional`  Distributed transaction modes: TCC  LCN XA MQ TXC   ## Proposal  Introduce `mode` attribute in `@Transactional`.  ```java public @interface Transactional {   	//.... 	 	/** 	 * Transactional model ,local Transactional used default value 'local'. distributed transaction can change this param. 	 * @return Transactional model default local .  	 */ 	String mode() default ""local"";  	//.... } ```","closed","in: data,","1991wangliang","2019-02-28T10:11:17Z","2019-03-21T15:40:26Z"
"","22805","Upgrade to Gradle 5.4.x","## Overview  Gradle 5.4 has been released: https://docs.gradle.org/5.4/release-notes.html  Let's upgrade the Spring Framework build to Gradle 5.4.x during Spring Framework 5.2 development.  ## Related Issues  - gh-22347","closed","type: task,","sbrannen","2019-04-16T12:38:54Z","2019-04-16T13:02:13Z"
"","2060","Open parameter autowiring utility for external use","## Background  This PR is to open utility methods _used by_ the `SpringExtension` for JUnit Jupiter in `spring-test`.  These mechanisms can be used in other test frameworks, and are already very well documented and tested.  ## Proposal  Open autowiring utility methods in `ParameterAutowireUtils`, so they can be used by other frameworks.  ## Deliverables  - [x] Make `AutowireUtils` `public` and declare its current methods as package-private. - [x] Move functionality currently in `ParameterAutowireUtils` to `AutowireUtils` and make the `isAutowirable()` and `resolveDependency()` methods `public`. - [x] Refactor the `SpringExtension` to use `AutowireUtils` instead of `ParameterAutowireUtils`. - [x] Remove `ParameterAutowireUtils` from the `spring-test` module. - [x] Introduce unit tests in `AutowireUtilsTests` for `isAutowirable()` and `resolveDependency()`.","closed","type: enhancement,","ledoyen","2018-12-24T12:55:05Z","2019-03-22T12:53:46Z"
"","22467","Spring WebFlux and Undertow high cpu usage after perfromance test","# Spring Boot Version - spring-boot-starter-web:2.1.3.RELEASE  - spring-boot-starter-undertow:2.1.3.RELEASE - spring-boot-starter-webflux:2.1.3.RELEASE - jdk 1.8.0.191 # Problem  Hi,  I was testing performance of 2 microservices(genareted from start.spring.io):  - first microservice has one endpoint which returns String. I used spring-boot-starter-web:2.1.3.RELEASE and spring-boot-starter-undertow:2.1.3.RELEASE  - second microservice has one endpoint which consume data from first microservice though WebClient and returns Mono. I used spring-boot-starter-webflux:2.1.3.RELEASE and spring-boot-starter-undertow:2.1.3.RELEASE  After services started I ran performance test using wrk. After test finished I ran htop to check cpu usage and it was still high. Only restart of application helps.  After test cpu usage:       Also tested 2 other cases: - replaced WebClient with RestTemplate - changed server to Netty   and high cpu problem didn't occurs.  So it must be the problem with combination of WebClient and Undertow. In profiler I saw that 2 NIO threads were busy for 993ms/1000ms after test. Problem shows up only after high load.  I tried to debug through code and I found that state is REQUESTED and it looks like infinite loop which process same event. ![screen](https://user-images.githubusercontent.com/13002762/53044398-28bbb700-348b-11e9-999b-dce99205c65b.png)   # Reproduction steps Repository to reproduce problem with steps: https://github.com/lukidzi/springboot-undertow","closed","status: duplicate,","lukidzi","2019-02-19T20:33:57Z","2019-09-11T10:44:52Z"
"","22272","Got 404 with non-ASCII coded static resources in webflux","![image](https://user-images.githubusercontent.com/12087354/51299309-0507ea00-1a63-11e9-95d7-87b78bbbd96b.png) ![image](https://user-images.githubusercontent.com/12087354/51299322-105b1580-1a63-11e9-9b2d-7448eb9ddcce.png) I configed `spring.http.encoding.charset=UTF-8` and `spring.http.encoding.enabled=true` and `spring.http.encoding.force=true,` but webflux does't decoding the filename , so response me 404; PS: spring webmvc works fine","closed","type: bug,","BiLuoHen","2019-01-17T06:21:41Z","2019-04-06T01:55:08Z"
"","22809","Remove the PROPAGATION_ prefix in the documentation of enum Propagation","","closed","type: documentation,","johnlinp","2019-04-17T03:42:41Z","2019-04-30T00:27:47Z"
"","22801","fix #22800 Optimize mono bodies","","closed","status: duplicate,","smaldini","2019-04-15T19:58:51Z","2019-04-17T01:18:21Z"
"","22798","Support composite metadata in RSocketRequester and MessageHandlerAcceptor","","closed","type: enhancement,","rstoyanchev","2019-04-15T18:33:51Z","2019-06-13T01:25:07Z"
"","22768","Small typo in JavaDoc for UrlPathHelper.setUrlDecode() method","","closed","type: documentation,","ladislav-bozek","2019-04-08T15:30:05Z","2019-04-08T15:38:11Z"
"","22755","Fix broken asciidoc heading","","closed","type: task,","ttddyy","2019-04-06T01:46:12Z","2019-04-06T09:02:46Z"
"","22719","Remove deprecated AbstractHandlerMapping#getCorsConfigurations","","closed","type: task,","sdeleuze","2019-04-01T14:29:27Z","2019-04-01T15:49:52Z"
"","22718","Fix minor typo","","closed","type: task,","jKiler","2019-04-01T11:13:24Z","2019-04-01T22:08:43Z"
"","22709","Polish","","closed","type: task,","armansimonyan13","2019-03-29T21:16:56Z","2019-03-29T21:43:36Z"
"","22649","Fix minor typo on MergedAnnotations","","closed","type: task,","ttddyy","2019-03-24T15:00:39Z","2019-03-25T08:26:33Z"
"","22639","Fix grammar issue","","closed","type: task,","armansimonyan13","2019-03-22T08:19:30Z","2019-03-22T08:34:00Z"
"","22628","Fix grammar issue","","closed","type: task,","armansimonyan13","2019-03-21T14:50:26Z","2019-03-22T08:25:54Z"
"","22621","Fix grammar issues","","closed","type: task,","armansimonyan13","2019-03-20T19:42:00Z","2019-03-21T14:56:55Z"
"","22597","remove broken link ""overview.html#background-ioc"" in doc core.html","","closed","type: documentation,","lwjli","2019-03-15T08:18:25Z","2019-03-22T02:59:17Z"
"","22589","Fix typo","","closed","type: documentation,","valery1707","2019-03-13T15:59:20Z","2019-03-14T07:33:49Z"
"","22572","align setFetchSize javadoc with jdbcTemplate","","closed","type: task,","jorgheymans","2019-03-12T07:23:24Z","2019-03-12T08:13:08Z"
"","22556","Initial WhiteSource configuration file","","closed","","gate5","2019-03-10T20:35:27Z","2019-03-10T20:35:44Z"
"","22545","Migrate CacheControl to use java.time.Duration for durations","","closed","type: enhancement,","larsgrefer","2019-03-08T00:32:46Z","2019-03-08T08:20:20Z"
"","22500","fix typo in `my-property'","","closed","type: task,","DamianChlod","2019-03-03T20:38:38Z","2019-03-04T08:43:35Z"
"","22259","Code fix#202 1","","closed","status: invalid,","akshatcn","2019-01-15T10:08:13Z","2019-01-15T15:34:13Z"
"","22257","Upgrade to Commons-Fileupload 1.4","","closed","","mdeinum","2019-01-15T09:33:57Z","2019-01-24T16:53:23Z"
"","18152","ResourceLoaderAware is not a marker interface","","closed","type: documentation,","mhewedy","2019-01-11T08:40:50Z","2021-04-27T11:31:53Z"
"","2079","Allow testing with any value for Content-Type and Accept header in MockHttpServletRequestBuilder","","closed","type: enhancement,","dmitry87","2019-01-08T14:55:23Z","2019-12-13T17:04:43Z"
"","2077","SPR-17643: Accept of any contentType string representation","","closed","","dmitry87","2019-01-08T03:21:53Z","2019-01-08T13:36:49Z"
"","2067","fix MutablePropertySources concurrent modify error","","closed","","jxxiangwen","2019-01-02T13:30:59Z","2019-01-07T13:13:05Z"
"","2063","Use try-with-resources language construct where feasible","","closed","type: task,","igor-suhorukov","2018-12-28T21:29:26Z","2020-06-16T20:58:58Z"
"","2059","2018.12.20拉取","","closed","","gaoyining","2018-12-20T03:10:56Z","2018-12-20T08:10:20Z"
"","2057","Incorrect method name in comment","","closed","","kimsaabyepedersen","2018-12-17T20:35:52Z","2018-12-18T06:57:35Z"
"","2056","Myself","","closed","","hhaocode","2018-12-17T07:26:28Z","2018-12-17T08:49:38Z"
"","2052","Join together identical catch branches","","closed","","igor-suhorukov","2018-12-13T23:05:20Z","2018-12-25T08:47:47Z"
"","2049","Fix typo in javadoc","","closed","","wonwoo","2018-12-12T01:03:20Z","2018-12-12T07:03:17Z"
"","2036","Fix typo in core-beans.adoc (Obvious Fix)","","closed","","PascalSchumacher","2018-12-03T19:46:11Z","2018-12-03T21:09:07Z"
"","2032","Fix typo in Javadoc for transaction Propagation annotation","","closed","","berniegp","2018-11-29T16:46:30Z","2018-12-05T10:21:17Z"
"","2028","5.0.x","","closed","","sqnczzl","2018-11-26T14:29:56Z","2018-11-26T14:30:19Z"
"","2025","SPR-17535 - Remove fragment from URL before passing it to resource provider","","closed","","neVERberleRfellerER","2018-11-23T17:39:59Z","2018-11-26T21:29:18Z"
"","2019","Fix typos","","closed","","Hanope","2018-11-19T04:28:24Z","2018-11-19T07:54:08Z"
"","2018","Fix typos","","closed","","Hanope","2018-11-16T15:57:03Z","2018-11-18T00:19:38Z"
"","2014","SPR-17486 Fix NPE in ClientRequest","","closed","","joaoe","2018-11-12T11:03:42Z","2018-11-12T11:58:34Z"
"","2012","《Spring 源码深度解析》02-容器基本实现","","closed","","xmw9160","2018-11-08T13:43:08Z","2018-11-08T13:44:24Z"
"","2008","Optimize resource url resolving","","closed","","kamilszymanski","2018-11-04T16:40:02Z","2018-12-11T11:36:20Z"
"","2000","Remove unnecessary null check","","closed","","tiwarivikash","2018-10-26T01:34:18Z","2018-10-26T08:17:11Z"
"","1997","SPR-17402: Support list in IN clause in NamedParameterJdbcTemplate.batchUpdate","","closed","","Fuud","2018-10-21T14:29:39Z","2018-11-21T00:55:23Z"
"","1992","Punctuation","","closed","","nurkiewicz","2018-10-13T07:28:26Z","2018-10-13T08:45:14Z"