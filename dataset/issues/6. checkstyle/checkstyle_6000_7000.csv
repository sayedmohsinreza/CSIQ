"#","No","Issue Title","Issue Details","State","Labels","User name","created","Updated"
"","5330","Issue #5278: fix NullPointerException when relative path is used to r…","…un checkstyle CLI  Mandatory to understand and do: 0) The issue you are trying to fix/resolve has to have the ""approved"" label. 1) Put in the description of Pull Request the reference to an issue if it exists. Example: ""Issue: #XXXXXX"" 2) Commit message should adhere to the following rules:    a) Must match one of the following patterns:\n""       ^Issue #\\d+: .*$       ^Pull #\\d+: .*$       ^(minor|config|infra|doc|spelling): .*$    b) It contains only one line of text    c) Must not end with a period, space, or tab    d) Commit message should be less than or equal to 200 characters  To avoid multiple iterations of fixes and CIs failures, please read http://checkstyle.sourceforge.net/contributing.html  ATTENTION: We are not merging Pull Requests that are not passing our CIs, but we will help to resolve issues.  Thanks for reading, remove whole this message and type what you need.","closed","","travelerr","2017-12-07T00:53:58Z","2017-12-21T01:47:04Z"
"","5301","Issue #5268: False RedundantModifier violation for final method of en…","…um inside final class  Issue #5268","closed","","djydewang","2017-11-27T13:19:48Z","2018-01-13T13:41:17Z"
"","5079","Issue #5078: add dependency and put some result violations to ignore …","…to pass build  Issue #5078","closed","","romani","2017-09-06T11:36:17Z","2017-09-06T12:01:07Z"
"","5589","Issue #5489: Fixed indentation in writingfilefilters.xml & writingfil…","…ters.xml  Updated indentation in writingfilefilters.xml & writingfilters.xml #5489","closed","","varunu28","2018-03-08T03:05:34Z","2018-03-08T04:17:08Z"
"","5760","Issue #5279: ImportOrder: static imports can be separated by local gr…","…oups when they are at the top/bottom  Issue #5279  continuation of https://github.com/checkstyle/checkstyle/pull/5346","closed","","pbludov","2018-04-28T12:23:09Z","2018-07-12T07:12:05Z"
"","5346","Issue #5279: ImportOrder: static imports can be separated by local gr…","…oups when they are at the top/bottom  Fix for Issue #5279","closed","abandoned,","djydewang","2017-12-11T13:38:24Z","2018-05-04T12:32:50Z"
"","5366","Issue #5004: pitest: increase mutation coverage for pitest-checks-imp…","…orts profile to 100%  Issue #5004","closed","","djydewang","2017-12-19T12:33:11Z","2018-01-13T13:38:42Z"
"","5590","Issue #5489: Fixed indentation in writingjavadocchecks & writingliste…","…ners  Fixed indentation in writingjavadocchecks.xml.vm & writinglisteners.xml.vm #5489","closed","","varunu28","2018-03-08T16:55:20Z","2018-03-09T04:41:52Z"
"","5568","Issue #5489: Fixed indentation in config_modifier.xml & config_namin…","…g.xml  minor change in config_modifier.xml and fixed indentation in config_naming.xml #5489","closed","","varunu28","2018-02-28T19:17:16Z","2018-03-06T06:49:28Z"
"","5581","Issue #5489: Fixed indentation in config_sizes.xml & config_whitespac…","…e.xml  Minor change in config_sizes.xml & updated indentation in config_whitespace.xml #5489","closed","","varunu28","2018-03-06T23:32:13Z","2018-03-07T14:15:33Z"
"","5505","Use StringBuilder instead of StringBuffer as it offers high performan…","…ce in a single thread locations as is generally the case.  This edit was done in other pull request: https://github.com/checkstyle/checkstyle/pull/646","closed","miscellaneous,","reudismam","2018-02-02T12:26:27Z","2018-02-06T02:39:35Z"
"","5246","Removed maxLineLength property from javadoc, the property itself had been removed earlier","…been removed earlier","closed","miscellaneous,","balazsmaria","2017-10-31T14:03:29Z","2017-11-07T14:23:08Z"
"","5311","Issue #5154: Incorrect indentation check for method preceded by annot…","…ation, with method parameter on separate line  Issue #5154.","closed","","djydewang","2017-12-03T16:05:18Z","2018-01-13T13:40:49Z"
"","5534","Issue #5489: Fixed indentation in config_filters.xml & config_headers…","….xml  Related to #5489 Change in config_headers.xml & minor change in config_filters.xml","closed","","varunu28","2018-02-21T22:05:18Z","2018-02-23T23:15:57Z"
"","5340","Issue #4981: ImportOrder with order=bottom should disallow non-static…","… import after a static import   Fix for Issue #4981","closed","","djydewang","2017-12-10T11:06:50Z","2018-01-13T13:39:12Z"
"","5148","google_checks.xml: Public class and interface javadoc is not checked","~~~ /tmp$ javac Test.java ~~~  ~~~ /tmp$ cat Test.java public class Test { // No warning about missing Javadoc } ~~~    ~~~ /tmp$ java -Duser.language=en -Duser.country=US -jar checkstyle-8.2-all.jar \     -c /google_checks.xml Test.java Starting audit... Audit done. ~~~   Expected:  ~~~ /tmp$ java -Duser.language=en -Duser.country=US -jar checkstyle-8.2-all.jar \      -c google_checks.xml Test.java Starting audit... [WARN] /tmp/Test.java:1: Missing a Javadoc comment. [JavadocType] Audit done. ~~~  There should be a warning about missing javadoc for classes and interfaces.  See Google Java Style Guide  > At the minimum, Javadoc is present for every public class, and every public or protected member of such a class, with a few exceptions noted below.   (https://google.github.io/styleguide/javaguide.html#s7.3-javadoc-where-required)  Can be easily achieved by adding  ~~~       		 ~~~  to google_checks.xml  -------  **Migration notes:**  After activation of this Check in config there will be a lot of violation on test classes. Even project like Guava do not write comment on Test classes. We do believe that Google need to update style doc to mention this. Meanwhile we suggest optional usage of following filter in google config: ```                                        ```","closed","google style,","fpetry","2017-09-27T11:15:19Z","2020-11-22T07:24:53Z"
"","5471","Spelling : improve french translation","Wrong translations and double quote issues.","closed","","Jajawah","2018-01-18T15:05:27Z","2018-01-19T21:55:40Z"
"","5933","Issue #5916: add header for non-compiled sources","WIP , not for merge.  Issue #5916  all non-compilable should have header, if we run into case when test case can not have such header we can exclude it from search","closed","","romani","2018-06-16T01:44:49Z","2018-06-16T05:59:32Z"
"","5280","minor: change to see current coverage on Windows","wip","closed","","romani","2017-11-20T15:47:49Z","2017-11-22T22:35:59Z"
"","5182","TreeWalker is not thread safe","When running multiple threads, we can run into NPE because TreeSet is not thread safe  ``` Caused by: java.lang.NullPointerException 	at java.util.TreeMap.fixAfterInsertion(TreeMap.java:2295) 	at java.util.TreeMap.put(TreeMap.java:582) 	at java.util.TreeSet.add(TreeSet.java:255) 	at java.util.AbstractCollection.addAll(AbstractCollection.java:344) 	at java.util.TreeSet.addAll(TreeSet.java:312) 	at com.puppycrawl.tools.checkstyle.TreeWalker.notifyEnd(TreeWalker.java:411) 	at com.puppycrawl.tools.checkstyle.TreeWalker.walk(TreeWalker.java:367) 	at com.puppycrawl.tools.checkstyle.TreeWalker.processFiltered(TreeWalker.java:210) 	at com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck.process(AbstractFileSetCheck.java:82) 	at com.puppycrawl.tools.checkstyle.Checker.processFile(Checker.java:316) 	at com.puppycrawl.tools.checkstyle.Checker.processFiles(Checker.java:286) ```","closed","","hhuijser","2017-10-09T08:13:10Z","2017-10-10T02:50:13Z"
"","5828","custom checkstyle how to work in gradle?","when i run my custom checkstyle in gradle , that it meet an error like ""Unable to create a Checker: cannot initialize module TreeWalker - Unable to instantiate com.xx.ProhibitExtendCheck"", what i should do ? thx for your help.","closed","","beyondckw","2018-05-25T04:29:07Z","2018-05-25T04:33:01Z"
"","5996","Internal XPath Regression fails on RequireThisCheck","When I run all the IT tests in Eclipse on Windows, this is the only one that fails. `XpathRegressionRequireThisTest.testOne` ```` java.lang.AssertionError: Generated queries do not match expected ones expected:  but was:  	at org.junit.Assert.fail(Assert.java:88) 	at org.junit.Assert.failNotEquals(Assert.java:834) 	at org.junit.Assert.assertEquals(Assert.java:118) 	at org.checkstyle.suppressionxpathfilter.AbstractXpathRegressionTest.verifyXpathQueries(AbstractXpathRegressionTest.java:92) 	at org.checkstyle.suppressionxpathfilter.AbstractXpathRegressionTest.runVerifications(AbstractXpathRegressionTest.java:194) 	at org.checkstyle.suppressionxpathfilter.XpathRegressionRequireThisTest.testOne(XpathRegressionRequireThisTest.java:54) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) 	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) 	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) 	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) 	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48) 	at org.junit.rules.RunRules.evaluate(RunRules.java:20) 	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) 	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) 	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) 	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) 	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50) 	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192) ````  The only difference is `CLASS_DEF` versus `/CLASS_DEF`.","closed","miscellaneous,","rnveach","2018-07-03T13:27:20Z","2018-07-03T16:25:49Z"
"","5413","Link leading to document from Github site is broken","When clicking on the `http://checkstyle.sourceforge.net/checks.html` link we get a 404 response: ```text An error has been encountered in accessing this page.  1. Server: checkstyle.sourceforge.net  2. URL path: /checks.html  3. Error notes: NONE  4. Error type: 404  5. Request method: GET  6. Request query string: NONE  7. Time: 2018-01-01 12:19:43 UTC (1514809183)  Reporting this problem: The problem you have encountered is with a project web site hosted by SourceForge.net. This issue should be reported to the SourceForge.net-hosted project (not to SourceForge.net).  If this is a severe or recurring/persistent problem, please do one of the following, and provide the error text (numbered 1 through 7, above):  Contact the project via their designated support resources. Contact the project administrators of this project via email (see the upper right-hand corner of the Project Summary page for their usernames) at user-name@users.sourceforge.net If you are a maintainer of this web content, please refer to the Site Documentation regarding web services for further assistance.  NOTE: As of 2008-10-23 directory index display has been disabled by default. This option may be re-enabled by the project by placing a file with the name "".htaccess"" with this line:  Options +Indexes ```","closed","","lgoldstein","2018-01-01T12:22:51Z","2018-01-01T19:30:29Z"
"","5989","Parse error on formal parameter named `this`, with a type annotation","When Checkstyle 8.11 is run on [the following line](https://github.com/mernst/checker-framework/blob/checkstyle-ellipsis-this/checker/src/main/java/org/checkerframework/checker/regex/RegexUtil.java#L122): ``` public String getMessage(@GuardSatisfied CheckedPatternSyntaxException this) { ```  it fails, with the following output:  ``` ... :checker:checkstyleMain [ant:checkstyle] /home/mernst/tmp/checker-framework-checkstyle-ellipsis-this/checker/src/main/java/org/checkerframework/checker/regex/RegexUtil.java:122:80: expecting ELLIPSIS, found 'this' :checker:checkstyleMain FAILED ... ```  To reproduce the problem, run the follownig commands:  ``` git clone --branch checkstyle-ellipsis-this https://github.com/mernst/checker-framework.git checker-framework-checkstyle-ellipsis-this cd checker-framework-checkstyle-ellipsis-this ./gradlew checkstyleMain ```  Here is [the checkstyle setup](https://github.com/typetools/checker-framework/compare/master...mernst:checkstyle-ellipsis-this).  This looks the same as one of the issues reported in https://github.com/checkstyle/checkstyle/issues/3033; perhaps that issue was closed without fully resolving the underlying issue.  I was able to reproduce this using Checkstyle 8.9, 8.10, and 8.11.  I did not try any other versions.  I was not able to easily create a minimal, standalone test case.  Sorry about that.","closed","","mernst","2018-07-02T00:06:12Z","2018-07-02T15:47:18Z"
"","5575","using the marker // CHECKSTYLE:OFF: FileLength does not seem to work","When attempting to disable the ``FileLength`` check for a file, checkstyle 8.7 still emits an error:  ``` Starting audit... [ERROR] TestFile.java:1: File length is 2,219 lines (max allowed is 2,000). [FileLength] Audit done. Checkstyle ends with 1 errors. ```  Note that the file has the marker ``` $ head TestFile.java // CHECKSTYLE:OFF: FileLength ``` Our checkstyle configuration is attached.  [checkstyle.zip](https://github.com/checkstyle/checkstyle/files/1775875/checkstyle.zip)  Running checkstyle as follows: ``` /server-jre-1.8.0_152/bin/java -jar /checkstyle-8.7-all.jar -c /sun_checks.xml TestFile.java ```","closed","","thehcma","2018-03-02T16:33:47Z","2022-04-13T01:15:47Z"
"","5253","ImportOrder: sortStaticImportsAlphabetically works wrong when it's value equal false","When `sortStaticImportsAlphabetically=false` and `ordered=true`  ``` bbg@king-Lenovo:~/checkstyletest$ cat Test.java import static org.antlr.v4.runtime.CommonToken.*; import static java.lang.Math.*; import java.util.Set; import org.junit.Test;  public class Test {} bbg@king-Lenovo:~/checkstyletest$ cat test.xml                                                                                        bbg@king-Lenovo:~/checkstyletest$ java -Duser.language=en -Duser.country=US -jar checkstyle-8.4-all.jar -c test.xml Test.java  Starting audit... [ERROR] /home/bbg/checkstyletest/Test.java:2: Wrong order for 'java.lang.Math.*' import. [ImportOrder] Audit done. Checkstyle ends with 1 errors. ``` The error is not excepted.And it caused a bug in [#issue 5176](https://github.com/checkstyle/checkstyle/issues/5176). Furthermore,It seems that unit test miss the test of some property value = 'false'. Because I also find [Issue #5090](https://github.com/checkstyle/checkstyle/issues/5090) with same problem.  Attention: sorting for imports should not affect sorting for statics, they are two different options and should work independently.  sortStaticImportsAlphabetically was added at #12 with reason: > When you specify package groupings inside ImportOrder, that same ordering is applied to the single group of static imports. Eclipse's Organize Imports feature, however, sorts all static imports alphabetically within a single group--ignoring the package grouping order. There's no way to synchronize the behavior between the two tools  So sorting/grouping of imports should not affect static imports.","open","approved,","djydewang","2017-11-09T03:38:10Z","2017-11-11T14:22:06Z"
"","5494","Switch Checkstyle to use DetailAST interface","What we need to do: 1. Rename JavaNode interface to DetailAST 2. Rename JavaNodeImpl to DetailASTImpl 3. Remove old DetailAST class  This issue is blocked by: 1. https://github.com/checkstyle/checkstyle/issues/4609 2. https://github.com/checkstyle/checkstyle/issues/5493","open","breaking compatibility,","MEZk","2018-01-28T11:38:33Z","2021-12-22T04:45:55Z"
"","5239","doc: extend examples for FinalLocalVariable","web documentation - http://checkstyle.sourceforge.net/config_coding.html#FinalLocalVariable  we need to create more examples for user to show Check behavior. All code for documentation is at - https://github.com/checkstyle/checkstyle/blob/master/src/xdocs/config_coding.xml#L1122  Examples should be compilable java code with comment where violation is expected, good example - http://checkstyle.sourceforge.net/config_coding.html#ExplicitInitialization","closed","easy,","romani","2017-10-26T12:35:56Z","2018-02-25T18:12:28Z"
"","5618","Linux builds at AppVeyor","we should reuse Linux/Docker abilities   >Evolved from our Windows offering, AppVeyor for Linux has some unique features:     Connect multiple version control systems: GitHub, Bitbucket, GitLab, VSTS, Kiln and any other Git, Mercurial or Subversion repository.     Configure CI for your projects via UI or in dot-file.     Full sudo access to VM running build.     Promoted deployments - build once and deploy the same packages to multiple environments.     Official out-of-the-box .NET Core support - automatic build, test and packaging of .NET Core projects. Proof: build, config, website - dedicated blog post is coming!     SQL Server 2017 for Linux.     Bash and PowerShell Core for controlling build flow.     Single configuration file for both Windows and Linux builds.     Docker support.     Built-in NuGet server.  https://www.appveyor.com/docs/getting-started-with-appveyor-for-linux/","closed","CI,","romani","2018-03-16T22:02:18Z","2019-12-13T00:40:06Z"
"","5003","pitest: increase mutation coverage for pitest-checks-whitespace profile to 100%","We should increase coverage for pitest-checks-whitespace profile up to 100%. This issue is a subtask of #3708  Current threshold of pitest-checks-whitespace profile: 95","closed","miscellaneous,","Nimfadora","2017-08-25T19:16:58Z","2017-12-12T20:46:49Z"
"","5005","pitest: increase mutation coverage for pitest-checks-metrics profile to 100%","We should increase coverage for pitest-checks-metrics profile up to 100%. This issue is a subtask of #3708  Current threshold of pitest-checks-metrics profile: 91","closed","miscellaneous,","Nimfadora","2017-08-25T19:18:44Z","2017-12-10T03:15:32Z"
"","5004","pitest: increase mutation coverage for pitest-checks-imports profile to 100%","We should increase coverage for pitest-checks-imports profile up to 100%. This issue is a subtask of #3708  Current threshold of pitest-checks-imports profile: 94","closed","miscellaneous,","Nimfadora","2017-08-25T19:17:55Z","2017-12-23T02:20:53Z"
"","5007","pitest: increase mutation coverage for pitest-checks-design profile to 100%","We should increase coverage for pitest-checks-design profile up to 100%. This issue is a subtask of #3708  Current threshold of pitest-checks-design profile: 98","closed","miscellaneous,","Nimfadora","2017-08-25T19:32:06Z","2017-08-31T00:21:02Z"
"","5008","pitest: increase mutation coverage for pitest-checks-coding profile to 100%","We should increase coverage for pitest-checks-coding profile up to 100%. This issue is a subtask of #3708  Current threshold of pitest-checks-coding profile: 95  -------","closed","has bounty,","Nimfadora","2017-08-25T19:32:53Z","2019-07-22T19:01:13Z"
"","5023","Prohibit the usage of hardcoded encoding in Checkstyle source code","We need to use http://checkstyle.sourceforge.net/config_coding.html#IllegalTokenText to prohibit the usage of  hardcoded encoding in Checkstyle source code to avoid code like this:  ```java new FileText(new File(fileName), System.getProperty(""file.encoding"", ""UTF-8"")); ```  We need to force the contributors to use ```StandardCharsets```.","closed","miscellaneous,","MEZk","2017-08-29T21:27:51Z","2017-10-18T14:20:01Z"
"","5208","Use versions-maven-plugin to report versions to update","VersionEye is going to shut down at the end of the year https://blog.versioneye.com/2017/10/19/versioneye-sunset-process/, we need to use maven plugin to report versions to us in CI(Travis) on build for master only.  Our report now is http://checkstyle.sourceforge.net/dependency-updates-report.html We need to suppress all references to odd versions. https://github.com/mojohaus/versions-maven-plugin/issues/157 We could generate XML report and do post processing of it by some shell commands(grep, xmlstarlet, .....) or ... .  FYI: https://stackoverflow.com/questions/47802951/how-most-basic-pom-file-get-pluginmanagement-in-effective-pom/47803911#47803911","closed","miscellaneous,","romani","2017-10-20T17:29:02Z","2017-12-14T20:59:11Z"
"","5604","Resolve all violations from SonarQube at sonarcloud.io","Validation results: https://sonarcloud.io/dashboard?id=org.checkstyle%3Acheckstyle  still no way to define our profiles and adjust existng rules to our style/context/agreements. it is still validation against ""Sonar way"" of config.  but now we can suppress/wantfix/false-poitive violations. So we can possibly reach 0 level of violation. There is some branch support, so may be it is possible to setup validation on PRs","closed","miscellaneous,","romani","2018-03-10T16:07:08Z","2020-01-19T04:22:21Z"
"","5177","validation by xsd during build is missed for xml files that use packages_1_0.dtd","validation by xsd during build is missed for xml files that use packages_1_0.dtd  ``` $ mvn verify ..... [INFO] --- xml-maven-plugin:1.0.1:validate (default) @ checkstyle --- [INFO] No matching files found for ValidationSet with public ID null, system ID src/main/resources/com/puppycrawl/tools/checkstyle/packages_1_0.dtd. ```  unfortunately there is no way to make it ERROR - http://www.mojohaus.org/xml-maven-plugin/validate-mojo.html","closed","miscellaneous,","romani","2017-10-08T14:13:36Z","2017-10-08T14:19:10Z"
"","5349","Checkstyle throwing exception on parsing Lombok based sources","Using Checkstyle 7.3 in a Sonar build and a codebase using Lombok, Checkstyle produces an exception with the message:  ``` Unexpected container AST: ANNOTATION… ```  The offending line it is pointing to is [this](https://github.com/spring-projects/spring-data-commons/blob/9f220d5c159cc78b0d701829b3074366a4e8fa08/src/main/java/org/springframework/data/mapping/model/AbstractPersistentProperty.java#L65), i.e.:  ```java private final @Getter(onMethod = @__(@Nullable)) Method getter; ```  See the usage of Lombok's way of making sure the getter method generated for the field carries the `@Nullable` annotation.  I currently work around the issue by delomboking the sources and let Sonar (and thus Checkstyle) operate on that but that causes sources ending up that are not the actual ones and essentially any git blame information missing.","closed","","odrotbohm","2017-12-12T11:21:00Z","2018-03-08T14:23:31Z"
"","5506","Setup checkstyle validation to forbid type StringBuffer","Use StringBuilder instead of StringBuffer Base on conversation at https://github.com/checkstyle/checkstyle/pull/5505","closed","miscellaneous,","romani","2018-02-03T00:57:38Z","2019-03-10T22:20:21Z"
"","5638","Replace File{Input,Output}Stream with Files.new{Input,Output}Stream","Upgrading to PMD6 brings some warnings for the `performance` section: ``` [INFO] PMD Failure: com.google.checkstyle.test.base.AbstractIndentationTestSupport:68 Rule:AvoidFileStream Priority:1 Avoid instantiating FileInputStream, FileOutputStream, FileReader, or FileWriter. [INFO] PMD Failure: com.google.checkstyle.test.base.AbstractIndentationTestSupport:109 Rule:OptimizableToArrayCall Priority:3 This call to Collection.toArray() may be optimizable. [INFO] PMD Failure: com.google.checkstyle.test.base.AbstractModuleTestSupport:400 Rule:AvoidFileStream Priority:1 Avoid instantiating FileInputStream, FileOutputStream, FileReader, or FileWriter. [INFO] PMD Failure: com.google.checkstyle.test.base.AbstractModuleTestSupport:413 Rule:OptimizableToArrayCall Priority:3 This call to Collection.toArray() may be optimizable. [INFO] PMD Failure: com.puppycrawl.tools.checkstyle.DefaultConfiguration:78 Rule:OptimizableToArrayCall Priority:3 This call to Collection.toArray() may be optimizable. [INFO] PMD Failure: com.puppycrawl.tools.checkstyle.DefaultConfiguration:92 Rule:OptimizableToArrayCall Priority:3 This call to Collection.toArray() may be optimizable. [INFO] PMD Failure: com.puppycrawl.tools.checkstyle.Main:563 Rule:AvoidFileStream Priority:1 Avoid instantiating FileInputStream, FileOutputStream, FileReader, or FileWriter. [INFO] PMD Failure: com.puppycrawl.tools.checkstyle.Main:599 Rule:AvoidFileStream Priority:1 Avoid instantiating FileInputStream, FileOutputStream, FileReader, or FileWriter. [INFO] PMD Failure: com.puppycrawl.tools.checkstyle.PropertyCacheFile:121 Rule:AvoidFileStream Priority:1 Avoid instantiating FileInputStream, FileOutputStream, FileReader, or FileWriter. [INFO] PMD Failure: com.puppycrawl.tools.checkstyle.PropertyCacheFile:150 Rule:AvoidFileStream Priority:1 Avoid instantiating FileInputStream, FileOutputStream, FileReader, or FileWriter. [INFO] PMD Failure: com.puppycrawl.tools.checkstyle.ant.CheckstyleAntTask:449 Rule:AvoidFileStream Priority:1 Avoid instantiating FileInputStream, FileOutputStream, FileReader, or FileWriter. [INFO] PMD Failure: com.puppycrawl.tools.checkstyle.ant.CheckstyleAntTask$Formatter:706 Rule:AvoidFileStream Priority:1 Avoid instantiating FileInputStream, FileOutputStream, FileReader, or FileWriter. [INFO] PMD Failure: com.puppycrawl.tools.checkstyle.ant.CheckstyleAntTask$Formatter:727 Rule:AvoidFileStream Priority:1 Avoid instantiating FileInputStream, FileOutputStream, FileReader, or FileWriter. [INFO] PMD Failure: com.puppycrawl.tools.checkstyle.api.AutomaticBean$RelaxedStringArrayConverter:369 Rule:OptimizableToArrayCall Priority:3 This call to Collection.toArray() may be optimizable. [INFO] PMD Failure: com.puppycrawl.tools.checkstyle.api.AutomaticBean$RelaxedAccessModifierArrayConverter:394 Rule:OptimizableToArrayCall Priority:3 This call to Collection.toArray() may be optimizable. [INFO] PMD Failure: com.puppycrawl.tools.checkstyle.api.FileText:139 Rule:OptimizableToArrayCall Priority:3 This call to Collection.toArray() may be optimizable. [INFO] PMD Failure: com.puppycrawl.tools.checkstyle.api.FileText:183 Rule:OptimizableToArrayCall Priority:3 This call to Collection.toArray() may be optimizable. [INFO] PMD Failure: com.puppycrawl.tools.checkstyle.api.FileText:199 Rule:AvoidFileStream Priority:1 Avoid instantiating FileInputStream, FileOutputStream, FileReader, or FileWriter. [INFO] PMD Failure: com.puppycrawl.tools.checkstyle.checks.TranslationCheck:485 Rule:AvoidFileStream Priority:1 Avoid instantiating FileInputStream, FileOutputStream, FileReader, or FileWriter. [INFO] PMD Failure: com.puppycrawl.tools.checkstyle.checks.UniquePropertiesCheck:73 Rule:AvoidFileStream Priority:1 Avoid instantiating FileInputStream, FileOutputStream, FileReader, or FileWriter. [INFO] PMD Failure: com.puppycrawl.tools.checkstyle.CheckerTest:851 Rule:AvoidFileStream Priority:1 Avoid instantiating FileInputStream, FileOutputStream, FileReader, or FileWriter. [INFO] PMD Failure: com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest:563 Rule:AvoidFileStream Priority:1 Avoid instantiating FileInputStream, FileOutputStream, FileReader, or FileWriter. [INFO] PMD Failure: com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest:650 Rule:AvoidFileStream Priority:1 Avoid instantiating FileInputStream, FileOutputStream, FileReader, or FileWriter. [INFO] PMD Failure: com.puppycrawl.tools.checkstyle.PackageNamesLoaderTest:100 Rule:AvoidFileStream Priority:1 Avoid instantiating FileInputStream, FileOutputStream, FileReader, or FileWriter. [INFO] PMD Failure: com.puppycrawl.tools.checkstyle.TreeWalkerTest:81 Rule:AvoidFileStream Priority:1 Avoid instantiating FileInputStream, FileOutputStream, FileReader, or FileWriter. [INFO] PMD Failure: com.puppycrawl.tools.checkstyle.TreeWalkerTest:98 Rule:AvoidFileStream Priority:1 Avoid instantiating FileInputStream, FileOutputStream, FileReader, or FileWriter. [INFO] PMD Failure: com.puppycrawl.tools.checkstyle.api.DetailASTTest:247 Rule:AvoidFileStream Priority:1 Avoid instantiating FileInputStream, FileOutputStream, FileReader, or FileWriter. [INFO] PMD Failure: com.puppycrawl.tools.checkstyle.checks.UniquePropertiesCheckTest:206 Rule:AvoidFileStream Priority:1 Avoid instantiating FileInputStream, FileOutputStream, FileReader, or FileWriter. [INFO] PMD Failure: com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest:69 Rule:AvoidFileStream Priority:1 Avoid instantiating FileInputStream, FileOutputStream, FileReader, or FileWriter. [INFO] PMD Failure: com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest:108 Rule:OptimizableToArrayCall Priority:3 This call to Collection.toArray() may be optimizable. [INFO] PMD Failure: com.puppycrawl.tools.checkstyle.filters.SuppressWarningsFilterTest:180 Rule:OptimizableToArrayCall Priority:3 This call to Collection.toArray() may be optimizable. [INFO] PMD Failure: com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest:328 Rule:OptimizableToArrayCall Priority:3 This call to Collection.toArray() may be optimizable. [INFO] PMD Failure: com.puppycrawl.tools.checkstyle.filters.SuppressWithPlainTextCommentFilterTest:485 Rule:OptimizableToArrayCall Priority:3 This call to Collection.toArray() may be optimizable. [INFO] PMD Failure: com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest:297 Rule:OptimizableToArrayCall Priority:3 This call to Collection.toArray() may be optimizable. ``` It's better to fix the code, rather than suppress them.  [AvoidFileStream](https://pmd.github.io/pmd-6.1.0/pmd_rules_java_performance.html#avoidfilestream) [OptimizableToArrayCall](https://pmd.github.io/pmd-6.1.0/pmd_rules_java_performance.html#optimizabletoarraycall)","closed","miscellaneous,","pbludov","2018-03-23T05:25:07Z","2018-04-14T12:55:49Z"
"","5633","Fix PMD6 violations (bestpractices)","Upgrading to PMD6 brings some warnings for the `bestpractices` section: ``` [INFO] PMD Failure: com.puppycrawl.tools.checkstyle.JavadocDetailNodeParser:487 Rule:ForLoopCanBeForeach Priority:3 This for loop can be replaced by a foreach loop. [INFO] PMD Failure: com.puppycrawl.tools.checkstyle.api.Comment:53 Rule:ArrayIsStoredDirectly Priority:3 The user-supplied array 'text' is stored directly.. ```  Questionable: ``` [INFO] PMD Failure: com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheckTest:77 Rule:JUnitUseExpected Priority:3 In JUnit4, use the @Test(expected) annotation to denote tests that should throw exceptions. [INFO] PMD Failure: com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheckTest:94 Rule:JUnitUseExpected Priority:3 In JUnit4, use the @Test(expected) annotation to denote tests that should throw exceptions. [INFO] PMD Failure: com.puppycrawl.tools.checkstyle.checks.design.MutableExceptionCheckTest:125 Rule:JUnitUseExpected Priority:3 In JUnit4, use the @Test(expected) annotation to denote tests that should throw exceptions. [INFO] PMD Failure: com.puppycrawl.tools.checkstyle.checks.javadoc.ClassResolverTest:54 Rule:JUnitUseExpected Priority:3 In JUnit4, use the @Test(expected) annotation to denote tests that should throw exceptions. [INFO] PMD Failure: com.puppycrawl.tools.checkstyle.checks.javadoc.ClassResolverTest:65 Rule:JUnitUseExpected Priority:3 In JUnit4, use the @Test(expected) annotation to denote tests that should throw exceptions. [INFO] PMD Failure: com.puppycrawl.tools.checkstyle.checks.javadoc.ClassResolverTest:81 Rule:JUnitUseExpected Priority:3 In JUnit4, use the @Test(expected) annotation to denote tests that should throw exceptions. ```  It's better to fix the code, rather than suppress them.","closed","miscellaneous,","pbludov","2018-03-22T09:04:31Z","2018-03-25T02:01:50Z"
"","5525","upgrade to spotbugs 3.1.1 cause problems with execution on maven 3.3.9","upgrade to spotbugs 3.1.1 cause problems with execution on maven 3.3.9 at CIs (wercker , circleci, teamcity, distelli/puppet ). Looks like caused by https://github.com/spotbugs/spotbugs-maven-plugin/commit/765a70a12c081e5a5a76ae6112a0eb8d6bbff628   I can not reproduce a problem on my local on 3.3.9. My latest maven , version of java I use ``` $ mvn --version Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T00:58:13-07:00) Maven home: /opt/maven/default Java version: 1.8.0_162, vendor: Oracle Corporation Java home: /opt/jdk/jdk1.8.0_162/jre Default locale: en_US, platform encoding: UTF-8 OS name: ""linux"", version: ""3.10.0-693.11.1.el7.x86_64"", arch: ""amd64"", family: ""unix"" ```  commit: https://github.com/checkstyle/checkstyle/commit/1656030df86774234466ab7535071861b33c1e1d  passed on local, maven 3.5.2. Failed on remote wercker and and Circle CI.  full build log https://app.wercker.com/checkstyle/checkstyle/runs/build/5a8a3b5034645f0001aecc16?step=5a8a3b806467270001b6c3cc  ``` .. [INFO] ------------------------------------------------------------------------ [INFO] BUILD FAILURE [INFO] ------------------------------------------------------------------------ [INFO] Total time: 44.146 s [INFO] Finished at: 2018-02-19T02:51:30+00:00 [INFO] Final Memory: 94M/2169M [INFO] ------------------------------------------------------------------------ [ERROR] Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-install) on project checkstyle: Execution default-install of goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install failed: Unable to load the mojo 'install' (or one of its required components) from the plugin 'org.apache.maven.plugins:maven-install-plugin:2.5.2': com.google.inject.ProvisionException: Unable to provision, see the following errors: [ERROR]  [ERROR] 1) Error injecting: private org.eclipse.aether.spi.log.Logger org.apache.maven.repository.internal.DefaultVersionRangeResolver.logger [ERROR] while locating org.apache.maven.repository.internal.DefaultVersionRangeResolver [ERROR] while locating java.lang.Object annotated with * [ERROR] at org.eclipse.sisu.wire.LocatorWiring [ERROR] while locating org.eclipse.aether.impl.VersionRangeResolver [ERROR] for parameter 2 at org.eclipse.aether.internal.impl.DefaultDependencyCollector.(Unknown Source) [ERROR] while locating org.eclipse.aether.internal.impl.DefaultDependencyCollector [ERROR] while locating java.lang.Object annotated with * [ERROR] at org.eclipse.sisu.wire.LocatorWiring [ERROR] while locating org.eclipse.aether.impl.DependencyCollector [ERROR] for parameter 5 at org.eclipse.aether.internal.impl.DefaultRepositorySystem.(Unknown Source) [ERROR] while locating org.eclipse.aether.internal.impl.DefaultRepositorySystem [ERROR] while locating java.lang.Object annotated with * [ERROR] while locating org.apache.maven.artifact.installer.DefaultArtifactInstaller [ERROR] at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule) [ERROR] at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule) [ERROR] while locating org.apache.maven.artifact.installer.ArtifactInstaller [ERROR] while locating org.apache.maven.plugin.install.InstallMojo [ERROR] at ClassRealm[plugin>org.apache.maven.plugins:maven-install-plugin:2.5.2, parent: sun.misc.Launcher$AppClassLoader@677327b6] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule) [ERROR] while locating org.apache.maven.plugin.Mojo annotated with @com.google.inject.name.Named(value=org.apache.maven.plugins:maven-install-plugin:2.5.2:install) [ERROR] Caused by: java.lang.IllegalArgumentException: Can not set org.eclipse.aether.spi.log.Logger field org.apache.maven.repository.internal.DefaultVersionRangeResolver.logger to org.eclipse.aether.internal.impl.slf4j.Slf4jLoggerFactory [ERROR] at sun.reflect.UnsafeFieldAccessorImpl.throwSetIllegalArgumentException(UnsafeFieldAccessorImpl.java:167) [ERROR] at sun.reflect.UnsafeFieldAccessorImpl.throwSetIllegalArgumentException(UnsafeFieldAccessorImpl.java:171) [ERROR] at sun.reflect.UnsafeObjectFieldAccessorImpl.set(UnsafeObjectFieldAccessorImpl.java:81) [ERROR] at java.lang.reflect.Field.set(Field.java:764) [ERROR] at org.eclipse.sisu.bean.BeanPropertyField.set(BeanPropertyField.java:72) [ERROR] at org.eclipse.sisu.plexus.ProvidedPropertyBinding.injectProperty(ProvidedPropertyBinding.java:48) [ERROR] at org.eclipse.sisu.bean.BeanInjector.injectMembers(BeanInjector.java:52) [ERROR] at com.google.inject.internal.MembersInjectorImpl.injectMembers(MembersInjectorImpl.java:140) [ERROR] at com.google.inject.internal.ConstructorInjector.provision(ConstructorInjector.java:114) [ERROR] at com.google.inject.internal.ConstructorInjector.access$000(ConstructorInjector.java:32) [ERROR] at com.google.inject.internal.ConstructorInjector$1.call(ConstructorInjector.java:89) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:115) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:133) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:68) [ERROR] at com.google.inject.internal.ConstructorInjector.construct(ConstructorInjector.java:87) [ERROR] at com.google.inject.internal.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:267) [ERROR] at com.google.inject.internal.FactoryProxy.get(FactoryProxy.java:56) [ERROR] at com.google.inject.internal.InjectorImpl$2$1.call(InjectorImpl.java:1016) [ERROR] at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:1103) [ERROR] at com.google.inject.internal.InjectorImpl$2.get(InjectorImpl.java:1012) [ERROR] at org.eclipse.sisu.inject.Guice4$1.get(Guice4.java:162) [ERROR] at org.eclipse.sisu.inject.LazyBeanEntry.getValue(LazyBeanEntry.java:81) [ERROR] at org.eclipse.sisu.wire.BeanProviders.firstOf(BeanProviders.java:179) [ERROR] at org.eclipse.sisu.wire.BeanProviders$7.get(BeanProviders.java:160) [ERROR] at com.google.inject.internal.ProviderInternalFactory.provision(ProviderInternalFactory.java:81) [ERROR] at com.google.inject.internal.InternalFactoryToInitializableAdapter.provision(InternalFactoryToInitializableAdapter.java:53) [ERROR] at com.google.inject.internal.ProviderInternalFactory$1.call(ProviderInternalFactory.java:65) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:115) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:133) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:68) [ERROR] at com.google.inject.internal.ProviderInternalFactory.circularGet(ProviderInternalFactory.java:63) [ERROR] at com.google.inject.internal.InternalFactoryToInitializableAdapter.get(InternalFactoryToInitializableAdapter.java:45) [ERROR] at com.google.inject.internal.SingleParameterInjector.inject(SingleParameterInjector.java:38) [ERROR] at com.google.inject.internal.SingleParameterInjector.getAll(SingleParameterInjector.java:62) [ERROR] at com.google.inject.internal.ConstructorInjector.provision(ConstructorInjector.java:104) [ERROR] at com.google.inject.internal.ConstructorInjector.access$000(ConstructorInjector.java:32) [ERROR] at com.google.inject.internal.ConstructorInjector$1.call(ConstructorInjector.java:89) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:115) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:133) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:68) [ERROR] at com.google.inject.internal.ConstructorInjector.construct(ConstructorInjector.java:87) [ERROR] at com.google.inject.internal.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:267) [ERROR] at com.google.inject.internal.FactoryProxy.get(FactoryProxy.java:56) [ERROR] at com.google.inject.internal.InjectorImpl$2$1.call(InjectorImpl.java:1016) [ERROR] at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:1092) [ERROR] at com.google.inject.internal.InjectorImpl$2.get(InjectorImpl.java:1012) [ERROR] at org.eclipse.sisu.inject.Guice4$1.get(Guice4.java:162) [ERROR] at org.eclipse.sisu.inject.LazyBeanEntry.getValue(LazyBeanEntry.java:81) [ERROR] at org.eclipse.sisu.wire.BeanProviders.firstOf(BeanProviders.java:179) [ERROR] at org.eclipse.sisu.wire.BeanProviders$7.get(BeanProviders.java:160) [ERROR] at com.google.inject.internal.ProviderInternalFactory.provision(ProviderInternalFactory.java:81) [ERROR] at com.google.inject.internal.InternalFactoryToInitializableAdapter.provision(InternalFactoryToInitializableAdapter.java:53) [ERROR] at com.google.inject.internal.ProviderInternalFactory$1.call(ProviderInternalFactory.java:65) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:115) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:133) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:68) [ERROR] at com.google.inject.internal.ProviderInternalFactory.circularGet(ProviderInternalFactory.java:63) [ERROR] at com.google.inject.internal.InternalFactoryToInitializableAdapter.get(InternalFactoryToInitializableAdapter.java:45) [ERROR] at com.google.inject.internal.SingleParameterInjector.inject(SingleParameterInjector.java:38) [ERROR] at com.google.inject.internal.SingleParameterInjector.getAll(SingleParameterInjector.java:62) [ERROR] at com.google.inject.internal.ConstructorInjector.provision(ConstructorInjector.java:104) [ERROR] at com.google.inject.internal.ConstructorInjector.access$000(ConstructorInjector.java:32) [ERROR] at com.google.inject.internal.ConstructorInjector$1.call(ConstructorInjector.java:89) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:115) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:133) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:68) [ERROR] at com.google.inject.internal.ConstructorInjector.construct(ConstructorInjector.java:87) [ERROR] at com.google.inject.internal.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:267) [ERROR] at com.google.inject.internal.FactoryProxy.get(FactoryProxy.java:56) [ERROR] at com.google.inject.internal.InjectorImpl$2$1.call(InjectorImpl.java:1016) [ERROR] at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:1103) [ERROR] at com.google.inject.internal.InjectorImpl$2.get(InjectorImpl.java:1012) [ERROR] at org.eclipse.sisu.inject.Guice4$1.get(Guice4.java:162) [ERROR] at org.eclipse.sisu.inject.LazyBeanEntry.getValue(LazyBeanEntry.java:81) [ERROR] at org.eclipse.sisu.plexus.LazyPlexusBean.getValue(LazyPlexusBean.java:51) [ERROR] at org.eclipse.sisu.plexus.PlexusRequirements$RequirementProvider.get(PlexusRequirements.java:250) [ERROR] at org.eclipse.sisu.plexus.ProvidedPropertyBinding.injectProperty(ProvidedPropertyBinding.java:48) [ERROR] at org.eclipse.sisu.bean.BeanInjector.injectMembers(BeanInjector.java:52) [ERROR] at com.google.inject.internal.MembersInjectorImpl.injectMembers(MembersInjectorImpl.java:140) [ERROR] at com.google.inject.internal.ConstructorInjector.provision(ConstructorInjector.java:114) [ERROR] at com.google.inject.internal.ConstructorInjector.access$000(ConstructorInjector.java:32) [ERROR] at com.google.inject.internal.ConstructorInjector$1.call(ConstructorInjector.java:89) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:115) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:133) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:68) [ERROR] at com.google.inject.internal.ConstructorInjector.construct(ConstructorInjector.java:87) [ERROR] at com.google.inject.internal.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:267) [ERROR] at com.google.inject.internal.InjectorImpl$2$1.call(InjectorImpl.java:1016) [ERROR] at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:1103) [ERROR] at com.google.inject.internal.InjectorImpl$2.get(InjectorImpl.java:1012) [ERROR] at com.google.inject.internal.InjectorImpl.getInstance(InjectorImpl.java:1051) [ERROR] at org.eclipse.sisu.space.AbstractDeferredClass.get(AbstractDeferredClass.java:48) [ERROR] at com.google.inject.internal.ProviderInternalFactory.provision(ProviderInternalFactory.java:81) [ERROR] at com.google.inject.internal.InternalFactoryToInitializableAdapter.provision(InternalFactoryToInitializableAdapter.java:53) [ERROR] at com.google.inject.internal.ProviderInternalFactory$1.call(ProviderInternalFactory.java:65) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:115) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:133) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:68) [ERROR] at com.google.inject.internal.ProviderInternalFactory.circularGet(ProviderInternalFactory.java:63) [ERROR] at com.google.inject.internal.InternalFactoryToInitializableAdapter.get(InternalFactoryToInitializableAdapter.java:45) [ERROR] at com.google.inject.internal.ProviderToInternalFactoryAdapter$1.call(ProviderToInternalFactoryAdapter.java:46) [ERROR] at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:1103) [ERROR] at com.google.inject.internal.ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40) [ERROR] at com.google.inject.internal.SingletonScope$1.get(SingletonScope.java:145) [ERROR] at com.google.inject.internal.InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:41) [ERROR] at com.google.inject.internal.InjectorImpl$2$1.call(InjectorImpl.java:1016) [ERROR] at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:1092) [ERROR] at com.google.inject.internal.InjectorImpl$2.get(InjectorImpl.java:1012) [ERROR] at org.eclipse.sisu.inject.LazyBeanEntry.getValue(LazyBeanEntry.java:81) [ERROR] at org.eclipse.sisu.plexus.LazyPlexusBean.getValue(LazyPlexusBean.java:51) [ERROR] at org.eclipse.sisu.plexus.PlexusRequirements$RequirementProvider.get(PlexusRequirements.java:250) [ERROR] at org.eclipse.sisu.plexus.ProvidedPropertyBinding.injectProperty(ProvidedPropertyBinding.java:48) [ERROR] at org.eclipse.sisu.bean.BeanInjector.injectMembers(BeanInjector.java:52) [ERROR] at com.google.inject.internal.MembersInjectorImpl.injectMembers(MembersInjectorImpl.java:140) [ERROR] at com.google.inject.internal.ConstructorInjector.provision(ConstructorInjector.java:114) [ERROR] at com.google.inject.internal.ConstructorInjector.access$000(ConstructorInjector.java:32) [ERROR] at com.google.inject.internal.ConstructorInjector$1.call(ConstructorInjector.java:89) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:115) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:133) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:68) [ERROR] at com.google.inject.internal.ConstructorInjector.construct(ConstructorInjector.java:87) [ERROR] at com.google.inject.internal.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:267) [ERROR] at com.google.inject.internal.InjectorImpl$2$1.call(InjectorImpl.java:1016) [ERROR] at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:1103) [ERROR] at com.google.inject.internal.InjectorImpl$2.get(InjectorImpl.java:1012) [ERROR] at com.google.inject.internal.InjectorImpl.getInstance(InjectorImpl.java:1051) [ERROR] at org.eclipse.sisu.space.AbstractDeferredClass.get(AbstractDeferredClass.java:48) [ERROR] at com.google.inject.internal.ProviderInternalFactory.provision(ProviderInternalFactory.java:81) [ERROR] at com.google.inject.internal.InternalFactoryToInitializableAdapter.provision(InternalFactoryToInitializableAdapter.java:53) [ERROR] at com.google.inject.internal.ProviderInternalFactory$1.call(ProviderInternalFactory.java:65) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:115) [ERROR] at org.eclipse.sisu.bean.BeanScheduler$Activator.onProvision(BeanScheduler.java:176) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:126) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:68) [ERROR] at com.google.inject.internal.ProviderInternalFactory.circularGet(ProviderInternalFactory.java:63) [ERROR] at com.google.inject.internal.InternalFactoryToInitializableAdapter.get(InternalFactoryToInitializableAdapter.java:45) [ERROR] at com.google.inject.internal.InjectorImpl$2$1.call(InjectorImpl.java:1016) [ERROR] at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:1092) [ERROR] at com.google.inject.internal.InjectorImpl$2.get(InjectorImpl.java:1012) [ERROR] at org.eclipse.sisu.inject.Guice4$1.get(Guice4.java:162) [ERROR] at org.eclipse.sisu.inject.LazyBeanEntry.getValue(LazyBeanEntry.java:81) [ERROR] at org.eclipse.sisu.plexus.LazyPlexusBean.getValue(LazyPlexusBean.java:51) [ERROR] at org.codehaus.plexus.DefaultPlexusContainer.lookup(DefaultPlexusContainer.java:263) [ERROR] at org.codehaus.plexus.DefaultPlexusContainer.lookup(DefaultPlexusContainer.java:255) [ERROR] at org.apache.maven.plugin.internal.DefaultMavenPluginManager.getConfiguredMojo(DefaultMavenPluginManager.java:517) [ERROR] at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:121) [ERROR] at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:207) [ERROR] at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153) [ERROR] at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145) [ERROR] at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116) [ERROR] at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80) [ERROR] at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51) [ERROR] at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128) [ERROR] at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:307) [ERROR] at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:193) [ERROR] at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:106) [ERROR] at org.apache.maven.cli.MavenCli.execute(MavenCli.java:863) [ERROR] at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:288) [ERROR] at org.apache.maven.cli.MavenCli.main(MavenCli.java:199) [ERROR] at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) [ERROR] at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) [ERROR] at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) [ERROR] at java.lang.reflect.Method.invoke(Method.java:498) [ERROR] at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289) [ERROR] at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229) [ERROR] at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415) [ERROR] at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356) [ERROR]  [ERROR] 2) Error injecting: private org.eclipse.aether.spi.log.Logger org.apache.maven.repository.internal.DefaultVersionResolver.logger [ERROR] while locating org.apache.maven.repository.internal.DefaultVersionResolver [ERROR] while locating java.lang.Object annotated with * [ERROR] at org.eclipse.sisu.wire.LocatorWiring [ERROR] while locating org.eclipse.aether.impl.VersionResolver [ERROR] for parameter 2 at org.eclipse.aether.internal.impl.DefaultArtifactResolver.(Unknown Source) [ERROR] while locating org.eclipse.aether.internal.impl.DefaultArtifactResolver [ERROR] while locating java.lang.Object annotated with * [ERROR] at org.eclipse.sisu.wire.LocatorWiring [ERROR] while locating org.eclipse.aether.impl.ArtifactResolver [ERROR] for parameter 2 at org.eclipse.aether.internal.impl.DefaultRepositorySystem.(Unknown Source) [ERROR] while locating org.eclipse.aether.internal.impl.DefaultRepositorySystem [ERROR] while locating java.lang.Object annotated with * [ERROR] while locating org.apache.maven.artifact.installer.DefaultArtifactInstaller [ERROR] at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule) [ERROR] at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule) [ERROR] while locating org.apache.maven.artifact.installer.ArtifactInstaller [ERROR] while locating org.apache.maven.plugin.install.InstallMojo [ERROR] at ClassRealm[plugin>org.apache.maven.plugins:maven-install-plugin:2.5.2, parent: sun.misc.Launcher$AppClassLoader@677327b6] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule) [ERROR] while locating org.apache.maven.plugin.Mojo annotated with @com.google.inject.name.Named(value=org.apache.maven.plugins:maven-install-plugin:2.5.2:install) [ERROR] Caused by: java.lang.IllegalArgumentException: Can not set org.eclipse.aether.spi.log.Logger field org.apache.maven.repository.internal.DefaultVersionResolver.logger to org.eclipse.aether.internal.impl.slf4j.Slf4jLoggerFactory [ERROR] at sun.reflect.UnsafeFieldAccessorImpl.throwSetIllegalArgumentException(UnsafeFieldAccessorImpl.java:167) [ERROR] at sun.reflect.UnsafeFieldAccessorImpl.throwSetIllegalArgumentException(UnsafeFieldAccessorImpl.java:171) [ERROR] at sun.reflect.UnsafeObjectFieldAccessorImpl.set(UnsafeObjectFieldAccessorImpl.java:81) [ERROR] at java.lang.reflect.Field.set(Field.java:764) [ERROR] at org.eclipse.sisu.bean.BeanPropertyField.set(BeanPropertyField.java:72) [ERROR] at org.eclipse.sisu.plexus.ProvidedPropertyBinding.injectProperty(ProvidedPropertyBinding.java:48) [ERROR] at org.eclipse.sisu.bean.BeanInjector.injectMembers(BeanInjector.java:52) [ERROR] at com.google.inject.internal.MembersInjectorImpl.injectMembers(MembersInjectorImpl.java:140) [ERROR] at com.google.inject.internal.ConstructorInjector.provision(ConstructorInjector.java:114) [ERROR] at com.google.inject.internal.ConstructorInjector.access$000(ConstructorInjector.java:32) [ERROR] at com.google.inject.internal.ConstructorInjector$1.call(ConstructorInjector.java:89) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:115) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:133) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:68) [ERROR] at com.google.inject.internal.ConstructorInjector.construct(ConstructorInjector.java:87) [ERROR] at com.google.inject.internal.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:267) [ERROR] at com.google.inject.internal.FactoryProxy.get(FactoryProxy.java:56) [ERROR] at com.google.inject.internal.InjectorImpl$2$1.call(InjectorImpl.java:1016) [ERROR] at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:1103) [ERROR] at com.google.inject.internal.InjectorImpl$2.get(InjectorImpl.java:1012) [ERROR] at org.eclipse.sisu.inject.Guice4$1.get(Guice4.java:162) [ERROR] at org.eclipse.sisu.inject.LazyBeanEntry.getValue(LazyBeanEntry.java:81) [ERROR] at org.eclipse.sisu.wire.BeanProviders.firstOf(BeanProviders.java:179) [ERROR] at org.eclipse.sisu.wire.BeanProviders$7.get(BeanProviders.java:160) [ERROR] at com.google.inject.internal.ProviderInternalFactory.provision(ProviderInternalFactory.java:81) [ERROR] at com.google.inject.internal.InternalFactoryToInitializableAdapter.provision(InternalFactoryToInitializableAdapter.java:53) [ERROR] at com.google.inject.internal.ProviderInternalFactory$1.call(ProviderInternalFactory.java:65) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:115) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:133) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:68) [ERROR] at com.google.inject.internal.ProviderInternalFactory.circularGet(ProviderInternalFactory.java:63) [ERROR] at com.google.inject.internal.InternalFactoryToInitializableAdapter.get(InternalFactoryToInitializableAdapter.java:45) [ERROR] at com.google.inject.internal.SingleParameterInjector.inject(SingleParameterInjector.java:38) [ERROR] at com.google.inject.internal.SingleParameterInjector.getAll(SingleParameterInjector.java:62) [ERROR] at com.google.inject.internal.ConstructorInjector.provision(ConstructorInjector.java:104) [ERROR] at com.google.inject.internal.ConstructorInjector.access$000(ConstructorInjector.java:32) [ERROR] at com.google.inject.internal.ConstructorInjector$1.call(ConstructorInjector.java:89) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:115) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:133) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:68) [ERROR] at com.google.inject.internal.ConstructorInjector.construct(ConstructorInjector.java:87) [ERROR] at com.google.inject.internal.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:267) [ERROR] at com.google.inject.internal.FactoryProxy.get(FactoryProxy.java:56) [ERROR] at com.google.inject.internal.InjectorImpl$2$1.call(InjectorImpl.java:1016) [ERROR] at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:1092) [ERROR] at com.google.inject.internal.InjectorImpl$2.get(InjectorImpl.java:1012) [ERROR] at org.eclipse.sisu.inject.Guice4$1.get(Guice4.java:162) [ERROR] at org.eclipse.sisu.inject.LazyBeanEntry.getValue(LazyBeanEntry.java:81) [ERROR] at org.eclipse.sisu.wire.BeanProviders.firstOf(BeanProviders.java:179) [ERROR] at org.eclipse.sisu.wire.BeanProviders$7.get(BeanProviders.java:160) [ERROR] at com.google.inject.internal.ProviderInternalFactory.provision(ProviderInternalFactory.java:81) [ERROR] at com.google.inject.internal.InternalFactoryToInitializableAdapter.provision(InternalFactoryToInitializableAdapter.java:53) [ERROR] at com.google.inject.internal.ProviderInternalFactory$1.call(ProviderInternalFactory.java:65) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:115) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:133) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:68) [ERROR] at com.google.inject.internal.ProviderInternalFactory.circularGet(ProviderInternalFactory.java:63) [ERROR] at com.google.inject.internal.InternalFactoryToInitializableAdapter.get(InternalFactoryToInitializableAdapter.java:45) [ERROR] at com.google.inject.internal.SingleParameterInjector.inject(SingleParameterInjector.java:38) [ERROR] at com.google.inject.internal.SingleParameterInjector.getAll(SingleParameterInjector.java:62) [ERROR] at com.google.inject.internal.ConstructorInjector.provision(ConstructorInjector.java:104) [ERROR] at com.google.inject.internal.ConstructorInjector.access$000(ConstructorInjector.java:32) [ERROR] at com.google.inject.internal.ConstructorInjector$1.call(ConstructorInjector.java:89) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:115) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:133) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:68) [ERROR] at com.google.inject.internal.ConstructorInjector.construct(ConstructorInjector.java:87) [ERROR] at com.google.inject.internal.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:267) [ERROR] at com.google.inject.internal.FactoryProxy.get(FactoryProxy.java:56) [ERROR] at com.google.inject.internal.InjectorImpl$2$1.call(InjectorImpl.java:1016) [ERROR] at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:1103) [ERROR] at com.google.inject.internal.InjectorImpl$2.get(InjectorImpl.java:1012) [ERROR] at org.eclipse.sisu.inject.Guice4$1.get(Guice4.java:162) [ERROR] at org.eclipse.sisu.inject.LazyBeanEntry.getValue(LazyBeanEntry.java:81) [ERROR] at org.eclipse.sisu.plexus.LazyPlexusBean.getValue(LazyPlexusBean.java:51) [ERROR] at org.eclipse.sisu.plexus.PlexusRequirements$RequirementProvider.get(PlexusRequirements.java:250) [ERROR] at org.eclipse.sisu.plexus.ProvidedPropertyBinding.injectProperty(ProvidedPropertyBinding.java:48) [ERROR] at org.eclipse.sisu.bean.BeanInjector.injectMembers(BeanInjector.java:52) [ERROR] at com.google.inject.internal.MembersInjectorImpl.injectMembers(MembersInjectorImpl.java:140) [ERROR] at com.google.inject.internal.ConstructorInjector.provision(ConstructorInjector.java:114) [ERROR] at com.google.inject.internal.ConstructorInjector.access$000(ConstructorInjector.java:32) [ERROR] at com.google.inject.internal.ConstructorInjector$1.call(ConstructorInjector.java:89) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:115) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:133) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:68) [ERROR] at com.google.inject.internal.ConstructorInjector.construct(ConstructorInjector.java:87) [ERROR] at com.google.inject.internal.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:267) [ERROR] at com.google.inject.internal.InjectorImpl$2$1.call(InjectorImpl.java:1016) [ERROR] at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:1103) [ERROR] at com.google.inject.internal.InjectorImpl$2.get(InjectorImpl.java:1012) [ERROR] at com.google.inject.internal.InjectorImpl.getInstance(InjectorImpl.java:1051) [ERROR] at org.eclipse.sisu.space.AbstractDeferredClass.get(AbstractDeferredClass.java:48) [ERROR] at com.google.inject.internal.ProviderInternalFactory.provision(ProviderInternalFactory.java:81) [ERROR] at com.google.inject.internal.InternalFactoryToInitializableAdapter.provision(InternalFactoryToInitializableAdapter.java:53) [ERROR] at com.google.inject.internal.ProviderInternalFactory$1.call(ProviderInternalFactory.java:65) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:115) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:133) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:68) [ERROR] at com.google.inject.internal.ProviderInternalFactory.circularGet(ProviderInternalFactory.java:63) [ERROR] at com.google.inject.internal.InternalFactoryToInitializableAdapter.get(InternalFactoryToInitializableAdapter.java:45) [ERROR] at com.google.inject.internal.ProviderToInternalFactoryAdapter$1.call(ProviderToInternalFactoryAdapter.java:46) [ERROR] at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:1103) [ERROR] at com.google.inject.internal.ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40) [ERROR] at com.google.inject.internal.SingletonScope$1.get(SingletonScope.java:145) [ERROR] at com.google.inject.internal.InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:41) [ERROR] at com.google.inject.internal.InjectorImpl$2$1.call(InjectorImpl.java:1016) [ERROR] at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:1092) [ERROR] at com.google.inject.internal.InjectorImpl$2.get(InjectorImpl.java:1012) [ERROR] at org.eclipse.sisu.inject.LazyBeanEntry.getValue(LazyBeanEntry.java:81) [ERROR] at org.eclipse.sisu.plexus.LazyPlexusBean.getValue(LazyPlexusBean.java:51) [ERROR] at org.eclipse.sisu.plexus.PlexusRequirements$RequirementProvider.get(PlexusRequirements.java:250) [ERROR] at org.eclipse.sisu.plexus.ProvidedPropertyBinding.injectProperty(ProvidedPropertyBinding.java:48) [ERROR] at org.eclipse.sisu.bean.BeanInjector.injectMembers(BeanInjector.java:52) [ERROR] at com.google.inject.internal.MembersInjectorImpl.injectMembers(MembersInjectorImpl.java:140) [ERROR] at com.google.inject.internal.ConstructorInjector.provision(ConstructorInjector.java:114) [ERROR] at com.google.inject.internal.ConstructorInjector.access$000(ConstructorInjector.java:32) [ERROR] at com.google.inject.internal.ConstructorInjector$1.call(ConstructorInjector.java:89) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:115) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:133) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:68) [ERROR] at com.google.inject.internal.ConstructorInjector.construct(ConstructorInjector.java:87) [ERROR] at com.google.inject.internal.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:267) [ERROR] at com.google.inject.internal.InjectorImpl$2$1.call(InjectorImpl.java:1016) [ERROR] at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:1103) [ERROR] at com.google.inject.internal.InjectorImpl$2.get(InjectorImpl.java:1012) [ERROR] at com.google.inject.internal.InjectorImpl.getInstance(InjectorImpl.java:1051) [ERROR] at org.eclipse.sisu.space.AbstractDeferredClass.get(AbstractDeferredClass.java:48) [ERROR] at com.google.inject.internal.ProviderInternalFactory.provision(ProviderInternalFactory.java:81) [ERROR] at com.google.inject.internal.InternalFactoryToInitializableAdapter.provision(InternalFactoryToInitializableAdapter.java:53) [ERROR] at com.google.inject.internal.ProviderInternalFactory$1.call(ProviderInternalFactory.java:65) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:115) [ERROR] at org.eclipse.sisu.bean.BeanScheduler$Activator.onProvision(BeanScheduler.java:176) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:126) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:68) [ERROR] at com.google.inject.internal.ProviderInternalFactory.circularGet(ProviderInternalFactory.java:63) [ERROR] at com.google.inject.internal.InternalFactoryToInitializableAdapter.get(InternalFactoryToInitializableAdapter.java:45) [ERROR] at com.google.inject.internal.InjectorImpl$2$1.call(InjectorImpl.java:1016) [ERROR] at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:1092) [ERROR] at com.google.inject.internal.InjectorImpl$2.get(InjectorImpl.java:1012) [ERROR] at org.eclipse.sisu.inject.Guice4$1.get(Guice4.java:162) [ERROR] at org.eclipse.sisu.inject.LazyBeanEntry.getValue(LazyBeanEntry.java:81) [ERROR] at org.eclipse.sisu.plexus.LazyPlexusBean.getValue(LazyPlexusBean.java:51) [ERROR] at org.codehaus.plexus.DefaultPlexusContainer.lookup(DefaultPlexusContainer.java:263) [ERROR] at org.codehaus.plexus.DefaultPlexusContainer.lookup(DefaultPlexusContainer.java:255) [ERROR] at org.apache.maven.plugin.internal.DefaultMavenPluginManager.getConfiguredMojo(DefaultMavenPluginManager.java:517) [ERROR] at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:121) [ERROR] at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:207) [ERROR] at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153) [ERROR] at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145) [ERROR] at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116) [ERROR] at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80) [ERROR] at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51) [ERROR] at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128) [ERROR] at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:307) [ERROR] at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:193) [ERROR] at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:106) [ERROR] at org.apache.maven.cli.MavenCli.execute(MavenCli.java:863) [ERROR] at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:288) [ERROR] at org.apache.maven.cli.MavenCli.main(MavenCli.java:199) [ERROR] at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) [ERROR] at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) [ERROR] at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) [ERROR] at java.lang.reflect.Method.invoke(Method.java:498) [ERROR] at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289) [ERROR] at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229) [ERROR] at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415) [ERROR] at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356) [ERROR]  [ERROR] 3) Error injecting: private org.eclipse.aether.spi.log.Logger org.apache.maven.repository.internal.DefaultVersionResolver.logger [ERROR] while locating org.apache.maven.repository.internal.DefaultVersionResolver [ERROR] while locating java.lang.Object annotated with * [ERROR] at org.eclipse.sisu.wire.LocatorWiring [ERROR] while locating org.eclipse.aether.impl.VersionResolver [ERROR] for parameter 1 at org.apache.maven.repository.internal.DefaultArtifactDescriptorReader.(Unknown Source) [ERROR] while locating org.apache.maven.repository.internal.DefaultArtifactDescriptorReader [ERROR] while locating java.lang.Object annotated with * [ERROR] at org.eclipse.sisu.wire.LocatorWiring [ERROR] while locating org.eclipse.aether.impl.ArtifactDescriptorReader [ERROR] for parameter 1 at org.eclipse.aether.internal.impl.DefaultDependencyCollector.(Unknown Source) [ERROR] while locating org.eclipse.aether.internal.impl.DefaultDependencyCollector [ERROR] while locating java.lang.Object annotated with * [ERROR] at org.eclipse.sisu.wire.LocatorWiring [ERROR] while locating org.eclipse.aether.impl.DependencyCollector [ERROR] for parameter 5 at org.eclipse.aether.internal.impl.DefaultRepositorySystem.(Unknown Source) [ERROR] while locating org.eclipse.aether.internal.impl.DefaultRepositorySystem [ERROR] while locating java.lang.Object annotated with * [ERROR] while locating org.apache.maven.artifact.installer.DefaultArtifactInstaller [ERROR] at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule) [ERROR] at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule) [ERROR] while locating org.apache.maven.artifact.installer.ArtifactInstaller [ERROR] while locating org.apache.maven.plugin.install.InstallMojo [ERROR] at ClassRealm[plugin>org.apache.maven.plugins:maven-install-plugin:2.5.2, parent: sun.misc.Launcher$AppClassLoader@677327b6] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule) [ERROR] while locating org.apache.maven.plugin.Mojo annotated with @com.google.inject.name.Named(value=org.apache.maven.plugins:maven-install-plugin:2.5.2:install) [ERROR] Caused by: java.lang.IllegalArgumentException: Can not set org.eclipse.aether.spi.log.Logger field org.apache.maven.repository.internal.DefaultVersionResolver.logger to org.eclipse.aether.internal.impl.slf4j.Slf4jLoggerFactory [ERROR] at sun.reflect.UnsafeFieldAccessorImpl.throwSetIllegalArgumentException(UnsafeFieldAccessorImpl.java:167) [ERROR] at sun.reflect.UnsafeFieldAccessorImpl.throwSetIllegalArgumentException(UnsafeFieldAccessorImpl.java:171) [ERROR] at sun.reflect.UnsafeObjectFieldAccessorImpl.set(UnsafeObjectFieldAccessorImpl.java:81) [ERROR] at java.lang.reflect.Field.set(Field.java:764) [ERROR] at org.eclipse.sisu.bean.BeanPropertyField.set(BeanPropertyField.java:72) [ERROR] at org.eclipse.sisu.plexus.ProvidedPropertyBinding.injectProperty(ProvidedPropertyBinding.java:48) [ERROR] at org.eclipse.sisu.bean.BeanInjector.injectMembers(BeanInjector.java:52) [ERROR] at com.google.inject.internal.MembersInjectorImpl.injectMembers(MembersInjectorImpl.java:140) [ERROR] at com.google.inject.internal.ConstructorInjector.provision(ConstructorInjector.java:114) [ERROR] at com.google.inject.internal.ConstructorInjector.access$000(ConstructorInjector.java:32) [ERROR] at com.google.inject.internal.ConstructorInjector$1.call(ConstructorInjector.java:89) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:115) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:133) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:68) [ERROR] at com.google.inject.internal.ConstructorInjector.construct(ConstructorInjector.java:87) [ERROR] at com.google.inject.internal.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:267) [ERROR] at com.google.inject.internal.FactoryProxy.get(FactoryProxy.java:56) [ERROR] at com.google.inject.internal.InjectorImpl$2$1.call(InjectorImpl.java:1016) [ERROR] at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:1103) [ERROR] at com.google.inject.internal.InjectorImpl$2.get(InjectorImpl.java:1012) [ERROR] at org.eclipse.sisu.inject.Guice4$1.get(Guice4.java:162) [ERROR] at org.eclipse.sisu.inject.LazyBeanEntry.getValue(LazyBeanEntry.java:81) [ERROR] at org.eclipse.sisu.wire.BeanProviders.firstOf(BeanProviders.java:179) [ERROR] at org.eclipse.sisu.wire.BeanProviders$7.get(BeanProviders.java:160) [ERROR] at com.google.inject.internal.ProviderInternalFactory.provision(ProviderInternalFactory.java:81) [ERROR] at com.google.inject.internal.InternalFactoryToInitializableAdapter.provision(InternalFactoryToInitializableAdapter.java:53) [ERROR] at com.google.inject.internal.ProviderInternalFactory$1.call(ProviderInternalFactory.java:65) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:115) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:133) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:68) [ERROR] at com.google.inject.internal.ProviderInternalFactory.circularGet(ProviderInternalFactory.java:63) [ERROR] at com.google.inject.internal.InternalFactoryToInitializableAdapter.get(InternalFactoryToInitializableAdapter.java:45) [ERROR] at com.google.inject.internal.SingleParameterInjector.inject(SingleParameterInjector.java:38) [ERROR] at com.google.inject.internal.SingleParameterInjector.getAll(SingleParameterInjector.java:62) [ERROR] at com.google.inject.internal.ConstructorInjector.provision(ConstructorInjector.java:104) [ERROR] at com.google.inject.internal.ConstructorInjector.access$000(ConstructorInjector.java:32) [ERROR] at com.google.inject.internal.ConstructorInjector$1.call(ConstructorInjector.java:89) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:115) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:133) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:68) [ERROR] at com.google.inject.internal.ConstructorInjector.construct(ConstructorInjector.java:87) [ERROR] at com.google.inject.internal.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:267) [ERROR] at com.google.inject.internal.FactoryProxy.get(FactoryProxy.java:56) [ERROR] at com.google.inject.internal.InjectorImpl$2$1.call(InjectorImpl.java:1016) [ERROR] at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:1103) [ERROR] at com.google.inject.internal.InjectorImpl$2.get(InjectorImpl.java:1012) [ERROR] at org.eclipse.sisu.inject.Guice4$1.get(Guice4.java:162) [ERROR] at org.eclipse.sisu.inject.LazyBeanEntry.getValue(LazyBeanEntry.java:81) [ERROR] at org.eclipse.sisu.wire.BeanProviders.firstOf(BeanProviders.java:179) [ERROR] at org.eclipse.sisu.wire.BeanProviders$7.get(BeanProviders.java:160) [ERROR] at com.google.inject.internal.ProviderInternalFactory.provision(ProviderInternalFactory.java:81) [ERROR] at com.google.inject.internal.InternalFactoryToInitializableAdapter.provision(InternalFactoryToInitializableAdapter.java:53) [ERROR] at com.google.inject.internal.ProviderInternalFactory$1.call(ProviderInternalFactory.java:65) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:115) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:133) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:68) [ERROR] at com.google.inject.internal.ProviderInternalFactory.circularGet(ProviderInternalFactory.java:63) [ERROR] at com.google.inject.internal.InternalFactoryToInitializableAdapter.get(InternalFactoryToInitializableAdapter.java:45) [ERROR] at com.google.inject.internal.SingleParameterInjector.inject(SingleParameterInjector.java:38) [ERROR] at com.google.inject.internal.SingleParameterInjector.getAll(SingleParameterInjector.java:62) [ERROR] at com.google.inject.internal.ConstructorInjector.provision(ConstructorInjector.java:104) [ERROR] at com.google.inject.internal.ConstructorInjector.access$000(ConstructorInjector.java:32) [ERROR] at com.google.inject.internal.ConstructorInjector$1.call(ConstructorInjector.java:89) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:115) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:133) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:68) [ERROR] at com.google.inject.internal.ConstructorInjector.construct(ConstructorInjector.java:87) [ERROR] at com.google.inject.internal.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:267) [ERROR] at com.google.inject.internal.FactoryProxy.get(FactoryProxy.java:56) [ERROR] at com.google.inject.internal.InjectorImpl$2$1.call(InjectorImpl.java:1016) [ERROR] at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:1092) [ERROR] at com.google.inject.internal.InjectorImpl$2.get(InjectorImpl.java:1012) [ERROR] at org.eclipse.sisu.inject.Guice4$1.get(Guice4.java:162) [ERROR] at org.eclipse.sisu.inject.LazyBeanEntry.getValue(LazyBeanEntry.java:81) [ERROR] at org.eclipse.sisu.wire.BeanProviders.firstOf(BeanProviders.java:179) [ERROR] at org.eclipse.sisu.wire.BeanProviders$7.get(BeanProviders.java:160) [ERROR] at com.google.inject.internal.ProviderInternalFactory.provision(ProviderInternalFactory.java:81) [ERROR] at com.google.inject.internal.InternalFactoryToInitializableAdapter.provision(InternalFactoryToInitializableAdapter.java:53) [ERROR] at com.google.inject.internal.ProviderInternalFactory$1.call(ProviderInternalFactory.java:65) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:115) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:133) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:68) [ERROR] at com.google.inject.internal.ProviderInternalFactory.circularGet(ProviderInternalFactory.java:63) [ERROR] at com.google.inject.internal.InternalFactoryToInitializableAdapter.get(InternalFactoryToInitializableAdapter.java:45) [ERROR] at com.google.inject.internal.SingleParameterInjector.inject(SingleParameterInjector.java:38) [ERROR] at com.google.inject.internal.SingleParameterInjector.getAll(SingleParameterInjector.java:62) [ERROR] at com.google.inject.internal.ConstructorInjector.provision(ConstructorInjector.java:104) [ERROR] at com.google.inject.internal.ConstructorInjector.access$000(ConstructorInjector.java:32) [ERROR] at com.google.inject.internal.ConstructorInjector$1.call(ConstructorInjector.java:89) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:115) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:133) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:68) [ERROR] at com.google.inject.internal.ConstructorInjector.construct(ConstructorInjector.java:87) [ERROR] at com.google.inject.internal.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:267) [ERROR] at com.google.inject.internal.FactoryProxy.get(FactoryProxy.java:56) [ERROR] at com.google.inject.internal.InjectorImpl$2$1.call(InjectorImpl.java:1016) [ERROR] at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:1103) [ERROR] at com.google.inject.internal.InjectorImpl$2.get(InjectorImpl.java:1012) [ERROR] at org.eclipse.sisu.inject.Guice4$1.get(Guice4.java:162) [ERROR] at org.eclipse.sisu.inject.LazyBeanEntry.getValue(LazyBeanEntry.java:81) [ERROR] at org.eclipse.sisu.plexus.LazyPlexusBean.getValue(LazyPlexusBean.java:51) [ERROR] at org.eclipse.sisu.plexus.PlexusRequirements$RequirementProvider.get(PlexusRequirements.java:250) [ERROR] at org.eclipse.sisu.plexus.ProvidedPropertyBinding.injectProperty(ProvidedPropertyBinding.java:48) [ERROR] at org.eclipse.sisu.bean.BeanInjector.injectMembers(BeanInjector.java:52) [ERROR] at com.google.inject.internal.MembersInjectorImpl.injectMembers(MembersInjectorImpl.java:140) [ERROR] at com.google.inject.internal.ConstructorInjector.provision(ConstructorInjector.java:114) [ERROR] at com.google.inject.internal.ConstructorInjector.access$000(ConstructorInjector.java:32) [ERROR] at com.google.inject.internal.ConstructorInjector$1.call(ConstructorInjector.java:89) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:115) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:133) [ERROR] at com.google.inject.internal.ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:68) [ERROR] at com.google.inject.internal.ConstructorInjector.construct(ConstructorInjector.java:87) [ERROR] at com.google.inject.internal.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:267) [ERROR] at com.google.inject.internal.InjectorImpl$2$1.call(InjectorImpl.java:1016) [ERROR] at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:1103) [ERROR] at com.google.inject.internal.InjectorImpl$2.get(InjectorImpl.java:1012) [ERROR] at com.google.inject.internal.InjectorImpl.getInstance(InjectorImpl.java:1051) [ERROR] at org.eclipse.sisu.space.AbstractDeferredClass.get(AbstractDeferredClass.java:48) ```","closed","miscellaneous,","romani","2018-02-19T19:59:41Z","2018-03-06T06:45:59Z"
"","5468","Issue #5463 : Update messages.properties","Updated messages.properties for #5463","closed","","varunu28","2018-01-17T20:10:32Z","2018-01-23T00:18:45Z"
"","5588","Issue #5489: Fixed indentation in report_issue.xml & writingcheckss.xml","Updated indentation in report_issue.xml & writingcheckss.xml #5489","closed","","varunu28","2018-03-07T15:07:39Z","2018-03-08T01:07:22Z"
"","5549","Issue #5489: Fixed indentation in config_misc.xml","Updated indentation in config_misc.xml #5489","closed","","varunu28","2018-02-26T04:15:23Z","2018-02-28T15:05:55Z"
"","5536","Issue #5489: Fixed indentation in config_imports.xml","Updated Indentation in config_imports.xml for #5489","closed","","varunu28","2018-02-24T00:48:28Z","2018-02-24T17:16:55Z"
"","5520","Issue #5489: Fixed indentation in config_blocks.xml","Updated indentation in config_blocks.xml for #5489. Updated the indentation for all switch statements under source blocks","closed","","varunu28","2018-02-12T17:01:24Z","2018-02-14T14:43:38Z"
"","5502","Issue #5489: Fixed indentation in config_regexp.xml","Updated config_regexp.xml regarding #5489","closed","","varunu28","2018-01-30T06:05:13Z","2018-02-06T01:34:28Z"
"","5498","Issue #5489: Fixed indentation in config_regexp.xml","Updated config_regexp.xm for #5489","closed","","varunu28","2018-01-29T19:18:01Z","2018-01-30T05:46:02Z"
"","5538","Issue #5489: Fixed indentation in config_javadoc.xml","Updated config_javadoc.xml #5489","closed","","varunu28","2018-02-24T18:03:02Z","2018-02-25T13:30:35Z"
"","5512","Issue #5489: Fixed indentation in config.xml","Updated config.xml for #5489","closed","","varunu28","2018-02-06T03:20:04Z","2018-02-11T14:42:24Z"
"","5543","Issue #5489: Fixed indentation in config_metrics.xml","Updated commits in config_metrics.xml #5489","closed","","varunu28","2018-02-25T16:10:39Z","2018-02-26T02:55:08Z"
"","5615","JavadocMethodCheck#isMissingJavadocAllowed  javadoc mean method could be overriden but it is private","UPDATE: original request was rejected .... but javadoc is changed to not be misleading  JavadocMethodCheck#isMissingJavadocAllowed(final DetailAST ast) is private while its comment says in clear words that it is intended to be used for behavior override:      /**      * The JavadocMethodCheck is about to report a missing Javadoc.      * This hook can be used by derived classes to allow a missing javadoc      * in some situations.  The default implementation checks  The method have used to be protected until mass-update from Issue #4801  Issue #4801: fix for violations from WeakerAccess inspection https://github.com/checkstyle/checkstyle/commit/d243badf77c9c70a4e4ecde28a34ca8802de41b6  Looks like making it private was wrong. It has to have a protected access level","closed","miscellaneous,","kzaikin","2018-03-16T13:28:36Z","2018-03-16T18:39:47Z"
"","5832","Code samples for Naming Checks","update xdoc files with code examples for all checks at http://checkstyle.sourceforge.net/config_naming.html sources are at https://github.com/checkstyle/checkstyle/blob/master/src/xdocs/config_naming.xml  Good example is http://checkstyle.sourceforge.net/config_annotation.html#AnnotationLocation sources are at https://github.com/checkstyle/checkstyle/blob/master/src/xdocs/config_annotation.xml","closed","easy,","romani","2018-05-25T14:19:55Z","2020-02-21T23:19:26Z"
"","5758","Update AbstractChecks to log DetailAST (part 2)","Update checks which use HtmlTag, FullIdent, StringInfo or JavadocTag objects' line and column number to log DetailAST.  Checks that should be updated:  - UnusedImportsCheck - PackageNameCheck - MultipleStringLiteralsCheck - IllegalTypeCheck - AbstractClassCouplingCheck  Some ideas from @rnveach's [comment](https://github.com/checkstyle/checkstyle/issues/4830#issuecomment-383102616):  > We should look into why the checks were designed this way  > llegalTypeCheck's FullIdent makes sure we use the start of the type for the line/column. Example: java.util.List starts with java, but last AST used points to .List. Same with Boolean[], starts with Boolean but last AST used points to []. FullIdent could be modified to save the AST that starts the type so we can then retrieve the correct AST.  This issue is waiting for further discussion and investigation.","closed","medium,","MEZk","2018-04-26T19:38:22Z","2018-11-10T15:03:39Z"
"","5757","Update AbstractChecks to log DetailAST (part 1, easy cases)","Update checks which do not modify line number and only pass it to ```AbstractCheck.log(int line, String key, Object... args) method```. The checks should log the object of DetailAST class.  The following checks should be updated:  - ArrayTypeStyleCheck - DescendantTokenCheck - FinalParametersCheck - SuppressWarningsCheck - AvoidNestedBlocksCheck - AbstractSuperCheck - AvoidInlineConditionalsCheck - CovariantEqualsCheck - EmptyStatementCheck - EqualsAvoidNullCheck - EqualsHashCodeCheck - FinalLocalVariableCheck - InnerAssignmentCheck - ModifiedControlVariableCheck - ParameterAssignmentCheck - ReturnCountCheck - SimplifyBooleanExpressionCheck - SimplifyBooleanReturnCheck - StringLiteralEqualityCheck - DesignForExtensionCheck - HideUtilityClassConstructorCheck - InnerTypeLastCheck - MutableExceptionCheck - ThrowsCountCheck - VisibilityModifierCheck - RedundantImportCheck - BooleanExpressionComplexityCheck - JavaNCSSCheck - ModifierOrderCheck - RedundantModifierCheck - AbstractClassNameCheck - MethodNameCheck - AnonInnerLengthCheck - ExecutableStatementCountCheck - MethodLengthCheck - ParameterNumberCheck - AbstractParenPadCheck - WhitespaceAroundCheck  It is OK to print both lineNo and columnNo to user in violation message if it is necessary. No lineNo or violations count regression are expected.","closed","medium,","MEZk","2018-04-26T19:33:10Z","2018-05-18T12:56:39Z"
"","5941","Enforce FileTabCharacter and RegexpSingleline for trailing whitespace over resources","uncomment configuration at: https://github.com/checkstyle/checkstyle/blob/master/config/checkstyle_resources_checks.xml#L18-L24  fix all violations. It is better to split violation resolving in few PRs for each Check. UT might be required to be updated - but ideally should not be updated.","open","easy,","romani","2018-06-16T21:32:45Z","2019-07-09T07:18:15Z"
"","5493","Implement JavaNode parser","To work with JavaNode interface and use its JavaNodeImpl implementation (see https://github.com/checkstyle/checkstyle/issues/4609) we need to implement our own AST parser (similar to JavadocDetailNodeParser).  This issue is blocked by #4609","open","","MEZk","2018-01-28T11:35:22Z","2021-12-22T04:46:46Z"
"","5558","Switch to powermock-api-mockito2","To support JDK9, we need to upgrade PowerMock to version 2.0. Unfortunately, the support for Mockito 1.x has been removed from PowerMock 2.0. See https://github.com/powermock/powermock/issues/726  This means that we must switch to Mockito 2.0 API.","closed","miscellaneous,","pbludov","2018-02-27T08:58:07Z","2018-03-07T00:19:40Z"
"","5791","format all files to be 100 symbols in length","to ease code review in github , it is better to format all files (where possible) to make line 100 maximum.  after completion, it should be enforced by some Check.  Case: I almost missed undesirable changes - https://github.com/checkstyle/checkstyle/pull/5753#discussion_r187773023","closed","easy,","romani","2018-05-12T14:43:36Z","2018-05-27T04:36:38Z"
"","5578","infra: remove duplicated maven versions","Those Maven plugin versions have been specified in the pluginManagement section already. In Eclipse there are even warnings that these are duplicated.","closed","","Bananeweizen","2018-03-04T18:18:50Z","2018-03-06T04:29:15Z"
"","5130","Issue #4981: ImportOrder with order=bottom should disallow non-static import after a static import","This pull request contains a fix and test case for #4981.","closed","abandoned,","julianhyde","2017-09-20T19:50:53Z","2017-12-10T15:57:57Z"
"","5974","Issue #5899: Add InterfaceImpliedModifierCheck","This PR implements #5899 with one extra property - `violateImpliedPublicNested` - which was missing from the discussion. All tests/checks pass locally. The translations are automated. Thanks for your consideration!","closed","","jodastephen","2018-06-27T15:41:01Z","2018-07-06T09:53:02Z"
"","5660","Remove usage of com.oracle.net package","This package is unavailable in the OpenJDK9 (but is available in the OracleJDK9). The only usage of this package is the file `src/test/resources/com/puppycrawl/tools/checkstyle/checks/whitespace/emptylineseparator/InputEmptyLineSeparator.java`.  For that test the package name is irrelevant and can be changed to any other.","closed","miscellaneous,","pbludov","2018-03-29T14:11:29Z","2018-03-30T04:18:12Z"
"","5726","ImportControl: global blacklist","This may just be an issue with Checkstyle's own import control for now, but I noticed this when reviewing the import control file.  For all packages, we have [a list of banned imports of `java.io.File*Stream`, `java.util.stream.*`, and `java.util.Comparator`](https://github.com/checkstyle/checkstyle/blob/master/config/import-control.xml#L8-L24). However, the `gui` sub-package with it's own isolated list of imports, allows `java.io` and allows `java.util.*` (with no sub-subpackages).  This means `gui` allows some imports that are banned on a global level. We have a global ban because these imports cause issues with some tools or there are better ways to code that may not be obvious. [Because sub-packages are examined first](https://github.com/checkstyle/checkstyle/blob/master/src/xdocs/config_imports.xml#L892-L894), the only current way to correct this is to ban imports in 2 places, duplicating the list and reasoning.  Should we consider to create a new area that will be a global blacklist to ban imports everywhere and ignore other rules? Or maybe split the import control into 2, a global blacklist and a package by package whitelist?","open","","rnveach","2018-04-14T13:05:43Z","2018-04-18T15:25:35Z"
"","5954","Issue: #5953 WIP: Part 1. Add the initial Jenkinsfile for the project","This Jenkinsfile is required for running Jenkins tests for each PR. It contains the build order and exact build steps definition programmed as a Groovy DSL","closed","","daniilyar","2018-06-21T22:28:02Z","2018-06-23T07:46:27Z"
"","5687","spelling: anon","This is the code change to correspond to sevntu-checkstyle/sevntu.checkstyle#657","closed","","jsoref","2018-04-04T19:34:13Z","2018-04-08T01:03:52Z"
"","5546","Explicitly throw an exception from ClassResolver","This is a spin-off for #5516   The method `ClassResolver::resolve` ends with ``` if (clazz == null) {   // Giving up, the type is unknown, so load the class to generate   // exception   clazz = safeLoad(name); } ```  The problem with this code is that Jacoco can not detect the methods that always throw an exception. As a result, the method is considered not 100% covered.   By replacing this hack with an explicit exception throwing, it will not only solve the problem with Jacoco, but also make the code more readable.","closed","miscellaneous,","pbludov","2018-02-26T01:41:40Z","2018-02-26T14:58:41Z"
"","5756","RedundantModifier should allow redundant modifiers in interfaces","This is a request for a new check or a variation of `RedundantModifier`.  In Java 8, developers are allowed to have static and default methods on interfaces. In Java 9, developers can write private methods on interfaces. As part of this change, my Java 8 [best practices talk](https://www.jfokus.se/jfokus17/preso/Java-SE-8-best-practices.pdf) slide 75  ![image](https://user-images.githubusercontent.com/812984/39844095-1f821504-53a3-11e8-9842-5b37f78c1997.png)  recommends that all methods on interfaces should be declared `public static`, `public abstract` or `public default` (plus `private` in Java 9).   In Java 9, the following combinations of modifiers are allowed on interfaces  https://bugs.openjdk.java.net/browse/JDK-8071453   First set: ""public static""  ""public abstract""  ""public default""  ""private static""  ""private""   Second set: ""static"" - same as ""public static""  ""abstract"" - same as ""public abstract""  ""public"" - same as ""public abstract""  """" - same as ""public abstract""  ""default"" - same as ""public default""   Since Java 8, I've argued that the existing coding standards for  interfaces are now wrong.  http://mail.openjdk.java.net/pipermail/core-libs-dev/2013-April/015803.html  http://blog.joda.org/2016/09/private-methods-in-interfaces-in-java-9.html  https://www.jfokus.se/jfokus17/preso/Java-SE-8-best-practices.pdf slide 75   What should be clear from the above list is that the first set of  modfiers are consistent, and match modifiers on classes. The second  set of modifiers are inconsistent, and require the developer to  remember that an absence of a modifier means package-scoped on a  class, but public on an interface. At this point, the different  meanings for an absence of modifier are just a confusing anachronism  in Java. So, this is not about methods lining up in a column, this is  about consistency across classes and interfaces, now that interfaces  are much more like classes.   Currently `RedundantModifier` is applied everywhere - on interfaces and classes, no way for customization. The change I want to control what happens separately on interfaces and classes.  No violations on following interface are expected: ``` $ java -version java version ""1.8.0_172""  $ javac TestClass.java  $ cat TestClass.java public interface TestClass {    public static final int CONSTANT1 = 1;  // VIOLATION now   public static int CONSTANT2 = 1;  // VIOLATION now   public final int CONSTANT3 = 1;  // VIOLATION now   static final int CONSTANT4 = 1;  // VIOLATION now   final int CONSTANT5 = 1;  // VIOLATION now   static int CONSTANT6 = 1;  // VIOLATION now   public int CONSTANT7 = 1;  // VIOLATION now   int CONSTANT8 = 1;    public static boolean create1() { return true;}  // VIOLATION now   static boolean create2() { return true;}    public abstract void execute1();  // VIOLATION now   abstract void execute2();  // VIOLATION now   public void execute3();  // VIOLATION now    public default void execute4() {} // VIOLATION now   default void execute5() {}     //private static void execute6() {}  // jdk9 only   //private void execute7() {}  // jdk9 only }  $ cat TestConfig.xml                                           $ java -jar checkstyle-8.10-all.jar -c TestConfig.xml TestClass.java  Starting audit... [ERROR] TestClass.java:2:3: Redundant 'public' modifier. [RedundantModifier] [ERROR] TestClass.java:3:3: Redundant 'public' modifier. [RedundantModifier] [ERROR] TestClass.java:4:3: Redundant 'public' modifier. [RedundantModifier] [ERROR] TestClass.java:5:3: Redundant 'static' modifier. [RedundantModifier] [ERROR] TestClass.java:6:3: Redundant 'final' modifier. [RedundantModifier] [ERROR] TestClass.java:7:3: Redundant 'static' modifier. [RedundantModifier] [ERROR] TestClass.java:8:3: Redundant 'public' modifier. [RedundantModifier] [ERROR] TestClass.java:11:3: Redundant 'public' modifier. [RedundantModifier] [ERROR] TestClass.java:14:3: Redundant 'public' modifier. [RedundantModifier] [ERROR] TestClass.java:15:3: Redundant 'abstract' modifier. [RedundantModifier] [ERROR] TestClass.java:16:3: Redundant 'public' modifier. [RedundantModifier] [ERROR] TestClass.java:18:3: Redundant 'public' modifier. [RedundantModifier] Audit done. Checkstyle ends with 12 errors.  ```  I don't really want to constrain how this is implemented since I don't know the codebase. However one possible way would be to add a new property to `RedundantModifier` that specifies a list of contexts to check - `CLASS`, `INTERFACE`, `ENUM`, `ANNOTATION` (allowing interfaces to be excluded from `RedundantModifier`).   Conversation was started at https://groups.google.com/forum/#!topic/checkstyle/KYF-9EEzsbs","closed","","jodastephen","2018-04-25T22:22:27Z","2019-03-03T16:53:22Z"
"","5164","Mark TranslationCheck with GlobalStatefulCheck annotation","This is a part of https://github.com/checkstyle/checkstyle/issues/4870  TranslationCheck requires additional changes, therefore it is excluded from https://github.com/checkstyle/checkstyle/pull/4892","closed","","soon","2017-10-01T05:12:08Z","2017-10-02T14:50:42Z"
"","5553","Jacoco workaround for MainTest","This is a Jacoco related issue. See #5516   Currently, the Jacoco coverage for the `MainTest` is 99%, due to https://github.com/jacoco/jacoco/issues/117  This can be ""suppressed"" with a test case that mocks the `System.exit` method.","closed","miscellaneous,","pbludov","2018-02-26T06:46:40Z","2018-03-14T00:43:44Z"
"","5555","Refactoring of JavadocUtils static init","This is a Jacoco related issue. See #5516  The Jacoco branch coverage report for `JavadocUtils.static init` is 99% due to  ``` if (Modifier.isPublic(field.getModifiers())     && field.getType() == Integer.TYPE) { ```  Since all members of the `JavadocTokenTypes` class are `public int` this `if` is missing a half of its branches for the Jacoco. This issue does not affect the Cobertura coverage, as it adds a pair of fields to the each class during the instrumentation phase.  A possible workaround is to extract this code to an utility method. This is a good idea, since both `TotkenTypesUtils` and `JavadocUtils` shares the same code for their static initializers.","closed","miscellaneous,","pbludov","2018-02-26T07:03:29Z","2018-03-07T14:56:13Z"
"","5551","PackageNamesLoaderTest refactoring","This is a Jacoco related issue. See #5516  Currently, the `PackageNamesLoaderTest` does not have a case for successful `PackageNamesLoader.getPackageNames` invocation.  It has cases for failing `PackageNamesLoader.getPackageNames` invocation and for successful `PackageNamesLoader.processFile` invocation.  Also, the method `PackageNamesLoader.processFile` is a private one, so it is better to test it within a call to `PackageNamesLoader.getPackageNames` method, regardless of the Jacoco limitations.","closed","miscellaneous,","pbludov","2018-02-26T05:56:01Z","2018-03-07T17:23:16Z"
"","5131","minor: fix conflicts between last 2 commits","This fixes a conflict between the last 2 commits because translation inputs were moved to a new folder.","closed","","rnveach","2017-09-21T02:21:24Z","2017-09-21T14:22:32Z"
"","5423","TokenTypes documentation contains double encoded symbols","This file http://checkstyle.sourceforge.net/apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html http://checkstyle.sourceforge.net/apidocs/com/puppycrawl/tools/checkstyle/api/JavadocTokenTypes.html is hard to read. Many symbols are displayed in encoded form.  Some examples:  Modifier and Type | Field and Description -- | -- static int | LNOT The &#33; (logical complement) operator. static int | LE The &lt;= (less than or equal) operator. static int | BSR The &gt;&gt;&gt; (unsigned shift right) operator. static int | BSR_ASSIGN The &gt;&gt;&gt;= (unsigned right shift assignment)  operator.  It looks like encoded symbols were not decoded when <code> </ code> was replaced with {@ code}. It's a bug in the Idea actually. But the docs need to be fixed anyway.  regression caused by https://github.com/checkstyle/checkstyle/commit/70786709d4f735b9123159a86a752789855af34a in scope of #4805   see limitations of `@code` tag at - #5425","closed","miscellaneous,","pbludov","2018-01-04T08:14:16Z","2018-01-05T22:46:30Z"
"","5332","minor: locked down abstract test classes from overriding","This change is to lock down our main abstract test classes from overriding to make it clear it isn't allowed anymore. We should be using what we built, instead of re-inventing things. If something is wrong with these classes, then they should be fixed. See conversation at https://github.com/checkstyle/checkstyle/pull/5213#discussion_r155634192 .  I am unable to lockdown 2 methods, one in test and the other in IT.  https://github.com/checkstyle/checkstyle/blob/acb8b7f8da7336eebb9eac6c25680cc83c65be5d/src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/WriteTagCheckTest.java#L208 This can't be swapped because `WriteTagCheck` prints violations as `info` and it messes up the audit count because we only count errors. I will continue looking into how to remedy this.  https://github.com/checkstyle/checkstyle/blob/6d290adcd7efb8e9f07d2730e9960c6dc3e713ba/src/it/java/com/google/checkstyle/test/base/AbstractIndentationTestSupport.java#L58 This could easily be swapped with the called method in the class that uses it, but I think we might want to consider removing `AbstractIndentationTestSupport` completely since only 1 class uses it and in `test` we have no problem with all indentation being in 1 class.  Just from observation, I am not sure why we have some of these methods as `public` which seems slightly weird.","closed","","rnveach","2017-12-08T01:10:55Z","2017-12-08T14:40:39Z"
"","5113","Pull #5113: enabled eclipse compiler to flag unused exceptions","This change configures eclipse compiler check to flag unused exceptions in tests. We should only throw exceptions as needed and this check will make sure no excess exceptions are being marked.","closed","miscellaneous,","rnveach","2017-09-15T01:44:12Z","2017-09-28T13:39:20Z"
"","5565","Add REMOVE_SWITCH mutator to the pitest profiles","There is a mutator to detect uncovered switch cases in the Pitest.  By default it is inactive. To activate the mutator, every pitest profile should be updated with ```            DEFAULTS      REMOVE_SWITCH      ```  For every uncovered switch case should be added a test case is possible. Otherwise, suppression is required.  All deactivated mutations:  http://pitest.org/quickstart/mutators/ (deactivated by default)  Constructor Calls Mutator Inline Constant Mutator Non Void Method Calls Mutator Remove Conditionals Mutator Experimental Member Variable Mutator Experimental Remove Switch Mutator Experimental Switch Mutator","closed","miscellaneous,","pbludov","2018-02-28T14:33:45Z","2018-03-08T01:16:50Z"
"","5436","Split TreeWalker to TreeWalker and JavaParser","There is a lot of duplicated code for parsing a java file into the AST in the project. #5102 need another one. To get rid of unnecessary copy'n'paste, duplicate code is need to be extracted into an utility class. Also, the TreeWalker class is too complicated and requires a split to allow future refactoring.","closed","breaking compatibility,","pbludov","2018-01-07T03:30:05Z","2018-01-24T06:40:43Z"
"","5608","JavadocType: Add ""allowedAnnotations""","There are a few classes that are quite standard and declarative in nature, for which it would be useful to allow Javadoc to be skipped.  For Spring Boot, this would include `@SpringBootApplication`, `@ConfigurationProperties`, and `@Configuration`.  It would be helpful if the JavadocType check allowed us to specify a list of annotations to allow this check to be skipped so we could configure this appropriately, similarly to the JavadocMethod check.","closed","new feature,","rupert-madden-abbott","2018-03-12T14:59:03Z","2018-11-14T05:10:30Z"
"","5487","New check: combined nested depth","There are ``NestedIfDepth`` and ``NestedForDepth`` checks. It would be useful if one could also check **combined** nested depth for ``if/for`` (and maybe also for ``while/swith/try``).   ```java for (int j = 0; j < 5; j++) {     if (condition) {         if (condition) {             for (int i = 0; i < 5; i++) {                 // 1 level of for nesting, 1 level of if nesting                // but 3 levels of if/for nesting                                 }         }     } } ```","open","new module,","jiri-pejchal","2018-01-24T14:27:10Z","2020-07-09T14:21:57Z"
"","5582","Remove usage of javax.xml.bind.XmlElement (deprecated in JDK9)","The test input class `LocalCache` is still using the `javax.xml.bind` package. http://checkstyle.sourceforge.net/xref-test/com/puppycrawl/tools/checkstyle/checks/indentation/indentation/InputIndentationFromGuava.html#L8  This problem is similar to #5027, except that it does not breaks the build. This breaks the forbiddenapi verification on JDK9.","closed","miscellaneous,","pbludov","2018-03-07T00:52:43Z","2018-03-07T14:57:03Z"
"","5561","IllegalStateException message text was changed in JDK9","The test `TokenUtilsTest.testGetIntFromInaccessibleField` is failing on JDK9 due to the text of the message was changed from  java.lang.IllegalAccessException: `Class` com.puppycrawl.tools.checkstyle.utils.TokenUtils `can not` access a member of class java.lang.Integer with modifiers ""private final""  to  java.lang.IllegalAccessException: `class` com.puppycrawl.tools.checkstyle.utils.TokenUtils `cannot` access a member of class java.lang.Integer `(in module java.base)` with modifiers ""private final""  There is at least four ways to fix it:  1. Turn `String.startsWith` to a couple of `String.contains` 2. Use a regular expression 3. Match two different strings depends of the JDK version 4. Drop the validation of the message text","closed","miscellaneous,","pbludov","2018-02-28T03:59:34Z","2018-03-06T06:50:39Z"
"","5187","Provide empty FileContentsHolder module for deprecation transition","The removal of the FileContentsHolder module in CheckStyle 8.2 caused the developers in our enterprise to have failed builds and errors in their IDEs. Given the number of developers we have, it is not possible to quickly accommodate such a sudden change. Can you put back the FileContentsHolder as an empty module, and issue a deprecation warning when it is found. This will give developers time to update their configuration files.  In terms of versioning, it would be helpful to change the major version of CheckStyle when breaking changes are made (i.e. changes that will cause existing configuration files to no longer be successfully parsed). For example, the release where the FileContentsHolder module is removed would be 9.0 rather than 8.2.","closed","","baron1405","2017-10-10T20:52:59Z","2017-12-06T00:13:16Z"
"","5868","Combined by pipe xpath query fail to match violation node","The order of xpath queries in the combined query affects the returned result, nodes those satisfy query can be missed.  Steps to reproduce:  **Java class** ``` /var/tmp $ cat InputTest.java public class InputTest {     public void test(int a, int b) {         if (a > b) {          } else {          }     }      public void foo2() {         String programmingLanguage = ""Java"";         switch (programmingLanguage) {             case ""Java"":             case ""C#"":             case ""C++"":                 String.CASE_INSENSITIVE_ORDER.equals(programmingLanguage + "" is"");                 break;             case ""C"":                 String.CASE_INSENSITIVE_ORDER.equals(programmingLanguage + "" is "");                 break;             default:                 String.CASE_INSENSITIVE_ORDER.equals(programmingLanguage + "" is "");                 break;         }     } } ```  **Config file** ``` /var/tmp $ cat config.xml                           	               ```  **Executing checkstyle** ``` /var/tmp $ java $RUN_LOCALE -jar checkstyle-X.XX-all.jar -c config.xml InputTest.java Starting audit... [ERROR] /var/tmp/InputTest.java:2:5: Cyclomatic Complexity is 2 (max allowed is 0). [CyclomaticComplexity] [ERROR] /var/tmp/InputTest.java:10:5: Cyclomatic Complexity is 5 (max allowed is 0). [CyclomaticComplexity] Audit done. Checkstyle ends with 2 errors. ```  **Generating xpath queries** For each violation message we generate xpath queries using line number and column number of the violation  ``` /var/tmp $ java $RUN_LOCALE -jar checkstyle-X.XX-all.jar -s 2:5 InputTest.java /CLASS_DEF[@text='InputTest']/OBJBLOCK/METHOD_DEF[@text='test'] /CLASS_DEF[@text='InputTest']/OBJBLOCK/METHOD_DEF[@text='test']/MODIFIERS /CLASS_DEF[@text='InputTest']/OBJBLOCK/METHOD_DEF[@text='test']/MODIFIERS/LITERAL_PUBLIC  /var/tmp $ java $RUN_LOCALE -jar checkstyle-X.XX-all.jar -s 10:5 InputTest.java /CLASS_DEF[@text='InputTest']/OBJBLOCK/METHOD_DEF[@text='foo2'] /CLASS_DEF[@text='InputTest']/OBJBLOCK/METHOD_DEF[@text='foo2']/MODIFIERS /CLASS_DEF[@text='InputTest']/OBJBLOCK/METHOD_DEF[@text='foo2']/MODIFIERS/LITERAL_PUBLIC ```  **Updated config file** `SuppressionXpathFilter` module was added ``` /var/tmp $ cat config.xml                           	                	               ```  **Suppressions File** Let's combine all xpath queries using `|` delimeter and execute checkstyle ``` /var/tmp $ cat suppressions_xpath.xml            ``` **Executing checkstyle** Two errors should have been suppressed, but for some reason, the first error was not suppressed ``` /var/tmp $ java $RUN_LOCALE -jar checkstyle-X.XX-all.jar -c config.xml InputTest.java Starting audit... [ERROR] /Users/timurtibeyev/Documents/test/CyclomaticComplexityCheck/InputTest.java:2:5: Cyclomatic Complexity is 2 (max allowed is 0). [CyclomaticComplexity] Audit done. Checkstyle ends with 1 errors. ```  **Suppressions File** Let's rearrange queries, move fourth query to second place and test again ``` /var/tmp $ cat suppressions_xpath.xml            ```  **Executing checkstyle** No violation occurred  ``` /var/tmp $ java $RUN_LOCALE -jar checkstyle-X.XX-all.jar -c config.xml InputTest.java Starting audit... Audit done. ```  -------","closed","xpath,","timurt","2018-05-29T13:12:18Z","2020-10-06T14:45:59Z"
"","5058","NoWhitespaceBefore and empty for loop conditions","The Google Java style guide requires horizontal whitespace after `;`: https://google.github.io/styleguide/javaguide.html#s4.6.2-horizontal-whitespace. In for loops with an empty condition, this means that there should be whitespace after the `;` that terminates the initializer and before the `;` that terminates the condition. [NoWhitespaceBefore](http://checkstyle.sourceforge.net/config_whitespace.html#NoWhitespaceBefore) currently emits an unwanted error in this case.  ```java class EmptyForLoop {   public static void f() {     for (; ; ) {} // these spaces are required by Google Style   } } ```  ```xml                                   ```  ```bash $ java -jar checkstyle-8.2-all.jar -c checks.xml Test.java ... [ERROR] Test.java:3:11: ';' is preceded with whitespace. [NoWhitespaceBefore] ```","closed","approved,","cushon","2017-09-02T16:08:33Z","2017-09-08T04:25:19Z"
"","5467","spelling: fix German translation of 'tag'","The German translation of 'tag' is neutral, not male (at least in the sense of a markup tag), so it must be ""das Tag"", not ""der Tag"". Reference: https://www.duden.de/rechtschreibung/Tag_Strukturelement_Markierung","closed","","Bananeweizen","2018-01-17T19:12:30Z","2018-03-04T17:36:56Z"
"","5999","Sevntu fails on certificate issue with local verify","The following is the results of `mvn verify test` on my local Windows PC with master. It was never an issue before. ``` [INFO] --- maven-checkstyle-plugin:3.0.0:check (sevntu-checkstyle-check) @ checkstyle --- [INFO] ------------------------------------------------------------------------ [INFO] BUILD FAILURE [INFO] ------------------------------------------------------------------------ [INFO] Total time: 01:56 min (Wall Clock) [INFO] Finished at: 2018-07-03T21:44:19-04:00 [INFO] Final Memory: 29M/192M [INFO] ------------------------------------------------------------------------ [ERROR] Failed to execute goal org.apache.maven.plugins:maven-checkstyle-plugin:3.0.0:check  (sevntu-checkstyle-check) on project checkstyle: Failed during checkstyle execution:  Failed during checkstyle configuration: unable to parse configuration stream:  sun.security.validator. ValidatorException: PKIX path building failed: sun.security.provider.certpath. SunCertPathBuilderException: unable to find valid certification path to requested target  -> [Help 1] org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.maven.plugins:maven-checkstyle-plugin:3.0.0:check (sevntu-checkstyle-check)  on project checkstyle: Failed during checkstyle execution 	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:212) 	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153) 	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145) 	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:116) 	at org.apache.maven.lifecycle.internal.builder.multithreaded.MultiThreadedBuilder$1.call (MultiThreadedBuilder.java:185) 	at org.apache.maven.lifecycle.internal.builder.multithreaded.MultiThreadedBuilder$1.call (MultiThreadedBuilder.java:181) 	at java.util.concurrent.FutureTask.run(FutureTask.java:266) 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) 	at java.util.concurrent.FutureTask.run(FutureTask.java:266) 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) 	at java.lang.Thread.run(Thread.java:745) Caused by: org.apache.maven.plugin.MojoExecutionException: Failed during checkstyle  execution 	at org.apache.maven.plugins.checkstyle.CheckstyleViolationCheckMojo.execute (CheckstyleViolationCheckMojo.java:538) 	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo (DefaultBuildPluginManager.java:134) 	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:207) 	... 11 more Caused by: org.apache.maven.plugins.checkstyle.exec.CheckstyleExecutorException:  Failed during checkstyle configuration 	at org.apache.maven.plugins.checkstyle.exec.DefaultCheckstyleExecutor.getConfiguration (DefaultCheckstyleExecutor.java:441) 	at org.apache.maven.plugins.checkstyle.exec.DefaultCheckstyleExecutor.executeCheckstyle (DefaultCheckstyleExecutor.java:213) 	at org.apache.maven.plugins.checkstyle.CheckstyleViolationCheckMojo.execute (CheckstyleViolationCheckMojo.java:529) 	... 13 more Caused by: com.puppycrawl.tools.checkstyle.api.CheckstyleException:  unable to parse configuration stream 	at com.puppycrawl.tools.checkstyle.ConfigurationLoader.loadConfiguration(ConfigurationLoader.java:331) 	at com.puppycrawl.tools.checkstyle.ConfigurationLoader.loadConfiguration(ConfigurationLoader.java:245) 	at com.puppycrawl.tools.checkstyle.ConfigurationLoader.loadConfiguration(ConfigurationLoader.java:220) 	at org.apache.maven.plugins.checkstyle.exec.DefaultCheckstyleExecutor.getConfiguration (DefaultCheckstyleExecutor.java:377) 	... 15 more Caused by: javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException:  PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException:  unable to find valid certification path to requested target 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:192) 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949) 	at sun.security.ssl.Handshaker.fatalSE(Handshaker.java:302) 	at sun.security.ssl.Handshaker.fatalSE(Handshaker.java:296) 	at sun.security.ssl.ClientHandshaker.serverCertificate(ClientHandshaker.java:1509) 	at sun.security.ssl.ClientHandshaker.processMessage(ClientHandshaker.java:216) 	at sun.security.ssl.Handshaker.processLoop(Handshaker.java:979) 	at sun.security.ssl.Handshaker.process_record(Handshaker.java:914) 	at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:1062) 	at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1375) 	at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1403) 	at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1387) 	at sun.net.www.protocol.https.HttpsClient.afterConnect(HttpsClient.java:559) 	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect (AbstractDelegateHttpsURLConnection.java:185) 	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0 (HttpURLConnection.java:1513) 	at sun.net.www.protocol.http.HttpURLConnection.getInputStream (HttpURLConnection.java:1441) 	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream (HttpsURLConnectionImpl.java:254) 	at org.apache.xerces.impl.XMLEntityManager.setupCurrentEntity(Unknown Source) 	at org.apache.xerces.impl.XMLEntityManager.startEntity(Unknown Source) 	at org.apache.xerces.impl.XMLEntityManager.startDTDEntity(Unknown Source) 	at org.apache.xerces.impl.XMLDTDScannerImpl.setInputSource(Unknown Source) 	at org.apache.xerces.impl.XMLDocumentScannerImpl$DTDDispatcher.dispatch (Unknown Source) 	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument (Unknown Source) 	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source) 	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source) 	at org.apache.xerces.parsers.XMLParser.parse(Unknown Source) 	at org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source) 	at org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser.parse(Unknown Source) 	at com.puppycrawl.tools.checkstyle.XmlLoader.parseInputSource(XmlLoader.java:98) 	at com.puppycrawl.tools.checkstyle.ConfigurationLoader.parseInputSource (ConfigurationLoader.java:174) 	at com.puppycrawl.tools.checkstyle.ConfigurationLoader.loadConfiguration (ConfigurationLoader.java:321) 	... 18 more Caused by: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException:  unable to find valid certification path to requested target 	at sun.security.validator.PKIXValidator.doBuild(PKIXValidator.java:387) 	at sun.security.validator.PKIXValidator.engineValidate(PKIXValidator.java:292) 	at sun.security.validator.Validator.validate(Validator.java:260) 	at sun.security.ssl.X509TrustManagerImpl.validate(X509TrustManagerImpl.java:324) 	at sun.security.ssl.X509TrustManagerImpl.checkTrusted(X509TrustManagerImpl.java:229) 	at sun.security.ssl.X509TrustManagerImpl.checkServerTrusted(X509TrustManagerImpl.java:124) 	at sun.security.ssl.ClientHandshaker.serverCertificate(ClientHandshaker.java:1491) 	... 44 more Caused by: sun.security.provider.certpath.SunCertPathBuilderException:  unable to find valid certification path to requested target 	at sun.security.provider.certpath.SunCertPathBuilder.build(SunCertPathBuilder.java:141) 	at sun.security.provider.certpath.SunCertPathBuilder.engineBuild(SunCertPathBuilder.java:126) 	at java.security.cert.CertPathBuilder.build(CertPathBuilder.java:280) 	at sun.security.validator.PKIXValidator.doBuild(PKIXValidator.java:382) 	... 50 more ```","closed","","rnveach","2018-07-04T01:57:37Z","2018-07-04T16:21:54Z"
"","5044","UnusedImportsCheck does not handle qualified type names","The following example contains a reference to `java.util.Map` in javadoc as the qualifier in `Map.Entry`, but checkstyle does not detect it as a use of the import.  ```java package test;  import java.util.Map;  class Test {   /**    * @see Map.Entry    */   public void f() {} } ```  ```xml                            ```  ```bash $ java -jar checkstyle-8.2-all.jar -c checks.xml Test.java ... [ERROR] Test.java:3:8: Unused import - java.util.Map. [UnusedImports] ```","closed","","cushon","2017-09-01T17:00:52Z","2017-09-01T17:30:19Z"
"","5524","No documentation","The documenation hosted here http://checkstyle.sourceforge.net/ is unavailable.","closed","","baldurgaldur","2018-02-15T11:35:37Z","2018-02-21T15:47:35Z"
"","5622","Drop findbugs","The development of the findbugs project is stalled. Building CS with JDK9 generates the following warnings: ``` [INFO] --- findbugs-maven-plugin:3.0.5:findbugs (findbugs) @ checkstyle --- WARNING: An illegal reflective access operation has occurred WARNING: Illegal reflective access by org.codehaus.groovy.reflection.CachedClass (file:/Users/monomac/.m2/repository/org/codehaus/groovy/groovy/2.4.12/groovy-2.4.12.jar) to method java.lang.Object.finalize() WARNING: Please consider reporting this to the maintainers of org.codehaus.groovy.reflection.CachedClass WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations WARNING: All illegal access operations will be denied in a future release [INFO] Fork Value is true      [java] WARNING: An illegal reflective access operation has occurred      [java] WARNING: Illegal reflective access by org.dom4j.io.SAXContentHandler (file:/Users/monomac/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar) to method com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$LocatorProxy.getEncoding()      [java] WARNING: Please consider reporting this to the maintainers of org.dom4j.io.SAXContentHandler      [java] WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations      [java] WARNING: All illegal access operations will be denied in a future release      [java] The following classes needed for analysis were missing:      [java]   java.lang.Object      [java]   java.lang.Enum      [java]   java.lang.annotation.Annotation      [java]   java.util.logging.Filter      [java]   java.io.Serializable      [java]   org.xml.sax.helpers.DefaultHandler      [java]   java.util.EventObject      [java]   java.util.EventListener      [java]   java.lang.Exception      [java]   java.lang.Comparable      [java]   java.util.ResourceBundle$Control      [java]   java.util.Properties      [java]   javax.swing.CellEditor      [java]   javax.swing.tree.DefaultTreeSelectionModel      [java]   javax.swing.AbstractAction      [java]   javax.swing.filechooser.FileFilter      [java]   javax.swing.JFrame      [java]   javax.swing.tree.TreeModel      [java]   java.awt.event.MouseAdapter      [java]   javax.swing.table.TableCellEditor      [java]   javax.swing.JTable      [java]   javax.swing.JTree      [java]   javax.swing.table.TableCellRenderer      [java]   javax.swing.event.TreeExpansionListener      [java]   javax.swing.event.TreeModelListener      [java]   javax.swing.table.AbstractTableModel      [java]   javax.xml.transform.Source      [java]   java.lang.Cloneable      [java]   javax.xml.transform.SourceLocator      [java]   org.xml.sax.Locator      [java]   java.awt.Graphics      [java]   javax.swing.UIManager      [java]   javax.swing.tree.DefaultTreeCellRenderer      [java]   java.awt.Color      [java]   java.util.List      [java]   java.util.Iterator      [java]   java.lang.String      [java]   java.lang.Integer      [java]   java.util.ArrayList      [java]   java.util.ArrayDeque      [java]   java.util.Deque      [java]   java.lang.StringBuilder      [java]   java.lang.IllegalStateException      [java]   java.util.Set      [java]   java.util.Objects      [java]   java.util.stream.Stream      [java]   java.util.stream.Collectors      [java]   java.util.HashSet      [java]   java.util.LinkedList      [java]   java.util.Arrays      [java]   java.lang.Character      [java]   java.util.regex.Pattern      [java]   java.util.regex.Matcher      [java]   java.lang.IllegalArgumentException      [java]   java.lang.UnsupportedOperationException      [java]   java.lang.ref.WeakReference      [java]   java.util.Map      [java]   java.util.Collection      [java]   java.util.HashMap      [java]   java.util.BitSet      [java]   java.util.Map$Entry      [java]   java.util.NavigableMap      [java]   java.util.TreeMap      [java]   java.io.File      [java]   java.util.Collections      [java]   java.util.SortedSet      [java]   java.lang.ThreadLocal      [java]   java.util.TreeSet      [java]   java.lang.reflect.Constructor      [java]   java.util.AbstractMap$SimpleEntry      [java]   java.nio.file.Paths      [java]   java.nio.file.Path      [java]   java.lang.Class      [java]   java.io.Closeable      [java]   java.net.URL      [java]   java.util.Locale      [java]   java.lang.CharSequence      [java]   javax.xml.transform.Result      [java]   java.lang.System      [java]   java.io.FileInputStream      [java]   java.nio.file.Files      [java]   java.io.FileOutputStream      [java]   java.lang.Long      [java]   java.io.ByteArrayOutputStream      [java]   java.security.MessageDigest      [java]   java.io.ObjectOutputStream      [java]   java.net.URI      [java]   java.io.BufferedInputStream      [java]   javax.swing.tree.TreePath      [java]   java.awt.Font      [java]   javax.swing.JTextArea      [java]   javax.swing.table.TableModel      [java]   javax.swing.tree.TreeSelectionModel      [java]   javax.swing.ListSelectionModel      [java]   java.awt.Dimension      [java]   javax.swing.KeyStroke      [java]   javax.swing.InputMap      [java]   javax.swing.ActionMap      [java]   java.awt.event.MouseListener      [java]   java.awt.FontMetrics      [java]   javax.swing.table.TableColumn      [java]   java.lang.Math      [java]   javax.swing.LookAndFeel      [java]   java.util.ResourceBundle      [java]   java.text.MessageFormat      [java]   java.util.Hashtable      [java]   java.awt.Rectangle      [java]   java.awt.event.MouseEvent      [java]   java.awt.AWTEvent      [java]   java.lang.Double      [java]   java.util.EnumMap      [java]   java.io.IOException      [java]   java.nio.charset.StandardCharsets      [java]   java.nio.charset.Charset      [java]   java.util.Optional      [java]   javax.xml.parsers.SAXParserFactory      [java]   org.xml.sax.Attributes      [java]   org.xml.sax.InputSource      [java]   org.xml.sax.SAXException      [java]   java.lang.NumberFormatException      [java]   java.io.InputStream      [java]   javax.swing.SwingUtilities      [java]   java.lang.Boolean      [java]   java.util.ListIterator      [java]   java.math.BigInteger      [java]   java.lang.RuntimeException      [java]   javax.swing.event.TreeExpansionEvent      [java]   org.xml.sax.SAXParseException      [java]   java.io.StringReader      [java]   java.io.RandomAccessFile      [java]   javax.xml.parsers.SAXParser      [java]   org.xml.sax.XMLReader      [java]   java.lang.ClassLoader      [java]   java.util.LinkedHashSet      [java]   java.util.Queue      [java]   java.util.StringTokenizer      [java]   java.util.concurrent.ConcurrentHashMap      [java]   java.io.OutputStreamWriter      [java]   java.io.PrintWriter      [java]   java.io.StringWriter      [java]   java.lang.Throwable      [java]   javax.swing.event.ListSelectionEvent      [java]   javax.swing.DefaultListSelectionModel      [java]   java.util.logging.Level      [java]   java.lang.Package      [java]   java.io.PrintStream      [java]   java.util.logging.Logger      [java]   java.util.logging.ConsoleHandler      [java]   java.util.SortedMap      [java]   java.util.Enumeration      [java]   java.lang.reflect.Field      [java]   java.util.function.Predicate      [java]   java.lang.reflect.Modifier      [java]   java.util.stream.IntStream      [java]   javax.swing.event.CellEditorListener      [java]   javax.swing.event.EventListenerList      [java]   javax.swing.event.ChangeEvent      [java]   javax.swing.event.TreeModelEvent      [java]   java.awt.event.ActionEvent      [java]   java.util.logging.LogRecord      [java]   java.nio.charset.CodingErrorAction      [java]   java.nio.charset.CharsetDecoder      [java]   java.io.BufferedReader      [java]   java.io.FileNotFoundException      [java]   java.io.InputStreamReader      [java]   java.io.Reader      [java]   java.lang.ClassNotFoundException      [java]   java.io.UnsupportedEncodingException      [java]   java.io.LineNumberReader      [java]   javax.swing.JFileChooser      [java]   java.util.function.Consumer      [java]   java.lang.Thread      [java]   java.lang.Error      [java]   java.lang.StringBuffer      [java]   java.util.concurrent.atomic.AtomicInteger      [java]   javax.swing.JComboBox      [java]   java.awt.BorderLayout      [java]   java.awt.LayoutManager      [java]   javax.swing.JScrollPane      [java]   javax.swing.JSplitPane      [java]   java.awt.Component      [java]   javax.swing.JButton      [java]   javax.swing.JLabel      [java]   javax.swing.BorderFactory      [java]   javax.swing.JPanel      [java]   java.awt.GridLayout      [java]   javax.swing.JOptionPane      [java]   java.net.URLConnection      [java]   java.util.PropertyResourceBundle      [java]   java.lang.NoSuchFieldError      [java]   javax.swing.tree.TreeCellRenderer      [java]   java.lang.UnsatisfiedLinkError      [java]   java.lang.IllegalAccessError      [java]   java.lang.NoSuchMethodError      [java]   java.lang.IncompatibleClassChangeError      [java]   java.lang.AbstractMethodError      [java]   java.util.MissingResourceException      [java]   java.lang.invoke.LambdaMetafactory      [java]   java.lang.invoke.MethodHandles$Lookup      [java]   java.lang.invoke.MethodHandles      [java]   java.lang.NegativeArraySizeException      [java]   java.util.AbstractCollection      [java]   javax.xml.parsers.ParserConfigurationException      [java]   org.xml.sax.ContentHandler      [java]   org.xml.sax.EntityResolver      [java]   org.xml.sax.ErrorHandler      [java]   java.lang.ReflectiveOperationException      [java]   java.lang.ClassFormatError      [java]   java.lang.VerifyError      [java]   java.lang.ExceptionInInitializerError      [java]   java.lang.NullPointerException      [java]   java.net.MalformedURLException      [java]   java.lang.InstantiationException      [java]   java.net.URISyntaxException      [java]   java.util.regex.PatternSyntaxException      [java]   java.lang.IllegalAccessException      [java]   java.util.AbstractMap      [java]   java.nio.file.attribute.FileAttribute      [java]   java.security.NoSuchAlgorithmException      [java]   java.nio.charset.UnsupportedCharsetException      [java]   java.lang.reflect.InvocationTargetException      [java]   java.awt.event.KeyEvent      [java]   javax.swing.SwingConstants      [java]   java.lang.StackOverflowError      [java]   javax.swing.WindowConstants      [java]   java.util.concurrent.ConcurrentHashMap$KeySetView      [java] Missing classes: 186 ```  Given that all of the Findbugs are saved and the Spotbugs, it is safe to drop the Findbugs check in favor of the Spotbugs.","closed","miscellaneous,","pbludov","2018-03-19T11:01:12Z","2018-03-20T14:06:06Z"
"","5663","Add openjdk8/9 to Travis/AppVeyor","The code should be able to build on different JDKs. Currently, the Travis CI has support for Open/Oracle JDK8/9.","closed","miscellaneous,","pbludov","2018-03-30T04:22:03Z","2018-03-30T13:15:36Z"
"","5586","Use Jacoco instead of Cobertura for coverage check","The Cobertura coverage is the last stopper on the way to the build the Checkstyle with JDK9.  Now it is ready to be replaced with the Jacoco coverage.","closed","miscellaneous,","pbludov","2018-03-07T01:38:33Z","2018-03-16T13:54:15Z"
"","5971","Remove usages of ANTLRInputStream","The class `org.antlr.v4.runtime.ANTLRInputStream` is [deprecated](http://www.antlr.org/api/Java/org/antlr/v4/runtime/ANTLRInputStream.html) and should be replaced with a call to `CharStreams.fromString`  There is only one usage of the class `ANTLRInputStream` in the project: ```     private JavadocParser createJavadocParser(String blockComment) {         final ANTLRInputStream input = new ANTLRInputStream(blockComment); ``` https://github.com/checkstyle/checkstyle/blob/master/src/main/java/com/puppycrawl/tools/checkstyle/JavadocDetailNodeParser.java#L171","closed","miscellaneous,","pbludov","2018-06-26T05:46:03Z","2018-06-28T12:20:49Z"
"","5504","LocalVariableName should allow second character to be an upper case ASCII letter","The checkstyle predefined config file `google_checks.xml` disallows the second character of a variable name to be upper case.  Presumably, this is to enforce the [Google styleguide rule](https://google.github.io/styleguide/javaguide.html#s5.1-identifier-names) of ""no special prefixes"" > In Google Style special prefixes or suffixes, like those seen in the examples `name_`, `mName`, `s_name` and `kName`, are not used.  This rule is to avoid prefixes which indicate what the type (int, bool, string, etc) or role (input variable, output variable, etc) or scope (field, local, etc) of the variable is.  However, there are also valid reasons to have a variable name consisting of a single lowercase letter followed immediately by an upper case letter. An example from my personal experience is `eId`, which is an abbreviation of ""expression ID"". Here, the `e` prefix is not a _""special""_ prefix, like the ones disallowed by the google style sheet, but rather a part of the abbreviation describing the variable.  I believe the `LocalVariableName` checkstyle module should have its format redefined, to allow such cases. A regular expression which would suffice for this would be `""^[a-z][a-zA-Z0-9]*$""`.    --------------  Current behaviour:  `andtho:/tmp$ javac Test.java`:  ``` ```  `andtho:/tmp$ cat Test.java`:  ``` public class Test {   /** Main method. */   public static void main(String[] args) {     // eId abbreviates ""expression ID""     String eId = ""Hello world!"";     System.out.println(eId);   } } ```  `andtho:/tmp$ curl https://raw.githubusercontent.com/checkstyle/checkstyle/master/src/main/resources/google_checks.xml > config.xml` `andtho:/tmp$ cat config.xml`:  ``` …      …              …                                                                  …       ```  `andtho:/tmp$ java -Duser.language=en -Duser.country=US -jar checkstyle-8.8-all.jar -c config.xml Test.java`:  ``` Starting audit... [WARN] /private/tmp/Test.java:5:12: Local variable name 'eId' must match pattern '^[a-z]([a-z0-9][a-zA-Z0-9]*)?$'. [LocalVariableName] Audit done. ```  ---------------  Expected behaviour:  `andtho:/tmp$ java -Duser.language=en -Duser.country=US -jar checkstyle-8.8-all.jar -c config.xml Test.java`:  ``` Starting audit... Audit done. ```","closed","","andersthorbeck","2018-01-31T15:38:48Z","2018-02-06T14:45:20Z"
"","5184","AbstractFileSetCheck is not thread safe","The changes from https://github.com/checkstyle/checkstyle/commit/6fbda7a39d91a24661a6c6100ced93a2815b9bc5 are not enough.  Although it solves the issue of incorrect messages showing, we can still run into ConcurrentModificationException  ``` Caused by: java.util.ConcurrentModificationException 	at java.util.TreeMap$PrivateEntryIterator.nextEntry(TreeMap.java:1211) 	at java.util.TreeMap$KeyIterator.next(TreeMap.java:1265) 	at java.util.TreeMap.buildFromSorted(TreeMap.java:2563) 	at java.util.TreeMap.buildFromSorted(TreeMap.java:2508) 	at java.util.TreeMap.addAllForTreeSet(TreeMap.java:2466) 	at java.util.TreeSet.addAll(TreeSet.java:308) 	at com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck.addMessages(AbstractFileSetCheck.java:145) 	at com.puppycrawl.tools.checkstyle.TreeWalker.processFiltered(TreeWalker.java:213) 	at com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck.process(AbstractFileSetCheck.java:82) 	at com.puppycrawl.tools.checkstyle.Checker.processFile(Checker.java:316) 	at com.puppycrawl.tools.checkstyle.Checker.processFiles(Checker.java:286) ```","closed","","hhuijser","2017-10-09T08:48:29Z","2017-10-10T02:50:37Z"
"","5458","Import Control: add an ability to provide messages on  elements","The `````` is really great tool and very flexible. Unfortunately, when the violation appears, the message is very generic - only includes the import statement that violated the rules.  Other usefull information would be:  * In what file the rule was violated (as there can be many in the package structure; even if you keep the number of them to minimum, having to check 3 files is an overhead). * What rule was violated, i.e. developers want to know if the whole package is blacklisted or only the class. * Why the class is blacklisted?  The two first could be solved by extending the current message format with extra placeholders, but the last one is more problematic as it requires extending the Import Control format, possibly updating the DTD.  Do you think this is a good idea?","closed","","lqc","2018-01-13T10:17:38Z","2019-02-27T13:29:47Z"
"","5718","UpperEll rule description gives bogus reason: Capital(!) L looks like 1","The [UpperEll](http://checkstyle.sourceforge.net/config_misc.html#UpperEll) rule description ATM describes its reasoning like this:  > The capital L looks a lot like 1.  This is clearly bogus; the lower-case L (l) looks a lot like 1.  The rule itself is correct, just the reason given is not.","closed","miscellaneous,","sewe","2018-04-12T08:02:39Z","2018-04-12T19:51:16Z"
"","5456","LeftCurly: must handle all possible occurrences of {","The [LeftCurlyCheck](http://checkstyle.sourceforge.net/config_blocks.html#LeftCurly) LeftCurlyCheck must handle all possible occurrences of `{`(except `INSTANCE_INIT`). Currently, it lacks support for annotation arrays (`ANNOTATION_ARRAY_INIT`) ``` @Mapper(uses = {     Foo.class,     Bar.class,     Baz.class }) public class FooMapper {} ```  Anonymous classes (`LITERAL_NEW`) ``` Runnable runnable = new Runnable() {     @Override public void run() {     } }; ```  Arrays (`ARRAY_INIT`) ``` int[] array = new int[] { 1, 2, 3 }; ``` The last is questionable, since multidimensional arrays may have a different style for different levels, i.e.: ``` int[][] array = new int[][] {   { 1, 2, 3 },   { 1, 2, 3 },   { 1, 2, 3 }, }; ```","closed","","pbludov","2018-01-11T02:39:33Z","2018-03-25T08:09:56Z"
"","5249","Fix plural agreement grammar in documentation for DesignForExtension","The (most excellent) DesignForExtension documentation has minor grammatical errors involving plural agreement in two places.  1. `DesignForExtensionCheck.java`    - reads ""makes sense only for library projects (not an application projects)""       - ""an application projects"" disagrees 1. `xdocs/config_design.xml`    - reads ""makes sense only for library project (not an application projects)""       - ""for library project"" mismatches the JavaDoc, and disagrees       - ""an application projects"" disagrees","closed","miscellaneous,","Dispader","2017-11-06T21:32:05Z","2017-11-07T11:30:08Z"
"","5562","config: Travis JDK9 build","Testless build with oraclejdk9.","closed","","pbludov","2018-02-28T07:13:48Z","2018-02-28T13:53:47Z"
"","5690","Test commit","Test pull request","closed","","andreahuber","2018-04-05T09:53:44Z","2018-04-05T16:32:40Z"
"","5649","Test wercker","Test PR as requested in https://github.com/checkstyle/checkstyle/pull/5495#issuecomment-363429183   based on 5457ec5bb42a9ae9c97f71efce2e1aef56d9ba6f which is a commit right before version update in 033ffae886e9bccf729648eef3250bf8baace202","closed","","Vladlis","2018-03-26T20:30:06Z","2018-03-29T08:57:22Z"
"","5460","ImportOrder: option=under; doesn't allow empty line between 'import' and 'import static'","Test file:  ``` $ cat ./Test.java  package test.test;  import java.some.common.collect1.Lists1;  import static java.some.common.collect1.Lists1.asList;  import com.google.common.collect.Lists;  import static com.google.common.collect.Lists.asList;  public class Test {     public void test() {         Lists.cartesianProduct(null, null);         asList(null, null);     } }  ```  Config:  ``` $ cat ./config.xml                                                               ```  `java -Duser.language=en -Duser.country=US -jar ~/Downloads/checkstyle-8.7-all.jar -c config.xml Test.java`:  ``` Starting audit... [ERROR] /var/tmp/Test.java:5: Extra separation in import group before  'java.some.common.collect1.Lists1.asList' [ImportOrder] [ERROR] /var/tmp/Test.java:9: Extra separation in import group before  'com.google.common.collect.Lists.asList' [ImportOrder] Audit done. Checkstyle ends with 2 errors.  ```  Eclipse Mars inserts empty lines between non static and static imports. This used to work with checkstyle 7.4. With latest checkstyle I could not make a config that would work.  Above file is saved with Eclipse's import order like this:  ``` $ cat ./style.importorder  9=\#net 8=net 7=\#com 6=com 5=\#org 13=\#io 4=org 12=io 3=\#javax 11=\#edu 2=javax 10=edu 1=\#java 0=java ```  Please let me know if more information is needed.","open","approved,","mar-kolya","2018-01-14T03:32:27Z","2018-03-18T14:20:54Z"
"","5949","Update Teamcity to use IntelliJ IDEA 2018.1.4","Teamcity was upgraded to 2018.1.4 version that is bundled in Teamcity. previously we used 2017.2.6 at TeamCity. Builds started to fail.  There is no 2017.2.6 version anymore for selection in Teamcity.  We need to resolve all violations and upgrade to 2018.1.4  https://www.jetbrains.com/idea/download/previous.html https://download.jetbrains.com/idea/ideaIU-2018.1.4.tar.gz  Violations: https://teamcity.jetbrains.com/viewLog.html?buildId=1490383&tab=Inspection&buildTypeId=Checkstyle_IdeaInspectionsMaster  till all resolved I did downgrade to I downgraded to 2017.2.4 in TeamCity . ```  Control flow issues 'if' statement with identical branches (Errors) (3)  General Inconsistent line separators (Errors) (2) Redundant suppression (Errors) (14)  JUnit issues JUnit test case with no tests (Errors) (6)  Performance issues Call to 'Collection.toArray()' with zero-length array argument (Errors) (13)  Probable bugs Constant conditions & exceptions (29)  Reflective access issues Reflective invocation arguments mismatch (4)  RegExp Begin or end anchor in unexpected position (4)  Verbose or redundant code constructs Redundant Collection operation (2) Redundant String operation (2) ```","closed","miscellaneous,","romani","2018-06-19T04:49:21Z","2018-06-25T00:59:47Z"
"","5133","SuppressWarningsFilter suppress all violation that are expected on SuppressWarnings(""all"")","Taken from https://github.com/checkstyle/sonar-checkstyle/issues/85#issuecomment-331107097 It is required to violate all `@SuppressWarnings(""all"")` in code but usage SuppressWarningsFilter for other suppressions suppress violations on `@SuppressWarnings(""all"")`.  Issue is at https://github.com/checkstyle/checkstyle/blob/master/src/main/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolder.java#L159 , SuppressWarningsHolder/SuppressWarningsFilter process `all` in non configurable by user way. We need to figureout how to make it possible by configuration.  ``` $ cat Test.java  public class Test {     @SuppressWarnings(""all"")     public Test() {} }  $ cat config.xml                                                             $ cat config2.xml                                                                           $ java -jar checkstyle-8.2-all.jar -c config.xml Test.java  Starting audit... [ERROR]/var/tmp/Test.java:2:23: The warning 'all' cannot be suppressed at this location. [SuppressWarnings] Audit done. Checkstyle ends with 1 errors.  $ java -jar checkstyle-8.2-all.jar -c config2.xml Test.java  Starting audit... Audit done. ```","open","approved,","romani","2017-09-21T12:51:55Z","2018-01-23T07:34:11Z"
"","5878","Generate single xpath query by CLI","taken from https://github.com/checkstyle/checkstyle/pull/5762#discussion_r192223618  ``` $ cat config.xml                                                       $ cat TestClass.java  package org.checkstyle.suppressionxpathfilter.cyclomaticcomplexity;  public class TestClass {     public void test(int a, int b) { //warn         if (a > b) {          } else {          }     }  $ java -jar checkstyle-8.10-all.jar -c config.xml TestClass.java  Starting audit... [ERROR] TestClass.java:4:5: Cyclomatic Complexity is 2 (max allowed is 0). [CyclomaticComplexity] Audit done. Checkstyle ends with 1 errors.  $ java -jar checkstyle-8.10-all.jar -s 4:5 TestClass.java /CLASS_DEF[@text='TestClass']/OBJBLOCK/METHOD_DEF[@text='test'] /CLASS_DEF[@text='TestClass']/OBJBLOCK/METHOD_DEF[@text='test']/MODIFIERS /CLASS_DEF[@text='TestClass']/OBJBLOCK/METHOD_DEF[@text='test']/MODIFIERS/LITERAL_PUBLIC  $ java -jar checkstyle-8.10-all.jar -t TestClass.java | grep ""4:4""     |--METHOD_DEF -> METHOD_DEF [4:4]     |   |--MODIFIERS -> MODIFIERS [4:4]     |   |   `--LITERAL_PUBLIC -> public [4:4] ```  We generate 3 query as we are not sure what AST was actually as violated ..... for users it is not clear why 3 ? should he use all 3? ..... there should be only one query generated by CLI that works.    looks like it is due to the fact that Check report problem on some AST (non on node that have text element, from code). That is weird and eventually be a problem.","open","","romani","2018-06-01T23:12:28Z","2018-06-17T16:00:15Z"
"","5879","new filter SuppressionXpathSingleFilter","taken from https://github.com/checkstyle/checkstyle/issues/65#issuecomment-393607904  Inlining of filters is set of a lot of issues, it is a problem already more then 10 year. Bunch of issues like this was in sourceforge tracker. Usage of additional files is problematic if verification should be done in multiple systems and IDEs (see https://github.com/checkstyle/checkstyle/issues/5756#issuecomment-393299082, ....). Additional problem is that there are two types of suppressions: - wide suppression (kind of part of style requirements, but Check does not allow this in configuration) - wont fix/false-positive suppressions. This suppressions are specific to certain code so could exists in separate file to be active only in certain project.  idea (new filter with all properties of SuppressionXpathFilter external files): ```               ```  another example: ```         ``` vs (separate xml file part)  ```   ```  it will NOT be compact, but it will be in-lined in main config, and we do not do revolutionary changes in project for now to allow all types of tags and inline configuration under module tag.  All functionality of filtering is already implemented, new filter just need to reuse it.  Documentation: http://checkstyle.sourceforge.net/writingfilters.html http://checkstyle.sourceforge.net/config_filters.html#SuppressionFilter","closed","new module,","romani","2018-06-02T13:42:37Z","2019-02-03T14:09:39Z"
"","5616","Remove remnants of cobertura usage","taken from https://github.com/checkstyle/checkstyle/issues/5586#issuecomment-373669840  According to https://github.com/checkstyle/checkstyle/search?utf8=%E2%9C%93&q=cobertura&type= , there are still some places with cobertura in the source including our restrictions on the stream classes in the import control and the sevntu config file. Since we dropped cobertura, we should try to remove everything we needed because of it.","closed","miscellaneous,","romani","2018-03-16T13:52:50Z","2018-04-20T20:55:41Z"
"","5103","TranslationCheck reports duplicate lines in xml report","taken from #5043   When checking several files with TranslationCheck and generating xml output, check reports duplicate lines with default translation file. Moreover, on different operation systems this line appears in different places.  steps to reproduce: 1) generate properties files with some error, for e.z.: ``` $ cat props/InputTranslationCheckFireErrors.properties  someKey=Some key anotherKey=one more ``` and ``` $ cat props/InputTranslationCheckFireErrors_de.properties  someKey=einige Schlüssel ``` 2) generate checkstyle profile, so that there was some absent translation: ```                                 ``` 3) generate all-jar and run: `$ java -jar checkstyle-8.3-SNAPSHOT-all.jar -f xml -c /home/valeria/IdeaProjects/contribution/checkstyle-tester/my_check.xml /home/valeria/IdeaProjects/contribution/checkstyle-tester/props/`  4) In report you will see duplicate line: ```           ``` On windows and linux you will receive such report: ```                                                                        ``` on Mac OS line will be in different place: ```                                                                        ```","closed","approved,","Nimfadora","2017-09-10T21:31:47Z","2019-04-17T11:42:39Z"
"","5244","SuppressionCommentFilterTest should fail when locale is changed","SuppressionCommentFilterTest has [hardcoded violation messages in English](https://github.com/checkstyle/checkstyle/blob/2aca36156fa461f2d54f1386743a0146bdf8b4bd/src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilterTest.java#L53-L71). When [TravisCI executes ""localized"" tests](https://github.com/checkstyle/checkstyle/blob/062aa888e9e789676ea03fdc926d596ce5d85224/.travis.yml#L90-L94), the tests in SuppressionCommentFilterTest should fail, because the checks which are used in Checker configuration should throw violations in specific locale, not in English.  The issue may be connected to https://github.com/checkstyle/checkstyle/issues/3377 and https://github.com/checkstyle/checkstyle/issues/3110.   I noticed the problem when I implemented tests for SuppressWithPlainTextCommentFilter in the scope of #4841. I hardcoded violation messages in UTs in English as it was done in SuppressionCommentFilterTest, but Travis CI failed [the build](https://travis-ci.org/checkstyle/checkstyle/jobs/293374566).  [Build log.](https://github.com/checkstyle/checkstyle/files/1424120/log.txt)","closed","easy,","MEZk","2017-10-28T10:00:24Z","2017-11-24T19:58:05Z"
"","5787","AbbreviationAsWordInName - Unit tests - Methods with generic arguments","Suppose we have a method like ```java public foo(N node, E edge, double bar) {   ... } ``` IDEs like Eclipse and Intellij will create the following JUnit test for this method: ```java @Test public void testFooNEDouble() {   ... } ``` The module `AbbreviationAsWordInName` does **not account** for this scenario, nor does it support functionality to skip a method name like this (for example with a prefix of _test_).  The module reads the `NED` and will **warn** if the property `allowedAbbreviationLength` is set to a value less than `3`, like with Googles configuration: ```xml         ``` The obvious problem is that a method could have an arbitrary amount of generic arguments.  The **alternative** would be to declare a method name like this as not preferred and to propose an alternative method name.","closed","","Zabuzard","2018-05-11T12:30:49Z","2018-05-11T18:11:14Z"
"","5584","Switch to Powermock 2.0","Support for JDK9 is not planned for the Powermock 1.x series. So, we need to upgrade to 2.0. It is still in beta stage. However, the current version (2.0.0-beta5) is suitable for use.  The issue https://github.com/powermock/powermock/issues/864 affects our tests, but there is a simple workaround.","closed","miscellaneous,","pbludov","2018-03-07T01:23:54Z","2018-03-09T15:23:34Z"
"","5865","minor: wrap lines in pom.xml to follow 100 length limitation","such values were restored to long lines by maven-release-plugin at https://github.com/checkstyle/checkstyle/commit/29a635421d9292673bbaaf0c0693d2191dfb5f18  Looks like we need to suppress validation of pom.xml , it will be hard to fight plugin on what is right formating.  https://stackoverflow.com/questions/49085502/maven-release-plugin-changes-pom-formatting","closed","","romani","2018-05-27T23:12:51Z","2018-05-27T23:52:43Z"
"","5678","Jacoco: main class doesn't work after verify test with Eclipse","Steps to repoduce: 1) run `mvn clean` 2) run `mvn verify test` to successful completion 3) run `com.puppycrawl.tools.checkstyle.Main` class  Results in: ```` Exception in thread ""main"" java.lang.NoClassDefFoundError: org/jacoco/agent/rt/internal_c13123e/Offline 	at com.puppycrawl.tools.checkstyle.Main.$jacocoInit(Main.java) 	at com.puppycrawl.tools.checkstyle.Main.(Main.java) Caused by: java.lang.ClassNotFoundException: org.jacoco.agent.rt.internal_c13123e.Offline 	at java.net.URLClassLoader.findClass(URLClassLoader.java:381) 	at java.lang.ClassLoader.loadClass(ClassLoader.java:424) 	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331) 	at java.lang.ClassLoader.loadClass(ClassLoader.java:357) 	... 2 more ````  This never caused an issue before.  Blocked by https://github.com/powermock/powermock/issues/727","open","blocked,","rnveach","2018-04-02T21:46:40Z","2019-12-15T20:25:12Z"
"","5088","JavadocMethod: Unable to get class information for @throws tag","Starting with [checkstyle 6.17](http://checkstyle.sourceforge.net/releasenotes.html#Release_6.17) (and also including 8.2), I often get this type of error:  `Unable to get class information for @throws tag 'XXXException'. [JavadocMethod]`  For example, using the `LANG_3_6` tag of commons-lang (git://git.apache.org/commons-lang.git)(https://github.com/apache/commons-lang): checkstyle.xml  is [here](https://github.com/apache/commons-lang/blob/master/checkstyle.xml). ConcurrentUtils.java is [here](https://github.com/apache/commons-lang/blob/master/src/main/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java). With checkstyle 6.16.1: ``` java -jar ~/checkstyle-6.16.1-all.jar -c checkstyle.xml \     src/main/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java Starting audit... Audit done. ```  With checkstyle 8.2: ``` java -jar ~/checkstyle-8.2-all.jar -c checkstyle.xml \     src/main/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java Starting audit... [ERROR] /tmp/commons-lang/src/main/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java:123:8: Unable to get class information for @throws tag 'ConcurrentRuntimeException'. [JavadocMethod] [ERROR] /tmp/commons-lang/src/main/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java:197:8: Unable to get class information for @throws tag 'ConcurrentRuntimeException'. [JavadocMethod] [ERROR] /tmp/commons-lang/src/main/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java:297:8: Unable to get class information for @throws tag 'ConcurrentRuntimeException'. [JavadocMethod] Audit done. Checkstyle ends with 3 errors. ```  I checked the release notes of 6.17 but couldn't find something that is obvious to me.","closed","javadoc,","osiegmar","2017-09-07T20:11:28Z","2020-01-21T07:59:55Z"
"","5117","minor: change constructor assertion to check","Split off of https://github.com/checkstyle/checkstyle/pull/5112 .  Move assertions from util method to actual test methods.","closed","","rnveach","2017-09-16T02:05:59Z","2017-09-16T20:54:31Z"
"","5234","Remove DetailAST.branchContains","Split from https://github.com/checkstyle/checkstyle/issues/5124 ,  We should remove `branchContains` completely from `DetailAST`.  This issue is on hold until the other issue is finished and when we decide when we wish to break compatibility.","open","breaking compatibility,","rnveach","2017-10-25T15:32:55Z","2021-08-05T07:19:51Z"
"","5105","Split and Organize Checkstyle grammar inputs","Split from https://github.com/checkstyle/checkstyle/issues/3891 ,  We should look over the [grammar's package](https://github.com/checkstyle/checkstyle/tree/master/src/test/resources/com/puppycrawl/tools/checkstyle/grammars) and figure out how we wish to organize them. Do we want the same organization as https://github.com/checkstyle/checkstyle/issues/3891 or go a different route.  The naming scheme should be controlled by a UT similar to the one in https://github.com/checkstyle/checkstyle/issues/3891 .","open","","rnveach","2017-09-12T18:23:25Z","2017-09-15T17:39:16Z"
"","5106","Split and Organize Checkstyle IT inputs","Split from #3891 ,  We should look over the IT folder's files and figure out how we wish to organize them. Do we want the same organization as #3891 or go a different route.  The naming scheme should be controlled by a UT similar to the one in #3891 .","open","miscellaneous,","rnveach","2017-09-12T18:24:37Z","2018-11-30T21:44:06Z"
"","5469","spelling: fix typo in tests","spelling: fix typo in tests","closed","","pbludov","2018-01-18T09:11:35Z","2018-01-19T14:32:15Z"
"","5305","ReturnCount gives false positives","Sorry for not filling in all of the info, I don't have time at the moment, i'm hoping the issue is obvious to track down, if not then I will try to provide more info.  I'm trying to add some more checkstyle rules to JMeter, I've added the following ```xml                  ```  However when I run it I get, among others: ``` [checkstyle] [ERROR] /home/td/coding/jmeter/src/jorphan/org/apache/jorphan/gui/RateRenderer.java:41:5: Return count is 2 (max allowed is 1). [ReturnCount] [checkstyle] [ERROR] /home/td/coding/jmeter/src/jorphan/org/apache/jorphan/util/Converter.java:44:5: Return count is 13 (max allowed is 10). [ReturnCount] ```  This happens with checkstyle-all jar versions 8.{2,3,4,5}.  I'd not expect ""Return count is 2 (max allowed is 1)"" when I've set it to 10.  ---  `/var/tmp $ javac YOUR_FILE.java`:  ``` [[PLACE YOUR OUTPUT HERE]] ```  `/var/tmp $ cat YOUR_FILE.java`:  ``` [[PLACE YOU OUTPUT HERE]] ```  `/var/tmp $ cat config.xml`:  ``` [[PLACE YOUR OUTPUT HERE]] ```  `/var/tmp $ java -Duser.language=en -Duser.country=US -jar checkstyle-X.XX-all.jar -c config.xml YOUR_FILE.java`:  ``` [[PLACE YOUR OUTPUT HERE]] ```  ---------------  Describe what you expect in detail.  --------------  Still not clear ??? - see example - http://checkstyle.sourceforge.net/report_issue.html#How_to_report_a_bug","closed","","ham1","2017-11-29T00:29:40Z","2017-11-30T14:17:05Z"
"","5817","Restore validation of google style web page","some validation asserts were disabled at to let pass big formatting changes first. Commit: https://github.com/checkstyle/checkstyle/commit/4b032f6a40a11db4790d952a8920aea1b849d7f2 all validations need to be restored.","closed","miscellaneous,","romani","2018-05-18T17:17:23Z","2018-05-22T13:58:06Z"
"","5742","minor: fix indentation in google_checks.xml","Some message tags were indented with an extra space.","closed","","boyeborg","2018-04-19T10:57:16Z","2018-04-19T14:57:20Z"
"","5759","Update AbstractChecks to log DetailAST (part 1, hard cases)","Some checks pass modified column and/or line numbers to AbstractCheck.log(int lineNo, int colNo, String key, Object... args) method. We should think of design of such checks and figure out why they are designed in this way.  Checks that should be updated: - WhitespaceAroundCheck - WhitespaceAfterCheck - UpperEllCheck - SingleSpaceSeparatorCheck - NoWhitespaceBeforeCheck - NoWhitespaceAfterCheck - GenericWhitespaceCheck - EmptyForIteratorPadCheck - EmptyForInitializerPadCheck - AbstractParenPadCheck  We need to update and/or redesign the checks to log DetailAST.","closed","hard,","MEZk","2018-04-26T19:43:54Z","2020-01-06T03:12:49Z"
"","5479","Issue #5377: Resolve warning during build about prerequisites tag -de…","solved a problem discussed in #5377","closed","","SinmoWay","2018-01-22T09:05:26Z","2018-01-22T14:15:38Z"
"","5140","GlobalStatefulCheck annotation discussion","small part from #4883 , from discussion of #4898  `   The check methods and fields should be thread safe, because they may be accessed from others  threads at the same time. `  Checks that are not thread safe - should be executed as it was before ..... without any thread concerns. there should be no demands for thread safety.","open","approved,","romani","2017-09-23T18:11:44Z","2018-06-10T03:17:11Z"
"","5752","Activate checks related to java.io.Closeable","Since we no longer use `Cobertura`, we can force `try-with-resources` in the code. There is a couple of Idea rules for that:  - AutoCloseableResource - TryFinallyCanBeTryWithResources  and one Eclipse JDT problem: - explicitlyClosedAutoCloseable  If an auto closeable resource can not be wrapped with `try-with-resources`, the violation should be suppressed.","closed","miscellaneous,","pbludov","2018-04-22T01:59:23Z","2018-05-18T20:10:45Z"
"","5564","Add Travis build with JDK9","Since the Checkstyle is now compatible with the JDK9, a build profile is required for this option.","closed","","pbludov","2018-02-28T14:18:16Z","2018-02-28T14:24:02Z"
"","5576","doc: clearly explain commit message requirements","Since I had a hard time learning the commit message requirements in my previous pull request, I hereby update the contribution page to better explain that to future contributors.","closed","","Bananeweizen","2018-03-04T18:12:17Z","2018-03-09T05:57:29Z"
"","5027","Remove usage of javax.xml.bind.DatatypeConverter (removed in Java 9)","Since #3093 Checkstyle uses javax.xml.bind.DatatypeConverter to create a hex string of an SHA1 hash.  JDK 9 marks the package (module) javax.xml.bind as deprecated for removal - [javadoc](http://download.java.net/java/jdk9/docs/api/java.xml.bind-summary.html). Whole list of deprecations - [here](http://download.java.net/java/jdk9/docs/api/deprecated-list.html) .  More dramatically, the current use in Checkstyle results in a NoClassDefFoundError/ClassNotFoundException if java weren't started with the --add-modules javax.xml.bind parameter.  ``` java.lang.NoClassDefFoundError: javax/xml/bind/DatatypeConverter         at com.puppycrawl.tools.checkstyle.PropertyCacheFile.getHashCodeBasedOnObjectContent(PropertyCacheFile.java:233)         at com.puppycrawl.tools.checkstyle.PropertyCacheFile.load(PropertyCacheFile.java:118)         at com.puppycrawl.tools.checkstyle.Checker.setCacheFile(Checker.java:151) ```","closed","miscellaneous,","osiegmar","2017-08-30T13:08:20Z","2017-08-30T21:05:02Z"
"","6000","Line numbers should start at 1","Similar to https://github.com/checkstyle/checkstyle/issues/4997 ,  https://github.com/checkstyle/checkstyle/blob/master/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocPackageCheck.java#L89 > CheckstyleBad.java:0: Missing package-info.java file  AST checks start at line 1. We should remove line 0 violations and make them start at 1. If the violation, like the above, is on a missing file or the file as a whole, we should remove the line number completely and just print the file name.  Example: `CheckstyleBad.java: Missing package-info.java file`","closed","miscellaneous,","rnveach","2018-07-04T15:24:49Z","2018-09-05T12:54:59Z"
"","5385","Convert sevntu-checkstyle-check to ant run","See https://issues.apache.org/jira/browse/MCHECKSTYLE-346 . We need to deprecate all usage of `maven-checkstyle-plugin` so we can start implementing backward breaking changes.  We must convert our `sevntu-checkstyle-check` run to an ant run. Specified section: https://github.com/checkstyle/checkstyle/blob/06ff5677fa5a19afe3f55078fff79ead61068a51/pom.xml#L558-L597","open","miscellaneous,","rnveach","2017-12-25T03:59:19Z","2018-03-18T19:19:34Z"
"","5386","Convert wercker regressions that use maven-checkstyle-plugin to CLI based","See https://issues.apache.org/jira/browse/MCHECKSTYLE-346 . We need to deprecate all usage of `maven-checkstyle-plugin` so we can start implementing backward breaking changes.  Everything in wercker uses `maven-checkstyle-plugin` to run checkstyle on the projects and will have to be converted to using the raw CLI. See https://github.com/checkstyle/checkstyle/blob/master/wercker.yml  This may be difficult for some projects as they use custom dependencies. We may have to start discussions with the project owners on how we can best do this and disable them until we can get things worked out.","closed","CI,","rnveach","2017-12-25T04:07:56Z","2022-05-03T05:09:37Z"
"","5418","minor: sevntu must use appropriate checkstyle version","See discussions at https://github.com/sevntu-checkstyle/sevntu.checkstyle/pull/628 .","closed","","rnveach","2018-01-03T15:48:58Z","2018-01-03T19:12:32Z"
"","5572","SwingConstants is an interface, not a class.","See above.","closed","","tweimer","2018-03-01T17:30:59Z","2018-03-07T17:05:59Z"
"","5863","Add option to suppress import order separation checks","Sample code available at https://github.com/madrob/checkstyle-poc  ``` /var/tmp $ cat src/main/java/Main.java import java.util.Set;  import com.foo.Foo;  import org.bar.Bar;  public final class Main {  } ```  ``` /var/tmp $ cat src/main/resources/checkstyle.xml                                             ```  ``` /var/tmp $ mvn checkstyle:checkstyle -Dcheckstyle.consoleOutput=true -Pcheckstyle8 [INFO] Scanning for projects... [INFO] [INFO] ------------------------------------------------------------------------ [INFO] Building checkstyle-poc 1.0-SNAPSHOT [INFO] ------------------------------------------------------------------------ [INFO] [INFO] --- maven-checkstyle-plugin:3.0.0:checkstyle (default-cli) @ checkstyle-poc --- [WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent! [INFO] Starting audit... [ERROR] /Users/mdrob/IdeaProjects/checkstylepoc/src/main/java/Main.java:5: Extra separation in import group before 'com.foo.Foo' [ImportOrder] [ERROR] /Users/mdrob/IdeaProjects/checkstylepoc/src/main/java/Main.java:7: Extra separation in import group before 'org.bar.Bar' [ImportOrder] Audit done. [INFO] There are 2 errors reported by Checkstyle 8.9 with src/main/resources/checkstyle.xml ruleset. [WARNING] Unable to locate Source XRef to link to - DISABLED [INFO] ------------------------------------------------------------------------ [INFO] BUILD SUCCESS [INFO] ------------------------------------------------------------------------ [INFO] Total time: 2.753 s [INFO] Finished at: 2018-05-27T12:54:06-05:00 [INFO] Final Memory: 17M/225M [INFO] ------------------------------------------------------------------------ ```  ``` /var/tmp $ cat src/main/resources/checkstyle-separated.xml                                                    ```  ``` /var/tmp $ mvn checkstyle:checkstyle -Dcheckstyle.consoleOutput=true -Pcheckstyle8,separated [INFO] Scanning for projects... [INFO] [INFO] ------------------------------------------------------------------------ [INFO] Building checkstyle-poc 1.0-SNAPSHOT [INFO] ------------------------------------------------------------------------ [INFO] [INFO] --- maven-checkstyle-plugin:3.0.0:checkstyle (default-cli) @ checkstyle-poc --- [WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent! [INFO] Starting audit... [ERROR] /Users/mdrob/IdeaProjects/checkstylepoc/src/main/java/Main.java:7: Extra separation in import group before 'org.bar.Bar' [ImportOrder] Audit done. [INFO] There is 1 error reported by Checkstyle 8.9 with src/main/resources/checkstyle-separated.xml ruleset. [WARNING] Unable to locate Source XRef to link to - DISABLED [INFO] ------------------------------------------------------------------------ [INFO] BUILD SUCCESS [INFO] ------------------------------------------------------------------------ [INFO] Total time: 2.753 s [INFO] Finished at: 2018-05-27T12:54:06-05:00 [INFO] Final Memory: 17M/225M [INFO] ------------------------------------------------------------------------ ```  *Edit:* Added results with and without _separated_ property.  ---------------  I would like the ability to suppress the import order 'extra separation' check.  This was not flagged as a violation in older versions, and while I understand the reasoning behind it, I have a fairly large code base (Apache HBase, http://hbase.apache.org, http://github.com/apache/hbase) that I'm trying to migrate from checkstyle 6 to checkstyle 8 and thousands of ""new"" violations showing up with the same checkstyle.xml make the migration process difficult and unlikely to be accepted by the rest of my open source community.","closed","","madrob","2018-05-27T17:58:57Z","2018-05-29T00:57:21Z"
"","5114","Remove extra numeric offset in JavadocTokenTypes","RULE_TYPES_OFFSET constant is used to split lexer tokens types and parser rules types. We need unique numbers for all tokens, ANTLR do not need this and that is why his types are mixed by used values. All values we can take a look at `target/generated-sources/antlr/com/puppycrawl/tools/checkstyle/grammars/javadoc/JavadocParser.java` for example: LEADING_ASTERISK=1 and RULE_htmlElement = 1. RULE_TYPES_OFFSET required to shift parser rules, to let them not overlap with types that have prefix ""RULE_"".  cases: ```     public static final int HTML_ELEMENT_START = JavadocParser.RULE_htmlElementStart             + RULE_TYPES_OFFSET + RULE_TYPES_OFFSET; ```  ```     public static final int ATTRIBUTE = JavadocParser.RULE_attribute             + RULE_TYPES_OFFSET + RULE_TYPES_OFFSET; ```  ```     public static final int HTML_COMMENT = JavadocParser.RULE_htmlComment             + RULE_TYPES_OFFSET + RULE_TYPES_OFFSET; ```  ToDo: 1) extent javadoc of RULE_TYPES_OFFSET by description that I gave in first paragraph 2) remove extra ""+ RULE_TYPES_OFFSET"" from that 3 cases.  This issue might result in braking compatibility and even weird behavior of custom checks which used that 3 token types in their code. As `static final int` is in-lined to custom Check code during compilation. Workaround is to recompile custom Checks(their jars).  Example of breaking compatibility: #505  Migration notes for users: users have to recompile their extensions to work without problems, as such constants are inlined in their code. So Checks might not receive proper call on token.","closed","breaking compatibility,","romani","2017-09-15T11:56:01Z","2017-10-20T18:44:15Z"
"","5732","spellchecker: don't complain about case","Right now the spell checker gets annoyed about changes like: ``` @@ -1189 +1189 @@ -microsoft +Microsoft ```  While it is a change, the spell checker can tolerate it...","closed","miscellaneous,","jsoref","2018-04-15T03:05:13Z","2018-04-15T04:44:01Z"
"","5119","Use Vocablury Class provided by ANTLR","Right now in JavadocUtils we populate a map `TOKEN_NAME_TO_VALUE` and a `String[]`, `TOKEN_VALUE_TO_NAME`, in the [static block](https://github.com/checkstyle/checkstyle/blob/master/src/main/java/com/puppycrawl/tools/checkstyle/utils/JavadocUtils.java#L79-#L113).   These structues are populated from `JavadocTokenTypes.java` and are used in functions [`getTokenName()`](https://github.com/checkstyle/checkstyle/blob/master/src/main/java/com/puppycrawl/tools/checkstyle/utils/JavadocUtils.java#L341) and [`getTokenId()`](https://github.com/checkstyle/checkstyle/blob/master/src/main/java/com/puppycrawl/tools/checkstyle/utils/JavadocUtils.java#L364)  Instead we can scout the `Vocablury` class provided by ANTLR to provide these features in `JavadocUtils`.  **To do:**  Remove `TOKEN_NAME_TO_VALUE`, `TOKEN_VALUE_TO_NAME` from `JavadocUtils` and substitute with `Vocablury` instance from `JavadocParser.java` in generated sources and ensure that no code gets broken.","closed","","voidfist","2017-09-16T15:54:43Z","2017-10-18T22:32:18Z"
"","5805","new CI: AppCenter","review new CI abilities https://appcenter.ms/ looks like have integration with github: https://github.com/marketplace/app-center  There is limitation by build time -  240 build minutes per month .  Might be useful  for something or for temporal activation to speed up testing/regression.","closed","CI,","romani","2018-05-17T20:23:19Z","2018-05-25T19:59:15Z"
"","5481","Issue #5480: investigate and resolve compilation warning -add configu…","resolve #5480.","closed","","SinmoWay","2018-01-22T14:51:11Z","2018-02-01T10:29:33Z"
"","5966","config: add remoteRepoPath to releasenotes-builder","Required update for https://github.com/checkstyle/contribution/pull/310","closed","","rnveach","2018-06-24T14:35:48Z","2018-06-24T20:55:26Z"
"","5632","config: Remove duplicate entry for PMD plugin version","Related to #5603  After reverting cba0f56054b402311cba2b2acb1e26e0c1506b13 there are two entries for maven.pmd.plugin.version in the pom.xml","closed","","pbludov","2018-03-22T07:12:27Z","2018-03-22T12:15:50Z"
"","5526","Issue #5489: Fixed indentation in config_design.xml","Related to #5489","closed","","varunu28","2018-02-19T20:16:29Z","2018-02-21T15:53:23Z"
"","5145","Identifiers in the form `aVar` are incorrectly prohibited by google_checks.xml","RegExp patterns for identifiers were created following this comment: https://github.com/checkstyle/checkstyle/issues/3702#issuecomment-275228023  > https://google.github.io/styleguide/javaguide.html#s5.1-identifier-names >> In Google Style special prefixes or suffixes, like those seen in the examples name_, mName, s_name and kName, are not used.  However, the quoted sentence mentions ""special prefixes"", and not any one-letter start. To understand what is a special prefix, I look at other specific Google's Guides where they do exist: https://source.android.com/source/code-style#follow-field-naming-conventions  https://google.github.io/styleguide/javascriptguide.xml?showone=Naming#Naming  So, this rule in Java guide should be read as ""there is no requirement to start an identifier from a specific char depending of the identifier role"".  So, identifier patterns should be updated to allow forms like `aVar` (which is not bad at all) and `aV` (which is bad in most cases, but is not strictly forbidden by the guide).  Related patterns I see: https://github.com/checkstyle/checkstyle/blob/97669248fb2402e21cd372380a35d0e312c2a0e8/src/main/resources/google_checks.xml#L121 https://github.com/checkstyle/checkstyle/blob/97669248fb2402e21cd372380a35d0e312c2a0e8/src/main/resources/google_checks.xml#L126 https://github.com/checkstyle/checkstyle/blob/97669248fb2402e21cd372380a35d0e312c2a0e8/src/main/resources/google_checks.xml#L131 https://github.com/checkstyle/checkstyle/blob/97669248fb2402e21cd372380a35d0e312c2a0e8/src/main/resources/google_checks.xml#L137 https://github.com/checkstyle/checkstyle/blob/97669248fb2402e21cd372380a35d0e312c2a0e8/src/main/resources/google_checks.xml#L225","closed","","pelepelin","2017-09-25T17:26:14Z","2020-03-15T21:33:11Z"
"","5453","config: bump checkstyle maven plugin to 3.0.0","reason: https://travis-ci.org/checkstyle/checkstyle/jobs/327357856#L3238","closed","","romani","2018-01-10T22:20:55Z","2018-01-11T00:46:45Z"
"","5454","config: bump jacoco to 0.8.0","reason: https://travis-ci.org/checkstyle/checkstyle/jobs/327357856#L3225","closed","","romani","2018-01-10T22:23:59Z","2018-01-11T01:58:25Z"
"","5403","config: bump guava to 23.6","reason https://travis-ci.org/checkstyle/checkstyle/jobs/322284841#L3226","closed","","romani","2017-12-29T14:40:31Z","2017-12-30T15:32:55Z"
"","5372","config: bump sonar-maven-plugin version to 3.4.0.905","reason https://travis-ci.org/checkstyle/checkstyle/jobs/319315351#L3262","closed","","romani","2017-12-20T22:58:37Z","2017-12-20T23:49:50Z"
"","5404","config: bump pitest to 1.3.1","reason : https://travis-ci.org/checkstyle/checkstyle/jobs/322284841#L3240","closed","","romani","2017-12-29T14:42:40Z","2017-12-29T20:00:28Z"
"","5373","config: bump pitest to 1.2.5","reason - https://travis-ci.org/checkstyle/checkstyle/jobs/319315351#L3275","closed","","romani","2017-12-20T22:58:57Z","2017-12-21T01:46:55Z"
"","5374","config: bump version jgit to 4.9.2.201712150930-r","reason - https://travis-ci.org/checkstyle/checkstyle/jobs/319315351#L3249","closed","","romani","2017-12-20T23:01:46Z","2017-12-21T01:44:49Z"
"","5375","config: bump Saxon-HE to 9.8.0-7","reason - https://travis-ci.org/checkstyle/checkstyle/jobs/319315351#L3231","closed","","romani","2017-12-20T23:04:05Z","2017-12-21T01:46:28Z"
"","5722","update DTD public names","public DTD name format `prefix//owner_of_the_DTD//description_of_the_DTD//ISO 639_language_identifier` according to http://xmlwriter.net/xml_guide/doctype_declaration.shtml#PublicDTD  attention to  > The ""DTD_location"" is used to find the public DTD if it cannot be located by the ""DTD_name"".  DTD name is first step to load dtd, second step is remote url. ConfigurationLoader do use  ""DTD_name"" to map to internally stored DTD files. So we have to preserve mapping of DTD_name at ConfigurationLoader. But names still have to changes in all our repo to have good name and all next configurations will follow new format.   TODO: - `Puppy Crawl` ==> `Checkstyle` - `DTD Check Configuration` ==>  `DTD Checkstyle Configuration` - `DTD Import Control` ==>  `DTD ImportControl Configuration` - `DTD Package Names` ==>  `DTD Package Names Configuration` - `DTD Suppressions` ==>  `DTD SuppressionFilter Configuration` - `DTD Suppressions Xpath Experimental` ==>  `DTD SuppressionXpathFilter Experimental Configuration` ...  It should not affect anybody, as is has only description role.  diff should be like: ``` --- a/config/checkstyle_checks.xml +++ b/config/checkstyle_checks.xml @@ -1,6 +1,6 @@     ```  All files to update: `grep -Liran ""//Puppy Crawl"" --include=""*.xml"" --exclude-dir=""target"" *`","closed","easy,","romani","2018-04-12T22:35:59Z","2018-06-09T19:23:46Z"
"","5297","added markdown to .github/ISSUE_TEMPLATE.md","Provided output is more readable if it's wrapped in markdown. If it's provided in the template it's more likely that users will use it.","closed","","krichter722","2017-11-25T20:20:45Z","2019-02-26T07:09:12Z"
"","5497","config: fix Wercker no-error-test on hiberanate-search","Problem spotted at https://github.com/checkstyle/checkstyle/pull/5495, build https://app.wercker.com/checkstyle/checkstyle/runs/build/5a6f59987f0b540001b46f41?step=5a6f59c8da96a8000129faab failed due to https://github.com/hibernate/hibernate-search/pull/1619","closed","","Vladlis","2018-01-29T17:56:03Z","2018-01-30T07:08:39Z"
"","5785","Travis unexpected problem with xml validation","problem come up today.  full log is https://travis-ci.org/checkstyle/checkstyle/jobs/377055232#L1313 this build was green, I just relaunched it to reproduce problem in other PRs ``` [INFO]  [INFO] --- xml-maven-plugin:1.0.2:validate (default) @ checkstyle --- [INFO] ------------------------------------------------------------------------ [INFO] BUILD FAILURE [INFO] ------------------------------------------------------------------------ [INFO] Total time: 07:57 min [INFO] Finished at: 2018-05-10T21:32:17Z [INFO] Final Memory: 54M/945M [INFO] ------------------------------------------------------------------------ [ERROR] Failed to execute goal org.codehaus.mojo:xml-maven-plugin:1.0.2:validate (default) on project checkstyle: Failed to load schema with public ID null, system ID http://maven.apache.org/xsd/decoration-1.0.0.xsd: schema_reference.4: Failed to read schema document 'null', because 1) could not find the document; 2) the document could not be read; 3) the root element of the document is not . -> [Help 1] org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.codehaus.mojo:xml-maven-plugin:1.0.2:validate (default) on project checkstyle: Failed to load schema with public ID null, system ID http://maven.apache.org/xsd/decoration-1.0.0.xsd: schema_reference.4: Failed to read schema document 'null', because 1) could not find the document; 2) the document could not be read; 3) the root element of the document is not .     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:213)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:154)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:146)     at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)     at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)     at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:51)     at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)     at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:309)     at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:194)     at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:107)     at org.apache.maven.cli.MavenCli.execute (MavenCli.java:955)     at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:290)     at org.apache.maven.cli.MavenCli.main (MavenCli.java:194)     at sun.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)     at sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke (Method.java:498)     at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:289)     at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:229)     at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:415)     at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:356) Caused by: org.apache.maven.plugin.MojoExecutionException: Failed to load schema with public ID null, system ID http://maven.apache.org/xsd/decoration-1.0.0.xsd: schema_reference.4: Failed to read schema document 'null', because 1) could not find the document; 2) the document could not be read; 3) the root element of the document is not .     at org.codehaus.mojo.xml.ValidateMojo.getSchema (ValidateMojo.java:128)     at org.codehaus.mojo.xml.ValidateMojo.validate (ValidateMojo.java:272)     at org.codehaus.mojo.xml.ValidateMojo.execute (ValidateMojo.java:318)     at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo (DefaultBuildPluginManager.java:134)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:208)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:154)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:146)     at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)     at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)     at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:51)     at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)     at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:309)     at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:194)     at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:107)     at org.apache.maven.cli.MavenCli.execute (MavenCli.java:955)     at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:290)     at org.apache.maven.cli.MavenCli.main (MavenCli.java:194)     at sun.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)     at sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke (Method.java:498)     at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:289)     at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:229)     at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:415)     at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:356) Caused by: org.xml.sax.SAXParseException: schema_reference.4: Failed to read schema document 'null', because 1) could not find the document; 2) the document could not be read; 3) the root element of the document is not .     at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException (ErrorHandlerWrapper.java:203)     at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.error (ErrorHandlerWrapper.java:134)     at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError (XMLErrorReporter.java:396)     at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError (XMLErrorReporter.java:306)     at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.reportSchemaErr (XSDHandler.java:4158)     at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.reportSchemaError (XSDHandler.java:4141)     at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.getSchemaDocument1 (XSDHandler.java:2485)     at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.getSchemaDocument (XSDHandler.java:2308)     at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.parseSchema (XSDHandler.java:565)     at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader.loadSchema (XMLSchemaLoader.java:610)     at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader.loadGrammar (XMLSchemaLoader.java:569)     at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader.loadGrammar (XMLSchemaLoader.java:535)     at com.sun.org.apache.xerces.internal.jaxp.validation.XMLSchemaFactory.newSchema (XMLSchemaFactory.java:254)     at javax.xml.validation.SchemaFactory.newSchema (SchemaFactory.java:638)     at org.codehaus.mojo.xml.ValidateMojo.getSchema (ValidateMojo.java:123)     at org.codehaus.mojo.xml.ValidateMojo.validate (ValidateMojo.java:272)     at org.codehaus.mojo.xml.ValidateMojo.execute (ValidateMojo.java:318)     at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo (DefaultBuildPluginManager.java:134)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:208)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:154)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:146)     at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)     at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)     at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:51)     at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)     at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:309)     at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:194)     at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:107)     at org.apache.maven.cli.MavenCli.execute (MavenCli.java:955)     at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:290)     at org.apache.maven.cli.MavenCli.main (MavenCli.java:194)     at sun.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)     at sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke (Method.java:498)     at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:289)     at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:229)     at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:415)     at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:356) [ERROR]  [ERROR] Re-run Maven using the -X switch to enable full debug logging. [ERROR]  [ERROR] For more information about the errors and possible solutions, please read the following articles: [ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException ```","closed","miscellaneous,","romani","2018-05-10T21:41:57Z","2018-05-26T04:22:16Z"
"","5508","Store IDENT token type in the xpath tree","Previous discussion [PR 4530](https://github.com/checkstyle/checkstyle/pull/5464#issuecomment-362500269) @romani @MEZk @rnveach  Currently, `IDENT` token type is not stored, it is being substitute it with `@text` attribute. Correct xpath query for specific `IDENT` should look like `/CLASS_DEF[@text='Main']/OBJBLOCK/METHOD_DEF[@text='main']/LITERAL_THROWS[@text='Throwable']/IDENT`","closed","approved,","timurt","2018-02-03T05:50:10Z","2018-04-15T14:19:45Z"
"","5178","RequireThisCheck is not thread safe","Possible NPE when running RequireThisCheck on multiple threads.","closed","","hhuijser","2017-10-09T07:16:35Z","2017-10-10T02:49:53Z"
"","5179","OneStatementPerLineCheck is not thread safe","Possible IndexOutOfBoundsException or incorrect warnings when running OneStatementPerLineCheckon multiple threads.","closed","","hhuijser","2017-10-09T07:21:04Z","2017-10-10T02:50:24Z"
"","5665","Fix PMD violation CommentDefaultAccessModifier","PMD rule [CommentDefaultAccessModifier](https://pmd.github.io/pmd-6.1.0/pmd_rules_java_codestyle.html#commentdefaultaccessmodifier) ``` // suspicious class public class Foo {     final String stringValue = ""some string"";     String getString() {        return stringValue;     }      class NestedFoo {     } }  // should be public class Foo {     /* default */ final String stringValue = ""some string"";     /* default */ String getString() {        return stringValue;     }      /* default */ class NestedFoo {     } }  // or may be public class Foo {     private final String stringValue = ""some string"";     private String getString() {        return stringValue;     }      public class NestedFoo {     } } ```  The access modifier should be explicitly set to `private`, `protected`, `public` or `/*default*/`.","closed","miscellaneous,","pbludov","2018-03-30T12:24:48Z","2019-03-14T06:09:43Z"
"","5790","Upgrade to PMD 6.6.0","PMD 6.3.0 is released, pmd/pmd#1018 and pmd/pmd#1020 were fixed.  Bumping PMD version to 6.3.0 brings some new violations: ``` [WARNING] This analysis could be faster, please consider using Incremental Analysis: https://pmd.github.io/pmd-6.3.0/pmd_userdocs_getting_started.html#incremental-analysis [WARNING] MissingOverride encountered unexpected method testStaticImportSeparated [INFO]  [INFO]","closed","miscellaneous,","pbludov","2018-05-12T12:07:47Z","2018-08-13T14:17:23Z"
"","5680","Fix PMD violation UseProperClassLoader","PMD 6.0 complains about the method `getClassLoader()`. It should be replaced with `Thread.currentThread().getContextClassLoader()`  [The rule](https://pmd.github.io/pmd-6.1.0/pmd_rules_java_errorprone.html#useproperclassloader)","closed","miscellaneous,","pbludov","2018-04-03T03:25:28Z","2019-03-18T04:11:09Z"
"","5686","confusing file name: checkstyle-checkstyle-8.9.zip","Please download the source zip for 8.9 from the link at the release page over at: https://github.com/checkstyle/checkstyle/releases.  The local file is named checkstyle-checkstyle-8.9.zip, even though the URI preview for the download link does not contain the duplicate name part. This name does not fit the previous standard naming scheme checkstyle-x.y-src.zip anymore. Is this intended?","closed","","Bananeweizen","2018-04-04T19:31:21Z","2018-04-04T21:29:59Z"
"","5998","minor: reorganized it test support classes","Placed tougher restrictions on modifiers. IT area uses simple class names, so `createModuleConfig` had to change to reflect that. `getCheckMessage` was changed from a map to make lines smaller. `AbstractXpathRegressionTest` was renamed to follow pattern of other abstract classes. Removed check name from `runVerifications` because it wasn't needed since we give the module config. `ViolationPosition` was never declared static, so it was always connected to the instance of the abstract class.","closed","","rnveach","2018-07-03T19:47:42Z","2018-07-04T03:33:18Z"
"","5645","config: print diff between pitest actual and ignored","output will be like: ``` Diff: --- target/ignored.txt	2018-03-24 17:26:30.374575943 -0700 +++ target/actual.txt	2018-03-24 17:26:30.374575943 -0700 @@ -25,6 +25,7 @@  JavadocTagContinuationIndentationCheck.java.html:                            && (text.length() <= offset  JavadocTagContinuationIndentationCheck.java.html:        while (inlineTag != null) {  JavadocTagInfo.java.html:            .collect(Collectors.toMap(JavadocTagInfo::getName, tagName -> tagName))); +JavadocTagInfo.java.html:            .collect(Collectors.toMap(JavadocTagInfo::getText, tagText -> tagText)));  JavadocTag.java.html:        return tagInfo == JavadocTagInfo.SEE  JavadocTypeCheck.java.html:                    tagCount++;  SummaryJavadocCheck.java.html:        for (int i = 0; !found && i < children.length - 1; i++) { Difference between 'Actual' and 'Ignore' lists is detected, lists should be equal, build will be failed. ```","closed","","romani","2018-03-25T00:37:43Z","2018-03-25T14:29:21Z"
"","5983","Generate a suppressions.xml for SuppressionFilter file from the errors list by CLI command","originally was reports as #102  Link to patch: https://sourceforge.net/p/checkstyle/patches/_discuss/thread/1d416f58/b6be/attachment/mychanges.patch  Explanation from patch author: http://juliangamble.com/blog/2012/03/10/running-checkstyle-at-full-throttle-on-a-legacy-codebase/  Few thoughts about reasons and usage of this patch: http://roman-ivanov.blogspot.com/2014/01/checkstyle-suppress-file-generator.html   We do not need suppression base on line and column, as it very problematic in maintenance, as any changes in code result in bunch of violations and it hard to keep in mind that it is only due to fact that existing suppressions does not work.  All we need to do is to suppress certain Check (id or name) on whole file. It is not ideal but better than nothing.","open","xpath,","romani","2018-06-29T16:45:26Z","2020-03-14T23:16:45Z"
"","5981","EmptyLineSeparator check does not validate newlines before comments","Originally was reported at #2974  ``` $ javac Test.java $ cat Test.java public class Test {      public static final void method1() { }        // Method 2 must fail     public static final void method2() { }        /**      * Method 3 must fail      */     public static final void method3() { } }   $ cat config.xml                                                              $ java -jar checkstyle-6.15-all.jar -c config.xml Test.java Starting audit... Audit done. ```  **Expected:** `method2` and `method3` must fail with `... has more than 1 empty lines before. [EmptyLineSeparator]`  Related tickets: #2067   http://checkstyle.sourceforge.net/config_whitespace.html#EmptyLineSeparator","closed","approved,","romani","2018-06-28T23:01:39Z","2019-04-28T14:50:17Z"
"","5694","infra: update circleCI to utilize 'checkstyleVersion' option of launch.groovy","originally was introduced at #5684","closed","","romani","2018-04-06T00:19:10Z","2018-04-06T01:13:09Z"
"","5899","InterfaceMemberImpliedModifier: New Check to demand all modifiers to be explicit in interfaces members","Original discussions original discussion at https://groups.google.com/forum/#!topic/checkstyle/KYF-9EEzsbs  related to #5756 , brain stormed at #5783 and #5884, thanks a lot @jodastephen for idea and and @rnveach for help in discussion.   In Java 8, developers are allowed to have static and default methods on interfaces. In Java 9, developers can write private methods on interfaces. As part of this change, my Java 8 [best practices talk](https://www.jfokus.se/jfokus17/preso/Java-SE-8-best-practices.pdf) slide 75  ![image](https://user-images.githubusercontent.com/812984/39844095-1f821504-53a3-11e8-9842-5b37f78c1997.png)  recommends that all methods on interfaces should be declared `public static`, `public abstract` or `public default` (plus `private` in Java 9). The goal of the check is to ensure consistency between classes and interfaces, so that developers reading code are not required to know that the implicit default scope differs between interfaces and classes.   ``` public interface TestClass {    public static final int CONSTANT1 = 1;  // valid   public static int CONSTANT2 = 1;  // invalid, final missing   public final int CONSTANT3 = 1;  // invalid, static missing   static final int CONSTANT4 = 1;  // invalid, public missing   final int CONSTANT5 = 1;  // invalid, public & static missing   static int CONSTANT6 = 1;  // invalid, public & final missing   public int CONSTANT7 = 1;  // invalid, static & final missing   int CONSTANT8 = 1;  // invalid, all missing    public static boolean create1() { return true;}  // valid   static boolean create2() { return true;}  // invalid, public missing    public abstract void execute1();  // valid   abstract void execute2();  // invalid, public missing   public void execute3();  // invalid, abstract missing    public default void execute4() {}  // valid   default void execute5() {}  // invalid, public missing    //private static void execute6() {}  // jdk9 only: valid   //private default void execute7() {}  // jdk9 only: valid  } ```  Check should violate on all modifiers that aren't explicitly defined and are implied by the compiler. In this case, no visibility modifier is considered public. No abstract, static, or final in it's applicable locations are implied to be those. So we should define config and name as those that print violations on the implied modifiers that are not explicitly written out.  Design of Check: ```                                               ```   Hard to find the following references to ""redundant modifiers"" in the JLS:  - fields on interfaces - methods on interfaces - nested types on interfaces (implicitly static) - nested interfaces on classes (implicitly static) - nested enums on classes (implicitly static)  Note that the interface itself can be declared as `abstract`, but that usage is considered obsolete (9.1.1.1). https://docs.oracle.com/javase/specs/jls/se8/html/jls-9.html  Quote from jls: >9.1.1.1. abstract Interfaces Every interface is implicitly abstract. This modifier is obsolete and should not be used in new programs.  >The modifier static pertains only to member interfaces (§8.5.1, §9.5), not to top level interfaces (§7.6).  There seems to be two use case groups here - interfaces (fields and methods) and nested types. @jodastephen think it would be perfectly reasonable to require `static` for nested types (in the cases above), so its not all about interfaces.  Message will be `Implied {0} modifier should be explicit in code`. So each property will specify which modifier is put to violation message.  If user doesn't want to write that specific modifier, they can use any that meets their requirements and removes the implied one. `violateImpliedPublicMethod` can be written as public or private (if the JDK version they are working with allows private). Writing private on the method removes the implied public, so violation shouldn't appear anymore.  If new modifiers are allowed in the future, check won't need to change as implied should always be backward compatible. Only if they break compatibility would we need to consider the same or create a work around (most likely the latter).","closed","new module,","romani","2018-06-10T15:23:22Z","2020-06-20T18:56:24Z"
"","5884","New check InterfaceExplicitModifier to demand all modifiers to explicit in interfaces members","original discussion at https://groups.google.com/forum/#!topic/checkstyle/KYF-9EEzsbs  related to #5756 , brain stormed at #5783, thanks a lot @jodastephen for idea and help in discussion.  In Java 8, developers are allowed to have static and default methods on interfaces. In Java 9, developers can write private methods on interfaces. As part of this change, my Java 8 [best practices talk](https://www.jfokus.se/jfokus17/preso/Java-SE-8-best-practices.pdf) slide 75  ![image](https://user-images.githubusercontent.com/812984/39844095-1f821504-53a3-11e8-9842-5b37f78c1997.png)  recommends that all methods on interfaces should be declared `public static`, `public abstract` or `public default` (plus `private` in Java 9). The goal of the check is to ensure consistency between classes and interfaces, so that developers reading code are not required to know that the implicit default scope differs between interfaces and classes.   ``` public interface TestClass {    public static final int CONSTANT1 = 1;  // valid   public static int CONSTANT2 = 1;  // invalid, final missing   public final int CONSTANT3 = 1;  // invalid, static missing   static final int CONSTANT4 = 1;  // invalid, public missing   final int CONSTANT5 = 1;  // invalid, public & static missing   static int CONSTANT6 = 1;  // invalid, public & final missing   public int CONSTANT7 = 1;  // invalid, static & final missing   int CONSTANT8 = 1;  // invalid, all missing    public static boolean create1() { return true;}  // valid   static boolean create2() { return true;}  // invalid, public missing    public abstract void execute1();  // valid   abstract void execute2();  // invalid, public missing   public void execute3();  // invalid, abstract missing    public default void execute4() {}  // valid   default void execute5() {}  // invalid, public missing    //private static void execute6() {}  // jdk9 only: valid   //private default void execute7() {}  // jdk9 only: valid  } ```  Then a new check could be added `InterfaceExplicitModifier` that is the somehow opposite of  `RedundantModifier`, with a similar list of contexts. In combination, the two checks could achieve the goal of: - redundant modifier checking on classes  - required modifier checking on interfaces.  Design of Check: ```                                      ```  access term is taken from jdk - https://docs.oracle.com/javase/specs/jls/se9/html/jls-8.html#jls-8.4.3  Hard to find the following references to ""redundant modifiers"" in the JLS:  - fields on interfaces - methods on interfaces - nested types on interfaces (implicitly static) - nested interfaces on classes (implicitly static) - nested enums on classes (implicitly static)  Note that the interface itself can be declared as `abstract`, but that usage is considered obsolete (9.1.1.1). https://docs.oracle.com/javase/specs/jls/se8/html/jls-9.html  Quote from jls: >9.1.1.1. abstract Interfaces Every interface is implicitly abstract. This modifier is obsolete and should not be used in new programs.  >The modifier static pertains only to member interfaces (§8.5.1, §9.5), not to top level interfaces (§7.6).  There seems to be two use case groups here - interfaces (fields and methods) and nested types. @jodastephen think it would be perfectly reasonable to require `static` for nested types (in the cases above), so its not all about interfaces.","closed","","romani","2018-06-03T22:21:38Z","2018-06-10T15:24:02Z"
"","5783","New Check: RequiresModifier for interface members","original discussion at https://groups.google.com/forum/#!topic/checkstyle/KYF-9EEzsbs  related to #5756  In Java 8, developers are allowed to have static and default methods on interfaces. In Java 9, developers can write private methods on interfaces. As part of this change, my Java 8 [best practices talk](https://www.jfokus.se/jfokus17/preso/Java-SE-8-best-practices.pdf) slide 75  ![image](https://user-images.githubusercontent.com/812984/39844095-1f821504-53a3-11e8-9842-5b37f78c1997.png)  recommends that all methods on interfaces should be declared `public static`, `public abstract` or `public default` (plus `private` in Java 9). The goal of the check is to ensure consistency between classes and interfaces, so that developers reading code are not required to know that the implicit default scope differs between interfaces and classes.   ``` public interface TestClass {    public static final int CONSTANT1 = 1;  // valid   public static int CONSTANT2 = 1;  // invalid, final missing   public final int CONSTANT3 = 1;  // invalid, static missing   static final int CONSTANT4 = 1;  // invalid, public missing   final int CONSTANT5 = 1;  // invalid, public & static missing   static int CONSTANT6 = 1;  // invalid, public & final missing   public int CONSTANT7 = 1;  // invalid, static & final missing   int CONSTANT8 = 1;  // invalid, all missing    public static boolean create1() { return true;}  // valid   static boolean create2() { return true;}  // invalid, public missing    public abstract void execute1();  // valid   abstract void execute2();  // invalid, public missing   public void execute3();  // invalid, abstract missing    public default void execute4() {}  // valid   default void execute5() {}  // invalid, public missing    //private static void execute6() {}  // jdk9 only: valid   //private void execute7() {}  // jdk9 only: invalid, static missing } ```  Then a new check could be added `RequiresModifier` that is the somehow opposite of  `RedundantModifier`, with a similar list of contexts. In combination, the two checks could achieve the goal of: - redundent modifier checking on classes  - required modifier checking on interfaces.","closed","","romani","2018-05-09T23:41:18Z","2018-06-03T22:36:31Z"
"","5415","ModuleReflectionUtils: Place property, type, and value gathering methods into class","Once https://github.com/checkstyle/checkstyle/pull/5402 is merged, we should move out methods for getting all properties of a check, getting their type, and their default values into ModuleReflectionUtils so our other projects like regression-tool and sevntu can use them for their purposes without having to recode them.","open","approved,","rnveach","2018-01-01T19:55:41Z","2018-03-18T19:13:55Z"
"","5343","Reformat the checkstyle sources for the new check","Once #5313 will be done, the existing sources should be redone in accordance with the new style changes.  Despite the fact that there is more than a thousand of violations, almost all of them can be fixed with regular expressions.","closed","","pbludov","2017-12-11T01:17:32Z","2017-12-14T14:50:04Z"
"","5141","TranslationCheckTest.testLogOutput is failed","on my pc, build is failing: ``` [ERROR] Failures:  [ERROR]   TranslationCheckTest.testLogOutput:190 Unexpected log output expected:      [INFO]  [ERROR] Tests run: 2501, Failures: 1, Errors: 0, Skipped: 0 ```  My linux generate output same as at OutputTranslationCheckMacOS.xml. ![image](https://user-images.githubusercontent.com/812984/30776671-76de102a-a05f-11e7-8554-aee776412958.png)","closed","miscellaneous,","romani","2017-09-23T18:51:21Z","2017-12-25T22:07:54Z"
"","5719","jsoref spell checker: skipp all files/folders that are referenced in .gitignore","on my local I have always failing spell checker. List of violations is always different. Remote build produce no output for misspelled words - https://travis-ci.org/checkstyle/checkstyle/jobs/365581673  Example from my local: ``` cloning contribution HEAD is now at bd07474 spelling update whitelist for checkstyle/checkstyle#5603 Retrieve w Clean up from previous run Run w Review results New misspellings found, please review: abbc adl admins APK appletviewer arquillian autoscroll bnd buildserver bytebuddy CAFED changelist checkerframework compat CONFIRMATON deps devkit Dpi eclared EWAH fileurl flashplayerdebugger GAPID googlecode gulpfile httpclient httpcomponents httpcore javadebug javaewah jcraft jsch jzlib LOGCAT Macos npm objc objenesis osgi rts sdk SHMEM usb utest vcs vmparams XDebugger ```  ``` $ grep -rl ""SHMEM"" .idea/workspace.xml .ci-temp/contribution/jsoref-spellchecker/unknown.words ```  `.idea` folder should not checked, so all files/folders from `.gitignore` should be skipped.","closed","miscellaneous,","romani","2018-04-12T14:19:03Z","2018-04-15T05:14:15Z"
"","5401","Incorrect documentation for SingleSpaceSeparator","On http://checkstyle.sourceforge.net/config_whitespace.html#SingleSpaceSeparator under Properties, the description ""If set to true, whitespaces surrounding comments will be ignored"" is backwards. Either the word ""true"" should be ""false"", or the word ""ignored"" should be ""validated"".","closed","miscellaneous,","ChrisMayfield","2017-12-28T15:16:33Z","2018-01-04T15:26:20Z"
"","5068","Pull #5068: Fix order of message parameters in DE translation file","Number of allowed method parameters has been confused with number of actual method parameters, so that for a method with 50 parameters the German error message would be (analogously): ""More than 50 parameters (found 9)."" Fixed by switching ArgumentIndexes.","closed","approved,","akurth","2017-09-04T14:09:29Z","2017-09-04T19:33:16Z"
"","5283","cobertura coverage check failing on jdk 152","noticed on appveyor: success - java version ""1.8.0_144"" https://ci.appveyor.com/project/Checkstyle/checkstyle/build/10229/job/xoh2k6sa6radqcp7#L32 failure  - java version ""1.8.0_152"" - https://ci.appveyor.com/project/Checkstyle/checkstyle/build/10230/job/5ju0fkpi6fi3enna#L29  reproducible on linux too: ``` $ java -version java version ""1.8.0_152"" Java(TM) SE Runtime Environment (build 1.8.0_152-b16) Java HotSpot(TM) 64-Bit Server VM (build 25.152-b16, mixed mode)  $ git diff diff --git a/pom.xml b/pom.xml index 81c29cf..f194ad3 100644 --- a/pom.xml +++ b/pom.xml @@ -1569,7 +1569,7 @@              cobertura-maven-plugin              2.7               -              true +                                                xml                  html  $ mvn clean verify .... [INFO] --- cobertura-maven-plugin:2.7:check (default) @ checkstyle --- [INFO] Cobertura 2.1.1 - GNU GPL License (NO WARRANTY) - See COPYRIGHT file [INFO] Cobertura: Loaded information on 429 classes. [ERROR] com.puppycrawl.tools.checkstyle.utils.FilterUtils failed coverage check. Line coverage rate of 93.7% is below 100.0%  [INFO] ------------------------------------------------------------------------ [INFO] BUILD FAILURE ``` ![image](https://user-images.githubusercontent.com/812984/33153947-d0ab5a54-cf99-11e7-9460-338a4379667f.png)","closed","miscellaneous,","romani","2017-11-22T23:24:00Z","2017-11-24T13:35:10Z"
"","5982","doc: add example to ImportOrder about other groups","noticed at https://github.com/checkstyle/checkstyle/pull/5972#issuecomment-400544069  We need to put this to documentation as it is not obvious.  The code is ``` import static java.io.File.listRoots; import static javax.swing.WindowConstants.*; import static javax.swing.WindowConstants.*; import static java.io.File.createTempFile; import static java.io.File.pathSeparator; import static com.puppycrawl.tools.checkstyle.checks.imports.avoidstaticimport.InputAvoidStaticImportNestedClass.InnerClass; import static com.puppycrawl.tools.checkstyle.checks.imports.avoidstaticimport.InputAvoidStaticImportNestedClass.InnerClass.one; ```  when staticGroups="""" mean `one group`, the imports `com...` should be before `java...` The violation is reported.  when staticGroups=""java, org"" there actually three groups: java*, org* and * (everything else). In this case, the imports `com...` should be in the last group. No violation here.","closed","easy,","romani","2018-06-29T06:35:26Z","2021-07-10T19:58:00Z"
"","5610","config: Test tools with JDK9","NOT to merge. This PR purpose is to test CI systems for the JDK9 compatibility.","closed","","pbludov","2018-03-16T05:29:24Z","2018-03-17T12:53:18Z"
"","5560","config: bump spontbugs to 3.1.1","NOT FOR MERGE.  IT WILL FAIL, it is required to investigate https://github.com/spotbugs/spotbugs-maven-plugin/issues/30  could be closed in 2 weeks, after 15 of March.","closed","","romani","2018-02-28T02:42:25Z","2018-03-06T06:50:58Z"
"","5647","Spelling -- initial outline of changes -- actual commits to happen in other PRs","NOT FOR MERGE.  Generated by https://github.com/jsoref/spelling `f`; to maintain your repo, please consider `fchurn`  Note: there are probably some changes you'll ask to have dropped, e.g. changes to changelogs. In general, it's a terrible idea to include misspellings in changelogs, it means that a spelling checker can never pass your system. Instead, you should favor indicating the expected term and that it was misspelled...","closed","","jsoref","2018-03-26T02:54:02Z","2018-04-03T00:39:23Z"
"","5473","use new CI - https://buddy.works/","new CI - https://buddy.works/  check it for testing links validations, reuse shippable for stress testing or pitest coverage.","closed","CI,","romani","2018-01-19T22:41:52Z","2018-05-31T00:58:53Z"
"","5409","Fix violations in local IntelliJ 2017.3","My local IntelliJ on windows shows 50+ errors and 250+ warnings when running the inspection file on checkstyle's code.  ![intellij](https://user-images.githubusercontent.com/5427943/34459211-64325314-edb7-11e7-97ec-af2eb8149a50.png)  We should fix these where possible. We can't suppress them since TeamCity will complain that they aren't needed since it isn't producing a violation on them now.","closed","miscellaneous,","rnveach","2017-12-31T04:16:40Z","2018-05-23T05:24:18Z"
"","5159","Update HideUtilityClassConstructorCheck.java","minor: save people from hitting FinalClassCheck after addressing this  It's annoying to follow the suggestion of making the constructor private, only to turn around and get hit by the FinalClassCheck warning on the next checkstyle run. We should give people a heads up that the recommended change likely necessitates a second, related change.","closed","","eliotgerson","2017-09-28T16:21:45Z","2017-10-10T00:18:39Z"
"","5417","minor: reformat code to match upcoming checks","minor: reformat code to match upcoming checks","closed","","pbludov","2018-01-03T09:23:37Z","2018-01-05T18:51:51Z"
"","5438","minor: move getParseErrorMessage method to ParseErrorMessage","minor: move getParseErrorMessage method to ParseErrorMessage  The DetailNodeTreeStringPrinter class has the method getParseErrorMessage to format a ParseErrorMessage into a readable string. This allows to make an exception from the ParseErrorMessage. But this code is not reusable outside of the DetailNodeTreeStringPrinter class.  This PR makes it easy to get an exception from ParseErrorMessage in any place:  ```         final ParseStatus status = parser.parseJavadocAsDetailNode(blockComment);         if (status.getParseErrorMessage() != null) {             throw new CheckstyleException(status.getParseErrorMessage().toString());         } ```","closed","","pbludov","2018-01-07T10:08:46Z","2018-01-14T12:22:12Z"
"","5430","minor: Move all parseXXX methods to the Parser class","minor: Move all parseXXX methods to the Parser class  There is a lot of duplicated code for parsing a java file into the AST in the project. #5102 need another one.  To get rid of unnecessary copy'n'paste, duplicate code is need to be extracted into  an utility class. Also, the TreeWalker class is too complicated and requires a split to allow future refactoring.  This PR solves both issues.","closed","","pbludov","2018-01-06T08:35:54Z","2018-01-07T04:25:57Z"
"","5384","minor: fix typos in tests","minor: fix typos in tests  Mistypes in the test sources. Mostly in the comments and assertion messages. Six _input_ classes  have been renamed.","closed","","pbludov","2017-12-24T07:16:13Z","2017-12-25T00:34:50Z"
"","5383","minor: fix typos","minor: fix typos  no changes in the code, except the names of local variables and private methods.","closed","","pbludov","2017-12-23T07:19:49Z","2017-12-24T15:56:24Z"
"","5533","minor: Explicitly throw an exception from ClassResolver","minor: Explicitly throw an exception from ClassResolver  Issue #5516  Instead of doing some freaky hacks, do what needs to be done.","closed","","pbludov","2018-02-21T04:50:58Z","2018-02-26T02:09:53Z"
"","5557","Issue #5511: Header check fails with empty lines","Mandatory to understand and do: Fixes #5511  **Outline of Solution**  - Moved checking of empty line to Regex as the logic is only for the Regxpheader check - Header check empty line check shouldn't use regex","closed","","tshradheya","2018-02-26T15:29:25Z","2018-04-10T20:50:07Z"
"","5359","re-format code","Mandatory to understand and do: 0) The issue you are trying to fix/resolve has to have the ""approved"" label. 1) Put in the description of Pull Request the reference to an issue if it exists. Example: ""Issue: #XXXXXX"" 2) Commit message should adhere to the following rules:    a) Must match one of the following patterns:\n""       ^Issue #\\d+: .*$       ^Pull #\\d+: .*$       ^(minor|config|infra|doc|spelling): .*$    b) It contains only one line of text    c) Must not end with a period, space, or tab    d) Commit message should be less than or equal to 200 characters  To avoid multiple iterations of fixes and CIs failures, please read http://checkstyle.sourceforge.net/contributing.html  ATTENTION: We are not merging Pull Requests that are not passing our CIs, but we will help to resolve issues.  Thanks for reading, remove whole this message and type what you need.","closed","","pingping-n","2017-12-14T08:59:07Z","2017-12-14T12:45:41Z"
"","5484","Issue #3946: code cleanup xdocs/config_annotation.xml","Made changes to the xdocs/config_annotation.xml to match the following formatting.  TOKEN1 ,TOKEN2 ,TOKEN3 . Resolves the issue partially, will make seperate PR's for each of the xdocs/*.xml files where code cleanup is required.","closed","","shahdivyam","2018-01-24T07:22:15Z","2018-02-21T15:54:35Z"
"","5503","Cannot use @SuppressWarnings(""filelength"") to suppress this checker","Looking at the way the SuppressWarningsHolder works it uses the location of the annotations to determine its scope. eg: ````     public static boolean isSuppressed(AuditEvent event) {         final List entries = ENTRIES.get();         final String sourceName = event.getSourceName();         final String checkAlias = getAlias(sourceName);         final int line = event.getLine();         final int column = event.getColumn();         boolean suppressed = false;         for (Entry entry : entries) {             final boolean afterStart = isSuppressedAfterEventStart(line, column, entry);             final boolean beforeEnd = isSuppressedBeforeEventEnd(line, column, entry);             final boolean nameMatches =                 ALL_WARNING_MATCHING_ID.equals(entry.getCheckName())                     || entry.getCheckName().equalsIgnoreCase(checkAlias);             final boolean idMatches = event.getModuleId() != null                 && event.getModuleId().equals(entry.getCheckName());             if (afterStart && beforeEnd && (nameMatches || idMatches)) {                 suppressed = true;                 break;             }         }         return suppressed;     } ````   The FileLength checker records the line it occurs on as '1'. We cannot put SuppressWarnings(""filelength"") as the first line in a java module and so afterStart is always FALSE and so the checker never gets suppressed.   Is there a workaround to this that I am not seeing?  Thanks Nigel","closed","","nlongton-zz","2018-01-30T21:33:32Z","2018-02-07T17:28:10Z"
"","5892","Enforce usage of optional annotation attributes","Let's say I have an annotation type with an optional attribute, e.g. named `Exclude` to mark a test class in a test automation framework to be excluded from the test run. It has a reason attribute in which you can specify why the class is excluded. ```java public @interface Exclude {      String reason() default """"; } ``` I would like to make sure that any time this annotation is used, the `reason` attribute is defined explicitly. (Without making the attribute mandatory.)  I didn't find a specific checkstyle rule for this and I couldn't find any alternate solutions via checkstyle. I'm happy to create a new check for this, I just wonder if currently there is a way to achieve this.","closed","","picimako","2018-06-04T19:02:09Z","2018-06-09T04:17:42Z"
"","5788","use https://snyk.io/ to find vulnerabilities in dependecies","just another tool for verification - https://snyk.io/ .  It might be useful, let try it.","closed","miscellaneous,","romani","2018-05-11T13:53:15Z","2018-05-14T13:47:43Z"
"","5489","fix indentation in all sources of xdoc","just an example: http://checkstyle.sourceforge.net/config_regexp.html#Regexp ![image](https://user-images.githubusercontent.com/812984/35448196-88a7073c-026e-11e8-9466-b2f7e80ed0f7.png)   All sources should be moved to most left and converted to have indentation as 2 spaces to be less wide.  Such tasks is good for new contributors to lets be familiat with development  process on simple code change.  it should looks like: ```            ```  there should multiple PRs, each file in its own PR to ease review.   ATTENTION: Indentation should be 2 spaces for all SOURCE blocks (xml, java, ....)","closed","easy,","romani","2018-01-26T15:59:23Z","2018-03-10T05:04:37Z"
"","5126","PACKAGE_CLASS should be a parser rule","Javadoc trees have reference like:  ``` |-- PACKAGE_CLASS -> package.class.nestedClass#someMethod ```  In the current design `PACKAGE_CLASS` doesn't have any children in the javadoc tree. We can change our approach and make `PACKAGE_CLASS` a parser rule instead of having it in lexer. That way we can have constructs like the following in javadoc tree:  ``` --PACKAGE_CLASS -> PACKAGE_CLASS     |-- IDENTIFIER -> package     |-- DOT -> .     |-- IDENTIFIER -> class     |-- DOT -> .     |-- IDENTIFIER -> nestedClass ```  **To do:**  Remove `PACKAGE_CLASS` from lexer and a rule `packageClass` in the parser.  **See also:** https://github.com/checkstyle/checkstyle/pull/4550#discussion_r139310885","open","antlr-javadoc,","voidfist","2017-09-18T23:40:13Z","2020-03-20T13:14:02Z"
"","5093","Mandatory arg(s) for @serialField javadoc tag","javadoc tool doesn't complain if no args are supplied to `@serial` `@serialData`  `@serialField` behaves strangely as I wasn't able to get it to show on the site rendered by the javadoc tool even after sticking to the syntax and other requisities. **NOTE:** javadoc tool still gives a warning if no args are specified for `@serialField` tag, but since I couldn't get this tag to work properly and couldn't see it on the site produced _(or perhaps it was working properly and my expectations of it were wrong)_, I couldn't figure out what does javadoc tool treat the only argument as by default _i.e [does it treat it as `field-name` or `field-type` or `field-description`](http://docs.oracle.com/javase/7/docs/technotes/tools/windows/javadoc.html#serialField)_ .  Investigation is needed to determine if `@serialField` should have mandatory arg(s) or not.","open","antlr-javadoc,","voidfist","2017-09-08T10:34:17Z","2020-01-21T01:38:27Z"
"","5816","Alternative to BeforeExecutionExclusionFileFilter for TreeWalker and JavadocPackage","Java 9+ module-info.java files can be excluded by adding the BeforeExecutionExclusionFileFilter module to the root Checker module (see http://checkstyle.sourceforge.net/config_filefilters.html#BeforeExecutionExclusionFileFilter). However, this means that module-info.java files will also be excluded from the FileTabCharacter module, which can still usefully and successfully be applied to module-info.java files as it does not require parsing the Java syntax.  Therefore the proposal is to add new modules, like BeforeExecutionExclusionFileFilter, which can be more specific to the child TreeWalker and JavadocPackage modules. This means that FileTabCharacter, whose parent module is Checker, can be applied to module-info.java files even while other modules are more restrictive.  See also issue https://github.com/checkstyle/checkstyle/issues/3059.","open","new module,","docrjp","2018-05-18T17:12:06Z","2018-05-18T20:27:22Z"
"","5102","Build fails with Java 9","Java 9 is due to be released in ten days. Checkstyle currently fails to compile if a user is using Java 9.  First up, `JavadocTool` and other `tools.jar` things have been moved and/or removed:  ``` [ERROR] COMPILATION ERROR :  [INFO] ------------------------------------------------------------- [ERROR] /home/faux/code/checkstyle/src/test/java/com/puppycrawl/tools/checkstyle/doclets/TokenTypesDocletTest.java:[44,29] cannot find symbol   symbol:   class JavadocTool   location: package com.sun.tools.javadoc ```","closed","miscellaneous,","FauxFaux","2017-09-10T19:20:16Z","2018-03-31T13:29:01Z"
"","5625","how  can I ignore package?","I‘m just use CheckStyle  on Intellij Idea  with the normal checkstyle.xml and CheckStyle-IDEA-5.18.1.zip  , and i want to ignore all  java files under com.xxx package, Is that possible ? sorry for  my bad english!!","closed","","szoyaung","2018-03-20T08:10:18Z","2018-03-20T16:18:24Z"
"","5532","config: move all shippable launches in shell file, redesign of ignored items","it will fail, just did PR to see expected output for rest of items","closed","","romani","2018-02-21T01:20:45Z","2018-02-23T23:16:46Z"
"","5948","Remove Lambda from RightCurlyCheck","It was big mistake from us to put LAMBDA token support to RightCirly.  First sign of bad design was raised at https://github.com/checkstyle/checkstyle/issues/3546#issuecomment-294542185  Both  #4177 #4178  are stuck with unclear status of how to address.  Heavy discussion at #4058 (PR #4173) made it clear that any attempt to support LAMBDA or anonymous classes will make only confusions.  There will be new Check that will cover RightCurly in expressions - #5945 .  TODO: commit to revert - https://github.com/checkstyle/checkstyle/commit/8de64da1a00da618106b03c68400a5b265ec2580 It will be breaking compatibility issue, I hope nobody started to use this token in configurations.","closed","breaking compatibility,","romani","2018-06-19T04:29:49Z","2018-11-09T15:23:08Z"
"","5161","SourceForge seams to restrict the number of sequential connections to checkstyle.sourceforge.net","It seams to me that SourceForge restricts the number of sequential connections to http://checkstyle.sourceforge.net  It can be easily reproduced by the following script on my local machine: ```sh for i in `seq 10`; do curl http://checkstyle.sourceforge.net; done  ```   or  ```sh for i in `seq 10`; do curl http://checkstyle.sourceforge.net/dtds/suppressions_1_1_xpath_experimental.dtd; done ```  The issue affects SuppressionFilterTest. There are 2 tests which try to connect to sourceforge. If we run them multiple times, the execution time will be increased dramatically but they finally succeed.  @rnveach @romani @Vladlis  Please, run the above mentioned scripts on your local machines and confirm that you have the same problem.","closed","question,","MEZk","2017-09-28T20:18:51Z","2017-10-05T18:08:08Z"
"","5291","format xdoc files to follow rule of LineLength (max ia 100)","It is very hard to do review from gihub when line number is above 100 symbols in row. Example: ![image](https://user-images.githubusercontent.com/812984/33213500-a8c4c806-d0dc-11e7-8171-304396fd35b9.png) https://github.com/checkstyle/checkstyle/pull/5252/commits/8e832f19becec4efb3289aa0fd7f21f695072dc3#diff-410707f87051b90b5e46d27453020212L26  Github do show scrolling but if there are a lot of changes at page, you need to scroll to far bottom to get access to it (and you do not see required code any more)  Check need to be enforced, new web site and old web should be the same after generation, it is better to verify it by `diff` tool on folders.  There might be some exceptions(suppressions or ...), but they need to be approved.","closed","miscellaneous,","romani","2017-11-24T14:05:11Z","2018-05-19T01:20:42Z"
"","5488","Please add link to contributing.md in README.md","It is hard for someone wanting to contribute to know how to. There is no contributing.md file on the main page of the repository. It would be awesome if either is was there or there was a link to it in the README.md file.  Thanks.","closed","miscellaneous,","GammaBurst101","2018-01-26T14:23:51Z","2018-11-16T20:36:53Z"
"","5186","create GeneratedJavadocTokenTypesTest.java","it is a subtask of #5139.  All is required is to create UT GeneratedJavadocTokenTypesTest that works the same way as https://github.com/checkstyle/checkstyle/blob/master/src/test/java/com/puppycrawl/tools/checkstyle/grammars/GeneratedJavaTokenTypesTest.java but for javadoc tokens - https://github.com/checkstyle/checkstyle/blob/master/src/main/java/com/puppycrawl/tools/checkstyle/api/JavadocTokenTypes.java  values of JavadocTokenTypes should never change.","closed","easy,","romani","2017-10-09T21:24:19Z","2017-10-20T22:04:05Z"
"","5472","Issue: #5427","Issue: #5427  Issue solved. Solution was a bit improved due to place the only character patter per line to increase readability and make maintenance easier.","closed","","SunriseCoder","2018-01-19T15:09:35Z","2018-02-02T06:20:20Z"
"","5462","Issue #5008: increase coverage of pitest-checks-coding","Issue#5008   Fix mutations in FallThroughCheck and RequireThisCheck  [report before changes](https://nimfadora.github.io/issue5008.html)  [regression report](https://nimfadora.github.io/diff5008/index.html)","closed","","Nimfadora","2018-01-14T21:30:14Z","2018-02-25T23:56:43Z"
"","5702","Issue #5693: Exclude two resources directories","Issue number: #5693","closed","","jsoref","2018-04-08T15:46:59Z","2018-04-08T20:35:22Z"
"","5029","Issue #5027: remove use of javax.xml.bind.DatatypeConverter","Issue number: #5027","closed","","osiegmar","2017-08-30T14:26:30Z","2017-08-30T21:04:18Z"
"","5914","minor: fixed xdoc not validating required sub-sections","Issue identified at https://github.com/checkstyle/checkstyle/pull/5913#pullrequestreview-127942797 .","closed","","rnveach","2018-06-12T13:12:19Z","2018-06-12T13:44:38Z"
"","5108","Issue #4410: whitespace after @","Issue https://github.com/checkstyle/checkstyle/issues/4410. I continue [PR](https://github.com/checkstyle/checkstyle/issues/4412)","closed","","sergileon","2017-09-13T12:43:14Z","2017-12-19T10:08:45Z"
"","5020","Issue #4987: fixed Javadoc for minLineCount property and xdocs","Issue [https://github.com/checkstyle/checkstyle/issues/4987](https://github.com/checkstyle/checkstyle/issues/4987)","closed","","sergileon","2017-08-29T12:11:59Z","2017-08-29T17:21:01Z"
"","5026","Issue #4557: fixed NPE in NoWhitespaceAfterCheck","Issue [https://github.com/checkstyle/checkstyle/issues/4557](https://github.com/checkstyle/checkstyle/issues/4557) Fixed NPE and added tests.","closed","","sergileon","2017-08-30T10:17:03Z","2017-08-31T22:33:12Z"
"","5074","Issue #3330: fixed ERROR whitespace after annotation","Issue [https://github.com/checkstyle/checkstyle/issues/3300](https://github.com/checkstyle/checkstyle/issues/3300) fixed","closed","","sergileon","2017-09-05T12:02:25Z","2017-09-05T15:30:32Z"
"","5218","Issue #4169: Checkstyle ignores javadoc that placed over Annotation type elements","Issue 4169  Checkstyle ignores javadoc that placed over Annotation type elements","closed","","pbludov","2017-10-23T05:47:41Z","2017-10-23T05:56:18Z"
"","5169","Issue #929: Use private final loggers instead of private static final in Checkstyle codebase","Issue #929  There is also an (abandoned and closed) PR for this issue: #4076  I have tried to take both the discussion from the issue and the incomplete PR into consideration.  Changes: - Using private final loggers instead of private static final, except in the Main.java class - Added sventu check to prevent static Loggers in the future - Added exception to above rule for the Main.java class (for reasons see discussion in #4076)","closed","","crud3","2017-10-03T03:55:07Z","2017-10-22T17:24:43Z"
"","5997","Issue #5996: expanded it tests to include checkstyle","Issue #5996   Fixing POM to confirm issue with IT tests.","closed","","rnveach","2018-07-03T13:53:53Z","2018-07-03T16:24:30Z"
"","5994","Issue #5973: SuppressWithNearbyCommentFilter: update document and examples on when it is appropriate to use","Issue #5973: SuppressWithNearbyCommentFilter: update document and examples on when it is appropriate to use  Added note that SuppressWithNearbyCommentFilter and SuppressionCommentFilter only apply to checks within the TreeWalker module","closed","","lukaseckert","2018-07-02T11:44:46Z","2018-07-14T03:28:25Z"
"","5977","Issue #5971: Remove usages of ANTLRInputStream","Issue #5971   The variable `final ANTLRInputStream input` was removed to prevent the violation `ExcessiveImports`.","closed","","pbludov","2018-06-28T03:35:24Z","2018-06-28T13:16:03Z"
"","5987","Issue #5970: udpate documentation for rcurly property","Issue #5970   alone and alone_or_singleline were moved on top without changes (just minor HTML tags indentation change).  ![image](https://user-images.githubusercontent.com/812984/42131729-da6271e6-7cbd-11e8-8a30-e28b642d1fe4.png)  ![image](https://user-images.githubusercontent.com/812984/42131732-e9e9db0e-7cbd-11e8-9768-0521b3f14463.png)","closed","","romani","2018-07-01T06:33:54Z","2018-07-05T07:54:17Z"
"","5986","Issue #5953: Setup 'mvn compile' and 'mvn package' builds in Jenkins","Issue #5953: Setup 'mvn compile' and 'mvn package' builds in Jenkins","closed","","daniilyar","2018-07-01T02:44:16Z","2018-07-02T16:05:30Z"
"","5956","Issue #5953: Add the initial Jenkinsfile for the project","Issue #5953: add the initial Jenkinsfile for the project","closed","","daniilyar","2018-06-22T00:10:06Z","2018-06-24T19:59:32Z"
"","5965","Issue #5949: fix 'toArray() with zero-length array argument' violations","Issue #5949  details: https://github.com/checkstyle/checkstyle/issues/5949#issuecomment-399688513","closed","","romani","2018-06-23T16:05:57Z","2018-06-24T18:48:23Z"
"","5964","Issue #5949: fix 'Begin or end anchor in unexpected position' violations","Issue #5949","closed","","romani","2018-06-23T15:06:14Z","2018-06-23T16:51:11Z"
"","5963","I5949 inspections fixes","Issue #5949","closed","","romani","2018-06-23T06:29:40Z","2018-06-23T14:25:47Z"
"","5962","Issue #5949: fix 'if statement with identical branches' violations","Issue #5949","closed","","romani","2018-06-23T05:35:56Z","2018-06-23T14:21:22Z"
"","5935","Issue #5934: remove old ant configs","Issue #5934","closed","","romani","2018-06-16T04:39:12Z","2018-06-16T17:33:31Z"
"","5922","Issue #5916: resolve compilation problems with semi","Issue #5916   existing tested were changed. Regression test just in case is linked to non-compilable Inputs","closed","","romani","2018-06-14T20:59:55Z","2018-06-15T03:42:06Z"
"","5932","Issue #5916: enforce compilation of resources by eclipse","Issue #5916   example of error: ``` 1. ERROR in /home/travis/build/checkstyle/checkstyle/src/test/resources/ com/puppycrawl/tools/checkstyle/checks/annotation/ suppresswarnings/InputSuppressWarningsCompact.java (at line 64) 	@SuppressWarnings({(false) ? ""unchecked"" : """", (false) ? ""unchecked"" : """"}) 	                   ^^^^^^^^^^^^^^^^^^^^^^^^^^ The value for annotation attribute SuppressWarnings.value must be a constant expression ```","closed","","romani","2018-06-16T00:13:56Z","2018-06-16T00:26:22Z"
"","5921","Issue #5916: change TODO/FIXME/XXX to smth else to avoid warning of Eclipse","Issue #5916  this should stay: ![image](https://user-images.githubusercontent.com/812984/41388392-94228b38-6f40-11e8-9805-e30ab3649e80.png)","closed","","romani","2018-06-14T02:33:03Z","2018-06-14T11:54:22Z"
"","5919","Issue #5916: fix Eclipse error Plugin execution not covered by lifecycle","Issue #5916  I am not completely sure that this is right update, but it helps to resolve problem in Eclipse.","closed","","romani","2018-06-14T01:24:44Z","2018-06-14T12:10:24Z"
"","5927","Issue #5916: fix strange eclipse error that config is not found","Issue #5916  fix for https://github.com/checkstyle/checkstyle/issues/5916#issuecomment-397519413  I have no idea why it should be like this, but it works.","closed","","romani","2018-06-15T06:26:43Z","2018-06-15T07:14:03Z"
"","5923","Issue #5916: add missed package to Inputs","Issue #5916  extra input file(copy of existing) was required to keep coverage","closed","","romani","2018-06-15T02:19:30Z","2018-06-15T04:31:35Z"
"","5929","Issue #5916: update doc to show how to setup Eclipse","Issue #5916  continuation of #5920  ![image](https://user-images.githubusercontent.com/812984/41454676-262c8256-702f-11e8-892e-c58572c918b7.png)","closed","","romani","2018-06-15T07:03:57Z","2018-06-15T18:55:24Z"
"","5920","Issue #5916: disable Deprecated methods warnings in Eclipse","Issue #5916  ![image](https://user-images.githubusercontent.com/812984/41387888-37737688-6f3e-11e8-977b-b0dc713e805b.png)","closed","","romani","2018-06-14T02:15:27Z","2018-06-15T07:05:46Z"
"","5928","Issue #5916: simplify inputs to resolve eclipse errror","Issue #5916","closed","","romani","2018-06-15T06:45:47Z","2018-06-15T20:45:23Z"
"","5926","Issue #5916: move inputs with wrong package on purpose to noncompilable","Issue #5916","closed","","romani","2018-06-15T05:35:34Z","2018-06-15T07:12:04Z"
"","5925","Issue #5916: fix package in Input files","Issue #5916","closed","","romani","2018-06-15T05:06:26Z","2018-06-15T06:39:17Z"
"","5918","Issue #5916: resolve 'Access restriction' warning from Eclipse","Issue #5916","closed","","romani","2018-06-14T01:18:14Z","2018-06-14T12:09:34Z"
"","5917","resolve 'Access restriction' warning from Eclipse","Issue #5916","closed","","romani","2018-06-14T01:16:49Z","2018-06-14T01:17:07Z"
"","5904","Issue #5902: remove unrecognized tags from circleci config","Issue #5902","closed","","romani","2018-06-11T03:25:00Z","2018-06-11T03:57:31Z"
"","5903","Issue #5902: use docker images in circleci","Issue #5902","closed","","romani","2018-06-11T02:21:19Z","2018-06-11T03:57:42Z"
"","5898","Issue #5893: added LambdaParameterNameCheck","Issue #5893  Added new LambdaParameterNameCheck with corresponding tests.","closed","","kazachka","2018-06-10T08:43:25Z","2018-06-28T12:25:02Z"
"","5889","Issue #5881: False positive for multiline imports","Issue #5881   When the `import` token and the imported package name are on different lines, the first line should be compared.","closed","","pbludov","2018-06-04T12:51:42Z","2018-06-05T04:54:40Z"
"","5943","Issue #5876: update xdoc for cmdline suppression option","Issue #5876  ![image](https://user-images.githubusercontent.com/812984/41505438-455604aa-71be-11e8-9a1b-e047dc6c8239.png)","closed","","romani","2018-06-17T04:47:09Z","2018-06-17T19:20:20Z"
"","5855","Issue #5854: move circleci commands to shippable","Issue #5854","closed","","romani","2018-05-27T05:44:52Z","2018-05-27T06:52:37Z"
"","5829","Issue #5827: compile all jdk9 files in Travis","Issue #5827","closed","","romani","2018-05-25T05:52:19Z","2018-05-25T13:06:24Z"
"","5857","Issue #5812: Rename all utility classes to xxxxUtil","Issue #5812  The PR is large, but simple.","closed","","pbludov","2018-05-27T10:26:19Z","2018-06-04T13:12:11Z"
"","5887","Issue #5812: switch wercker to checkstyle's fork of xwiki","Issue #5812   not for merge ... looks like checkstyle is not running.","closed","","romani","2018-06-04T05:11:09Z","2018-06-04T05:48:08Z"
"","5852","Issue #5791: cut to 100 symbols in line all test resources","Issue #5791   this is final update.","closed","","romani","2018-05-27T01:11:54Z","2018-05-27T04:34:49Z"
"","5815","Issue #5791: wrap lines in google style","Issue #5791   @rnveach , fyi, we need to merge this PR, and then(separate issue) resolve xdac validator to understand new format of google style page.","closed","","romani","2018-05-18T15:21:20Z","2018-05-18T17:37:39Z"
"","5818","Issue #5791: wrap IntelliJ configs","Issue #5791  This is final commit for this issue.  Attention to https://github.com/checkstyle/checkstyle/issues/5791#issuecomment-390361171 to explain not wrapping changes.","closed","","romani","2018-05-19T00:15:29Z","2018-05-19T01:30:46Z"
"","5850","Issue #5791: cut lines up to 100 symbols in test resources","Issue #5791","closed","","romani","2018-05-26T21:17:00Z","2018-05-27T01:12:14Z"
"","5841","Issue #5791: cut line up to 100 symbols in test resources","Issue #5791","closed","","romani","2018-05-26T16:54:17Z","2018-05-26T18:08:50Z"
"","5840","Issue #5791: cut lines up to 100 symbols in test resources","Issue #5791","closed","","romani","2018-05-26T13:49:18Z","2018-05-26T16:07:24Z"
"","5838","Issue #5791: cut lines up to 100 symbols in test resources","Issue #5791","closed","","romani","2018-05-26T05:29:54Z","2018-05-26T12:51:08Z"
"","5837","Issue #5791: wrap or cut up to 100 symbols for lines at IT resources","Issue #5791","closed","","romani","2018-05-26T04:15:29Z","2018-05-26T05:19:32Z"
"","5824","Issue #5791: fix xdoc and restore disabled UT","Issue #5791","closed","","romani","2018-05-21T23:49:36Z","2018-05-22T13:56:47Z"
"","5814","Issue #5791: line wrap for appveyor","Issue #5791","closed","","romani","2018-05-18T13:45:36Z","2018-05-18T14:57:41Z"
"","5811","Issue #5791: wrap checkstle configs","Issue #5791","closed","","romani","2018-05-18T06:09:04Z","2018-05-18T13:00:31Z"
"","5810","Issue #5791: wrap lines in ci folder","Issue #5791","closed","","romani","2018-05-18T00:23:56Z","2018-05-18T04:45:30Z"
"","5809","Issue #5791: wrap lines in pmd and spotbugs","Issue #5791","closed","","romani","2018-05-17T23:36:50Z","2018-05-18T01:43:11Z"
"","5808","Issue #5791: wrap lines in ci folder","Issue #5791","closed","","romani","2018-05-17T22:50:18Z","2018-05-18T00:30:16Z"
"","5807","Issue #5791: line wrap for travis files","Issue #5791","closed","","romani","2018-05-17T22:13:58Z","2018-05-18T05:34:53Z"
"","5806","Issue #5791: wrap lines in pom.xml","Issue #5791","closed","","romani","2018-05-17T21:23:41Z","2018-05-18T00:16:01Z"
"","5803","issue #5791: wrap lines to 100 for wercker and shippable","issue #5791","closed","","romani","2018-05-17T19:56:58Z","2018-05-25T21:09:59Z"
"","5802","Issue #5791: wrap lines at .github and some files root of repo","Issue #5791","closed","","romani","2018-05-17T17:10:35Z","2018-05-17T20:10:24Z"
"","5801","Issue #5791: wrap xdoc/config* files","Issue #5791","closed","","romani","2018-05-17T13:42:06Z","2018-05-17T20:00:32Z"
"","5799","Issue #5791: updates for line wrap in site and xdoc","Issue #5791","closed","","romani","2018-05-17T00:20:11Z","2018-05-17T12:36:16Z"
"","5798","Issue #5791: update format to skip imports and http, resolve some cases","Issue #5791","closed","","romani","2018-05-16T20:54:16Z","2018-05-16T21:54:45Z"
"","5792","Issue #5791: format some files in config folder","Issue #5791","closed","","romani","2018-05-12T14:45:13Z","2018-05-12T19:23:43Z"
"","5813","Issue #5790: Upgrade to PMD 6.3.0","Issue #5790  Some new rules are broken and were excluded till the next PMD release.","closed","","pbludov","2018-05-18T13:43:20Z","2018-05-19T07:23:03Z"
"","5836","Issue #5785: enable site.xml validation","Issue #5785","closed","","romani","2018-05-26T02:11:03Z","2018-05-26T04:21:55Z"
"","5800","Issue #5757: switched simple log line/column to log ast","Issue #5757  There should be no more easy cases after this.","closed","","rnveach","2018-05-17T13:13:34Z","2018-05-18T12:56:19Z"
"","5772","Issue #5757: switched simple log line/column to log ast","Issue #5757  Swapped `log(line, column` to `log(ast`. No tests were changed. All checks that had all logs changed were added to XPath suppression list.","closed","","rnveach","2018-05-04T18:19:24Z","2018-05-08T03:42:06Z"
"","5753","issue #5752: Activate checks related to java.io.Closeable","Issue #5752   Force use of `try-with-resources`","closed","","pbludov","2018-04-22T02:44:28Z","2018-07-12T07:12:46Z"
"","5778","Issue #5750: abstract class name","Issue #5750  Changed AbstractClassNameCheck.  Fixed bug in UT on how a setter is identified. Slightly modified UT to specify property descriptions as first case upper. Also modified AbbreviationAsWordInNameCheck again to make first word of property a singluar verb so it flows better for setter text.","closed","","rnveach","2018-05-06T19:53:38Z","2018-05-09T12:26:59Z"
"","5864","Issue #5750: last of naming checks","Issue #5750","closed","","rnveach","2018-05-27T21:57:29Z","2018-05-28T01:28:03Z"
"","5862","Issue #5750: aligned javadoc/xdoc for MethodNameCheck","Issue #5750","closed","","rnveach","2018-05-27T17:37:41Z","2018-05-27T21:36:06Z"
"","5861","Issue #5750: aligned javadoc/xdoc for MemberNameCheck","Issue #5750","closed","","rnveach","2018-05-27T16:42:34Z","2018-05-27T17:41:10Z"
"","5851","Issue 5750 local variable name check","Issue #5750","closed","","rnveach","2018-05-26T23:43:48Z","2018-05-27T00:30:58Z"
"","5848","Issue #5750: aligned javadoc/xdoc for LocalFinalVariableNameCheck","Issue #5750","closed","","rnveach","2018-05-26T20:30:48Z","2018-05-26T23:04:53Z"
"","5846","Issue #5750: aligned javadoc/xdoc for InterfaceTypeParameterNameCheck","Issue #5750","closed","","rnveach","2018-05-26T19:23:14Z","2018-05-26T20:40:54Z"
"","5835","Issue #5750: aligned javadoc/xdoc for ConstantNameCheck","Issue #5750","closed","","rnveach","2018-05-26T02:07:00Z","2018-05-26T18:58:58Z"
"","5834","Issue #5750: aligned javadoc/xdoc for ClassTypeParameterNameCheck","Issue #5750","closed","","rnveach","2018-05-26T00:24:25Z","2018-05-26T01:57:36Z"
"","5796","Issue #5750: aligned javadoc/xdoc for CatchParameterName","Issue #5750","closed","","rnveach","2018-05-16T02:15:18Z","2018-05-16T11:33:27Z"
"","5751","Issue #5750: aligned javadoc/xdoc for AbbreviationAsWordInNameCheck","Issue #5750","closed","","rnveach","2018-04-21T04:00:14Z","2018-05-05T20:42:39Z"
"","5739","Issue #5738: remove author javadoc tag","Issue #5738","closed","","romani","2018-04-18T19:13:24Z","2018-04-19T13:18:05Z"
"","5972","Issue #5724: Groups for static imports","Issue #5724  Regression report: https://pbludov.github.io/issue-5724/","closed","","pbludov","2018-06-26T10:01:54Z","2018-07-01T16:13:31Z"
"","5907","Issue #5722: Update DTD public names (typo at ImportControlLoader)","Issue #5722   identified at https://github.com/checkstyle/checkstyle/issues/5601#issuecomment-396120018  CI failures https://circleci.com/gh/checkstyle/checkstyle/5997 : ``` 4:14:57 AM PIT >> INFO : MINION : ls.checkstyle.api.CheckstyleException: unable to read file:/home/circleci/project/src/test/resources/com/puppycrawl/tools/checkstyle/ checks/imports/importcontrol/InputImportControlOneRegExp.xml at com.puppycrawl.tools.checkstyle.checks.imports.ImportContr 4:14:57 AM PIT >> INFO : MINION : olLoader.load(ImportControlLoader.java:282) at com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader.load(ImportControlLoader.java:253) at com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheck.setFile(ImportControlCheck.java:192) 4:14:57 AM PIT >> INFO : MINION :  ... 44 more Caused by: java.io.IOException: Server returned HTTP response code: 503 for URL: http://checkstyle.sourceforge.net/dtds/import_control_1_2.dtd at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1876) ```  the same problem detected Travis https://travis-ci.org/checkstyle/checkstyle/jobs/390563236#L446","closed","","romani","2018-06-11T04:49:49Z","2018-06-11T20:35:23Z"
"","5869","Issue #5722: Update DTD public names","Issue #5722   All DTD names have been updated in the required `.xml`, `.dtd`, `.java` and `.xml.vm` files.","closed","","subkrish","2018-05-29T19:34:19Z","2018-06-10T16:42:02Z"
"","5784","Issue #5721: Remove xml declaration tag from all dtd files","Issue #5721   This PR removes the xml declaration tag -> `` from all `.dtd` files.","closed","","subkrish","2018-05-10T18:43:22Z","2018-05-12T16:21:34Z"
"","5720","Issue #5718: UpperEll rule description gives bogus reason","Issue #5718","closed","","romani","2018-04-12T14:28:40Z","2018-04-12T19:50:54Z"
"","5710","Issue #5709: CheckUtils.parseDouble: wrong result for negative values","Issue #5709  More test cases and fix for negative and binary integers.","closed","","pbludov","2018-04-11T02:38:47Z","2018-04-12T13:08:54Z"
"","5708","Issue #5706: fixed FinalClassCheck extracting qualified names","Issue #5706  I will run regression to see if there are any affected cases. Most likely it will only happen with very similar package/class names like `com.company.A` and `com.A`.","closed","","rnveach","2018-04-10T22:58:12Z","2018-04-11T02:15:53Z"
"","5696","Issue #5695: fix javadoc for MismatchStrategy","Issue #5695","closed","","romani","2018-04-07T15:32:02Z","2018-04-07T18:26:19Z"
"","5735","Issue #5693: Ignore unicode/hex tokens and single letters","Issue #5693","closed","","jsoref","2018-04-15T05:37:24Z","2018-04-17T23:55:51Z"
"","5740","Issue #5676: moving spellchecker from contribution repo to main repo","Issue #5676  This PR resolves issue, all other minor problems should be done in separate issues.","closed","","romani","2018-04-18T21:03:55Z","2018-04-19T01:00:29Z"
"","5679","Issue #5676: Initial implementation of spell checking test for CI","Issue #5676  This is based on: https://github.com/jsoref/spelling  w (the engine for finding unrecognized words) -- we're retrieving this using curl  -> .ci-temp/contribution/jsoref-spellchecker/spelling-unknown-word-splitter.pl  f+dn+fchurn  -> .ci/test-spelling-unknown-words.sh  I think this will do what you need...","closed","","jsoref","2018-04-03T00:47:03Z","2018-04-05T22:12:02Z"
"","5683","Issue #5675: Remove BlockParentHandler.shouldTopLevelStartLine","Issue #5675  Regression report: https://pbludov.github.io/issue-5675/","closed","","pbludov","2018-04-03T14:50:35Z","2018-04-08T13:24:55Z"
"","5754","config: comment for PMD rule CommentDefaultAccessModifier","Issue #5665   The rule is not useful for Checkstyle. It should be excluded with a clear comment.","closed","","pbludov","2018-04-23T14:08:27Z","2018-04-24T13:32:32Z"
"","5743","Issue #5665: PMD rule CommentDefaultAccessModifier","Issue #5665   Refactoring the code to make it satisfy https://pmd.github.io/pmd-6.2.0/pmd_rules_java_codestyle.html#commentdefaultaccessmodifier","closed","","pbludov","2018-04-19T14:11:05Z","2018-04-23T17:18:48Z"
"","5664","Issue #5663: Add openjdk8/9 to Travis/AppVeyor","Issue #5663  OracleJDK8 is the default environment for the time being.  For the other (OpenJDK8/9, OracleJDK9) we need a build step to make sure that our code is not JDK depended.","closed","","pbludov","2018-03-30T04:27:50Z","2018-03-30T13:37:11Z"
"","5662","Issue #5660: Remove usage of com.oracle.net package","Issue #5660   Solves openjdk-10 build.","closed","","pbludov","2018-03-29T23:52:58Z","2018-03-30T05:19:09Z"
"","5674","Issue #5655: Indentation: wrapped method name","Issue #5655  When a method name is on the next line from the dot, like this ``` a.   method(     someArg); ``` the indentation is calculated  in the wrong way. This PS fixes it.","closed","","pbludov","2018-03-31T16:04:26Z","2018-04-04T10:38:46Z"
"","5623","Issue #5642: matched order of ImportControl rules to XML file","Issue #5642","closed","","rnveach","2018-03-20T00:28:03Z","2018-04-02T19:48:44Z"
"","5643","Issue #5640: Other validations should be off during the pitest check","Issue #5640   It looks like the Pitest minions are doing some unwanted work. This PR will make them focus on the Pitest checks only.","closed","","pbludov","2018-03-24T13:26:29Z","2018-03-25T00:43:39Z"
"","5644","Issue #5640: skip jacoco for pitest executions","Issue #5640  my version .... related PR #5643","closed","","romani","2018-03-24T19:13:49Z","2018-03-25T00:43:48Z"
"","5639","Issue #5638: Replace File{Input,Output}Stream with Files.new{Input,Output}Stream","Issue #5638  All `File{Input,Output}Stream` replaced with `Files.new{Input,Output}Stream`.","closed","","pbludov","2018-03-23T09:27:02Z","2018-04-14T13:17:37Z"
"","5634","Issue #5633: Fix PMD6 violations (bestpractices)","Issue #5633   - `for` loop in `JavadocDetailNodeParser` replaced with `foreach` loop - `ClassResolverTest::TestMess` split into three different tests - The garbage in `Comment` ctor replaced with some code - `MutableExceptionCheckTest::testWrongTokenType` checks the exception message","closed","","pbludov","2018-03-22T10:41:15Z","2018-04-09T13:48:18Z"
"","5627","Issue #5622: Drop findbugs","Issue #5622   Remove FindBugs if there is an entry for SpotBugs nearby. Replace  FindBugs with SpotBugs otherwise.","closed","","pbludov","2018-03-20T10:36:38Z","2018-03-30T05:20:12Z"
"","5729","Issue #5616: Remove remnants of cobertura usage","Issue #5616   - Stream classes were enabled in the `import-control.xml` and `checkstyle_sevntu_checks.xml/ForbidCertainImports`.  - Wherever there is `try-with-resources` compatible code, refactoring is performed.  - Enabled Idea inspections `AutoCloseableResource` and `TryFinallyCanBeTryWithResources`  - Enabled Eclipse JDT problem `explicitlyClosedAutoCloseable`. This lead to two false positives:   `Main.createListener` and `LocalizedMessage$Utf8Control.newBundle` Both of them were suppressed.  - (as a consequence of the previous action) the `resource` warning was allowed for suppression in `checkstyle_checks.xml//SuppressWarnings`  - Obsolete checks (in order to make sure that the resource is closed) were removed, since the code being checked (`Closables`) is no longer used. As a free bonus, the number of uses of `PoverMock` decreased.","closed","","pbludov","2018-04-15T02:17:17Z","2018-04-22T01:47:00Z"
"","5614","Issue #5613: Replace InputEvent#getModifiers with getModifiersEx","Issue #5613  Solves the Spotbugs error ``` [ERROR] Forbidden method invocation: java.awt.event.InputEvent#getModifiers() [Deprecated in Java 9] [ERROR]   in com.puppycrawl.tools.checkstyle.gui.TreeTable$TreeTableCellEditor (TreeTable.java:287) ```","closed","","pbludov","2018-03-16T12:32:51Z","2018-03-19T05:49:46Z"
"","5612","Issue #5611: Remove usage of com.sun packages from tests","Issue #5611  Move to `resource-noncompilabe` all input sources with `import com.sun.`","closed","","pbludov","2018-03-16T11:14:25Z","2018-03-17T03:50:48Z"
"","5607","Issue #5604: resolve sonar violation 'Remove this unused private ctor ...'","Issue #5604   Violation: https://sonarcloud.io/project/issues?id=com.puppycrawl.tools%3Acheckstyle&open=AV0GeNYnI1Qj-tYTbFkx&resolved=false&types=CODE_SMELL","closed","","romani","2018-03-11T20:01:24Z","2018-03-13T01:50:46Z"
"","5637","Issue #5603: Migrate to PMD6","Issue #5603  There are many warnings about deprecated rules, they should be fixed in separated PRs.","closed","","pbludov","2018-03-22T22:35:29Z","2018-04-03T02:47:36Z"
"","5734","Issue #5603: Use category/java/documentation in the PMD config","Issue #5603  Part 8. All the rulesets that are completely absorbed by the category `documentation` have been removed. Rulesets that are partially moved to the category `documentation` will be retained until they are completely absorbed. For the transition time some rules will be are excluded twice: one for the old ruleset, another for the new category.  Absorbed rulesets: - rulesets/java/comments.xml - rulesets/java/design.xml","closed","","pbludov","2018-04-15T04:00:42Z","2018-04-16T09:37:15Z"
"","5728","Issue #5603: Use category/java/multithreading in the PMD config","Issue #5603  Part 7. All the rulesets that are completely absorbed by the category `multithreading` have been removed. Rulesets that are partially moved to the category `multithreading` will be retained until they are completely absorbed. For the transition time some rules will be are excluded twice: one for the old ruleset, another for the new category.  Absorbed rulesets: - rulesets/java/basic.xml - rulesets/java/controversial.xml","closed","","pbludov","2018-04-15T00:35:36Z","2018-04-15T03:23:34Z"
"","5727","Issue #5603: Use category/java/performance in the PMD config","Issue #5603  Part 6. All the rulesets that are completely absorbed by the category `performance` have been removed. Rulesets that are partially moved to the category `performance` will be retained until they are completely absorbed. For the transition time some rules will be are excluded twice: one for the old ruleset, another for the new category.  Absorbed rulesets: - rulesets/java/strings.xml - rulesets/java/optimizations.xml - rulesets/java/migrating.xml","closed","","pbludov","2018-04-14T13:38:36Z","2018-04-15T00:11:30Z"
"","5725","Issue #5603: Use category/java/codestyle in the PMD config","Issue #5603  Part 5. All the rulesets that are completely absorbed by the category `codestyle` have been removed. Rulesets that are partially moved to the category `codestyle` will be retained until they are completely absorbed. For the transition time some rules will be are excluded twice: one for the old ruleset, another for the new category.  Absorbed rulesets: - rulesets/java/braces.xml - rulesets/java/imports.xml - rulesets/java/naming.xml - rulesets/java/unnecessary.xml","closed","","pbludov","2018-04-14T07:07:06Z","2018-04-14T13:16:58Z"
"","5705","Issue #5603: Use category/java/design in the PMD config","Issue #5603  Part 4. All the rulesets that are completely absorbed by the category `design` have been removed. Rulesets that are partially moved to the category `design` will be retained until they are completely absorbed. For the transition time some rules will be are excluded twice: one for the old ruleset, another for the new category.  Absorbed rulesets: - rulesets/java/codesize.xml - rulesets/java/coupling.xml - rulesets/java/junit.xml - rulesets/java/strictexception.xml - rulesets/java/typeresolution.xml","closed","","pbludov","2018-04-10T06:15:51Z","2018-04-14T06:16:07Z"
"","5704","Issue #5603: Use category/java/bestpractices in the PMD config","Issue #5603  Part 3. All the rulesets that are completely absorbed by the category bestpractices have been removed. Rulesets that are partially moved to the category bestpractices will be retained until they are completely absorbed. For the transition time some rules will be are excluded twice: one for the old ruleset, another for the new category.  Absorbed by `bestpractices`: - rulesets/java/unusedcode.xml - rulesets/java/sunsecure.xml  New Rules: - GuardLogStatement This rule is not compatible with CS. It can be solved by renaming `AbstractViolationReporter::log` to something else. But this requires changing the API and it does not make sense.","closed","","pbludov","2018-04-09T03:01:16Z","2018-04-10T10:21:02Z"
"","5681","Issue #5603: Use category/java/errorprone in the PMD config","Issue #5603  Part 2. All the rulesets that are completely absorbed by the category `errorprone` have been removed. Rulesets that are partially moved to the category `errorprone` will be retained until they are completely absorbed. For the transition time some rules will be are excluded twice: one for the old `ruleset`, another for the new `category`.","closed","","pbludov","2018-04-03T04:10:00Z","2018-04-09T00:00:48Z"
"","5909","Issue #5601: change all dtds to use https:\\checkstyle.org","Issue #5601  Reason: https://github.com/checkstyle/checkstyle/issues/5601#issuecomment-396120018  Actual reason of CI failures was bad update for xml names, fixed at #5907 . But we should continue migration to checkstyle.org  update was done by: `$ find . -type f -name '*' -exec sed -r -i'' 's|http://checkstyle.sourceforge.net/dtds/|https://checkstyle.org/dtds/|g' '{}' \;`","closed","","romani","2018-06-11T06:20:51Z","2018-06-11T20:31:36Z"
"","5906","Issue #5601: change all dtds to use https:\\checkstyle.org","Issue #5601  Reason: https://github.com/checkstyle/checkstyle/issues/5601#issuecomment-396120018  Actual reason of CI failures was bad update for xml names, fixed at #5907 . But we should continue migration to checkstyle.org","closed","","romani","2018-06-11T04:39:33Z","2018-06-11T06:21:14Z"
"","5886","Issue #5601: stop publishing binaries to sourceforge","Issue #5601","closed","","romani","2018-06-04T00:46:49Z","2018-06-04T01:34:19Z"
"","5600","Issue #5599: 100% coverage for Checker","Issue #5599  This is related to #5592. I'm going to extract some classes to a dedicated profile, but the Pitest complains on missing coverage for some classes.","closed","","pbludov","2018-03-09T06:53:52Z","2018-03-13T12:32:15Z"
"","5598","Issue #5597: 100% coverage for XMLLogger","Issue #5597  This is related to #5592. I'm going to extract some classes to a dedicated profile, but the Pitest complains on missing coverage for some classes.","closed","","pbludov","2018-03-09T05:42:51Z","2018-03-13T12:32:30Z"
"","5596","Issue #5595: 100% coverage for PackageObjectFactory","Issue #5595   This is related to #5592. I'm going to extract some classes to a dedicated profile, but the Pitest complains on missing coverage for some classes.","closed","","pbludov","2018-03-09T05:03:22Z","2018-03-13T12:31:07Z"
"","5594","Issue #5592: Split pitest-checkstyle-common","Issue #5592  The largest part of `pitest-checkstyle-common` is the ANT test. Extracting this test to a dedicated profile will give more resources to the rest of `pitest-checkstyle-common`","closed","","pbludov","2018-03-09T04:26:26Z","2018-03-13T14:13:02Z"
"","5593","Issue #5591: 100% Coverage for DefaultConfiguration","Issue #5591   This is related to #5592. I'm going to extract some classes to a dedicated profile, but the Pitest complains on missing coverage for some classes.","closed","","pbludov","2018-03-09T04:09:08Z","2018-03-13T12:32:38Z"
"","5587","Issue #5586: Drop Cobertura","Issue #5586  - cobertura replaced with jacoco where possible - Jacoco check extracted from it's profile - JDK9 build with tests - Sonarqube coverage","closed","","pbludov","2018-03-07T02:39:11Z","2018-04-04T13:38:25Z"
"","5585","Issue #5584: Switch to Powermock 2.0","Issue #5584  We need the file `org/powermock/extensions/configuration.properties` in the resources. So, the test `AllTestsTest` should be fixed.  Note that this is a temporary solution. Once the Powermock issue will be fixed, the file `org/powermock/extensions/configuration.properties` will not be required.","closed","","pbludov","2018-03-07T01:34:15Z","2018-03-13T12:31:49Z"
"","5583","Issue #5582: Remove usage of javax.xml.bind.XmlElement","Issue #5582  Drop `javax.xml.bind.annotation.XmlElement` import and replace with an inner annotation.","closed","","pbludov","2018-03-07T01:11:31Z","2018-03-08T12:22:40Z"
"","5570","Issue #5565: add REMOVE_SWITCH mutator to pitest","Issue #5565  This PR is expecting to fail.","closed","discussion ongoing,","pbludov","2018-03-01T03:43:55Z","2018-03-08T12:25:47Z"
"","5563","Issue #5561: IllegalStateException message text was changed in JDK9","Issue #5561  Fixes a test failure on JDK9 .","closed","","pbludov","2018-02-28T07:44:00Z","2018-03-06T14:09:55Z"
"","5559","Issue #5558: Switch to powermock-api-mockito2","Issue #5558  Note that we are still using the PowerMock 1.x release. To compile the Checkstyle with JDK9 use ``` export MAVEN_OPTS='--add-opens java.xml/jdk.xml.internal=ALL-UNNAMED' mvn clean verify -Dpowermock.version=2.0.0-beta.5 ```","closed","","pbludov","2018-02-28T02:02:21Z","2018-03-08T12:23:02Z"
"","5556","Issue #5555: Refactoring of JavadocUtils static init","Issue #5555 Workaround for Jacoco limitations (part 4). Also, solves a bit of #3433","closed","","pbludov","2018-02-26T11:33:43Z","2018-03-08T12:22:25Z"
"","5554","Issue #5553: Jacoco workaround for MainTest","Issue #5553 Workaround for Jacoco limitations (part 3).","closed","","pbludov","2018-02-26T06:54:32Z","2018-03-14T13:59:18Z"
"","5552","Issue #5551: PackageNamesLoaderTest refactoring","Issue #5551 Workaround for Jacoco limitations (part 2).","closed","","pbludov","2018-02-26T06:25:00Z","2018-03-08T12:22:13Z"
"","5547","Issue #5546: Explicitly throw ClassNotFoundException from ClassResolver","Issue #5546 Workaround for Jacoco limitations (1 of 4).","closed","","pbludov","2018-02-26T01:47:47Z","2018-03-06T14:11:29Z"
"","5692","Issue #5528: migration to circleci 2.0","Issue #5528","closed","","romani","2018-04-05T23:18:04Z","2018-04-08T14:12:09Z"
"","5579","Issue #5525: bump spotbugs to 3.1.3","Issue #5525","closed","","romani","2018-03-06T01:50:48Z","2018-03-06T06:44:34Z"
"","5540","config: bump spotbugs to 3.1.2","Issue #5525","closed","","romani","2018-02-25T13:23:41Z","2018-02-25T14:32:28Z"
"","5527","I5525","Issue #5525","closed","","romani","2018-02-19T21:06:51Z","2018-02-20T18:20:18Z"
"","5823","Issue #5521: added active tool 'Lightweight Eclipse Plugin for Quality Assurance Tools' to website","Issue #5521 : added active tool 'Lightweight Eclipse Plugin for Quality Assurance Tools' to website","closed","","ChristianWulf","2018-05-21T11:54:35Z","2018-05-21T19:06:37Z"
"","5518","config: Jacoco coverage report","Issue #5516  The profile is inactive by default.  To check the coverage `mvn -Pjacoco-check clean verify`  To generate the report `mvn -Pjacoco-check clean site`","closed","","pbludov","2018-02-10T16:20:41Z","2018-02-20T21:05:00Z"
"","5707","Issue #5511: Allow blank lines in Header","Issue #5511  Moves the check to replace a blank line with an regex pattern from `AbstractHeaderCheck` to `RegexpHeaderCheck`. `RegexpHeaderCheck` now also adds the blank regexp pattern into log messages in place of a blank line to be consistent with existing behaviour (i.e. so that existing tests in `RegexpHeaderCheckTest` continue to pass unchanged)  Includes a test to verify that a header with blank lines does not cause a violation.","closed","","kemitix","2018-04-10T21:41:43Z","2018-04-15T04:36:37Z"
"","5500","wercker failure","issue #5499","closed","","romani","2018-01-29T22:07:57Z","2018-01-29T22:20:52Z"
"","5475","Issue #5474: fix appveyor build failure with cygwin","Issue #5474","closed","","romani","2018-01-19T23:33:43Z","2018-01-20T00:06:09Z"
"","5442","Issue #5440: New Check: Enforce or deny a blank line before the right curly brace","Issue #5440: New Check BeforeRightCurly","closed","","pbludov","2018-01-07T12:12:57Z","2019-02-28T09:20:54Z"
"","5441","Issue #5439: New Check: Enforce or deny a blank line after the left curly brace","Issue #5439: New Check AfterLeftCurly","closed","","pbludov","2018-01-07T12:01:18Z","2018-02-26T02:09:39Z"
"","5437","Issue #5436: Split TreeWalker to TreeWalker and JavaParser","Issue #5436: Split TreeWalker to TreeWalker and JavaParser","closed","","pbludov","2018-01-07T04:23:53Z","2018-02-26T02:10:15Z"
"","5485","Issue #5431: Remove dependency on tools.jar","Issue #5431: Remove dependency on tools.jar","closed","","pbludov","2018-01-24T11:28:08Z","2018-02-26T02:09:45Z"
"","5541","Issue #5431: Remove dependencies of tools.jar","Issue #5431  continuation of #5485 to pass CI","closed","","romani","2018-02-25T14:10:24Z","2018-02-28T07:14:24Z"
"","5425","Issue #5423: Javadoc fixes","Issue #5423  The {@code } inline tag has some limitations:  - it may not contains encoded html entities such a &lt; - they will be displayed 'as is' - it may not contains symbols ""!?."" since they are treated as the end-of-sentence marker by the javadoc tool - it may not contains symbols ""{}"" for obvious reason  To mark such fragments as code, the {@code } inline tag must be replaced with the HTML <code> tag.  In addition, several typos have been fixed.","closed","","pbludov","2018-01-05T16:17:21Z","2018-01-06T03:40:07Z"
"","5420","Issue #5419: prevented XMLLogger from sanitizing exception tags","Issue #5419  Regression isn't affected as we don't use `addException` method. See https://github.com/checkstyle/checkstyle/issues/4377 .","closed","","rnveach","2018-01-03T16:27:16Z","2018-01-06T01:09:02Z"
"","5768","Issue #5412: add single lambda parameter validation","Issue #5412  ParameterNameCheck updated to process single lambda parameter validation. Renamed lambda parameters, which had create violation after changes. Added test.","closed","","kazachka","2018-05-02T21:30:44Z","2018-06-07T17:57:31Z"
"","5771","Issue #5412: change lambda parameter names","Issue #5412  From pull #5768  Changed lambda parameters names.","closed","","kazachka","2018-05-03T20:05:41Z","2018-05-03T21:53:35Z"
"","5410","Issue #5409: fixed intellij 2017.3 violations part 1","Issue #5409   I will generate regression on the changes in the Check.  The sheer amount of duplication in `AvoidEscapedUnicodeCharactersCheck` is very sad. I will create another issue once this PR is merged to sort the unicodes and split them apart better so they are easier to read.","closed","","rnveach","2017-12-31T05:13:03Z","2018-01-05T22:39:21Z"
"","5428","Issue #5409: fixed intellij 2017.3 violations part 2","Issue #5409  http://rveach.no-ip.org/checkstyle/regression/reports/issue5409.html ~Fixes all `Unsafe lazy initialization of 'static' field inspection   2 errors`.~ Fixes all `Overridable method called during object construction inspection   8 errors` Fixes one instance of `Redundant throws clause inspection   25 errors`.","closed","","rnveach","2018-01-06T02:09:21Z","2018-01-07T13:51:31Z"
"","5432","Issue #5409: fixed remaining intellij 2017.3 violations","Issue #5409  Fixes all Unsafe lazy initialization of 'static' field inspection 2 errors.  I was going to use double locking instead of synchronizing on the method, but PMD complained about that too. This article explains why: https://www.javaworld.com/article/2074979/java-concurrency/double-checked-locking--clever--but-broken.html So I had to remove the lazy init.","closed","","rnveach","2018-01-06T14:47:29Z","2018-01-23T03:44:20Z"
"","5539","Issue #5409: fix violations from 'Redundant throws clause' inspection","Issue #5409","closed","","romani","2018-02-25T02:06:13Z","2018-02-25T13:00:57Z"
"","5406","Issue #5405: SuppressWithPlainTextComment should ignore directories","Issue #5405  Violations are not always on files. Sometimes they are on directories. `SuppressWithPlainTextComment` was changed to ignore these violations and not to try to read them as a file.","closed","","rnveach","2017-12-30T21:54:55Z","2017-12-31T02:05:12Z"
"","5422","Issue #5401: replace the word 'ignored' to 'validated'","Issue #5401  replace the word 'ignored' to 'validated' under SingleSpaceSeparator-Properties-validateComments","closed","","wate123","2018-01-04T04:42:29Z","2018-01-05T21:55:13Z"
"","5416","Issue #5401: replace the word 'ignored' to 'validated'","Issue #5401  replace the word 'ignored' to 'validated' under SingleSpaceSeparator-Properties-validateComments","closed","","wate123","2018-01-03T04:01:05Z","2018-01-04T04:36:34Z"
"","5368","Issue #5338: moved, renamed and removed abstact declaration from Abst…","Issue #5338: moved, renamed and removed abstact declaration from AbstractLoader. Also moved and renamed AbstractLoaderTest and fixed suppressions for intellij idea and checkstyle","closed","","RoMaNiAsHkA","2017-12-20T11:11:10Z","2017-12-22T19:42:39Z"
"","5328","Issue #5327: fixed finding annotation name with comment embedded","Issue #5327  I will create regression and look for a more detailed UT for this change.","closed","","rnveach","2017-12-06T01:00:20Z","2017-12-08T14:41:24Z"
"","5312","Issue #5313: New Checks:AfterLeftCurly and BeforeRightCurly","Issue #5313.  New Checks:AfterLeftCurly and BeforeRightCurly","closed","","pbludov","2017-12-04T12:23:18Z","2018-02-26T02:10:57Z"
"","5369","Issue #5306: add additional message for void return","Issue #5306","closed","","vaano94","2017-12-20T11:45:30Z","2017-12-22T15:13:55Z"
"","5749","Issue #5291: fixed xdoc lines of 100 characters or more","Issue #5291  This is everything and enabled through CI.","closed","","rnveach","2018-04-21T03:03:15Z","2018-04-22T01:00:31Z"
"","5429","Issue #5291: fixed long xdoc lines of 130 characters or more","Issue #5291  I tried to format as best I could.  @romani  How do we want to handle xdoc comments that are too long? Should I split comment into 2 so `Warning here` stays on line with warning? https://github.com/checkstyle/checkstyle/blob/master/src/xdocs/config_filters.xml#L305 Or linux commands too long: https://github.com/checkstyle/checkstyle/blob/master/src/xdocs/cmdline.xml.vm#L180","closed","","rnveach","2018-01-06T03:45:51Z","2018-01-06T14:19:49Z"
"","5445","Issue #5291: fixed long xdoc lines of 107 characters or more","Issue #5291","closed","","rnveach","2018-01-07T23:51:22Z","2018-01-08T21:45:26Z"
"","5288","Issue #5283: resolve problem with pitest caused by previous commit","Issue #5283","closed","","romani","2017-11-23T14:09:53Z","2017-11-23T16:01:09Z"
"","5284","Issue #5283: resolve problem with covbertura on appveyor","Issue #5283","closed","","romani","2017-11-23T00:11:02Z","2017-11-23T01:57:43Z"
"","5993","Issue #5279: static imports can be separated by local groups","Issue #5279   Regression tests https://pbludov.github.io/issue-5279/","closed","","pbludov","2018-07-02T05:37:19Z","2018-07-12T05:16:26Z"
"","5839","Issue 5279: static imports can be separated by local groups","Issue #5279  continuation of #5346","closed","","pbludov","2018-05-26T09:52:05Z","2018-07-02T03:05:38Z"
"","5265","Issue #5264: clear filesets on checker destroy","Issue #5264","closed","","rnveach","2017-11-15T18:38:20Z","2017-11-18T01:47:19Z"
"","5266","Issue #5263: clear fileset messages after process for multi-file run","Issue #5263","closed","","rnveach","2017-11-15T20:00:57Z","2017-11-18T01:46:50Z"
"","5882","Issue #5256: place opencollective badge on sponsoring page","Issue #5256","closed","","romani","2018-06-03T19:31:32Z","2018-06-03T20:05:43Z"
"","5433","Issue #5255: fixed DesignForExtensionCheck for methods with no modifiers","Issue #5255: fixed DesignForExtensionCheck for methods with no modifiers","closed","","RoMaNiAsHkA","2018-01-06T19:55:13Z","2018-01-16T15:29:24Z"
"","5250","Issue #5249: Fix plural agreement in docs","Issue #5249","closed","","Dispader","2017-11-06T21:34:58Z","2017-11-07T18:42:03Z"
"","5449","doc: extend examples for FinalLocalVariable","Issue #5239   Created this PR as requested on #5239 .","closed","","aneels3","2018-01-08T22:13:17Z","2018-02-25T15:32:51Z"
"","5293","Issue #5228: suppressed dynamic message property in suppression test","Issue #5228   Suppressing the final violation from the check in sevntu. See https://travis-ci.org/sevntu-checkstyle/sevntu.checkstyle/jobs/306900583#L987 .","closed","","rnveach","2017-11-24T19:50:09Z","2017-11-25T00:49:57Z"
"","5241","Issue #5228: property values must be acceptable types","Issue #5228  We must only use acceptable types for property values so regression util can understand what that value is. `getResourcePath` was added to abstract support as I feel this can be used elsewhere in the future and will be a recognizable method by the util.","closed","","rnveach","2017-10-26T13:26:04Z","2017-10-27T02:54:52Z"
"","5273","Issue #5228: fixed violations for test makeup","Issue #5228  This fixes all violations found in test besides ones for https://github.com/checkstyle/checkstyle/issues/5157. I only had to suppress 4 cases.","closed","","rnveach","2017-11-18T18:39:16Z","2017-11-19T00:34:35Z"
"","5274","Issue #5228: fixed violations in it for test makeup","Issue #5228  This fixes all violations found in IT. No suppressions were needed.","closed","","rnveach","2017-11-18T18:43:10Z","2017-11-19T00:34:26Z"
"","5299","added CheckstyleTestMakeupCheck and added RequireFailForTryCatchInJunit from sevntu","Issue #5228  This completes the issue. `RequireFailForTryCatchInJunit` is also required for CI to pass.","closed","","rnveach","2017-11-26T02:29:53Z","2017-11-26T14:29:36Z"
"","5229","Issue #5228: removed unnecessary create module config methods","Issue #5228  Removed unnecessary `create*Config` methods and replaced them with `createModuleConfig`.","closed","","rnveach","2017-10-24T15:05:38Z","2017-10-26T11:46:15Z"
"","5240","Issue #5228: removed temporary variables property values","Issue #5228  Removed all temporary variables that are used to assign a property it's value.","closed","","rnveach","2017-10-26T13:01:39Z","2017-10-29T00:23:23Z"
"","5230","Issue #5228: moved class field configurations to local variables","Issue #5228  Moved configurations from class fields to local variables.","closed","","rnveach","2017-10-24T17:36:59Z","2017-10-26T11:46:28Z"
"","5243","Issue #5210: added junit failures if exception is not thrown","Issue #5210   Some try/catches were invalid as they were catching exceptions that weren't expected. These try/catch blocks were removed. `ClassResolverTest` had an interesting case where it had a fail but more code after it which shouldn't be possible to execute.","closed","","rnveach","2017-10-26T22:10:04Z","2017-10-27T03:32:15Z"
"","5308","Issue #5208: use maven version plugin to report new versions for update","Issue #5208","closed","","romani","2017-11-30T23:55:01Z","2017-12-01T00:21:09Z"
"","5376","Issue #5207: add support for LITERAL_CASE and LITERAL_DEFAULT in LeftCurlyCheck","Issue #5207: I added additional case field for recognizing whether we have left curly brace after case expression.","closed","has bounty,","vaano94","2017-12-21T14:02:53Z","2018-07-12T02:56:25Z"
"","5204","Added tests in JavadocTokenTypesTest","Issue #5186: Added a test to disallow changes in values of fields in 'JavadocTokenTypes'","closed","","voidfist","2017-10-18T18:10:52Z","2017-10-20T22:03:47Z"
"","5193","Issue #5186: Addded GeneratedJavadocTokenTypesTest.java","Issue #5186: Added 'GeneratedJavadocTokenTypesTest' to check that the numbers generated by ANTLR for elements in javadoc grammar do not change with the grammar","closed","","voidfist","2017-10-16T22:10:32Z","2017-10-18T16:09:31Z"
"","5257","Issue #5176: adjacent static import groups ones became impossible in 8.3","Issue #5176 and Issue #5253","closed","","djydewang","2017-11-11T16:23:40Z","2017-11-24T03:47:48Z"
"","5163","Issue #5162: fixed sanitizing ampersand in xml file","Issue #5162","closed","","rnveach","2017-09-28T23:40:13Z","2017-10-10T14:42:31Z"
"","5160","Issue: #5158: fix unstable SuppressionFilterTest","Issue #5158","closed","","romani","2017-09-28T17:59:48Z","2017-11-30T20:28:09Z"
"","5277","Issue #5157: removed custom create configuration methods","Issue #5157  Custom `verify` methods will be supported, however they shouldn't be creating configurations of the module being tested as we may not examine them for their properties. Custom `create` methods will not be supported just like very custom property settings as there is too much variable in how they can be defined.  This fixes all cases.","closed","","rnveach","2017-11-19T01:51:51Z","2017-11-24T15:39:15Z"
"","5149","Issue #5148: added module JavadocType","Issue #5148: added module JavadocType  Public Class and Interface javadoc is not checked at the moment.  Excerpt:  ~~~ 7.3 Where Javadoc is used  At the minimum, Javadoc is present for every public class, and every public or protected member of such a class, with a few exceptions noted below. ~~~","closed","","fpetry","2017-09-27T11:19:51Z","2017-09-29T07:53:15Z"
"","5172","Issue #5141: fixed broken translation check because of ordering","Issue #5141   The first commit introduces the new XML verification routine. It ensures the XML is valid, can be parsed, and examines all children and properties appear. I made a new test support for this, and moved `readFile` to `AbstractPathTestSupport` so all tests can have access to it sine they are both connected.  The second commit introduces a custom order for nodes to give to the routine. Attributes are still required to be in order. Order for translation will be based on file name and number of children for the file. The children need to be examined since the same file can appear multiple times. I added `checker.setBasedir(getPath(""""));` to this test so I could remove the need to rely on full file paths.","closed","","rnveach","2017-10-04T21:11:24Z","2017-12-25T22:50:19Z"
"","5222","Issue #5139: Restored values of constants in 'JavadocTokenTypes' to that of checkstyle-8.2","Issue #5139: Restored values of constants in 'JavadocTokenTypes' to that of checkstyle-8.2","closed","","voidfist","2017-10-23T22:16:30Z","2017-10-26T17:02:12Z"
"","5455","Issue #5139: Restored token value for HTML_TAG_NAME back to version 8.1","Issue #5139: Restored token value for HTML_TAG_NAME back to version 8.1  `HTML_TAG_NAME` has been hardcoded to have a value of 87 in `JavadocTokenTypes`, `EMBED_HTML_TAG_NAME` has been hardcoded to have a value of 95 in `JavadocTokenTypes`  but is assigned a value of 87 by ANTLR _(95 is the value that's assigned to `HTML_TAG_NAME` by ANTLR)_.  Related discussion: https://github.com/checkstyle/checkstyle/pull/5101#pullrequestreview-72671739","closed","discussion ongoing,","voidfist","2018-01-10T22:52:39Z","2018-06-03T02:39:50Z"
"","5220","Issue #5134: Added test case for the issue","Issue #5134: Could not reproduce. Added test to cover the case.","closed","","AADudkin","2017-10-23T15:24:23Z","2017-10-26T07:52:48Z"
"","5294","Issue #5124: removed usages of branchContains for Variable Distance","Issue #5124   I split VariableDeclarationUsageDistanceCheck off from https://github.com/checkstyle/checkstyle/pull/5267 for easier review.  Fixed and added regression tests found at https://github.com/checkstyle/checkstyle/pull/5267#issuecomment-344800546 . New regression to come.","closed","","rnveach","2017-11-24T21:36:20Z","2017-11-26T23:09:25Z"
"","5242","Issue #5124: removed usage of branchContains for simple cases","Issue #5124  This removes 13 out of the 27 uses of `branchContains` left. This removes all cases where the item being looked for was in a standard location.","closed","","rnveach","2017-10-26T14:28:29Z","2017-11-09T14:46:55Z"
"","5233","Issue #5124: removed usage of branchContains for modifiers","Issue #5124  This is the first PR. This removes 64 of the 91 uses of `branchContains`. I focused on all variables that were using `modifiers`.  I ran into 1 issue with this in `DesignForExtensionCheck` where a comment wasn't found in the modifier. I just undid the change and will look into it more later.   I ran into another issue with `AbstractAccessControlNameCheck` where the method said it was receiving the modifiers AST but in fact ti was not. I fixed this in the method call to it.","closed","","rnveach","2017-10-25T14:17:06Z","2017-10-26T11:45:58Z"
"","5272","Issue #5124: removed usages of branchContains","Issue #5124  @romani I removed the cases out of https://github.com/checkstyle/checkstyle/pull/5267 that had no effect on regression to merge easier. I also fixed the shippable error.","closed","","rnveach","2017-11-18T17:42:40Z","2017-11-19T00:34:12Z"
"","5267","Issue #5124: removed final usages of branchContains","Issue #5124  5 cases are left. Regression to come.","closed","","rnveach","2017-11-16T00:31:43Z","2017-12-15T01:11:38Z"
"","5123","Issue #5121: fixed counter not including violations from audit listeners","Issue #5121","closed","","rnveach","2017-09-18T15:22:11Z","2017-10-25T15:36:18Z"
"","5143","Issue #5116: enabled eclipse compiler check in test code","Issue #5116","closed","","rnveach","2017-09-24T12:51:35Z","2017-09-26T23:37:50Z"
"","5112","Issue #5104: created internal utils package for test utils","Issue #5104   This is to separate tests and internal tests from utils/classes that support tests. Custom test modules will be a separate package.","closed","","rnveach","2017-09-15T01:02:43Z","2017-09-25T12:44:48Z"
"","5235","Issue #5104: added UT to ensure tests are named after production code","Issue #5104  This closes out the issue.","closed","","rnveach","2017-10-25T17:43:49Z","2017-10-26T11:45:06Z"
"","5111","Issue #5104: moved and renamed wrong test class names","Issue #5104  Starting with simple renames and moving between packages.  Changes in `testProcessCallsFinishBeforeCallingDestroy` were because the package is API and using the check is forbidden. The check shouldn't be needed anyways as we are just testing the FileSet.  FilterSetTest was split because class is package private and I felt these test were more testing the other classes than FilterSet.  I have not tested pitest locally.","closed","","rnveach","2017-09-14T22:22:45Z","2017-09-15T12:21:49Z"
"","5147","Issue #5104: merged all ImportControl tests into 1 class","Issue #5104  Each one had its own unique fields, so I renamed them based on the type of data they had. RegExp only in parent, only in children, and no regexp at all. I renamed test names to follow this pattern too which some started to do.  As a side note, one thing I saw: ````         icRoot = new ImportControl(""com\\.[^.]+\\.courtlink"", true);         icCommon = new ImportControl(icRoot, ""com+on"", true);         icRoot.addChild(icCommon); ```` It seems to me when you create the common and specify it's parent, the root should automatically add it as a child then. You shouldn't need to do it manually.","closed","","rnveach","2017-09-27T00:00:35Z","2017-09-28T02:13:51Z"
"","5399","Issue #5102: Fix Java9 build","Issue #5102   * All references to internal sun.* classes have been removed. * The doclet is replaced with an internal class with the same functionality but based on the internal parser.  To build Checkstyle with JDK9, all tests and cobertura reports must be disabled.","closed","","pbludov","2017-12-28T05:26:59Z","2018-01-07T15:54:33Z"
"","5238","Issue #5094: delete javadoc.parse.error","Issue #5094: delete javadoc.parse.error","closed","","dyominov","2017-10-26T08:36:34Z","2017-10-28T03:28:04Z"
"","5537","Issue #5069: Idea inspectons 2017.2.6","Issue #5069  NOT FOR MERGE.  TC pull request configuration was changed to use ""Bundled 2017.2.6"" inspection engine to test this PR.  Ones validation is passed, it is requited to open issues for IDEA to mark all suppressions with ""till ...."".","closed","","romani","2018-02-24T17:06:15Z","2018-02-24T23:34:26Z"
"","5091","Issue #5065: No violation before or after changes for static import list","Issue #5065","closed","","djydewang","2017-09-08T08:56:31Z","2017-09-28T12:43:47Z"
"","5061","Issue #5060: enforce no WARNING and INFO from eclipse compiler","Issue #5060","closed","","romani","2017-09-02T21:27:03Z","2017-09-02T22:48:08Z"
"","5059","Issue #5058: handle empty for loop conditions in NoWhitespaceBefore","Issue #5058: handle empty for loop conditions in NoWhitespaceBefore","closed","","cushon","2017-09-02T16:56:09Z","2017-09-08T04:24:25Z"
"","5398","Issue #5057: fixed xml violations/exceptions with file started/finished","Issue #5057  http://rveach.no-ip.org/checkstyle/regression/pitest-reports/15/ http://rveach.no-ip.org/checkstyle/regression/pitest-reports/16/  100% mutation for translation check and 100% for XML logger.","closed","","rnveach","2017-12-27T22:47:29Z","2017-12-30T15:49:59Z"
"","5038","Issue #5037: handle synchronized blocks in FallThroughCheck","Issue #5037","closed","","cushon","2017-08-31T16:22:56Z","2017-09-01T08:34:21Z"
"","5042","Issue #5035: Updated javadoc grammar to allow leading asterisks before arguments in 'see' javadoc tag","Issue #5035: Updated javadoc grammar to allow leading asterisks before arguments in 'see' javadoc tag","closed","","voidfist","2017-09-01T00:28:51Z","2017-09-01T17:20:54Z"
"","5028","Issue #5027: remove use of javax.xml.bind.DatatypeConverter","Issue #5027  This change replaces javax.xml.bind.DatatypeConverter with com.google.common.io.BaseEncoding","closed","","osiegmar","2017-08-30T13:10:54Z","2017-08-30T14:24:45Z"
"","5191","Issue #5023. Prohibited the usage of hardcoded encoding in Checkstyle sources.","Issue #5023. Changes:  Prohibited the usage of hardcoded encoding in Checkstyle sources Fixed existing hardcoded encodings to match new rule Allowed import of java.nio.charset.StandardCharsets for packages where it needed","closed","","AADudkin","2017-10-16T13:15:29Z","2017-10-26T07:51:00Z"
"","5025","Issue #5022: Fixed pitest coverage","Issue #5022   Not sure if shippable build is unstable, but I am able to reproduce the failure locally and the root of the problem is the following line:      fileMessages.clear();  Called inside `auditFinished`  Fixed coverage by adding a test for this behavior","closed","","soon","2017-08-30T04:08:35Z","2017-08-31T00:09:00Z"
"","5024","Issue #5022: to reproduce a problem","Issue #5022  not for merge. I will use it to reproduce and investigate a problem.","closed","","romani","2017-08-30T01:00:03Z","2017-08-30T18:21:22Z"
"","5142","Issue #5008: increase coverage of pitest-checks-coding to 97%","Issue #5008   all changes except EqualsAvoidNull from [this PR](https://github.com/checkstyle/checkstyle/pull/5063)","closed","","Nimfadora","2017-09-24T10:33:27Z","2017-09-24T13:28:56Z"
"","5334","Issue #5008: removed checks at 100% mutation for coding package","Issue #5008  Requested change from https://github.com/checkstyle/checkstyle/pull/5331#issuecomment-350275655","closed","","rnveach","2017-12-08T15:11:24Z","2017-12-08T18:44:26Z"
"","5329","Issue #5008: increased pitest of coding package","Issue #5008  Increased coverage to 98%. Will generate regression for one check that was changed drastically.","closed","","rnveach","2017-12-06T16:20:36Z","2017-12-07T03:20:58Z"
"","5331","Issue #5008: increased pitest of coding package","Issue #5008  http://rveach.no-ip.org/checkstyle/regression/pitest-reports/9/ Pitest: 1421/1443, 8 points shy of 99%  I am unable to do most of the rest of the pitest for this package without help.","closed","","rnveach","2017-12-08T00:01:38Z","2017-12-08T15:12:04Z"
"","5063","Issue #5008: kill EqualsAvoidNull mutations","Issue #5008  [report before changes](https://nimfadora.github.io/pr/com.puppycrawl.tools.checkstyle.checks.coding/index.html)  current threshold: 96%","closed","","Nimfadora","2017-09-03T11:18:32Z","2018-12-19T22:26:57Z"
"","5542","Issue #5008: increase coverage of pitest-checks-coding","Issue #5008","closed","","romani","2018-02-25T15:58:51Z","2018-02-25T19:17:17Z"
"","5016","Issue #5007: increase coverage of pitest-checks-design to 100%","Issue #5007  [report before changes](https://nimfadora.github.io/pr/com.puppycrawl.tools.checkstyle.checks.design/index.html)  coverage of pitest-checks-design was increased by 2% current threshold: 100","closed","","Nimfadora","2017-08-27T14:44:00Z","2017-08-31T00:20:45Z"
"","5335","Issue #5005: increased pitest coverage for metrics package","Issue #5005  http://rveach.no-ip.org/checkstyle/regression/pitest-reports/10/com.puppycrawl.tools.checkstyle.checks.metrics/index.html 198/202 (2 points shy of 99%, 4 of 100%)  I can't do any of the others. See main issue.","closed","","rnveach","2017-12-08T18:43:49Z","2017-12-08T21:49:11Z"
"","5135","Issue #5005: increase coverage of pitest-checks-metrics to 97%","Issue #5005  [report before changes](https://nimfadora.github.io/pr/com.puppycrawl.tools.checkstyle.checks.metrics/)  increased coverage of pitest-checks-metrics by 4% current threshold 97%","closed","","Nimfadora","2017-09-21T21:33:58Z","2017-09-22T05:51:02Z"
"","5336","Issue #5005: increased pitest coverage for metrics package to 100%","Issue #5005  100% coverage.","closed","","rnveach","2017-12-09T00:42:51Z","2017-12-10T04:32:28Z"
"","5018","Issue #5004: increase coverage of pitest-checks-imports to 96%","Issue #5004  [report before changes](https://nimfadora.github.io/pr/com.puppycrawl.tools.checkstyle.checks.imports/index.html)  coverage of pitest-checks-imports was increased by 2% current threshold: 96","closed","","Nimfadora","2017-08-28T06:54:05Z","2017-08-31T19:39:12Z"
"","5217","Issue #5003: remove ParenPad#processExpression call where it seems useless","Issue #5003   remove calls to [processExpression](https://github.com/checkstyle/checkstyle/issues/5003#issuecomment-338330949), as pitest claims ([here](https://nimfadora.github.io/pr/com.puppycrawl.tools.checkstyle.checks.whitespace/ParenPadCheck.java.html#org.pitest.mutationtest.report.html.SourceFile@4f473a20_123) and [here](https://nimfadora.github.io/pr/com.puppycrawl.tools.checkstyle.checks.whitespace/ParenPadCheck.java.html#org.pitest.mutationtest.report.html.SourceFile@4f473a20_187)) that they are useless  [regression report](https://nimfadora.github.io/diff5003-paren-pad/index.html)","closed","","Nimfadora","2017-10-22T22:00:34Z","2017-10-25T05:33:05Z"
"","5341","Issue #5003: increased pitest coverage for whitespace package to 100%","Issue #5003  Regression to come. Some proof of changes at https://github.com/checkstyle/checkstyle/issues/5003#issuecomment-350560290 .","closed","","rnveach","2017-12-10T20:37:25Z","2017-12-12T20:58:00Z"
"","5216","Issue #5003: kill mutation in ParenPadCheck#isAcceptableToken","Issue #5003  killed mutation described [here](https://github.com/checkstyle/checkstyle/issues/5003#issuecomment-326759453) and [here](https://github.com/checkstyle/checkstyle/issues/5003#issuecomment-338330949)  [mutation itself](https://nimfadora.github.io/pr/com.puppycrawl.tools.checkstyle.checks.whitespace/ParenPadCheck.java.html#org.pitest.mutationtest.report.html.SourceFile@4f473a20_209)","closed","","Nimfadora","2017-10-22T16:37:23Z","2017-10-23T00:06:49Z"
"","5006","Issue #5003: increased coverage of pitest-checks-whitespace to 98%","Issue #5003  [report before changes](https://nimfadora.github.io/pr/com.puppycrawl.tools.checkstyle.checks.whitespace/index.html)  coverage of pitest-checks-whitespace was increased by 3% current threshold: 98","closed","","Nimfadora","2017-08-25T19:28:21Z","2017-08-26T21:51:25Z"
"","5205","Issue #5003: increase coverage of pitest-checks-whitespace to 99%","Issue #5003  [report before changes](https://nimfadora.github.io/issue5003.html)  increase coverage of pitest-checks-whitespace by 1% current threshold: 99%  [regression report](https://nimfadora.github.io/diff5003/index.html)","closed","","Nimfadora","2017-10-18T18:55:45Z","2017-10-25T00:23:02Z"
"","5325","Issue #5002: added documentation for violateExecutionOnNonTightHtml","Issue #5002  See question in issue at https://github.com/checkstyle/checkstyle/issues/5002#issuecomment-349429748","closed","","rnveach","2017-12-05T20:27:40Z","2017-12-06T03:21:19Z"
"","5110","Issue #4984: Reorder fields in JavadocTokenTypes","Issue #4984 Fields in JavadocTokenTypes reordered to remove violations caused by DeclarationOrderCheck.","closed","","kazachka","2017-09-14T21:29:23Z","2017-09-15T12:25:44Z"
"","5012","Wercker Failure fix for Pull #5011","Issue #4934: Javadoc grammar is not to support string without quotes in '@see' tag. Updated 'wercker.yml' to apply a patch to pgjdbc repo which fixes one such javadoc","closed","","voidfist","2017-08-25T22:43:50Z","2017-08-27T02:18:30Z"
"","5011","Issue #4934: Enforced WS before javadoc tags' arguments","Issue #4934: Enforced WS before javadoc tags' arguments","closed","","voidfist","2017-08-25T19:47:49Z","2017-08-28T23:03:22Z"
"","5245","Issue #4916: Adding ability to force load","Issue #4916  Added ability to old style force loading of checks using forceLoad flag in Checker.","closed","","kazachka","2017-10-30T19:12:21Z","2017-11-26T02:17:18Z"
"","5326","Issue #4876: specified what checks is in ModuleReflectionUtils","Issue #4876  Used method name talked about in issue. If you can think of a better one, let me know.","closed","","rnveach","2017-12-05T20:44:06Z","2017-12-08T14:53:31Z"
"","5165","Issue #4870: Mark TranslationCheck with GlobalStatefulCheck annotation","Issue #4870  Marks TranslationCheck with `GlobalStatefulCheck` annotation. Also changes `filesToProcess` to support MT access","closed","","soon","2017-10-01T05:22:42Z","2018-07-07T05:03:51Z"
"","5192","Issue #4785: DetailNodeTreeStringPrinter#createFakeBlockComment move …","Issue #4785  Methods DetailNodeTreeStringPrinter#createFakeBlockComment and TreeWalker#createBlockCommentNode were moved to CommonUtils. Test for DetailNodeTreeStringPrinter#createFakeBlockComment also was moved to CommonUtilsTest class.","closed","","isturkin","2017-10-16T13:36:33Z","2017-10-23T07:20:44Z"
"","5322","Issue #4716: enabled intellij AbstractClassExtendsConcreteClass","Issue #4716  Turned on intellij rule and made class abstract.","closed","","rnveach","2017-12-05T14:53:35Z","2017-12-13T03:12:24Z"
"","5214","Issue #4714: remove patch from wercker.yml for hibernate-search","Issue #4714 , identified at https://github.com/checkstyle/checkstyle/pull/5194#issuecomment-338483328","closed","","romani","2017-10-22T15:12:48Z","2017-10-22T15:32:53Z"
"","5295","Issue #4701: No error for a misplaced javadoc tag","Issue #4701  No error for a misplaced javadoc tag  Regression test https://pbludov.github.io/issue-4701/JavadocMethod/","closed","","pbludov","2017-11-25T05:17:15Z","2017-12-07T03:58:40Z"
"","5174","Issue #4675: reverting some coverage to make build stable","Issue #4675 and #5141","closed","","romani","2017-10-07T14:57:58Z","2017-10-07T23:47:02Z"
"","5397","Issue #4675: fix last mutation","Issue #4675  fixed last mutation described [here](https://github.com/checkstyle/checkstyle/issues/4675#issuecomment-353892974) by removing line, as it will not lead to some false-positives or missing errors in output.","closed","","Nimfadora","2017-12-27T19:50:45Z","2017-12-27T23:37:31Z"
"","5043","Issue #4675: increase coverage of pitest-checks-misc to 100%","Issue #4675  coverage of pitest-checks-misc profile was increased by 4%  [report before changes](https://nimfadora.github.io/issue4675.html)  [regression report](https://nimfadora.github.io/diff4675/index.html)  current threshold: 100","closed","","Nimfadora","2017-09-01T12:03:24Z","2017-09-21T01:11:02Z"
"","5342","Issue #4675: increased pitest coverage for misc package","Issue #4675  @romani This is missing line coverage, not mutation coverage. Shippable isn't picking this up because it uses a different class name. You are searching for `survived` when this had a class of `uncovered`. Shippable needs to be updated. Please make the update since you are better with shell scripts. https://github.com/checkstyle/checkstyle/blob/master/shippable.yml#L55","closed","","rnveach","2017-12-10T23:47:04Z","2017-12-12T14:27:38Z"
"","5995","Issue #4625: Unite type/static import for EmptyLineSeparatorCheck","Issue #4625   Do not distinguish between type import and static import for `EmptyLineSeparatorCheck`, to properly support `ImportOrderCheck` with `option` = `inflow`","closed","","pbludov","2018-07-03T11:33:51Z","2018-07-04T03:33:34Z"
"","5545","Issue #4605: cover all lines of of utils package in pitest run","Issue #4605   just removed negation(and continue) in condition.  This issue looks like a bug in pitest.","closed","","romani","2018-02-26T01:24:26Z","2018-02-26T03:58:51Z"
"","5344","Issue #4605: increased pitest coverage for utils package","Issue #4605  Went from 91% line coverage to 96%. Went from 88% mutation to 94%.","closed","","rnveach","2017-12-11T02:19:07Z","2017-12-13T03:10:47Z"
"","5358","Issue #4605: minimized utils profile","Issue #4605","closed","","rnveach","2017-12-14T02:19:41Z","2017-12-14T12:46:31Z"
"","5198","Issue #4581: Reorganize token methods in whitespace, sizes, naming folders","Issue #4581   This PR reorganizes the token methods in `whitespace, sizes` and `naming` folders.","closed","","subkrish","2017-10-17T22:13:14Z","2017-11-04T07:01:41Z"
"","5167","Issue #4581: Reorganize token methods in GenericWhitespaceCheck","Issue #4581   This PR reorganizes the token methods in `GenericWhitespaceCheck`. After this PR is approved, similar changes will be made for other checks as well.","closed","","subkrish","2017-10-02T12:34:38Z","2017-10-10T11:27:54Z"
"","5426","Issue #4581: Reorganize token methods in remaining checks","Issue #4581  This PR reorganizes the token methods in remaining checks.","closed","","subkrish","2018-01-05T22:29:43Z","2018-01-06T05:47:04Z"
"","5262","Issue #4581: Reorganize token methods in javadoc and modifier folders and miscellaneous checks","Issue #4581  This PR reorganizes the token methods in `javadoc` and `modifier` folders and miscellaneous checks.","closed","","subkrish","2017-11-14T06:53:05Z","2017-11-14T18:15:25Z"
"","5261","Issue #4581: Reorganize token methods in coding, imports, indentation folders","Issue #4581  This PR reorganizes the token methods in `coding`, `imports`, and `indentation` folders.","closed","","subkrish","2017-11-14T05:58:35Z","2018-01-04T17:11:41Z"
"","5259","Issue #4581: Reorganize token methods in blocks, design, metrics folders","Issue #4581  This PR reorganizes the token methods in `blocks`, `design`, and `metrics` folders.","closed","","subkrish","2017-11-13T02:32:59Z","2017-11-14T02:55:54Z"
"","5459","Issue #4429: IllegalType: support arrays as types","Issue #4429 Continuation of Pull #5073  Issue solved in another way. Created some additional tests.","closed","","kazachka","2018-01-13T14:54:16Z","2018-02-04T18:58:57Z"
"","5045","Issue #4402: enforce check_survived on pitest-checks-annotation","Issue #4402","closed","","romani","2017-09-01T17:53:36Z","2017-09-01T21:12:57Z"
"","5034","Issue #4395: kill last mutation in pitest-checkstyle-utils","Issue #4395  original: `id > TOKEN_VALUE_TO_NAME.length - 1` mutated: `id > TOKEN_VALUE_TO_NAME.length + 1` fixed: `id >= TOKEN_VALUE_TO_NAME.length`  and added one more test on the lower bound of invalid token id","closed","","Nimfadora","2017-08-31T07:24:24Z","2017-08-31T13:31:31Z"
"","5032","Issue #4395: enforce check_survived by mean of temporal excludedMethods","Issue #4395","closed","","romani","2017-08-30T19:06:18Z","2017-08-31T02:08:48Z"
"","5047","Issue #4394: kill last mutation in pitest-checkstyle-api profile","Issue #4394","closed","","Nimfadora","2017-09-01T22:07:33Z","2017-09-02T13:20:50Z"
"","5031","Issue #4394: exclude missed method to enforce check_survived","Issue #4394","closed","","romani","2017-08-30T19:05:59Z","2017-08-31T01:07:27Z"
"","5030","Issue #4384: fix JavadocParagraph violation in JavadocTokenTypes","Issue #4384","closed","","Nimfadora","2017-08-30T18:23:29Z","2017-08-31T00:23:45Z"
"","5062","Issue #4294: ParenPad: handle trailing semi-colons in try-with-resources","Issue #4294: ParenPad: handle trailing semi-colons in try-with-resources","closed","","cushon","2017-09-02T23:04:54Z","2017-09-08T12:59:32Z"
"","5247","Issue #4284: clarify documentation about allowing static imports","Issue #4284   I updated the documentation to make it clear that static members have to be explicitly allowed. Do we leave it at that or will we implement a workaround for this issue?","closed","","jochenvdv","2017-11-02T11:53:36Z","2017-11-09T14:43:40Z"
"","5224","Issue #4169: Javadoc on annotation fields support","Issue #4169   Javadoc on annotation fields support","closed","","pbludov","2017-10-24T03:28:51Z","2017-10-24T05:44:45Z"
"","5252","Issue #4169: Javadoc on annotation fields support","Issue #4169  Javadoc on annotation fields support","closed","","pbludov","2017-11-08T08:03:57Z","2017-12-02T14:29:12Z"
"","5227","Issue #4169: Javadoc on annotation fields support","Issue #4169  Javadoc on annotation fields support","closed","","pbludov","2017-10-24T07:35:58Z","2017-11-11T11:35:00Z"
"","5225","Issue #4169: Javadoc on annotation fields support","Issue #4169  Javadoc on annotation fields support","closed","","pbludov","2017-10-24T03:52:12Z","2017-10-24T07:33:09Z"
"","5223","Issue #4169: Javadoc on annotation fields support","Issue #4169  Javadoc on annotation fields support","closed","","pbludov","2017-10-24T02:23:46Z","2017-10-24T04:11:03Z"
"","5219","Issue #4169: Javadoc on annotation fields support","Issue #4169  Checkstyle ignores javadoc that placed over Annotation type elements","closed","","pbludov","2017-10-23T05:58:06Z","2017-10-24T11:05:27Z"
"","5942","Issue #4100: unify non-compilable headers","Issue #4100  final update.","closed","","romani","2018-06-16T22:10:52Z","2018-06-16T23:10:05Z"
"","5939","Issue #4100: enforce OuterTypeFilenameCheck over resources","Issue #4100","closed","","romani","2018-06-16T21:07:12Z","2018-06-16T22:11:59Z"
"","5938","Issue #4100: adjust PackageDeclaration validation","Issue #4100","closed","","romani","2018-06-16T19:22:22Z","2018-06-16T21:04:27Z"
"","5936","Issue #4100: enable PackageDeclarationCheck on resources","Issue #4100","closed","","romani","2018-06-16T05:54:31Z","2018-06-16T17:41:19Z"
"","5947","Issue #4058: xdocs update for right curly check","Issue #4058: Updated xdocs to denote that RightCurlyCheck does not process right curly brace of expression blocks.","closed","","voidfist","2018-06-18T23:07:44Z","2018-06-19T04:31:19Z"
"","5080","Issue #3891: reorganized CheckerTest inputs","Issue #3891   The main folder is starting to be emptied out https://github.com/rnveach/checkstyle/tree/issue_3891_10/src/test/resources/com/puppycrawl/tools/checkstyle .  `InputClearDetailAstLazyLoadCache` was renamed, not deleted.","closed","","rnveach","2017-09-06T14:54:36Z","2017-09-07T04:27:17Z"
"","5099","Issue #3891: reorganized NewlineAtEndOfFileCheckTest inputs","Issue #3891   Organized files in the directory. https://github.com/rnveach/checkstyle/tree/issue_3891_16/src/test/resources/com/puppycrawl/tools/checkstyle/checks/misc/newlineatendoffile","closed","","rnveach","2017-09-09T00:34:37Z","2017-09-12T12:09:35Z"
"","5053","Issue #3891: reorganized xpath package inputs","Issue #3891   No inputs in main directory. https://github.com/rnveach/checkstyle/tree/issue_3891_6/src/test/resources/com/puppycrawl/tools/checkstyle/xpath  All deleted files were renamed and had their package change.  @romani Please note import change in `RootNodeTest` and how our checks don't complain either way. Eclipse made the change when I re-organized imports.","closed","","rnveach","2017-09-02T00:29:06Z","2017-09-03T15:16:07Z"
"","5049","Issue #3891: reorganized doclet package inputs","Issue #3891   No inputs in main directory. https://github.com/rnveach/checkstyle/tree/issue_3891_2/src/test/resources/com/puppycrawl/tools/checkstyle/doclets  Simple package change.","closed","","rnveach","2017-09-01T23:01:18Z","2017-09-02T13:47:17Z"
"","5048","Issue #3891: re-organized api package inputs","Issue #3891   No inputs in main directory. https://github.com/rnveach/checkstyle/tree/issue_3891_1/src/test/resources/com/puppycrawl/tools/checkstyle/api  Also rewrote tests to use new test support.  `InputClearDetailAstLazyLoadCache.java` is a renamed file. Other new files are copied from other packages.","closed","","rnveach","2017-09-01T22:50:57Z","2017-09-02T23:03:18Z"
"","5096","Issue #3891: reorganized AllChecksTest inputs","Issue #3891   Main folder is empty https://github.com/rnveach/checkstyle/tree/issue_3891_13/src/test/resources/com/puppycrawl/tools/checkstyle/internal  2 deletes were moving the file and extending their package.","closed","","rnveach","2017-09-08T18:10:28Z","2017-09-12T12:09:22Z"
"","5095","Issue #3891: reorganized JavadocDetailNodeParserTest inputs","Issue #3891   Main directory is now completely empty https://github.com/rnveach/checkstyle/tree/issue_3891_12/src/test/resources/com/puppycrawl/tools/checkstyle  Renamed `Output` files to `Expected` as agreed upon.","closed","","rnveach","2017-09-08T14:39:12Z","2017-09-09T19:19:52Z"
"","5097","Issue #3891: reorganized astprinter package inputs","Issue #3891   `astprinter` package is completely gone and split between `asttreestringprinter` and `detailnodetreestringprinter`.  Because of renaming some classes, I also had to modify the expected outputs. I didn't change the packages because it would cause even more changes. This can be done at another time.","closed","","rnveach","2017-09-08T19:07:49Z","2017-09-10T22:30:10Z"
"","5137","Issue #3891: created a UT to organize test inputs","Issue #3891  This should be the final PR for this issue.","closed","","rnveach","2017-09-22T22:05:45Z","2017-09-23T14:06:42Z"
"","5084","Issue #3891: reorganized TreeWalkerTest inputs","Issue #3891  The main directory is almost empty https://github.com/rnveach/checkstyle/tree/issue_3891_11/src/test/resources/com/puppycrawl/tools/checkstyle .  `import-control_complete.xml` was removed because it wasn't used. `InputMain.java` wasn't deleted but renamed.","closed","","rnveach","2017-09-07T04:30:15Z","2017-09-08T12:56:45Z"
"","5052","Issue #3891: added test support for CheckUtilsTest","Issue #3891  Simple change for the utils package. I didn't see anything else wrong.","closed","","rnveach","2017-09-02T00:15:37Z","2017-09-02T14:20:03Z"
"","5120","Issue #3891: removed inputs out of non-existent misc package","Issue #3891  Removed misc folder and moved all sub-folders one level up.","closed","","rnveach","2017-09-17T15:55:59Z","2017-09-21T02:03:24Z"
"","5098","Issue #3891: reorganized remaining inputs","Issue #3891  Remaining inputs that the new UT picked up and flagged.  `inputs` directory is now a place where we can put files that can't be renamed. If left in the normal directories, the UT will flag them.","closed","","rnveach","2017-09-09T00:03:22Z","2017-09-10T16:46:57Z"
"","5054","Issue #3891: reorganized filefilters package inputs","Issue #3891  No inputs in main directory. https://github.com/rnveach/checkstyle/tree/issue_3891_7/src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/filefilters","closed","","rnveach","2017-09-02T00:39:47Z","2017-09-02T13:54:30Z"
"","5051","Issue #3891: reorganized gui package inputs","Issue #3891  No inputs in main directory. https://github.com/rnveach/checkstyle/tree/issue_3891_4/src/test/resources/com/puppycrawl/tools/checkstyle/gui  `MainFrameModelTest` need to be module support to gain access to the `non-compilable` folder.  Note: I can't add packages to the inputs because I would need to change atlot of test code as it is all position oriented. This can be done later.","closed","","rnveach","2017-09-02T00:07:03Z","2017-09-02T13:47:53Z"
"","5050","Issue #3891: reorganized filters package inputs","Issue #3891  No inputs in main directory. https://github.com/rnveach/checkstyle/tree/issue_3891_3/src/test/resources/com/puppycrawl/tools/checkstyle/filters  Please take extra look at code like : >              ""http://checkstyle.sourceforge.net/files/suppressions_none.xml"", >             ""https://raw.githubusercontent.com/checkstyle/checkstyle/master/src/site/resources/"" >               + ""files/suppressions_none.xml"",  File was renamed. Will this affect `checkstyle.sourceforge.net` and need to be renamed too? We shouldn't be relying on these type of tests as stuff needs to change in PR, like file names and contents. So check may have weird results in PR and once merged.","closed","","rnveach","2017-09-01T23:43:17Z","2017-09-04T01:25:08Z"
"","5056","Issue #3891: reorganized PropertyCacheFileTest inputs","Issue #3891  All files were renamed. https://github.com/rnveach/checkstyle/tree/issue_3891_9/src/test/resources/com/puppycrawl/tools/checkstyle/propertycachefile","closed","","rnveach","2017-09-02T01:47:17Z","2017-09-02T13:54:21Z"
"","5055","Issue #3891: reorganized ConfigurationLoaderTest inputs","Issue #3891  All files were renamed. https://github.com/rnveach/checkstyle/tree/issue_3891_8/src/test/resources/com/puppycrawl/tools/checkstyle/configurationloader  I don't know, but `git` re-arranged InputConfigurationLoaderExternalEntity.xml and InputConfigurationLoaderExternalEntitySubDir.xml making it look like a rename and a change, but it was just a change. The files are still valid as far as I can see.","closed","","rnveach","2017-09-02T01:31:39Z","2017-09-02T13:54:24Z"
"","5039","doc: remove section about a resolved API issue","Issue #3810  is fixed, so reference from web documentation is not required.","closed","","Vladlis","2017-08-31T21:22:43Z","2017-09-04T10:30:24Z"
"","5619","Issue #3808: Check indentation of this() and super()","Issue #3808  A call to `this(...)` and `super(...)` was ignored by the indentation check due to the AST incompatibility ```     |      |--SUPER_CTOR_CALL -> super [3:8]     |      |  |--LPAREN -> ( [3:13] ``` versus ```     |   --EXPR -> [7:8]     |      |  --METHOD_CALL -> ( [7:13]     |      |      |--IDENT -> method_name [7:8] ``` and missing bindings in the `BlockParentHandler` and the `HandlerFactory`.","closed","","pbludov","2018-03-18T02:22:54Z","2018-03-22T06:29:57Z"
"","5775","Issue #3807: branch validation","Issue #3807","closed","","romani","2018-05-04T22:58:37Z","2018-05-05T05:57:09Z"
"","5550","Issue #3708: cover all lines for pitest run over api","Issue #3708","closed","","romani","2018-02-26T05:05:31Z","2018-02-26T13:16:39Z"
"","5548","Issue #3708: cover all lines for pitest run over api","Issue #3708","closed","","romani","2018-02-26T02:16:19Z","2018-02-28T03:09:42Z"
"","5100","Issue #3708: introduction of check_survived for coding, blocks, imports, whitespace profiles to avoid extra leaks","Issue #3708","closed","","romani","2017-09-09T13:56:37Z","2017-09-09T18:48:36Z"
"","5014","Issue #3542: refactored check converters outside of AutomaticBean","Issue #3542","closed","","rnveach","2017-08-26T20:18:25Z","2019-10-03T11:23:20Z"
"","5641","Issue #3492: add ability to control imports in certain classes","Issue #3492  ImportControl -> AbstractImportControl with original code for abstract methods being placed inside PkgImportControl. ClassImportControl is similar to PkgImportControl except there are no children and it is based on the class name and not the package. It must be declared next to other package definitions and not be mixed in with the current allow/disallow list just like packages. Packages and classes have the same priority. If they both match, then whichever one written in the XML file first will be used.  Class name is based on the first class found in the file. Other class names in the same file will be ignored.","closed","","rnveach","2018-03-23T19:36:57Z","2018-04-21T01:45:16Z"
"","5774","Issue #3484: removed instances of guava immutables","Issue #3484  Removed first batch of guava.","closed","","rnveach","2018-05-04T19:51:29Z","2018-05-08T03:42:56Z"
"","5324","Issue #3455: removed guava from api code","Issue #3455  An additional wercker commit was added to disable sevntu to pass CI. It must be re-enabled after checkstyle is released with this change and sevntu is released after using the new checkstyle version.  @romani This issue might not be correctly identified in the import file. This issue is titled only for `api` package and copies allowances from `api` package, but there are other areas in the import file with this same issue number that is not `api` related. https://github.com/checkstyle/checkstyle/blob/5cdbb191a17c65c2956b35d71513e9b59b6d2166/config/import-control.xml#L51 https://github.com/checkstyle/checkstyle/blob/5cdbb191a17c65c2956b35d71513e9b59b6d2166/config/import-control.xml#L67 https://github.com/checkstyle/checkstyle/blob/5cdbb191a17c65c2956b35d71513e9b59b6d2166/config/import-control.xml#L80 https://github.com/checkstyle/checkstyle/blob/5cdbb191a17c65c2956b35d71513e9b59b6d2166/config/import-control.xml#L114 https://github.com/checkstyle/checkstyle/blob/5cdbb191a17c65c2956b35d71513e9b59b6d2166/config/import-control.xml#L129 https://github.com/checkstyle/checkstyle/blob/5cdbb191a17c65c2956b35d71513e9b59b6d2166/config/import-control.xml#L140  If these are for this issue, please update Issue. Otherwise, please point me to the issue these chanegs are suppose to be for.","closed","","rnveach","2017-12-05T16:07:43Z","2017-12-31T16:27:33Z"
"","5046","Issue #3453: UnusedImportsCheck: handle qualified names in javadoc","Issue #3453: UnusedImportsCheck: handle qualified names in javadoc","closed","","cushon","2017-09-01T21:56:06Z","2017-09-02T16:32:21Z"
"","5101","Issue #3332: Added 'optgroup' HTML tag","Issue #3332: Added 'optgroup' HTML tag","closed","","voidfist","2017-09-10T18:39:28Z","2018-06-02T18:18:23Z"
"","5435","Issue #3311: Updated Documentation","Issue #3311: Updated Documentation","closed","","voidfist","2018-01-07T03:02:57Z","2018-01-28T04:25:39Z"
"","5076","Issue #3300: fixed ERROR whitespace after annotation","Issue #3300 fixed","closed","","sergileon","2017-09-05T15:27:08Z","2017-09-12T21:33:11Z"
"","5402","Issue #3254: UT to verify all property types and values in XDocs","Issue #3254  Some field names were changed to align with their setter names. Some field types were changed to align with their uses.  All xdoc updates are result of new validation.","closed","","rnveach","2017-12-29T04:22:29Z","2018-01-04T01:30:50Z"
"","5323","Issue #2883: removed cache from treewalker","Issue #2883  Re-testing CI if this method can be removed.","closed","","rnveach","2017-12-05T15:01:49Z","2017-12-05T16:47:03Z"
"","5236","Issue #2804: allow suppression by message","Issue #2804  Added support to suppress violations by message.  Some other small changes are you can suppression message by itself and don't need to specify message/check.  `CommonUtils.createPattern` was removed from `SuppressElement` to make all regular expressions follow the same pattern and produce the same exception.","closed","","rnveach","2017-10-26T00:13:02Z","2017-12-10T16:03:36Z"
"","5913","Issue #2726: add explanation of metadata tag in checkstyle config","Issue #2726   ![image](https://user-images.githubusercontent.com/812984/41273047-ac83f1a0-6dcc-11e8-8884-58d90dfa8e23.png)  Or it might be better to do example links like  https://github.com/search?q=path%3Aconfig+filename%3Acheckstyle_checks.xml+repo%3Acheckstyle%2Fcheckstyle+Checker https://github.com/search?q=path%3Asrc%2Fmain%2Fresources+filename%3Agoogle_checks.xml+repo%3Acheckstyle%2Fcheckstyle+Checker","closed","","romani","2018-06-12T06:10:52Z","2018-06-12T14:24:40Z"
"","5915","Issue #2726: add explanation of metadata tag in checkstyle config","Issue #2726  continuation of #5913","closed","","romani","2018-06-12T14:24:05Z","2018-06-12T21:09:45Z"
"","5017","Issue #2600: improved some items","Issue #2600  > Extra quotes have to be removed, see my last comment in PR.  Looks like, removed all of them  > there should be: > ECJ_JAR=""ecj-4.7.jar"" > ECJ_MAVEN_VERSION=""R-4.7-201706120950""  done  > build is failed but no details are printed.  Done. But it was conflicting with `-e` flag.   > Please do PR(not for merge)   Will do, after this one is merged","closed","","Nimfadora","2017-08-27T14:58:52Z","2017-08-31T19:48:59Z"
"","5041","[WIP]: ensure build fails on eclipse violation","Issue #2600","closed","","Nimfadora","2017-08-31T23:00:06Z","2017-09-02T17:40:34Z"
"","5302","[API] Retrieve all the checks?","Is there any way to get all the possible checks programmatically?","closed","","rtfpessoa","2017-11-27T18:14:13Z","2017-11-28T13:29:45Z"
"","5176","ImportOrder: adjacent static import groups ones became impossible in 8.3","In Version 8.3 checkstyle start to enforce no blank lines within what it considers an import group. [ImportOrder](http://checkstyle.sourceforge.net/config_imports.html#ImportOrder)  In a project, we have a setup where static imports from a group are considered a group of its own, separated by a blank line. In terms of a an Eclipse-Importorder file it looks like this:      2=javax     1=\#java     0=java  As far as I understand the documentation and code in checkstyle, this means I cannot make checkstyle accept this kind of import order anymore. Previously 8.3 will only let me have static imports without a blank line separating them from their non-static counterparts or all of them together in a group at the very top or bottom.  Example import order that used to be OK but is not anymore:  ``` ➜  cat config.xml                                                                                         ➜  cat InputImportOrderGapBetweenStaticGroups.java import static java.lang.Math.abs; import static java.lang.Math.cos; // Attention: gap below  import static javax.xml.transform.TransformerFactory.newInstance;  public class InputImportOrderGapBetweenStaticGroups { }  # Error about extra separation between import groups ➜  java -jar checkstyle-8.3-all.jar -c config.xml InputImportOrderGapBetweenStaticGroups.java Starting audit... [ERROR] /var/tmp/InputImportOrderGapBetweenStaticGroups.java:4: Extra separation in import group before 'javax.xml.transform.TransformerFactory.newInstance' [ImportOrder] Audit done. Checkstyle ends with 1 errors.  # compare with Checkstyle 8.2: No error with separation ➜  java -jar checkstyle-8.2-all.jar -c config.xml InputImportOrderGapBetweenStaticGroups.java Starting audit... Audit done. ```  After removing separation: ERROR about missing separation. ``` ➜  cat InputImportOrderNoGapBetweenStaticGroups.java import static java.lang.Math.abs; import static java.lang.Math.cos; // no gap below import static javax.xml.transform.TransformerFactory.newInstance;  public class InputImportOrderNoGapBetweenStaticGroups { }  ➜  java -jar checkstyle-8.3-all.jar -c config.xml InputImportOrderNoGapBetweenStaticGroups.java Starting audit... [ERROR] /var/tmp/InputImportOrderNoGapBetweenStaticGroups.java:3: 'javax.xml.transform.TransformerFactory.newInstance' should be separated from previous imports. [ImportOrder] Audit done. Checkstyle ends with 1 errors.  ➜  java -jar checkstyle-8.2-all.jar -c config.xml InputImportOrderNoGapBetweenStaticGroups.java Starting audit... [ERROR] /var/tmp/InputImportOrderNoGapBetweenStaticGroups.java:3: 'javax.xml.transform.TransformerFactory.newInstance' should be separated from previous imports. [ImportOrder] Audit done. Checkstyle ends with 1 errors. ```   I am not able to have two static import groups following each other without non-static imports between them in 8.3.  This used to work up to 8.2 using the same configuration.  This behaviour seems to have been introduced by a736d191a9d240a3a8b3a90b5651eb98b3af7d18, the fix for #5065. The suggested test above runs OK without it: https://github.com/ssp/checkstyle/commits/static-imports-between  My impression is that checkstyle unintentionally allowed this kind of import grouping because the of issue fixed by that patch and now cannot be configured anymore to allow it. Ideally we’d have both the fix of that patch and the interspersed static import groups.","closed","miscellaneous,","ssp","2017-10-08T10:27:42Z","2018-03-18T14:40:36Z"
"","5885","ClassMemberImpliedModifier: New Check to demand all modifiers to be explicit in class members","in addition to #5899 , discussed at #5783, thanks a lot @jodastephen for idea and help in discussion and @rnveach  for corrections.  `violateImpliedStaticOnNestedInterface` - nested interfaces should be marked with static modifier `violateImpliedStaticOnNestedEnum` - nested enum should be marked as static.  Given this class, static is implied and redundant (as per JLS): ``` public class Foo {     public static enum Light { RED, YELLOW, GREEN };     public static interface Marker {}; } ```  @jodastephen coding standards do not require static in the code above (ie. for nested types) but it is perfectly possible that someone else might have coding standards that do.  ```                  ```","closed","new module,","romani","2018-06-03T22:30:47Z","2018-12-09T18:20:22Z"
"","5992","config: update distelli execution to run maven in non-interactive mode","in (batch) mode to reduce amount of download logs  right now it is printing following: ``` Downloaded: https://repo.maven.apache.org/maven2/commons-digester/commons-digester/1.8.1/commons-digester-1.8.1.jar (143 KB at 278.7 KB/sec)     182/182 KB   308/328 KB   132/145 KB    182/182 KB   307/328 KB   132/145 KB    182/182 KB   308/328 KB   136/145 KB    182/182 KB   308/328 KB   140/145 KB    182/182 KB   311/328 KB   140/145 KB    182/182 KB   311/328 KB   144/145 KB    182/182 KB   311/328 KB   145/145 KB    182/182 KB   312/328 KB   145/145 KB    182/182 KB   315/328 KB   145/145 KB    182/182 KB   316/328 KB   145/145 KB    182/182 KB   319/328 KB   145/145 KB    182/182 KB   320/328 KB   145/145 KB    182/182 KB   323/328 KB   145/145 KB    182/182 KB   325/328 KB   145/145 KB    182/182 KB   328/328 KB   145/145 KB   ```  but should do just: `Downloaded: https://repo.maven.apache.org/maven2/commons-digester/commons-digester/1.8.1/commons-digester-1.8.1.jar (143 KB at 278.7 KB/sec)`","closed","","romani","2018-07-02T03:08:35Z","2018-07-02T03:15:57Z"
"","5894","Remove lambda support from ParameterName","if #5893 (new Check - LambdaParameterName) is done. We should remove lambda support from ParameterName to not let them overlap. We have problems with support of lambda in ParameterName , see https://github.com/checkstyle/checkstyle/pull/5768#issuecomment-395269426 for more details.  There should be update in google style ITs.","closed","approved,","romani","2018-06-07T13:56:15Z","2018-07-23T19:11:21Z"
"","5327","AnnotationUtility.getAnnotation fails when there is an comment in the annotation","Identified when working on https://github.com/checkstyle/checkstyle/issues/4983 , example code: ````     /**      * @Deprecated this is not the same      */     @Deprecated     protected InputMissingDeprecatedBadJavadoc() {      } ````  printing the AST shows the following: ````     |--CTOR_DEF -> CTOR_DEF [5:4]     |  |--MODIFIERS -> MODIFIERS [5:4]     |  |  |--ANNOTATION -> ANNOTATION [5:4]     |  |  |  |--BLOCK_COMMENT_BEGIN -> /* [2:4]     |  |  |  |  |--COMMENT_CONTENT -> *\n    * @Deprecated this is not the same\n      [2:6]     |  |  |  |  `--BLOCK_COMMENT_END -> */ [4:5]     |  |  |  |--AT -> @ [5:4]     |  |  |  `--IDENT -> Deprecated [5:5]     |  |  `--LITERAL_PROTECTED -> protected [6:4] ````  The first child of the annotation is the `BLOCK_COMMENT_BEGIN` but [this messes up the utility as it is thinking the first child is the `AT` token](https://github.com/checkstyle/checkstyle/blob/f0ed29b5cfef6adcec791cfdc236a5b850b685ee/src/main/java/com/puppycrawl/tools/checkstyle/utils/AnnotationUtility.java#L158). This causes the utility to not find the `@Deprecated` annotation and return it doesn't exist.  This is not an issue with `MissingDeprecatedCheck` right now because it is not comment aware, but it is breaking the rules by getting the comment/javadoc of what it is examining. The rewrite is turning it into a comment aware check which is why it is showing up now.","closed","approved,","rnveach","2017-12-06T00:12:40Z","2017-12-08T14:20:18Z"
"","5190","Add a unit test to ensure that all checks are marked with MT annotation","Identified here: https://github.com/checkstyle/checkstyle/pull/4892#issuecomment-333561216  There should be a unit test, which ensures that all `FileSetCheck` and `AbstractCheck` implementations are marked with appropriate MT annotation: `StatelessCheck`, `FileStatefulCheck` or `GlobalStatefulCheck`","closed","","soon","2017-10-16T04:37:18Z","2019-04-06T21:30:17Z"
"","5849","config: turned on throws validation for JavadocMethod","Identified by IntelliJ locally.","closed","","rnveach","2018-05-26T21:14:50Z","2018-05-27T00:29:17Z"
"","5897","Verify all modules are listed in contribution no exception configurations","Identified at https://github.com/sevntu-checkstyle/sevntu.checkstyle/issues/691 ,  `checks-nonjavadoc-error.xml` and `checks-only-javadoc-error.xml` in contribution should be verified that they contain all modules for no exception testing. No exception testing in wercker will verify XML is defined correctly, but nothing is ensuring it is populated with all modules.  > we have missed one already - AnnotationOnSameLine , that was added at 8.2 version.  Code should be similar to what was added in sevntu.","closed","miscellaneous,","rnveach","2018-06-09T20:14:02Z","2019-03-17T05:48:24Z"
"","5895","CLI XML output file: file stops dead when an execption occurs","Identified at https://github.com/sevntu-checkstyle/sevntu.checkstyle/issues/572 during regression on Linux OS,  ```` Running PR only with PR branch 'master' and config '/var/www/html/reports/d3447adb120d811f68b4421585847fbd' ./sevntu_launch_diff.sh master -config /var/www/html/reports/d3447adb120d811f68b4421585847fbd -patchOnly .... Running Checkstyle with config /var/www/html/reports/d3447adb120d811f68b4421585847fbd java -Xmx3024m -jar /home/ricky/opensource/checkstyle/target/checkstyle-8.10.1-all.jar -c /var/www/html/reports/d3447adb120d811f68b4421585847fbd -f xml -o /home/ricky/regression_reports/savepull/openjdk10/results.xml /home/ricky/regression_repositories/openjdk10 /home/ricky/regression_repositories/openjdk10/test/javax/xml/bind/jxc/8073519/InputWithError.java:28:10: unexpected token: compile /home/ricky/regression_repositories/openjdk10/test/tools/pack200/typeannos/TypeUseTarget.java:39:74: unexpected token: ... /home/ricky/regression_repositories/openjdk10/test/tools/pack200/typeannos/TypeUseTarget.java:40:8: unexpected token: Object /home/ricky/regression_repositories/openjdk10/test/tools/pack200/typeannos/TypeUseTarget.java:40:26: unexpected token: String /home/ricky/regression_repositories/openjdk10/test/tools/pack200/typeannos/TypeUseTarget.java:40:36: unexpected token: [ Exception in thread ""main"" java.lang.Error: Error was thrown while processing /home/ricky/regression_repositories/openjdk10/src/jdk.httpserver/share/classes/sun/net/httpserver/SSLStreams.java     at com.puppycrawl.tools.checkstyle.Checker.processFiles(Checker.java:299)     at com.puppycrawl.tools.checkstyle.Checker.process(Checker.java:213)     at com.puppycrawl.tools.checkstyle.Main.runCheckstyle(Main.java:554)     at com.puppycrawl.tools.checkstyle.Main.runCli(Main.java:465)     at com.puppycrawl.tools.checkstyle.Main.main(Main.java:219) Caused by: java.lang.OutOfMemoryError: Java heap space     at java.util.LinkedList.linkLast(LinkedList.java:142)     at java.util.LinkedList.add(LinkedList.java:338)     at com.github.sevntu.checkstyle.checks.coding.OverridableMethodInConstructorCheck.getBaseClasses(OverridableMethodInConstructorCheck.java:837)     at com.github.sevntu.checkstyle.checks.coding.OverridableMethodInConstructorCheck.getMethodDef(OverridableMethodInConstructorCheck.java:502)     at com.github.sevntu.checkstyle.checks.coding.OverridableMethodInConstructorCheck.getOverridables(OverridableMethodInConstructorCheck.java:353)     at com.github.sevntu.checkstyle.checks.coding.OverridableMethodInConstructorCheck.logWarnings(OverridableMethodInConstructorCheck.java:318)     at com.github.sevntu.checkstyle.checks.coding.OverridableMethodInConstructorCheck.visitToken(OverridableMethodInConstructorCheck.java:278)     at com.puppycrawl.tools.checkstyle.TreeWalker.notifyVisit(TreeWalker.java:389)     at com.puppycrawl.tools.checkstyle.TreeWalker.processIter(TreeWalker.java:500)     at com.puppycrawl.tools.checkstyle.TreeWalker.walk(TreeWalker.java:329)     at com.puppycrawl.tools.checkstyle.TreeWalker.processFiltered(TreeWalker.java:182)     at com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck.process(AbstractFileSetCheck.java:81)     at com.puppycrawl.tools.checkstyle.Checker.processFile(Checker.java:316)     at com.puppycrawl.tools.checkstyle.Checker.processFiles(Checker.java:286)     ... 4 more Running Checkstyle - finished .... Starting all Reports java -jar /home/ricky/opensource/contribution/patch-diff-report-tool/target/patch-diff-report-tool-0.1-SNAPSHOT-jar-with-dependencies.jar --patchReport /home/ricky/regression_reports/savepull/openjdk10/results.xml --output /home/ricky/regression_reports/diff/openjdk10 --patchConfig /var/www/html/reports/d3447adb120d811f68b4421585847fbd --refFiles /home/ricky/regression_repositories/openjdk10 patch-diff-report-tool execution started. XML parsing is started. Exception in thread ""main"" javax.xml.stream.XMLStreamException: ParseError at [row,col]:[131475,74] Message: XML document structures must start and end within the same entity.     at com.sun.org.apache.xerces.internal.impl.XMLStreamReaderImpl.next(XMLStreamReaderImpl.java:604)     at com.sun.xml.internal.stream.XMLEventReaderImpl.nextEvent(XMLEventReaderImpl.java:83)     at com.github.checkstyle.parser.CheckstyleReportsParser.parseXmlPortion(CheckstyleReportsParser.java:160)     at com.github.checkstyle.parser.CheckstyleReportsParser.parse(CheckstyleReportsParser.java:133)     at com.github.checkstyle.Main.main(Main.java:163) patch-diff-report-tool failed on openjdk10 Regression Failed! ````  ```` ricky@ubuntu17:~/opensource/regression_reports/savepull/openjdk10$ ll total 9320 drwxr-xr-x  2 www-data www-data    4096 Jun  8 00:49 ./ drwxr-xr-x 31 www-data www-data    4096 Jun  8 06:32 ../ -rw-r--r--  1 www-data www-data 9535488 Jun  8 00:52 results.xml ````  Contents of report for `/home/ricky/regression_reports/savepull/openjdk10/results.xml` at line 131474 is: ````","open","approved,","rnveach","2018-06-08T11:54:40Z","2022-06-02T02:45:18Z"
"","5104","Checkstyle tests should be named after the class they test and extra validations/helpers should be in a special package","Identified at https://github.com/checkstyle/regression-tool/pull/85#issuecomment-325333038 ,  To be able to pull in properties from tests to be used in regression on a module, we need a clear connection between the test and the production code. This is usually defined by naming the test class after the production class and having them in the same package.  Some tests break this rule and we should rename/move them so they are in alignment and there is a clear connection between the 2 classes. Even if they aren't specifically modules, it will help ensure our tests match up to something. Eventually this should also help with pitest as everything will match up.  A UT should be created to make sure we don't break this in the future.  Examples of this being broken: ```` com\puppycrawl\tools\checkstyle\checks\FileSetCheckLifecycleTest.java com\puppycrawl\tools\checkstyle\checks\imports\ImportControlRegExpInPkgTest.java com\puppycrawl\tools\checkstyle\checks\imports\ImportControlRegExpTest.java com\puppycrawl\tools\checkstyle\filefilters\ExclusionBeforeExecutionFileFilterTest.java com\puppycrawl\tools\checkstyle\filters\BeforeExecutionFileFilterSetTest.java com\puppycrawl\tools\checkstyle\filters\FilterSetTest.java com\puppycrawl\tools\checkstyle\xpath\XpathMapperTest.java ````  `ExclusionBeforeExecutionFileFilterTest` is a UT for `BeforeExecutionExclusionFileFilter`. `BeforeExecutionFileFilterSetTest` is in `api` not `filters`. `FilterSetTest` is in `api` and not `filters`. `ImportControlRegExpInPkgTest`, and `ImportControlRegExpTest` are UTs for `ImportControl`. `XpathMapperTest` is more a UT for `RootNode` and all `Xpath` functionality really.  This is a list of tests that should be in a special package (probably `internal`) for helper files, and such: ```` com\puppycrawl\tools\checkstyle\AuditEventUtFormatter.java com\puppycrawl\tools\checkstyle\BriefUtLogger.java com\puppycrawl\tools\checkstyle\CheckerStub.java com\puppycrawl\tools\checkstyle\CloseAndFlushTestByteArrayOutputStream.java com\puppycrawl\tools\checkstyle\DebugAuditAdapter.java com\puppycrawl\tools\checkstyle\DebugFilter.java com\puppycrawl\tools\checkstyle\TestBeforeExecutionFileFilter.java com\puppycrawl\tools\checkstyle\TestLoggingReporter.java com\puppycrawl\tools\checkstyle\TestRootModuleChecker.java ````","closed","miscellaneous,","rnveach","2017-09-12T17:37:25Z","2017-10-26T02:52:43Z"
"","5156","Checkstyle UTs don't validate all properties","Identified at https://github.com/checkstyle/regression-tool/pull/85#issuecomment-325333038 ,  In our UTs, we should validate every property to verify it is working correctly no matter how user configures it. Mentioned PR, found that some properties aren't being validated in our UTs. Regression needs standard values for all properties so it knows all the possible values it can use for the configurations it creates.  Example: https://github.com/checkstyle/checkstyle/blob/master/src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/ConstantNameCheckTest.java , no test for property `applyToPrivate`  We need to make a list of all properties that aren't being defined in our UTs and add new tests for them. We should also make sure all properties are using all possible values (true/false, enumeration, etc..).","open","approved,","rnveach","2017-09-28T13:47:55Z","2019-09-30T22:07:18Z"
"","5157","Checkstyle UTs shouldn't create custom configuration methods","Identified at https://github.com/checkstyle/regression-tool/pull/85#issuecomment-325333038 ,  In our UTs we should use standard configuration methods that are defined in our abstract support classes. Regression tools needs consistency in order to be able to pull information from the UTs and grab property values.  Example: FileTabCharacterCheck: createConfig https://github.com/checkstyle/checkstyle/blob/acdbc55974c3fd6b6e532a29e443bce60016791f/src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/FileTabCharacterCheckTest.java#L96  We need to find and review these cases and see if they can be replaced with our normal configuration methods or if we need to extend abstract support for more complex cases.","closed","miscellaneous,","rnveach","2017-09-28T13:55:55Z","2017-11-24T15:39:50Z"
"","5896","minor: fix empty tag in sponsoring.xml","Identified at https://github.com/checkstyle/checkstyle/pull/5869#issuecomment-395794850","closed","","rnveach","2018-06-08T15:24:23Z","2018-06-08T15:45:31Z"
"","5779","UnnecessaryParentheses: no violation on parenthesis in if statement between || and &&","Identified at https://github.com/checkstyle/checkstyle/pull/5778#discussion_r186302647 ,  ```` $ cat TestClass.java public class TestClass {     void method(String sectionName) {         if (""Content"".equals(sectionName) || ""Overview"".equals(sectionName)                 // suppression list                 || (!""AbbreviationAsWordInName"".equals(sectionName)                         && !""AbstractClassName"".equals(sectionName)                         )) {              continue;          }     } }  $ cat TestConfig.xml                        $ java -jar checkstyle-8.10-all.jar -c TestConfig.xml TestClass.java Starting audit... Audit done. ````  Every other CI complains about parenthesis at line 5 except our check. There should be a violation there.","closed","new feature,","rnveach","2018-05-06T23:10:14Z","2021-04-01T14:24:32Z"
"","5711","JavadocTagContinuationIndentation: no violation with block tag starting the line","Identified at https://github.com/checkstyle/checkstyle/pull/5710#discussion_r180848374  ```` $ cat TestClass.java public class TestClass {     /**      * Returns the value represented by the specified string of the specified      * type. Returns 0 for types other than float, double, int, and long.      * @param text the string to be parsed.      * @param type the token type of the text. Should be a constant of      * {@link TokenTypes}.      * @return the double value represented by the string argument.      */     public static double parseDouble(String text, int type) {         return 0;     } }  $ cat TestConfig.xml                            $ java -jar checkstyle-8.9-all.jar -c TestConfig.xml TestClass.java Starting audit... Audit done. ````  I am expecting a violation at line 7 since it is a continuation of the `@param` tag and thus should be +4 indented. If any text is placed before `{@link` then a violation appears.  it would be good to provide example of Check work in xdoc - http://checkstyle.sourceforge.net/config_javadoc.html#JavadocTagContinuationIndentation","closed","approved,","rnveach","2018-04-11T18:15:47Z","2021-02-21T15:54:46Z"
"","5672","Missing Google Style 4.2 Block Indentation?","Identified at https://github.com/checkstyle/checkstyle/pull/5669  We have the package `com.google.checkstyle.test.chapter4formatting.rule42blockindentation`.  I see no block indentation for rule 4.2 on google's style. http://checkstyle.sourceforge.net/google_style.html#a4.2 Current 4.2 is Indentation and test link point to 4.8.4.1. There is no 4.2 tests under https://github.com/checkstyle/checkstyle/tree/master/src/it/java/com/google/checkstyle/test/chapter4formatting/ .","open","","rnveach","2018-03-31T03:06:14Z","2018-03-31T03:06:14Z"
"","5677","refactor PackageObjectFactoryTest.testCreateModuleWithNonExistName","identified at https://github.com/checkstyle/checkstyle/pull/5637#discussion_r178369217  https://github.com/checkstyle/checkstyle/blob/master/src/test/java/com/puppycrawl/tools/checkstyle/PackageObjectFactoryTest.java#L154  ```     @Test     public void testCreateModuleWithNonExistName() {         testCreateModuleWithNonExistName(""NonExistClassOne"");         testCreateModuleWithNonExistName(""NonExistClassTwo"");     }      private void testCreateModuleWithNonExistName(String name) {         try {             factory.createModule(name);             fail(""Exception is expected"");         }         catch (CheckstyleException ex) {             final String attemptedNames = BASE_PACKAGE + PACKAGE_SEPARATOR + name + STRING_SEPARATOR                     + name + CHECK_SUFFIX + STRING_SEPARATOR                     + BASE_PACKAGE + PACKAGE_SEPARATOR + name + CHECK_SUFFIX;             final LocalizedMessage exceptionMessage = new LocalizedMessage(0,                     Definitions.CHECKSTYLE_BUNDLE, UNABLE_TO_INSTANTIATE_EXCEPTION_MESSAGE,                     new String[] {name, attemptedNames}, null, factory.getClass(), null);             assertEquals(""Invalid exception message"",                     exceptionMessage.getMessage(), ex.getMessage());         } } ```  refactor code to have assertEquals in method with annotation `@Test`. Optimize PMD suppression that is discussed in comment https://github.com/checkstyle/checkstyle/pull/5637#discussion_r178369217","closed","miscellaneous,","romani","2018-04-02T21:25:07Z","2018-04-09T22:23:44Z"
"","5321","Pull #5321: fixed bug on matching xpath when no xpath given","Identified at https://github.com/checkstyle/checkstyle/pull/5236#issuecomment-349042760 ,  The constructor takes all the same fields as SuppressElement, but [it also takes an optional `xpathQuery`](https://github.com/checkstyle/checkstyle/blob/f994512712c08a16def4a3c5a0426b7ab1590cc9/src/main/java/com/puppycrawl/tools/checkstyle/filters/XpathFilter.java#L85-L88). For other elements, [it is considered matching if the optional parameter is `null`](https://github.com/checkstyle/checkstyle/blob/f994512712c08a16def4a3c5a0426b7ab1590cc9/src/main/java/com/puppycrawl/tools/checkstyle/filters/XpathFilter.java#L114).  However as of right now, [`xpathQuery` it is considered not a match if is not given](https://github.com/checkstyle/checkstyle/blob/f994512712c08a16def4a3c5a0426b7ab1590cc9/src/main/java/com/puppycrawl/tools/checkstyle/filters/XpathFilter.java#L123-L125). This seems wrong. An optional parameter should automatically be a match if it is not given. If anything is given without `xpathQuery` it should act the exact same as a `SuppressElement` as they are identical.","closed","approved,","rnveach","2017-12-05T14:10:22Z","2017-12-06T03:53:42Z"
"","5168","Upgrade XML logger to XML 1.1","Identified at https://github.com/checkstyle/checkstyle/pull/5163#issuecomment-333160165 ,  We need to upgrade our XML output to 1.1 to support escaping non-printable characters like hex 0x01 and 0x02 found in openjdk projects.  Before we can upgrade though, we must have maven-checkstyle-plugin ugpgrade their support of this as they won't accept the newer version of XML. > [ERROR] Failed to execute goal org.apache.maven.plugins:maven-checkstyle-plugin:2.17:check (default-cli) on project postgresql: Unable to read Checkstyle results xml: /pipeline/source/pgjdbc/pgjdbc/target/checkstyle-result.xml: only 1.0 is supported as","open","approved,","rnveach","2017-10-02T16:51:24Z","2017-10-02T17:03:17Z"
"","5116","Expand eclipse compiler to check test code","Identified at https://github.com/checkstyle/checkstyle/pull/5113 ,  When I enable these settings in Eclipse IDE, they automatically apply them to testso I still see errors in our configuration. I think we should update our CI to include test. This results in 24 errors, most of which need to just be suppressed as they are ways of testing.  Here is the list: ```` ---------- 1. INFO in /checkstyle/src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractTypeAwareCheckTest.java (at line 40)     @SuppressWarnings(""deprecation"")                       ^^^^^^^^^^^^^ At least one of the problems in category 'deprecation' is not analysed due to a compiler option being ignored ---------- ---------- 2. ERROR in /checkstyle/src/test/java/com/puppycrawl/tools/checkstyle/filters/XpathFilterTest.java (at line 122)     new XpathFilter(""InputXpathFilterSuppressByXpath"", ""Test"", null, xpath);     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ The allocated object is never used ---------- ---------- 3. INFO in /checkstyle/src/test/java/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java (at line 586)     @SuppressWarnings(""deprecation"")                       ^^^^^^^^^^^^^ At least one of the problems in category 'deprecation' is not analysed due to a compiler option being ignored ---------- ---------- 4. ERROR in /checkstyle/src/test/java/com/puppycrawl/tools/checkstyle/PropertyCacheFileTest.java (at line 88)     new PropertyCacheFile(null, """");     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ The allocated object is never used ---------- 5. ERROR in /checkstyle/src/test/java/com/puppycrawl/tools/checkstyle/PropertyCacheFileTest.java (at line 96)     new PropertyCacheFile(config, null);     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ The allocated object is never used ---------- ---------- 6. ERROR in /checkstyle/src/test/java/com/puppycrawl/tools/checkstyle/PropertiesExpanderTest.java (at line 32)     new PropertiesExpander(null);     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ The allocated object is never used ---------- ---------- 7. ERROR in /checkstyle/src/test/java/com/puppycrawl/tools/checkstyle/PackageObjectFactoryTest.java (at line 72)     new PackageObjectFactory(new HashSet(), null);     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ The allocated object is never used ---------- 8. ERROR in /checkstyle/src/test/java/com/puppycrawl/tools/checkstyle/PackageObjectFactoryTest.java (at line 83)     new PackageObjectFactory(""test"", null);     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ The allocated object is never used ---------- 9. ERROR in /checkstyle/src/test/java/com/puppycrawl/tools/checkstyle/PackageObjectFactoryTest.java (at line 95)     new PackageObjectFactory(Collections.singleton(null), classLoader);     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ The allocated object is never used ---------- 10. ERROR in /checkstyle/src/test/java/com/puppycrawl/tools/checkstyle/PackageObjectFactoryTest.java (at line 107)     new PackageObjectFactory((String) null, classLoader);     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ The allocated object is never used ---------- 11. ERROR in /checkstyle/src/test/java/com/puppycrawl/tools/checkstyle/PackageObjectFactoryTest.java (at line 134)     public void testCreateModuleWithNonExistName() throws CheckstyleException {                                                           ^^^^^^^^^^^^^^^^^^^ The declared exception CheckstyleException is not actually thrown by the method testCreateModuleWithNonExistName() from type PackageObjectFactoryTest ---------- ---------- 12. ERROR in /checkstyle/src/test/java/com/puppycrawl/tools/checkstyle/api/AutomaticBeanTest.java (at line 205)     public void doSmth() {                 ^^^^^^^^ The method doSmth() from the type AutomaticBeanTest.TestBean is never used locally ---------- ---------- 13. ERROR in /checkstyle/src/test/java/com/puppycrawl/tools/checkstyle/api/AbstractFileSetCheckTest.java (at line 77)     check.setFileExtensions(null);     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Type null of the last argument to method setFileExtensions(String...) doesn't exactly match the vararg parameter type. Cast to String[] to confirm the non-varargs invocation, or pass individual arguments of type String for a varargs invocation. ---------- ---------- 14. ERROR in /checkstyle/src/test/java/com/puppycrawl/tools/checkstyle/api/FileTextTest.java (at line 56)     new FileText(new File(""any name""), charsetName);     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ The allocated object is never used ---------- ---------- 15. ERROR in /checkstyle/src/test/java/com/puppycrawl/tools/checkstyle/api/SeverityLevelCounterTest.java (at line 32)     new SeverityLevelCounter(null);     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ The allocated object is never used ---------- ---------- 16. INFO in /checkstyle/src/test/java/com/puppycrawl/tools/checkstyle/api/FileContentsTest.java (at line 42)     @SuppressWarnings(""deprecation"")                       ^^^^^^^^^^^^^ At least one of the problems in category 'deprecation' is not analysed due to a compiler option being ignored ---------- ---------- 17. ERROR in /checkstyle/src/test/java/com/puppycrawl/tools/checkstyle/utils/ModuleReflectionUtilsTest.java (at line 141)     protected ValidCheckstyleClass() {               ^^^^^^^^^^^^^^^^^^^^^^ The constructor ModuleReflectionUtilsTest.ValidCheckstyleClass() is never used locally ---------- 18. ERROR in /checkstyle/src/test/java/com/puppycrawl/tools/checkstyle/utils/ModuleReflectionUtilsTest.java (at line 147)     protected InvalidNonAutomaticBeanClass() {               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ The constructor ModuleReflectionUtilsTest.InvalidNonAutomaticBeanClass() is never used locally ---------- 19. ERROR in /checkstyle/src/test/java/com/puppycrawl/tools/checkstyle/utils/ModuleReflectionUtilsTest.java (at line 259)     protected NotCheckstyleCheck() {               ^^^^^^^^^^^^^^^^^^^^ The constructor ModuleReflectionUtilsTest.NotCheckstyleCheck() is never used locally ---------- 20. ERROR in /checkstyle/src/test/java/com/puppycrawl/tools/checkstyle/utils/ModuleReflectionUtilsTest.java (at line 265)     private int field;                 ^^^^^ The value of the field ModuleReflectionUtilsTest.InvalidNonDefaultConstructorClass.field is not used ---------- 21. ERROR in /checkstyle/src/test/java/com/puppycrawl/tools/checkstyle/utils/ModuleReflectionUtilsTest.java (at line 267)     protected InvalidNonDefaultConstructorClass(int data) {               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ The constructor ModuleReflectionUtilsTest.InvalidNonDefaultConstructorClass(int) is never used locally ---------- ---------- 22. ERROR in /checkstyle/src/test/java/com/puppycrawl/tools/checkstyle/doclets/TokenTypesDocletTest.java (at line 108)     new TestMessager(context);     ^^^^^^^^^^^^^^^^^^^^^^^^^ The allocated object is never used ---------- 23. ERROR in /checkstyle/src/test/java/com/puppycrawl/tools/checkstyle/doclets/TokenTypesDocletTest.java (at line 124)     new TestMessager(context);     ^^^^^^^^^^^^^^^^^^^^^^^^^ The allocated object is never used ---------- 24. ERROR in /checkstyle/src/test/java/com/puppycrawl/tools/checkstyle/doclets/TokenTypesDocletTest.java (at line 148)     new TestMessager(context);     ^^^^^^^^^^^^^^^^^^^^^^^^^ The allocated object is never used ---------- 25. ERROR in /checkstyle/src/test/java/com/puppycrawl/tools/checkstyle/doclets/TokenTypesDocletTest.java (at line 170)     new TestMessager(context);     ^^^^^^^^^^^^^^^^^^^^^^^^^ The allocated object is never used ---------- ---------- 26. ERROR in /checkstyle/src/test/java/com/puppycrawl/tools/checkstyle/XMLLoggerTest.java (at line 56)     new XMLLogger(outStream, false);     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ The allocated object is never used ---------- 27. ERROR in /checkstyle/src/test/java/com/puppycrawl/tools/checkstyle/XMLLoggerTest.java (at line 79)     new XMLLogger(outStream, false);     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ The allocated object is never used ---------- ````","closed","miscellaneous,","rnveach","2017-09-15T19:32:26Z","2017-09-25T17:23:21Z"
"","5162","Checkstyle produces invalid XML file","Identified at https://github.com/checkstyle/checkstyle/pull/5063#issuecomment-330052949 ,  patch-diff-report-tool produced the following exception when running regression with `MultipleStringLiteralsCheck`. ```` Starting diff report generation ... patch-diff-report-tool execution started. XML parsing is started. Exception in thread ""main"" javax.xml.stream.XMLStreamException: ParseError at [row,col]:[1722,79] Message: Character reference ""&# 	at com.sun.org.apache.xerces.internal.impl.XMLStreamReaderImpl.next(XMLStreamReaderImpl.java:604) 	at com.sun.xml.internal.stream.XMLEventReaderImpl.nextEvent(XMLEventReaderImpl.java:83) 	at com.github.checkstyle.parser.CheckstyleReportsParser.parseXmlPortion(CheckstyleReportsParser.java:160) 	at com.github.checkstyle.parser.CheckstyleReportsParser.parse(CheckstyleReportsParser.java:132) 	at com.github.checkstyle.Main.main(Main.java:163) Caught: groovy.lang.GroovyRuntimeException: Error: ! groovy.lang.GroovyRuntimeException: Error: ! 	at diff.executeCmd(diff.groovy:344) 	at diff.executeCmd(diff.groovy:338) 	at diff$_generateDiffReport_closure3.doCall(diff.groovy:237) 	at diff.generateDiffReport(diff.groovy:220) 	at diff$generateDiffReport$4.callCurrent(Unknown Source) 	at diff.run(diff.groovy:32) ````  > [at com.github.checkstyle.parser.CheckstyleReportsParser.parse(CheckstyleReportsParser.java:132)](https://github.com/checkstyle/contribution/blob/288b4da7f16dc25c4d7be3a889142805cf169ae8/patch-diff-report-tool/src/main/java/com/github/checkstyle/parser/CheckstyleReportsParser.java#L132)  Is when reading the master/base report. This is the XML file: https://nimfadora.github.io/diff5008/checkstyle-result-master.txt  The specific problem line in the XML is: > ``  The problem is in XMLLogger and showcased in our UTs at https://github.com/checkstyle/checkstyle/blob/master/src/test/java/com/puppycrawl/tools/checkstyle/XMLLoggerTest.java#L65 . > `  {""�"", ""�""}, //reference`  We deal with pure text in our messages, not references. `�` should not stay as it is, but be converted to `&#0;` This is why the XML file isn't valid.","closed","approved,","rnveach","2017-09-28T20:48:42Z","2017-10-10T14:54:38Z"
"","5065","ImportOrder: No violation before or after changes for static import list","Identified at https://github.com/checkstyle/checkstyle/pull/5053#issue-254777285 ,  specifically at the code https://github.com/checkstyle/checkstyle/commit/28e618b1f1660b976803e5fdad51562152bb8e3d#diff-f784beebc72b92982be3042b568387cfR22  With empty line: ```` $ cat TestClass.java import static com.puppycrawl.tools.checkstyle.internal.XpathUtil.getXpathItems;  import static org.junit.Assert.assertEquals;  public class TestClass {     void method() {     } }  $ cat TestConfig.xml                                                                $ java -jar checkstyle-8.2-all.jar -c TestConfig.xml TestClass.java Starting audit... Audit done. ```` Without empty line: ```` $ cat TestClass.java import static com.puppycrawl.tools.checkstyle.internal.XpathUtil.getXpathItems; import static org.junit.Assert.assertEquals;  public class TestClass {     void method() {     } }  $ cat TestConfig.xml                                                                $ java -jar checkstyle-8.2-all.jar -c TestConfig.xml TestClass.java Starting audit... Audit done. ````  There was no violation with an empty line after `import static com.puppycrawl.tools.checkstyle.internal.XpathUtil.getXpathItems;` or when the empty line was removed in the PR. I expected ImportOrder to enforce a specific behavior in this regards that all users should follow. I expected a violation in one of the examples, not both.","closed","approved,","rnveach","2017-09-03T15:15:22Z","2018-03-18T14:53:23Z"
"","5057","TranslationCheck: should fire file started/finished when invoking errors","Identified at https://github.com/checkstyle/checkstyle/pull/5043#discussion_r136685319 this issue is slightly related to multi-file validation,  PR wishes to remove file started/finished calls in `TranslationCheck`. See https://github.com/checkstyle/checkstyle/pull/5043/files  As pitest has proven these calls aren't needed because: After the check `destroy` executes from the violation, we run `fireAuditFinished` https://github.com/checkstyle/checkstyle/blob/07a730c0d1b89593e17fa8920faf9c226200e7b5/src/main/java/com/puppycrawl/tools/checkstyle/Checker.java#L219-L223 and the XML logger clears out it's file cache if it hadn't before. https://github.com/checkstyle/checkstyle/blob/07a730c0d1b89593e17fa8920faf9c226200e7b5/src/main/java/com/puppycrawl/tools/checkstyle/XMLLogger.java#L117-L118  So correct output is still here only because XML logger was extra careful in clearing out it's cache.  DefaultLogger doesn't care about files starting or finishing really. https://github.com/checkstyle/checkstyle/blob/07a730c0d1b89593e17fa8920faf9c226200e7b5/src/main/java/com/puppycrawl/tools/checkstyle/DefaultLogger.java#L241-L248  ---  To me, it is weird we fire errors without a start/end file, but this check is already 'special' as it is related to multi-file mode. We can't assume any new listener made will know this weird behavior.  I suggest we undo the changes to `TranslationCheck` in that PR and in #5397 , and modify `XMLLogger` to not clear out it's cache as `fileFinished` should be the only one doing this. I assume removing the `fileMessages.forEach(this::writeFileMessages);` in XMLLogger's auditFinished would solve the pitest issue in this check and require the removed code to stay.","closed","approved,","rnveach","2017-09-02T14:15:26Z","2017-12-30T15:09:11Z"
"","5033","Pull #5033: made XMLLogger writer final","Identified at https://github.com/checkstyle/checkstyle/pull/5025#discussion_r136051605 ,  We don't support swapping writers during mid-execution of Checkstyle, so we should remove `setOutputStream` to prevent people from mistaking this. Identified PR was going to make it `public` by mistake.  I wanted to make 1 constructor call another but I ran into some issues preventing that.  One constructor is deprecated so I don't think the good constructor should be calling the deprecated one. There is no conversion from boolean to `OutputStreamOptions` that I can do in one line as required by a constructor call in a constructor unless I make a new method in `OutputStreamOptions` which would only be used for this purpose.  Eventually deprecated constructor will be removed, so I think this way is ok. If you wish for me to change, let me know.","closed","miscellaneous,","rnveach","2017-08-31T00:44:06Z","2017-08-31T15:17:07Z"
"","5770","AbstractJavadocCheck: switch logging to DetailNode","Identified at https://github.com/checkstyle/checkstyle/issues/5758#issuecomment-386167806 ,  We should change `AbstractJavadocCheck` logging from `log(int line...` to `log(DetailNode node...` as we wish to remove access to logging by line only for all checks.  When this issue will be solved, the test `XpathRegressionTest` and xdoc `config_filters` (section `SuppressionXpathFilter`) should be updated. For now, this test ignores all `AbstractJavadocCheck` tests.","open","approved,","rnveach","2018-05-03T02:24:14Z","2020-03-29T05:03:54Z"
"","5392","Pull #5392: fixed RequireThisCheck and for loop variable handling","Identified at https://github.com/checkstyle/checkstyle/issues/5307#issuecomment-352784756  For loop variables are seen in the wrong scope. They are thought to be in the base method definition when they are actually scoped inside the loop itself.  You can clearly see the scope change at https://github.com/rnveach/checkstyle/commit/85c10036687b19156b06110d02c6408eac028864#diff-6b1f89f1bde0470d4bd42580d1aa8bfb .  ```` $ cat TestClass.java public class TestClass {     int b = 0;      void method() {         for (int b = 0; b < 10; b++) {         }         return b + b * b;     } }  $ cat TestConfig.xml                          $ java -jar checkstyle-8.5-all.jar -c TestConfig.xml TestClass.java Starting audit... Audit done. ````  No violation even though variable `b` is the field variable.  First regression: http://rveach.no-ip.org/checkstyle/regression/reports/148/ Showed a new NPE which I fixed.  I will provide newer regression.","closed","approved,","rnveach","2017-12-26T18:38:02Z","2017-12-26T22:09:48Z"
"","5364","Pull #5364: changed RequireThis kept track of the frame being examined","Identified at https://github.com/checkstyle/checkstyle/issues/5307#issuecomment-352307935 . We assign current on a visit, but we don't reset it when we leave a token. So check thinks we are still in the previous frame, when we are back in the parent.  Here is proof: ```` $ cat TestClass.java class NestedFrames {     int a = 0;      public int oneReturnInMethod2() {         for (int i = 0; i < 10; i++) {             int a = 1;             if (a != 2 && true) {                 if (true | false) {                     if (a - a != 0) {                         a += 1;                     }                 }             }         }         return a + a * a;     } }  $ cat TestConfig.xml                                         $ java -jar checkstyle-8.5-all.jar -c TestConfig.xml TestClass.java Starting audit... Audit done. ```` Expecting a violation for `return a + a * a` as `a` is not the local variable `a`, but the class field and thus should be a violation for `this`.  --------------------------  Regression: http://rveach.no-ip.org/checkstyle/regression/reports/147/  We are seeing alot of differences. http://rveach.no-ip.org/checkstyle/regression/reports/147/sevntu-checkstyle/index.html#A7 These are new violations, added in the test. http://rveach.no-ip.org/checkstyle/regression/reports/147/guava-mvnstyle/index.html#A259 These violations are removed as list is a local variable, not the anonymous class' same variable name.  All other differences are changes in violation messages from `InnerClass.this` to just `this`.","closed","approved,","rnveach","2017-12-18T03:45:55Z","2017-12-25T23:20:12Z"
"","5363","Pull #5363: add ANNOTATION_DEF to RequireThisCheck","Identified at https://github.com/checkstyle/checkstyle/issues/5307#issuecomment-352132626 . We had specifics to annotation interfaces, but we never used or collected them.  I will post regression soon.","closed","new feature,","rnveach","2017-12-17T21:45:53Z","2017-12-30T15:55:07Z"
"","5361","fixed RequireThisCheck and enum constants handling","Identified at https://github.com/checkstyle/checkstyle/issues/5307#issuecomment-351240617  Enumerations don't see enumeration constants at all.  Easy printout of frame tree with this changes: https://github.com/rnveach/checkstyle/commit/b5840705bde5c53316717f265289d0b0af8aa045#diff-6b1f89f1bde0470d4bd42580d1aa8bfb Regression: http://rveach.no-ip.org/checkstyle/regression/reports/143/  Regression was done in parallel with https://github.com/checkstyle/checkstyle/pull/5351 and it only showed regression for the other PR, so there is no regression with this PR. Most likely it is because users don't write non-static variables in this casing.  The following shows the issue without the enum constants using the input file with the released CS version: ```` $ cat TestClass.java package com.puppycrawl.tools.checkstyle.checks.coding.requirethis;  public class InputRequireThisEnumConstant {     private final String TEST = """";          public enum TestEnum {         TEST;          public TestEnum method() {             return TEST;         }     } }   $ cat TestConfig.xml                          $ java -jar checkstyle-8.5-all.jar -c TestConfig.xml TestClass.java Starting audit... [ERROR] TestClass.java:10:20: Reference to instance variable 'TEST' needs ""InputRequireThisEnumConstant.this."". [RequireThis] Audit done. Checkstyle ends with 1 errors. ````  `TEST` can't be `this` because we are referencing the enum's constant and not the class' field.","closed","approved,","rnveach","2017-12-15T15:49:40Z","2017-12-15T18:43:09Z"
"","5351","Pull #5351: fixed RequireThisCheck and catch variable handling","Identified at https://github.com/checkstyle/checkstyle/issues/5307#issuecomment-351240617  Catch variables are seen in the scope of the try block instead of the catch block.  Easy printout of frame tree with this changes: https://github.com/rnveach/checkstyle/commit/aad8b0382813c6abadf951b603b2e884bb4a0478#diff-6b1f89f1bde0470d4bd42580d1aa8bfb Regression: http://rveach.no-ip.org/checkstyle/regression/reports/143/ http://rveach.no-ip.org/checkstyle/regression/reports/143/spring-framework/index.html#A1","closed","approved,","rnveach","2017-12-13T00:50:58Z","2017-12-14T12:46:01Z"
"","5419","XmlLogger sanitizes exception tags when it shouldn't be","Identified at https://github.com/checkstyle/checkstyle/issues/5166 when looking at https://github.com/checkstyle/checkstyle/blob/master/src/test/resources/com/puppycrawl/tools/checkstyle/xmllogger/ExpectedXMLLoggerException.xml ,  ````   <exception> <![CDATA[ stackTrace example]]> </exception>   ````  `<exception>` shouldn't be encoded in the XML file. it should be a pure tag like ``.","closed","approved,","rnveach","2018-01-03T16:02:37Z","2018-01-06T00:48:29Z"
"","5124","Remove usage of DetailAST.branchContains","Identified at https://github.com/checkstyle/checkstyle/issues/4727#issuecomment-315624202 ,  > branchContains is a dangerous method to use all the time since there is no restriction on how deep it can search.  The referenced issue fixed a bug where we used `branchContains` and it was scanning deeper than the check originally intended. It was supposed to be looking for a variable with a `final` modifier, but because of `branchContains` it scanned into an anonymous class in the assignment and picked up the `final` there.  There may be other cases in our code where it might be searching too much. Example: https://github.com/checkstyle/checkstyle/blob/55aa8cedc60d4faa776d7a36f8ae2d0bed0ada45/src/main/java/com/puppycrawl/tools/checkstyle/checks/FinalParametersCheck.java#L144 Because we are doing a `branchContains` on the `METHOD_DEF` it is also searching inside the `SLIST` of the method and may pick-up anonymous classes while it is looking for `PARAMETER_DEF`.  I feel `branchContains` should be completely removed as it's search area can't be controlled. If we don't want to remove it, it's use should be heavily controlled.  We should swap it's current uses with either `findFirstToken` or a new method in each check that specifically controls where and what we are looking for.","closed","miscellaneous,","rnveach","2017-09-18T18:54:17Z","2019-10-03T10:56:16Z"
"","5492","Javadoc: inconsistent AST structure when unexpected closing tag is found","identified at  https://github.com/checkstyle/checkstyle/commit/48f6beb453666f76416a43a97511ac94e2521361#diff-410707f87051b90b5e46d27453020212R671  from @rnveach: ```` $ cat TestClass.java /**text1text2*/ public class TestClass {     void method() {     } }  $ cat TestConfig.xml                            $ java -jar checkstyle-8.7-all.jar -c TestConfig.xml TestClass.java Starting audit... [ERROR] TestClass.java:1: Unclosed HTML tag found: tr [JavadocParagraph] Audit done. Checkstyle ends with 1 errors. ````  When printing the javadoc tree: ```` $ cat tr-p.javadoc  text1text2 $ cat var-p.javadoc  text1text2  $ java -jar checkstyle-8.10-all.jar -j tr-p.javadoc  JAVADOC -> JAVADOC [0:0] |--HTML_ELEMENT -> HTML_ELEMENT [0:0] |   `--TR_TAG_START -> TR_TAG_START [0:0] |       |--START -> < [0:0] |       |--TR_HTML_TAG_NAME -> tr [0:1] |       `--END -> > [0:3] |--TEXT -> text1 [0:4] |--HTML_ELEMENT -> HTML_ELEMENT [0:9] |   `--P_TAG_END -> P_TAG_END [0:9] |       |--START -> < [0:9] |       |--SLASH -> / [0:10] |       |--P_HTML_TAG_NAME -> p [0:11] |       `--END -> > [0:12] |--TEXT -> text2 [0:13] |--HTML_ELEMENT -> HTML_ELEMENT [0:18] |   `--TR_TAG_END -> TR_TAG_END [0:18] |       |--START -> < [0:18] |       |--SLASH -> / [0:19] |       |--TR_HTML_TAG_NAME -> tr [0:20] |       `--END -> > [0:22] `--EOF ->  [0:23]  $ java -jar checkstyle-8.10-all.jar -j var-p.javadoc  JAVADOC -> JAVADOC [0:0] |--HTML_ELEMENT -> HTML_ELEMENT [0:0] |   `--HTML_TAG -> HTML_TAG [0:0] |       |--HTML_ELEMENT_START -> HTML_ELEMENT_START [0:0] |       |   |--START -> < [0:0] |       |   |--HTML_TAG_NAME -> var [0:1] |       |   `--END -> > [0:4] |       |--TEXT -> text1 [0:5] |       |--HTML_ELEMENT -> HTML_ELEMENT [0:10] |       |   `--P_TAG_END -> P_TAG_END [0:10] |       |       |--START -> < [0:10] |       |       |--SLASH -> / [0:11] |       |       |--P_HTML_TAG_NAME -> p [0:12] |       |       `--END -> > [0:13] |       |--TEXT -> text2 [0:14] |       `--HTML_ELEMENT_END -> HTML_ELEMENT_END [0:19] |           |--START -> < [0:19] |           |--SLASH -> / [0:20] |           |--HTML_TAG_NAME -> var [0:21] |           `--END -> > [0:24] `--EOF ->  [0:25]  ````","open","javadoc,","romani","2018-01-28T04:28:34Z","2018-05-09T20:13:08Z"
"","5303","Extend documentation of lcurly and rcurly values by links to named styles","idea is taken from #5287  http://checkstyle.sourceforge.net/property_types.html#lcurly checkstyle.sourceforge.net/property_types.html#rcurly  should have reference to: https://en.wikipedia.org/wiki/Indentation_style#K.26R https://en.wikipedia.org/wiki/Indentation_style#Variant:_Java https://en.wikipedia.org/wiki/Indentation_style#Variant:_Stroustrup https://en.wikipedia.org/wiki/Indentation_style#Allman_style  to let user match what option to use for required style.","open","approved,","romani","2017-11-28T02:11:11Z","2020-04-23T18:40:53Z"
"","5755","Linux CLI Installation","I'm trying to install checkstyle to use as a command-line tool within my CI framework like so -  `apt-get update` `apt-get install checkstyle`  But it looks like the [current version](https://packages.ubuntu.com/xenial/checkstyle) is locked at 6.15.  Is there a simple way to install the latest version and get it working as a command line tool?","closed","","piercefreeman","2018-04-25T18:16:42Z","2018-04-25T21:46:14Z"
"","5691","spelling: commenting","I'm not sure about this change.  I'm mostly making this PR to test the function of the newly added spell checking test.","closed","","jsoref","2018-04-05T22:04:04Z","2018-04-08T00:43:40Z"
"","5345","SummaryJavadoc: case insensitive for forbiddenSummaryFragments (rfc)","I' a bit tired of typing ""[Bb][Ll][Aa][Bb][Ll][Aa][Bb][Ll][Aa]"" for forbiddenSummaryFragments. Let's add the property ""caseInsensieve"" to SummaryJavadocCheck like one in IllegalTokenTextCheck.  Or, even better, we shall invent the syntax for specifying flags to any regexp property. For example, ""/blablabla/mi""  for case insensitive multiline regexp.","closed","","pbludov","2017-12-11T06:49:46Z","2017-12-14T09:48:39Z"
"","5470","Support lombok `val` keyword for/instead of FinalLocalVariableCheck","I would like to use FinalLocalVariableCheck to ensure my local variables are compiled as final, but ideally I don't want to type final every time I declare a local variable. Lombok's `val` keyword is great for this, but it isn't recognised by FinalLocalVariableCheck and still gives me warnings about adding the `final` keyword.  Is there a way I can get around this without disabling the entire rule for my whole project, or is there a way I can create an alternative rule with the same effect that checks if `val` was used for local variables?","closed","","rikoe","2018-01-18T12:15:05Z","2018-01-29T22:52:02Z"
"","5463","JavadocMethod: ""Expected an @return tag."" sounds not right","I would argue that is not correct grammar, since most people will not speak the ""at"". I suggest to remove the ""an"" completely, since it would then match the similar message ""Expected @param tag for foo..."" and avoids the problem of a/an.  E.g. just replace that message with ""Expected @return tag.""  Relevant source is https://github.com/checkstyle/checkstyle/blob/5a78c7dcbde3c4d5ba248d5a6161ae412e54640d/src/main/resources/com/puppycrawl/tools/checkstyle/checks/javadoc/messages.properties#L19","closed","miscellaneous,","Bananeweizen","2018-01-16T14:40:46Z","2018-01-23T00:19:05Z"
"","5658","config: bump ant to 1.10.3","I will fix typo in commit message on merge.","closed","","romani","2018-03-29T13:01:04Z","2018-03-29T16:48:57Z"
"","5650","RegexpMultilineCheck: new property to set the maximum number of violations logged.","I want to use **RegexpMultilineCheck** to check if eol symol is LF or CR/LF and I want the severity to be warning.  For most files I would assume that if a `\r\n` pattern is matched for all of the first few lines, then the entire file has the same eol symbol and I wouldn't want every line to be logged as a warning.  The same property would be useful in **RegexpSingleLineCheck** if I want to use it to warn when trailing whitespaces are found and only log the first few warnings.","closed","","lpapazow","2018-03-27T15:49:19Z","2018-03-28T13:16:58Z"
"","5763","SummaryJavadoc: there should be a way to have forbidden regexp validation, without enforcing the presense of a non-empty summary","I think it would be a valid use-case to forbid certain strings present in the javadoc summary, meanwhile accepting the complete lack of javadoc summary. (For example I wanted to forbid nobrainer summaries like ""return the.."", but allow having no summary at all - sometimes the method is that straightforward).  Right now it can't be done. Either the check has to be completely removed, or it fails for missing summary.  Either a new configuration, or interpreting an empty string configured as period should do the job.","closed","","nbali","2018-05-02T15:31:40Z","2018-05-02T17:47:24Z"
"","5307","Create a utility to identify parameters/variables for checks to use","I like to create new checks for use in my projects. One thing that almost all checks need is a way to identify if an ident is a field/variable/parameter and to examine the context of the line knowing this information. Sometimes I need to re-look at the variables type, and sometimes name clashes make the check more complicated. Unfortunately there is no utility in checkstyle to help check makers do this and we are forced to make assumptions or to re-invent the wheel.   [One check that does do in-depth analysis of variables is RequireThisCheck](https://github.com/checkstyle/checkstyle/blob/32e2b7ba57e189074662d84a04535a87c3a19b0c/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java#L209-L226). It would be great if we could take this analysis out of the Check and move it to a common utility so all can make use of it.  We could call this utility `FrameTrackingUtil` and give it the following methods. `RequireThisCheck.beginTree` can be moved into `FrameTrackingUtil.reset`. We can give it the following methods to make use of. `getVariablesByName` can find the variables/parameters/etc in the given scope of the current method and return it's AST. `getMethodByName` can find the method in the given scope of the current class and return it's AST. `getVariables` can return all the variables in the given scope. `getMethods` can return all the methods in the given scope. etc...  This could be a sort of `AbstractTypeAware` utility, but it won't use the deprecated `Class` lookup and be restricted to only the current file being examined.","open","approved,","rnveach","2017-11-30T14:48:05Z","2019-01-08T15:30:53Z"
"","5254","Suppression file change has no instant effect","I have suppression file defined via Gradle property although I guess similar issue will be with suppression files defined in normal way ```                             ```  After modifying suppression rules in the file checkstyle cache is not invalidated. Meaning: Checkstyle pass -> I remove the ruling which should make checkstyle fail, but checkstyle passes. To fix this I need to remove checkstyle cache (clear build directory)  I think hash of suppression file should be stored in local cache and proper check should be performed to see if the file has been changed (if the cached results are still valid).","closed","","igorwojda","2017-11-09T12:13:43Z","2018-03-18T19:17:31Z"
"","5067","Intellij Checkstyle gives error NoClassDefFoundError","I have Intellij 2017.2.3 and Checkstyle-IDEA 5.10.0 running on my Ubuntu 17 desktop. When i try to add a checkstyle for my Java project (at Settings->Other settings->Checkstyle) I get this error message:  ``` java.lang.NoClassDefFoundError: org/apache/commons/collections/FastHashMap     at org.apache.commons.beanutils.PropertyUtilsBean.getPropertyDescriptor(PropertyUtilsBean.java:963)     at org.apache.commons.beanutils.BeanUtilsBean.copyProperty(BeanUtilsBean.java:391)     at com.puppycrawl.tools.checkstyle.api.AutomaticBean.tryCopyProperty(AutomaticBean.java:217)     at com.puppycrawl.tools.checkstyle.api.AutomaticBean.contextualize(AutomaticBean.java:249)     at com.puppycrawl.tools.checkstyle.Checker.setupChild(Checker.java:455)     at com.puppycrawl.tools.checkstyle.api.AutomaticBean.configure(AutomaticBean.java:186)     at org.infernus.idea.checkstyle.service.cmd.OpCreateChecker.execute(OpCreateChecker.java:58)     at org.infernus.idea.checkstyle.service.cmd.OpCreateChecker.execute(OpCreateChecker.java:26)     at org.infernus.idea.checkstyle.service.CheckstyleActionsImpl.executeCommand(CheckstyleActionsImpl.java:126)     at org.infernus.idea.checkstyle.service.CheckstyleActionsImpl.createChecker(CheckstyleActionsImpl.java:56)     at org.infernus.idea.checkstyle.service.CheckstyleActionsImpl.createChecker(CheckstyleActionsImpl.java:47)     at org.infernus.idea.checkstyle.checker.CheckerFactoryWorker.run(CheckerFactoryWorker.java:44) ```","closed","","sigma85","2017-09-04T13:07:38Z","2017-09-04T16:10:37Z"
"","5640","generated jacoco.exec file needs to be moved out of base directory","I get the following error when verifying my work locally: ```` [INFO] --- maven-antrun-plugin:1.8:run (ant-phase-verify) @ checkstyle --- [INFO] Executing tasks  main:  execute:      [echo] Checkstyle started (checkstyle_checks.xml): 23/03/2018 03:27:57 PM [checkstyle] Running Checkstyle 8.9-SNAPSHOT on 974 files      [echo] Checkstyle finished (checkstyle_checks.xml) : 23/03/2018 03:28:00 PM      [echo] Checkstyle started (checkstyle_non_main_files_checks.xml): 23/03/2018 03:27:57 PM [checkstyle] Running Checkstyle 8.9-SNAPSHOT on 1478 files [checkstyle] [ERROR] M:\checkstyleWorkspaceEclipse\checkstyle\jacoco.exec:0: File does not end with a newline. [NewlineAtEndOfFile] [INFO] ------------------------------------------------------------------------ [INFO] BUILD FAILURE ````  It would be helpful if this file could be moved into `target` folder to  prevent interference with verifying the build locally.","closed","miscellaneous,","rnveach","2018-03-23T19:32:11Z","2018-04-15T01:17:15Z"
"","5603","PMD 6: migrate configuration to pmd 6.X version","I found this in build logs https://travis-ci.org/checkstyle/checkstyle/jobs/351463419#L735 , should be resolved ... ``` [INFO] --- maven-pmd-plugin:3.9.0:pmd (pmd) @ checkstyle --- [WARNING] This analysis could be faster, please consider using Incremental Analysis: https://pmd.github.io/pmd-6.1.0/pmd_userdocs_getting_started.html#incremental-analysis [WARNING] The RuleSet rulesets/java/basic.xml has been deprecated and will be removed in PMD 7.0.0 [WARNING] The RuleSet rulesets/java/braces.xml has been deprecated and will be removed in PMD 7.0.0 [WARNING] The RuleSet rulesets/java/clone.xml has been deprecated and will be removed in PMD 7.0.0 [WARNING] The RuleSet rulesets/java/codesize.xml has been deprecated and will be removed in PMD 7.0.0 [WARNING] Failure executing PMD: Cannot set non-existent property 'showClassesComplexity' on Rule CyclomaticComplexity java.lang.IllegalArgumentException: Cannot set non-existent property 'showClassesComplexity' on Rule CyclomaticComplexity 	at net.sourceforge.pmd.rules.RuleFactory.setPropertyValues(RuleFactory.java:275) 	at net.sourceforge.pmd.rules.RuleFactory.decorateRule(RuleFactory.java:103) 	at net.sourceforge.pmd.RuleSetFactory.parseRuleReferenceNode(RuleSetFactory.java:648) 	at net.sourceforge.pmd.RuleSetFactory.parseRuleNode(RuleSetFactory.java:462) 	at net.sourceforge.pmd.RuleSetFactory.parseRuleSetNode(RuleSetFactory.java:367) 	at net.sourceforge.pmd.RuleSetFactory.createRuleSet(RuleSetFactory.java:214) 	at net.sourceforge.pmd.RuleSetFactory.createRuleSet(RuleSetFactory.java:209) 	at net.sourceforge.pmd.RuleSetFactory.parseRuleSetReferenceNode(RuleSetFactory.java:501) 	at net.sourceforge.pmd.RuleSetFactory.parseRuleNode(RuleSetFactory.java:458) 	at net.sourceforge.pmd.RuleSetFactory.parseRuleSetNode(RuleSetFactory.java:367) 	at net.sourceforge.pmd.RuleSetFactory.createRuleSet(RuleSetFactory.java:214) 	at net.sourceforge.pmd.RuleSetFactory.createRuleSet(RuleSetFactory.java:209) 	at net.sourceforge.pmd.RuleSetFactory.createRuleSets(RuleSetFactory.java:170) 	at net.sourceforge.pmd.RuleSetFactory.createRuleSets(RuleSetFactory.java:154) 	at net.sourceforge.pmd.RulesetsFactoryUtils.getRuleSets(RulesetsFactoryUtils.java:37) 	at net.sourceforge.pmd.processor.AbstractPMDProcessor.createRuleSets(AbstractPMDProcessor.java:71) 	at net.sourceforge.pmd.processor.AbstractPMDProcessor.processFiles(AbstractPMDProcessor.java:104) 	at net.sourceforge.pmd.PMD.processFiles(PMD.java:311) 	at org.apache.maven.plugins.pmd.PmdReport.processFilesWithPMD(PmdReport.java:503) 	at org.apache.maven.plugins.pmd.PmdReport.executePmd(PmdReport.java:432) 	at org.apache.maven.plugins.pmd.PmdReport.executePmdWithClassloader(PmdReport.java:331) 	at org.apache.maven.plugins.pmd.PmdReport.canGenerateReport(PmdReport.java:305) 	at org.apache.maven.reporting.AbstractMavenReport.execute(AbstractMavenReport.java:120) 	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134) 	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:207) 	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153) 	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145) 	at org.apache.maven.lifecycle.internal.MojoExecutor.executeForkedExecutions(MojoExecutor.java:352) 	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:197) 	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153) 	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145) 	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116) 	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80) 	at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51) 	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128) 	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:307) 	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:193) 	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:106) 	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:863) 	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:288) 	at org.apache.maven.cli.MavenCli.main(MavenCli.java:199) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289) 	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229) 	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415) 	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356) ```","closed","miscellaneous,","romani","2018-03-10T15:54:12Z","2018-05-12T10:25:24Z"
"","5310","minor: removed temporary issues that are closed","I did a search on all issues in our source and looked for ones that were closed and waiting for some fix. The command I used was: `grep -ohr  ""https://github.com/checkstyle/checkstyle/issues/[0-9]*"" ~/opensource/checkstyle --exclude=""releasenotes.xml"" --exclude=""releasenotes_old.xml"" | sort -u -f` Inputs could also be skipped in the search.","closed","","rnveach","2017-12-03T15:47:07Z","2017-12-05T03:25:31Z"
"","5263","TranslationCheck prints violations from previous AbstractFileSetCheck run","I cannot reliably reproduce this in a small case. Most likely it has to do with the random nature that checks are run and this bug requires specific scenario.  When I run checkstyle on itself on one PC, I get weird output on a clean run with no cache file. ```` Starting audit... [ERROR] C:\checkstyleWorkspaceEclipse\checkstyle\src\main\resources\com\puppycrawl\tools\checkstyle\checks\messages_fr.properties:22: Using a static member import should be avoided - org.junit.Assert.assertEquals. [AvoidStaticImport] [ERROR] C:\checkstyleWorkspaceEclipse\checkstyle\src\main\resources\com\puppycrawl\tools\checkstyle\checks\messages_fr.properties:23: Using a static member import should be avoided - org.junit.Assert.assertTrue. [AvoidStaticImport] [ERROR] C:\checkstyleWorkspaceEclipse\checkstyle\src\main\resources\com\puppycrawl\tools\checkstyle\checks\messages_fr.properties:39: Missing a Javadoc comment. [JavadocType] [ERROR] C:\checkstyleWorkspaceEclipse\checkstyle\src\main\resources\com\puppycrawl\tools\checkstyle\checks\messages_fr.properties:39: Type Javadoc comment is missing an null tag. [WriteTag] [ERROR] C:\checkstyleWorkspaceEclipse\checkstyle\src\main\resources\com\puppycrawl\tools\checkstyle\checks\messages_fr.properties:41:5: Missing a Javadoc comment. [JavadocVariable] [ERROR] C:\checkstyleWorkspaceEclipse\checkstyle\src\main\resources\com\puppycrawl\tools\checkstyle\checks\messages_fr.properties:43:5: Missing a Javadoc comment. [JavadocVariable] [ERROR] C:\checkstyleWorkspaceEclipse\checkstyle\src\main\resources\com\puppycrawl\tools\checkstyle\checks\messages_fr.properties:45:5: Missing a Javadoc comment. [JavadocVariable] [ERROR] C:\checkstyleWorkspaceEclipse\checkstyle\src\main\resources\com\puppycrawl\tools\checkstyle\checks\messages_fr.properties:52:5: Missing a Javadoc comment. [JavadocMethod] [ERROR] C:\checkstyleWorkspaceEclipse\checkstyle\src\main\resources\com\puppycrawl\tools\checkstyle\checks\messages_fr.properties:60:5: Missing a Javadoc comment. [JavadocMethod] [ERROR] C:\checkstyleWorkspaceEclipse\checkstyle\src\main\resources\com\puppycrawl\tools\checkstyle\checks\messages_fr.properties:68:13: The String ""/CLASS_DEF[@text='InputXpathQueryGenerator']"" appears 4 times in the file. [MultipleStringLiterals] [ERROR] C:\checkstyleWorkspaceEclipse\checkstyle\src\main\resources\com\puppycrawl\tools\checkstyle\checks\messages_fr.properties:71:22: The String ""Generated queries do not match expected ones"" appears 21 times in the file. [MultipleStringLiterals] [ERROR] C:\checkstyleWorkspaceEclipse\checkstyle\src\main\resources\com\puppycrawl\tools\checkstyle\checks\messages_fr.properties:74:5: Missing a Javadoc comment. [JavadocMethod] [ERROR] C:\checkstyleWorkspaceEclipse\checkstyle\src\main\resources\com\puppycrawl\tools\checkstyle\checks\messages_fr.properties:91:5: Missing a Javadoc comment. [JavadocMethod] [ERROR] C:\checkstyleWorkspaceEclipse\checkstyle\src\main\resources\com\puppycrawl\tools\checkstyle\checks\messages_fr.properties:99:13: The String ""/CLASS_DEF[@text='InputXpathQueryGenerator']/OBJBLOCK"" appears 16 times in the file. [MultipleStringLiterals] [ERROR] C:\checkstyleWorkspaceEclipse\checkstyle\src\main\resources\com\puppycrawl\tools\checkstyle\checks\messages_fr.properties:100:23: The String ""/METHOD_DEF[@text='callSomeMethod']/SLIST/LITERAL_FOR"" appears 4 times in the file. [MultipleStringLiterals] [ERROR] C:\checkstyleWorkspaceEclipse\checkstyle\src\main\resources\com\puppycrawl\tools\checkstyle\checks\messages_fr.properties:114:5: Missing a Javadoc comment. [JavadocMethod] [ERROR] C:\checkstyleWorkspaceEclipse\checkstyle\src\main\resources\com\puppycrawl\tools\checkstyle\checks\messages_fr.properties:122:13: The String ""/CLASS_DEF[@text='InputXpathQueryGenerator']/OBJBLOCK/METHOD_DEF[@text='Label']"" appears 3 times in the file. [MultipleStringLiterals] [ERROR] C:\checkstyleWorkspaceEclipse\checkstyle\src\main\resources\com\puppycrawl\tools\checkstyle\checks\messages_fr.properties:127:5: Missing a Javadoc comment. [JavadocMethod] [ERROR] C:\checkstyleWorkspaceEclipse\checkstyle\src\main\resources\com\puppycrawl\tools\checkstyle\checks\messages_fr.properties:140:5: Missing a Javadoc comment. [JavadocMethod] [ERROR] C:\checkstyleWorkspaceEclipse\checkstyle\src\main\resources\com\puppycrawl\tools\checkstyle\checks\messages_fr.properties:155:5: Missing a Javadoc comment. [JavadocMethod] [ERROR] C:\checkstyleWorkspaceEclipse\checkstyle\src\main\resources\com\puppycrawl\tools\checkstyle\checks\messages_fr.properties:168:5: Missing a Javadoc comment. [JavadocMethod] [ERROR] C:\checkstyleWorkspaceEclipse\checkstyle\src\main\resources\com\puppycrawl\tools\checkstyle\checks\messages_fr.properties:178:5: Missing a Javadoc comment. [JavadocMethod] [ERROR] C:\checkstyleWorkspaceEclipse\checkstyle\src\main\resources\com\puppycrawl\tools\checkstyle\checks\messages_fr.properties:190:5: Missing a Javadoc comment. [JavadocMethod] [ERROR] C:\checkstyleWorkspaceEclipse\checkstyle\src\main\resources\com\puppycrawl\tools\checkstyle\checks\messages_fr.properties:202:5: Missing a Javadoc comment. [JavadocMethod] [ERROR] C:\checkstyleWorkspaceEclipse\checkstyle\src\main\resources\com\puppycrawl\tools\checkstyle\checks\messages_fr.properties:213:23: The String ""/METHOD_DEF[@text='saveUser']/PARAMETERS/PARAMETER_DEF[@text='name']"" appears 3 times in the file. [MultipleStringLiterals] [ERROR] C:\checkstyleWorkspaceEclipse\checkstyle\src\main\resources\com\puppycrawl\tools\checkstyle\checks\messages_fr.properties:223:5: Missing a Javadoc comment. [JavadocMethod] [ERROR] C:\checkstyleWorkspaceEclipse\checkstyle\src\main\resources\com\puppycrawl\tools\checkstyle\checks\messages_fr.properties:236:5: Missing a Javadoc comment. [JavadocMethod] [ERROR] C:\checkstyleWorkspaceEclipse\checkstyle\src\main\resources\com\puppycrawl\tools\checkstyle\checks\messages_fr.properties:251:5: Missing a Javadoc comment. [JavadocMethod] [ERROR] C:\checkstyleWorkspaceEclipse\checkstyle\src\main\resources\com\puppycrawl\tools\checkstyle\checks\messages_fr.properties:260:23: The String ""/METHOD_DEF[@text='callSomeMethod']/SLIST/VARIABLE_DEF[@text='another']"" appears 2 times in the file. [MultipleStringLiterals] [ERROR] C:\checkstyleWorkspaceEclipse\checkstyle\src\main\resources\com\puppycrawl\tools\checkstyle\checks\messages_fr.properties:268:5: Missing a Javadoc comment. [JavadocMethod] [ERROR] C:\checkstyleWorkspaceEclipse\checkstyle\src\main\resources\com\puppycrawl\tools\checkstyle\checks\messages_fr.properties:281:5: Missing a Javadoc comment. [JavadocMethod] [ERROR] C:\checkstyleWorkspaceEclipse\checkstyle\src\main\resources\com\puppycrawl\tools\checkstyle\checks\messages_fr.properties:296:5: Missing a Javadoc comment. [JavadocMethod] [ERROR] C:\checkstyleWorkspaceEclipse\checkstyle\src\main\resources\com\puppycrawl\tools\checkstyle\checks\messages_fr.properties:308:5: Missing a Javadoc comment. [JavadocMethod] [ERROR] C:\checkstyleWorkspaceEclipse\checkstyle\src\main\resources\com\puppycrawl\tools\checkstyle\checks\messages_fr.properties:320:5: Missing a Javadoc comment. [JavadocMethod] [ERROR] C:\checkstyleWorkspaceEclipse\checkstyle\src\main\resources\com\puppycrawl\tools\checkstyle\checks\messages_fr.properties:322:48: The String ""InputXpathQueryGeneratorTabWidth.java"" appears 4 times in the file. [MultipleStringLiterals] [ERROR] C:\checkstyleWorkspaceEclipse\checkstyle\src\main\resources\com\puppycrawl\tools\checkstyle\checks\messages_fr.properties:333:17: The String ""/CLASS_DEF[@text='InputXpathQueryGeneratorTabWidth']/OBJBLOCK"" appears 7 times in the file. [MultipleStringLiterals] [ERROR] C:\checkstyleWorkspaceEclipse\checkstyle\src\main\resources\com\puppycrawl\tools\checkstyle\checks\messages_fr.properties:342:5: Missing a Javadoc comment. [JavadocMethod] [ERROR] C:\checkstyleWorkspaceEclipse\checkstyle\src\main\resources\com\puppycrawl\tools\checkstyle\checks\messages_fr.properties:362:5: Missing a Javadoc comment. [JavadocMethod] [ERROR] C:\checkstyleWorkspaceEclipse\checkstyle\src\main\resources\com\puppycrawl\tools\checkstyle\checks\messages_fr.properties:380:5: Missing a Javadoc comment. [JavadocMethod] Audit done. Checkstyle ends with 39 errors. ````  The problem occurs under these conditions: 1) 2 checks must be defined in the configuration. One check must be TranslationCheck, doesn't matter what the other is as long as it produces a violation. 2) The files to be run must be in the order of any type of file that produces a violation by the first check, and a property file. 3) In Checker, TranslationCheck must be executed first followed by the check that produces a violation.  When this occurs, TranslationCheck leaks the violations when the `finishProcessing` method is run from the previous Check and assigns those violations under the File name TranslationCheck is using.  Code to prove my case: When a check is run and finished, we grab the violations and return them to the caller. https://github.com/checkstyle/checkstyle/blob/master/src/main/java/com/puppycrawl/tools/checkstyle/api/AbstractFileSetCheck.java#L77-L84 The problem is we don't erase the field `MESSAGE_COLLECTOR` after this method is run. We expect a 2nd method call to erase the list, but if it is never run, the list is kept populated. [When `finishProcessing` is called for TranslationCheck](https://github.com/checkstyle/checkstyle/blob/master/src/main/java/com/puppycrawl/tools/checkstyle/Checker.java#L219), [it always calls `fireErrors` regardless if errors were generated or not](https://github.com/checkstyle/checkstyle/blob/master/src/main/java/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java#L466). But we never produced any new violations or cleared out the list from the last run, so we leak violations from the previous `process` call and reprint them under the `TranslationCheck` file it is examining. This doesn't leak more violations because we clear the violation list after the first call to `fireErrors`. https://github.com/checkstyle/checkstyle/blob/master/src/main/java/com/puppycrawl/tools/checkstyle/api/AbstractFileSetCheck.java#L174-L177","closed","approved,","rnveach","2017-11-14T14:20:01Z","2017-11-18T01:43:32Z"
"","5365","Unable to build project","I am unable to build project on MacOS. Here are the error logs.","closed","","shashvat-kedia","2017-12-18T05:36:37Z","2017-12-19T10:38:44Z"
"","5940","ClassTypeParameterName for google","I am pretty sure that  ```   ... ``` mentioned [here](https://github.com/search?q=path%3Asrc%2Fmain%2Fresources+filename%3Agoogle_checks.xml+repo%3Acheckstyle%2Fcheckstyle+ClassTypeParameterName) most likely should be ```   ... ```  Else names like 892aZeT  would be valid.  And I think it's rather meant to be either   - Single capital letter A-Z  - Single capital letter followed by a single number T0, R4, ...  - Single capital letter, anything goes middle ending with a Capital T:  Asdf88T, Zdfs22T ,...","closed","","CySlider","2018-06-16T21:13:44Z","2018-06-26T06:01:51Z"
"","5333","renaming in TokenTypes","I always hated such names: http://checkstyle.sourceforge.net/apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#OBJBLOCK http://checkstyle.sourceforge.net/apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#SLIST EMPTY_STAT LABELED_STAT  it is better to rename them to: OBJ_BLOCK or OBJECT_BLOCK STATEMENT_LIST EMPTY_STATEMENT LABELED_STATEMENT  it is better to provide examples of AST for all of them.","closed","","romani","2017-12-08T01:58:00Z","2017-12-08T13:28:06Z"
"","5444","Review, move or delete all feature requests from sourceforge issue tracker","I already forget about this postponed step of migration from sourceforge to github. So, I put it as task ...  review https://sourceforge.net/p/checkstyle/feature-requests/?source=navbar  if some feature requests are done - close ticket. if description unclear - close ticket with link to github to open to open new request with better description. if agree with request - just copy all required descriptions/comments to github. If requrst is clear but it will not happen .... - close SF ticket.","open","approved,","romani","2018-01-07T16:36:14Z","2018-01-07T16:36:14Z"
"","5367","Java 9 Multi-release JARs","https://www.javaworld.com/article/3184029/java-language/java-9s-other-new-enhancements-part-4-multi-release-jar-files.html  https://blog.jetbrains.com/idea/2017/10/creating-multi-release-jar-files-in-intellij-idea/  > a library developer can release a single JAR file that: > If you’re running it on Java 9, uses Java 9 features and functionality > If you’re running it on a version before Java 9, you get the pre-Java-9 implementation  When we become Java 9 compliant, we should look into using multi-release JARs. Duplicating the same code between 2 different Java languages in the future can not only allow users to downgrade our utility without problems until they are ready to commit to the new version, it will also allow us to run our Java checks on old and new Java languages at the same time.  Most likely any duplicated code would have to be moved to utility classes.  This must wait on https://github.com/checkstyle/checkstyle/issues/5102 being completed first.","open","","rnveach","2017-12-19T16:51:50Z","2017-12-19T16:51:50Z"
"","5985","ClassNotFoundException: com.puppycrawl.tools.checkstyle.utils.TokenUtils","https://travis-ci.org/checkstyle/checkstyle/jobs/398621943#L941  ``` [ERROR] Failed to execute goal org.apache.maven.plugins:maven-checkstyle-plugin:3.0.0:check (sevntu-checkstyle-check) on project checkstyle: Failed during checkstyle configuration: cannot initialize module TreeWalker - Cannot set property 'blockTypes' to 'LITERAL_IF,LITERAL_ELSE,LITERAL_WHILE,LITERAL_DO,                              LITERAL_FOR,LITERAL_SWITCH,LITERAL_TRY,LITERAL_CATCH' in module ChildBlockLength: InvocationTargetException: com/puppycrawl/tools/checkstyle/utils/TokenUtils: com.puppycrawl.tools.checkstyle.utils.TokenUtils -> [Help 1] org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.maven.plugins:maven-checkstyle-plugin:3.0.0:check (sevntu-checkstyle-check) on project checkstyle: Failed during checkstyle configuration 	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:212) 	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153) 	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145) 	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116) 	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80) 	at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51) 	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128) 	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:307) 	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:193) 	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:106) 	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:863) 	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:288) 	at org.apache.maven.cli.MavenCli.main(MavenCli.java:199) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289) 	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229) 	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415) 	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356) Caused by: org.apache.maven.plugin.MojoExecutionException: Failed during checkstyle configuration 	at org.apache.maven.plugins.checkstyle.CheckstyleViolationCheckMojo.execute(CheckstyleViolationCheckMojo.java:534) 	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134) 	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:207) 	... 20 more Caused by: com.puppycrawl.tools.checkstyle.api.CheckstyleException: cannot initialize module TreeWalker - Cannot set property 'blockTypes' to 'LITERAL_IF,LITERAL_ELSE,LITERAL_WHILE,LITERAL_DO,                              LITERAL_FOR,LITERAL_SWITCH,LITERAL_TRY,LITERAL_CATCH' in module ChildBlockLength 	at com.puppycrawl.tools.checkstyle.Checker.setupChild(Checker.java:460) 	at com.puppycrawl.tools.checkstyle.api.AutomaticBean.configure(AutomaticBean.java:198) 	at org.apache.maven.plugins.checkstyle.exec.DefaultCheckstyleExecutor.executeCheckstyle(DefaultCheckstyleExecutor.java:214) 	at org.apache.maven.plugins.checkstyle.CheckstyleViolationCheckMojo.execute(CheckstyleViolationCheckMojo.java:529) 	... 22 more Caused by: com.puppycrawl.tools.checkstyle.api.CheckstyleException: Cannot set property 'blockTypes' to 'LITERAL_IF,LITERAL_ELSE,LITERAL_WHILE,LITERAL_DO,                              LITERAL_FOR,LITERAL_SWITCH,LITERAL_TRY,LITERAL_CATCH' in module ChildBlockLength 	at com.puppycrawl.tools.checkstyle.api.AutomaticBean.tryCopyProperty(AutomaticBean.java:238) 	at com.puppycrawl.tools.checkstyle.api.AutomaticBean.configure(AutomaticBean.java:191) 	at com.puppycrawl.tools.checkstyle.TreeWalker.setupChild(TreeWalker.java:155) 	at com.puppycrawl.tools.checkstyle.api.AutomaticBean.configure(AutomaticBean.java:198) 	at com.puppycrawl.tools.checkstyle.Checker.setupChild(Checker.java:455) 	... 25 more Caused by: java.lang.reflect.InvocationTargetException 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.apache.commons.beanutils.PropertyUtilsBean.invokeMethod(PropertyUtilsBean.java:2127) 	at org.apache.commons.beanutils.PropertyUtilsBean.setSimpleProperty(PropertyUtilsBean.java:2108) 	at org.apache.commons.beanutils.BeanUtilsBean.copyProperty(BeanUtilsBean.java:437) 	at com.puppycrawl.tools.checkstyle.api.AutomaticBean.tryCopyProperty(AutomaticBean.java:228) 	... 29 more Caused by: java.lang.NoClassDefFoundError: com/puppycrawl/tools/checkstyle/utils/TokenUtils 	at com.github.sevntu.checkstyle.checks.design.ChildBlockLengthCheck.setBlockTypes(ChildBlockLengthCheck.java:104) 	... 37 more Caused by: java.lang.ClassNotFoundException: com.puppycrawl.tools.checkstyle.utils.TokenUtils 	at org.codehaus.plexus.classworlds.strategy.SelfFirstStrategy.loadClass(SelfFirstStrategy.java:50) 	at org.codehaus.plexus.classworlds.realm.ClassRealm.unsynchronizedLoadClass(ClassRealm.java:271) 	at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClass(ClassRealm.java:247) 	at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClass(ClassRealm.java:239) 	... 38 more [ERROR]  [ERROR]  [ERROR] For more information about the errors and possible solutions, please read the following articles: [ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException ```","closed","","romani","2018-06-30T21:29:40Z","2018-07-01T01:13:32Z"
"","5782","config: bump saxon to 9.8.0-12","https://travis-ci.org/checkstyle/checkstyle/jobs/376970775#L1191","closed","","romani","2018-05-09T19:54:26Z","2018-05-09T22:48:41Z"
"","5781","config: bump system-rules to 1.17.2","https://travis-ci.org/checkstyle/checkstyle/jobs/376970775#L1177","closed","","romani","2018-05-09T19:51:57Z","2018-05-09T22:48:52Z"
"","5713","config: bump xml-maven-plugin 1.0.2","https://travis-ci.org/checkstyle/checkstyle/jobs/365264327#L3461","closed","","romani","2018-04-11T21:51:19Z","2018-04-17T06:36:43Z"
"","5714","Surefire and failsafe to 2.21.0","https://travis-ci.org/checkstyle/checkstyle/jobs/365264327#L3421","closed","","romani","2018-04-11T22:02:46Z","2018-04-12T12:15:52Z"
"","5717","config: bump forbiddenapis to 2.5","https://travis-ci.org/checkstyle/checkstyle/jobs/365264327#L3409","closed","","romani","2018-04-11T22:20:13Z","2018-04-12T12:15:01Z"
"","5715","Jar and Shade plugin version bumps","https://travis-ci.org/checkstyle/checkstyle/jobs/365264327#L3396","closed","","romani","2018-04-11T22:08:10Z","2018-04-12T12:15:28Z"
"","5716","config: bump maven-dependency-plugin to 3.1.0","https://travis-ci.org/checkstyle/checkstyle/jobs/365264327#L3383","closed","","romani","2018-04-11T22:12:02Z","2018-04-12T12:12:14Z"
"","5712","config: bump saxon to 9.8.0-11","https://travis-ci.org/checkstyle/checkstyle/jobs/365264327#L3370","closed","","romani","2018-04-11T20:48:24Z","2018-04-12T12:16:09Z"
"","5158","unstable SuppressionFilterTest.isConnectionAvailableAndStable on Travis and Appveyor","https://travis-ci.org/checkstyle/checkstyle/jobs/280868014#L1093 https://ci.appveyor.com/project/Checkstyle/checkstyle/build/9933/job/fay625bycasg6w2t#L638  from travis: ``` [ERROR] Tests run: 10, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 260.417 s","closed","miscellaneous,","romani","2017-09-28T14:00:15Z","2019-03-10T22:28:53Z"
"","5086","Travis failing to execute some item on trusty instances","https://travis-ci.org/checkstyle/checkstyle/jobs/272702074  randomly killed process during download for maven artifacts, no error printed: ``` Downloaded: https://repo.maven.apache.org/maven2/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar (562 KB at 412.6 KB/sec) Downloaded: https://repo.maven.apache.org/maven2/net/sourceforge/saxon/saxon/9.1.0.8/saxon-9.1.0.8.jar (4929 KB at 3613.1 KB/sec) ```","closed","miscellaneous,","romani","2017-09-07T13:38:52Z","2017-09-08T00:57:37Z"
"","5990","problem with Distelli CI executons","https://pipelines.puppet.com/checkstyle/builds/418540  ```   Reseting git sources to commit 'c3591e6f0f84827586db25abded6708e5386ef1a'     HEAD is now at c3591e6 Updated Instructions     /build/contribution/checkstyle-tester     nbia-dcm4che-tools is synchronized          Running 'mvn clean' on src/main/java ... [31;1m    Java HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=192m; support was removed in 8.0 [0m    [INFO] Scanning for projects...     [INFO]                                                                              [INFO] ------------------------------------------------------------------------     [INFO] Building sample 0.0.1-SNAPSHOT     [INFO] ------------------------------------------------------------------------     [INFO] Downloading: .......gin-2.5.jar (25 KB at 414.8 KB/sec)     [INFO]      [INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ sample ---     [INFO] Downloading: ........ KB at 2830.4 KB/sec)     [INFO] ------------------------------------------------------------------------     [INFO] BUILD SUCCESS     [INFO] ------------------------------------------------------------------------     [INFO] Total time: 1.996 s     [INFO] Finished at: 2018-07-01T21:19:37+00:00     [INFO] Final Memory: 13M/275M     [INFO] ------------------------------------------------------------------------     Running Checkstyle on src/main/java ... with excludes ,,**/pmd/pmd-java/src/test/**/*,,**/apache-ant/src/tests/**/*,**/apache-ant/src/etc/testcases/,**/spotbugs-with-excldues/eclipsePlugin-test/**/*,**/spotbugs-with-excldues/spotbugsTestCases/**/*,**/spotbugs-with-excldues/JSR305-testCases/**/*, [31;1m    Java HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=192m; support was removed in 8.0 [0m    [INFO] Error stacktraces are turned on.     [INFO] Scanning for projects...     [INFO]                                                                              [INFO] ------------------------------------------------------------------------     [INFO] Building sample 0.0.1-SNAPSHOT     [INFO] ------------------------------------------------------------------------ ....     [INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-site-plugin/3.3/maven-site-plugin-3.3.jar (122 KB at 1812.6 KB/sec)     [INFO]      [INFO] --- maven-site-plugin:3.3:site (default-site) @ sample ---     [INFO] Downloading: http://sevntu-checkstyle.github.com/sevntu.checkstyle/maven2/org/apache/maven/reporting/maven-reporting-exec/1.1/maven-reporting-exec-1.1.pom .......     [INFO] Downloaded: https://repo.maven.apache.org/maven2/commons-collections/commons-collections/3.1/commons-collections-3.1.jar (547 KB at 5462.6 KB/sec)     [WARNING] Report plugin org.apache.maven.plugins:maven-project-info-reports-plugin has an empty version.     [WARNING]      [WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.     [WARNING]      [WARNING] For this reason, future Maven versions might no longer support building such malformed projects.     [INFO] Downloading: http://sevntu-checkstyle.github.com/sevntu.checkstyle/maven2/org/apache/maven/plugins/maven-project-info-reports-plugin/maven-metadata.xml ...     [INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/commons/commons-lang3/3.5/commons-lang3-3.5.jar (469 KB at 2120.5 KB/sec)     [INFO] Downloaded: https://repo.maven.apache.org/maven2/commons-beanutils/commons-beanutils/1.9.2/commons-beanutils-1.9.2.jar (229 KB at 1010.5 KB/sec)     [INFO] Downloaded: https://repo.maven.apache.org/maven2/org/jsoup/jsoup/1.11.2/jsoup-1.11.2.jar (384 KB at 1479.4 KB/sec)     [WARNING] Error injecting: org.apache.maven.report.projectinfo.CiManagementReport     java.lang.NoClassDefFoundError: org/apache/maven/doxia/siterenderer/DocumentContent     	at java.lang.Class.getDeclaredConstructors0(Native Method)     	at java.lang.Class.privateGetDeclaredConstructors(Class.java:2671)     	at java.lang.Class.getDeclaredConstructors(Class.java:2020)     	at com.google.inject.spi.InjectionPoint.forConstructorOf(InjectionPoint.java:245)     	at com.google.inject.internal.ConstructorBindingImpl.create(ConstructorBindingImpl.java:99)     	at com.google.inject.internal.InjectorImpl.createUninitializedBinding(InjectorImpl.java:657)     	at com.google.inject.internal.InjectorImpl.createJustInTimeBinding(InjectorImpl.java:875)     	at com.google.inject.internal.InjectorImpl.createJustInTimeBindingRecursive(InjectorImpl.java:798)     	at com.google.inject.internal.InjectorImpl.getJustInTimeBinding(InjectorImpl.java:281)     	at com.google.inject.internal.InjectorImpl.getBindingOrThrow(InjectorImpl.java:213)     	at com.google.inject.internal.InjectorImpl.getProviderOrThrow(InjectorImpl.java:998)     	at com.google.inject.internal.InjectorImpl.getProvider(InjectorImpl.java:1031)     	at com.google.inject.internal.InjectorImpl.getProvider(InjectorImpl.java:994)     	at com.google.inject.internal.InjectorImpl.getInstance(InjectorImpl.java:1044)     	at org.eclipse.sisu.space.AbstractDeferredClass.get(AbstractDeferredClass.java:48)     	at com.google.inject.internal.ProviderInternalFactory.provision(ProviderInternalFactory.java:86)     	at com.google.inject.internal.InternalFactoryToInitializableAdapter.provision(InternalFactoryToInitializableAdapter.java:54)     	at com.google.inject.internal.ProviderInternalFactory$1.call(ProviderInternalFactory.java:70)     	at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:113)     	at org.eclipse.sisu.bean.BeanScheduler$Activator.onProvision(BeanScheduler.java:176)     	at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:122)     	at com.google.inject.internal.ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:68)     	at com.google.inject.internal.ProviderInternalFactory.circularGet(ProviderInternalFactory.java:68)     	at com.google.inject.internal.InternalFactoryToInitializableAdapter.get(InternalFactoryToInitializableAdapter.java:46)     	at com.google.inject.internal.InjectorImpl$2$1.call(InjectorImpl.java:1009)     	at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:1059)     	at com.google.inject.internal.InjectorImpl$2.get(InjectorImpl.java:1005)     	at com.google.inject.Scopes$1$1.get(Scopes.java:59)     	at org.eclipse.sisu.inject.LazyBeanEntry.getValue(LazyBeanEntry.java:82)     	at org.eclipse.sisu.plexus.LazyPlexusBean.getValue(LazyPlexusBean.java:51)     	at org.codehaus.plexus.DefaultPlexusContainer.lookup(DefaultPlexusContainer.java:263)     	at org.codehaus.plexus.DefaultPlexusContainer.lookup(DefaultPlexusContainer.java:255)     	at org.apache.maven.plugin.internal.DefaultMavenPluginManager.getConfiguredMojo(DefaultMavenPluginManager.java:464)     	at org.apache.maven.reporting.exec.DefaultMavenReportExecutor.getConfiguredMavenReport(DefaultMavenReportExecutor.java:306)     	at org.apache.maven.reporting.exec.DefaultMavenReportExecutor.buildReportPlugin(DefaultMavenReportExecutor.java:263)     	at org.apache.maven.reporting.exec.DefaultMavenReportExecutor.buildMavenReports(DefaultMavenReportExecutor.java:154)     	at org.apache.maven.plugins.site.AbstractSiteRenderingMojo.getReports(AbstractSiteRenderingMojo.java:235)     	at org.apache.maven.plugins.site.SiteMojo.execute(SiteMojo.java:121)     	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:132)     	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)     	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)     	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)     	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)     	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)     	at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)     	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:120)     	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:355)     	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:155)     	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:584)     	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:216)     	at org.apache.maven.cli.MavenCli.main(MavenCli.java:160)     	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)     	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     	at java.lang.reflect.Method.invoke(Method.java:497)     	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)     	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)     	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)     	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)     Caused by: java.lang.ClassNotFoundException: org.apache.maven.doxia.siterenderer.DocumentContent     	at org.codehaus.plexus.classworlds.strategy.SelfFirstStrategy.loadClass(SelfFirstStrategy.java:50)     	at org.codehaus.plexus.classworlds.realm.ClassRealm.unsynchronizedLoadClass(ClassRealm.java:271)     	at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClass(ClassRealm.java:247)     	at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClass(ClassRealm.java:239)     	... 59 more     [INFO] ------------------------------------------------------------------------     [INFO] BUILD FAILURE     [INFO] ------------------------------------------------------------------------     [INFO] Total time: 17.930 s     [INFO] Finished at: 2018-07-01T21:19:57+00:00     [INFO] Final Memory: 26M/241M     [INFO] ------------------------------------------------------------------------     [ERROR] Failed to execute goal org.apache.maven.plugins:maven-site-plugin:3.3:site (default-site) on project sample: Execution default-site of goal org.apache.maven.plugins:maven-site-plugin:3.3:site failed: A required class was missing while executing org.apache.maven.plugins:maven-site-plugin:3.3:site: org/apache/maven/doxia/siterenderer/DocumentContent     [ERROR] -----------------------------------------------------     [ERROR] realm =    plugin>org.apache.maven.plugins:maven-site-plugin:3.3     [ERROR] strategy = org.codehaus.plexus.classworlds.strategy.SelfFirstStrategy     [ERROR] urls[0] = file:/home/distelli/.m2/repository/org/apache/maven/plugins/maven-site-plugin/3.3/maven-site-plugin-3.3.jar     [ERROR] urls[1] = file:/home/distelli/.m2/repository/org/apache/maven/reporting/maven-reporting-exec/1.1/maven-reporting-exec-1.1.jar     [ERROR] urls[2] = file:/home/distelli/.m2/repository/org/apache/maven/reporting/maven-reporting-api/3.0/maven-reporting-api-3.0.jar     [ERROR] urls[3] = file:/home/distelli/.m2/repository/org/apache/maven/shared/maven-shared-utils/0.3/maven-shared-utils-0.3.jar     [ERROR] urls[4] = file:/home/distelli/.m2/repository/com/google/code/findbugs/jsr305/2.0.1/jsr305-2.0.1.jar     [ERROR] urls[5] = file:/home/distelli/.m2/repository/org/codehaus/plexus/plexus-component-annotations/1.5.5/plexus-component-annotations-1.5.5.jar     [ERROR] urls[6] = file:/home/distelli/.m2/repository/org/sonatype/aether/aether-util/1.7/aether-util-1.7.jar     [ERROR] urls[7] = file:/home/distelli/.m2/repository/org/eclipse/aether/aether-util/0.9.0.M2/aether-util-0.9.0.M2.jar     [ERROR] urls[8] = file:/home/distelli/.m2/repository/org/sonatype/sisu/sisu-inject-bean/1.4.2/sisu-inject-bean-1.4.2.jar     [ERROR] urls[9] = file:/home/distelli/.m2/repository/org/sonatype/sisu/sisu-guice/2.1.7/sisu-guice-2.1.7-noaop.jar     [ERROR] urls[10] = file:/home/distelli/.m2/repository/org/codehaus/plexus/plexus-interpolation/1.14/plexus-interpolation-1.14.jar     [ERROR] urls[11] = file:/home/distelli/.m2/repository/org/sonatype/plexus/plexus-sec-dispatcher/1.3/plexus-sec-dispatcher-1.3.jar     [ERROR] urls[12] = file:/home/distelli/.m2/repository/org/sonatype/plexus/plexus-cipher/1.4/plexus-cipher-1.4.jar     [ERROR] urls[13] = file:/home/distelli/.m2/repository/org/apache/maven/maven-archiver/2.4.2/maven-archiver-2.4.2.jar     [ERROR] urls[14] = file:/home/distelli/.m2/repository/org/apache/maven/doxia/doxia-sink-api/1.4/doxia-sink-api-1.4.jar     [ERROR] urls[15] = file:/home/distelli/.m2/repository/org/apache/maven/doxia/doxia-logging-api/1.4/doxia-logging-api-1.4.jar     [ERROR] urls[16] = file:/home/distelli/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar     [ERROR] urls[17] = file:/home/distelli/.m2/repository/org/apache/maven/doxia/doxia-core/1.4/doxia-core-1.4.jar     [ERROR] urls[18] = file:/home/distelli/.m2/repository/xerces/xercesImpl/2.9.1/xercesImpl-2.9.1.jar     [ERROR] urls[19] = file:/home/distelli/.m2/repository/xml-apis/xml-apis/1.3.04/xml-apis-1.3.04.jar     [ERROR] urls[20] = file:/home/distelli/.m2/repository/org/apache/httpcomponents/httpclient/4.0.2/httpclient-4.0.2.jar     [ERROR] urls[21] = file:/home/distelli/.m2/repository/commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jar     [ERROR] urls[22] = file:/home/distelli/.m2/repository/commons-codec/commons-codec/1.3/commons-codec-1.3.jar     [ERROR] urls[23] = file:/home/distelli/.m2/repository/org/apache/httpcomponents/httpcore/4.0.1/httpcore-4.0.1.jar     [ERROR] urls[24] = file:/home/distelli/.m2/repository/org/apache/maven/doxia/doxia-module-xhtml/1.4/doxia-module-xhtml-1.4.jar     [ERROR] urls[25] = file:/home/distelli/.m2/repository/org/apache/maven/doxia/doxia-module-apt/1.4/doxia-module-apt-1.4.jar     [ERROR] urls[26] = file:/home/distelli/.m2/repository/org/apache/maven/doxia/doxia-module-xdoc/1.4/doxia-module-xdoc-1.4.jar     [ERROR] urls[27] = file:/home/distelli/.m2/repository/org/apache/maven/doxia/doxia-module-fml/1.4/doxia-module-fml-1.4.jar     [ERROR] urls[28] = file:/home/distelli/.m2/repository/org/apache/maven/doxia/doxia-module-markdown/1.4/doxia-module-markdown-1.4.jar     [ERROR] urls[29] = file:/home/distelli/.m2/repository/org/pegdown/pegdown/1.2.1/pegdown-1.2.1.jar     [ERROR] urls[30] = file:/home/distelli/.m2/repository/org/parboiled/parboiled-java/1.1.4/parboiled-java-1.1.4.jar     [ERROR] urls[31] = file:/home/distelli/.m2/repository/org/parboiled/parboiled-core/1.1.4/parboiled-core-1.1.4.jar     [ERROR] urls[32] = file:/home/distelli/.m2/repository/org/ow2/asm/asm/4.1/asm-4.1.jar     [ERROR] urls[33] = file:/home/distelli/.m2/repository/org/ow2/asm/asm-tree/4.1/asm-tree-4.1.jar     [ERROR] urls[34] = file:/home/distelli/.m2/repository/org/ow2/asm/asm-analysis/4.1/asm-analysis-4.1.jar     [ERROR] urls[35] = file:/home/distelli/.m2/repository/org/ow2/asm/asm-util/4.1/asm-util-4.1.jar     [ERROR] urls[36] = file:/home/distelli/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar     [ERROR] urls[37] = file:/home/distelli/.m2/repository/org/apache/maven/doxia/doxia-decoration-model/1.4/doxia-decoration-model-1.4.jar     [ERROR] urls[38] = file:/home/distelli/.m2/repository/org/apache/maven/doxia/doxia-site-renderer/1.4/doxia-site-renderer-1.4.jar     [ERROR] urls[39] = file:/home/distelli/.m2/repository/org/apache/velocity/velocity-tools/2.0/velocity-tools-2.0.jar     [ERROR] urls[40] = file:/home/distelli/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar     [ERROR] urls[41] = file:/home/distelli/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar     [ERROR] urls[42] = file:/home/distelli/.m2/repository/commons-chain/commons-chain/1.1/commons-chain-1.1.jar     [ERROR] urls[43] = file:/home/distelli/.m2/repository/commons-validator/commons-validator/1.3.1/commons-validator-1.3.1.jar     [ERROR] urls[44] = file:/home/distelli/.m2/repository/dom4j/dom4j/1.1/dom4j-1.1.jar     [ERROR] urls[45] = file:/home/distelli/.m2/repository/sslext/sslext/1.2-0/sslext-1.2-0.jar     [ERROR] urls[46] = file:/home/distelli/.m2/repository/org/apache/struts/struts-core/1.3.8/struts-core-1.3.8.jar     [ERROR] urls[47] = file:/home/distelli/.m2/repository/antlr/antlr/2.7.2/antlr-2.7.2.jar     [ERROR] urls[48] = file:/home/distelli/.m2/repository/org/apache/struts/struts-taglib/1.3.8/struts-taglib-1.3.8.jar     [ERROR] urls[49] = file:/home/distelli/.m2/repository/org/apache/struts/struts-tiles/1.3.8/struts-tiles-1.3.8.jar     [ERROR] urls[50] = file:/home/distelli/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar     [ERROR] urls[51] = file:/home/distelli/.m2/repository/org/apache/maven/doxia/doxia-integration-tools/1.5/doxia-integration-tools-1.5.jar     [ERROR] urls[52] = file:/home/distelli/.m2/repository/org/codehaus/plexus/plexus-archiver/1.0/plexus-archiver-1.0.jar     [ERROR] urls[53] = file:/home/distelli/.m2/repository/org/codehaus/plexus/plexus-io/1.0/plexus-io-1.0.jar     [ERROR] urls[54] = file:/home/distelli/.m2/repository/org/codehaus/plexus/plexus-i18n/1.0-beta-7/plexus-i18n-1.0-beta-7.jar     [ERROR] urls[55] = file:/home/distelli/.m2/repository/org/apache/velocity/velocity/1.5/velocity-1.5.jar     [ERROR] urls[56] = file:/home/distelli/.m2/repository/oro/oro/2.0.8/oro-2.0.8.jar     [ERROR] urls[57] = file:/home/distelli/.m2/repository/org/codehaus/plexus/plexus-velocity/1.1.8/plexus-velocity-1.1.8.jar     [ERROR] urls[58] = file:/home/distelli/.m2/repository/org/codehaus/plexus/plexus-utils/1.5.10/plexus-utils-1.5.10.jar     [ERROR] urls[59] = file:/home/distelli/.m2/repository/org/mortbay/jetty/jetty/6.1.25/jetty-6.1.25.jar     [ERROR] urls[60] = file:/home/distelli/.m2/repository/org/mortbay/jetty/servlet-api/2.5-20081211/servlet-api-2.5-20081211.jar     [ERROR] urls[61] = file:/home/distelli/.m2/repository/org/mortbay/jetty/jetty-util/6.1.25/jetty-util-6.1.25.jar     [ERROR] urls[62] = file:/home/distelli/.m2/repository/commons-lang/commons-lang/2.5/commons-lang-2.5.jar     [ERROR] urls[63] = file:/home/distelli/.m2/repository/commons-io/commons-io/1.4/commons-io-1.4.jar     [ERROR] Number of foreign imports: 1     [ERROR] import: Entry[import  from realm ClassRealm[maven.api, parent: null]]     [ERROR]      [ERROR] -----------------------------------------------------: org.apache.maven.doxia.siterenderer.DocumentContent     [ERROR] -> [Help 1]     org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.maven.plugins:maven-site-plugin:3.3:site (default-site) on project sample: Execution default-site of goal org.apache.maven.plugins:maven-site-plugin:3.3:site failed: A required class was missing while executing org.apache.maven.plugins:maven-site-plugin:3.3:site: org/apache/maven/doxia/siterenderer/DocumentContent     -----------------------------------------------------     realm =    plugin>org.apache.maven.plugins:maven-site-plugin:3.3     strategy = org.codehaus.plexus.classworlds.strategy.SelfFirstStrategy     urls[0] = file:/home/distelli/.m2/repository/org/apache/maven/plugins/maven-site-plugin/3.3/maven-site-plugin-3.3.jar     urls[1] = file:/home/distelli/.m2/repository/org/apache/maven/reporting/maven-reporting-exec/1.1/maven-reporting-exec-1.1.jar     urls[2] = file:/home/distelli/.m2/repository/org/apache/maven/reporting/maven-reporting-api/3.0/maven-reporting-api-3.0.jar     urls[3] = file:/home/distelli/.m2/repository/org/apache/maven/shared/maven-shared-utils/0.3/maven-shared-utils-0.3.jar     urls[4] = file:/home/distelli/.m2/repository/com/google/code/findbugs/jsr305/2.0.1/jsr305-2.0.1.jar     urls[5] = file:/home/distelli/.m2/repository/org/codehaus/plexus/plexus-component-annotations/1.5.5/plexus-component-annotations-1.5.5.jar     urls[6] = file:/home/distelli/.m2/repository/org/sonatype/aether/aether-util/1.7/aether-util-1.7.jar     urls[7] = file:/home/distelli/.m2/repository/org/eclipse/aether/aether-util/0.9.0.M2/aether-util-0.9.0.M2.jar     urls[8] = file:/home/distelli/.m2/repository/org/sonatype/sisu/sisu-inject-bean/1.4.2/sisu-inject-bean-1.4.2.jar     urls[9] = file:/home/distelli/.m2/repository/org/sonatype/sisu/sisu-guice/2.1.7/sisu-guice-2.1.7-noaop.jar     urls[10] = file:/home/distelli/.m2/repository/org/codehaus/plexus/plexus-interpolation/1.14/plexus-interpolation-1.14.jar     urls[11] = file:/home/distelli/.m2/repository/org/sonatype/plexus/plexus-sec-dispatcher/1.3/plexus-sec-dispatcher-1.3.jar     urls[12] = file:/home/distelli/.m2/repository/org/sonatype/plexus/plexus-cipher/1.4/plexus-cipher-1.4.jar     urls[13] = file:/home/distelli/.m2/repository/org/apache/maven/maven-archiver/2.4.2/maven-archiver-2.4.2.jar     urls[14] = file:/home/distelli/.m2/repository/org/apache/maven/doxia/doxia-sink-api/1.4/doxia-sink-api-1.4.jar     urls[15] = file:/home/distelli/.m2/repository/org/apache/maven/doxia/doxia-logging-api/1.4/doxia-logging-api-1.4.jar     urls[16] = file:/home/distelli/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar     urls[17] = file:/home/distelli/.m2/repository/org/apache/maven/doxia/doxia-core/1.4/doxia-core-1.4.jar     urls[18] = file:/home/distelli/.m2/repository/xerces/xercesImpl/2.9.1/xercesImpl-2.9.1.jar     urls[19] = file:/home/distelli/.m2/repository/xml-apis/xml-apis/1.3.04/xml-apis-1.3.04.jar     urls[20] = file:/home/distelli/.m2/repository/org/apache/httpcomponents/httpclient/4.0.2/httpclient-4.0.2.jar     urls[21] = file:/home/distelli/.m2/repository/commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jar     urls[22] = file:/home/distelli/.m2/repository/commons-codec/commons-codec/1.3/commons-codec-1.3.jar     urls[23] = file:/home/distelli/.m2/repository/org/apache/httpcomponents/httpcore/4.0.1/httpcore-4.0.1.jar     urls[24] = file:/home/distelli/.m2/repository/org/apache/maven/doxia/doxia-module-xhtml/1.4/doxia-module-xhtml-1.4.jar     urls[25] = file:/home/distelli/.m2/repository/org/apache/maven/doxia/doxia-module-apt/1.4/doxia-module-apt-1.4.jar     urls[26] = file:/home/distelli/.m2/repository/org/apache/maven/doxia/doxia-module-xdoc/1.4/doxia-module-xdoc-1.4.jar     urls[27] = file:/home/distelli/.m2/repository/org/apache/maven/doxia/doxia-module-fml/1.4/doxia-module-fml-1.4.jar     urls[28] = file:/home/distelli/.m2/repository/org/apache/maven/doxia/doxia-module-markdown/1.4/doxia-module-markdown-1.4.jar     urls[29] = file:/home/distelli/.m2/repository/org/pegdown/pegdown/1.2.1/pegdown-1.2.1.jar     urls[30] = file:/home/distelli/.m2/repository/org/parboiled/parboiled-java/1.1.4/parboiled-java-1.1.4.jar     urls[31] = file:/home/distelli/.m2/repository/org/parboiled/parboiled-core/1.1.4/parboiled-core-1.1.4.jar     urls[32] = file:/home/distelli/.m2/repository/org/ow2/asm/asm/4.1/asm-4.1.jar     urls[33] = file:/home/distelli/.m2/repository/org/ow2/asm/asm-tree/4.1/asm-tree-4.1.jar     urls[34] = file:/home/distelli/.m2/repository/org/ow2/asm/asm-analysis/4.1/asm-analysis-4.1.jar     urls[35] = file:/home/distelli/.m2/repository/org/ow2/asm/asm-util/4.1/asm-util-4.1.jar     urls[36] = file:/home/distelli/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar     urls[37] = file:/home/distelli/.m2/repository/org/apache/maven/doxia/doxia-decoration-model/1.4/doxia-decoration-model-1.4.jar     urls[38] = file:/home/distelli/.m2/repository/org/apache/maven/doxia/doxia-site-renderer/1.4/doxia-site-renderer-1.4.jar     urls[39] = file:/home/distelli/.m2/repository/org/apache/velocity/velocity-tools/2.0/velocity-tools-2.0.jar     urls[40] = file:/home/distelli/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar     urls[41] = file:/home/distelli/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar     urls[42] = file:/home/distelli/.m2/repository/commons-chain/commons-chain/1.1/commons-chain-1.1.jar     urls[43] = file:/home/distelli/.m2/repository/commons-validator/commons-validator/1.3.1/commons-validator-1.3.1.jar     urls[44] = file:/home/distelli/.m2/repository/dom4j/dom4j/1.1/dom4j-1.1.jar     urls[45] = file:/home/distelli/.m2/repository/sslext/sslext/1.2-0/sslext-1.2-0.jar     urls[46] = file:/home/distelli/.m2/repository/org/apache/struts/struts-core/1.3.8/struts-core-1.3.8.jar     urls[47] = file:/home/distelli/.m2/repository/antlr/antlr/2.7.2/antlr-2.7.2.jar     urls[48] = file:/home/distelli/.m2/repository/org/apache/struts/struts-taglib/1.3.8/struts-taglib-1.3.8.jar     urls[49] = file:/home/distelli/.m2/repository/org/apache/struts/struts-tiles/1.3.8/struts-tiles-1.3.8.jar     urls[50] = file:/home/distelli/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar     urls[51] = file:/home/distelli/.m2/repository/org/apache/maven/doxia/doxia-integration-tools/1.5/doxia-integration-tools-1.5.jar     urls[52] = file:/home/distelli/.m2/repository/org/codehaus/plexus/plexus-archiver/1.0/plexus-archiver-1.0.jar     urls[53] = file:/home/distelli/.m2/repository/org/codehaus/plexus/plexus-io/1.0/plexus-io-1.0.jar     urls[54] = file:/home/distelli/.m2/repository/org/codehaus/plexus/plexus-i18n/1.0-beta-7/plexus-i18n-1.0-beta-7.jar     urls[55] = file:/home/distelli/.m2/repository/org/apache/velocity/velocity/1.5/velocity-1.5.jar     urls[56] = file:/home/distelli/.m2/repository/oro/oro/2.0.8/oro-2.0.8.jar     urls[57] = file:/home/distelli/.m2/repository/org/codehaus/plexus/plexus-velocity/1.1.8/plexus-velocity-1.1.8.jar     urls[58] = file:/home/distelli/.m2/repository/org/codehaus/plexus/plexus-utils/1.5.10/plexus-utils-1.5.10.jar     urls[59] = file:/home/distelli/.m2/repository/org/mortbay/jetty/jetty/6.1.25/jetty-6.1.25.jar     urls[60] = file:/home/distelli/.m2/repository/org/mortbay/jetty/servlet-api/2.5-20081211/servlet-api-2.5-20081211.jar     urls[61] = file:/home/distelli/.m2/repository/org/mortbay/jetty/jetty-util/6.1.25/jetty-util-6.1.25.jar     urls[62] = file:/home/distelli/.m2/repository/commons-lang/commons-lang/2.5/commons-lang-2.5.jar     urls[63] = file:/home/distelli/.m2/repository/commons-io/commons-io/1.4/commons-io-1.4.jar     Number of foreign imports: 1     import: Entry[import  from realm ClassRealm[maven.api, parent: null]]          -----------------------------------------------------          	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:224)     	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)     	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)     	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)     	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)     	at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)     	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:120)     	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:355)     	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:155)     	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:584)     	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:216)     	at org.apache.maven.cli.MavenCli.main(MavenCli.java:160)     	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)     	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     	at java.lang.reflect.Method.invoke(Method.java:497)     	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)     	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)     	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)     	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)     Caused by: org.apache.maven.plugin.PluginExecutionException: Execution default-site of goal org.apache.maven.plugins:maven-site-plugin:3.3:site failed: A required class was missing while executing org.apache.maven.plugins:maven-site-plugin:3.3:site: org/apache/maven/doxia/siterenderer/DocumentContent     -----------------------------------------------------     realm =    plugin>org.apache.maven.plugins:maven-site-plugin:3.3     strategy = org.codehaus.plexus.classworlds.strategy.SelfFirstStrategy     urls[0] = file:/home/distelli/.m2/repository/org/apache/maven/plugins/maven-site-plugin/3.3/maven-site-plugin-3.3.jar     urls[1] = file:/home/distelli/.m2/repository/org/apache/maven/reporting/maven-reporting-exec/1.1/maven-reporting-exec-1.1.jar     urls[2] = file:/home/distelli/.m2/repository/org/apache/maven/reporting/maven-reporting-api/3.0/maven-reporting-api-3.0.jar     urls[3] = file:/home/distelli/.m2/repository/org/apache/maven/shared/maven-shared-utils/0.3/maven-shared-utils-0.3.jar     urls[4] = file:/home/distelli/.m2/repository/com/google/code/findbugs/jsr305/2.0.1/jsr305-2.0.1.jar     urls[5] = file:/home/distelli/.m2/repository/org/codehaus/plexus/plexus-component-annotations/1.5.5/plexus-component-annotations-1.5.5.jar     urls[6] = file:/home/distelli/.m2/repository/org/sonatype/aether/aether-util/1.7/aether-util-1.7.jar     urls[7] = file:/home/distelli/.m2/repository/org/eclipse/aether/aether-util/0.9.0.M2/aether-util-0.9.0.M2.jar     urls[8] = file:/home/distelli/.m2/repository/org/sonatype/sisu/sisu-inject-bean/1.4.2/sisu-inject-bean-1.4.2.jar     urls[9] = file:/home/distelli/.m2/repository/org/sonatype/sisu/sisu-guice/2.1.7/sisu-guice-2.1.7-noaop.jar     urls[10] = file:/home/distelli/.m2/repository/org/codehaus/plexus/plexus-interpolation/1.14/plexus-interpolation-1.14.jar     urls[11] = file:/home/distelli/.m2/repository/org/sonatype/plexus/plexus-sec-dispatcher/1.3/plexus-sec-dispatcher-1.3.jar     urls[12] = file:/home/distelli/.m2/repository/org/sonatype/plexus/plexus-cipher/1.4/plexus-cipher-1.4.jar     urls[13] = file:/home/distelli/.m2/repository/org/apache/maven/maven-archiver/2.4.2/maven-archiver-2.4.2.jar     urls[14] = file:/home/distelli/.m2/repository/org/apache/maven/doxia/doxia-sink-api/1.4/doxia-sink-api-1.4.jar     urls[15] = file:/home/distelli/.m2/repository/org/apache/maven/doxia/doxia-logging-api/1.4/doxia-logging-api-1.4.jar     urls[16] = file:/home/distelli/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar     urls[17] = file:/home/distelli/.m2/repository/org/apache/maven/doxia/doxia-core/1.4/doxia-core-1.4.jar     urls[18] = file:/home/distelli/.m2/repository/xerces/xercesImpl/2.9.1/xercesImpl-2.9.1.jar     urls[19] = file:/home/distelli/.m2/repository/xml-apis/xml-apis/1.3.04/xml-apis-1.3.04.jar     urls[20] = file:/home/distelli/.m2/repository/org/apache/httpcomponents/httpclient/4.0.2/httpclient-4.0.2.jar     urls[21] = file:/home/distelli/.m2/repository/commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jar     urls[22] = file:/home/distelli/.m2/repository/commons-codec/commons-codec/1.3/commons-codec-1.3.jar     urls[23] = file:/home/distelli/.m2/repository/org/apache/httpcomponents/httpcore/4.0.1/httpcore-4.0.1.jar     urls[24] = file:/home/distelli/.m2/repository/org/apache/maven/doxia/doxia-module-xhtml/1.4/doxia-module-xhtml-1.4.jar     urls[25] = file:/home/distelli/.m2/repository/org/apache/maven/doxia/doxia-module-apt/1.4/doxia-module-apt-1.4.jar     urls[26] = file:/home/distelli/.m2/repository/org/apache/maven/doxia/doxia-module-xdoc/1.4/doxia-module-xdoc-1.4.jar     urls[27] = file:/home/distelli/.m2/repository/org/apache/maven/doxia/doxia-module-fml/1.4/doxia-module-fml-1.4.jar     urls[28] = file:/home/distelli/.m2/repository/org/apache/maven/doxia/doxia-module-markdown/1.4/doxia-module-markdown-1.4.jar     urls[29] = file:/home/distelli/.m2/repository/org/pegdown/pegdown/1.2.1/pegdown-1.2.1.jar     urls[30] = file:/home/distelli/.m2/repository/org/parboiled/parboiled-java/1.1.4/parboiled-java-1.1.4.jar     urls[31] = file:/home/distelli/.m2/repository/org/parboiled/parboiled-core/1.1.4/parboiled-core-1.1.4.jar     urls[32] = file:/home/distelli/.m2/repository/org/ow2/asm/asm/4.1/asm-4.1.jar     urls[33] = file:/home/distelli/.m2/repository/org/ow2/asm/asm-tree/4.1/asm-tree-4.1.jar     urls[34] = file:/home/distelli/.m2/repository/org/ow2/asm/asm-analysis/4.1/asm-analysis-4.1.jar     urls[35] = file:/home/distelli/.m2/repository/org/ow2/asm/asm-util/4.1/asm-util-4.1.jar     urls[36] = file:/home/distelli/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar     urls[37] = file:/home/distelli/.m2/repository/org/apache/maven/doxia/doxia-decoration-model/1.4/doxia-decoration-model-1.4.jar     urls[38] = file:/home/distelli/.m2/repository/org/apache/maven/doxia/doxia-site-renderer/1.4/doxia-site-renderer-1.4.jar     urls[39] = file:/home/distelli/.m2/repository/org/apache/velocity/velocity-tools/2.0/velocity-tools-2.0.jar     urls[40] = file:/home/distelli/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar     urls[41] = file:/home/distelli/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar     urls[42] = file:/home/distelli/.m2/repository/commons-chain/commons-chain/1.1/commons-chain-1.1.jar     urls[43] = file:/home/distelli/.m2/repository/commons-validator/commons-validator/1.3.1/commons-validator-1.3.1.jar     urls[44] = file:/home/distelli/.m2/repository/dom4j/dom4j/1.1/dom4j-1.1.jar     urls[45] = file:/home/distelli/.m2/repository/sslext/sslext/1.2-0/sslext-1.2-0.jar     urls[46] = file:/home/distelli/.m2/repository/org/apache/struts/struts-core/1.3.8/struts-core-1.3.8.jar     urls[47] = file:/home/distelli/.m2/repository/antlr/antlr/2.7.2/antlr-2.7.2.jar     urls[48] = file:/home/distelli/.m2/repository/org/apache/struts/struts-taglib/1.3.8/struts-taglib-1.3.8.jar     urls[49] = file:/home/distelli/.m2/repository/org/apache/struts/struts-tiles/1.3.8/struts-tiles-1.3.8.jar     urls[50] = file:/home/distelli/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar     urls[51] = file:/home/distelli/.m2/repository/org/apache/maven/doxia/doxia-integration-tools/1.5/doxia-integration-tools-1.5.jar     urls[52] = file:/home/distelli/.m2/repository/org/codehaus/plexus/plexus-archiver/1.0/plexus-archiver-1.0.jar     urls[53] = file:/home/distelli/.m2/repository/org/codehaus/plexus/plexus-io/1.0/plexus-io-1.0.jar     urls[54] = file:/home/distelli/.m2/repository/org/codehaus/plexus/plexus-i18n/1.0-beta-7/plexus-i18n-1.0-beta-7.jar     urls[55] = file:/home/distelli/.m2/repository/org/apache/velocity/velocity/1.5/velocity-1.5.jar     urls[56] = file:/home/distelli/.m2/repository/oro/oro/2.0.8/oro-2.0.8.jar     urls[57] = file:/home/distelli/.m2/repository/org/codehaus/plexus/plexus-velocity/1.1.8/plexus-velocity-1.1.8.jar     urls[58] = file:/home/distelli/.m2/repository/org/codehaus/plexus/plexus-utils/1.5.10/plexus-utils-1.5.10.jar     urls[59] = file:/home/distelli/.m2/repository/org/mortbay/jetty/jetty/6.1.25/jetty-6.1.25.jar     urls[60] = file:/home/distelli/.m2/repository/org/mortbay/jetty/servlet-api/2.5-20081211/servlet-api-2.5-20081211.jar     urls[61] = file:/home/distelli/.m2/repository/org/mortbay/jetty/jetty-util/6.1.25/jetty-util-6.1.25.jar     urls[62] = file:/home/distelli/.m2/repository/commons-lang/commons-lang/2.5/commons-lang-2.5.jar     urls[63] = file:/home/distelli/.m2/repository/commons-io/commons-io/1.4/commons-io-1.4.jar     Number of foreign imports: 1     import: Entry[import  from realm ClassRealm[maven.api, parent: null]]          -----------------------------------------------------          	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:166)     	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)     	... 19 more     Caused by: org.apache.maven.plugin.PluginContainerException: A required class was missing while executing org.apache.maven.plugins:maven-site-plugin:3.3:site: org/apache/maven/doxia/siterenderer/DocumentContent     -----------------------------------------------------     realm =    plugin>org.apache.maven.plugins:maven-site-plugin:3.3     strategy = org.codehaus.plexus.classworlds.strategy.SelfFirstStrategy     urls[0] = file:/home/distelli/.m2/repository/org/apache/maven/plugins/maven-site-plugin/3.3/maven-site-plugin-3.3.jar     urls[1] = file:/home/distelli/.m2/repository/org/apache/maven/reporting/maven-reporting-exec/1.1/maven-reporting-exec-1.1.jar     urls[2] = file:/home/distelli/.m2/repository/org/apache/maven/reporting/maven-reporting-api/3.0/maven-reporting-api-3.0.jar     urls[3] = file:/home/distelli/.m2/repository/org/apache/maven/shared/maven-shared-utils/0.3/maven-shared-utils-0.3.jar     urls[4] = file:/home/distelli/.m2/repository/com/google/code/findbugs/jsr305/2.0.1/jsr305-2.0.1.jar     urls[5] = file:/home/distelli/.m2/repository/org/codehaus/plexus/plexus-component-annotations/1.5.5/plexus-component-annotations-1.5.5.jar     urls[6] = file:/home/distelli/.m2/repository/org/sonatype/aether/aether-util/1.7/aether-util-1.7.jar     urls[7] = file:/home/distelli/.m2/repository/org/eclipse/aether/aether-util/0.9.0.M2/aether-util-0.9.0.M2.jar     urls[8] = file:/home/distelli/.m2/repository/org/sonatype/sisu/sisu-inject-bean/1.4.2/sisu-inject-bean-1.4.2.jar     urls[9] = file:/home/distelli/.m2/repository/org/sonatype/sisu/sisu-guice/2.1.7/sisu-guice-2.1.7-noaop.jar     urls[10] = file:/home/distelli/.m2/repository/org/codehaus/plexus/plexus-interpolation/1.14/plexus-interpolation-1.14.jar     urls[11] = file:/home/distelli/.m2/repository/org/sonatype/plexus/plexus-sec-dispatcher/1.3/plexus-sec-dispatcher-1.3.jar     urls[12] = file:/home/distelli/.m2/repository/org/sonatype/plexus/plexus-cipher/1.4/plexus-cipher-1.4.jar     urls[13] = file:/home/distelli/.m2/repository/org/apache/maven/maven-archiver/2.4.2/maven-archiver-2.4.2.jar     urls[14] = file:/home/distelli/.m2/repository/org/apache/maven/doxia/doxia-sink-api/1.4/doxia-sink-api-1.4.jar     urls[15] = file:/home/distelli/.m2/repository/org/apache/maven/doxia/doxia-logging-api/1.4/doxia-logging-api-1.4.jar     urls[16] = file:/home/distelli/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar     urls[17] = file:/home/distelli/.m2/repository/org/apache/maven/doxia/doxia-core/1.4/doxia-core-1.4.jar     urls[18] = file:/home/distelli/.m2/repository/xerces/xercesImpl/2.9.1/xercesImpl-2.9.1.jar     urls[19] = file:/home/distelli/.m2/repository/xml-apis/xml-apis/1.3.04/xml-apis-1.3.04.jar     urls[20] = file:/home/distelli/.m2/repository/org/apache/httpcomponents/httpclient/4.0.2/httpclient-4.0.2.jar     urls[21] = file:/home/distelli/.m2/repository/commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jar     urls[22] = file:/home/distelli/.m2/repository/commons-codec/commons-codec/1.3/commons-codec-1.3.jar     urls[23] = file:/home/distelli/.m2/repository/org/apache/httpcomponents/httpcore/4.0.1/httpcore-4.0.1.jar     urls[24] = file:/home/distelli/.m2/repository/org/apache/maven/doxia/doxia-module-xhtml/1.4/doxia-module-xhtml-1.4.jar     urls[25] = file:/home/distelli/.m2/repository/org/apache/maven/doxia/doxia-module-apt/1.4/doxia-module-apt-1.4.jar     urls[26] = file:/home/distelli/.m2/repository/org/apache/maven/doxia/doxia-module-xdoc/1.4/doxia-module-xdoc-1.4.jar     urls[27] = file:/home/distelli/.m2/repository/org/apache/maven/doxia/doxia-module-fml/1.4/doxia-module-fml-1.4.jar     urls[28] = file:/home/distelli/.m2/repository/org/apache/maven/doxia/doxia-module-markdown/1.4/doxia-module-markdown-1.4.jar     urls[29] = file:/home/distelli/.m2/repository/org/pegdown/pegdown/1.2.1/pegdown-1.2.1.jar     urls[30] = file:/home/distelli/.m2/repository/org/parboiled/parboiled-java/1.1.4/parboiled-java-1.1.4.jar     urls[31] = file:/home/distelli/.m2/repository/org/parboiled/parboiled-core/1.1.4/parboiled-core-1.1.4.jar     urls[32] = file:/home/distelli/.m2/repository/org/ow2/asm/asm/4.1/asm-4.1.jar     urls[33] = file:/home/distelli/.m2/repository/org/ow2/asm/asm-tree/4.1/asm-tree-4.1.jar     urls[34] = file:/home/distelli/.m2/repository/org/ow2/asm/asm-analysis/4.1/asm-analysis-4.1.jar     urls[35] = file:/home/distelli/.m2/repository/org/ow2/asm/asm-util/4.1/asm-util-4.1.jar     urls[36] = file:/home/distelli/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar     urls[37] = file:/home/distelli/.m2/repository/org/apache/maven/doxia/doxia-decoration-model/1.4/doxia-decoration-model-1.4.jar     urls[38] = file:/home/distelli/.m2/repository/org/apache/maven/doxia/doxia-site-renderer/1.4/doxia-site-renderer-1.4.jar     urls[39] = file:/home/distelli/.m2/repository/org/apache/velocity/velocity-tools/2.0/velocity-tools-2.0.jar     urls[40] = file:/home/distelli/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar     urls[41] = file:/home/distelli/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar     urls[42] = file:/home/distelli/.m2/repository/commons-chain/commons-chain/1.1/commons-chain-1.1.jar     urls[43] = file:/home/distelli/.m2/repository/commons-validator/commons-validator/1.3.1/commons-validator-1.3.1.jar     urls[44] = file:/home/distelli/.m2/repository/dom4j/dom4j/1.1/dom4j-1.1.jar     urls[45] = file:/home/distelli/.m2/repository/sslext/sslext/1.2-0/sslext-1.2-0.jar     urls[46] = file:/home/distelli/.m2/repository/org/apache/struts/struts-core/1.3.8/struts-core-1.3.8.jar     urls[47] = file:/home/distelli/.m2/repository/antlr/antlr/2.7.2/antlr-2.7.2.jar     urls[48] = file:/home/distelli/.m2/repository/org/apache/struts/struts-taglib/1.3.8/struts-taglib-1.3.8.jar     urls[49] = file:/home/distelli/.m2/repository/org/apache/struts/struts-tiles/1.3.8/struts-tiles-1.3.8.jar     urls[50] = file:/home/distelli/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar     urls[51] = file:/home/distelli/.m2/repository/org/apache/maven/doxia/doxia-integration-tools/1.5/doxia-integration-tools-1.5.jar     urls[52] = file:/home/distelli/.m2/repository/org/codehaus/plexus/plexus-archiver/1.0/plexus-archiver-1.0.jar     urls[53] = file:/home/distelli/.m2/repository/org/codehaus/plexus/plexus-io/1.0/plexus-io-1.0.jar     urls[54] = file:/home/distelli/.m2/repository/org/codehaus/plexus/plexus-i18n/1.0-beta-7/plexus-i18n-1.0-beta-7.jar     urls[55] = file:/home/distelli/.m2/repository/org/apache/velocity/velocity/1.5/velocity-1.5.jar     urls[56] = file:/home/distelli/.m2/repository/oro/oro/2.0.8/oro-2.0.8.jar     urls[57] = file:/home/distelli/.m2/repository/org/codehaus/plexus/plexus-velocity/1.1.8/plexus-velocity-1.1.8.jar     urls[58] = file:/home/distelli/.m2/repository/org/codehaus/plexus/plexus-utils/1.5.10/plexus-utils-1.5.10.jar     urls[59] = file:/home/distelli/.m2/repository/org/mortbay/jetty/jetty/6.1.25/jetty-6.1.25.jar     urls[60] = file:/home/distelli/.m2/repository/org/mortbay/jetty/servlet-api/2.5-20081211/servlet-api-2.5-20081211.jar     urls[61] = file:/home/distelli/.m2/repository/org/mortbay/jetty/jetty-util/6.1.25/jetty-util-6.1.25.jar     urls[62] = file:/home/distelli/.m2/repository/commons-lang/commons-lang/2.5/commons-lang-2.5.jar     urls[63] = file:/home/distelli/.m2/repository/commons-io/commons-io/1.4/commons-io-1.4.jar     Number of foreign imports: 1     import: Entry[import  from realm ClassRealm[maven.api, parent: null]]          -----------------------------------------------------          	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:164)     	... 20 more     Caused by: java.lang.NoClassDefFoundError: org/apache/maven/doxia/siterenderer/DocumentContent     	at java.lang.Class.getDeclaredConstructors0(Native Method)     	at java.lang.Class.privateGetDeclaredConstructors(Class.java:2671)     	at java.lang.Class.getDeclaredConstructors(Class.java:2020)     	at com.google.inject.spi.InjectionPoint.forConstructorOf(InjectionPoint.java:245)     	at com.google.inject.internal.ConstructorBindingImpl.create(ConstructorBindingImpl.java:99)     	at com.google.inject.internal.InjectorImpl.createUninitializedBinding(InjectorImpl.java:657)     	at com.google.inject.internal.InjectorImpl.createJustInTimeBinding(InjectorImpl.java:875)     	at com.google.inject.internal.InjectorImpl.createJustInTimeBindingRecursive(InjectorImpl.java:798)     	at com.google.inject.internal.InjectorImpl.getJustInTimeBinding(InjectorImpl.java:281)     	at com.google.inject.internal.InjectorImpl.getBindingOrThrow(InjectorImpl.java:213)     	at com.google.inject.internal.InjectorImpl.getProviderOrThrow(InjectorImpl.java:998)     	at com.google.inject.internal.InjectorImpl.getProvider(InjectorImpl.java:1031)     	at com.google.inject.internal.InjectorImpl.getProvider(InjectorImpl.java:994)     	at com.google.inject.internal.InjectorImpl.getInstance(InjectorImpl.java:1044)     	at org.eclipse.sisu.space.AbstractDeferredClass.get(AbstractDeferredClass.java:48)     	at com.google.inject.internal.ProviderInternalFactory.provision(ProviderInternalFactory.java:86)     	at com.google.inject.internal.InternalFactoryToInitializableAdapter.provision(InternalFactoryToInitializableAdapter.java:54)     	at com.google.inject.internal.ProviderInternalFactory$1.call(ProviderInternalFactory.java:70)     	at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:113)     	at org.eclipse.sisu.bean.BeanScheduler$Activator.onProvision(BeanScheduler.java:176)     	at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:122)     	at com.google.inject.internal.ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:68)     	at com.google.inject.internal.ProviderInternalFactory.circularGet(ProviderInternalFactory.java:68)     	at com.google.inject.internal.InternalFactoryToInitializableAdapter.get(InternalFactoryToInitializableAdapter.java:46)     	at com.google.inject.internal.InjectorImpl$2$1.call(InjectorImpl.java:1009)     	at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:1059)     	at com.google.inject.internal.InjectorImpl$2.get(InjectorImpl.java:1005)     	at com.google.inject.Scopes$1$1.get(Scopes.java:59)     	at org.eclipse.sisu.inject.LazyBeanEntry.getValue(LazyBeanEntry.java:82)     	at org.eclipse.sisu.plexus.LazyPlexusBean.getValue(LazyPlexusBean.java:51)     	at org.codehaus.plexus.DefaultPlexusContainer.lookup(DefaultPlexusContainer.java:263)     	at org.codehaus.plexus.DefaultPlexusContainer.lookup(DefaultPlexusContainer.java:255)     	at org.apache.maven.plugin.internal.DefaultMavenPluginManager.getConfiguredMojo(DefaultMavenPluginManager.java:464)     	at org.apache.maven.reporting.exec.DefaultMavenReportExecutor.getConfiguredMavenReport(DefaultMavenReportExecutor.java:306)     	at org.apache.maven.reporting.exec.DefaultMavenReportExecutor.buildReportPlugin(DefaultMavenReportExecutor.java:263)     	at org.apache.maven.reporting.exec.DefaultMavenReportExecutor.buildMavenReports(DefaultMavenReportExecutor.java:154)     	at org.apache.maven.plugins.site.AbstractSiteRenderingMojo.getReports(AbstractSiteRenderingMojo.java:235)     	at org.apache.maven.plugins.site.SiteMojo.execute(SiteMojo.java:121)     	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:132)     	... 20 more     Caused by: java.lang.ClassNotFoundException: org.apache.maven.doxia.siterenderer.DocumentContent     	at org.codehaus.plexus.classworlds.strategy.SelfFirstStrategy.loadClass(SelfFirstStrategy.java:50)     	at org.codehaus.plexus.classworlds.realm.ClassRealm.unsynchronizedLoadClass(ClassRealm.java:271)     	at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClass(ClassRealm.java:247)     	at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClass(ClassRealm.java:239)     	... 59 more     [ERROR]      [ERROR] Re-run Maven using the -X switch to enable full debug logging.     [ERROR]      [ERROR] For more information about the errors and possible solutions, please read the following articles:     [ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/PluginContainerException [31;1m    FAILED: .ci/check-only-javadoc-error.sh [0m  ```","closed","","romani","2018-07-02T00:48:08Z","2018-07-02T02:40:42Z"
"","5276","Add new project to NoError validation","https://github.com/wso2/code-quality-tools/blob/master/checkstyle/checkstyle.xml - 44 modules  https://github.com/apache/commons-lang/blob/master/checkstyle.xml - 19 modules, too low for testing, not required to add.  To wercker or Travis","closed","miscellaneous,","romani","2017-11-18T20:29:52Z","2017-12-05T14:32:01Z"
"","5621","config: activate dsm-maven-plugin 2.2.0","https://github.com/sevntu-checkstyle/dsm-maven-plugin/pull/38 is fixed  there are still problems https://github.com/sevntu-checkstyle/dsm-maven-plugin/issues/39 , but this is good step forward","closed","","romani","2018-03-19T00:44:43Z","2018-03-19T23:43:20Z"
"","5676","consider introducing spelling regression checker","https://github.com/jsoref/spelling has a number of scripts for managing spelling, but only three are relevant to this, and I suspect you'll end up using one as is and writing a rolled up version of the other two:  * `w` takes a stream of text and identifies suspicious words -- I'd encourage you to use this as is. * `f` looks decides which files to feed to `w` and then runs them through `w` -- the algorithm it uses may not be suitable for your project. In general, I end up manually deleting (i.e. ""excluding"") files. * `fchurn` this script runs `f` saving its output to a file, and the next time you run it, it compares the output of the current run -- in theory, it's designed to be used for precisely this task. Its output is any ""newly"" introduced tokens, which are either ""misspellings"" or ""acceptable"".  The file `fchurn` produces can be committed into the repository, or, if you are willing to rely on `git`, you could have your `fchurn` figure out the answer by generating the answer for the previous (or referenced) commit. By storing the output file into the repository, you're essentially listing ""accepted"" ""misspellings"" -- a whitelist.  Fwiw, you can compress or similarly obfuscate the whitelist so that it doesn't upset anyone else's spell checking tools (or just to conserve space).  Offhand, I suspect that the right place for the file to live would be `.ci`.  Hopefully, this information is a helpful outline. I may try to put together an actual PR for this, but probably not imminently.","closed","miscellaneous,","jsoref","2018-04-01T15:46:01Z","2018-04-19T01:02:01Z"
"","5521","Please add new Eclipse Plugin to active tools list on your website","https://github.com/ChristianWulf/qa-eclipse-plugin","closed","miscellaneous,","ChristianWulf","2018-02-12T23:01:59Z","2018-05-21T18:24:28Z"
"","5762","Issue #5648: Create UTs to control xpath-suppression model regression","https://github.com/checkstyle/checkstyle/issues/5648","closed","","timurt","2018-05-01T11:59:09Z","2018-06-01T23:15:12Z"
"","5620","Issue #5571: Xpath Mapper : UnsupportedOperationException when several queries are combined","https://github.com/checkstyle/checkstyle/issues/5571","closed","","timurt","2018-03-18T08:52:44Z","2018-04-15T14:17:45Z"
"","5737","Issue #5513: Create xdoc page to explain the new Xpath-based suppression model","https://github.com/checkstyle/checkstyle/issues/5513","closed","","timurt","2018-04-16T05:54:47Z","2018-04-20T07:58:42Z"
"","5509","Issue #5508: Store IDENT token type in the xpath tree","https://github.com/checkstyle/checkstyle/issues/5508","closed","","timurt","2018-02-03T06:27:14Z","2018-04-15T14:18:57Z"
"","5446","Issue #5400: Incorrect documentation for SuppressionXpathFilter","https://github.com/checkstyle/checkstyle/issues/5400","closed","","timurt","2018-01-08T07:06:51Z","2018-01-08T15:05:40Z"
"","5021","Issue #4999: XpathQueryGenerator should consider tabWith parameter","https://github.com/checkstyle/checkstyle/issues/4999","closed","","timurt","2017-08-29T12:16:52Z","2017-09-17T14:32:22Z"
"","5019","Issue #4998: Add columnCharIndex field to LocalizedMessage","https://github.com/checkstyle/checkstyle/issues/4998","closed","","timurt","2017-08-29T08:36:55Z","2017-09-06T12:02:35Z"
"","5464","Issue #4530: Add the new option for Checkstyle CLI to generate the basic suppression xpath","https://github.com/checkstyle/checkstyle/issues/4530","closed","","timurt","2018-01-17T13:28:40Z","2018-04-15T03:52:55Z"
"","5390","Issue #4421: Support suppression-xpath element in SuppressionLoader","https://github.com/checkstyle/checkstyle/issues/4421","closed","","timurt","2017-12-26T05:04:48Z","2017-12-27T15:12:11Z"
"","5883","Issue #102: Generate a suppressions.xml file from the errors list","https://github.com/checkstyle/checkstyle/issues/102","closed","","timurt","2018-06-03T21:16:00Z","2018-06-29T13:58:34Z"
"","5350","Checkstyle's self config fails on non-US locale because of english suppression","https://github.com/checkstyle/checkstyle/commit/2a4e5e6d9bc027ac1afc387d2a7392d87e9394d0#r26214636  >   ``  Posted by djydewang : > `mvn clean veify` failed when LANG=zh_CN.UTF-8 It's ok for LANG=en_US","closed","miscellaneous,","rnveach","2017-12-12T15:05:57Z","2018-12-31T05:46:46Z"
"","5827","Compile all jdk9 files in Travis","https://github.com/checkstyle/checkstyle/blob/master/src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammars/java9/InputJava9TryWithResources.java  Compilation should be rechecked by CI for all files of jdk9, some time ago we did the same for jdk8 files, we should restore that CI command. What we used for jdk8: https://github.com/checkstyle/checkstyle/commit/7ad9b04b0313a7cbd91b56d56ab83501dfc21eba#diff-354f30a63fb0907d4ad57269548329e3","closed","CI,","romani","2018-05-25T01:38:27Z","2018-05-25T13:17:13Z"
"","5040","Rename JavadocLexer rule to a more meaningful name","https://github.com/checkstyle/checkstyle/blob/master/src/main/resources/com/puppycrawl/tools/checkstyle/grammars/javadoc/JavadocLexer.g4#L244  Name `Skobki` is meaningless in English (it is actually russian transliteration for `brackets`).","closed","miscellaneous,","Vladlis","2017-08-31T21:57:08Z","2017-09-05T13:22:57Z"
"","5695","Update javadoc for MismatchStrategy","https://github.com/checkstyle/checkstyle/blob/master/src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/MismatchStrategy.java  It is actually matching strategy, so name should be fixed","closed","miscellaneous,","romani","2018-04-06T01:07:12Z","2018-04-07T18:26:42Z"
"","5264","Checker.destroy doesn't erase fileSets but erases everything else","https://github.com/checkstyle/checkstyle/blob/master/src/main/java/com/puppycrawl/tools/checkstyle/Checker.java#L173-L176  Checker clears out all other arrays once the destroy method is called, except the list of File Sets. I don't see a reason to keep them since we erase everything else. If a Checker instance is used again, it should expect it to be a near clean state.  Should Checker destroy reset everything back to the default like when the check is first instantiated? If that is the case, [the `counter` is never added back in after the destroy](https://github.com/checkstyle/checkstyle/blob/master/src/main/java/com/puppycrawl/tools/checkstyle/Checker.java#L141) among the other class fields.  This is coming up because I am trying to rewrite the test at https://github.com/checkstyle/checkstyle/blob/0a8f5af052b05645e292a42ca884128db901a58a/src/test/java/com/puppycrawl/tools/checkstyle/CheckerTest.java#L744 for another issue and it uses `Checker` multiple times.","closed","approved,","rnveach","2017-11-15T16:40:52Z","2017-11-18T01:46:31Z"
"","5673","Pitest: examine and try to remove infinite loop mutations","https://github.com/checkstyle/checkstyle/blob/master/pom.xml#L215-L216 Whenever pitest creates an infinite loop mutation, it takes a whole 50 seconds before it recognizes that the code will never finish. This slows down the pitest run considerably. Pitest can't recognize all instances of an infinite loop, and if the mutated code isn't an infinite loop, but takes a long time to finish, it can cause issues with mutation scoring. I ran into this problem within my own project. An `uncertain` mutation is flagged and counted as a killed. However, if it is the edge of finishing before the timeout and does so in some circumstances, it could be flagged as `survived` and lower the score creating different results in different runs.  https://app.shippable.com/github/rnveach/checkstyle/runs/3/summary/console Lists all the jobs who have uncertainties as `failed`.  It is possible to remove the uncertain instances by rewriting the code some. Here is 1 example where I changed it from uncertain to survived: https://github.com/rnveach/checkstyle/commit/b82ef2dcde1dba44bd1d34c3d06d934bfd8fbd73  -------","open","has bounty,","rnveach","2018-03-31T14:37:28Z","2019-04-13T17:26:48Z"
"","5210","Two unit tests for SuppressionCommentFilterTest do not fail if CheckstyleException is not thrown","https://github.com/checkstyle/checkstyle/blob/d371c3431d076dcb7a5d2565b4ca061c798732f4/src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilterTest.java#L262-L295  Both testInvalidCheckFormat and testInvalidMessageFormat tests will not fail if exception is not thrown.  fail() method should be invoked after verifySuppressed.","closed","miscellaneous,","MEZk","2017-10-21T08:25:35Z","2017-10-27T14:03:59Z"
"","5706","FinalClassCheck: 'extractQualifiedName' omits 2nd ident of package name","https://github.com/checkstyle/checkstyle/blob/90f20e09869c71eb22190ad9c1d46d5deec324a5/src/main/java/com/puppycrawl/tools/checkstyle/checks/design/FinalClassCheck.java#L95  [When debugging tests like `testFinalClass`](https://github.com/checkstyle/checkstyle/blob/90f20e09869c71eb22190ad9c1d46d5deec324a5/src/test/java/com/puppycrawl/tools/checkstyle/checks/design/FinalClassCheckTest.java#L50-L58), [`extractQualifiedName`](https://github.com/checkstyle/checkstyle/blob/90f20e09869c71eb22190ad9c1d46d5deec324a5/src/main/java/com/puppycrawl/tools/checkstyle/checks/design/FinalClassCheck.java#L95) returns `com.tools.checkstyle.checks.design.finalclass` when [the package is clearly defined as `com.puppycrawl.tools.checkstyle.checks.design.finalclass` (`puppycrawl` is missing)](https://github.com/checkstyle/checkstyle/blob/f069e73531d0ced9e60b3df633a3123fd9a271e0/src/test/resources/com/puppycrawl/tools/checkstyle/checks/design/finalclass/InputFinalClass.java#L5).  [Looking at the code, when it gets to the top node of the package name, it only pulls in the first `IDENT` and not them both.](https://github.com/checkstyle/checkstyle/blob/90f20e09869c71eb22190ad9c1d46d5deec324a5/src/main/java/com/puppycrawl/tools/checkstyle/checks/design/FinalClassCheck.java#L158)  I am not sure if this bug presents itself in the CLI somehow as I am not that familiar with the check. I found this bug by duplicating the same code in my own custom check.","closed","approved,","rnveach","2018-04-10T15:00:39Z","2018-04-11T02:16:17Z"
"","5270","In french, ""espace"" is feminine when it points out the typography character.","https://github.com/checkstyle/checkstyle/blob/007f82bee298de789800113b582ec3adb1b53ea7/src/main/resources/com/puppycrawl/tools/checkstyle/checks/whitespace/messages_fr.properties#L10","closed","miscellaneous,","gmzoughi","2017-11-17T16:09:14Z","2019-03-10T18:02:48Z"
"","5902","CircleCI compains 'extraneous key [java] is not permitted'","https://circleci.com/gh/checkstyle/checkstyle/5935  ``` Your config file has errors and may not run correctly:  jobs: 8 schema violations found   jobs: pitest4: extraneous key [java] is not permitted   jobs: pitest3: extraneous key [java] is not permitted   jobs: pitest6: extraneous key [java] is not permitted   jobs: pitest5: extraneous key [java] is not permitted   jobs: pitest7: extraneous key [java] is not permitted   jobs: build: -cachesextraneous key [java] is not permitted   jobs: pitest2: extraneous key [java] is not permitted   jobs: pitest1: extraneous key [java] is not permitted ```  Looks like we need to switch to Docker images - https://circleci.com/docs/2.0/executor-types/  Example of circleCI for java: https://circleci.com/docs/2.0/language-java/ https://github.com/CircleCI-Public/circleci-demo-java-spring/blob/master/.circleci/config.yml#L8   https://hub.docker.com/r/circleci/jdk8/ - 2 years old https://hub.docker.com/r/circleci/openjdk/tags/ - looks like alive.","closed","CI,","romani","2018-06-11T02:05:44Z","2018-06-11T05:02:36Z"
"","5657","Migrate to CircleCI 2.0","https://circleci.com/docs/1.0/  > We’re sunsetting CircleCI 1.0: August 31, 2018 is the final day for 1.0 builds. Refer to CircleCI 2.0 Hello World document for users and developers to get started with CircleCI 2.0.","closed","CI,","Vladlis","2018-03-29T09:18:22Z","2018-04-19T01:26:36Z"
"","5173","Appveyor is raising error with unzip of cache","https://ci.appveyor.com/project/Checkstyle/checkstyle/build/9962/job/sy0xgh79gopmbum1 ``` Build started git config --global core.autocrlf true git clone -q --depth=10 --branch=master https://github.com/checkstyle/checkstyle.git C:\projects\checkstyle git checkout -qf 0a5b1b13c49efa455c14d5edb527af0026e5a6a3 Restoring build cache Cache 'C:\maven\apache-maven-3.2.5' - Restored Cache 'C:\Users\appveyor\.m2' - Unzipping...Error uncompressing cache item: 7z.exe process has exited with code 2. Check C:\Users\appveyor\AppData\Local\Temp\1\build-cache-logs\e3d4c3af19091c5762b8782e1b72f9e5ced7c1f6.zip.001.log for details. Cache 'C:\cygwin\var\cache\setup' - Restored Running Install scripts ... ```","closed","","romani","2017-10-07T14:00:48Z","2017-10-22T23:57:05Z"
"","5831","appveyor fails to reuse maven cache during build","https://ci.appveyor.com/project/Checkstyle/checkstyle/build/11590/job/d5ksqvbqm3pgc59s ``` [INFO] BUILD SUCCESS [INFO] ------------------------------------------------------------------------ [INFO] Total time: 04:53 min [INFO] Finished at: 2018-05-25T05:40:52+00:00 [INFO] Final Memory: 75M/220M [INFO] ------------------------------------------------------------------------ Discovering tests...OK Updating build cache... Cache 'C:\maven\apache-maven-3.2.5' - Up to date Cache 'C:\Users\appveyor\.m2' - Uploading (101,054,368 bytes)...100% Error uploading cache entry to the cache storage:  Remote server returned 500: There is not enough space on the disk. Build success ```  https://ci.appveyor.com/project/Checkstyle/checkstyle/build/11592/job/oyvmlp3nrvw4rclu ``` Discovering tests...OK Updating build cache... Cache 'C:\maven\apache-maven-3.2.5' - Up to date Cache 'C:\Users\appveyor\.m2' - Uploading (101,054,319 bytes)...100% Error uploading cache entry to the cache storage:  The maximum account cache size of 1,000 MB will be exceeded. Build success ```  email from Support: ``` from AppVeyor  at 24 May 2018.  Artifacts functionality has been working great for our customers since we introduced it in 2013, but we collected a huge amount of artifacts which are persisting in cloud storage.  Through talking to many customers we’ve identified that, after some period of time, storing old artifacts is unnecessary.  Indeed, once the app is deployed or a release package uploaded to external storage, its underlying artifact is usually no longer needed (except for those rare moments when some previous/stable release has to be re-deployed!)  To reduce AppVeyor hosting costs and eliminate any unnecessary waste of cloud resources we decided to introduce an artifacts retention policy.  The policy states that build artifacts and NuGet packages of paid accounts older than 6 months and free accounts older than 3 months  will be permanently removed from AppVeyor artifact storage.  This policy will take effect on June 7, 2018.  If you have custom requirements please let us know and we'll discuss your needs.  Best regards, AppVeyor team ```","closed","CI,","romani","2018-05-25T13:28:54Z","2018-05-26T13:48:55Z"
"","5573","SuppressWithNearbyCommentFilter NPE","https://checkstyle.org/config_filters.html#SuppressWithNearbyCommentFilter  ``` $ cat TestClass.java public class TestClass {     void method() {         // -@csl[FinalLocalVariable](5) my comment         String s = """";     } }  $ cat TestConfig.xml                                                                    $ java -jar checkstyle-8.36.2-all.jar -c config.xml Test.java  Starting audit... com.puppycrawl.tools.checkstyle.api.CheckstyleException: Exception was thrown while processing Test.java 	at com.puppycrawl.tools.checkstyle.Checker.processFiles(Checker.java:311) 	at com.puppycrawl.tools.checkstyle.Checker.process(Checker.java:221) 	at com.puppycrawl.tools.checkstyle.Main.runCheckstyle(Main.java:408) 	at com.puppycrawl.tools.checkstyle.Main.runCli(Main.java:331) 	at com.puppycrawl.tools.checkstyle.Main.execute(Main.java:190) 	at com.puppycrawl.tools.checkstyle.Main.main(Main.java:125) Caused by: java.lang.NullPointerException 	at java.util.regex.Matcher.appendReplacement(Matcher.java:804) 	at java.util.regex.Matcher.replaceAll(Matcher.java:955) 	at java.lang.String.replaceAll(String.java:2223) 	at com.puppycrawl.tools.checkstyle.utils.CommonUtil.fillTemplateWithStringsByRegexp(CommonUtil.java:557) 	at com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter$Tag.(SuppressWithNearbyCommentFilter.java:555) 	at com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter.addTag(SuppressWithNearbyCommentFilter.java:494) 	at com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter.tagCommentLine(SuppressWithNearbyCommentFilter.java:483) 	at com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter.tagSuppressions(SuppressWithNearbyCommentFilter.java:466) 	at com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter.tagSuppressions(SuppressWithNearbyCommentFilter.java:447) 	at com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter.accept(SuppressWithNearbyCommentFilter.java:413) 	at com.puppycrawl.tools.checkstyle.TreeWalker.getFilteredMessages(TreeWalker.java:184) 	at com.puppycrawl.tools.checkstyle.TreeWalker.processFiltered(TreeWalker.java:162) 	at com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck.process(AbstractFileSetCheck.java:87) 	at com.puppycrawl.tools.checkstyle.Checker.processFile(Checker.java:337) 	at com.puppycrawl.tools.checkstyle.Checker.processFiles(Checker.java:298) 	... 5 more Checkstyle ends with 1 errors. ```  I am expecting no exception. I am trying to extend `SuppressWithNearbyCommentFilter` to be able to write a comment like  `// -@cs[MoveVariableInside(If|Else)](6)` to be able to suppress multiple checks at a single location. Attention to `\((\d+)\)` in config regexp, removal of `\(` and `\)` resolve exception. If the characters `(` or `)` can never be allowed, then we should display that as an error message instead of an NPE.","open","approved,","rnveach","2018-03-01T22:00:25Z","2022-04-15T21:45:05Z"
"","5499","wercker build problem with hibernate-search","https://app.wercker.com/checkstyle/checkstyle/runs/build/5a6f736a34645f00019db5e9?step=5a6f738564672700010d2f2b  ``` CS_version: 8.9-SNAPSHOT Cloning into 'hibernate-search'... [INFO] Error stacktraces are turned on. [ERROR] Error executing Maven. java.io.FileNotFoundException: The specified user settings file does not exist: /pipeline/source/hibernate-search/settings-example.xml 	at org.apache.maven.cli.configuration.SettingsXmlConfigurationProcessor.process(SettingsXmlConfigurationProcessor.java:91) 	at org.apache.maven.cli.MavenCli.configure(MavenCli.java:1017) 	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:283) 	at org.apache.maven.cli.MavenCli.main(MavenCli.java:199) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289) 	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229) 	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415) 	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356) ```","closed","miscellaneous,","romani","2018-01-29T21:52:18Z","2018-01-29T22:21:09Z"
"","5286","Indentaion problem in pjdbc project","https://app.wercker.com/checkstyle/checkstyle/runs/build/5a1612009fe1e0000121ce06?step=5a161231540e1a000124da8a  Wercker is failing: ` [INFO] --- maven-checkstyle-plugin:2.17:check (default-cli) @ postgresql --- [INFO] Starting audit... [ERROR] /pipeline/source/pgjdbc/pgjdbc/target/gen-src/org/postgresql/core/v3/ConnectionFactoryImpl.java:628: Comment has incorrect indentation level 0, expected is 16, indentation should be the same level as line 630. [CommentsIndentation] Audit done. [INFO] ------------------------------------------------------------------------ [INFO] BUILD FAILURE `  commit that introduced problem - https://github.com/pgjdbc/pgjdbc/commit/befea18d153dda7814daef4e036d3f5daf8de1e5#diff-05d8a51055f6afe0ae5176e0e5574cb0  we need to investigate and report certain issue, but for now  I do checkout to previous commit to make CI stable.","closed","miscellaneous,","romani","2017-11-23T00:27:06Z","2017-12-22T22:36:54Z"
"","5251","wercker build is unstable for htmlunit project due to SNAPSHOT dependency","https://app.wercker.com/checkstyle/checkstyle/runs/build/5a00d5888e888f0001ded016?step=5a00d5bd540e1a000189d794  ``` [WARNING] Rule 0: org.apache.maven.plugins.enforcer.DependencyConvergence failed with message: Failed while enforcing releasability the error(s) are [ Dependency convergence error for org.seleniumhq.selenium:selenium-remote-driver:3.7.0 paths to dependency are: +-net.sourceforge.htmlunit:htmlunit:2.28-SNAPSHOT   +-org.seleniumhq.selenium:htmlunit-driver:2.28-20171106.080245-12     +-org.seleniumhq.selenium:selenium-support:3.7.0       +-org.seleniumhq.selenium:selenium-remote-driver:3.7.0 ```  I fed up to update revision for htmlunit in wercker.yml to most recent. We do not want to use HEAD from their repository as it could result in another instability of build, as we can not rely on their CI.  we need to some hack to make you build stable by revision and by used snapshots versions.","closed","miscellaneous,","romani","2017-11-07T12:40:11Z","2017-11-07T12:46:40Z"
"","5793","buddy ci failure on ""Fetching changes started""","https://app.buddy.works/ivanovjr/checkstyle/pipelines/pipeline/135806/execution/5af73f3e297de91fbe5f0b03 ``` Build started. Fetching changes started. ERROR: Something went wrong. Please contact with support@buddy.works Action failed: see logs above for details ```  from support: >There is an issue with fetching this repo to the filesystem. Try running it with a clear cache option or delete clone_depth setting in the yaml","closed","CI,","romani","2018-05-14T13:44:58Z","2018-05-14T14:55:56Z"
"","5427","AvoidEscapedUnicodeCharactersCheck: re-organize regular expressions","http://rveach.no-ip.org/checkstyle/regression/reports/issue5409.html  Based on the amount of duplications and removals found in https://github.com/checkstyle/checkstyle/pull/5410 , all the regular expressions in AvoidEscapedUnicodeCharactersCheck have uneven lines and the regular expression groups are out of order.   Example: https://github.com/checkstyle/checkstyle/blob/37bf2883a913e6aee2450e5ad72d78c65964778b/src/main/java/com/puppycrawl/tools/checkstyle/checks/AvoidEscapedUnicodeCharactersCheck.java#L146-L150  We have `2007` then `2000` then `007[fF]` then back to `2066`.  There doesn't seem to be a pattern to the ordering and reading these are not easy. We should sort the regular expression groups and align the end of the lines so they are easier to read and maintain. `UNICODE_CONTROL` and `NON_PRINTABLE_CHARS` should be split apart after the `|` in the expression and placed in order as best as possible. I am currently thinking that 2-3 alternatives per line should be good. There are 69 `|`s in `NON_PRINTABLE_CHARS` regular expression.  Example: Change: ````        + ""005|002|""        + ""003|""        + ""001|000|"" ```` into ````        + ""000|001|002|""        + ""003|004|005|"" ````","closed","easy,","rnveach","2018-01-05T22:47:47Z","2018-02-01T16:15:34Z"
"","5275","Validate checkstyle code by fbinfer","http://fbinfer.com compile it for Ubuntu upload binaries to any our web site, setup Travis to run validation  for java: https://fbinfer.com/docs/hello-world.html#hello-world-java","open","approved,","romani","2017-11-18T19:32:59Z","2019-05-11T19:16:49Z"
"","5978","Expand ""Writing Check"" to include XPath support","http://checkstyle.sourceforge.net/writingchecks.html  The page makes no reference that checks have to be written a specific way to have xpath support. See https://github.com/checkstyle/checkstyle/issues/4830  I feel we should update the documentation. Maybe a new section titled ""XPath Support""?","open","approved,","rnveach","2018-06-28T14:13:49Z","2018-06-28T20:37:49Z"
"","5146","http://checkstyle.sourceforge.net/report_issue.html is broken","http://checkstyle.sourceforge.net/report_issue.html http://checkstyle.sourceforge.net/contributing.html Links are broken.","closed","","filipesperandio","2017-09-26T16:06:19Z","2017-09-27T11:41:53Z"
"","5970","Update documentation for same of RighCurly","http://checkstyle.sourceforge.net/property_types.html#rcurly all examples were copied to `Test.java`   ``` $ cat config.xml                                                          $ cat Test.java  class Test {     // Single line blocks will rise violations, because right curly     // brace is not on the same line as the next part of a multi-block     // statement, it just ends the line.     public long getId() {return id;} // this is NOT OK      public static void main(String[] args) {         // try-catch-finally blocks         try {             //...         } catch (Exception ex) { // this is OK             //...         } finally { // this is OK             //...         }          try {             //...         } // this is NOT OK, not on the same line as the next part of a multi-block statement         catch (Exception ex) {               //...         } // this is NOT OK, not on the same line as the next part of a multi-block statement         finally {               //...         }          // if-else blocks         if (a > 0) {            //...         } else { // this is OK            //...         }          if (a > 0) {            //...         } // this is NOT OK, not on the same line as the next part of a multi-block statement         else {            //...         }          if (a > 0) {            //...         } int i = 5; // this is NOT OK, next part of a multi-block statement is absent          Thread t = new Thread(new Runnable() {            @Override            public void run() {                       //...            } // this is NOT OK, brace is not on the same line as the next part              // of a multi-block statement         }); // this is OK, allowed for better code readability          if (a > 0) { /*...*/ } // OK, single-line multi-block statement         if (a > 0) { /*...*/ } else { /*...*/ } // OK, single-line multi-block statement         if (a > 0) {             //...         } else { /*...*/ } // OK, single-line multi-block statement     } }  $ java -jar checkstyle-8.10.1-all.jar -c config.xml Test.java Starting audit... [ERROR] /var/tmp/Test.java:19:9: '}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly] [ERROR] /var/tmp/Test.java:22:9: '}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly] [ERROR] /var/tmp/Test.java:36:9: '}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly] [ERROR] /var/tmp/Test.java:43:9: '}' at column 9 should be alone on a line. [RightCurly] Audit done. Checkstyle ends with 4 errors. ```  compare with expectation in documentation: ``` $ cat -n Test.java | grep -C 2 ""NOT OK""      3	    // brace is not on the same line as the next part of a multi-block      4	    // statement, it just ends the line.      5	    public long getId() {return id;} // this is NOT OK      6	      7	    public static void main(String[] args) { --     17	        try {     18	            //...     19	        } // this is NOT OK, not on the same line as the next part of a multi-block statement     20	        catch (Exception ex) {     21	              //...     22	        } // this is NOT OK, not on the same line as the next part of a multi-block statement     23	        finally {     24	              //... --     34	        if (a > 0) {     35	           //...     36	        } // this is NOT OK, not on the same line as the next part of a multi-block statement     37	        else {     38	           //... --     41	        if (a > 0) {     42	           //...     43	        } int i = 5; // this is NOT OK, next part of a multi-block statement is absent     44	     45	        Thread t = new Thread(new Runnable() { --     47	           public void run() {     48	                      //...     49	           } // this is NOT OK, brace is not on the same line as the next part     50	             // of a multi-block statement     51	        }); // this is OK, allowed for better code readability ```  missed violations at line: 5 , 49 , 43  We need to update documentation to explain that same = ""alone_or_singleline + demand to be on same line with next block if it present"".","closed","miscellaneous,","romani","2018-06-25T06:57:15Z","2018-07-05T07:55:11Z"
"","5314","EmptyLineSeparator: add xdoc examples","http://checkstyle.sourceforge.net/config_whitespace.html#EmptyLineSeparator  code: https://github.com/checkstyle/checkstyle/blob/master/src/xdocs/config_whitespace.xml#L218  add examples for all properties, with ""// violation"" comments inlined to code to show place of violation.  All examples should be compilable by ""javac"" actual violations on such examples you can get by our CLI - http://checkstyle.sourceforge.net/cmdline.html","closed","easy,","romani","2017-12-04T13:54:58Z","2020-04-07T05:54:47Z"
"","5226","JavadocMethod: Javadoc not found for an interface method","http://checkstyle.sourceforge.net/config_javadoc.html#JavadocMethod  /var/tmp $ javac TestClass.java (no errors)  /var/tmp $ cat TestClass.java  ``` package test;  interface TestInterface {   /**    * Javadoc    *     * @return foo    */   java.awt     .image.renderable     .ContextualRenderedImageFactory methodName(); // Javadoc NOT found }  abstract class TestClass implements TestInterface {   /**    * Javadoc    *     * @return foo    */   public abstract java.awt     .image.renderable     .ContextualRenderedImageFactory methodName(); // Javadoc found } ``` /var/tmp $ cat config.xml ```                    ```  /var/tmp $ java -Duser.language=en -Duser.country=US -jar checkstyle-8.3-all.jar -c config.xml TestClass.java  Starting audit... [ERROR] /var/tmp/TestClass.java:12:5: Missing a Javadoc comment. [JavadocMethod] Audit done. Checkstyle ends with 1 errors.  ---------------  When the full package name is present in the returned method type, and the package name is too long and needs to be wrapped, JavadocMethodCheck can not find the javadoc comment.  This bug affects only interface methods, class methods are ok.  --------------  /var/tmp $ java -Duser.language=en -Duser.country=US -jar checkstyle-8.3-all.jar -T TestClass.java  ``` PACKAGE_DEF -> package [1:0] |--ANNOTATIONS -> ANNOTATIONS [1:8] |--IDENT -> test [1:8] `--SEMI -> ; [1:12] INTERFACE_DEF -> INTERFACE_DEF [3:0] |--MODIFIERS -> MODIFIERS [3:0] |   `--LITERAL_PUBLIC -> public [3:0] |--LITERAL_INTERFACE -> interface [3:7] |--IDENT -> TestInterface [3:17] `--OBJBLOCK -> OBJBLOCK [4:0]     |--LCURLY -> { [4:0]     |--METHOD_DEF -> METHOD_DEF [12:4]     |   |--MODIFIERS -> MODIFIERS [12:4]     |   |--TYPE -> TYPE [12:4]     |   |   `--DOT -> . [12:4]     |   |       |--DOT -> . [11:10]     |   |       |   |--DOT -> . [11:4]     |   |       |   |   |--DOT -> . [10:6]     |   |       |   |   |   |--BLOCK_COMMENT_BEGIN -> /* [5:2]     |   |       |   |   |   |   |--COMMENT_CONTENT -> *\n   * Javadoc\n   * \n   * @return foo\n    [5:4]     |   |       |   |   |   |   `--BLOCK_COMMENT_END -> */ [9:3]     |   |       |   |   |   |--IDENT -> java [10:2]     |   |       |   |   |   `--IDENT -> awt [10:7]     |   |       |   |   `--IDENT -> image [11:5]     |   |       |   `--IDENT -> renderable [11:11]     |   |       `--IDENT -> ContextualRenderedImageFactory [12:5]     |   |--IDENT -> methodName [12:36]     |   |--LPAREN -> ( [12:46]     |   |--PARAMETERS -> PARAMETERS [12:47]     |   |--RPAREN -> ) [12:47]     |   `--SEMI -> ; [12:48]     |--SINGLE_LINE_COMMENT -> // [12:50]     |   `--COMMENT_CONTENT ->  Javadoc NOT found\n [12:52]     `--RCURLY -> } [13:0] CLASS_DEF -> CLASS_DEF [15:0] |--MODIFIERS -> MODIFIERS [15:0] |   |--LITERAL_PUBLIC -> public [15:0] |   `--ABSTRACT -> abstract [15:7] |--LITERAL_CLASS -> class [15:16] |--IDENT -> TestClass [15:22] |--IMPLEMENTS_CLAUSE -> implements [15:32] |   `--IDENT -> TestInterface [15:43] `--OBJBLOCK -> OBJBLOCK [16:0]     |--LCURLY -> { [16:0]     |--METHOD_DEF -> METHOD_DEF [22:2]     |   |--MODIFIERS -> MODIFIERS [22:2]     |   |   |--BLOCK_COMMENT_BEGIN -> /* [17:2]     |   |   |   |--COMMENT_CONTENT -> *\n   * Javadoc\n   * \n   * @return foo\n    [17:4]     |   |   |   `--BLOCK_COMMENT_END -> */ [21:3]     |   |   |--LITERAL_PUBLIC -> public [22:2]     |   |   `--ABSTRACT -> abstract [22:9]     |   |--TYPE -> TYPE [24:4]     |   |   `--DOT -> . [24:4]     |   |       |--DOT -> . [23:10]     |   |       |   |--DOT -> . [23:4]     |   |       |   |   |--DOT -> . [22:22]     |   |       |   |   |   |--IDENT -> java [22:18]     |   |       |   |   |   `--IDENT -> awt [22:23]     |   |       |   |   `--IDENT -> image [23:5]     |   |       |   `--IDENT -> renderable [23:11]     |   |       `--IDENT -> ContextualRenderedImageFactory [24:5]     |   |--IDENT -> methodName [24:36]     |   |--LPAREN -> ( [24:46]     |   |--PARAMETERS -> PARAMETERS [24:47]     |   |--RPAREN -> ) [24:47]     |   `--SEMI -> ; [24:48]     |--SINGLE_LINE_COMMENT -> // [24:50]     |   `--COMMENT_CONTENT ->  Javadoc found\n [24:52]     `--RCURLY -> } [25:0] ```","closed","javadoc,","pbludov","2017-10-24T06:00:32Z","2017-12-02T14:35:27Z"
"","5255","DesignForExtension: method javadoc is recognized if no modifier in on method","http://checkstyle.sourceforge.net/config_design.html#DesignForExtension  ``` /var/tmp $ javac BadStudent.java /var/tmp $ cat main/BasStudent.java public class BadStudent {     private String name;     public BadStudent(final String name) {         this.name = name;     }      /**      * Bad BadStudent      */     void putSuffix(final String sufix) {         name = new String(name + sufix);     } }  /var/tmp $ cat config.xml                         /var/tmp $ java -jar checkstyle-8.4-all.jar -c simple_config.xml BadStudent.java  Starting audit... [ERROR] /var/tmp/BadStudent.java:10:5: Class 'BadStudent' looks like designed for extension (can be subclassed), but the method 'putSuffix' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BadStudent' final or making the method 'putSuffix' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension] Audit done. Checkstyle ends with 1 errors. ```  ---------------  I expected to have no error since the javadoc was present. With any modifer, public, protected etc, the same javadoc is recognized by checkstyle.","closed","approved,","MihneaS","2017-11-10T23:04:19Z","2018-01-16T15:30:09Z"
"","5450","DesignForExtension: method javadoc recognized as block comments","http://checkstyle.sourceforge.net/config_design.html#DesignForExtension  ``` /var/tmp $ javac BadStudent.java /var/tmp $ cat main/BadStudent.java public class BadStudent {     private String name;     public BadStudent(final String name) {         this.name = name;     }      /* Block comment */ // is not javadoc, just a block comment, expected error                          // ""Class 'BadStudent' looks like designed for extension...""     public void putSuffix(final String suffix) {         name = new String(name + suffix);     } }  /var/tmp $ cat config.xml                         /var/tmp $ java -jar checkstyle-8.6-all.jar -c simple_config.xml BadStudent.java Starting audit... Audit done. ```   Need to fix using `branchContains` with `JavadocUtils.isJavadocComment`","closed","approved,","RoMaNiAsHkA","2018-01-09T00:14:26Z","2019-09-26T16:03:57Z"
"","5747","create examples for UnnecessaryParentheses usage","http://checkstyle.sourceforge.net/config_coding.html#UnnecessaryParentheses  no examples - hard to quickly understand what does it do. Good example of what is expected - http://checkstyle.sourceforge.net/config_coding.html#ArrayTrailingComma","closed","easy,","romani","2018-04-20T21:15:48Z","2019-10-07T22:33:59Z"
"","5746","UnnecessaryParenthesesCheck: violation changes for anonymous class being assigned to field","http://checkstyle.sourceforge.net/config_coding.html#UnnecessaryParentheses  ```` $ cat TestClass.java public class TestClass {     void method() {         Object a = null;         test((a == null ? a : null));  // violation     }      private static final MyInnerClass test = new MyInnerClass() {         public void method() {             Object a = null;             test((a == null ? a : null));  // violation         }     };      private static void test(Object a) {     }      private static class MyInnerClass {         public void method() {         }     } }  $ cat TestConfig.xml                        $ java -jar checkstyle-8.9-all.jar -c TestConfig.xml TestClass.java Starting audit... [ERROR] TestClass.java:4:14: Unnecessary parentheses around expression. [UnnecessaryParentheses] [ERROR] TestClass.java:10:18: Unnecessary parentheses around assignment right-hand side. [UnnecessaryParentheses] Audit done. Checkstyle ends with 2 errors. ````  The code is exactly the same for the 2 but one violation is about an expression while the other is about the right-handed side of the assignment. Once we enter the anonymous class, it stopped being about the assignment, so the violation message is misleading. It should be the same for lambdas. Both violation messages should say `Unnecessary parentheses around expression`.","open","approved,","rnveach","2018-04-20T15:19:54Z","2018-04-23T17:54:27Z"
"","5118","IllegalType: does not check types in generics","http://checkstyle.sourceforge.net/config_coding.html#IllegalType  Check documentation states: >  Checks that particular classes are never used as types in variable declarations, return values or parameters. Rationale: Helps reduce coupling on concrete classes.   ``` $ cat config.xml                                                $ cat MyClass.java  public class MyClass {     private MyClass1 b; // no violation, but it is expected     private class MyClass1{         T a;         T[] b;         T[][] c;     } }  $ java -jar checkstyle-8.2-all.jar -c config.xml MyClass.java  Starting audit... Audit done. ```  Checkstyle need to forbid usage of certain type completely. Expected: violation on line 2.  -----","closed","has bounty,","romani","2017-09-16T12:24:54Z","2020-01-06T03:12:37Z"
"","5129","IllegalType: update documentation to make it clear that LITERAL_NEW is not a target of this Check","http://checkstyle.sourceforge.net/config_coding.html#IllegalType  ``` $ javac Test.java  $ cat Test.java  class Test{   public Object foo(){     return new Boolean(true);   } }  $ cat config.xml                                                $ java -jar checkstyle-8.3-SNAPSHOT-all.jar -c config.xml Test.java  Starting audit... Audit done. ```  Expected: `[ERROR] Test.java:3:16: Declaring variables, return values or parameters of type 'Boolean' is not allowed. [IllegalType]`","closed","miscellaneous,","sergileon","2017-09-20T10:38:39Z","2017-09-21T13:19:22Z"
"","5876","xpath generator documentation does not show nuances","http://checkstyle.sourceforge.net/cmdline.html  > -s line:column - print xpath suppressions at the file's line and column position. Line and column numbers are integer values separated by a :, specify location in the file the suppression should be generated for. The option cannot be used with other options and requires exactly one file to run on to be specified.  noticed during https://github.com/checkstyle/checkstyle/pull/5762#discussion_r192256278,   looks like it is due to the fact that Check report problem on non text element from code, but to some AST token we can be sure what AST node to use for xpath generation. So we generate xpath for all tokens which are on the same line and column.  my experiment: ``` $ cat config.xml                                                       $ cat TestClass.java  package org.checkstyle.suppressionxpathfilter.cyclomaticcomplexity;  public class SuppressionXpathRegressionCyclomaticOne {     public void test(int a, int b) { //warn         if (a > b) {          } else {          }     }  $ java -jar checkstyle-8.10-all.jar -c config.xml TestClass.java  Starting audit... [ERROR] TestClass.java:4:5: Cyclomatic Complexity is 2 (max allowed is 0). [CyclomaticComplexity] Audit done. Checkstyle ends with 1 errors.  $ java -jar checkstyle-8.10-all.jar -t TestClass.java | grep ""4:5"" # adjustment to column from 0 $ java -jar checkstyle-8.10-all.jar -t TestClass.java | grep ""4:4""     |--METHOD_DEF -> METHOD_DEF [4:4]     |   |--MODIFIERS -> MODIFIERS [4:4]     |   |   `--LITERAL_PUBLIC -> public [4:4]  $ java -jar checkstyle-8.10-all.jar -s 4:5 TestClass.java /CLASS_DEF[@text='SuppressionXpathRegressionCyclomaticOne']/OBJBLOCK/METHOD_DEF[@text='test'] /CLASS_DEF[@text='SuppressionXpathRegressionCyclomaticOne']/OBJBLOCK/METHOD_DEF[@text='test']/MODIFIERS /CLASS_DEF[@text='SuppressionXpathRegressionCyclomaticOne']/OBJBLOCK/METHOD_DEF[@text='test']/MODIFIERS/LITERAL_PUBLIC ```  So we have 3 nodes with the same line:column, so we generate xpath for all of them. But only xpath for METHOD_DEF will work. So extra work is required for user.  there is no ""Attention"" note that generated suppressions might not work, so user should use them with caution and try them and choose that works.","closed","miscellaneous,","romani","2018-06-01T03:40:01Z","2018-06-17T19:20:47Z"
"","5389","Add example of custom jars to Ant Documentation","http://checkstyle.sourceforge.net/anttask.html  Should have an example similar to https://github.com/checkstyle/checkstyle/blob/6db65fbd6e39ee78937d6c16e618e201d222b8c2/config/ant-phase-verify.xml#L33 to show how to add a custom JAR (like sevntu) to the classpath.","open","easy,","rnveach","2017-12-25T17:50:03Z","2021-11-28T23:30:59Z"
"","5574","checkstyle.sourceforge.net down","http://checkstyle.sourceforge.net is down, and it's not temporary, it's been like this for about 2 weeks or so already... shame, for this great project! Google will typically start to automatically remove hits from search results for dead sites.. perhaps this should and could be sorted out. Or maybe it's time to buy a domain for CS after all these years... :-)   Can I help in any way with anything related to this?","closed","","vorburger","2018-03-02T14:38:34Z","2018-03-09T20:27:32Z"
"","5656","Add rule for missing javadoc @since annotation","How feasible would it be do add a rule for checking `@since` annotation missing in javadocs? At least for the class javadoc it should be straightforward.  For the methods, it's hard (impossible?) for the linter to know if it needs a `@since` (if the method is  added after the release of the version declared in the class `@since`), or not (the method is to be released in the same version that is declared in the class `@since`)","open","","pedrorijo91","2018-03-29T08:54:21Z","2018-03-29T16:38:44Z"
"","5258","CommentsIndentation executed while severity property is ""ignore""","Hi. I'am try to configure checkstyle on my project.  I'am using checkstyle-maven-plugin with dependency on checkstyle 8.0 version  ```  	com.puppycrawl.tools 	checkstyle 	8.0  ``` but my build is hanging on   ``` ""pool-1-thread-6"" #43 prio=5 os_prio=0 tid=0x00007f31d4316000 nid=0x3c5f runnable [0x00007f31a6785000]    java.lang.Thread.State: RUNNABLE 	at com.puppycrawl.tools.checkstyle.utils.CommonUtils.isBlank(CommonUtils.java:515) 	at com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck.countEmptyLines(CommentsIndentationCheck.java:754) 	at com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck.isOnPreviousLineIgnoringComments(CommentsIndentationCheck.java:709) 	at com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck.findPreviousStatement(CommentsIndentationCheck.java:647) 	at com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck.getOneLinePreviousStatement(CommentsIndentationCheck.java:575) 	at com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck.getPreviousStatement(CommentsIndentationCheck.java:183) 	at com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck.visitComment(CommentsIndentationCheck.java:135) 	at com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck.visitToken(CommentsIndentationCheck.java:113) 	at com.puppycrawl.tools.checkstyle.TreeWalker.notifyVisit(TreeWalker.java:368) 	at com.puppycrawl.tools.checkstyle.TreeWalker.processIter(TreeWalker.java:505) 	at com.puppycrawl.tools.checkstyle.TreeWalker.walk(TreeWalker.java:310) 	at com.puppycrawl.tools.checkstyle.TreeWalker.processFiltered(TreeWalker.java:187) 	at com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck.process(AbstractFileSetCheck.java:78) 	at com.puppycrawl.tools.checkstyle.Checker.processFile(Checker.java:316) 	at com.puppycrawl.tools.checkstyle.Checker.processFiles(Checker.java:286) 	at com.puppycrawl.tools.checkstyle.Checker.process(Checker.java:213) 	at org.apache.maven.plugin.checkstyle.exec.DefaultCheckstyleExecutor.executeCheckstyle(DefaultCheckstyleExecutor.java:252) 	at org.apache.maven.plugin.checkstyle.AbstractCheckstyleReport.executeReport(AbstractCheckstyleReport.java:473) 	at org.apache.maven.plugin.checkstyle.CheckstyleReport.executeReport(CheckstyleReport.java:154) 	at org.apache.maven.reporting.AbstractMavenReport.generate(AbstractMavenReport.java:255) 	at org.apache.maven.reporting.AbstractMavenReport.execute(AbstractMavenReport.java:143) 	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:101) 	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209) 	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153) 	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145) 	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84) 	at org.apache.maven.lifecycle.internal.LifecycleThreadedBuilder$1.call(LifecycleThreadedBuilder.java:167) 	at org.apache.maven.lifecycle.internal.LifecycleThreadedBuilder$1.call(LifecycleThreadedBuilder.java:163) 	at java.util.concurrent.FutureTask.run(FutureTask.java:266) 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) 	at java.util.concurrent.FutureTask.run(FutureTask.java:266) 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) 	at java.lang.Thread.run(Thread.java:745) ```  i'am don't understand why this check invokes because in my checkstyle config it has severity ""ignore""  ```         ```  and i'am **not** using **executeIgnoredModules** option  All checkstyle config  ``````","closed","","pe4enko","2017-11-12T20:26:33Z","2017-11-13T13:58:46Z"
"","5946","Activating Open Collective","Hi, I'm making updates for Open Collective. Either you or a supporter signed this repo up for Open Collective. This pull request adds backers and sponsors from your Open Collective https://opencollective.com/checkstyle ❤️      It adds two badges at the top to show the latest number of backers and sponsors. It also adds placeholders so that the avatar/logo of new backers/sponsors can automatically be shown without having to update your README.md. [[more info](https://github.com/opencollective/opencollective/wiki/Github-banner)]. See how it looks on [this repo](https://github.com/apex/apex#backers). You can also add a ""Donate"" button to your website and automatically show your backers and sponsors there with our widgets. Have a look here: https://opencollective.com/widgets    P.S: As with any pull request, feel free to comment or suggest changes. The only thing ""required"" are the placeholders on the README because we believe it's important to acknowledge the people in your community that are contributing (financially or with code!).    Thank you for your great contribution to the open source community. You are awesome! 🙌   And welcome to the open collective community! 😊    Come chat with us in the #opensource channel on https://slack.opencollective.com - great place to ask questions and share best practices with other open source sustainers!","closed","","monkeywithacupcake","2018-06-18T12:51:54Z","2018-06-20T05:02:28Z"
"","5486","Issue #2974: Fix EmptyLineSeparator check when class members are separated by comments","Hi,   I've attempted to fix issue #2974. I think I've managed to capture all of the edge cases by parsing comments from the beginning of the file. The code is quite complex, but I think that it needs to be due to all of the possible edge cases.  My test case covers all by 2 conditional branches in the new code. This means that the coverage check is failing.  I'm not expecting this pull-request to be merged at this stage, but as someone who hasn't contributed to Checkstyle before, I think I need some help with how to cover these 2 conditions. They only occur with invalid Java source files that have a single trailing slash at the end of a line. I can't work out how to add an invalid Java source file without the compiler complaining in the IDE. I tried giving the source file the extension "".txt"", but the `TreeWalker` filters out files not ending with "".java"".  As far as I am aware, all of the other checks are passing.  Thanks","closed","abandoned,","jjlharrison","2018-01-24T13:34:44Z","2018-06-28T23:08:43Z"
"","5434","Support of Spring Boot in the HideUtilityClassConstructorCheck rule","Hi, SonarQube creates an issue `Utility classes should not have a public or default constructor` (HideUtilityClassConstructorCheck) in the following code:  ![springboot](https://user-images.githubusercontent.com/10604335/34643836-a043b66c-f32b-11e7-9350-d92cfbb4a924.png)  Could you add a support for Spring Boot and not report an error in such cases?  Environment: * Checkstyle 8.5 * Checkstyle Plugin 4.5 * SonarQube 6.7  Example class: https://github.com/agabrys/sonarqube-falsepositives/blob/master/src/main/java/biz/gabrys/agabrys/sonarqube/falsepositives/d20180106/HideUtilityClassConstructorCheck.java  Project: https://github.com/agabrys/sonarqube-falsepositives  Build: mvn clean package sonar  Best Regards","closed","","agabrys","2018-01-06T20:53:26Z","2019-06-22T23:13:49Z"
"","5206","Can't start Checkstyle in Eclipse Version: Oxygen.1a Release (4.7.1a)","Hi, I get the following message after updating eclipse to latest release. (I have cleaned eclipse and reinstalled checkstyle.)  Expection:  `Unable to execute early startup code for the org.eclipse.ui.IStartup extension contributed by the 'net.sf.eclipsecs.ui' plug-in.`  Stack Trace; ``` org.eclipse.core.runtime.CoreException: Plug-in net.sf.eclipsecs.ui was unable to load class net.sf.eclipsecs.ui.CheckstylePluginStartup. 	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.throwException(RegistryStrategyOSGI.java:194) 	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:176) 	at org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension(ExtensionRegistry.java:905) 	at org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:243) 	at org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(ConfigurationElementHandle.java:55) 	at org.eclipse.ui.internal.WorkbenchPlugin.lambda$0(WorkbenchPlugin.java:288) 	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:52) 	at org.eclipse.ui.internal.WorkbenchPlugin.createExtension(WorkbenchPlugin.java:285) 	at org.eclipse.ui.internal.EarlyStartupRunnable.run(EarlyStartupRunnable.java:53) 	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42) 	at org.eclipse.ui.internal.Workbench$40.run(Workbench.java:2747) 	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56) Caused by: java.lang.ClassNotFoundException: An error occurred while automatically activating bundle net.sf.eclipsecs.ui (87). 	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:112) 	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:529) 	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:328) 	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:368) 	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:446) 	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:395) 	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:387) 	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:150) 	at java.lang.ClassLoader.loadClass(Unknown Source) 	at org.eclipse.osgi.internal.framework.EquinoxBundle.loadClass(EquinoxBundle.java:564) 	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:174) 	... 10 more Caused by: org.osgi.framework.BundleException: Exception in net.sf.eclipsecs.ui.CheckstyleUIPlugin.start() of bundle net.sf.eclipsecs.ui. 	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:800) 	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:729) 	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:933) 	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:309) 	at org.eclipse.osgi.container.Module.doStart(Module.java:581) 	at org.eclipse.osgi.container.Module.start(Module.java:449) 	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:468) 	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:103) 	... 20 more Caused by: java.lang.LinkageError: loader constraint violation: loader (instance of org/eclipse/osgi/internal/loader/EquinoxClassLoader) previously initiated loading for a different type with name ""org/eclipse/swt/widgets/Display"" 	at net.sf.eclipsecs.ui.CheckstyleUIPlugin.start(CheckstyleUIPlugin.java:84) 	at org.eclipse.osgi.internal.framework.BundleContextImpl$3.run(BundleContextImpl.java:779) 	at org.eclipse.osgi.internal.framework.BundleContextImpl$3.run(BundleContextImpl.java:1) 	at java.security.AccessController.doPrivileged(Native Method) 	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:772) 	... 27 more  ``` Session Data: ``` eclipse.buildId=4.7.1.M20171009-0410 java.version=1.8.0_141 java.vendor=Oracle Corporation BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=de_DE ```   Can you take a look?","closed","","Arghh","2017-10-20T12:21:27Z","2017-10-23T02:58:14Z"
"","5125","Enforce blank line annotated fields","Hi,  In today's value objects fields tend to be annotated. In most source codes out there, there is usually an empty line before the first annotation on the member field.  Example, instead : ``` public class Car{    @MyFirstAnnotation    @MySecondAnnotation    private int id;    private String firstname;    private String lastname;   @JsonProperty(""carAge"")    private int age;    private int bar;    private int baz;    @Column    private int comments; } ```  It should be: ``` public class Car{     @MyFirstAnnotation    @MySecondAnnotation    private int id;    private String firstname;    private String lastname;     @JsonProperty(""carAge"")    private int age;    private int bar;    private int baz     @Column    private int comments; } ```  Maybe we can add additional support to the SingleSpaceSeparator for these cases.  Regards","closed","","gkohen","2017-09-18T18:57:35Z","2020-02-24T16:53:23Z"
"","5290","change all sonarqube.com to sonarcloud.io","Hi,  About 6 months ago, we renamed SonarQube.com to SonarCloud. The URL of the service changed from https://sonarqube.com to https://sonarcloud.io.  I am contacting you because we noticed that you are still using the old URL (sonarqube.com) to point to the service when you run analyses. Typically, this is set through the ""sonar.host.url"" property in your build scripts, or in your CI tool configuration (like an end-point in VSTS or a global config in Jenkins).  In a few months, we are going to drop the old URL to keep only https://sonarcloud.io. You probably want to take a look at this early to prevent any futur errors in your build jobs.  Also, if you are using Travis as your CI engine to trigger the analyses, I suggest that you take a look at our Travis Add-on. Relying on this add-on would allow to not be impacted by potential similar changes in the future.  Hope you enjoy the service!  Best regards, Fabrice Bellingard | SonarSource SonarQube & SonarCloud Product Manager","closed","miscellaneous,","romani","2017-11-24T05:49:32Z","2017-12-05T14:05:54Z"
"","5515","[Help Wanted] Command argument that enbale to specify the suppression file","Hi team,  I have a question about running checkstyle through command line.  Is there any command argument that enbale to specify the suppression file(like this one: https://maven.apache.org/plugins/maven-checkstyle-plugin/examples/suppressions-filter.html)?  Thanks","closed","","jdneo","2018-02-08T07:10:00Z","2018-02-09T14:47:35Z"
"","5166","create XSD definition for XML report","Hi  Checkstyle can produce a report used later in different Services, like Sonar, Jenkins and so. Where can I find a xsd definition of that report ?","open","approved,","keradus","2017-10-01T18:21:31Z","2018-07-23T16:03:52Z"
"","5684","infra: update circleCI","here you can see my attempts to get CHECKSTYLE_POM_VERSION and use it in launch.groovy - none of them was successful https://circleci.com/gh/Vladlis/checkstyle/tree/circle-ci","closed","","Vladlis","2018-04-03T21:00:42Z","2018-04-06T00:19:35Z"
"","5268","False RedundantModifier violation for final method of enum inside final class","Here is code:  `TestClass.java`: ```java public final class TestClass {      public enum TestEnum {         VALUE {            @Override public void someMethodToOverride() {                 // do it differently             }          };          public void someMethodToOverride() { }         public static final void someStaticMethod() { }         public final void someMethod() { }         // unexpected violation here     }  } ```  `config.xml`: ```xml                         ```  Result: ``` java -jar checkstyle-8.4-all.jar -c config.xml TestClass.java  Starting audit... [ERROR] /var/tmp/Test.java:11:23: Redundant 'final' modifier. [RedundantModifier] [ERROR] /var/tmp/Test.java:12:16: Redundant 'final' modifier. [RedundantModifier] Audit done. Checkstyle ends with 2 errors. ```  Expected: only one violation `[ERROR] /var/tmp/Test.java:11:23: Redundant 'final' modifier. [RedundantModifier]`  https://docs.oracle.com/javase/specs/jls/se8/html/jls-8.html#jls-8.9 sub-classing of enum is forbidden but all constants could override methods. Documentation should have such example as it is not very obvious.","closed","approved,","frost13it","2017-11-16T05:42:27Z","2017-12-06T13:45:03Z"
"","5748","What is the format that ""includes"" property accepts?","Hello. I am writing a pre-commit hook that runs checkstyle before committing. I wish to ignore unchanged files or that is that is the same: run checkstyle for changed files only. I just do the following expecting that checkstyle runs for just `$PWD/src/main/java/com/grupo1/simulated_annealing/Simulated_annealing.java,$PWD/src/main/java/com/grupo1/simulated_annealing/Pista.java`. This is the command:  COMMAND: `mvn -pl . checkstyle:check -Dcheckstyle.config.location=/home/cfoch/NetBeansProjects/Simulated_Annealing_Algorithm/guidelines/sun_checks.xml -Dcheckstyle.includes=$PWD/src/main/java/com/grupo1/simulated_annealing/Simulated_annealing.java,$PWD/src/main/java/com/grupo1/simulated_annealing/Pista.java`:  And this is the output, as you can see it is not checking anything: OUTPUT: ``` [INFO] Scanning for projects... [INFO]  [INFO] ------------------------------------------------------------------------ [INFO] Building simulated_annealing 1.0-SNAPSHOT [INFO] ------------------------------------------------------------------------ [INFO]  [INFO] --- maven-checkstyle-plugin:3.0.0:check (default-cli) @ simulated_annealing --- [INFO] ------------------------------------------------------------------------ [INFO] BUILD SUCCESS [INFO] ------------------------------------------------------------------------ [INFO] Total time: 2.531 s [INFO] Finished at: 2018-04-20T17:41:24-05:00 [INFO] Final Memory: 14M/202M [INFO] ------------------------------------------------------------------------ ``` How should I use ""includes"" property? -> https://maven.apache.org/plugins/maven-checkstyle-plugin/checkstyle-mojo.html#includes","closed","","cfoch","2018-04-20T22:48:47Z","2020-04-30T09:32:19Z"
"","5188","left curly nlow documentation error?","Hello,  I think there is a typo in this documentation: https://github.com/checkstyle/checkstyle/blob/d8b0bce052afeaf792faa1abf503c3ad681e5520/src/xdocs/property_types.xml#L257-L259  new line is used when the statement/expression/declaration connected to the brace **does** span multiple lines (and not the opposite), as shown in the example:  https://github.com/checkstyle/checkstyle/blob/d8b0bce052afeaf792faa1abf503c3ad681e5520/src/xdocs/property_types.xml#L260-L271","closed","miscellaneous,","guillaumecle","2017-10-11T23:59:47Z","2017-10-24T12:47:39Z"
"","5296","Checkstyle crashes when for loop without braces has if with braces","Hello,  I would like to inform you that the following code causes checkstyle to crash:  ```java class Demo {     public static void main(String[] args) {         for (int i = 0; i < 5; i++)             if (1 < 2) {                 System.out.println(""Multiple line if block"");             }     } } ``` It happens when an `for` loop without braces contains nested `if` with curly braces inside.  The error output is obviously not suprising:  ``` [[ERROR] Failed to execute goal org.apache.maven.plugins:maven-checkstyle-plugin:2.17:check (validate) on project seminar-project: Execution validate of goal org.apache.maven.plugins:maven-checkstyle-plugin:2.17:check failed. NullPointerException -> [Help 1] ```  Although I can agree that the code above is not nice at all, it is definitely a bug. I can agree that the best way to avoid it is to to not write code like this at all, but our students sometimes write code like this and then they have surely no idea why the build is failing.  I hope it is an easy fix and could be resolved!  Thank you,  Marek","closed","","mareksabo","2017-11-25T09:49:28Z","2017-11-26T19:47:51Z"
"","5150","ruleset_2_0_0.xsd location","Greetings,  sourceforge has been flaky the last couple of days causes failures when processing   xsi:schemaLocation=""http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd"">  [xmlvalidate] /home/acme/etc/pmd-rules.xml:6:16: schema_reference.4: Failed to read schema document 'http://pmd.sourceforge.net/ruleset_2_0_0.xsd', because 1) could not find the document; 2) the document could not be read; 3) the root element of the document is not .  is there an alternative github location?","closed","","mebigfatguy","2017-09-27T21:39:53Z","2017-09-27T23:11:13Z"
"","5256","activate new sponsoring web services","Gratipay is down - https://gratipay.news/the-end-cbfba8f50981 , it never worked for us, removed at https://github.com/checkstyle/checkstyle/commit/dc6938c21da57cac0954112fb14aed2a21eff693.  interesting alternatives: https://liberapay.com/ https://opencollective.com/opensource  It is required to create account for project , register links to webservices at xdoc/sponsoring.xml  additionally review bountysource integration with github again, in case it is fixed.","closed","miscellaneous,","romani","2017-11-11T13:49:42Z","2018-06-07T04:24:26Z"
"","5671","spelling: grammar singleton","Generated by https://github.com/jsoref/spelling `f`; to maintain your repo, please consider `fchurn`  split from #5647","closed","","jsoref","2018-03-30T14:32:30Z","2018-04-02T15:43:01Z"
"","5670","Spelling tests","Generated by https://github.com/jsoref/spelling `f`; to maintain your repo, please consider `fchurn`  split from #5647","closed","","jsoref","2018-03-30T14:04:06Z","2018-04-02T15:42:13Z"
"","5669","spelling: block indentation","Generated by https://github.com/jsoref/spelling `f`; to maintain your repo, please consider `fchurn`  split from #5647","closed","","jsoref","2018-03-30T13:50:54Z","2018-04-01T03:21:22Z"
"","5668","spelling: grammar","Generated by https://github.com/jsoref/spelling `f`; to maintain your repo, please consider `fchurn`  split from #5647","closed","","jsoref","2018-03-30T13:50:45Z","2018-03-30T21:03:20Z"
"","5666","spelling: checkstyle profile","Generated by https://github.com/jsoref/spelling `f`; to maintain your repo, please consider `fchurn`  split from #5647","closed","","jsoref","2018-03-30T13:37:57Z","2018-03-30T13:41:51Z"
"","5654","spelling: comments","Generated by https://github.com/jsoref/spelling `f`; to maintain your repo, please consider `fchurn`  Note: there are probably some changes you'll ask to have dropped, e.g. changes to changelogs. In general, it's a terrible idea to include misspellings in changelogs, it means that a spelling checker can never pass your system. Instead, you should favor indicating the expected term and that it was misspelled...  split from #5647","closed","","jsoref","2018-03-28T23:31:22Z","2018-03-30T20:07:11Z"
"","5667","spelling: code","Generated by https://github.com/jsoref/spelling `f`; to maintain your repo, please consider `fchurn`  note that this conflicts with #5654 (because there are 2 lines in a row, one's a comment, one's code). It's trivially resolvable. My original commit sequence has this change built on top of that change, but for ""independent"" (conflicting) PRs, that progression can't be followed.  split from #5647","closed","","jsoref","2018-03-30T13:40:02Z","2018-04-01T03:20:59Z"
"","5613","Replace java.awt.event.InputEvent#getModifiers() with getModifiersEx()","From the [docs](https://docs.oracle.com/javase/8/docs/api/java/awt/event/MouseEvent.html#MouseEvent-java.awt.Component-int-long-int-int-int-int-boolean-):  > **modifiers** - a modifier mask describing the modifier keys and mouse buttons (for example, `shift`, `ctrl`, `alt`, and `meta`) that are down during the event. _Only extended modifiers are allowed to be used_ as a value for this parameter (see the `InputEvent.getModifiersEx()` class for the description of extended modifiers).  The method `TreeTable.isCellEditable(EventObject event)` should be upgraded.","closed","miscellaneous,","pbludov","2018-03-16T12:27:43Z","2018-03-17T05:11:58Z"
"","5606","Spot instanceof cast coding error","from SourceForge - https://sourceforge.net/p/checkstyle/feature-requests/425/  Created: 2006-08-17 Creator: Stephen Colebourne     We had the following coding error in our code today (a cut and paste): ``` if (obj instanceof Route) { return process((CarHireCentre) obj); } ```  Obviously this should have been: ``` if (obj instanceof Route) { return process((Route) obj); } ```  Perhaps this is something checkstyle could catch?","open","new module,","romani","2018-03-11T19:20:45Z","2018-03-11T20:54:02Z"
"","5980","doc: reference in SuppressionXpathFilter doc about ability to generate suppressions by CLI","from https://github.com/checkstyle/checkstyle/pull/5883#pullrequestreview-132851407  > Should we update http://checkstyle.sourceforge.net/config_filters.html#SuppressionXpathFilter to tell users about this option to help them generate suppressions?   it is better to add to documentation of SuppressionXpathFilter that there is CLI helper tool. Most user do not use CLI at all, but I hope almost all will use this filter and read documentation of it multiple times.","closed","approved,","romani","2018-06-28T20:48:16Z","2018-07-12T19:08:03Z"
"","5979","XpathFileGeneratorAstFilter: EVENTS and QUERIES as single map","from https://github.com/checkstyle/checkstyle/pull/5883#discussion_r198849898 ```  src/main/java/com/puppycrawl/tools/checkstyle/XpathFileGeneratorAstFilter.java +        String result = null; +        for (int i = 0; i < EVENTS.size(); i++) { +            final TreeWalkerAuditEvent treeWalkerAuditEvent = +                    EVENTS.get(i); ````  Should EVENTS and QUERIES be a single map? Should we be using the LocalizedMessage instead of the event? Message should be same instance between TreeWalker and Checker violations. Event will be different as one is TreeWalkerAuditEvent instance, and other is AuditEvent instance.  from: @timurt LocalizedMessage does not store file name to compare with AuditEvent's file name  from @rnveach If instances are the same, then it should be the same file. We don't re-use a LocalizedMessage for different files. Also you won't compare LocalizedMessage to AuditEvent. All audit events hold a LocalizedMessage.","closed","miscellaneous,","romani","2018-06-28T20:44:43Z","2018-07-12T03:16:35Z"
"","5697","refeactoring of UI code to move whole logic to Presentation classes","from https://github.com/checkstyle/checkstyle/pull/5641#discussion_r178609172  Ideally I would move enforce such classes to use Presentation classes and classes from jdk and nothing else. So to force all rendering preparation(even toString) to be delegated to Presentation. But this is completely different issue. To make at least some step in front of this goal: We can allow from checkstyle only import com.puppycrawl.tools.checkstyle.api.DetailAST; and import com.puppycrawl.tools.checkstyle.api.DetailNode;. All other should be delegated to Presentation class.  after Issue #3492 is fixed this should be enforced by ImportControl configuration.  But code could be re-factored even before #3492.","open","miscellaneous,","romani","2018-04-07T17:54:08Z","2018-06-13T03:30:40Z"
"","5144","EqualsAvoidNull: unstable amout of violations","from https://github.com/checkstyle/checkstyle/pull/5063#issuecomment-331678555 works fine for others sometime, reproduced all the time on my laptop and my environment: ``` $ mvn --version Apache Maven 3.3.9 (bb52d8502b132ec0a5a3f4c09453c07478323dc5; 2015-11-10T08:41:47-08:00) Maven home: /opt/maven/apache-maven-3.3.9 Java version: 1.8.0_131, vendor: Oracle Corporation Java home: /opt/jvm/jdk1.8.0_131/jre Default locale: en_US, platform encoding: UTF-8 OS name: ""linux"", version: ""4.4.0-96-generic"", arch: ""amd64"", family: ""unix"" ```","closed","approved,","romani","2017-09-24T14:02:43Z","2017-09-24T14:22:24Z"
"","5890","Change utils package to util","From https://github.com/checkstyle/checkstyle/issues/5790#issuecomment-388837593  There will be problem with xwiki, we not to provide them PR for migration.","closed","","romani","2018-06-04T16:42:44Z","2020-04-24T14:13:13Z"
"","5891","Change grammars package name to grammar","From https://github.com/checkstyle/checkstyle/issues/5790#issuecomment-388837593  Package name should be changed.","closed","miscellaneous,","romani","2018-06-04T16:43:32Z","2018-07-23T19:08:28Z"
"","5812","Rename all utility classes to xxxxUtil","From https://github.com/checkstyle/checkstyle/issues/5790  The utility class names in CS are inconsistent:  -  `AnnotationUtility` -  `TestUtil`, `XdocUtil`, `XmlUtil`, `XpathUtil` -  `CheckUtils`, `CommonUtils`, `FilterUtils`, `JavadocUtils`, `ScopeUtils`, `TokenUtils`  All of them should have the suffix `Util`.","closed","miscellaneous,","pbludov","2018-05-18T12:50:21Z","2018-06-04T16:45:10Z"
"","5765","Multiple integration test sets","from https://github.com/checkstyle/checkstyle/issues/5648#issuecomment-386111791  Originally added in scope of https://github.com/checkstyle/checkstyle/issues/863 Commit: https://github.com/checkstyle/checkstyle/commit/437986510709d7abc64b59c72779343ac5e77599  It is strange that two plugins are required to configure location of integration tests. We need to investigate why it was required. Ideally it should be done only in failsafe plugin. Additionally we need to split `it` in separate sub folders to ease management of them.  One proposal : https://github.com/checkstyle/checkstyle/issues/5648#issuecomment-385997501","open","approved,","romani","2018-05-02T20:49:21Z","2018-05-02T20:49:21Z"
"","5496","CI should fail if PR is based on an old master","from https://github.com/checkstyle/checkstyle/issues/5452#issuecomment-360902468 Parent commit in PR is considered old if there is more then 10 (for example) new commits in master or any config was updated.","closed","CI,","Vladlis","2018-01-28T14:33:02Z","2019-09-26T12:11:46Z"
"","5480","investigate and resolve compilation warnings","from build https://travis-ci.org/checkstyle/checkstyle/jobs/328807259#L642 :  [INFO] --- maven-compiler-plugin:3.7.0:testCompile (default-testCompile) @ checkstyle --- [INFO] Changes detected - recompiling the module! [INFO] Compiling 1335 source files to /home/travis/build/checkstyle/checkstyle/target/test-classes [WARNING] /home/travis/build/checkstyle/checkstyle/src/test/java/com/puppycrawl/tools/checkstyle/XmlLoaderTest.java:[36,47] com.sun.org.apache.xerces.internal.impl.Constants is internal proprietary API and may be removed in a future release [WARNING] /home/travis/build/checkstyle/checkstyle/src/test/java/com/puppycrawl/tools/checkstyle/XmlLoaderTest.java:[41,13] com.sun.org.apache.xerces.internal.impl.Constants is internal proprietary API and may be removed in a future release [WARNING] /home/travis/build/checkstyle/checkstyle/src/test/java/com/puppycrawl/tools/checkstyle/XmlLoaderTest.java:[41,44] com.sun.org.apache.xerces.internal.impl.Constants is internal proprietary API and may be removed in a future release [INFO] /home/travis/build/checkstyle/checkstyle/src/test/java/com/puppycrawl/tools/checkstyle/internal/utils/BriefUtLogger.java: Some input files use or override a deprecated API. [INFO] /home/travis/build/checkstyle/checkstyle/src/test/java/com/puppycrawl/tools/checkstyle/internal/utils/BriefUtLogger.java: Recompile with -Xlint:deprecation for details. [INFO] /home/travis/build/checkstyle/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/annotation/annotationonsameline/InputAnnotationOnSameLineCheckOnDifferentTokens.java: Some input files use unchecked or unsafe operations. [INFO] /home/travis/build/checkstyle/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/annotation/annotationonsameline/InputAnnotationOnSameLineCheckOnDifferentTokens.java: Recompile with -Xlint:unchecked for details.   if issues are complicated or might affect users, it might be better to split them to separate issues. Not clear why compiler try to analyse ""src/test/resources"" - during this phase, validation should be skipped.","closed","miscellaneous,","romani","2018-01-22T14:13:50Z","2018-03-31T14:23:08Z"
"","5400","Incorrect documentation for SuppressionXpathFilter","From [xdocs](https://github.com/checkstyle/checkstyle/blob/master/src/xdocs/config_filters.xml#L670):  ```                    Currently, filter supports the following           checks:                             CyclomaticComplexityCheck           DeclarationOrderCheck           DefaultComesLastCheck           ExplicitInitializationCheck           FallThroughCheck           HiddenFieldCheck           IllegalCatchCheck           IllegalThrowsCheck           JavadocMethodCheck           JavadocVariableCheck           ImportControlCheck           LeftCurlyCheck           MethodParamPadCheck           MultipleVariableDeclarationCheck           NestedForDepthCheck           NestedIfDepthCheck           NestedTryDepthCheck           NPathComplexityCheck           OneStatementPerLineCheck           OuterTypeNumberCheck           RequireThisCheck           RightCurlyCheck          ```  1) JavadocMethodCheck in [some cases](https://github.com/checkstyle/checkstyle/blob/03776416fef945f5ef204075bf2ac272f3a03b33/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java#L772) uses ```log``` method which does not set token type. If the check does not pass token type to log method (or AST object), we will not find the token in the Xtah-based tree [here](https://github.com/checkstyle/checkstyle/blob/1c73987f2f560ecabb6825943c8362fb11b67749/src/main/java/com/puppycrawl/tools/checkstyle/filters/XpathFilter.java#L160) as there are no tokens with index = 0 (0 is set by default in [LocalizedMessage constructor](https://github.com/checkstyle/checkstyle/blob/b16aef991830dd1fce1ce2640af7e7db8b329d86/src/main/java/com/puppycrawl/tools/checkstyle/api/LocalizedMessage.java#L201) method if token type is not set directly).  So we cannot say that we support JavadocMethodCheck in the new suppression model till https://github.com/checkstyle/checkstyle/issues/4830. Thus, JavadocMethodCheck should be removed from the list of supported checks. 2) ... need more time to review","closed","easy,","MEZk","2017-12-28T11:37:00Z","2018-01-19T14:33:34Z"
"","5605","New project badges at sonarcloud.io","from - https://about.sonarcloud.io/news/2018/02/05/new-project-badges.html  >New Project Badges Starting today, go and get the brand new badges for your open-source projects! You will find the badges at the bottom of your project home page. 3 formats are available:  the widely-spread badge that will nicely fit in the README file of your repository. You can select a bunch of metrics (technical debt, coverage, reliability rating, …) that you want to display. a “Quality Gate” nice card that will better fit on the official website of your open-source project. The card will turn to green or red, so that you know wether or not your source code can be released. a generic “Scanned on SonarCloud” badge to simply advertise that you care about the quality of what you deliver to your users. Those badges are currently available only for public projects. Having them for private ones will come later. Note for users who are already using badges from SonarCloud: as you will notice, the URL of the new badges is different from the one you are currently using. The old URL is deprecated as of today, and will be removed on Monday April, 2nd. Please update your README files!   we should use “Scanned on SonarCloud” , I do not want to see red badges on our home page, ones we fix all, we should use ""widely-spread badge""","closed","miscellaneous,","romani","2018-03-10T16:09:12Z","2018-03-11T18:47:00Z"
"","5138","JavadocTokenTypes.SINGLETON_ELEMENT should be renamed, singleton word should disappear from code at all","from #4448   there are still references to singletons: ``` $ grep -iranl ""singleton_"" * main/java/com/puppycrawl/tools/checkstyle/api/JavadocTokenTypes.java main/java/com/puppycrawl/tools/checkstyle/JavadocDetailNodeParser.java main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java test/java/com/puppycrawl/tools/checkstyle/DetailNodeTreeStringPrinterTest.java test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheckTest.java test/resources/com/puppycrawl/tools/checkstyle/grammars/javadoc/javadocTags/expectedSpaceBeforeDescriptionInBlockJavadocTagsAst.txt test/resources/com/puppycrawl/tools/checkstyle/grammars/javadoc/htmlTags/expectedMixedCaseOfHtmlTagsAst.txt test/resources/com/puppycrawl/tools/checkstyle/grammars/javadoc/htmlTags/expectedHtmlVoidElementSourceAst.txt test/resources/com/puppycrawl/tools/checkstyle/grammars/javadoc/htmlTags/expectedHtmlVoidElementTrackAst.txt test/resources/com/puppycrawl/tools/checkstyle/grammars/javadoc/htmlTags/expectedNestingWithSingletonElementAst.txt test/resources/com/puppycrawl/tools/checkstyle/grammars/javadoc/htmlTags/expectedVoidElementsAst.txt test/resources/com/puppycrawl/tools/checkstyle/grammars/javadoc/htmlTags/expectedHtmlVoidElementWbrAst.txt test/resources/com/puppycrawl/tools/checkstyle/grammars/javadoc/htmlTags/expectedHtmlVoidElementEmbedAst.txt test/resources/com/puppycrawl/tools/checkstyle/grammars/javadoc/htmlTags/expectedHtmlVoidElementKeygenAst.txt xdocs/writingjavadocchecks.xml.vm xdocs/releasenotes.xml  $ grep -iran ""singleton_"" * --include=""JavadocTokenTypes.java"" main/java/com/puppycrawl/tools/checkstyle/api/JavadocTokenTypes.java:1528:    public static final int SINGLETON_ELEMENT = JavadocParser.RULE_singletonElement main/java/com/puppycrawl/tools/checkstyle/api/JavadocTokenTypes.java:1578:     * @see #SINGLETON_ELEMENT main/java/com/puppycrawl/tools/checkstyle/api/JavadocTokenTypes.java:1586:     * @see #SINGLETON_ELEMENT main/java/com/puppycrawl/tools/checkstyle/api/JavadocTokenTypes.java:1594:     * @see #SINGLETON_ELEMENT main/java/com/puppycrawl/tools/checkstyle/api/JavadocTokenTypes.java:1601:     * @see #SINGLETON_ELEMENT main/java/com/puppycrawl/tools/checkstyle/api/JavadocTokenTypes.java:1610:     * @see #SINGLETON_ELEMENT  ```  There should be no term ""singleton"" at all.","open","antlr-javadoc,","romani","2017-09-23T14:07:53Z","2020-01-21T01:38:40Z"
"","5313","New Check: EmptyLineWrappingInBlockCheck","from #3923 and https://groups.google.com/forum/#!topic/checkstyle/KZn_d8nC4c0   New Check EmptyLineWrappingInBlockCheck tokens= [CLASS, METHOD, IF, ...........] (by default only class) topSeparator = [empty-line | empty-line-allowed | no-empty-line] bottomSeparator = [empty-line | empty-line-allowed | no-empty-line]  empty-line-allowed == mean no validation.  If you consider all my examples above, we could make config for methods to allow user's empty line at the top and completely forbid it at the bottom. BlockEmptyLineWrappingCheck tokens= ""METHOD_DEF"" topSeparator = ""empty-line-allowed"" bottomSeparator = ""no-empty-line""","open","new module,","romani","2017-12-04T13:50:51Z","2021-12-21T22:00:58Z"
"","5682","spelling: McConnell","Found while working on CI support","closed","","jsoref","2018-04-03T06:50:17Z","2018-04-03T15:07:42Z"
"","5447","Sourceforge Docs are Unavailable","For a couple weeks now the documentation on sourceforge has been unavailable. Accessing in any browser results in a timeout.  http://checkstyle.sourceforge.net/checks.html  This links is from the readme.","closed","","daniel-dara","2018-01-08T14:46:49Z","2018-01-08T14:49:09Z"
"","5601","http://checkstyle.sourceforge.net ==> http://checkstyle.org","Follow-up from #5574 (which I'll close) :  Reading https://sourceforge.net/p/forge/site-support/16482/, I get the feeling that it's probably a good time now for another step to move CS away from sourceforge.net? @romani in #5574 said, quote:  > actually we have checkstyle.org , but we never make it used, as checkstyle is not profitable at all. And my strict position is to not use any personal resources on this to not depend on single person.  so I propose this issue to move the website that is currently on http://checkstyle.sourceforge.net to http://[wwww.]checkstyle.org. This should hopefully be  possible using GitHub pages - I've done this myself for a few of my projects, and am willing to find the time to make a (small!) contribution to CS to help get this set up.  Just for the purpose of containing scope and have ""actionable"" issue, I also propose that this issue is strictly limited to moving the static content that today is on http://checkstyle.sourceforge.net, **exactly as it is**, over to a checkstyle.org.   We probably should have the discussion about what to the with the existing site - HTTP redirects? At root? On every page??   But IMHO we should use other new issues for any discussion related to _""a good opportunity to revamp the site as well, as it is a bit dated.""_ and _""propose using a more modern static site generator like Jekyll (which integrates well with GitHub Pages). The upshot of doing it this way would be that the site content could just be (mostly) written with Markdown instead of xdoc.""_ (@ntsim) nor ""release uploads"" related stuff (@misery) - I can only encourage anyone with bandwith to help driving those possible follow ups to this issue in new issues (which I personally will not have the capacity to help with).  So I think what that this boils down to is just (a) do a test to confirm we can host content on checkstyle.org using GitHub pages (test that CNAME thing we'll have to do), and then (b) get the Travis CI master build job to push the output produced by ""mvn clean site"" to where we ended up hosting the generated content for checkstyle.org - which I'm guessing will either be the ""gh-pages"" branch of this repo, or a new repo like www.checkstyle.org under this org; what's easier, anyone?  @romani can you confirm that you have DNS control over checkstyle.org ?","closed","deploy,","vorburger","2018-03-09T13:40:26Z","2019-12-13T00:46:05Z"
"","5693","jsoref spell checker: remove resource from validation","Folders to skip by spell checker: `src/test/resources/*` `src/it/resources/*` such folders contains ugly code by design, all mistakes in them are done on purpose for testing.   cleanup https://github.com/checkstyle/contribution/blob/master/jsoref-spellchecker/whitelist.words from odd names.","closed","miscellaneous,","romani","2018-04-05T23:59:29Z","2018-04-17T23:54:20Z"
"","5646","Fixes for GWT and Guava links in docs","Fixes for GWT and Guava links in docs","closed","","jsoref","2018-03-26T00:48:20Z","2018-03-27T15:03:47Z"
"","5077","config: Update pmd-test.xml","Fixed syntax ""//"" syntax is missing","closed","","pingping-n","2017-09-05T17:06:45Z","2017-09-06T12:10:12Z"
"","5128","Issue #5118: added check for generics","fixed Issue #5118","closed","has bounty,","sergileon","2017-09-19T13:21:47Z","2018-07-31T08:48:49Z"
"","5199","Issue #5114: Removed extra numeric offset","Fixed issue #5114","closed","","umkamax","2017-10-18T11:03:31Z","2017-12-19T10:05:10Z"
"","5195","Issue #3870: Added skip_commits section to appveyor.yml","Fixed issue #3870  Test commit will be removed after review.","closed","","umkamax","2017-10-17T13:01:26Z","2017-12-19T10:02:50Z"
"","5580","Issue #5489: Fixed indentation in config_regexp.xml","Fixed indentation in config_regexp.xml #5489","closed","","varunu28","2018-03-06T18:02:14Z","2018-03-06T21:01:09Z"
"","5523","Issue #5489: Fixed indentation in config_coding.xml","Fixed indentation in config_coding.xml related to #5489","closed","","varunu28","2018-02-14T15:48:57Z","2018-02-19T19:11:45Z"
"","5519","Issue #5489: Fixed indentation in config_annotation.xml","Fixed indentation in config_annotation.xml for #5489","closed","","varunu28","2018-02-11T18:43:12Z","2018-02-12T15:19:31Z"
"","5457","minor: Update README.md","Fixed a typo in README","closed","","varunu28","2018-01-13T03:12:34Z","2018-01-13T14:29:27Z"
"","5109","Issue #4425: fixed multidimensional array types","Fixed [issue](https://github.com/checkstyle/checkstyle/issues/4425)","closed","","sergileon","2017-09-14T12:59:13Z","2017-12-19T10:04:41Z"
"","5122","Issue #4092: added count complexity for extends,implements and annota…","Fixed [issue 4092](https://github.com/checkstyle/checkstyle/issues/4092)","closed","has bounty,","sergileon","2017-09-18T15:02:50Z","2018-07-29T09:19:10Z"
"","5107","Issue #4157: added support for varargs.","Fixed [https://github.com/checkstyle/checkstyle/issues/4157](https://github.com/checkstyle/checkstyle/issues/4157)","closed","","sergileon","2017-09-13T08:52:01Z","2017-09-14T09:24:10Z"
"","5073","Issue #4429: IllegalType: support arrays as types","fixed #4429","closed","abandoned,","sergileon","2017-09-05T10:10:41Z","2018-01-13T16:54:41Z"
"","5228","Fix violations from new sevntu check - CheckstyleTestMakeupCheck","Fix violations found by new sevntu check at https://github.com/sevntu-checkstyle/sevntu.checkstyle/issues/610 .","closed","miscellaneous,","rnveach","2017-10-24T14:32:18Z","2017-11-26T13:56:34Z"
"","5082","Fix up Portuguese messages","Fix up the horrible broken Portuguese translation.  The Portuguese translation of Checkstyle is one of the worst I've seen. The current translation features very badly translated words, very broken and malformed Portuguese grammar and also mixes up inconsistently the Brazilian and European dialects. It is so awful and unreliable that many of the messages reads as utterly useless gibberish in Portuguese and most of the times that I use checkstyle (which sees that Portuguese is my language due to my Locale), for at least some messages, I must check the original English messages to make any sense of them.  I thought about opening up an issue for that. However, I think that a PR is simply more productive. My translation (hopefully) fixes all the bad Portuguese messages. Even if I took one of two of them wrong, they are waaaay better than what it was before.  I standardized them into PT_BR (Brazilian Portuguese), spoken by much more people than the PT_PT one (spoken in Portugal, Angola, Mozambique and a few other countries). I would appreciate to provide a proper PT_PT translation in the near future, using as its starting point the PT_BR one that I'm providing (just a few sentences would need to be rewritten). However, I can't provide one right now.  Here are some of the really bad examples:  ----  **Example:** _Annotation array values cannot contain trailing comma._ **How it was translated:** _Anotação valores de matriz não pode conter fuga vírgula._ **What does the translation means in English:** _Matrix values annotation cannot contain comma run away._ **Proposed new translation:** _A lista de valores de um array de anotações não pode ser terminada em uma vírgula._ **Translation back in English of the proposal:** _The list of values of an annotation array cannot be finished with a comma._  ----  **Example:** _Duplicate {0} tag._ **How it was translated:** _Duplicar {0} tag._ **Translating back to English:** _To duplicate tag {0}._ **How it should be interpreted by a programmer in English:** _Oops, we found the {0} tag duplicated. You should not do that!_ **How does the translation would be interpreted by a programmer in Portuguese:** _You should duplicate the tag {0}._  The problem here is that the ""duplicate"" word which meant to be as an adjective in English was taken as a verb in Portuguese and the result translation was exactly the opposite of what it should be. There weren't enough context in the original message for a reasonable machine translation.  **Proposed new translation:** _A tag {0} não deveria ser duplicada._ **Translation back in English of the proposal:** _The tag {0} should not be duplicated._  ----  **Example:** _Don''t use trailing comments._ **How it was translated:** _Don 't usar arrastando comentários._  Yuck! Here, the sentence is part in English and part in Portuguese. ""Don 't"" do not means anything at all in Portuguese.  **What does the part actually translated in Portuguese means in English:** _to use dragging comments._ **Proposed new translation**: _Não use comentários no final de linhas._ **Translation back in English of the proposal:** _Do not use comments at line endings._  ----  **Example:** _Must include both @java.lang.Deprecated annotation and @deprecated Javadoc tag with description._ **How it was translated:** _Deve incluir tanto @ anotação java.lang.Deprecated e tag Javadocdeprecated com a descrição._ **What does the translation means in English:** _Must include much @ annotation java.lang.Deprecated and tag Javadocdeprecated with the description._  This translation is particularly awful because one of the `@` sign was dropped and other was separated from the annotation name. ""Javadocdeprecated"" was smashed together into a single word. It also features horribly broken Portuguese grammar.  **Proposed new translation:** _Deveria incluir tanto a anotação @java.lang.Deprecated como a tag @deprecated do Javadoc com a devida descrição._ **Translation back in English of the proposal:** _Should include both the annotation @java.lang.Deprecated just as the @deprecated Javadoc tag with the needed description._  ----  **Example:** _Default should be last label in the switch._ **How it was translated:** _Padrão deve ser a última etiqueta no interruptor._ **What does the translation means in English:** _Pattern must be the last ticket in interrupter._ **Proposed new translation:** _O default deve ser a última entrada no switch._ **Translation back in English of the proposal:** _The default must be the last input in the switch._  ----  **Example:** _String literal expressions should be on the left side of an equals comparison._ **How it was translated:** _Corda expressões literais deve estar no lado esquerdo de um é igual comparação._ **What does the translation means in English:** _Literal expressions rope must be in the left side of a one is equal comparision._  WOW! That awful translation simply makes my eyes bleed!  **Proposed new translation:** _Literais de String deveriam estar no lado esquerdo de comparações feitas com equals._ **Translation back in English of the proposal:** _String literals should be in the left side of comparisons performed with equals._  ----  **Example:** _Throwing ''{0}'' is not allowed._ **How it was translated:** _Jogando ''{0}'' não é permitido._ **What does the translation means in English:** _Playing ''{0}'' is not allowed._ **Proposed new translation:** _Lançar ''{0}'' não é permitido._ **Translation back in English of the proposal:** _Throw ''{0}'' is not allowed._  ----  **Example:** _File match folder pattern ''{0}'' and file pattern ''{1}''._ **How it was translated (using the wrong encoding):** _Arquivo padr�o pasta jogo ''{0}'' e arquivo padr�o ''{1}''._ **What does the translation means in English:** _Standard file folder game ''{0}}'' and standard file ''{1}''._ **Proposed new translation:** _O nome do arquivo condiz com o padrão ''{0}'' para pastas e com o padrão ''{1}'' para arquivos._ **Translation back in English of the proposal:** _The file name matches the pattern ''{0}'' for folders and the pattern ''{1}'' for files._  ----  **Example:** _{0} statement should not be line-wrapped._ **How it was translated:** _{0} afirmação não deve ser linha-embrulhado._ **What does the translation means in English:** _{0} affirmation should not be line-embroiled._ **Proposed new translation:** _A instrução {0} não deveria ser dividida em mais de uma linha._ **Translation back in English of the proposal:** _The instruction {0} should not be splitted into more than one line._","closed","miscellaneous,","victorwss","2017-09-06T17:50:48Z","2017-09-14T13:02:04Z"
"","5466","spelling: Fix typo","Fix spelling typo.","closed","","TDesjardins","2018-01-17T14:05:23Z","2018-01-18T05:04:09Z"
"","5577","doc: typos and grammar fixes on website main page","Fix some typos and grammar on the main web page.","closed","","Bananeweizen","2018-03-04T18:15:31Z","2018-03-09T05:48:40Z"
"","5354","minor: fixed missing coverage in SeverityMatchFilter","Fix for missing coverage in master that pitest caught.  35c607f167d79343258926919799dab9bce9d33b added a new method to the class and no new tests were added. a3ea8636e224f854ce56450c65139a805a9fab6f forced violations if pitest had uncovered lines. The 2 in the end conflicted with one another.","closed","","rnveach","2017-12-13T18:34:04Z","2017-12-14T02:05:44Z"
"","5391","Issue #5387: removed @return JavaDoc block tag from NonEmptyAtclauseD…","Fix for Issue #5387","closed","","sikhlev","2017-12-26T11:49:54Z","2018-05-09T11:54:23Z"
"","5189","Issue #5188: fix left curly nlow documentation","Fix for Issue #5188","closed","","guillaumecle","2017-10-12T01:02:03Z","2017-10-24T12:47:03Z"
"","5194","Issue #5127: Fixed NPE in JavadocPackageCheck when relative path is used to run checkstyle CLI","Fix for issue #5127.","closed","","AADudkin","2017-10-17T10:35:20Z","2017-12-19T10:06:19Z"
"","5394","Issue: #5393 Some contents in messages_zh.properties for imports check are not well translated","Fix for #5393  Change the Traditional Chinese to Simplified Chinese. Align the translation for word 'import' to '导入'.","closed","","Apache9","2017-12-27T04:05:59Z","2017-12-28T18:38:17Z"
"","5396","Issue #5388: added exception JavaDoc block tag to NonEmptyAtclauseDes…","Fix for #5388","closed","","sikhlev","2017-12-27T12:40:34Z","2017-12-27T18:22:37Z"
"","5196","Redundant first argument in FileSetCheck.process(File file, FileText fileText) method","FileText class already contains reference to File object it represents. Is it necessary to explicitly pass File object to method?","open","","AADudkin","2017-10-17T15:23:27Z","2017-10-27T22:58:00Z"
"","5653","Update Circle CI to use shell script(s) from '.ci' folder","file https://github.com/checkstyle/checkstyle/blob/master/circle.yml  have all that is required in one file, that was convenient when we had no "".ci"" folder. Now almost all CIs configurations were updated to simply call script from "".ci"" folder, to be easily reused on local.  we need to update it to run all in similar way as https://github.com/checkstyle/checkstyle/blob/master/wercker.yml#L48  https://github.com/checkstyle/checkstyle/blob/master/.travis.yml#L169","closed","CI,","romani","2018-03-28T21:35:00Z","2018-04-30T19:57:21Z"
"","5037","FallThrough check doesn't handle synchronized blocks","Fall through does not occur in this example, but checkstyle reports a warning.  ```java class Test {   void synchronizedStatement() {     switch (hashCode()) {       case 1:         synchronized (this) {           break;         }       default:     }   } } ```  ``` java -jar checkstyle-8.2-all.jar -c google_checks.xml Test.java ... [WARN] Test.java:8:7: Fall through from previous branch of the switch statement. [FallThrough] ```  Config: ```xml                          		        ```","closed","approved,","cushon","2017-08-31T16:19:57Z","2017-09-01T06:30:05Z"
"","5405","SuppressWithPlainTextCommentFilter: should not fail when violation is reported on directory","failed at: https://app.wercker.com/checkstyle/checkstyle/runs/build/5a47bc6bf5917400014c5856?step=5a47bca096da830001a29378  actual error message is always different: ` Cannot read source file: /pipeline/source/sevntu.checkstyle/sevntu-checks/src/main/resources/com/github/sevntu/checkstyle/checks/naming` some time it is ""..../annotation"" https://app.wercker.com/checkstyle/checkstyle/runs/build/5a47b18af5917400014c55f9?step=5a47b1bd540e1a00014dc334 `[ERROR] Failed to execute goal org.apache.maven.plugins:maven-checkstyle-plugin:2.17:check (default) on project sevntu-checks: Execution default of goal org.apache.maven.plugins:maven-checkstyle-plugin:2.17:check failed: Cannot read source file: /pipeline/source/sevntu.checkstyle/sevntu-checks/src/main/resources/com/github/sevntu/checkstyle/checks/annotation: /pipeline/source/sevntu.checkstyle/sevntu-checks/src/main/resources/com/github/sevntu/checkstyle/checks/annotation (Is a directory) -> [Help 1]`  not reproducible on my local.  ``` CS_version: 8.6-SNAPSHOT Cloning into 'sevntu.checkstyle'... [INFO] Scanning for projects... [INFO] Inspecting build with total of 1 modules... [INFO] Installing Nexus Staging features: [INFO]   ... total of 1 executions of maven-deploy-plugin replaced with nexus-staging-maven-plugin [INFO]                                                                          [INFO] ------------------------------------------------------------------------ [INFO] Building sevntu-checks 1.25.0 [INFO] ------------------------------------------------------------------------ [INFO]  [INFO] --- maven-enforcer-plugin:1.2:enforce (enforce-maven) @ sevntu-checks --- [INFO]  [INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ sevntu-checks --- [INFO] Using 'iso-8859-1' encoding to copy filtered resources. [INFO] Copying 6 resources [INFO]  [INFO] --- maven-compiler-plugin:3.3:compile (default-compile) @ sevntu-checks --- [INFO] Changes detected - recompiling the module! [INFO] Compiling 64 source files to /pipeline/source/sevntu.checkstyle/sevntu-checks/target/classes [INFO]  [INFO] --- maven-checkstyle-plugin:2.17:check (default) @ sevntu-checks --- [INFO] ------------------------------------------------------------------------ [INFO] BUILD FAILURE [INFO] ------------------------------------------------------------------------ [INFO] Total time: 11.320 s [INFO] Finished at: 2017-12-30T16:26:21+00:00 [INFO] Final Memory: 48M/1468M [INFO] ------------------------------------------------------------------------ [ERROR] Failed to execute goal org.apache.maven.plugins:maven-checkstyle-plugin:2.17:check (default) on project sevntu-checks: Execution default of goal org.apache.maven.plugins:maven-checkstyle-plugin:2.17:check failed: Cannot read source file: /pipeline/source/sevntu.checkstyle/sevntu-checks/src/main/resources/com/github/sevntu/checkstyle/checks/naming: /pipeline/source/sevntu.checkstyle/sevntu-checks/src/main/resources/com/github/sevntu/checkstyle/checks/naming (Is a directory) -> [Help 1] [ERROR]  [ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch. [ERROR] Re-run Maven using the -X switch to enable full debug logging. [ERROR]  [ERROR] For more information about the errors and possible solutions, please read the following  ```","closed","approved,","romani","2017-12-30T16:31:34Z","2017-12-31T15:57:52Z"
"","5115","doc: extend javadoc for JavadocTokenTypes.RULE_TYPES_OFFSET","extension of doc, in scope of #5114.","closed","","romani","2017-09-15T12:57:12Z","2017-09-16T00:43:21Z"
"","5741","Remove from whitelist file odd words that came from test imput files","Example: https://github.com/checkstyle/checkstyle/blob/master/.ci/jsoref-spellchecker/whitelist.words#L1  In input we can use any good word instead.","open","miscellaneous,","romani","2018-04-19T01:05:43Z","2020-04-27T17:04:23Z"
"","5991","speedup Distelli(Puppet) CI with usage of our docker image","example of bulid https://pipelines.puppet.com/checkstyle/builds/418575  distelli/puppet does not provide cache so build do downloads of all artifacts from scratch. It  takes time ~8 minutes. After [commit](https://github.com/checkstyle/checkstyle/commit/72ce5b80adaee4b9a0f9aeb767bfe4343f182196) it become 6 minutes. But actual validation is only 2 min (`Total time: 01:58 min` from log)  it now supports docker images usage - https://puppet.com/docs/pipelines-for-apps/free/docker.html  We need to find way to make it work. As we complete this, Distelli could be used in PR validations and we can looks how can we reuse it for more validations.  Our docker image - https://hub.docker.com/r/checkstyle/maven-builder-image/","closed","CI,","romani","2018-07-02T02:59:14Z","2019-08-24T23:58:39Z"
"","5482","JavadocStyle isn't supporting {@code} construct","Example input:  ``` /**  * Maven2 plugin to install one or several extensions into a running XWiki instance. This is useful for example  * when provisioning an XWiki instance for executing functional tests.  *  * Example usage:  *   *  * {@code  *   *   org.xwiki.platform  *   xwiki-platform-tool-provision-plugin  *   ...version...  *     *     Admin  *     admin  *       *         *         org.xwiki.contrib.markdown:syntax-markdown-markdown12  *         8.5.1  *         *       *     *     *       *       install  *         *         install  *         *       *     *   * }  *  * @version $Id: 659c3caef65105689d888af7b34d17d7e52175fd $  * @since 10.0RC1  */ ```  Yield:  ``` [INFO] --- maven-checkstyle-plugin:3.0.0:check (default) @ xwiki-platform-tool-provision-plugin --- [INFO] Starting audit... [ERROR] /Users/vmassol/dev/xwiki/xwiki-platform/xwiki-platform-tools/xwiki-platform-tool-provision-plugin/src/main/java/org/xwiki/tool/provision/InstallMojo.java:60:33: Extra HTML tag found:  [JavadocStyle] [ERROR] /Users/vmassol/dev/xwiki/xwiki-platform/xwiki-platform-tools/xwiki-platform-tool-provision-plugin/src/main/java/org/xwiki/tool/provision/InstallMojo.java:61:54: Extra HTML tag found:  [JavadocStyle] [ERROR] /Users/vmassol/dev/xwiki/xwiki-platform/xwiki-platform-tools/xwiki-platform-tool-provision-plugin/src/main/java/org/xwiki/tool/provision/InstallMojo.java:62:28: Extra HTML tag found:  [JavadocStyle] [ERROR] /Users/vmassol/dev/xwiki/xwiki-platform/xwiki-platform-tools/xwiki-platform-tool-provision-plugin/src/main/java/org/xwiki/tool/provision/InstallMojo.java:64:23: Extra HTML tag found:  [JavadocStyle] [ERROR] /Users/vmassol/dev/xwiki/xwiki-platform/xwiki-platform-tools/xwiki-platform-tool-provision-plugin/src/main/java/org/xwiki/tool/provision/InstallMojo.java:65:23: Extra HTML tag found:  [JavadocStyle] [ERROR] /Users/vmassol/dev/xwiki/xwiki-platform/xwiki-platform-tools/xwiki-platform-tool-provision-plugin/src/main/java/org/xwiki/tool/provision/InstallMojo.java:68:69: Extra HTML tag found:  [JavadocStyle] [ERROR] /Users/vmassol/dev/xwiki/xwiki-platform/xwiki-platform-tools/xwiki-platform-tool-provision-plugin/src/main/java/org/xwiki/tool/provision/InstallMojo.java:69:26: Extra HTML tag found:  [JavadocStyle] [ERROR] /Users/vmassol/dev/xwiki/xwiki-platform/xwiki-platform-tools/xwiki-platform-tool-provision-plugin/src/main/java/org/xwiki/tool/provision/InstallMojo.java:70:10: Extra HTML tag found:  [JavadocStyle] [ERROR] /Users/vmassol/dev/xwiki/xwiki-platform/xwiki-platform-tools/xwiki-platform-tool-provision-plugin/src/main/java/org/xwiki/tool/provision/InstallMojo.java:71:8: Extra HTML tag found:  [JavadocStyle] [ERROR] /Users/vmassol/dev/xwiki/xwiki-platform/xwiki-platform-tools/xwiki-platform-tool-provision-plugin/src/main/java/org/xwiki/tool/provision/InstallMojo.java:72:6: Extra HTML tag found:  [JavadocStyle] [ERROR] /Users/vmassol/dev/xwiki/xwiki-platform/xwiki-platform-tools/xwiki-platform-tool-provision-plugin/src/main/java/org/xwiki/tool/provision/InstallMojo.java:75:21: Extra HTML tag found:  [JavadocStyle] [ERROR] /Users/vmassol/dev/xwiki/xwiki-platform/xwiki-platform-tools/xwiki-platform-tool-provision-plugin/src/main/java/org/xwiki/tool/provision/InstallMojo.java:77:25: Extra HTML tag found:  [JavadocStyle] [ERROR] /Users/vmassol/dev/xwiki/xwiki-platform/xwiki-platform-tools/xwiki-platform-tool-provision-plugin/src/main/java/org/xwiki/tool/provision/InstallMojo.java:78:10: Extra HTML tag found:  [JavadocStyle] [ERROR] /Users/vmassol/dev/xwiki/xwiki-platform/xwiki-platform-tools/xwiki-platform-tool-provision-plugin/src/main/java/org/xwiki/tool/provision/InstallMojo.java:79:8: Extra HTML tag found:  [JavadocStyle] [ERROR] /Users/vmassol/dev/xwiki/xwiki-platform/xwiki-platform-tools/xwiki-platform-tool-provision-plugin/src/main/java/org/xwiki/tool/provision/InstallMojo.java:80:6: Extra HTML tag found:  [JavadocStyle] [ERROR] /Users/vmassol/dev/xwiki/xwiki-platform/xwiki-platform-tools/xwiki-platform-tool-provision-plugin/src/main/java/org/xwiki/tool/provision/InstallMojo.java:81:4: Extra HTML tag found:  [JavadocStyle] Audit done. [INFO] There are 16 errors reported by Checkstyle 8.7 with checkstyle.xml ruleset. [ERROR] src/main/java/org/xwiki/tool/provision/InstallMojo.java:[60,33] (javadoc) JavadocStyle: Extra HTML tag found:  [ERROR] src/main/java/org/xwiki/tool/provision/InstallMojo.java:[61,54] (javadoc) JavadocStyle: Extra HTML tag found:  [ERROR] src/main/java/org/xwiki/tool/provision/InstallMojo.java:[62,28] (javadoc) JavadocStyle: Extra HTML tag found:  [ERROR] src/main/java/org/xwiki/tool/provision/InstallMojo.java:[64,23] (javadoc) JavadocStyle: Extra HTML tag found:  [ERROR] src/main/java/org/xwiki/tool/provision/InstallMojo.java:[65,23] (javadoc) JavadocStyle: Extra HTML tag found:  [ERROR] src/main/java/org/xwiki/tool/provision/InstallMojo.java:[68,69] (javadoc) JavadocStyle: Extra HTML tag found:  [ERROR] src/main/java/org/xwiki/tool/provision/InstallMojo.java:[69,26] (javadoc) JavadocStyle: Extra HTML tag found:  [ERROR] src/main/java/org/xwiki/tool/provision/InstallMojo.java:[70,10] (javadoc) JavadocStyle: Extra HTML tag found:  [ERROR] src/main/java/org/xwiki/tool/provision/InstallMojo.java:[71,8] (javadoc) JavadocStyle: Extra HTML tag found:  [ERROR] src/main/java/org/xwiki/tool/provision/InstallMojo.java:[72,6] (javadoc) JavadocStyle: Extra HTML tag found:  [ERROR] src/main/java/org/xwiki/tool/provision/InstallMojo.java:[75,21] (javadoc) JavadocStyle: Extra HTML tag found:  [ERROR] src/main/java/org/xwiki/tool/provision/InstallMojo.java:[77,25] (javadoc) JavadocStyle: Extra HTML tag found:  [ERROR] src/main/java/org/xwiki/tool/provision/InstallMojo.java:[78,10] (javadoc) JavadocStyle: Extra HTML tag found:  [ERROR] src/main/java/org/xwiki/tool/provision/InstallMojo.java:[79,8] (javadoc) JavadocStyle: Extra HTML tag found:  [ERROR] src/main/java/org/xwiki/tool/provision/InstallMojo.java:[80,6] (javadoc) JavadocStyle: Extra HTML tag found:  [ERROR] src/main/java/org/xwiki/tool/provision/InstallMojo.java:[81,4] (javadoc) JavadocStyle: Extra HTML tag found:  ```  Something as simple as the following makes checkstyle choke:  ```  * {@code } ```  Thanks!","closed","","vmassol","2018-01-22T15:19:13Z","2020-03-11T03:55:48Z"
"","5931","Issue #5916: resolve eclipse error on input annotations","Error: `The value for annotation attribute must be a constant expression`  Issue #5916","closed","","romani","2018-06-15T22:09:21Z","2018-06-16T00:19:43Z"
"","5854","move pitest execution to CircleCI","duration of pitest execution on shippable: ``` Duration                Environment 7   minutes         PROFILE=""pitest-coding"" 7   minutes         PROFILE=""pitest-common"" 6   minutes         PROFILE=""pitest-imports"" 6   minutes         PROFILE=""pitest-ant""  6   minutes         PROFILE=""pitest-main"" 5   minutes         PROFILE=""pitest-javadoc"" 4   minutes         PROFILE=""pitest-indentation"" 3   minutes         PROFILE=""pitest-xpath""  3   minutes         PROFILE=""pitest-misc"" 3   minutes         PROFILE=""pitest-design"" 3   minutes         PROFILE=""pitest-api"" 3   minutes         PROFILE=""pitest-utils""  2   minutes         PROFILE=""pitest-filters"" 2   minutes         PROFILE=""pitest-whitespace"" 2   minutes         PROFILE=""pitest-annotation"" 2   minutes         PROFILE=""pitest-header""  2   minutes         PROFILE=""pitest-tree-walker"" 2   minutes         PROFILE=""pitest-packagenamesloader"" 1   minute          PROFILE=""pitest-metrics"" 1   minute          PROFILE=""pitest-naming""  1   minute          PROFILE=""pitest-sizes"" 1   minute          PROFILE=""pitest-blocks"" 1   minute          PROFILE=""pitest-modifier"" 1   minute          PROFILE=""pitest-regexp""  ``` https://circleci.com/docs/2.0/parallelism-faster-jobs/  shippable do not have parallel execution, but Circle CI do have it. we need to move execution of pitest to CircleCI to make execution on whole pitest in 6 steps in each step by 4 parallel executors. Splitting will be good as shown above. In this case we can end up in pitest execution completion in 25-30 minutes.","closed","CI,","romani","2018-05-27T04:57:27Z","2018-05-27T13:39:16Z"
"","5944","Support multi-file validation AbstractChecks in Checkstyle","Duplicate of https://github.com/checkstyle/checkstyle/issues/3540#issue-188609353 , but this is to add multi-file support in AbstractChecks.","open","hard,","rnveach","2018-06-17T16:19:52Z","2018-06-17T16:53:24Z"
"","5721","remove xml declaration tag from all dtd files","DTD files  do not need xml declaration tag `` http://xmlwriter.net/xml_guide/xml_declaration.shtml  http://archive.oreilly.com/oreillyschool/courses/introxml/introxml03.html http://xmlwriter.net/xml_guide/doctype_declaration.shtml https://en.wikipedia.org/wiki/Document_type_definition https://www.w3.org/XML/1998/06/xmlspec-report-19980910.htm  Examples: https://svn.apache.org/repos/asf/cocoon/branches/BRANCH_2_1_X-dojo1_1/src/webapp/WEB-INF/entities/changes-v10.dtd https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd","closed","easy,","romani","2018-04-12T22:11:30Z","2018-05-10T22:46:46Z"
"","5232","FixCheck Start Os in the work","do check Os mac and linux to JavadocDetailNodeParserTest.java because avadocDetailNodeParserTest.java  not check macOs and linux","closed","","jirawat050","2017-10-25T03:03:05Z","2019-02-27T13:43:20Z"
"","5661","HTTPS for domain checkstyle.org","discussion from #5601   jansohn commented 2 days ago >The current SSL certificate is not valid for checkstyle.org so we can't use https properly. This should be fixed!  daniilyar commented a day ago >@jansohn, we don't have an SSL certificate. There is nothing to protect on checkstyle.org with SSL encryption I believe. I think there is no way to configure redirect from HTTPS to HTTP or put certificate or disable HTTPS completely on github.io. We also don't have any computing resources in the cloud where we would be able to install some reverse proxy (Nginx) with SSL certificate and automatic certificate renew. I think that the proper way to prevent https browser warnings for users is to redirect HTTPS to HTTP which again points us to the need to host site on some instance in the cloud instead of github.io  jansohn commented 17 hours ago >I disagree that there is nothing to protect. Downloading the Eclipse plugin is one example I can think of which should be protected from MITM. I've no experience with github.io pages but before this redirect to checkstyle.org I could use an https URL to protect the Eclipse plugin update site.  romani commented 11 hours ago • > @lkoe and/or @Bananeweizen please remind us history of https resources for eclipse-cs . I think, there was no https on sourceforge. Https appeared when eclipse-cs migrated to GitHub.io . As GitHub allow both by default. Now it becomes not possible again as we use custom domain name. Example of build failure with this https-->http redirection - https://travis-ci.org/sevntu-checkstyle/sevntu.checkstyle/jobs/359606354#L722 , noticed by @jsoref . We downgraded to http for now in our satellite project.  daniilyar commented 8 hours ago • >@jansohn, thanks for clarifying about Eclipse update site! I think you are right, unencrypted Eclipse update site is a real security concern. @romani, taking this into account, I believe the proper way for us is to use a custom domain name with TLS encryption and http --> https redirect is to setup Nginx on the cloud with letsencrypt cert and host / proxy all our public resources (DTDs, Eclipse update site, Maven site, etc.) with it.  romani commented 7 hours ago > It was always as http (sourceforge), it become as https only for few weeks (xxxx.github.io). So we come back to where we were for many many years. So is users still would love to have https ... lets open new issue on this. I am ok to think about https .... but after final migration to github and we need to get to know how to do this with github.io . There should good security concerns to force our team to bother with certificates renewal each several month or ..... we need help for this topic.  jansohn commented 2 hours ago >Netlify seems to provide a free solution to this problem: https://www.radibit.com/2017/01/29/https-setup-for-github-pages.html  daniilyar commented 38 minutes ago >@jansohn, I saw this one. The issue with it is that it does not refresh the letsencrypt certificate automatically so one should manually update it each 90days. Letsencrypt wants to even reduce this period in future. AFAIK, the only solution when we can setup the reliable certificate auto-refresh is when there is a cloud host with Nginx and cron certificate refresh rule. I've spinned up some instance for Checkstyle at AWS free tier recently for CI purposes and I believe we may put the site there also which should solve both TLS issue and certificate auto renewal issue. But if somebody can suggest a service that provides a cloud instance with static IP forever and for free that would be great as AWS free tier only lasts 1y. I have requested such a free instance from Scaleway and Rackspace hostings on Checkstyle organization behalf so far but both refused to give it or 'sponsor' it.","closed","miscellaneous,","romani","2018-03-29T23:39:35Z","2018-06-08T04:49:59Z"
"","5750","Align XDocs and Javadocs","Discussed at https://groups.google.com/forum/?hl=en#!topic/checkstyle-devel/lsNF6Dj90lo , we should sync up our Javadocs with our xdocs and enforce they stay in-sync by CI.  For each new check, we just need to modify the suppression list at https://github.com/checkstyle/checkstyle/blob/bdeeb9898be9a931ff2d066cf1f7835f582dd31a/src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsJavaDocsTest.java#L107 for the next check to align.","closed","easy,","rnveach","2018-04-21T03:08:46Z","2019-11-18T14:23:15Z"
"","5880","Prevent inlining issues of all TokenTypes values to thirdparty extensions","Discussed at https://github.com/checkstyle/checkstyle/pull/5455#issuecomment-394096816 and has always been a long standing issue.  We should look into replacing our token types with something like this: https://github.com/jacoco/jacoco/blob/b9d1b54e300318b470d9fedccc69d75187016444/org.jacoco.core/src/org/jacoco/core/data/ExecutionDataWriter.java#L26-L32  ```` 	/** File format version, will be incremented for each incompatible change. */ 	public static final char FORMAT_VERSION;  	static { 		// Runtime initialize to ensure javac does not inline the value. 		FORMAT_VERSION = 0x1007; 	} ````  Should we do the same check messages? Anything that is `public static final` and is assigned a constant?","open","approved,","rnveach","2018-06-03T01:39:08Z","2018-06-08T16:30:02Z"
"","5338","AbstractLoader: move out of api, rename, and remove abstract modifier","Discussed at https://github.com/checkstyle/checkstyle/pull/5322#pullrequestreview-82182260 ,  `AbstractLoader` should be moved outside of `api` package and renamed to `XmlLoader` and be changed to a concrete class. Suppression in intellij-idea-inspections.xml needs to be removed.","closed","breaking compatibility,","rnveach","2017-12-09T20:33:13Z","2017-12-30T16:00:51Z"
"","5337","Rename AutomaticBean","Discussed at https://github.com/checkstyle/checkstyle/pull/5322#discussion_r155799488 ,  `AutomaticBean` should be renamed to `AbstractAutomaicBean` since it is now abstract.  Additionally we should discuss if we should keep `AutomaticBean` in name.","open","breaking compatibility,","rnveach","2017-12-09T20:31:57Z","2022-04-10T21:11:41Z"
"","5121","Violations printed from AuditListeners in auditFinished aren't counted towards violation count","Discussed about at https://github.com/checkstyle/checkstyle/pull/4906#discussion_r131643909 when trying to define a custom AuditListener in the configuration file,  > I have a private listener which is basically an implementation of #3242 , where on auditFinished it examines the list of defined suppressions and prints violations on any that were not used. I have to use a listener as it is the only customizable area that is called at the end once all other modules, filters, and such are done.  When my custom AuditListener tries to fire violations in `auditFinished` those violations are printed to the console, but it turns out they aren't counted towards the total violation count. This may have always been an issue and I just never noticed it before.  The problem is with the following code: https://github.com/checkstyle/checkstyle/blob/5a6a87ac206590f8b5795cccb0109b9c87b2ef1c/src/main/java/com/puppycrawl/tools/checkstyle/Checker.java#L220-L222  We retrieve the error counter before firing the AuditListeners for the last time that tells everyone we are finished and this is the value we directly returned for the count display. When AuditListeners fire errors at this point, they are counted correctly but because of the local variable save of `errorCount` before the `fireAuditFinished` call, those counts are ignored. Since we are not using this value anywhere except returning it, `counter.getCount()` should be moved and inlined into the `return` line, so that if any AuditListeners fire their own errors, they will be included in the total count.","closed","","rnveach","2017-09-18T14:55:25Z","2019-02-27T14:19:20Z"
"","5528","migrate to circleci 2.0","detected at: 5525  here is how to migrate https://circleci.com/docs/2.0/migrating-from-1-2/ ....  It would be great if in same time we can move all embedded shell commands to simple commands for shell execution with argument to let us run same commands on local (see how it was done for Travis (travis.sh))  Drawbacks:  - it will demand new folder in our project. No ways to define a path to config file it has to be "".circleci/config.yml""  Benefits:  - usage all new features of CI, we do not need any specific, but ... - one day 1.0 will be deprecated/removed so we will have to upgrade    > Dear customer,  We wanted to let you know that we are planning on sunsetting CircleCI 1.0 on August 31st, 2018. Our goal as a company for 2018 is to invest in delivering more features and better performance on CircleCI 2.0, which unlocks faster builds and greater control. For more information, you can read our [blog post](https://circleci.com/blog/sunsetting-1-0) on sunsetting CircleCI 1.0. You’ll need to update all of your config files to the CircleCI 2.0 syntax in order to migrate your projects to CircleCI 2.0 over the next 6 months. If all of your projects are already on 2.0, congratulations! No action is necessary. We are sending this announcement to all active users to make sure you have all of the information you need. Take a look at your builds dashboard to see if your projects are still building on CircleCI 1.0:  These resources will help you get migrate your projects from 1.0 to 2.0: [Config.yml translator](https://circleci.com/docs/2.0/config-translation). Note: This will generate a baseline config.yml file that you can adjust to fit your needs. [1.0 to 2.0 migration documentation](https://circleci.com/docs/2.0/migrating-from-1-2/). [Language-specific 2.0 tutorials](https://circleci.com/docs/2.0/tutorials/). We will be sending you email reminders periodically with additional resources and links as they become available to help with your migration plan. We will also be updating this page with information relevant to sunsetting CircleCI 1.0. If you need additional migration assistance, open a support request and our support team will be in touch. Cheers, The CircleCI Team","closed","CI,","romani","2018-02-20T00:58:20Z","2018-04-06T00:12:25Z"
"","5377","Resolve warning during build about prerequisites tag","Detected at https://travis-ci.org/checkstyle/checkstyle/jobs/319546867#L739  `[WARNING] The project com.puppycrawl.tools:checkstyle:jar:8.6-SNAPSHOT uses prerequisites which is only intended for maven-plugin projects but not for non maven-plugin projects. For such purposes you should use the maven-enforcer-plugin. See https://maven.apache.org/enforcer/enforcer-rules/requireMavenVersion.html`  This warning should be resolved.  Mentioned at https://maven.apache.org/docs/3.5.0/release-notes.html  How to resolve: https://maven.apache.org/enforcer/enforcer-rules/requireMavenVersion.html","closed","miscellaneous,","romani","2017-12-21T14:58:17Z","2018-01-22T14:15:51Z"
"","5064","refactoring: remove from UncommentedMainCheck field classDepth","detected at https://github.com/checkstyle/checkstyle/pull/5043/commits/8c381e077c013116124f7ee5266396b662808639#r136696159  please remove filed `classDepth` completely from UncommentedMainCheck and use `currentClass` in all cases instead.  `currentClass == null` === `classDepth = 0` `currentClass != null` === `classDepth == 1`  provide regression testing by https://github.com/checkstyle/contribution/tree/master/checkstyle-tester diff.groovy","closed","miscellaneous,","romani","2017-09-03T14:02:28Z","2019-03-12T19:39:23Z"
"","5237","Issue #5094: delete javadoc.parse.error","delete javadoc.parse.error issues #5094","closed","","dyominov","2017-10-26T06:38:16Z","2017-10-26T08:10:52Z"
"","5483","request: Make file extension matching case insensitive","custom module configuration: ```                      ``` executed on an OSGI manifest called `MANIFEST.MF` will not match due to ""MF"" not being ""mf"". The fileExtensions pattern is case sensitive. At least on Windows this is somewhat surprising, since the file system itself does not distinguish 'manifest.mf' from 'MANIFEST.MF'.  Any chance this could be changed to match file extensions (and potentially file names) case insensitive generally?","closed","","Bananeweizen","2018-01-22T16:29:38Z","2018-03-05T06:08:40Z"
"","5595","100% coverage for com.puppycrawl.tools.checkstyle.PackageObjectFactory","Currently, the test PackageObjectFactoryTest covers only 99% of PackageObjectFactory. The rest is a 'gift' from other tests. Missing methods should be implemented in PackageObjectFactoryTest.","closed","miscellaneous,","pbludov","2018-03-09T04:52:40Z","2018-03-10T13:33:17Z"
"","5599","100% coverage for com.puppycrawl.tools.checkstyle.Checker","Currently, the test CheckerTest covers only 98% of the Checker The rest is a 'gift' from other tests. Missing methods should be implemented in the CheckerTest.","closed","miscellaneous,","pbludov","2018-03-09T06:51:38Z","2018-03-11T20:36:56Z"
"","5591","100% Coverage for com.puppycrawl.tools.checkstyle.DefaultConfiguration","Currently, the test `DefaultConfigurationTest` covers only 60% of `DefaultConfiguration`. The rest is a 'gift' from other tests. Missing methods should be implemented in `DefaultConfigurationTest`.","closed","miscellaneous,","pbludov","2018-03-09T03:54:14Z","2018-03-12T13:45:34Z"
"","5597","100% coverage for com.puppycrawl.tools.checkstyle.XMLLogger","Currently, the line ```         writer.println(""""); ``` in the class `XMLLogger` is not validated. Missing checks should be implemented in the  class `AbstractXmlTestSupport`.","closed","miscellaneous,","pbludov","2018-03-09T05:38:40Z","2018-03-11T20:44:16Z"
"","5287","LeftCurly: Allow horizontal & vertical brace alignment","Currently the [LeftCurly](http://checkstyle.sourceforge.net/config_blocks.html#LeftCurly) module can only be used for [K&R](https://en.wikipedia.org/wiki/Indentation_style#K.26R) or [Allman](https://en.wikipedia.org/wiki/Indentation_style#Allman_style) style. In [Allman](https://en.wikipedia.org/wiki/Indentation_style#Allman_style) mode, it disallows the concise shortcut option of including two statements on the same line, e.g.  `if (fubar()) {foo(); bar();}`  It would be useful to permit this as an additional valid option for [lcurly](http://checkstyle.sourceforge.net/property_types.html#lcurly).  Current modes for [lcurly](http://checkstyle.sourceforge.net/property_types.html#lcurly): - eol - ([java variant of K&R](https://en.wikipedia.org/wiki/Indentation_style#Variant:_Java)) - nl - ([Allman style](https://en.wikipedia.org/wiki/Indentation_style#Allman_style)) - nlow","closed","","aclarkxyz","2017-11-23T03:07:00Z","2017-12-09T19:37:22Z"
"","5139","JavadocTokenTypes should keep values of tokens, restore tokens as they were at 8.1 version","create GeneratedJavadocTokenTypesTest. see java analog - https://github.com/checkstyle/checkstyle/blob/master/src/test/java/com/puppycrawl/tools/checkstyle/grammars/GeneratedJavaTokenTypesTest.java  it is required to avoid serious compatibility problems, as static values are compiled as inlined values in other projects, changes in numbers will cause serious damage to Checks behavior.   See example of compatibility problems at #505 .  checkstyle/target/generated-sources/antlr/com/puppycrawl/tools/checkstyle/grammars/javadoc/JavadocParser.java  There is no compatibility damage between 8.0 and 8.1.  compatibility damage between 8.1 and 8.2: ![image](https://user-images.githubusercontent.com/812984/30776369-cdb17c1c-a059-11e7-8a91-76ed00fdd283.png)  compatibility damage between 8.2 and 8.3-SNAPSHOT: ![image](https://user-images.githubusercontent.com/812984/30776374-03366262-a05a-11e7-8d6a-32e85a794a9c.png)  We need to restore token values to 8.1 state finally. as first step we can enforce values that we have in 8.3-SNAPSHOT now.","closed","breaking compatibility,","romani","2017-09-23T14:23:18Z","2018-06-03T14:05:13Z"
"","5794","config: add strata project to wercker","continuation of https://github.com/OpenGamma/Strata/pull/1688 https://groups.google.com/d/msg/checkstyle/KYF-9EEzsbs/-5QsQ01BAwAJ","closed","","romani","2018-05-14T17:15:04Z","2018-05-14T18:19:23Z"
"","5950","minor: add sponsoring badges","continuation of #5946","closed","","romani","2018-06-20T05:01:57Z","2018-06-22T23:59:27Z"
"","5866","config: suppress linelength validation in pom.xml till MRELEASE-1008","continuation of #5865","closed","","romani","2018-05-27T23:54:38Z","2018-05-28T01:13:47Z"
"","5602","doc: clearly explain commit message requirements","continuation of #5576","closed","","romani","2018-03-10T14:07:13Z","2018-03-15T22:38:25Z"
"","5060","Review disabled validations of eclipse compiler","continuation of #2600.   command for linux: `mvn clean compile exec:exec -Peclipse-compiler`  Disabled validations: ``` org.eclipse.jdt.core.compiler.annotation.missingNonNullByDefaultAnnotation=ignore org.eclipse.jdt.core.compiler.problem.autoboxing=ignore org.eclipse.jdt.core.compiler.problem.potentiallyUnclosedCloseable=ignore org.eclipse.jdt.core.compiler.problem.potentialNullReference=ignore org.eclipse.jdt.core.compiler.problem.rawTypeReference=ignore org.eclipse.jdt.core.compiler.problem.reportMethodCanBePotentiallyStatic=ignore org.eclipse.jdt.core.compiler.problem.syntheticAccessEmulation=ignore org.eclipse.jdt.core.compiler.problem.uncheckedTypeOperation=ignore org.eclipse.jdt.core.compiler.problem.unnecessaryElse=ignore org.eclipse.jdt.core.compiler.problem.unnecessaryTypeCheck=ignore org.eclipse.jdt.core.compiler.problem.unqualifiedFieldAccess=ignore ```  review each of them and make a decision to fix or keep disabled. Each disabled rule should have comment above to explain a reason.","closed","miscellaneous,","romani","2017-09-02T18:02:07Z","2019-10-07T05:41:09Z"
"","5847","move some vaidation execution to codeship ci","codeship CI can do only master branch validations. We need to put all not critical validations to it.  For example: ``` ./.ci/travis/travis.sh releasenotes-gen ``` if codeship have cron trigger, we can move `./.ci/travis/travis.sh versions` also.  https://documentation.codeship.com/pro/builds-and-configuration/environment-variables/","open","CI,","romani","2018-05-26T20:21:34Z","2020-01-13T23:53:02Z"
"","5736","google checkstyle Token ""METHOD_REF"" was not found","checkstyle/src/main/resources/google_checks.xml  Token ""METHOD_REF"" was not found in Acceptable tokens list in check com.puppycrawl.tools.checkstyle.checks.whitespace.SeparatorWrapCheck  with checkstyle gradle plugin version 8.8","closed","","leolztang","2018-04-15T11:16:04Z","2018-04-15T14:18:37Z"
"","5777","Update AbstractChecks to log DetailAST (part3)","Checkstyle has recently started to update old checks from logging on the line/column, to log on the AST node. This is needed to support https://checkstyle.org/config_filters.html#SuppressionXpathFilter which needs the AST of the violation to match it to the user supplied XPath.  As PR is started for each check, links from master ( Ex: https://github.com/checkstyle/checkstyle/blob/master/src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyBlockCheck.java#L201 ) must be posted to show each log call found in the check. An additional note must be made of the number of logs actually modified. This will greatly help admins ensure the full check is now xpath compliant and nothing is missed.  All checks need to be reviewed to ensure: 1) All their calls to `log` pass the AST and not the line/column 2) Each log have a respective IT test to show that it supports xpath at https://github.com/checkstyle/checkstyle/tree/master/src/it/java/org/checkstyle/suppressionxpathfilter 3) Documentation of https://checkstyle.org/config_filters.html#SuppressionXpathFilter_Description shows the check is now supported. 4) Since this is modifying the functionality of a check, regression will be required for the PR. See https://github.com/checkstyle/contribution/tree/master/checkstyle-tester#checkstyle-tester  **1**: We don't expect drastic change in current UTs when making the switch. If any items change the line/column drastically, please point them out to be clear to admins in the PR. Adding a column number when no was there before is ok and an expected change. **2**: Must have a UT for each log in the check. If the check has 3 separate log calls, then it must have 3 separate UTs. **4**: In report for each project, `Number of unique base messages reported below` and `Number of unique path messages reported below` should match otherwise it is saying there is an uneven amount of changes, either new violations or violations removed. We aren't expecting this type of change in these PRs unless you can account for it. One example where it would be acceptable is if duplicate violations on the same line were being dropped as we only report 1 violation per line/column/message/check.   -------","closed","has bounty,","MEZk","2018-05-06T05:01:47Z","2020-03-08T16:05:28Z"
"","5478","Issue #5477: Updated AbstractCheck.java","Changes for #5477 xpath-suppression isn't compatible with any ...NameCheck","closed","","varunu28","2018-01-20T15:38:07Z","2018-01-22T14:38:12Z"
"","5592","Split pitest-checkstyle-common","caused by #5554  The profile `pitest-checkstyle-common` is too large and should be split. At one point there are four minions, two of them tries to eat more than 4GB of memory.  The server running this test has only 4 GB of memory, so this step falls deep into the swap and hangs.   Note from romani: I relaunched master build https://app.shippable.com/github/checkstyle/checkstyle/runs/6387/summary/console to reproduce problem in case some changes were done on CI side. Build is passed.","closed","miscellaneous,","pbludov","2018-03-09T04:06:47Z","2018-03-13T12:48:43Z"
"","5036","@see tag only to allow a anchor element and not others","cat test.javadoc ``` * @see link ```  java -jar master-8.2-all.jar -j test.javadoc ```  JAVADOC -> JAVADOC [0:0] |--LEADING_ASTERISK -> * [0:0] |--WS ->   [0:1] |--JAVADOC_TAG -> JAVADOC_TAG [0:2] |   |--SEE_LITERAL -> @see [0:2] |   |--WS ->   [0:6] |   |--HTML_ELEMENT -> HTML_ELEMENT [0:7] |   |   `--HTML_TAG -> HTML_TAG [0:7] |   |       |--HTML_ELEMENT_START -> HTML_ELEMENT_START [0:7] |   |       |   |--START -> < [0:7] |   |       |   |--HTML_TAG_NAME -> span [0:8] |   |       |   `--END -> > [0:12] |   |       |--TEXT -> link [0:13] |   |       `--HTML_ELEMENT_END -> HTML_ELEMENT_END [0:17] |   |           |--START -> < [0:17] |   |           |--SLASH -> / [0:18] |   |           |--HTML_TAG_NAME -> span [0:19] |   |           `--END -> > [0:23] |   `--NEWLINE -> \r\n `--EOF ->  [1:0] ```  Such trees should not be parsed. Perhaps a parse error can be preferred over parsing such tree.","open","antlr-javadoc,","voidfist","2017-08-31T15:03:46Z","2020-01-21T01:38:58Z"
"","5035","@see tag with leading asterisk before arguments lead to parse failure","cat test.javadoc ``` * @see * package.Class#member()  * Description ```  java -jar master-8.2-all.jar -j test.javadoc  ``` Exception in thread ""main"" java.lang.IllegalArgumentException: [ERROR:1] Javadoc comment at column 2 has parse error. Details: mismatched input 'package' expecting  while parsing JAVADOC 	at com.puppycrawl.tools.checkstyle.DetailNodeTreeStringPrinter.parseJavadocAsDetailNode(DetailNodeTreeStringPrinter.java:71) 	at com.puppycrawl.tools.checkstyle.DetailNodeTreeStringPrinter.parseJavadocAsDetailNode(DetailNodeTreeStringPrinter.java:83) 	at com.puppycrawl.tools.checkstyle.DetailNodeTreeStringPrinter.parseFile(DetailNodeTreeStringPrinter.java:173) 	at com.puppycrawl.tools.checkstyle.DetailNodeTreeStringPrinter.printFileAst(DetailNodeTreeStringPrinter.java:59) 	at com.puppycrawl.tools.checkstyle.Main.runCli(Main.java:406) 	at com.puppycrawl.tools.checkstyle.Main.main(Main.java:210) ```  cat test.javadoc ``` * @see * ""string"" ```  java -jar master-8.2-all.jar -j test.javadoc  ``` Exception in thread ""main"" java.lang.IllegalArgumentException: [ERROR:1] Javadoc comment at column 2 has parse error. Details: mismatched input '""string""' expecting  while parsing JAVADOC 	at com.puppycrawl.tools.checkstyle.DetailNodeTreeStringPrinter.parseJavadocAsDetailNode(DetailNodeTreeStringPrinter.java:71) 	at com.puppycrawl.tools.checkstyle.DetailNodeTreeStringPrinter.parseJavadocAsDetailNode(DetailNodeTreeStringPrinter.java:83) 	at com.puppycrawl.tools.checkstyle.DetailNodeTreeStringPrinter.parseFile(DetailNodeTreeStringPrinter.java:173) 	at com.puppycrawl.tools.checkstyle.DetailNodeTreeStringPrinter.printFileAst(DetailNodeTreeStringPrinter.java:59) 	at com.puppycrawl.tools.checkstyle.Main.runCli(Main.java:406) 	at com.puppycrawl.tools.checkstyle.Main.main(Main.java:210) ```","closed","antlr,","voidfist","2017-08-31T14:59:53Z","2017-09-01T16:31:28Z"
"","5175","Sonar validation failing with StackOverflowError","Build: https://travis-ci.org/checkstyle/checkstyle/jobs/284850599#L2087 but there a lot of other builds with same problem. problem is not stable , as there builds wihtout problem - https://travis-ci.org/checkstyle/checkstyle/jobs/284859387#L2220  problematic file - [InputDetailASTJustToMakeStackoverflowError.java](https://github.com/checkstyle/checkstyle/blob/master/src/test/resources/com/puppycrawl/tools/checkstyle/api/detailast/InputDetailASTJustToMakeStackoverflowError.java)   Sonar build item is disabled till problem is resolved - [commit](https://github.com/checkstyle/checkstyle/commit/39d2fbdf38e5e65e7d3a28881c081a17b5b529ef). Bug to sonar need to be opened. question: Why do we run sonar validation on our input files ? .... we should skip them.  log: ``` [INFO] 356/356 source files have been analyzed [INFO] Java Main Files AST scan (done) | time=52134ms [INFO] Java Test Files AST scan [INFO] 1303 source files to be analyzed [INFO] 293/1303 files analyzed, current file:  /home/travis/build/checkstyle/checkstyle/src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/ReturnCountCheckTest.java [ERROR] A stack overflow error occured while analyzing file:  /home/travis/build/checkstyle/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/api/detailast/InputDetailASTJustToMakeStackoverflowError.java [INFO] ------------------------------------------------------------------------ [INFO] BUILD FAILURE [INFO] ------------------------------------------------------------------------ [INFO] Total time: 06:00 min [INFO] Finished at: 2017-10-07T23:36:31Z [INFO] Final Memory: 145M/1336M [INFO] ------------------------------------------------------------------------ --------------------------------------------------- constituent[0]: file:/usr/local/maven-3.5.0/conf/logging/ constituent[1]: file:/usr/local/maven-3.5.0/lib/aopalliance-1.0.jar constituent[2]: file:/usr/local/maven-3.5.0/lib/cdi-api-1.0.jar constituent[3]: file:/usr/local/maven-3.5.0/lib/commons-cli-1.4.jar constituent[4]: file:/usr/local/maven-3.5.0/lib/commons-io-2.5.jar constituent[5]: file:/usr/local/maven-3.5.0/lib/commons-lang3-3.5.jar constituent[6]: file:/usr/local/maven-3.5.0/lib/guava-20.0.jar constituent[7]: file:/usr/local/maven-3.5.0/lib/guice-4.0-no_aop.jar constituent[8]: file:/usr/local/maven-3.5.0/lib/jansi-1.13.jar constituent[9]: file:/usr/local/maven-3.5.0/lib/javax.inject-1.jar constituent[10]: file:/usr/local/maven-3.5.0/lib/jcl-over-slf4j-1.7.22.jar constituent[11]: file:/usr/local/maven-3.5.0/lib/jsr250-api-1.0.jar constituent[12]: file:/usr/local/maven-3.5.0/lib/maven-artifact-3.5.0.jar constituent[13]: file:/usr/local/maven-3.5.0/lib/maven-builder-support-3.5.0.jar constituent[14]: file:/usr/local/maven-3.5.0/lib/maven-compat-3.5.0.jar constituent[15]: file:/usr/local/maven-3.5.0/lib/maven-core-3.5.0.jar constituent[16]: file:/usr/local/maven-3.5.0/lib/maven-embedder-3.5.0.jar constituent[17]: file:/usr/local/maven-3.5.0/lib/maven-model-3.5.0.jar constituent[18]: file:/usr/local/maven-3.5.0/lib/maven-model-builder-3.5.0.jar constituent[19]: file:/usr/local/maven-3.5.0/lib/maven-plugin-api-3.5.0.jar constituent[20]: file:/usr/local/maven-3.5.0/lib/maven-repository-metadata-3.5.0.jar constituent[21]: file:/usr/local/maven-3.5.0/lib/maven-resolver-api-1.0.3.jar constituent[22]: file:/usr/local/maven-3.5.0/lib/maven-resolver-connector-basic-1.0.3.jar constituent[23]: file:/usr/local/maven-3.5.0/lib/maven-resolver-impl-1.0.3.jar constituent[24]: file:/usr/local/maven-3.5.0/lib/maven-resolver-provider-3.5.0.jar constituent[25]: file:/usr/local/maven-3.5.0/lib/maven-resolver-spi-1.0.3.jar constituent[26]: file:/usr/local/maven-3.5.0/lib/maven-resolver-transport-wagon-1.0.3.jar constituent[27]: file:/usr/local/maven-3.5.0/lib/maven-resolver-util-1.0.3.jar constituent[28]: file:/usr/local/maven-3.5.0/lib/maven-settings-3.5.0.jar constituent[29]: file:/usr/local/maven-3.5.0/lib/maven-settings-builder-3.5.0.jar constituent[30]: file:/usr/local/maven-3.5.0/lib/maven-shared-utils-3.1.0.jar constituent[31]: file:/usr/local/maven-3.5.0/lib/maven-slf4j-provider-3.5.0.jar constituent[32]: file:/usr/local/maven-3.5.0/lib/org.eclipse.sisu.inject-0.3.3.jar constituent[33]: file:/usr/local/maven-3.5.0/lib/org.eclipse.sisu.plexus-0.3.3.jar constituent[34]: file:/usr/local/maven-3.5.0/lib/plexus-cipher-1.7.jar constituent[35]: file:/usr/local/maven-3.5.0/lib/plexus-component-annotations-1.7.1.jar constituent[36]: file:/usr/local/maven-3.5.0/lib/plexus-interpolation-1.24.jar constituent[37]: file:/usr/local/maven-3.5.0/lib/plexus-sec-dispatcher-1.4.jar constituent[38]: file:/usr/local/maven-3.5.0/lib/plexus-utils-3.0.24.jar constituent[39]: file:/usr/local/maven-3.5.0/lib/slf4j-api-1.7.22.jar constituent[40]: file:/usr/local/maven-3.5.0/lib/wagon-file-2.12.jar constituent[41]: file:/usr/local/maven-3.5.0/lib/wagon-http-2.12-shaded.jar constituent[42]: file:/usr/local/maven-3.5.0/lib/wagon-provider-api-2.12.jar --------------------------------------------------- Exception in thread ""main"" java.lang.StackOverflowError     at org.sonar.plugins.java.api.tree.BaseTreeVisitor.scan(BaseTreeVisitor.java:43)     at org.sonar.plugins.java.api.tree.BaseTreeVisitor.visitBinaryExpression(BaseTreeVisitor.java:209)     at org.sonar.java.resolve.TypeAndReferenceSolver.visitBinaryExpression(TypeAndReferenceSolver.java:675)     at org.sonar.java.model.expression.BinaryExpressionTreeImpl.accept(BinaryExpressionTreeImpl.java:70)     at org.sonar.plugins.java.api.tree.BaseTreeVisitor.scan(BaseTreeVisitor.java:43) ```","closed","miscellaneous,","romani","2017-10-07T23:51:18Z","2017-10-08T13:32:15Z"
"","5078","Eclipse validtion is failed with ""The type org.eclipse.jdt.annotation.NonNull cannot be resolved""","Build on master is failed and for many PRs: https://travis-ci.org/checkstyle/checkstyle/jobs/272149359#L2934 ``` $ mvn clean compile exec:exec -Peclipse-compiler ... 2017-09-06 01:39:52 (2.92 MB/s) - `/home/travis/.m2/repository/R-4.7-201706120950/ecj-4.7.jar' saved [2484245/2484245] Executing eclipse compiler, output is redirected to target/eclipse/report.txt... Checking for ERROR|WARNING|INFO  in target/eclipse/report.txt ... ---------- 1. ERROR in /home/travis/build/checkstyle/checkstyle/src/main/java/com/puppycrawl/tools/checkstyle/api/AbstractCheck.java (at line 1) 	//////////////////////////////////////////////////////////////////////////////// 	^  The type org.eclipse.jdt.annotation.NonNull cannot be resolved. It is indirectly referenced from required .class files ---------- 1 problem (1 error) [ERROR] Command execution failed. org.apache.commons.exec.ExecuteException: Process exited with an error: 1 (Exit value: 1) ```  problem was not reproducible on my local.","closed","miscellaneous,","romani","2017-09-06T11:32:37Z","2017-09-06T11:56:17Z"
"","5826","use linter for bash scripts","believe it or not we end up with bunch of bash files ...  ``` $ find  . -name ""*.sh"" | wc -l 21 $ find  . -name ""*.sh"" ./.git/refs/heads/config-wercker.sh ./.git/refs/remotes/origin/config-wercker.sh ./.git/logs/refs/remotes/origin/config-wercker.sh ./.git/logs/refs/heads/config-wercker.sh ./.ci/fast-forward-merge.sh ./.ci/sonar-wrapper.sh ./.ci/travis/checkchmod.sh ./.ci/travis/travis.sh ./.ci/travis/xtr_pr-description.sh ./.ci/travis/xtr_releasenotes-gen.sh ./.ci/check-only-javadoc-error.sh ./.ci/jsoref-spellchecker/rpm2cpio.sh ./.ci/idea_inspection.sh ./.ci/circleci.sh ./.ci/run-link-check-plugin.sh ./.ci/shippable.sh ./.ci/sonar.sh ./.ci/test-spelling-unknown-words.sh ./.ci/eclipse-compiler-javac.sh ./.ci/wercker.sh ./release.sh ```  Looks like they will stay in project forever, so we need lint them proposal is to use https://www.shellcheck.net/ (I did not found any other active project)  Ways to disable rules https://github.com/checkstyle/checkstyle/pull/11627#issuecomment-1126132932","closed","CI,","romani","2018-05-25T00:58:31Z","2022-05-17T15:25:34Z"
"","5767","config: bump equalsverifier to 2.4.6","based on https://travis-ci.org/checkstyle/checkstyle/jobs/374081168#L1180","closed","","romani","2018-05-02T20:58:14Z","2018-05-04T00:21:26Z"
"","5659","config: bump jacoco to 0.8.1","based on https://travis-ci.org/checkstyle/checkstyle/jobs/359510383","closed","","romani","2018-03-29T13:03:15Z","2018-03-29T16:47:23Z"
"","5531","config: bump pitest to 1.3.2","based on https://travis-ci.org/checkstyle/checkstyle/jobs/341570516","closed","","romani","2018-02-20T22:02:45Z","2018-02-21T03:53:27Z"
"","5912","Fail instantly when DTD is not located in our cache map","Based on https://github.com/checkstyle/checkstyle/pull/5907 ,  We put all our DTDs to loader. There shouldn't be a reason to go to the web for anything we own. If user creates their own custom config, they need to create their own loader and can't pass it through ours. Loader strictly parses specific tree so there would be an exception if something was out of the ordinary. There has been a case before where we forgot to add new DTD to the loader and it wasn't found because of this.  https://github.com/checkstyle/checkstyle/blob/master/src/main/java/com/puppycrawl/tools/checkstyle/XmlLoader.java#L103 `XmlLoader` should fail if Public ID requested isn't inside resource cache map. This line should be removed and we throw an exception instead.","open","approved,","rnveach","2018-06-11T20:28:28Z","2018-06-17T03:41:33Z"
"","5648","Create UTs to control xpath-suppression model regression","Based on https://github.com/checkstyle/checkstyle/pull/5464#issuecomment-362374643, https://github.com/checkstyle/checkstyle/pull/5464#issuecomment-362500269, https://github.com/checkstyle/checkstyle/pull/5464#issuecomment-363918259, https://github.com/checkstyle/checkstyle/issues/5508, and https://github.com/checkstyle/checkstyle/pull/5509#issuecomment-363978899, it will be good to have UTs which control similar regressions. As a starting point [this](https://github.com/checkstyle/checkstyle/pull/5509#issuecomment-363921406) algorithm can be taken into account.  @romani's suggestion > I strongly recommend to move all that validation to UT, this will skip painful manual executions , reconfiguration, report creation. It is better to invest time ones for Test.java and config (config could build in runtime) for each Check we support, run validation from UT, run suppressions generation, verify it content by assert, append suppression to config, run one time, verify no violations. So as UTs pass, reviewer see suppressions in code and see that suppressions works.","closed","miscellaneous,","MEZk","2018-03-26T20:01:23Z","2018-06-01T03:31:19Z"
"","5407","config: added '-e' to all maven commands for full stacktrace errors","Based on discussions in Issue #5405 , we should print full stack trace for all maven commands incase an unknown exception happens.","closed","","rnveach","2017-12-30T22:18:01Z","2017-12-31T01:09:48Z"
"","5617","doc: fixed improper private method documentation","based on discussions at https://github.com/checkstyle/checkstyle/issues/5615","closed","","rnveach","2018-03-16T15:06:17Z","2018-03-16T18:37:13Z"
"","5893","new Check - LambdaParameterName","based on discussion at https://github.com/checkstyle/checkstyle/pull/5768#issuecomment-395269426  ParameterName Check have problems to support lambda, the biggest problem is presence of `ignoreOverridden` and `accessModifiers` properties that does no make sense  for Lambda.   It is better to create new Check with same functionality for name verification and without extra properties. ```       ``` defaults should be taken from ParameterName.  Google style config, ITs, xdoc should be updated to use new Check.","closed","new module,","romani","2018-06-07T13:53:14Z","2018-07-01T14:53:58Z"
"","5945","New Check: RightCurlyOfExpression","based on discussion at #4058 (PR #4173)  right curly of expression block is different from other blocks so rules or RightCurly Check does not work well as for example for `alone` results in weird code as `}` in expression is always followed by smth, `same` does not make sense .  [Array Creation Expressions](https://docs.oracle.com/javase/specs/jls/se9/html/jls-15.html#jls-15.10.1) [Lambda expression](https://docs.oracle.com/javase/specs/jls/se9/html/jls-15.html#jls-15.27 ) [Class Instance Creation Expressions](https://docs.oracle.com/javase/specs/jls/se9/html/jls-15.html#jls-15.9)  on_same_line ``` ignoredAnnotations = Arrays.stream(new String[] {""Test"", ""Before"", ""After"",         ""BeforeClass"", ""AfterClass"", }).collect(Collectors.toSet()); final Class[] param = new Class[] {String.class, String.class,        String.class, Attributes.class,}; someMethod(() -> {""Hello"".equals(""Hello world two!"");});  new Object() { @Override protected void finalize() { """".toString(); }  int b = 10; }; ``` on_new_line ``` ignoredAnnotations = Arrays.stream(new String[] {""Test"", ""Before"", ""After"",         ""BeforeClass"", ""AfterClass"", }).collect(Collectors.toSet()); final Class[] param = new Class[] {String.class, String.class,        String.class, Attributes.class, }; someMethod(() -> {""Hello"".equals(""Hello world two!""); });  new Object() { @Override protected void finalize() { """".toString(); }  int b = 10;  }; ``` on_new_line_or_singleline ``` ignoredAnnotations = Arrays.stream(new String[] {""Test"", ""Before"",}).collect(Collectors.toSet()); ignoredAnnotations = Arrays.stream(new String[] {""Test"", ""Before"", ""After"",         ""BeforeClass"", ""AfterClass"", }).collect(Collectors.toSet()); final Class[] param = new Class[] {String.class, String.class,        String.class, Attributes.class, }; final Class[] param = new Class[] {String.class, Attributes.class, }; someMethod(() -> {""Hello"".equals(""Hello world two!"");});  someMethod(() -> {    ""Hello"".equals(""Hello world two!""); });  new Object() { @Override protected void finalize() { """".toString(); }  int b = 10; }; new Object() { @Override protected void finalize() { """".toString(); }  int b = 10; }; ```  more examples of code from our repo - [at this comment](https://github.com/checkstyle/checkstyle/pull/4173#issuecomment-394580048)  For multi-dimensional arrays we validate only outer curly brace ``` int array[][] = { {1, 2}, {3,4} }; ```  we will validate only ""};"".  case where we validate only outer ""}"": ```         java.util.Map map2 = new LinkedHashMap() {{             put(""Hello"", ""World"");             put(""first"", ""second"");             put(""polygene"", ""lubricants"");             put(""alpha"", ""betical"");  } // ATTENTION: here is ""}"", Check should not care         }; ```  Looks like token set for Check should LAMBDA and NEW.  On the moment of implementation, we need to recheck google style is case there become more details on how to format code of lambda. We need answer from google on this point, see https://github.com/google/styleguide/issues/112 .","open","new module,","romani","2018-06-18T06:27:51Z","2021-04-23T18:45:25Z"
"","5642","ImportControl: reverse order of allow/disallow rule matching","Based on conversations in https://github.com/checkstyle/checkstyle/issues/4138  Allows/disallow lists are not examined in order of the XML file. We currently reverse the order so that we begin examining allows/disallows from the bottom up. See: https://github.com/checkstyle/checkstyle/blob/90f20e09869c71eb22190ad9c1d46d5deec324a5/src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControl.java#L215  Most users expect rules to be obeyed in order they are written in the file and so should be match in reading order from top to bottom.  ## Migration for users  This only affects users who: * disables a package and allow a class in the disabled package * allows a package and disables a class in the allowed package * mistakenly allows or disallows the same package/class twice  If you are affected by this, the rules that match one of the above should be swapped to fix the issue. Here is an example if you are forbidding a class of an allowed package. If your import control file looks like: ````         ```` You must swap the 2 rules for the new fix. So your configuration should look like this after this issue: ````  	 	  ````","closed","breaking compatibility,","rnveach","2018-03-23T21:00:34Z","2018-04-02T19:35:09Z"
"","5630","Version bumps","based on - https://travis-ci.org/checkstyle/checkstyle/jobs/356509336","closed","","romani","2018-03-21T22:25:31Z","2018-03-21T23:09:44Z"
"","5930","enforce class package to be the same as folder","base on problems at #5916   for some reason eclipse compiler(eclipse-compiler-javac.sh) with our option do not catch cases when file have package different from folder. if there is no easy way to make it happen by eclipse compiler, we should do this by Checkstyle Check http://checkstyle.sourceforge.net/config_coding.html#PackageDeclaration and special execution on all Input files.","closed","approved,","romani","2018-06-15T07:19:37Z","2018-06-15T19:07:36Z"
"","5766","config: bump guava to 25.0","base on https://travis-ci.org/checkstyle/checkstyle/jobs/374081168#L1167","closed","","romani","2018-05-02T20:53:33Z","2018-05-04T00:21:13Z"
"","5529","minor version bumps","base on https://travis-ci.org/checkstyle/checkstyle/jobs/341570516  ant spotbugs equalsverifier saxon","closed","","romani","2018-02-20T21:51:54Z","2018-02-21T00:32:50Z"
"","5530","config: bump guava to 24.0-jre","base on https://travis-ci.org/checkstyle/checkstyle/jobs/341570516","closed","","romani","2018-02-20T22:00:35Z","2018-02-21T02:15:44Z"
"","5355","config: bump antlr4 to 4.7.1 with minor output extension for travis","base on https://travis-ci.org/checkstyle/checkstyle/jobs/316030201#L3294","closed","","romani","2017-12-13T21:03:59Z","2017-12-14T00:13:35Z"
"","5357","config: add artifactId and new rule to version-number-rules.xml","base on https://travis-ci.org/checkstyle/checkstyle/jobs/316030201#L3120","closed","","romani","2017-12-13T21:46:20Z","2017-12-13T23:13:52Z"
"","5356","config: bump maven-javadoc-plugin to 3.0.0","base on https://travis-ci.org/checkstyle/checkstyle/jobs/316030201#L3106","closed","","romani","2017-12-13T21:22:02Z","2017-12-13T23:06:10Z"
"","5209","Update sevntu config to enforce loggers to on top by CustomDeclarationOrder","Base on #929  to my mind/experience it is better to place log/logger to the top of class to not mix it logic, as it is system related not a logic related.   I propose following change to [checkstyle_sevntu_checks.xml](https://github.com/checkstyle/checkstyle/blob/master/config/checkstyle_sevntu_checks.xml#L153) ``` $ git diff diff --git a/config/checkstyle_sevntu_checks.xml b/config/checkstyle_sevntu_checks.xml index 0246c22..c0b1cb7 100644 --- a/config/checkstyle_sevntu_checks.xml +++ b/config/checkstyle_sevntu_checks.xml @@ -152,7 +152,8 @@","open","miscellaneous,","romani","2017-10-20T17:50:41Z","2017-12-05T18:40:42Z"
"","5724","ImportOrder: new property staticGroups to allow define groups for static imports","base on #5460 and #5279(PR #5346).  requirements of #5460 should be satisfied: ``` $ cat ./Test.java  package test.test;  import java.some.common.collect1.Lists1;  import static java.some.common.collect1.Lists1.asList;  import com.google.common.collect.Lists;  import static com.google.common.collect.Lists.asList;  public class Test {     public void test() {         Lists.cartesianProduct(null, null);         asList(null, null);     } } ``` ``` $ cat ./config.xml                                                               ```  So config will become: ```                                                ```  ```                                                 ```","closed","new feature,","romani","2018-04-13T18:13:52Z","2018-12-25T18:25:34Z"
"","5516","Jacoco coverage report","Base conversation: https://groups.google.com/forum/#!topic/checkstyle-devel/KnPfFZZiumA  There are a lot of problems with Cobertura, it is kind of dead. It hasn't been updated since 2015. One possible replacement is [Jacoco](https://github.com/jacoco/jacoco).  Recent release (very long awaited) [v0.8.0](https://github.com/jacoco/jacoco/releases/tag/v0.8.0) has all the required features for us to give it one more chance.","closed","miscellaneous,","pbludov","2018-02-09T14:32:59Z","2018-02-28T00:47:38Z"
"","5738","remove all authors javadoc tags from sources","Authors are completely outdated, nobody keep them in sync and up-to-date status. Now them create one ore problem - during spelling check enforcement #5676  main comment about authors - https://github.com/checkstyle/checkstyle/issues/5676#issuecomment-382195360  It is required to remove all authors tags.","closed","miscellaneous,","romani","2018-04-18T19:11:37Z","2018-04-18T20:08:59Z"
"","5969","Indentation violation for lambda depends on tab symbols in code","ATTENTION: code with tab symbols. ``` /tmp $ javac Test.java  /tmp $ cat config.xml                                   /tmp $ cat Test.java import java.lang.*; import java.util.*; import java.util.stream.*;  class Test { 	List test(List input) { 		return input.stream() 				.flatMap(in -> Arrays.stream(in.split(""""))) // only 2 char parameter has violation 				.map(Integer::valueOf) 				.collect(Collectors.toList()); 	}  	String test2(String input) { 		return Optional.ofNullable(input) 				.filter(inp -> inp.contains(""e"")) // only 3 char parameter has violation 				.orElse(null); 	} }  /tmp $ java -jar checkstyle-8.10.1-all.jar -c config.xml Test.java Starting audit... [ERROR] /tmp/Test.java:8: 'lambda' has incorrect indentation level 16, expected level should be 20. [Indentation] [ERROR] /tmp/Test.java:15: 'lambda' has incorrect indentation level 16, expected level should be 20. [Indentation] Audit done. Checkstyle ends with 2 errors. ```  ---------------  Expectation: lambda parameter name length should not affect the indentation rule, and the example code above should not have any violations.  If you change line 8's lamdba parameter to `i` or `inp` or any other name that is not 2 characters, the indentation violation goes away. Likewise, line 15's lambda parameter can be changed to any name that is not 3 characters and the indentation violation goes away.  --------------  If tabs changed to spaces, no problems are reported, but we use tabs in code. http://checkstyle.sourceforge.net/config_misc.html#Indentation no special property for tab size, tab should be taken from Treewalker.","closed","indentation,","shakuzen","2018-06-25T06:40:57Z","2020-03-27T06:40:52Z"
"","5780","minor: force specific travis CI sections to run always","Attempt to force travis CI to always run for specific sections.  Please verify my new bash command is fine.","closed","","rnveach","2018-05-09T13:44:39Z","2018-05-10T23:13:25Z"
"","5431","Remove dependency on tools.jar","As peroration to jdk9 usage(#5102) we need to remove dependency to `tools.jar` from build and docklet usage. ""docklets"" package should be removed. Class to do generation of property file should be located at `src/main/java/com/puppycrawl/tools/checkstyle/`","closed","miscellaneous,","romani","2018-01-06T14:03:05Z","2018-02-25T14:28:44Z"
"","5071","minor: modified eclipse compiler to not execute without arguments","As I am new to this file, if i executed it as is it printed out 2000+ errors about couldn't be able to find classes. It turns out that this is a required parameter that is passed by maven. Some of our other scripts can be executed as is, so it was not clear that this couldn't be.  I only modified it slightly to fail if no parameters were passed. It doesn't affect the maven process any.","closed","","rnveach","2017-09-04T22:49:58Z","2017-09-05T17:17:27Z"
"","5411","New MissingJavadocCheck(s)","As discussed at https://github.com/checkstyle/checkstyle/issues/4983#issuecomment-350503360 ,  once we start converting old Java checks using Javadoc regular expression to Javadoc checks using grammar, we lose the functionality of reporting a violation on an item if a Javadoc is missing.  [MissingDeprecated](http://checkstyle.sourceforge.net/config_annotation.html#MissingDeprecated) has an property `skipNoJavadoc` which will skip violations if a javadoc is missing on a deprecated method. [JavadocMethodCheck](http://checkstyle.sourceforge.net/config_javadoc.html#JavadocMethod) has various properties like `minLineCount` and `allowedAnnotations` which will not print a missing javadoc violation if the number of lines in the method are too small or it contains an annotation.  We can't remove these functionalities, so we need to split them into new check(s) that will remain as Java checks. Their only purpose will be to report a violation if a javadoc is needed.  We need to examine all these properties of our Java checks that examine Javadocs and decide how to best to split them out. Should we have a new check for each type (Class, Method, etc...) or should they all be contained into 1 check? Which properties do these new check(s) need from our existing checks? We will need to create a complete list.  Once this is done we can complete https://github.com/checkstyle/checkstyle/issues/4983.    ---------------------  **Migration Note**  For JavadocType, functionality for validating missing javadocs was split into a new check MissingJavadocType. `scope` and `excludeScope` properties were brought to the new check. `allowedAnnotations` was brought over but renamed to `skipAnnotations`.","closed","new module,","rnveach","2017-12-31T17:58:56Z","2019-04-30T02:53:00Z"
"","5002","Add violateExecutionOnNonTightHtml property of AbstractJavadocCheck to xdoc","As a result of #3311 a new property `violateExecutionOnNonTightHtml` is added to `AbstractJavadocCheck`. This property has to be added to xdoc.  Tip: https://github.com/checkstyle/checkstyle/pull/4751/files#r134985454","closed","miscellaneous,","Vladlis","2017-08-25T06:44:36Z","2017-12-06T03:22:04Z"
"","5701","jsoref spellchecker: group word families togeth","As a one off change, this will result in the following output change: ``` @@ -3509 +3507 @@ -xdoc (XDOC, XDoc, Xdoc, xdoc, XDocs, Xdocs, xdocs) +xdoc ```  But, going forward, there should be much less jitter.","closed","miscellaneous,","jsoref","2018-04-08T15:46:37Z","2018-04-15T03:10:03Z"
"","5474","Appveyor CI build failure: Unable to get setup from cygwin.mirror.constant.com","appveyor CI - https://ci.appveyor.com/project/Checkstyle/checkstyle/build/job/dl5afbcc7wbvgu71  ``` java -version java version ""1.8.0_152"" Java(TM) SE Runtime Environment (build 1.8.0_152-b16) Java HotSpot(TM) 64-Bit Server VM (build 25.152-b16, mixed mode) %CYG_BIN% -qnNdO -R %CYG_ROOT% -s %CYG_MIRROR% -l %CYG_CACHE% -P hg Starting cygwin install, version 2.882 User has backup/restore rights Current Directory: C:\cygwin\var\cache\setup Could not open service McShield for query, start and stop. McAfee may not be installed, or we don't have access. root: C:\cygwin system Selected local directory: C:\cygwin\var\cache\setup net: Direct site: http://cygwin.mirror.constant.com/ HTTP status 404 fetching http://cygwin.mirror.constant.com/x86/setup.xz.sig mbox note: Unable to get http://cygwin.mirror.constant.com/x86/setup.xz.sig from  unattended_mode is set at mbox: returning default value mbox note: Unable to get setup from  unattended_mode is set at mbox: returning default value site: http://cygwin.mirror.constant.com/ HTTP status 404 fetching http://cygwin.mirror.constant.com/x86/setup.xz.sig mbox note: Unable to get http://cygwin.mirror.constant.com/x86/setup.xz.sig from  unattended_mode is set at mbox: returning default value mbox note: Unable to get setup from  unattended_mode is set at mbox: returning default value site: http://cygwin.mirror.constant.com/ HTTP status 404 fetching http://cygwin.mirror.constant.com/x86/setup.xz.sig mbox note: Unable to get http://cygwin.mirror.constant.com/x86/setup.xz.sig from  unattended_mode is set at mbox: returning default value mbox note: Unable to get setup from  unattended_mode is set at mbox: returning default value site: http://cygwin.mirror.constant.com/ HTTP status 404 fetching http://cygwin.mirror.constant.com/x86/setup.xz.sig mbox note: Unable to get http://cygwin.mirror.constant.com/x86/setup.xz.sig from  unattended_mode is set at mbox: returning default value mbox note: Unable to get setup from  unattended_mode is set at mbox: returning default value site: http://cygwin.mirror.constant.com/ HTTP status 404 fetching http://cygwin.mirror.constant.com/x86/setup.xz.sig mbox note: Unable to get http://cygwin.mirror.constant.com/x86/setup.xz.sig from  unattended_mode is set at mbox: returning default value mbox note: Unable to get setup from  unattended_mode is set at mbox: returning default value download/verify error in unattended_mode: out of retries note: Installation incomplete.  Check C:\cygwin\var\log\setup.log.full for details Ending cygwin install Command exited with code 1 ```  I do not remember why I used cygwin, probably to run shell scripts on windows , we do not need this enymore.","closed","miscellaneous,","romani","2018-01-19T23:30:32Z","2018-01-20T00:06:22Z"
"","5154","Incorrect indentation check for method preceded by annotation, with method parameter on separate line","Anderss-MacBook-Pro:checkstyle andtho$ javac Test.java   Anderss-MacBook-Pro:checkstyle andtho$ cat Test.java  ```java package bugreport;  class Test {    @interface Annotation1 {     String field1();     String field2();   }    @interface Annotation2 {};    @Annotation1(field1 = ""foo"", field2 = ""bar"")   public @Annotation2 String method( // violation       String param   ) {     return null;   }  } ```  Anderss-MacBook-Pro:checkstyle andtho$ cat config.xml ```xml                                                               ```  Anderss-MacBook-Pro:checkstyle andtho$ java -jar checkstyle-8.2-all.jar -c config.xml Test.java ``` Starting audit... [ERROR] /Users/andtho/code/sandbox/bug_reports/checkstyle/Test.java:13: 'public' has incorrect indentation level 2, expected level should be 6. [Indentation] Audit done. Checkstyle ends with 1 errors. ```  ---------------  Expected no indentation error.  The error occurs when the parameter `param` is on a new line; it does not occur when the entire method signature (except `@Annotation1`) is on one line. It also does not occur when `@Annotation1` is omitted.  I need to be able to put parameters on a new line, as the method signature exceeds the maximum line width (in real-life code), so this is an actual issue.  Note, when I indent `public` to indentation level 6, the expected indentation level is increased to 10, and then to 14, 18, etc.","closed","indentation,","andersthorbeck","2017-09-28T09:31:46Z","2017-12-16T16:50:04Z"
"","5825","config: force wercker ci to use proper url for clone","and introduction of method `checkout_from` to make checkout standard and keep git folder free of changes after launching on local","closed","","romani","2018-05-23T04:37:18Z","2018-05-23T05:26:31Z"
"","5968","Issue #5949: disable bunch of unrelated to our project inspections","also update file format as it is exported by IDEA 2018.1.4  Issue #5949  all missed comments are only because inspections disappeared. Bunch of inspections are disabled without comment, as they are unrelated, comment is missed as too much of them are disabled. diff is here -  https://github.com/checkstyle/checkstyle/issues/5949#issuecomment-399801933","closed","","romani","2018-06-25T00:31:42Z","2018-06-25T00:58:55Z"
"","5212","AllSinglelineCommentsTest fails on MacOS","AllSinglelineCommentsTest fails on my laptop with MacOS 10.12.6 (16G29) and  kernel version Darwin 16.7.0.  ```  java -version java version ""1.8.0_131"" Java(TM) SE Runtime Environment (build 1.8.0_131-b11) Java HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode) ```  When I invoke  ```java System.getProperty(""line.separator"") ```  it returns ""\n""  as a lines separator, however, ast.getFirstChild().getText() shows that ""\n\r"" is a lines separator in AST.  If I change  ```java private static final String LINE_SEPARATOR = System.getProperty(""line.separator""); ```  to  ```java private static final String LINE_SEPARATOR = ""\r\n""; ```  or set the property ""line.separator"" via command line the test will pass.  Note, that I did not configure line separators in IDEA, or MacOS. It is laptop's default configuration which result in the build failure fore Checkstyle.","closed","","MEZk","2017-10-21T13:09:47Z","2018-01-21T20:22:35Z"
"","5761","Allow ImportControl for classes (name or extends) to allow/disallow imports","Allows control imports for classname or superclass/interface...      This can be useful to control package-by-feature estructure (instead of package-by-layer)  note: package-by-feature, divide classes into business packages and each business package can contain classes of multiples layers (rest, business-service, dao, dto/pojo)  Example: com.company.invoice · InvoiceRest · InvoiceService · InvoiceDto · InvoiceDao · ProviderRest · ProviderService · ProviderDto · ProviderDao  note: I like to limit imports by class name (_regex_ .*Dao, .*Rest) or by superclass/interface (_extends_ com.company.AbstractDao, _implements_ com.company.IRest)  Proposed elements/tags: `` `    ` `    ` ``  `` `    ` `    ` ``  Of course allow/disallow on `` elements, must be inherited be child subpackages","closed","","joseaio","2018-04-30T08:25:48Z","2018-05-02T12:29:10Z"
"","5132","Cannot use checkstyle version 8.2: Unable to instantiate 'FileContentsHolder' class","All I did was to upgrade from 8.1 to 8.2 using a configuration file that worked just fine ``` [ERROR] Failed to execute goal org.apache.maven.plugins:maven-checkstyle-plugin:2.17:check (verify-style) on project sshd:      Failed during checkstyle configuration: cannot initialize module TreeWalker - Unable to instantiate 'FileContentsHolder' class,          it is also not possible to instantiate it as .FileContentsHolder, FileContentsHolderCheck, .FileContentsHolderCheck.     Please recheck that class name is specified as canonical name or read how to configure short name usage http://checkstyle.sourceforge.net/config.html#Packages.     Please also recheck that provided ClassLoader to Checker is configured correctly. ```","closed","","lgoldstein","2017-09-21T05:17:48Z","2017-12-09T22:27:39Z"
"","5611","Remove usage of com.sun.* packages from tests","All `com.sun` packages are visible from JDK9 only in the compatibility mode. In the java 9 mode, using them will raise an error message like ``` [ERROR] src/test/resources/com/puppycrawl/tools/checkstyle/checks/imports/illegalimport/InputIllegalImportDefault.java:[15,11] package sun.applet is not visible [ERROR]   (package sun.applet is declared in module java.desktop, which does not export it) ``` For now, these packages are used only in the import order tests. Moving them to the `resources-noncompilable` folder folder will remove the warning message.","closed","miscellaneous,","pbludov","2018-03-16T10:49:50Z","2018-03-17T03:52:58Z"
"","5452","wercker is failing with uncler message after release on non-rebased branches","After release all PRs have to rebase to avoid problem like: ``` 17 secondsNoExceptiontest - Apache Struts Command cancelled due to error export WERCKER_STEP_ROOT=""/pipeline/script-b31bd3de-3e42-48ca-a0ac-f7980f70f445"" export WERCKER_STEP_ID=""script-b31bd3de-3e42-48ca-a0ac-f7980f70f445"" export WERCKER_STEP_OWNER=""wercker"" export WERCKER_STEP_NAME=""script"" export WERCKER_REPORT_NUMBERS_FILE=""/report/script-b31bd3de-3e42-48ca-a0ac-f7980f70f445/numbers.ini"" export WERCKER_REPORT_MESSAGE_FILE=""/report/script-b31bd3de-3e42-48ca-a0ac-f7980f70f445/message.txt"" export WERCKER_REPORT_ARTIFACTS_DIR=""/report/script-b31bd3de-3e42-48ca-a0ac-f7980f70f445/artifacts"" source ""/pipeline/script-b31bd3de-3e42-48ca-a0ac-f7980f70f445/run.sh"" < /dev/null Cloning into 'contribution'... Testing Checkstyle started Cloning git repository 'apache-struts' to repositories/apache-struts folder ... Cloning into 'repositories/apache-struts'... Cloning git repository 'apache-struts' - completed  apache-struts is synchronized    [delete] Deleting directory /pipeline/source/contribution/checkstyle-tester/src/main/java      [copy] Copying 3162 files to /pipeline/source/contribution/checkstyle-tester/src/main/java/apache-struts Running 'mvn clean' on src/main/java ... [INFO] Scanning for projects... [INFO]                                                                          [INFO] ------------------------------------------------------------------------ [INFO] Building sample 0.0.1-SNAPSHOT [INFO] ------------------------------------------------------------------------ [INFO]  [INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ sample --- [INFO] ------------------------------------------------------------------------ [INFO] BUILD SUCCESS [INFO] ------------------------------------------------------------------------ [INFO] Total time: 0.236 s [INFO] Finished at: 2018-01-07T14:51:21+00:00 [INFO] Final Memory: 17M/966M [INFO] ------------------------------------------------------------------------ Running Checkstyle on src/main/java ... with excludes **/apache-struts/**/resources/**/* [INFO] Error stacktraces are turned on. [INFO] Scanning for projects... [INFO]                                                                          [INFO] ------------------------------------------------------------------------ [INFO] Building sample 0.0.1-SNAPSHOT [INFO] ------------------------------------------------------------------------ [INFO]  [INFO] --- maven-site-plugin:3.3:site (default-site) @ sample --- [INFO] configuring report plugin org.apache.maven.plugins:maven-checkstyle-plugin:2.17 [INFO] Downloading: http://repository.apache.org/snapshots/com/puppycrawl/tools/checkstyle/8.8-SNAPSHOT/maven-metadata.xml [INFO] Downloading: http://sevntu-checkstyle.github.com/sevntu.checkstyle/maven2/com/puppycrawl/tools/checkstyle/8.8-SNAPSHOT/maven-metadata.xml [INFO] Downloading: http://sevntu-checkstyle.github.com/sevntu.checkstyle/maven2/com/puppycrawl/tools/checkstyle/8.8-SNAPSHOT/checkstyle-8.8-SNAPSHOT.pom [INFO] Downloading: http://repository.apache.org/snapshots/com/puppycrawl/tools/checkstyle/8.8-SNAPSHOT/checkstyle-8.8-SNAPSHOT.pom [WARNING] The POM for com.puppycrawl.tools:checkstyle:jar:8.8-SNAPSHOT is missing, no dependency information available [INFO] Downloading: http://sevntu-checkstyle.github.com/sevntu.checkstyle/maven2/com/github/sevntu-checkstyle/sevntu-checkstyle-maven-plugin/1.26.0/sevntu-checkstyle-maven-plugin-1.26.0.pom [INFO] Downloaded: http://sevntu-checkstyle.github.com/sevntu.checkstyle/maven2/com/github/sevntu-checkstyle/sevntu-checkstyle-maven-plugin/1.26.0/sevntu-checkstyle-maven-plugin-1.26.0.pom (4 KB at 38.4 KB/sec) [INFO] Downloading: http://sevntu-checkstyle.github.com/sevntu.checkstyle/maven2/com/github/sevntu-checkstyle/sevntu-checks/1.26.0/sevntu-checks-1.26.0.pom [INFO] Downloaded: http://sevntu-checkstyle.github.com/sevntu.checkstyle/maven2/com/github/sevntu-checkstyle/sevntu-checks/1.26.0/sevntu-checks-1.26.0.pom (15 KB at 179.9 KB/sec) [INFO] Downloading: http://sevntu-checkstyle.github.com/sevntu.checkstyle/maven2/com/puppycrawl/tools/checkstyle/8.8-SNAPSHOT/checkstyle-8.8-SNAPSHOT.jar [INFO] Downloading: http://sevntu-checkstyle.github.com/sevntu.checkstyle/maven2/com/github/sevntu-checkstyle/sevntu-checkstyle-maven-plugin/1.26.0/sevntu-checkstyle-maven-plugin-1.26.0.jar [INFO] Downloading: http://sevntu-checkstyle.github.com/sevntu.checkstyle/maven2/com/github/sevntu-checkstyle/sevntu-checks/1.26.0/sevntu-checks-1.26.0.jar [INFO] Downloaded: http://sevntu-checkstyle.github.com/sevntu.checkstyle/maven2/com/github/sevntu-checkstyle/sevntu-checks/1.26.0/sevntu-checks-1.26.0.jar (173 KB at 2188.0 KB/sec) [INFO] Downloaded: http://sevntu-checkstyle.github.com/sevntu.checkstyle/maven2/com/github/sevntu-checkstyle/sevntu-checkstyle-maven-plugin/1.26.0/sevntu-checkstyle-maven-plugin-1.26.0.jar (3 KB at 23.8 KB/sec) [INFO] Downloading: http://repository.apache.org/snapshots/com/puppycrawl/tools/checkstyle/8.8-SNAPSHOT/checkstyle-8.8-SNAPSHOT.jar [INFO] ------------------------------------------------------------------------ [INFO] BUILD FAILURE [INFO] ------------------------------------------------------------------------ [INFO] Total time: 2.639 s [INFO] Finished at: 2018-01-07T14:51:25+00:00 [INFO] Final Memory: 18M/748M [INFO] ------------------------------------------------------------------------ [ERROR] Failed to execute goal org.apache.maven.plugins:maven-site-plugin:3.3:site (default-site) on project sample: failed to get report for org.apache.maven.plugins:maven-checkstyle-plugin: Plugin org.apache.maven.plugins:maven-checkstyle-plugin:2.17 or one of its dependencies could not be resolved: Could not find artifact com.puppycrawl.tools:checkstyle:jar:8.8-SNAPSHOT in sevntu-maven (http://sevntu-checkstyle.github.com/sevntu.checkstyle/maven2) -> [Help 1] org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.maven.plugins:maven-site-plugin:3.3:site (default-site) on project sample: failed to get report for org.apache.maven.plugins:maven-checkstyle-plugin   at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:212)   at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)   at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)   at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)   at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)   at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)   at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)   at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:307)   at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:193)   at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:106)   at org.apache.maven.cli.MavenCli.execute(MavenCli.java:863)   at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:288)   at org.apache.maven.cli.MavenCli.main(MavenCli.java:199)   at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)   at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)   at java.lang.reflect.Method.invoke(Method.java:498)   at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)   at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)   at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)   at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356) Caused by: org.apache.maven.plugin.MojoExecutionException: failed to get report for org.apache.maven.plugins:maven-checkstyle-plugin   at org.apache.maven.reporting.exec.DefaultMavenReportExecutor.buildMavenReports(DefaultMavenReportExecutor.java:159)   at org.apache.maven.plugins.site.AbstractSiteRenderingMojo.getReports(AbstractSiteRenderingMojo.java:235)   at org.apache.maven.plugins.site.SiteMojo.execute(SiteMojo.java:121)   at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)   at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:207)   ... 20 more Caused by: org.apache.maven.plugin.PluginResolutionException: Plugin org.apache.maven.plugins:maven-checkstyle-plugin:2.17 or one of its dependencies could not be resolved: Could not find artifact com.puppycrawl.tools:checkstyle:jar:8.8-SNAPSHOT in sevntu-maven (http://sevntu-checkstyle.github.com/sevntu.checkstyle/maven2)   at org.apache.maven.plugin.internal.DefaultPluginDependenciesResolver.resolveInternal(DefaultPluginDependenciesResolver.java:218)   at org.apache.maven.plugin.internal.DefaultPluginDependenciesResolver.resolve(DefaultPluginDependenciesResolver.java:149)   at org.apache.maven.plugin.internal.DefaultMavenPluginManager.createPluginRealm(DefaultMavenPluginManager.java:400)   at org.apache.maven.plugin.internal.DefaultMavenPluginManager.setupPluginRealm(DefaultMavenPluginManager.java:372)   at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)   at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)   at java.lang.reflect.Method.invoke(Method.java:498)   at org.apache.maven.reporting.exec.DefaultMavenPluginManagerHelper.setupPluginRealm(DefaultMavenPluginManagerHelper.java:186)   at org.apache.maven.reporting.exec.DefaultMavenReportExecutor.buildReportPlugin(DefaultMavenReportExecutor.java:243)   at org.apache.maven.reporting.exec.DefaultMavenReportExecutor.buildMavenReports(DefaultMavenReportExecutor.java:154)   ... 24 more Caused by: org.eclipse.aether.resolution.ArtifactResolutionException: Could not find artifact com.puppycrawl.tools:checkstyle:jar:8.8-SNAPSHOT in sevntu-maven (http://sevntu-checkstyle.github.com/sevntu.checkstyle/maven2)   at org.eclipse.aether.internal.impl.DefaultArtifactResolver.resolve(DefaultArtifactResolver.java:444)   at org.eclipse.aether.internal.impl.DefaultArtifactResolver.resolveArtifacts(DefaultArtifactResolver.java:246)   at org.eclipse.aether.internal.impl.DefaultRepositorySystem.resolveDependencies(DefaultRepositorySystem.java:367)   at org.apache.maven.plugin.internal.DefaultPluginDependenciesResolver.resolveInternal(DefaultPluginDependenciesResolver.java:210)   ... 34 more Caused by: org.eclipse.aether.transfer.ArtifactNotFoundException: Could not find artifact com.puppycrawl.tools:checkstyle:jar:8.8-SNAPSHOT in sevntu-maven (http://sevntu-checkstyle.github.com/sevntu.checkstyle/maven2)   at org.eclipse.aether.connector.basic.ArtifactTransportListener.transferFailed(ArtifactTransportListener.java:39)   at org.eclipse.aether.connector.basic.BasicRepositoryConnector$TaskRunner.run(BasicRepositoryConnector.java:355)   at org.eclipse.aether.util.concurrency.RunnableErrorForwarder$1.run(RunnableErrorForwarder.java:67)   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)   at java.lang.Thread.run(Thread.java:745) [ERROR]  [ERROR] Re-run Maven using the -X switch to enable full debug logging. [ERROR]  [ERROR] For more information about the errors and possible solutions, please read the following articles: [ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException Caught: groovy.lang.GroovyRuntimeException: Error: ! groovy.lang.GroovyRuntimeException: Error: !   at launch.executeCmd(launch.groovy:298)   at launch.executeCmd(launch.groovy:292)   at launch$executeCmd$8.callCurrent(Unknown Source)   at launch.runMavenExecution(launch.groovy:219)   at launch$_generateCheckstyleReport_closure2.doCall(launch.groovy:85)   at launch.generateCheckstyleReport(launch.groovy:64)   at launch$generateCheckstyleReport$1.callCurrent(Unknown Source)   at launch.run(launch.groovy:10) ```  it is happening due to the fact that contrinution project was updated to new version of checkstyle (8.8-SNAPSHOT in this case) but cloning is still do for previous version (8.7-SNAPSHOT) as PR was created base on commit of 8.7-SNAPSHOT  To resolve this issue we should recheck in each wercker build execution that there is match `mvn -e -q -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec` vs `cd contribution/checkstyle-tester && mvn -e -q -Dexec.executable='echo' -Dexec.args='${checkstyle.version}' --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec`  if any mismatch, print both values and fail a build to ask user to rebase on latest sources.","closed","CI,","romani","2018-01-10T01:10:29Z","2018-04-30T19:59:51Z"
"","5916","Resolve errors and warnings from Eclipse oxygen 4.7.3","after import to Eclipse:  during import: ![image](https://user-images.githubusercontent.com/812984/41385526-0e8f992a-6f31-11e8-860f-71f8745d0a7e.png)  ERRORS and warnings are at  https://gist.github.com/romani/2c5111fd8daf88d3524478c37278b196  1) `Plugin execution not covered by lifecycle configuration: org.codehaus.mojo:exec-maven-plugin:1.6.0:java (execution: default, phase: process-classes)	pom.xml	/checkstyle	line 708	Maven Project Build Lifecycle Mapping Problem`   2) compilation problems in inputs ""The value for annotation attribute must be a constant expression"" and mismatch of package and folder.  3) TODO in non related Inputs  4) warnings on deprecated method usage  5) `Access restriction: The type 'Constants' is not API (restriction on required library '/opt/jdk/jdk1.8.0_172/jre/lib/rt.jar')  XmlLoaderTest.java  /checkstyle/src/test/java/com/puppycrawl/tools/checkstyle line 41 Java Problem`  **Expected**: no problems and almost no warnings after following http://checkstyle.sourceforge.net/eclipse.html","closed","miscellaneous,","romani","2018-06-14T00:47:53Z","2018-06-16T00:48:57Z"
"","5953","Setup Jenkins CI for building Pull Requests in checkstyle/checkstyle repository","After discussion with @romani, we should setup the Jenkins server and give it an address *jenkins.checkstyle.org*. This Jenkins instance should be publically accessible, so anybody who posted the new PR should be able to review the build log for it in Jenkins Jenkins should build each pull request in this repository using the Jenkins pipeline job. Jenkins pipeline job code (aka Jenkinsfile) should be stored in this repository. At the very first step, Jenkins build pipeline should just run the simple 'ls' command. This will allow us to not fail any PRs until the Jenkins PR testing workflow itself is well-tested.  After we test the PR building workflow well enough, we should create the separate issue to setup real tests in the pipeline, such as running UTs with Maven and so on.  Then we should use Hyper.sh as the main Jenkins computing resources provider (i.e. any CPU or memory-aggressive Jenkins build should happen in the Hyper.sh container).  Initially, Jenkins master can run builds on it's own executors, but eventually, we should have few Jenkins slaves running under the master, so master will only act as a simple job scheduler and UI while all builds will actually happen on slaves and delegated from slaves to Hyper.sh.","closed","CI,","daniilyar","2018-06-21T22:04:13Z","2019-01-08T21:22:11Z"
"","5285","LeftCurlyOption:nl_or_singleline","Added a new option to the LeftCurly module:                                              Allows braces to be lined up vertically **or** horizontally, e.g.  ``` if (fubar()) {     foo();     bar(); } ```  and  `if (fubar()) {foo(); bar();}`  are both considered valid.","closed","","aclarkxyz","2017-11-23T00:19:33Z","2017-12-08T14:51:59Z"
"","5231","Issue #5232 check os and linux","add check to Os because not check to same os","closed","","jirawat050","2017-10-24T18:45:28Z","2017-10-26T03:23:31Z"
"","5440","Issue #5440: New Check: Enforce or deny a blank line before the right curly brace","A rule to enforce or forbid a blank line before the right (closing) curly brace.  By default this check validates presence of a blank line before the right curly brace. To configure this check to validate absence of any blank lines at the bottom of the code block, set ""blankLine"" parameter to `false`.  No validation is performed for empty code blocks, since this check may conflict with `AfterLeftCurly` check if they are configured in the opposite way.  To enforce a blank line before the right curly brace: <module name=""BeforeRightCurly"">   <property name=""blankLine"" value=""true""/> </module>  ``` interface Foo {      public int method1();     public int method2();  } ```  To forbid blank lines before the right curly brace: <module name=""BeforeRightCurly"">   <property name=""blankLine"" value=""false""/> </module>  ``` interface Foo {     public int method1();     public int method2(); } ```","open","","pbludov","2018-01-07T11:37:54Z","2018-01-14T12:21:05Z"
"","5439","Issue #5439: New Check: Enforce or deny a blank line after the left curly brace","A rule to enforce or forbid a blank line after the left (opening) curly brace.  By default this check validates presence of a blank line after the left curly brace. To configure this check to validate absence of any blank lines at the top of the code block, set ""blankLine"" parameter to `false`.  No validation is performed for empty code blocks, since this check may conflict with `BeforeRightCurly` check if they are configured in the opposite way.  To enforce a blank line after the left curly brace: <module name=""AfterLeftCurly"">   <property name=""blankLine"" value=""true""/> </module>  ``` interface Foo {      public int method1();     public int method2();  } ```  To forbid blank lines after the left curly brace: <module name=""AfterLeftCurly"">   <property name=""blankLine"" value=""false""/> </module>  ``` interface Foo {     public int method1();     public int method2(); } ```","open","new module,","pbludov","2018-01-07T11:37:45Z","2022-04-12T18:16:20Z"
"","5723","config: moved disallows to be first in import control","A few places we allow the package (and it's sub) but then later disallow a portion of the package. This could mean the disallow is being ignored as the first matching rule we find is used and all subsequent rules are ignored, even if they happen to match too. I moved all the disallows first so there can't be any mistakes from new changes.","closed","","rnveach","2018-04-13T15:19:00Z","2018-04-13T17:50:44Z"
"","5089","LineLength measures Java characters, not Unicode characters","`LineLength` checks the number of Java characters in a line (i.e. the number of 16-bit [code units](http://unicode.org/glossary/#code_unit) in the UTF-16 encoded string), not the number of [Unicode characters](http://unicode.org/glossary/#character) in the line.  The line length limit in the Google Java Style Guide is supposed to be 100 Unicode characters: https://google.github.io/styleguide/javaguide.html#s4.4-column-limit, so both of the following long lines should be OK:  ```java class T {     String aaaaaaa = ""1234567890123456789012345678901234567890"" + ""1234567890123456789012345"" + ""_"";     String aaaaaab = ""1234567890123456789012345678901234567890"" + ""1234567890123456789012345"" + ""💩""; } ```  ```java                            ```  ```java  java -jar checkstyle-8.2-all.jar -c config.xml Test.java  Starting audit... [ERROR] /var/tmp/Test.java:3: Line is longer than 100 characters (found 101). [LineLength] Audit done. Checkstyle ends with 1 errors. ```  **ATTENTION:** All users from Windows OS who would like to have this issue fixed (after release of fix) have to define charset in [Checker](https://checkstyle.org/config.html#Checker) to UTF-8, in other case calculation of length will be wrong. Second example shows how to set charset - https://checkstyle.org/config.html#Checker","closed","google style,","cushon","2017-09-08T00:57:32Z","2021-02-08T11:13:27Z"
"","5171","google-java-formatter and checkstyle disagree about nested annotation indentation","`javac Test.java` `cat Test.java` ``` @interface Parent {   Child[] params(); }  @interface Child {   String value(); }  @Parent(   params = {     @Child(value = ""Let's put here a really long string to demonstrate the issue. Really long."")   } ) public class Test {} ``` Test.java is already formatted with google formatter v 1.4  (google_checks.xml is a copy of src/main/resources/google_checks.xml from checkstyle master) `cat google_checks.xml` ``````  `java -jar checkstyle-8.3-SNAPSHOT-all.jar -c google_checks.xml Test.java `  ``` Starting audit... [WARN] ~/dev/checkstyle/Test.java:10: 'params' has incorrect indentation level 2, expected level should be 4. [Indentation] [WARN] ~/dev/checkstyle/Test.java:12: '}' has incorrect indentation level 2, expected level should be 4. [Indentation] Audit done.  ```  [Small gradle-based project that includes Test.java, google formatter and checkstyle tasks](https://github.com/medvedev/checkstyle-google-formatter-issue)","closed","indentation,","medvedev","2017-10-04T17:29:55Z","2017-10-06T15:55:23Z"
"","5820","Xpath suppression matching prone to stack overflow","`InputDetailASTJustToMakeStackoverflowError.java`([link](https://github.com/checkstyle/checkstyle/blob/master/src/test/resources/com/puppycrawl/tools/checkstyle/api/detailast/InputDetailASTJustToMakeStackoverflowError.java)) was created for the same issue facing our java workflow.  ```` $ cat TestConfig.xml                                               $ cat suppression.xml             $ java -jar checkstyle-8.10-all.jar -c TestConfig.xml InputDetailASTJustToMakeStackoverflowError.java Starting audit... Exception in thread ""main"" java.lang.Error: Error was thrown while processing  InputDetailASTJustToMakeStackoverflowError.java 	at com.puppycrawl.tools.checkstyle.Checker.processFiles(Checker.java:299) 	at com.puppycrawl.tools.checkstyle.Checker.process(Checker.java:213) 	at com.puppycrawl.tools.checkstyle.Main.runCheckstyle(Main.java:553) 	at com.puppycrawl.tools.checkstyle.Main.runCli(Main.java:464) 	at com.puppycrawl.tools.checkstyle.Main.main(Main.java:218) Caused by: java.lang.StackOverflowError 	at com.puppycrawl.tools.checkstyle.xpath.ElementNode.setIdent(ElementNode.java:258) 	at com.puppycrawl.tools.checkstyle.xpath.ElementNode.(ElementNode.java:73) 	at com.puppycrawl.tools.checkstyle.xpath.ElementNode.createChildren(ElementNode.java:85) 	at com.puppycrawl.tools.checkstyle.xpath.ElementNode.(ElementNode.java:74) .... 	at com.puppycrawl.tools.checkstyle.xpath.ElementNode.createChildren(ElementNode.java:85) 	at com.puppycrawl.tools.checkstyle.xpath.ElementNode.(ElementNode.java:74) 	at com.puppycrawl.tools.checkstyle.xpath.ElementNode.createChildren(ElementNode.java:85) 	at com.puppycrawl.tools.checkstyle.xpath.ElementNode.(ElementNode.java:74) ````","closed","xpath,","rnveach","2018-05-19T00:37:25Z","2020-12-27T09:47:40Z"
"","5393","Some contents in messages_zh.properties for imports check are not well translated","`import.groups.separated.internally=進口組以前的額外分離 ''{0}''。` This is Traditional Chinese while others are all Simplified Chinese.  `import.illegal=非法进口： {0} 。` Here import is translated to '进口' while others are all translated to '导入'.  `import.same=额外 import 当前包下内容：{0} 。` Here we just keep the English word 'import' while others are all translated to Chinese.","closed","miscellaneous,","Apache9","2017-12-27T03:46:42Z","2017-12-27T14:10:09Z"
"","5414","checkstyle-8.7-all.jar missing from downloads site even though released to Maven repository","`https://sourceforge.net/projects/checkstyle/files/?source=navbar`:  ```text Looking for the latest version? Download checkstyle-8.6-all.jar (10.6 MB) ```","closed","","lgoldstein","2018-01-01T12:35:33Z","2018-01-01T19:28:44Z"
"","5448","IndentationCheck: forceStrictCondition does not work for nested expressions","```xml                                ```  ```java             int maxValue = Math.max(                 Math.max(                     1, 2),                 Math.max(                     3, 4)); ```  In the above code I'd expect the `forceStrictCondition` property to be aware of a nested expression and not expect lines 3 and 5 to be the same as lines 2 and 4.","open","indentation,","mjpt777","2018-01-08T15:54:03Z","2021-09-23T08:15:20Z"
"","5951","Incorrect warning for array initializer indentation inside annotations when using google_checks.xml","```java @T.Foo({   @T.Bar, // }) class T {    @interface Foo {     Bar[] value() default {};   }    @interface Bar {} }  $ cat google_checks.xml                                                                                                                       ```  ``` javac T.java && RUN_LOCALE=""-Duser.language=en -Duser.country=US""  java -jar checkstyle-8.10.1-all.jar -c google_checks.xml  T.java Starting audit... [WARN] /tmp/T.java:2: '@' has incorrect indentation level 2, expected level should be 4. [Indentation] Audit done. ```  This formatting is allowed by the Google Java Style Guide, and should not result in a warning when using `google_checks.xml`. [§4.8.3.1](https://google.github.io/styleguide/javaguide.html#s4.8.3.1-array-initializers) allows array initializers to be formatted as ""block-like constructs"", and provides examples showing array initializers with a 2 space indent after the opening `{`. full config is at https://raw.githubusercontent.com/checkstyle/checkstyle/bf2cd391c4211e0c5f4bdf60b69257ac3e17c980/src/main/resources/google_checks.xml    -------","closed","google style,","cushon","2018-06-20T16:04:19Z","2020-12-08T06:40:33Z"
"","5155","DeclarationOrderCheck false positive","```java /* default */ final FirebirdSql firebirdSql; ```  This gives a DeclarationOrderCheck warning which is not right. This too:  ```java /* default */ static final EventHandler handler = (event, subject, arguments) -> { ```","closed","","boris-petrov","2017-09-28T11:06:09Z","2017-10-01T14:47:18Z"
"","5136","5.10.0 NullPointerException","```` null java.lang.NullPointerException 	at org.infernus.idea.checkstyle.VersionListReader.readSupportedVersions(VersionListReader.java:89) 	at org.infernus.idea.checkstyle.VersionListReader.(VersionListReader.java:43) 	at org.infernus.idea.checkstyle.VersionListReader.(VersionListReader.java:38) 	at org.infernus.idea.checkstyle.CheckstyleProjectService.(CheckstyleProjectService.java:42) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) 	at org.picocontainer.defaults.InstantiatingComponentAdapter.newInstance(InstantiatingComponentAdapter.java:193) 	at org.picocontainer.defaults.ConstructorInjectionComponentAdapter$1.run(ConstructorInjectionComponentAdapter.java:220) 	at org.picocontainer.defaults.ThreadLocalCyclicDependencyGuard.observe(ThreadLocalCyclicDependencyGuard.java:53) 	at org.picocontainer.defaults.ConstructorInjectionComponentAdapter.getComponentInstance(ConstructorInjectionComponentAdapter.java:248) 	at com.intellij.util.pico.CachingConstructorInjectionComponentAdapter.getComponentInstance(CachingConstructorInjectionComponentAdapter.java:58) 	at com.intellij.openapi.components.impl.ServiceManagerImpl$MyComponentAdapter.getComponentInstance(ServiceManagerImpl.java:232) 	at com.intellij.util.pico.DefaultPicoContainer.getLocalInstance(DefaultPicoContainer.java:246) 	at com.intellij.util.pico.DefaultPicoContainer.getComponentInstance(DefaultPicoContainer.java:212) 	at com.intellij.openapi.components.ServiceManager.doGetService(ServiceManager.java:46) 	at com.intellij.openapi.components.ServiceManager.getService(ServiceManager.java:41) 	at org.infernus.idea.checkstyle.CheckstyleProjectService.getInstance(CheckstyleProjectService.java:117) 	at org.infernus.idea.checkstyle.ui.CheckStyleConfigPanel.buildCheckstyleVersionComboBox(CheckStyleConfigPanel.java:75) 	at org.infernus.idea.checkstyle.ui.CheckStyleConfigPanel.(CheckStyleConfigPanel.java:68) 	at org.infernus.idea.checkstyle.CheckStyleConfigurable.(CheckStyleConfigurable.java:37) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) 	at org.picocontainer.defaults.InstantiatingComponentAdapter.newInstance(InstantiatingComponentAdapter.java:193) 	at org.picocontainer.defaults.ConstructorInjectionComponentAdapter$1.run(ConstructorInjectionComponentAdapter.java:220) 	at org.picocontainer.defaults.ThreadLocalCyclicDependencyGuard.observe(ThreadLocalCyclicDependencyGuard.java:53) 	at org.picocontainer.defaults.ConstructorInjectionComponentAdapter.getComponentInstance(ConstructorInjectionComponentAdapter.java:248) 	at com.intellij.util.pico.CachingConstructorInjectionComponentAdapter.getComponentInstance(CachingConstructorInjectionComponentAdapter.java:58) 	at com.intellij.openapi.extensions.AbstractExtensionPointBean.instantiate(AbstractExtensionPointBean.java:75) 	at com.intellij.openapi.options.ConfigurableEP$ClassProducer.createElement(ConfigurableEP.java:347) 	at com.intellij.openapi.options.ConfigurableEP.createConfigurable(ConfigurableEP.java:273) 	at com.intellij.openapi.options.ex.ConfigurableWrapper.createConfigurable(ConfigurableWrapper.java:54) 	at com.intellij.openapi.options.ex.ConfigurableWrapper.wrapConfigurable(ConfigurableWrapper.java:49) 	at com.intellij.openapi.options.ex.ConfigurableExtensionPointUtil.getConfigurables(ConfigurableExtensionPointUtil.java:361) 	at com.intellij.openapi.options.ex.ConfigurableExtensionPointUtil.getConfigurableGroup(ConfigurableExtensionPointUtil.java:134) 	at com.intellij.ide.actions.ShowSettingsUtilImpl.getConfigurableGroups(ShowSettingsUtilImpl.java:65) 	at com.intellij.ide.actions.ShowSettingsAction.actionPerformed(ShowSettingsAction.java:62) 	at com.intellij.openapi.actionSystem.ex.ActionUtil$1.run(ActionUtil.java:197) 	at com.intellij.openapi.application.TransactionGuardImpl.runSyncTransaction(TransactionGuardImpl.java:88) 	at com.intellij.openapi.application.TransactionGuardImpl.submitTransactionAndWait(TransactionGuardImpl.java:156) 	at com.intellij.openapi.actionSystem.ex.ActionUtil.performActionDumbAware(ActionUtil.java:211) 	at com.intellij.openapi.actionSystem.impl.ActionMenuItem$ActionTransmitter.lambda$actionPerformed$2(ActionMenuItem.java:304) 	at com.intellij.openapi.wm.impl.FocusManagerImpl.runOnOwnContext(FocusManagerImpl.java:905) 	at com.intellij.openapi.wm.impl.IdeFocusManagerImpl.runOnOwnContext(IdeFocusManagerImpl.java:124) 	at com.intellij.openapi.actionSystem.impl.ActionMenuItem$ActionTransmitter.actionPerformed(ActionMenuItem.java:284) 	at javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:2022) 	at com.intellij.openapi.actionSystem.impl.ActionMenuItem.lambda$fireActionPerformed$0(ActionMenuItem.java:112) 	at com.intellij.openapi.application.TransactionGuardImpl.runSyncTransaction(TransactionGuardImpl.java:88) 	at com.intellij.openapi.application.TransactionGuardImpl.access$300(TransactionGuardImpl.java:40) 	at com.intellij.openapi.application.TransactionGuardImpl$2.run(TransactionGuardImpl.java:113) 	at com.intellij.openapi.application.TransactionGuardImpl.submitTransaction(TransactionGuardImpl.java:123) 	at com.intellij.openapi.application.TransactionGuard.submitTransaction(TransactionGuard.java:109) 	at com.intellij.openapi.actionSystem.impl.ActionMenuItem.fireActionPerformed(ActionMenuItem.java:112) 	at com.intellij.ui.plaf.beg.BegMenuItemUI.doClick(BegMenuItemUI.java:513) 	at com.intellij.ui.plaf.beg.BegMenuItemUI.access$300(BegMenuItemUI.java:45) 	at com.intellij.ui.plaf.beg.BegMenuItemUI$MyMouseInputHandler.mouseReleased(BegMenuItemUI.java:533) 	at java.awt.Component.processMouseEvent(Component.java:6533) 	at javax.swing.JComponent.processMouseEvent(JComponent.java:3324) 	at java.awt.Component.processEvent(Component.java:6298) 	at java.awt.Container.processEvent(Container.java:2236) 	at java.awt.Component.dispatchEventImpl(Component.java:4889) 	at java.awt.Container.dispatchEventImpl(Container.java:2294) 	at java.awt.Component.dispatchEvent(Component.java:4711) 	at java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4888) 	at java.awt.LightweightDispatcher.processMouseEvent(Container.java:4525) 	at java.awt.LightweightDispatcher.dispatchEvent(Container.java:4466) 	at java.awt.Container.dispatchEventImpl(Container.java:2280) 	at java.awt.Window.dispatchEventImpl(Window.java:2746) 	at java.awt.Component.dispatchEvent(Component.java:4711) 	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:758) 	at java.awt.EventQueue.access$500(EventQueue.java:97) 	at java.awt.EventQueue$3.run(EventQueue.java:709) 	at java.awt.EventQueue$3.run(EventQueue.java:703) 	at java.security.AccessController.doPrivileged(Native Method) 	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:80) 	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:90) 	at java.awt.EventQueue$4.run(EventQueue.java:731) 	at java.awt.EventQueue$4.run(EventQueue.java:729) 	at java.security.AccessController.doPrivileged(Native Method) 	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:80) 	at java.awt.EventQueue.dispatchEvent(EventQueue.java:728) 	at com.intellij.ide.IdeEventQueue.defaultDispatchEvent(IdeEventQueue.java:795) 	at com.intellij.ide.IdeEventQueue._dispatchEvent(IdeEventQueue.java:627) 	at com.intellij.ide.IdeEventQueue.dispatchEvent(IdeEventQueue.java:387) 	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201) 	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116) 	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105) 	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101) 	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93) 	at java.awt.EventDispatchThread.run(EventDispatchThread.java:82) ````","closed","","chuangmilinbing","2017-09-22T10:00:53Z","2017-09-22T11:41:30Z"
"","5567","EmptyBlockCheck: produce violation on empty anonymous class","```` $ cat TestClass.java public class TestClass {     void method() {         OtherClass dummy = new OtherClass() {         };     }      public static class OtherClass {} }  $ cat TestConfig.xml                                   $ java -jar checkstyle-8.8-all.jar -c TestConfig.xml TestClass.java Starting audit... Audit done. ````  I would like to see a violation on line 3 or 4. Another user likes to write code similar to this when the braces of the anonymous class are not needed. Nothing is defined inside the blocks and will compile fine without them.","open","","rnveach","2018-02-28T18:40:50Z","2018-03-11T21:35:01Z"
"","5744","Expand Javadoc violation messages to include named context","```` $ cat TestClass.java public class TestClass {     int field;      void method() {     } }  $ cat TestConfig.xml                          $ java -jar checkstyle-8.9-all.jar -c TestConfig.xml TestClass.java Starting audit... [ERROR] TestClass.java:1: Missing a Javadoc comment. [JavadocType] [ERROR] TestClass.java:2:5: Missing a Javadoc comment. [JavadocVariable] [ERROR] TestClass.java:4:5: Missing a Javadoc comment. [JavadocMethod] Audit done. Checkstyle ends with 3 errors. ````  I would like to see these javadoc violations include the named context of the violation so I can add message suppressions for each specific name. By name context, I mean `TestClass`, `field`, and `method` in this scenario. So I would like to see violations like: ```` [ERROR] TestClass.java:1: Missing a Javadoc comment for 'TestClass'. [JavadocType] [ERROR] TestClass.java:2:5: Missing a Javadoc comment for 'field'. [JavadocVariable] [ERROR] TestClass.java:4:5: Missing a Javadoc comment for 'method'. [JavadocMethod] ````","open","javadoc,","rnveach","2018-04-19T20:07:18Z","2018-04-19T23:23:58Z"
"","5353","RequireThisCheck: false positive in anonymous class with same name as field in top level class","```` $ cat TestClass.java public class TestClass {     int f = 0;      void method() {         new AbstractClass() {             public void methodInner() {                f = 1; // expecting no violation             }         };     }      public static abstract class AbstractClass {         int f;          public abstract void methodInner();     } }  $ cat TestConfig.xml                          $ java -jar checkstyle-8.8-all.jar -c TestConfig.xml TestClass.java Starting audit... [ERROR] TestClass.java:7:16: Reference to instance variable 'f' needs ""TestClass.this."". [RequireThis] Audit done. Checkstyle ends with 1 errors. ````  I am not expecting a violation on line 7. It is correct that there is a field on line 2 that would need the `this` to access, however, since it is not `final` it cannot be referenced, no matter what, from inside the anonymous class. This check does not verify the anonymous class boundary and requiring the field to be `final`. If you remove the field on line 2, the violation goes away.  Even though a violation here would be correct requiring just `this`, it is not possible to for this check to see class hierarchy in the same file to know this and it wouldn't be able to be extended to multiple files yet. So it is better it produces no violation for now.","open","approved,","rnveach","2017-12-13T14:49:01Z","2021-04-26T16:06:58Z"
"","5819","Can't generate xpath suppression for comment","```` $ cat TestClass.java package mypack;  /**  * Some javadoc  */ public final class InputCheckstyleAntTaskError {}   $ java -jar checkstyle-8.10-all.jar -s 3:1 TestClass.java ````  AST: ```` PACKAGE_DEF -> package [1:0] |--ANNOTATIONS -> ANNOTATIONS [1:8] |--IDENT -> mypack [1:8] `--SEMI -> ; [1:14] CLASS_DEF -> CLASS_DEF [6:0] |--MODIFIERS -> MODIFIERS [6:0] |  |--BLOCK_COMMENT_BEGIN -> /* [3:0] |  |  |--COMMENT_CONTENT -> *\n * Some javadoc\n  [3:2] |  |  |  `--JAVADOC -> JAVADOC [3:3] |  |  |      |--NEWLINE -> \n [3:3] |  |  |      |--LEADING_ASTERISK ->  * [4:0] |  |  |      |--TEXT ->  Some javadoc [4:2] |  |  |      |--NEWLINE -> \n [4:15] |  |  |      |--TEXT ->  [5:0] |  |  |      `--EOF ->  [5:1] |  |  `--BLOCK_COMMENT_END -> */ [5:1] |  |--LITERAL_PUBLIC -> public [6:0] |  `--FINAL -> final [6:7] |--LITERAL_CLASS -> class [6:13] |--IDENT -> InputCheckstyleAntTaskError [6:19] `--OBJBLOCK -> OBJBLOCK [6:47]     |--LCURLY -> { [6:47]     `--RCURLY -> } [6:48] ````  We still need to be able to create xpaths for the start of the comment, right? http://checkstyle.sourceforge.net/config_filters.html#SuppressionXpathFilter doesn't say anything about comments. Can't users create their own custom violation suppression comments near violation using xpath, similar to `SuppressionCommentFilter`?","closed","xpath,","rnveach","2018-05-19T00:28:33Z","2021-07-11T17:38:35Z"
"","5412","ParameterNameCheck: doesn't validate lambda parameters","```` $ cat TestClass.java import java.util.Arrays; import com.puppycrawl.tools.checkstyle.checks.naming.AccessModifier;  public class TestClass {     private boolean matchAccessModifiers1(final AccessModifier accessModifier) {         return Arrays.stream(accessModifiers).anyMatch(el -> el == accessModifier);     }      private void methodParameter(AccessModifier  el) {     } }  $ cat TestConfig.xml                                               $ java -jar checkstyle-8.5-all.jar -c TestConfig.xml TestClass.java Starting audit... [ERROR] TestClass.java:9:50: Name 'el' must match pattern '^(id)|([a-z][a-z0-9][a-zA-Z0-9]+)$'. [ParameterName] Audit done. Checkstyle ends with 1 errors. ````  I am expecting parameter names to be treated the same, if they are a method parameter or a lambda paramater. There is no violation on line 6 and I am expecting one since there is one on line 9.","closed","miscellaneous,","rnveach","2018-01-01T02:03:34Z","2018-07-02T04:53:42Z"
"","5821","Can't generate xpath for package's dot","```` $ cat TestClass.java //0 package//1 com//2 .//3 puppycrawl//4 .//5 tools//6 .//7 checkstyle//8 .//9 astprinter//10 //11 //12 ;//13  $ java -jar checkstyle-8.10-all.jar -s 8:1 TestClass.java ````  Detected: The CLI did not generate any xpath for me, so there is literally no xpath I can give you. The CLI should have generated something for me, but it did not.   AST: ```` $ java -jar checkstyle-8.10-all.jar -J TestClass.java SINGLE_LINE_COMMENT -> // [1:0] `--COMMENT_CONTENT -> 0\n [1:2] PACKAGE_DEF -> package [2:0] |--ANNOTATIONS -> ANNOTATIONS [10:0] |--SINGLE_LINE_COMMENT -> // [9:10] |  `--COMMENT_CONTENT -> 8\n [9:12] |--DOT -> . [10:0] |  |--SINGLE_LINE_COMMENT -> // [7:5] |  |  `--COMMENT_CONTENT -> 6\n [7:7] |  |--DOT -> . [8:0] |  |  |--SINGLE_LINE_COMMENT -> // [5:10] |  |  |  `--COMMENT_CONTENT -> 4\n [5:12] |  |  |--DOT -> . [6:0] |  |  |  |--SINGLE_LINE_COMMENT -> // [3:3] |  |  |  |  `--COMMENT_CONTENT -> 2\n [3:5] |  |  |  |--DOT -> . [4:0] |  |  |  |  |--SINGLE_LINE_COMMENT -> // [2:7] |  |  |  |  |  `--COMMENT_CONTENT -> 1\n [2:9] |  |  |  |  |--IDENT -> com [3:0] |  |  |  |  |--SINGLE_LINE_COMMENT -> // [4:1] |  |  |  |  |  `--COMMENT_CONTENT -> 3\n [4:3] |  |  |  |  `--IDENT -> puppycrawl [5:0] |  |  |  |--SINGLE_LINE_COMMENT -> // [6:1] |  |  |  |  `--COMMENT_CONTENT -> 5\n [6:3] |  |  |  `--IDENT -> tools [7:0] |  |  |--SINGLE_LINE_COMMENT -> // [8:1] |  |  |  `--COMMENT_CONTENT -> 7\n [8:3] |  |  `--IDENT -> checkstyle [9:0] |  |--SINGLE_LINE_COMMENT -> // [10:1] |  |  `--COMMENT_CONTENT -> 9\n [10:3] |  `--IDENT -> astprinter [11:0] |--SINGLE_LINE_COMMENT -> // [11:10] |  `--COMMENT_CONTENT -> 10\n [11:12] |--SINGLE_LINE_COMMENT -> // [12:0] |  `--COMMENT_CONTENT -> 11\n [12:2] |--SINGLE_LINE_COMMENT -> // [13:0] |  `--COMMENT_CONTENT -> 12\n [13:2] |--SEMI -> ; [14:0] `--SINGLE_LINE_COMMENT -> // [14:1]     `--COMMENT_CONTENT -> 13 [14:3] ````  Suppressions were generated and worked for 2:1 and 10:1. I'm not sure what makes 8:1 special since 10:1 has the same token type.  Issue also happens for the DOT in `this. getXAs();`  -------","closed","xpath,","rnveach","2018-05-19T01:12:33Z","2020-08-23T15:36:47Z"
"","5769","Javadoc for package-info file is not validated","```` $ cat package-info.java /** */ @javax.xml.bind.annotation.XmlSchema(namespace = ""http://www.niku.com/xog/Query"", elementFormDefault = javax.xml.bind.annotation.XmlNsForm.QUALIFIED) package com.mycompany.service.objects;  $ cat TestConfig.xml                        $ java -jar checkstyle-8.10-all.jar -c TestConfig.xml package-info.java Starting audit... Audit done. ````  `JavadocUtils.isCorrectJavadocPosition` returns false for this javadoc. Stackoverflow and the JLS says this is a Javadoc and can be placed inside the HTML file generated for the Javadoc.  https://stackoverflow.com/questions/624422/how-do-i-document-packages-in-java https://docs.oracle.com/javase/specs/jls/se7/html/jls-7.html#jls-7.4.1  > It is recommended that package-info.java, if it is present, take the place of package.html for javadoc and other similar documentation generation systems. If this file is present, the documentation generation tool should look for the package documentation comment immediately preceding the (possibly annotated) package declaration in package-info.java. In this way, package-info.java becomes the sole repository for package-level annotations and documentation. If, in future, it becomes desirable to add any other package-level information, this file should prove a convenient home for this information.   Example of package-info.java with javadoc https://docs.oracle.com/javase/8/docs/technotes/tools/windows/javadoc.html#JSWOR639","closed","javadoc,","rnveach","2018-05-02T23:35:16Z","2019-03-06T01:37:20Z"
"","5279","ImportOrder: allow static imports be separated by local groups when they are at the top/bottom by new property separatedStaticGroups","``` ➜  cat config.xml                                                                                       ```  ``` cat InputImportOrderGapBetweenStaticGroups.java import static java.lang.Math.abs; import static java.lang.Math.cos; // Attention: gap below  import static javax.xml.transform.TransformerFactory.newInstance;  public class InputImportOrderGapBetweenStaticGroups { }  bbg@king-Lenovo:~/checkstyletest$ java -Duser.language=en -Duser.country=US -jar checkstyle-8.4-all.jar -c test.xml InputImportOrderGapBetweenStaticGroups.java Starting audit... [ERROR] /home/bbg/checkstyletest/InputImportOrderGapBetweenStaticGroups.java:4: Extra separation in import group before 'javax.xml.transform.TransformerFactory.newInstance' [ImportOrder] Audit done. Checkstyle ends with 1 errors. ``` Checkstyle do exactly what is required.  But the feature of separating static imports when they are at top/bottom seems is required from conversation of [Issue #5176](https://github.com/checkstyle/checkstyle/issues/5176#issuecomment-340625283). So, we can add a option named `separatedStaticGroups` which means whether static imports grouped by top or bottom option are separated by local groups. Example1: ```                                           ``` Then CheckStyle's behavior is same as before checkstyle8.3, all static imports as one group.  Example2: ```                                           ``` Static imports at top should be seaparated by local groups.And static imports should be sorted in the groups alphabetically.  Example3: ```                                           ``` When you specify package groupings inside ImportOrder, that same ordering is applied to the single group of static imports.  I think it is keeping with original design of sortStaticImportsAlphabetically at [Issue #12](https://github.com/checkstyle/checkstyle/issues/12) `To clarify, when static imports are grouped into a single block of text without any empty lines between them, I want them to be sorted alphabetically rather than in the package order.` but also satisfy requirement of sorting/separate static imports by local groups.  UPDATE: separatedStaticImports property was renamed to separatedStaticGroups.","closed","new feature,","djydewang","2017-11-20T14:22:56Z","2018-12-25T18:29:24Z"
"","5022","shippable: unstable execution of pitest for pitest-checkstyle-common profile","``` Survived items:target/pit-reports/201708290005/com.puppycrawl.tools.checkstyle/XMLLogger.java.html: target/pit-reports/201708290005/com.puppycrawl.tools.checkstyle/XMLLogger.java.html: fileMessages.clear(); Survived items found in reports, build will be failed ``` https://app.shippable.com/github/checkstyle/checkstyle/runs/4762/19/console Please also rebase all your further PRs to avoid such issue again.  Update: log from build , looks like unrelated to current fix ``` 12:07:08 AM PIT >> INFO : Created  19 mutation test units 12:08:41 AM PIT >> WARNING : Minion exited abnormally due to TIMED_OUT 12:11:31 AM PIT >> WARNING : Minion exited abnormally due to TIMED_OUT 12:11:31 AM PIT >> WARNING : Minion exited abnormally due to TIMED_OUT 12:11:31 AM PIT >> WARNING : Minion exited abnormally due to TIMED_OUT 12:11:35 AM PIT >> WARNING : Minion exited abnormally due to TIMED_OUT 12:15:36 AM PIT >> WARNING : Minion exited abnormally due to TIMED_OUT 12:16:33 AM PIT >> WARNING : Minion exited abnormally due to TIMED_OUT stderr  : Java HotSpot(TM) 64-Bit Server VM warning: INFO: os::commit_memory(0x00000000de900000, 165150720, 0) failed; error='Cannot allocate memory' (errno=12) stderr  : Java HotSpot(TM) 64-Bit Server VM warning: INFO: os::commit_memory(0x00000000f3180000, 58720256, 0) failed; error='Cannot allocate memory' (errno=12) 12:17:27 AM PIT >> WARNING : Error while watching child process java.util.concurrent.ExecutionException: org.pitest.util.PitError: null  Please copy and paste the information and the complete stacktrace below when reporting an issue VM : Java HotSpot(TM) 64-Bit Server VM Vendor : Oracle Corporation Version : 25.72-b15 Uptime : 752776 Input ->   1 : -Dclassworlds.conf=/usr/local/apache-maven-3.2.5/bin/m2.conf  2 : -Dmaven.home=/usr/local/apache-maven-3.2.5 BootClassPathSupported : true  	at java.util.concurrent.FutureTask.report(FutureTask.java:122) 	at java.util.concurrent.FutureTask.get(FutureTask.java:192) 	at org.pitest.util.CommunicationThread.waitToFinish(CommunicationThread.java:60) 	at org.pitest.mutationtest.execute.MutationTestProcess.waitToDie(MutationTestProcess.java:47) 	at org.pitest.mutationtest.build.MutationTestUnit.waitForMinionToDie(MutationTestUnit.java:92) 	at org.pitest.mutationtest.build.MutationTestUnit.runTestInSeperateProcessForMutationRange(MutationTestUnit.java:85) 	at org.pitest.mutationtest.build.MutationTestUnit.runTestsInSeperateProcess(MutationTestUnit.java:68) 	at org.pitest.mutationtest.build.MutationTestUnit.call(MutationTestUnit.java:55) 	at org.pitest.mutationtest.build.MutationTestUnit.call(MutationTestUnit.java:30) 	at java.util.concurrent.FutureTask.run(FutureTask.java:266) 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) 	at java.lang.Thread.run(Thread.java:745) Caused by: org.pitest.util.PitError: null  Please copy and paste the information and the complete stacktrace below when reporting an issue VM : Java HotSpot(TM) 64-Bit Server VM Vendor : Oracle Corporation Version : 25.72-b15 Uptime : 752776 Input ->   1 : -Dclassworlds.conf=/usr/local/apache-maven-3.2.5/bin/m2.conf  2 : -Dmaven.home=/usr/local/apache-maven-3.2.5 BootClassPathSupported : true  	at org.pitest.util.Unchecked.translateCheckedException(Unchecked.java:20) 	at org.pitest.util.SafeDataInputStream.readByte(SafeDataInputStream.java:65) 	at org.pitest.util.SocketReadingCallable.receiveResults(SocketReadingCallable.java:65) 	at org.pitest.util.SocketReadingCallable.call(SocketReadingCallable.java:37) 	at org.pitest.util.SocketReadingCallable.call(SocketReadingCallable.java:12) 	at java.util.concurrent.FutureTask.run(FutureTask.java:266) 	... 1 more Caused by: java.io.EOFException 	at java.io.DataInputStream.readByte(DataInputStream.java:267) 	at org.pitest.util.SafeDataInputStream.readByte(SafeDataInputStream.java:63) 	... 5 more 12:17:27 AM PIT >> WARNING : Error while watching child process java.util.concurrent.ExecutionException: org.pitest.util.PitError: null  Please copy and paste the information and the complete stacktrace below when reporting an issue VM : Java HotSpot(TM) 64-Bit Server VM Vendor : Oracle Corporation Version : 25.72-b15 Uptime : 752776 Input ->   1 : -Dclassworlds.conf=/usr/local/apache-maven-3.2.5/bin/m2.conf  2 : -Dmaven.home=/usr/local/apache-maven-3.2.5 BootClassPathSupported : true  	at java.util.concurrent.FutureTask.report(FutureTask.java:122) 	at java.util.concurrent.FutureTask.get(FutureTask.java:192) 	at org.pitest.util.CommunicationThread.waitToFinish(CommunicationThread.java:60) 	at org.pitest.mutationtest.execute.MutationTestProcess.waitToDie(MutationTestProcess.java:47) 	at org.pitest.mutationtest.build.MutationTestUnit.waitForMinionToDie(MutationTestUnit.java:92) 	at org.pitest.mutationtest.build.MutationTestUnit.runTestInSeperateProcessForMutationRange(MutationTestUnit.java:85) 	at org.pitest.mutationtest.build.MutationTestUnit.runTestsInSeperateProcess(MutationTestUnit.java:68) 	at org.pitest.mutationtest.build.MutationTestUnit.call(MutationTestUnit.java:55) 	at org.pitest.mutationtest.build.MutationTestUnit.call(MutationTestUnit.java:30) 	at java.util.concurrent.FutureTask.run(FutureTask.java:266) 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) 	at java.lang.Thread.run(Thread.java:745) Caused by: org.pitest.util.PitError: null  Please copy and paste the information and the complete stacktrace below when reporting an issue VM : Java HotSpot(TM) 64-Bit Server VM Vendor : Oracle Corporation Version : 25.72-b15 Uptime : 752776 Input ->   1 : -Dclassworlds.conf=/usr/local/apache-maven-3.2.5/bin/m2.conf  2 : -Dmaven.home=/usr/local/apache-maven-3.2.5 BootClassPathSupported : true  	at org.pitest.util.Unchecked.translateCheckedException(Unchecked.java:20) 	at org.pitest.util.SafeDataInputStream.readByte(SafeDataInputStream.java:65) 	at org.pitest.util.SocketReadingCallable.receiveResults(SocketReadingCallable.java:65) 	at org.pitest.util.SocketReadingCallable.call(SocketReadingCallable.java:37) 	at org.pitest.util.SocketReadingCallable.call(SocketReadingCallable.java:12) 	at java.util.concurrent.FutureTask.run(FutureTask.java:266) 	... 1 more Caused by: java.io.EOFException 	at java.io.DataInputStream.readByte(DataInputStream.java:267) 	at org.pitest.util.SafeDataInputStream.readByte(SafeDataInputStream.java:63) 	... 5 more 12:17:27 AM PIT >> WARNING : Minion exited abnormally due to RUN_ERROR 12:17:27 AM PIT >> WARNING : Minion exited abnormally due to RUN_ERROR 12:17:55 AM PIT >> WARNING : Minion exited abnormally due to TIMED_OUT 12:18:13 AM PIT >> WARNING : Minion exited abnormally due to MEMORY_ERROR 12:19:35 AM PIT >> WARNING : Minion exited abnormally due to MEMORY_ERROR 12:21:01 AM PIT >> WARNING : Minion exited abnormally due to MEMORY_ERROR 12:21:02 AM PIT >> INFO : Completed in 928 seconds ```  I can not reproduce this crash on local, pitest validation works fine. shippable is relaunched.","closed","miscellaneous,","romani","2017-08-29T18:49:08Z","2017-08-30T18:22:08Z"
"","5370","gradle android failed on Unable to create Root Module: classpath {null} from checkstyle 8.2","``` FAILURE: Build failed with an exception.  * What went wrong: Execution failed for task ':mobile:checkstyle'. > Unable to create Root Module: config {D:\Projects\BudgetBakers\wallet-android\config\quality\checkstyle\checkstyle-config.xml}, classpath {null}.  * Try: Run with --info or --debug option to get more log output. Run with --scan to get full insights.  * Exception is: org.gradle.api.tasks.TaskExecutionException: Execution failed for task ':mobile:checkstyle'.         at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:100)         at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:70)         at org.gradle.api.internal.tasks.execution.OutputDirectoryCreatingTaskExecuter.execute(OutputDirectoryCreatingTaskExecuter.java:51)         at org.gradle.api.internal.tasks.execution.SkipUpToDateTaskExecuter.execute(SkipUpToDateTaskExecuter.java:62)         at org.gradle.api.internal.tasks.execution.ResolveTaskOutputCachingStateExecuter.execute(ResolveTaskOutputCachingStateExecuter.java:54)         at org.gradle.api.internal.tasks.execution.ResolveBuildCacheKeyExecuter.execute(ResolveBuildCacheKeyExecuter.java:61)         at org.gradle.api.internal.tasks.execution.ValidatingTaskExecuter.execute(ValidatingTaskExecuter.java:60)         at org.gradle.api.internal.tasks.execution.SkipEmptySourceFilesTaskExecuter.execute(SkipEmptySourceFilesTaskExecuter.java:97)         at org.gradle.api.internal.tasks.execution.CleanupStaleOutputsExecuter.execute(CleanupStaleOutputsExecuter.java:87)         at org.gradle.api.internal.tasks.execution.ResolveTaskArtifactStateTaskExecuter.execute(ResolveTaskArtifactStateTaskExecuter.java:52)         at org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:52)         at org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:54)         at org.gradle.api.internal.tasks.execution.ExecuteAtMostOnceTaskExecuter.execute(ExecuteAtMostOnceTaskExecuter.java:43)         at org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.execute(CatchExceptionTaskExecuter.java:34)         at org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker$1.run(DefaultTaskGraphExecuter.java:248)         at org.gradle.internal.progress.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:336)         at org.gradle.internal.progress.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:328)         at org.gradle.internal.progress.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:199)         at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:110)         at org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:241)         at org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:230)         at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker.processTask(DefaultTaskPlanExecutor.java:123)         at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker.access$200(DefaultTaskPlanExecutor.java:79)         at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker$1.execute(DefaultTaskPlanExecutor.java:104)         at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker$1.execute(DefaultTaskPlanExecutor.java:98)         at org.gradle.execution.taskgraph.DefaultTaskExecutionPlan.execute(DefaultTaskExecutionPlan.java:626)         at org.gradle.execution.taskgraph.DefaultTaskExecutionPlan.executeWithTask(DefaultTaskExecutionPlan.java:581)         at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker.run(DefaultTaskPlanExecutor.java:98)         at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)         at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)         at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) Caused by: : Unable to create Root Module: config {D:\Projects\BudgetBakers\wallet-android\config\quality\checkstyle\checkstyle-config.xml}, classpath {null}.         at com.puppycrawl.tools.checkstyle.ant.CheckstyleAntTask.createRootModule(CheckstyleAntTask.java:429)         at com.puppycrawl.tools.checkstyle.ant.CheckstyleAntTask.realExecute(CheckstyleAntTask.java:312)         at com.puppycrawl.tools.checkstyle.ant.CheckstyleAntTask.execute(CheckstyleAntTask.java:295)         at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:293)         at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)         at org.gradle.api.internal.project.ant.BasicAntBuilder.nodeCompleted(BasicAntBuilder.java:78)         at org.gradle.internal.metaobject.BeanDynamicObject$MetaClassAdapter.invokeMethod(BeanDynamicObject.java:479)         at org.gradle.internal.metaobject.BeanDynamicObject.tryInvokeMethod(BeanDynamicObject.java:191)         at org.gradle.internal.metaobject.AbstractDynamicObject.invokeMethod(AbstractDynamicObject.java:160)         at org.gradle.api.internal.project.antbuilder.AntBuilderDelegate.nodeCompleted(AntBuilderDelegate.java:118)         at org.gradle.api.plugins.quality.internal.CheckstyleInvoker$_invoke_closure1.doCall(CheckstyleInvoker.groovy:58)         at org.gradle.api.internal.ClosureBackedAction.execute(ClosureBackedAction.java:71)         at org.gradle.api.internal.ClosureBackedAction.execute(ClosureBackedAction.java:53)         at org.gradle.api.internal.project.antbuilder.DefaultIsolatedAntBuilder$2.execute(DefaultIsolatedAntBuilder.java:152)         at org.gradle.api.internal.project.antbuilder.DefaultIsolatedAntBuilder$2.execute(DefaultIsolatedAntBuilder.java:134)         at org.gradle.api.internal.project.antbuilder.ClassPathToClassLoaderCache.withCachedClassLoader(ClassPathToClassLoaderCache.java:134)         at org.gradle.api.internal.project.antbuilder.DefaultIsolatedAntBuilder.execute(DefaultIsolatedAntBuilder.java:128)         at org.gradle.api.internal.project.IsolatedAntBuilder$execute$0.call(Unknown Source)         at org.gradle.api.plugins.quality.internal.CheckstyleInvoker.invoke(CheckstyleInvoker.groovy:51)         at org.gradle.api.plugins.quality.Checkstyle.run(Checkstyle.java:153)         at org.gradle.internal.reflect.JavaMethod.invoke(JavaMethod.java:73)         at org.gradle.api.internal.project.taskfactory.StandardTaskAction.doExecute(StandardTaskAction.java:46)         at org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:39)         at org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:26)         at org.gradle.api.internal.AbstractTask$TaskActionWrapper.execute(AbstractTask.java:780)         at org.gradle.api.internal.AbstractTask$TaskActionWrapper.execute(AbstractTask.java:747)         at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter$1.run(ExecuteActionsTaskExecuter.java:121)         at org.gradle.internal.progress.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:336)         at org.gradle.internal.progress.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:328)         at org.gradle.internal.progress.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:199)         at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:110)         at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeAction(ExecuteActionsTaskExecuter.java:110)         at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:92)         ... 30 more Caused by: com.puppycrawl.tools.checkstyle.api.CheckstyleException: cannot initialize module TreeWalker - Property 'maxLineLength' in module LeftCurly does not exist, please check the documentation         at com.puppycrawl.tools.checkstyle.Checker.setupChild(Checker.java:464)         at com.puppycrawl.tools.checkstyle.api.AutomaticBean.configure(AutomaticBean.java:186)         at com.puppycrawl.tools.checkstyle.ant.CheckstyleAntTask.createRootModule(CheckstyleAntTask.java:426)         ... 62 more Caused by: com.puppycrawl.tools.checkstyle.api.CheckstyleException: Property 'maxLineLength' in module LeftCurly does not exist, please check the documentation         at com.puppycrawl.tools.checkstyle.api.AutomaticBean.tryCopyProperty(AutomaticBean.java:213)         at com.puppycrawl.tools.checkstyle.api.AutomaticBean.configure(AutomaticBean.java:179)         at com.puppycrawl.tools.checkstyle.TreeWalker.setupChild(TreeWalker.java:170)         at com.puppycrawl.tools.checkstyle.api.AutomaticBean.configure(AutomaticBean.java:186)         at com.puppycrawl.tools.checkstyle.Checker.setupChild(Checker.java:459)         ... 64 more   * Get more help at https://help.gradle.org  BUILD FAILED in 6s 249 actionable tasks: 5 executed, 244 up-to-date ```  `/var/tmp $ cat config.xml`:  ``````  ---------------  Until checkstyle version 8.1 everything was OK, but after update to any version higher than 8.1 (teste 8.2, 8.3, 8.4 and 8.5) build failed on: `Unable to create Root Module: config {D:\Projects\BudgetBakers\wallet-android\config\quality\checkstyle\checkstyle-config.xml}, classpath {null}.`   ``` apply plugin: 'checkstyle'  def CHECKSTYLE_VERSION = ""8.5"" def DEPENDENCY_BUILD_NAME = ""compileDebugSources""  android {     lintOptions {         // http://stackoverflow.com/a/31128939/4024146         checkReleaseBuilds true         xmlReport true         // file to write report to (if not specified, defaults to lint-results.xml)         xmlOutput file(""$reportsDir/lint/lint-results.xml"")         // if true, generate an HTML report (with issue explanations, sourcecode, etc)         htmlReport true         // optional path to report (default will be lint-results.html in the builddir)         htmlOutput file(""$reportsDir/lint/lint-results.html"")         abortOnError false  // TODO: set true when we will on 0 errors     }      testBuildType ""debug"" }  task checkstyle(type: Checkstyle, dependsOn: [""$DEPENDENCY_BUILD_NAME""]) {     group 'Verification'     description 'Runs code style checks'     configFile file(""$qualityConfigDir/checkstyle/checkstyle-config.xml"")     source 'src'     include '**/*.java'      reports {         xml.enabled = true         html.enabled = true         xml {             destination new File(""$reportsDir/checkstyle/checkstyle.xml"")         }         html {             destination new File(""$reportsDir/checkstyle/checkstyle.html"")         }     }      classpath = files() } ```  Gradle:  ``` task wrapper(type: Wrapper) {     // https://services.gradle.org/distributions/     gradleVersion = '4.4'     distributionUrl = distributionUrl.replace(""bin"", ""all"") } ```","closed","","mtrakal","2017-12-20T14:41:49Z","2017-12-21T10:18:33Z"
"","5352","IdentationCheck: Checkstyle misses checking for identation of some lines","``` bbg@king-Lenovo:~/checkstyletest$ cat identaionConfig.xml                                                                ``` ``` bbg@king-Lenovo:~/checkstyletest$ cat AnnotationIncorrect.java class InputIndentationAnnotationIncorrect {     @MyAnnotation1      @MyAnnotation2   //violation        @MyAnnotation3  //violation      @MyAnnotation4   //violation     @MyAnnotation5               public void testMethod() {    //violation     } } ``` ``` bbg@king-Lenovo:~/checkstyletest$ java -jar checkstyle-8.5-all.jar -c identaionConfig.xml AnnotationIncorrect.java Starting audit... Audit done.  ```","open","indentation,","djydewang","2017-12-13T11:52:02Z","2018-03-18T19:15:25Z"
"","5569","update to pmd 6.1.1 extra warning appeared","``` [INFO] --- maven-pmd-plugin:3.9.0:pmd (pmd) @ checkstyle --- [WARNING] This analysis could be faster, please consider using Incremental Analysis: https://pmd.github.io/pmd-6.1.0/pmd_userdocs_getting_started.html#incremental-analysis [WARNING] The RuleSet rulesets/java/basic.xml has been deprecated and will be removed in PMD 7.0.0 [WARNING] The RuleSet rulesets/java/braces.xml has been deprecated and will be removed in PMD 7.0.0 [WARNING] The RuleSet rulesets/java/clone.xml has been deprecated and will be removed in PMD 7.0.0 [WARNING] The RuleSet rulesets/java/codesize.xml has been deprecated and will be removed in PMD 7.0.0 [WARNING] Failure executing PMD: Cannot set non-existent property 'showClassesComplexity' on Rule CyclomaticComplexity java.lang.IllegalArgumentException: Cannot set non-existent property 'showClassesComplexity' on Rule CyclomaticComplexity     at net.sourceforge.pmd.rules.RuleFactory.setPropertyValues (RuleFactory.java:275)     at net.sourceforge.pmd.rules.RuleFactory.decorateRule (RuleFactory.java:103)     at net.sourceforge.pmd.RuleSetFactory.parseRuleReferenceNode (RuleSetFactory.java:648)     at net.sourceforge.pmd.RuleSetFactory.parseRuleNode (RuleSetFactory.java:462)     at net.sourceforge.pmd.RuleSetFactory.parseRuleSetNode (RuleSetFactory.java:367)     at net.sourceforge.pmd.RuleSetFactory.createRuleSet (RuleSetFactory.java:214)     at net.sourceforge.pmd.RuleSetFactory.createRuleSet (RuleSetFactory.java:209)     at net.sourceforge.pmd.RuleSetFactory.parseRuleSetReferenceNode (RuleSetFactory.java:501)     at net.sourceforge.pmd.RuleSetFactory.parseRuleNode (RuleSetFactory.java:458)     at net.sourceforge.pmd.RuleSetFactory.parseRuleSetNode (RuleSetFactory.java:367)     at net.sourceforge.pmd.RuleSetFactory.createRuleSet (RuleSetFactory.java:214)     at net.sourceforge.pmd.RuleSetFactory.createRuleSet (RuleSetFactory.java:209)     at net.sourceforge.pmd.RuleSetFactory.createRuleSets (RuleSetFactory.java:170)     at net.sourceforge.pmd.RuleSetFactory.createRuleSets (RuleSetFactory.java:154)     at net.sourceforge.pmd.RulesetsFactoryUtils.getRuleSets (RulesetsFactoryUtils.java:37)     at net.sourceforge.pmd.processor.AbstractPMDProcessor.createRuleSets (AbstractPMDProcessor.java:71)     at net.sourceforge.pmd.processor.AbstractPMDProcessor.processFiles (AbstractPMDProcessor.java:104)     at net.sourceforge.pmd.PMD.processFiles (PMD.java:311)     at org.apache.maven.plugins.pmd.PmdReport.processFilesWithPMD (PmdReport.java:503)     at org.apache.maven.plugins.pmd.PmdReport.executePmd (PmdReport.java:432)     at org.apache.maven.plugins.pmd.PmdReport.executePmdWithClassloader (PmdReport.java:331)     at org.apache.maven.plugins.pmd.PmdReport.canGenerateReport (PmdReport.java:305)     at org.apache.maven.reporting.AbstractMavenReport.execute (AbstractMavenReport.java:120)     at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo (DefaultBuildPluginManager.java:134)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:208)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:154)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:146)     at org.apache.maven.lifecycle.internal.MojoExecutor.executeForkedExecutions (MojoExecutor.java:353)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:198)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:154)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:146)     at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)     at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)     at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:51)     at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)     at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:309)     at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:194)     at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:107)     at org.apache.maven.cli.MavenCli.execute (MavenCli.java:955)     at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:290)     at org.apache.maven.cli.MavenCli.main (MavenCli.java:194)     at sun.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)     at sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke (Method.java:498)     at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:289)     at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:229)     at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:415)     at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:356)  ```","closed","approved,","romani","2018-02-28T19:54:34Z","2018-03-20T13:01:17Z"
"","5306","ReturnCount: unclear message when only max property is specified","``` /var/tmp$ javac Test.java   /var/tmp$ cat config.xml                                               /var/tmp$ cat Test.java  public final class Test {    public void foo1() {         if (true) {             return;         } else {             return;         }   }   public boolean foo2() {         if (true) {             return true;         } else {             return false;         }   }  }  /var/tmp$ java -jar checkstyle-8.4-all.jar -c config.xml Test.java  Starting audit... [ERROR] /var/tmp/Test.java:3:3: Return count is 2 (max allowed is 1). [ReturnCount] [ERROR] /var/tmp/Test.java:10:3: Return count is 2 (max allowed is 0). [ReturnCount] Audit done. Checkstyle ends with 2 errors. ```  Not clear why user defined ""1"" but in output there is also ""0"" (`(max allowed is 1)` vs `max allowed is 0`).   All violations are expected but, wording of message should be changed to be ``` [ERROR] /var/tmp/Test.java:3:3: Return count is 2 (max allowed is 1). [ReturnCount] [ERROR] /var/tmp/Test.java:10:3: Return count is 2 (max allowed for void methods is 0). [ReturnCount] ``` Attention: such change should be applied to all languages.  FYI: originally detected at #5305 5305","closed","easy,","romani","2017-11-30T14:16:19Z","2017-12-22T15:14:57Z"
"","5900","IllegalType: rename ""format"" property to ""illegalAbstractClassNameFormat""","``` /var/tmp $ javac TestIllegalType.java  /var/tmp $ cat config.xml                                                /var/tmp $ cat TestIllegalType.java import java.io.File;  public class TestIllegalType {      File file1;      java.io.File file2; }  /var/tmp $ RUN_LOCALE=""-Duser.language=en -Duser.country=US"" /var/tmp $ java $RUN_LOCALE -jar checkstyle-8.5-all.jar -c config.xml TestIllegalTypejava Starting audit... Audit done. ```  ---------------  It should flag both occurrences of the type File (but flags neither).  I believe the error is in the isMatchingClassName() method in https://github.com/checkstyle/checkstyle/blob/master/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java. In particular, the format.matcher() expression should be OR'd with the first few expressions instead of AND'd with the last one.  ```     private boolean isMatchingClassName(String className) {         final String shortName = className.substring(className.lastIndexOf('.') + 1);         return illegalClassNames.contains(className)                 || illegalShortClassNames.contains(shortName)                 || validateAbstractClassNames                     && !legalAbstractClassNames.contains(className)                     && format.matcher(className).find();     }  ```","closed","breaking compatibility,","kevin-wayne","2018-06-10T19:42:17Z","2019-02-22T05:27:25Z"
"","5127","JavadocPackage: NullPointerException when relative path is used to run checkstyle CLI","``` /var/tmp $ javac HelloWorld.java /var/tmp $ cat HelloWorld.java public class HelloWorld {     public static void main(String[] args) {         System.out.println(""Hello, World!"");     } } /var/tmp $ java -Duser.language=en -Duser.country=US -jar checkstyle-8.2-all.jar \ -c /sun_checks.xml HelloWorld.java Starting audit... com.puppycrawl.tools.checkstyle.api.CheckstyleException: Exception was thrown while processing HelloWorld.java         at com.puppycrawl.tools.checkstyle.Checker.processFiles(Checker.java:295)         at com.puppycrawl.tools.checkstyle.Checker.process(Checker.java:213)         at com.puppycrawl.tools.checkstyle.Main.runCheckstyle(Main.java:523)         at com.puppycrawl.tools.checkstyle.Main.runCli(Main.java:437)         at com.puppycrawl.tools.checkstyle.Main.main(Main.java:210) Caused by: java.lang.NullPointerException         at java.util.concurrent.ConcurrentHashMap.putVal(ConcurrentHashMap.java:1011)         at java.util.concurrent.ConcurrentHashMap$KeySetView.add(ConcurrentHashMap.java:4595)         at com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheck.processFiltered(JavadocPackageCheck.java:73)         at com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck.process(AbstractFileSetCheck.java:79)         at com.puppycrawl.tools.checkstyle.Checker.processFile(Checker.java:316)         at com.puppycrawl.tools.checkstyle.Checker.processFiles(Checker.java:286)         ... 4 more Checkstyle ends with 1 errors. ```  ---------------  With checkstyle 8.2 the above using the provided sun_checks.xml throws a NullPointerException . 8.1 does not schow this problem. Same behavior under win and linux.  ``` $ java -Duser.language=en -Duser.country=US -jar checkstyle-8.1-all.jar -c /sun_checks.xml HelloWorld.java Starting audit... [ERROR] /var/tmp/HelloWorld.java:0: File does not end with a newline. [NewlineAtEndOfFile] [ERROR] /var/tmp/HelloWorld.java:0: Missing package-info.java file. [JavadocPackage] [ERROR] /var/tmp/HelloWorld.java:1: Missing a Javadoc comment. [JavadocType] [ERROR] /var/tmp/HelloWorld.java:1:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor] [ERROR] /var/tmp/HelloWorld.java:2:5: Missing a Javadoc comment. [JavadocMethod] [ERROR] /var/tmp/HelloWorld.java:2:29: Parameter args should be final. [FinalParameters] Audit done. Checkstyle ends with 6 errors. ``` Thx, Chris","closed","approved,","chris21k","2017-09-19T07:31:23Z","2017-11-23T18:24:03Z"
"","5013","NUM_FLOAT matches both float and double literals","``` /var/tmp $ javac FloatLiteral.java ```  ``` /var/tmp $ cat FloatLiteral.java public class FloatLiteral {     public static void main(String[] args) {      double x = 128;      double y = 128.0;      double z = 128.0f;      float a = 128;      float b = (float) 128.0;      float c = 128.0f;     } } ```  ``` /var/tmp $ cat config.xml                                                ```  ``` /var/tmp $ java -jar checkstyle-7.8-all.jar -c config.xml FloatLiteral.java Starting audit... [ERROR] FloatLiteral.java:4:17: Using '128.0' is not allowed. [IllegalToken] [ERROR] FloatLiteral.java:5:17: Using '128.0f' is not allowed. [IllegalToken] [ERROR] FloatLiteral.java:7:24: Using '128.0' is not allowed. [IllegalToken] [ERROR] FloatLiteral.java:8:16: Using '128.0f' is not allowed. [IllegalToken] Audit done. Checkstyle ends with 4 errors ``` ———————  Describe what you expect in detail.  ——————— The errors on lines 5 and 8 are expected (for 128.0f). The errors on lines 4 and 7 are unexpected (for 128.0).  Also, if NUM_FLOAT is replaced by NUM_DOUBLE in config.xml, then no errors are reported; I would expect lines 4 and 7 to be flagged, as they contain double literals.","open","","kevin-wayne","2017-08-26T14:29:10Z","2017-08-26T14:29:10Z"
"","5278","RegexpOnFilenameCheck: NullPointerException when relative path is used to run checkstyle CLI","``` /var/tmp $ cat HelloWorld.java  public class HelloWorld {     public static void main(String[] args) {         System.out.println(""Hello, World!"");     } }  /var/tmp $ cat config.xml                                    /var/tmp $ java -Duser.language=en -Duser.country=US -jar checkstyle-8.4-all.jar -c config.xml HelloWorld.java  Starting audit... com.puppycrawl.tools.checkstyle.api.CheckstyleException: Exception was thrown while processing HelloWorld.java 	at com.puppycrawl.tools.checkstyle.Checker.processFiles(Checker.java:297) 	at com.puppycrawl.tools.checkstyle.Checker.process(Checker.java:215) 	at com.puppycrawl.tools.checkstyle.Main.runCheckstyle(Main.java:523) 	at com.puppycrawl.tools.checkstyle.Main.runCli(Main.java:437) 	at com.puppycrawl.tools.checkstyle.Main.main(Main.java:210) Caused by: java.lang.NullPointerException 	at com.puppycrawl.tools.checkstyle.checks.regexp.RegexpOnFilenameCheck.getFolderPath(RegexpOnFilenameCheck.java:286) 	at com.puppycrawl.tools.checkstyle.checks.regexp.RegexpOnFilenameCheck.processFiltered(RegexpOnFilenameCheck.java:253) 	at com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck.process(AbstractFileSetCheck.java:82) 	at com.puppycrawl.tools.checkstyle.Checker.processFile(Checker.java:318) 	at com.puppycrawl.tools.checkstyle.Checker.processFiles(Checker.java:288) 	... 4 more Checkstyle ends with 1 errors.   /var/tmp $ java -Duser.language=en -Duser.country=US -jar checkstyle-8.4-all.jar -c config.xml /var/tmp/HelloWorld.java  Starting audit... [ERROR] /var/tmp/HelloWorld.java:0: File match folder pattern '' and file pattern '.'. [RegexpOnFilename] Audit done. Checkstyle ends with 1 errors. ```  --------------  The CLI tool throws a NullPointerException when using RegexpOnFilename with a relative path (but works with an absolute path). Seems to be the same issue as #5127 (and perhaps the fix for #5127 already fixes this).  --------------","closed","approved,","kevin-wayne","2017-11-19T02:13:11Z","2017-11-24T17:32:32Z"
"","5134","ClassFanOutComplexity for a multi-dimensional array is calculating with an error.","``` $ javac Test.java  $ cat Test.java  public class Test{     protected Object[][] foo() {         return new Object[][] {};     } }  $ cat config.xml                    		                  $ java -jar checkstyle-8.3-SNAPSHOT-all.jar -c config.xml Test.java  Starting audit... [ERROR] Test.java:1:1: Class Fan-Out Complexity is 1 (max allowed is 0). [ClassFanOutComplexity] Audit done. Checkstyle ends with 1 errors. ``` Expected is 0 error.  I think, [createFullType](https://github.com/checkstyle/checkstyle/blob/master/src/main/java/com/puppycrawl/tools/checkstyle/utils/CheckUtils.java#L79) found `[` instead `Object`","closed","miscellaneous,","sergileon","2017-09-21T14:32:19Z","2017-10-26T07:47:47Z"
"","5090","ImportOrder: checkSeparatorInGroup works wrong when separated=false","``` $ cat TestClass.java import java.awt.Button;  import java.awt.Dialog;  import java.awt.Frame; import java.awt.event.ActionEvent; import javax.swing.JComponent;  $ cat TestConfig.xml                                                      $ java -jar checkstyle-8.2-all.jar -c TestConfig.xml TestClass.java Starting audit... Audit done. ```  There is no warning message and I excepted: ``` Extra separation in import group before 'java.awt.Dialog'. Extra separation in import group before 'java.awt.Frame'. ```","closed","approved,","djydewang","2017-09-08T05:38:55Z","2018-03-18T14:28:32Z"
"","5877","AstTreeStringPrinter  should use 1-based column and consider tab size","``` $ cat config.xml                                                       $ cat TestClass.java  package org.checkstyle.suppressionxpathfilter.cyclomaticcomplexity;  public class SuppressionXpathRegressionCyclomaticOne {     public void test(int a, int b) { //warn         if (a > b) {          } else {          }     }  $ java -jar checkstyle-8.10-all.jar -c config.xml TestClass.java  Starting audit... [ERROR] TestClass.java:4:5: Cyclomatic Complexity is 2 (max allowed is 0). [CyclomaticComplexity] Audit done. Checkstyle ends with 1 errors.  $ java -jar checkstyle-8.10-all.jar -t TestClass.java | grep ""4:5""  $ java -jar checkstyle-8.10-all.jar -t TestClass.java | grep ""4:4""     |--METHOD_DEF -> METHOD_DEF [4:4]     |   |--MODIFIERS -> MODIFIERS [4:4]     |   |   `--LITERAL_PUBLIC -> public [4:4]  ```  First of all about different column numbers The reason of this difference, that user messages consider tabs and start with 1, when AstTreeStringPrinter prints 0-based column numbers without calculating tabs.  So If you want numbers to be the same, we should pass tabwidth to AstTreeStringPrinter and little change one line and thats all","closed","","romani","2018-06-01T23:06:37Z","2018-06-02T00:29:45Z"
"","5911","doc: update xdoc for ParameterName to clarify how to check catch parameter","``` $ cat config.xml                                                     $ cat Test.java  public class Test {     boolean foo() {         try {} catch (Exception e) {}     } }  $ java -jar checkstyle-8.10.1-all.jar -c config.xml Test.java Starting audit... Audit done.  ```","closed","","romani","2018-06-11T06:23:31Z","2018-06-11T18:09:50Z"
"","5910","doc: update xdoc for ParameterName to clarify how to check catch parameter","``` $ cat config.xml                                                     $ cat Test.java  public class Test {     boolean foo() {         try {} catch (Exception e) {}     } }  $ java -jar checkstyle-8.10.1-all.jar -c config.xml Test.java Starting audit... Audit done.  ```","closed","","romani","2018-06-11T06:21:35Z","2018-06-11T06:22:18Z"
"","5901","doc: update xdoc for ParameterName to clarify how to check catch parameter","``` $ cat config.xml                                                     $ cat Test.java  public class Test {     boolean foo() {         try {} catch (Exception e) {}     } }  $ java -jar checkstyle-8.10.1-all.jar -c config.xml Test.java Starting audit... Audit done.  ```","closed","","romani","2018-06-11T01:22:00Z","2018-06-11T06:24:09Z"
"","5709","CheckUtils.parseDouble: wrong result for negative values","```         assertEquals(""Invalid parse result"", -2.0,                 CheckUtils.parseDouble(""-2"", TokenTypes.NUM_LONG), 0); ```  fails with ``` java.lang.AssertionError: Invalid parse result  Expected :-2.0 Actual   :-8.0 ```  The method should be rewritten.","closed","approved,","pbludov","2018-04-11T00:53:52Z","2018-04-12T12:19:20Z"
"","5092","Add and remove javadoc block tags in NonEmptyAtclauseDescriptionCheck","`@return` should be removed from `NonEmptyAtclauseDescriptionCheck`. Also [`@exception`](http://docs.oracle.com/javase/7/docs/technotes/tools/windows/javadoc.html#exception) which is a synonym for `@throws` should be added to default tokens for the check since `@throws` is a default token for it.    Also, other tags that can be added to this check need to be investigated.  taken from [5000#discussion](https://github.com/checkstyle/checkstyle/pull/5000#discussion_r135173856)","closed","javadoc,","voidfist","2017-09-08T10:30:34Z","2017-12-25T20:00:26Z"
"","5387","NonEmptyAtclauseDescriptionCheck: Remove @return JavaDoc block tag","`@return` JavaDoc tag should be removed from NonEmptyAtclauseDescriptionCheck because  empty  comment is not allowed by JavaDoc grammar and parser logs the error before this check runs. Taken from #5092 .","closed","","sikhlev","2017-12-25T16:26:40Z","2018-05-09T11:53:06Z"
"","5388","Add @exception JavaDoc block tag to NonEmptyAtclauseDescriptionCheck","`@exception` JavaDoc block tag is a part of the JavaDoc specification and it may not be empty.  Taken from #5092 .","closed","new feature,","sikhlev","2017-12-25T16:30:27Z","2018-01-07T15:05:15Z"
"","5465","ParseError on annotated varargs","`/var/tmp $ javac YOUR_FILE.java`:  ``` not using javac, but ecc ```  `/var/tmp $ cat YOUR_FILE.java`:  ``` package reproduction  import org.eclipse.jdt.annotation.NonNull;  public class Failure {      public Object parseError(@NonNull final Object @NonNull... problematicArgument) {         return this;     }  } ``` The problematic part is ""@NonNull..."". The import is https://mvnrepository.com/artifact/org.eclipse.jdt/org.eclipse.jdt.annotation/2.0.0 (or more recent), the Eclipse Java compiler type annotations for nullness. I'm sure this can be reproduced with other type annotations, too.  `/var/tmp $ java -Duser.language=en -Duser.country=US -jar checkstyle-X.XX-all.jar -c config.xml YOUR_FILE.java`:  ```  com.puppycrawl.tools.checkstyle.api.CheckstyleException: MismatchedTokenException occurred during the analysis of file D:\development\esdl\git\project33\plugins\com.etas.esdl\src\com\etas\esdl\validation\utils\Failure.java. 	at com.puppycrawl.tools.checkstyle.TreeWalker.processFiltered(TreeWalker.java:229) 	at com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck.process(AbstractFileSetCheck.java:83) 	at com.puppycrawl.tools.checkstyle.Checker.processFile(Checker.java:319) 	at com.puppycrawl.tools.checkstyle.Checker.processFiles(Checker.java:289) 	... 16 more Caused by: D:\development\esdl\git\project33\plugins\com.etas.esdl\src\com\etas\esdl\validation\utils\Failure.java:9:5: expecting EOF, found '}' 	at antlr.Parser.match(Parser.java:211) 	at com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer.compilationUnit(GeneratedJavaRecognizer.java:211) 	at com.puppycrawl.tools.checkstyle.TreeWalker.parse(TreeWalker.java:498) 	at com.puppycrawl.tools.checkstyle.TreeWalker.processFiltered(TreeWalker.java:200) ``` This is checkstyle 8.7.0, being used from Eclipse-CS 8.7.0","closed","","Bananeweizen","2018-01-17T13:47:20Z","2018-01-17T14:28:11Z"
"","5298","Add support for regular expression in RegexpHeader spanning mutliple lines","`/var/tmp $ javac YOUR_FILE.java`:  ``` [no output] ```  `/var/tmp $ cat YOUR_FILE.java`:  ``` /*  * a  * b  */ package richtercloud.maven.checkstyle.plugin.multiline;  /**  *  * @author richter  */ public class NewMain {      /**      * @param args the command line arguments      */     public static void main(String[] args) {         // TODO code application logic here     }      } ```  `/var/tmp $ cat config.xml`:  ```                                  ```  `/var/tmp $ java -Duser.language=en -Duser.country=US -jar checkstyle-8.4-all.jar -c config.xml YOUR_FILE.java`:  ``` com.puppycrawl.tools.checkstyle.api.CheckstyleException: cannot initialize module RegexpHeader - Cannot set property 'header' to '(^/\*\n \* a\n \* b\n \*/$)|(^/\*\n \* a\n \* c\n \*/$)' in module RegexpHeader 	at com.puppycrawl.tools.checkstyle.Checker.setupChild(Checker.java:463) 	at com.puppycrawl.tools.checkstyle.api.AutomaticBean.configure(AutomaticBean.java:186) 	at com.puppycrawl.tools.checkstyle.Main.runCheckstyle(Main.java:519) 	at com.puppycrawl.tools.checkstyle.Main.runCli(Main.java:437) 	at com.puppycrawl.tools.checkstyle.Main.main(Main.java:210) Caused by: com.puppycrawl.tools.checkstyle.api.CheckstyleException: Cannot set property 'header' to '(^/\*\n \* a\n \* b\n \*/$)|(^/\*\n \* a\n \* c\n \*/$)' in module RegexpHeader 	at com.puppycrawl.tools.checkstyle.api.AutomaticBean.tryCopyProperty(AutomaticBean.java:227) 	at com.puppycrawl.tools.checkstyle.api.AutomaticBean.configure(AutomaticBean.java:179) 	at com.puppycrawl.tools.checkstyle.Checker.setupChild(Checker.java:458) 	... 4 more Caused by: java.lang.reflect.InvocationTargetException 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.apache.commons.beanutils.PropertyUtilsBean.invokeMethod(PropertyUtilsBean.java:2127) 	at org.apache.commons.beanutils.PropertyUtilsBean.setSimpleProperty(PropertyUtilsBean.java:2108) 	at org.apache.commons.beanutils.BeanUtilsBean.copyProperty(BeanUtilsBean.java:437) 	at com.puppycrawl.tools.checkstyle.api.AutomaticBean.tryCopyProperty(AutomaticBean.java:217) 	... 6 more Caused by: java.lang.IllegalArgumentException: line 1 in header specification is not a regular expression 	at com.puppycrawl.tools.checkstyle.checks.header.RegexpHeaderCheck.postProcessHeaderLines(RegexpHeaderCheck.java:158) 	at com.puppycrawl.tools.checkstyle.checks.header.AbstractHeaderCheck.loadHeader(AbstractHeaderCheck.java:183) 	at com.puppycrawl.tools.checkstyle.checks.header.AbstractHeaderCheck.setHeader(AbstractHeaderCheck.java:154) 	at com.puppycrawl.tools.checkstyle.checks.header.RegexpHeaderCheck.setHeader(RegexpHeaderCheck.java:177) 	... 14 more Caused by: java.util.regex.PatternSyntaxException: Unclosed group near index 5 (^/\*      ^ 	at java.util.regex.Pattern.error(Pattern.java:1955) 	at java.util.regex.Pattern.accept(Pattern.java:1813) 	at java.util.regex.Pattern.group0(Pattern.java:2908) 	at java.util.regex.Pattern.sequence(Pattern.java:2051) 	at java.util.regex.Pattern.expr(Pattern.java:1996) 	at java.util.regex.Pattern.compile(Pattern.java:1696) 	at java.util.regex.Pattern.(Pattern.java:1351) 	at java.util.regex.Pattern.compile(Pattern.java:1028) 	at com.puppycrawl.tools.checkstyle.checks.header.RegexpHeaderCheck.postProcessHeaderLines(RegexpHeaderCheck.java:154) 	... 17 more Checkstyle ends with 1 errors. ```  ---------------  `checkstyle` currently doesn't support regular expression which span multiple lines in `RegexpHeader`. In order to validate that files start with a header with has either one or another set of copyright holders which span multiple rows, it's necessary to have this feature.  It'd be great to support those regular expression in general because they offer great flexibility and to profit from the complete concept of regular expressions.  The current feedback that a valid regular expression fails due to `Unclosed group near index ...` isn't very intuitive.","closed","","krichter722","2017-11-25T20:30:40Z","2017-11-25T23:50:02Z"
"","5764","Shimu Music 65 HD","`/var/tmp $ javac YOUR_FILE.java`:  ``` [[PLACE YOUR OUTPUT HERE]] ```  `/var/tmp $ cat YOUR_FILE.java`:  ``` [[PLACE YOU OUTPUT HERE]] ```  `/var/tmp $ cat config.xml`:  ``` [[PLACE YOUR OUTPUT HERE]] ```  `/var/tmp $ java -Duser.language=en -Duser.country=US -jar checkstyle-X.XX-all.jar -c config.xml YOUR_FILE.java`:  ``` [[PLACE YOUR OUTPUT HERE]] ```  ---------------  Describe what you expect in detail.  --------------  Still not clear ??? - see example - http://checkstyle.sourceforge.net/report_issue.html#How_to_report_a_bug","closed","","dulukichok","2018-05-02T17:52:56Z","2018-05-02T19:53:20Z"
"","5381","","`/var/tmp $ javac YOUR_FILE.java`:  ``` [[PLACE YOUR OUTPUT HERE]] ```  `/var/tmp $ cat YOUR_FILE.java`:  ``` [[PLACE YOU OUTPUT HERE]] ```  `/var/tmp $ cat config.xml`:  ``` [[PLACE YOUR OUTPUT HERE]] ```  `/var/tmp $ java -Duser.language=en -Duser.country=US -jar checkstyle-X.XX-all.jar -c config.xml YOUR_FILE.java`:  ``` [[PLACE YOUR OUTPUT HERE]] ```  ---------------  Describe what you expect in detail.  --------------  Still not clear ??? - see example - http://checkstyle.sourceforge.net/report_issue.html#How_to_report_a_bug","closed","","bhuism","2017-12-22T22:03:42Z","2017-12-22T23:32:48Z"
"","5685","Indentation: false positive for try child on the same line","`/var/tmp $ javac TestClass.java`: `/var/tmp $ cat TestClass.java`:  ``` class TestClass {     void method() {         try { return; // Line 3         }         catch (Exception e) { return; // Line 5         }     } } ```  `/var/tmp $ cat config.xml`:  ```                ```  `/var/tmp $ java -Duser.language=en -Duser.country=US -jar checkstyle-8.8-all.jar -c config.xml TestClass.java`:  ``` Starting audit... [ERROR] /var/tmp/TestClass.java:3: 'try' child has incorrect indentation level 8, expected level should be 12. [Indentation] [ERROR] /var/tmp/TestClass.java:5: 'catch' child has incorrect indentation level 8, expected level should be 12. [Indentation] Audit done. Checkstyle ends with 1 errors. ```  There should be no violations.","open","indentation,","pbludov","2018-04-04T11:52:40Z","2020-03-25T02:52:21Z"
"","5675","Indentation: false positive for one-line lambda","`/var/tmp $ javac TestClass.java`:  `/var/tmp $ cat TestClass.java`:  ``` import java.util.stream.Stream; class TestClass {     void method() {         Stream.of(false).map(x -> { if (x) return 0; else return 1; }); // Line 6     } } ```  `/var/tmp $ cat config.xml`:  ```                ```  `/var/tmp $ java -Duser.language=en -Duser.country=US -jar checkstyle-8.8-all.jar -c config.xml TestClass.java`:  ``` Starting audit... [ERROR] /var/tmp/TestClass.java:6: 'if' has incorrect indentation level 36, expected level should be 12. [Indentation] Audit done. Checkstyle ends with 1 errors. ```  ---------------  There should be no violations.   --------------","closed","indentation,","pbludov","2018-04-01T03:43:49Z","2018-04-08T13:57:42Z"
"","5655","Indentation: wrapped method name","`/var/tmp $ javac TestClass.java`:  `/var/tmp $ cat TestClass.java`:  ``` import java.util.Collections; import java.util.function.Function; import java.util.List;  class TestClass {      public  void test(Function               ```  `/var/tmp $ java -Duser.language=en -Duser.country=US -jar checkstyle-8.8-all.jar -c config.xml TestClass.java`:  ``` Starting audit... [ERROR] /var/tmp/TestClass.java:16: 'lambda arguments' has incorrect indentation level 16, expected level should be 12. [Indentation] Audit done. Checkstyle ends with 1 errors. ```  The problem is that the `IndentationCheck` wants ```         this.","closed","indentation,","pbludov","2018-03-29T05:25:19Z","2018-04-04T00:31:21Z"
"","5371","CheckStyle does not accept @NonNull...","`/var/tmp $ javac Test.java`:  ``` ```  `/var/tmp $ cat Test.java`:  ``` import static java.lang.annotation.ElementType.TYPE_USE;  import java.lang.annotation.Retention; import java.lang.annotation.RetentionPolicy; import java.lang.annotation.Target;  public class Test {  	@Retention(RetentionPolicy.CLASS) 	@Target({TYPE_USE}) 	public @interface NonNull { 	}  	public void test(final Object @NonNull... args) { 	} } ```  `/var/tmp $ cat config.xml`:  ```                ```  `/var/tmp $ java -Duser.language=en -Duser.country=US -jar checkstyle-8.5-all.jar -c config.xml Test.java`:  ``` Starting audit... /var/tmp/Test.java:14:40: unexpected token: ... Audit done. ```  ---------------  The ""@NonNull..."" is valid but CheckStyle stumbles over it.  --------------","closed","","duesentrieb17","2017-12-20T16:49:11Z","2017-12-20T17:54:35Z"
"","5624","Google Style Should Enforce Spaces after Commas","`/var/tmp $ javac Test.java`:  ``` $ javac Test.java  $ ```  `/var/tmp $ cat Test.java`:  ``` $ cat Test.java import java.util.function.BiFunction;  /**  * A test class to highlight a violation issue.  */ public class Test {   /**    * A lambda, for the purpose of illustrating the issue.    */   private static final BiFunction FUNCTION = (a,b) -> { // Violation -- no space after comma     return ""Hello World, "" + a + "" and "" + b;   };    /**    * Entry point of the application.    */   public static void main(String [] args) {     final Test test = new Test();      test.doSomething(""Lucy"",""Ricky"");   }    /**    * Runs the lambda.    */   public void doSomething(final String arg1,final String arg2) { // Violation -- no space after comma     System.out.println(FUNCTION.apply(arg1,arg2)); // Violation -- no space after comma   } } ```  `/var/tmp $ cat config.xml`:  (We're using Google Style at this commit: https://github.com/checkstyle/checkstyle/blob/60f41e3c16e6c94b0bf8c2e5e4b4accf4ad394ab/src/main/resources/google_checks.xml).  `/var/tmp $ java -Duser.language=en -Duser.country=US -jar checkstyle-8.8-all.jar -c config.xml Test.java`:  ``` Starting audit... Audit done. ```  ---------------  According to [section 4.6.2 of the official Google Style Guide](https://google.github.io/styleguide/javaguide.html#s4.6.2-horizontal-whitespace), item 5 indicates that ""a single ASCII space"" should appear after commas, colons, semicolons, ""or the closing parenthesis ()) of a cast"".  It does not appear that CheckStyle is enforcing this requirement; therefore, there is no warning that all of the commas are missing spaces.  --------------","closed","google style,","GuyPaddock","2018-03-20T04:02:16Z","2020-04-21T18:14:20Z"
"","5362","IndentationCheck: problem with content of anonymous class","`/var/tmp $ javac ManageHightPower.java`:  ``` No output. Success. ```  `/var/tmp $ cat ManageHighPower.java`:  ``` package com.android.tv.settings.device.apps.specialaccess;  public class ManageHighPower {      private final StringBuffer mFilter =             new StringBuffer(                     new CharSequence() {                         @Override                              // line 8                         public char charAt(int index) {                             return 'A';                         }                          public int length() {                             return 1;                         }                          public CharSequence subSequence(int start, int end) {                             return this;                         }                          public String toString() {                             return ""Foo"";                         }                     }); } ```  `/var/tmp $ cat config.xml`:  ```                                                                                                    ```  `/var/tmp $ java -Duser.language=en -Duser.country=US -jar checkstyle-8.5-all.jar -c config.xml ManageHighPower.java`:  ``` Starting audit... [ERROR] .../ManageHighPower.java:8: 'method def modifier' has incorrect indentation level 24, expected level should be one of the following: 12, 16, 20. [Indentation] [ERROR] .../ManageHighPower.java:10: 'method def' child has incorrect indentation level 28, expected level should be one of the following: 16, 20, 24. [Indentation] [ERROR] .../ManageHighPower.java:11: 'method def rcurly' has incorrect indentation level 24, expected level should be one of the following: 12, 16, 20. [Indentation] [ERROR] .../ManageHighPower.java:13: 'method def modifier' has incorrect indentation level 24, expected level should be one of the following: 12, 16, 20. [Indentation] [ERROR] .../ManageHighPower.java:14: 'method def' child has incorrect indentation level 28, expected level should be one of the following: 16, 20, 24. [Indentation] [ERROR] .../ManageHighPower.java:15: 'method def rcurly' has incorrect indentation level 24, expected level should be one of the following: 12, 16, 20. [Indentation] [ERROR] .../ManageHighPower.java:17: 'method def modifier' has incorrect indentation level 24, expected level should be one of the following: 12, 16, 20. [Indentation] [ERROR] .../ManageHighPower.java:18: 'method def' child has incorrect indentation level 28, expected level should be one of the following: 16, 20, 24. [Indentation] [ERROR] .../ManageHighPower.java:19: 'method def rcurly' has incorrect indentation level 24, expected level should be one of the following: 12, 16, 20. [Indentation] [ERROR] .../ManageHighPower.java:21: 'method def modifier' has incorrect indentation level 24, expected level should be one of the following: 12, 16, 20. [Indentation] [ERROR] .../ManageHighPower.java:22: 'method def' child has incorrect indentation level 28, expected level should be one of the following: 16, 20, 24. [Indentation] [ERROR] .../Desktop/ManageHighPower.java:23: 'method def rcurly' has incorrect indentation level 24, expected level should be one of the following: 12, 16, 20. [Indentation] [ERROR] .../ManageHighPower.java:24: 'object def rcurly' has incorrect indentation level 20, expected level should be one of the following: 8, 12, 16. [Indentation] Audit done. Checkstyle ends with 13 errors. ```  ---------------  I expected the indention to be correct without any warnings.  --------------","closed","has bounty,","liutikas","2017-12-15T22:23:20Z","2020-11-30T21:08:52Z"
"","5476","ImportOrderCheck: separated=false not respected","`/var/tmp $ javac ImportOrderTest.java`:  ``` ```  `/var/tmp $ cat ImportOrderTest.java`:  ``` import java.io.Serializable;  import java.util.List;  /**  * Test for CheckStyle's ImportOrderCheck w/ spaces.  */ public class ImportOrderTest { } ```  `/var/tmp $ cat config.xml`:  ```                                              ```  `/var/tmp $ java -Duser.language=en -Duser.country=US -jar checkstyle-6.4.1-all.jar -c config.xml ImportOrderTest.java`:  ``` Starting audit... Audit done. ```  `/var/tmp $ java -Duser.language=en -Duser.country=US -jar checkstyle-8.7-all.jar -c config.xml ImportOrderTest.java`:  ``` Starting audit... [ERROR] /var/tmp/ImportOrderTest.java:3: Extra separation in import group before 'java.util.List' [ImportOrder] Audit done. Checkstyle ends with 1 errors. ```  ---------------  Originally referenced here: https://github.com/checkstyle/checkstyle/issues/2143#issuecomment-359028352.  Spaces between imports should not give an error when `ImportOrder.separated` is set to false.  This is a regression. 6.4.1 does not give an error; 8.7 does. Complete code here: https://github.com/jonmbake/checkstyle-import-order-test. To see error, run `mvn validate`.  --------------","open","","jonmbake","2018-01-20T02:31:05Z","2020-05-05T08:50:30Z"
"","5629","MismatchedTokenException on annotated varargs","`/var/tmp $ javac App.java`:  ``` ```  `/var/tmp $ cat App.java`:  ``` import java.lang.annotation.Documented; import java.lang.annotation.ElementType; import java.lang.annotation.Retention; import java.lang.annotation.RetentionPolicy; import java.lang.annotation.Target;  public class App {     @Documented     @Retention(value = RetentionPolicy.CLASS)     @Target(value = {ElementType.TYPE_USE})     @interface Nullable {     }      public void foo(String text, Object @Nullable ... arguments) {         String.format(text, arguments);     } } ```  `/var/tmp $ cat config.xml`:  ```                             ```  `/var/tmp $ java -Duser.language=en -Duser.country=US -jar checkstyle-8.8-all.jar -c config.xml App.java`:  ``` Starting audit... /var/tmp/App.java:14:51: unexpected token: ... com.puppycrawl.tools.checkstyle.api.CheckstyleException: Exception was thrown while processing App.java         at com.puppycrawl.tools.checkstyle.Checker.processFiles(Checker.java:299)         at com.puppycrawl.tools.checkstyle.Checker.process(Checker.java:217)         at com.puppycrawl.tools.checkstyle.Main.runCheckstyle(Main.java:523)         at com.puppycrawl.tools.checkstyle.Main.runCli(Main.java:438)         at com.puppycrawl.tools.checkstyle.Main.main(Main.java:211) Caused by: com.puppycrawl.tools.checkstyle.api.CheckstyleException: MismatchedTokenException occurred while parsing file /var/tmp/App.java.         at com.puppycrawl.tools.checkstyle.JavaParser.parse(JavaParser.java:100)         at com.puppycrawl.tools.checkstyle.TreeWalker.processFiltered(TreeWalker.java:181)         at com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck.process(AbstractFileSetCheck.java:83)         at com.puppycrawl.tools.checkstyle.Checker.processFile(Checker.java:320)         at com.puppycrawl.tools.checkstyle.Checker.processFiles(Checker.java:290)         ... 4 more Caused by: /var/tmp/App.java:16:5: expecting EOF, found '}'         at antlr.Parser.match(Parser.java:211)         at com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer.compilationUnit(GeneratedJavaRecognizer.java:211)         at com.puppycrawl.tools.checkstyle.JavaParser.parse(JavaParser.java:94)         ... 8 more Checkstyle ends with 1 errors. ```  ---------------  I do not expect any exception. It seems the used module does not really care as long as `GeneratedJavaRecognizer.compilationUnit` (and so `antlr.Parser.match`) will be called.  -------","closed","has bounty,","maggu2810","2018-03-21T22:03:25Z","2020-03-21T22:51:28Z"
"","5510","ImportOrder: example of Intellij Idea default import order is not working","`/var/tmp $ cat YOUR_FILE.java`:  ``` import org.junit.runners.Parameterized.Parameters;  import java.util.Arrays; ```  `/var/tmp $ cat config.xml`:  ```                            ```  `/var/tmp $ java -Duser.language=en -Duser.country=US -jar checkstyle-X.XX-all.jar -c config.xml YOUR_FILE.java`:  ``` Starting audit... [ERROR] /Users/jqno/w/equalsverifier/equalsverifier/src/test/java/nl/jqno/equalsverifier/coverage/CoverageWithInheritanceTest.java:25: Extra separation in import group before 'java.util.Arrays' [ImportOrder] Audit done. Checkstyle ends with 1 errors. ```  ---------------  Describe what you expect in detail.  I'm attempting to upgrade from version 6.19 to version 8.8. The above used to work fine, but now I get a couple hundred errors like this. This behavior was introduced between 8.2 and 8.3.  If I set `separated` to false, I get less errors, but they still occur when `javax.` imports are followed by `java.` imports with no white line between them. I tried changing the `groups` to something like `*,javax?` (to make `javax.` and `java.` a single group) but that didn't help either.  Note that this configuration is identical to what's written on [this documentation page](http://checkstyle.sourceforge.net/config_imports.html#ImportOrder) where it says `Note: ""separated"" option is disabled because IDEA default has blank line between ""java"" and static imports, and no blank line between ""javax"" and ""java""` which is exactly what I'm trying to achieve.  If you tell me what I need to change in my configuration, I'm willing to update the docs and submit a PR for that.  You can reproduce the issue on the EqualsVerifier repository, which you can find [here](https://github.com/jqno/equalsverifier). Check out the branch `upgrade-checkstyle` and run on Java 9 with `mvn checkstyle:checkstyle`. If you change the Checkstyle dependency to 8.2 you'll see that it passes; if you leave it at 8.8 (or 8.3) you'll see that it fails. Checkstyle configuration file is in the `project/` folder.","closed","miscellaneous,","jqno","2018-02-05T08:35:49Z","2018-10-26T00:38:05Z"
"","5477","xpath-suppression isn't compatible with any ...NameCheck","`/var/tmp $ cat TestClass.java` ``` import java.util.Arrays; import com.puppycrawl.tools.checkstyle.checks.naming.AccessModifier;  public class TestClass {     private boolean matchAccessModifiers1(final AccessModifier accessModifier) {         return Arrays.stream(accessModifiers).anyMatch((el) -> el == accessModifier);     }      private void methodParameter(AccessModifier  el) {     } } ```  `/var/tmp $ cat config.xml` ```                                                                  ```  `/var/tmp $ cat suppressions.xml` ```          ```  `/var/tmp $ java -Duser.language=en -Duser.country=US -jar checkstyle-8.7-all.jar -c TestConfig.xml TestClass.java`  ``` Starting audit... [ERROR] /tmp/TestClass.java:6:56: Name 'el' must match pattern '^(id)|([a-z][a-z0-9][a-zA-Z0-9]+)$'. [ParameterName] [ERROR] /tmp/TestClass.java:9:49: Name 'el' must match pattern '^(id)|([a-z][a-z0-9][a-zA-Z0-9]+)$'. [ParameterName] Audit done. Checkstyle ends with 2 errors.  ``` ---------------  Only one violation is expected. The bug is here (XpathFilter::isXpathQueryMatching) ```                 isMatching = abstractNode.getTokenType() == event.getTokenType()                         && abstractNode.getLineNumber() == event.getLine()                         && abstractNode.getColumnNumber() == event.getColumnCharIndex();  ``` abstractNode.getColumnNumber() is zero-based, but event.getColumnCharIndex() is one-based. Seems to be an easy task.","closed","","pbludov","2018-01-20T05:08:55Z","2018-05-04T18:42:52Z"
"","5304","The ability to specify the number of empty lines between the package and first import","`/var/tmp $ cat StructureItemProvider.java`:  ``` /**  */ package ru.otr.cactuss.beanmodel.provider;   import java.util.Collection; import java.util.List;  /**  * This is the item provider adapter for a {@link ru.otr.cactuss.beanmodel.Structure} object.  *   *   * @generated  */ public class StructureItemProvider { 	/** 	 * This constructs an instance from a factory and a notifier. 	 *  	 *  	 * @generated 	 */ 	public StructureItemProvider() { 	}  	/** 	 * This handles model notifications by calling {@link #updateChildren} to update any cached 	 * children and by creating a viewer notification, which it passes to {@link #fireNotifyChanged}. 	 *  	 *  	 * @generated NOT 	 */ 	public void notifyChanged() { 	} }  ```  `/var/tmp $ cat config.xml`:  ```                                                ```   `/var/tmp $ cat checkstyle.suppressions.file`:  ```                                               ```   `/var/tmp $ java -Duser.language=en -Duser.country=US -Dcheckstyle.suppressions.file=/home/madmax/work/git2/tomato/studio-checkstyle-suppressions.xml -jar checkstyle-8.0-all.jar -c studio.checkstyle StructureItemProvider.java`:  ``` Starting audit... [WARN] /tmp/1/StructureItemProvider.java:6: 'java.util.Collection' should be separated from previous import group by one line. [CustomImportOrder] Audit done.  ```  ---------------  I have java files, in which sometimes using   > package com.oracle.utils; > **** empty line **** > **** empty line **** > import java.util.Collection;   with 2 empty line and sometimes using   > package com.oracle.utils; > **** empty line **** > import java.util.Collection;  I think it is not very good to have different count of emty lines but files with 2 empty lines is generated and i can't to changes this header. At the same time not the whole file must be skipped. Some checks must be invoked.  I'm using CustomImportOrder check and now i have error that ""should be separated from previous import group by one line.""  Is it possible to add ability to specify the number of empty lines between the package and first import?  --------------","closed","","pe4enko","2017-11-28T14:52:57Z","2018-09-16T03:22:58Z"
"","5491","StringIndexOutOfBoundsException in CommonUtils.lengthExpandedTabs","`$ javac T.java`:  ``` T.java:2: error: unclosed string literal   @A(""      ^ ```  `$ cat T.java`:  ``` class T {   @A(""   "")     int x; } ```  `$ cat config.xml`:  ```                                    ```  `$ java -c config.xml T.java`:  ``` Starting audit... com.puppycrawl.tools.checkstyle.api.CheckstyleException: Exception was thrown while processing T.java 	at com.puppycrawl.tools.checkstyle.Checker.processFiles(Checker.java:298) 	at com.puppycrawl.tools.checkstyle.Checker.process(Checker.java:216) 	at com.puppycrawl.tools.checkstyle.Main.runCheckstyle(Main.java:523) 	at com.puppycrawl.tools.checkstyle.Main.runCli(Main.java:437) 	at com.puppycrawl.tools.checkstyle.Main.main(Main.java:210) Caused by: java.lang.StringIndexOutOfBoundsException: String index out of range: 4 	at java.lang.String.charAt(String.java:646) 	at com.puppycrawl.tools.checkstyle.utils.CommonUtils.lengthExpandedTabs(CommonUtils.java:318) 	at com.puppycrawl.tools.checkstyle.api.AbstractCheck.log(AbstractCheck.java:290) 	at com.puppycrawl.tools.checkstyle.checks.naming.AbstractNameCheck.visitToken(AbstractNameCheck.java:76) 	at com.puppycrawl.tools.checkstyle.TreeWalker.notifyVisit(TreeWalker.java:423) 	at com.puppycrawl.tools.checkstyle.TreeWalker.processIter(TreeWalker.java:579) 	at com.puppycrawl.tools.checkstyle.TreeWalker.walk(TreeWalker.java:363) 	at com.puppycrawl.tools.checkstyle.TreeWalker.processFiltered(TreeWalker.java:203) 	at com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck.process(AbstractFileSetCheck.java:83) 	at com.puppycrawl.tools.checkstyle.Checker.processFile(Checker.java:319) 	at com.puppycrawl.tools.checkstyle.Checker.processFiles(Checker.java:289) 	... 4 more Checkstyle ends with 1 errors. ``` ## Describe what you expect in detail.  I expected checkstyle to not crash.","closed","","cushon","2018-01-27T07:23:57Z","2018-02-04T14:58:16Z"
"","5339","How do I enforce no @author tag in Javadoc?","[My checkstyle configuration](https://github.com/danielb987/EmojicodeEditor/blob/master/checkstyle/emojicode_checks.xml). See lines 198 - 207.  [The output from checkstyle](https://danielb987.github.io/EmojicodeEditor/checkstyle/checkstyle_errors.xml)  [An example Java file with the error](https://github.com/danielb987/EmojicodeEditor/blob/master/src/emojicode/code/MainBlock.java). See line 37.  ---------------  How do I enforce no \@author tag in Javadoc?  By reading [this page](http://markmail.org/message/6373xhvurzydnm4x) and [this page](http://checkstyle.sourceforge.net/config_javadoc.html), I have the following configuration:  ```      . . .              . . .                                                                                                                                 ```  This configuration will do nothing. It doesn't react on the \@author tags at all.  If I remove the line  property name=""severity"" value=""ignore"" ,  checkstyle will emit error if an \@author tag is found, but it will also emit an error if no \@author tag is found.  ---------------  A second question:  How do I enforce no copyright line in the source code? Line 4 in the Java file above has the copyright line ""Copyright 2017 Daniel Bergqvist"" and I want to enforce not having that line in the source code, independent of what name is on that line.","closed","","danielb987","2017-12-10T09:28:00Z","2017-12-11T01:35:13Z"
"","5207","LeftCurly : add support for LITERAL_CASE and LITERAL_DEFAULT","[LeftCurly](http://checkstyle.sourceforge.net/config_blocks.html#LeftCurly ) is a great check, however it does not support LITERAL_CASE as a token.  We would like to enforce that everyone writes: ``` case FOO: {     // some code } ```  instead of  ``` case FOO:     {         //some code     } ```  -------","closed","has bounty,","liutikas","2017-10-20T14:49:01Z","2020-01-06T03:12:42Z"
"","5984","XpathSuppression generation should support module id","[example](https://github.com/checkstyle/checkstyle/blob/master/src/main/resources/google_checks.xml#L212): ```                                             ```  generator use only names: ```             final String checkName =                     PackageObjectFactory.getShortFromFullModuleNames(event.getSourceName()); ``` https://github.com/checkstyle/checkstyle/blob/master/src/main/java/com/puppycrawl/tools/checkstyle/XpathFileGeneratorAuditListener.java#L106  `getModuleId` - https://github.com/checkstyle/checkstyle/blob/master/src/main/java/com/puppycrawl/tools/checkstyle/api/AuditEvent.java#L132 `getSourceName` - https://github.com/checkstyle/checkstyle/blob/master/src/main/java/com/puppycrawl/tools/checkstyle/api/AuditEvent.java#L140","closed","miscellaneous,","romani","2018-06-29T17:02:23Z","2018-07-13T12:16:32Z"
"","5094","Unused messages in message.properties","[`javadoc.parse.error`](https://github.com/checkstyle/checkstyle/blob/master/src/main/resources/com/puppycrawl/tools/checkstyle/checks/javadoc/messages.properties#L18) at [JavadocDetailNodeParser.java#L83](https://github.com/checkstyle/checkstyle/blob/master/src/main/java/com/puppycrawl/tools/checkstyle/JavadocDetailNodeParser.java#L83) is just used at [AbstractJavadocCheck.java#L71](https://github.com/checkstyle/checkstyle/blob/master/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java#L71) to declare a constant which itself is never used anywhere.   We already utilize [javadoc.parse.rule.error](https://github.com/checkstyle/checkstyle/blob/master/src/main/resources/com/puppycrawl/tools/checkstyle/checks/javadoc/messages.properties#L19) for reporting parse errors which makes `javadoc.parse.error` somewhat obsolete and something that other users won't need either. So the property should be removed.  Also, this hints at the existence of other such obsolete message keys in `.properties` files. The message keys that we provide for the general user and the message keys that shouldn't have any utility any more should be separated from each other after proper investigation and the obsolete message keys should be removed.","closed","easy,","voidfist","2017-09-08T10:49:04Z","2017-10-28T03:28:36Z"
"","5858","minor: fixed failing CI for file rename","@romani Read gitter. This is the second time we have been hit by skipping CI.","closed","","rnveach","2018-05-27T12:56:09Z","2018-05-27T13:26:45Z"
"","5507","Issue #5476: Only check internal separation when ImportOrder.separated=true","@romani I realize this isn't approved yet, but please consider. It is a major regression from","closed","","jonmbake","2018-02-03T02:17:04Z","2018-04-10T23:41:29Z"
"","5075","PMD violation is not thrown during ""mvn clean verify""","@rnveach @romani @MEZk   Followed by https://github.com/checkstyle/checkstyle/pull/4992  My build passes `mvn clean verify` but does not pass `mvn clean compile pmd:check findbugs:check spotbugs:check`. Actually `mvn clean verify` should also throw following violation:  > PMD Failure: com.puppycrawl.tools.checkstyle.filters.SuppressionTestFilterTest:36 Rule:JUnitTestsShouldIncludeAssert Priority:3 JUnit tests should include assert() or fail().  I have created new filter called `SuppressionTestFilter` it implements and extends same classes as `SuppressionFilter` does. Filter has no logic inside, main parts are `equals` and `hashcode` methods, I test these methods using `EqualsVerifier` library inside `SuppressionTestFilterTest` class.  Since `EqualsVerifier` has no assert/fail inside own implementation, PMD violation for the rule  `JUnitTestsShouldIncludeAssert` should be thrown for  `SuppressionTestFilterTest. testEqualsAndHashCodeMethods` method. Here is my [branch](https://github.com/timurt/checkstyle/tree/test-filter) containing example. Exact commit is [here](https://github.com/timurt/checkstyle/commit/239b8c9a0cb5e999e24912a0ca5fe72ee8dc359c)","closed","approved,","timurt","2017-09-05T15:17:38Z","2019-03-09T20:57:03Z"
"","5395","Support custom texts inside 'Example of Usage' subsection","@rnveach @romani  Previous discussion [PR 4421](https://github.com/checkstyle/checkstyle/pull/5390#discussion_r158707424)  Inside every Check section in xdocs documentations, there is 'Example of Usage' subsection. This subsection contains list of texts and corresponding links. Valid texts are `Checkstyle Style`, `Google Style` and `Sun Style`, using other texts will fail the test [XdocsPagesTest#testAllCheckSections](https://github.com/checkstyle/checkstyle/blob/master/src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java#L251).  Example: ```       ....                                                       Checkstyle Style                                                  Xpath-suppressions config file                                  .... ```  Result: `java.lang.AssertionError: config_filters.xml section 'SuppressionXpathFilter' has unknown text in 'Example of Usage': Xpath-suppressions config file`.","open","","timurt","2017-12-27T07:36:36Z","2018-07-07T19:18:49Z"
"","5635","minor: update PULL_REQUEST_TEMPLATE.md","@rnveach , please review","closed","","romani","2018-03-22T13:18:05Z","2018-03-22T20:03:53Z"
"","5571","Xpath Mapper : UnsupportedOperationException when several queries are combined","@MEZk @rnveach  Previous discussion [5508](https://github.com/checkstyle/checkstyle/pull/5509#issuecomment-369576950)  Here are the steps to reproduce `/var/tmp $ cat InputTest.java`:  ``` public class InputTest { } ```  `/var/tmp $ cat checks.xml`:  ```                	     		 	          	     	    	 	           ```  `/var/tmp $ cat suppressions_xpath.xml`:  ```            ```   `/var/tmp $ java  -jar checkstyle-X.XX-all.jar -c checks.xml InputTest.java`:  ``` Starting audit... com.puppycrawl.tools.checkstyle.api.CheckstyleException: Exception was thrown while processing InputTest.java   at com.puppycrawl.tools.checkstyle.Checker.processFiles(Checker.java:299)   at com.puppycrawl.tools.checkstyle.Checker.process(Checker.java:217)   at com.puppycrawl.tools.checkstyle.Main.runCheckstyle(Main.java:555)   at com.puppycrawl.tools.checkstyle.Main.runCli(Main.java:466)   at com.puppycrawl.tools.checkstyle.Main.main(Main.java:220) Caused by: java.lang.UnsupportedOperationException: Operation is not supported   at com.puppycrawl.tools.checkstyle.xpath.AbstractNode.throwUnsupportedOperationException(AbstractNode.java:384)   at com.puppycrawl.tools.checkstyle.xpath.AbstractNode.getTreeInfo(AbstractNode.java:160)   at net.sf.saxon.expr.sort.GlobalOrderComparer.compare(GlobalOrderComparer.java:38)   at net.sf.saxon.expr.UnionEnumeration.next(UnionEnumeration.java:72)   at net.sf.saxon.expr.UnionEnumeration.next(UnionEnumeration.java:20)   at net.sf.saxon.expr.UnionEnumeration.next(UnionEnumeration.java:59)   at net.sf.saxon.expr.UnionEnumeration.(UnionEnumeration.java:45)   at net.sf.saxon.expr.VennExpression.iterate(VennExpression.java:668)   at net.sf.saxon.sxpath.XPathExpression.evaluate(XPathExpression.java:190)   at com.puppycrawl.tools.checkstyle.filters.XpathFilter.getItems(XpathFilter.java:191)   at com.puppycrawl.tools.checkstyle.filters.XpathFilter.isXpathQueryMatching(XpathFilter.java:160)   at com.puppycrawl.tools.checkstyle.filters.XpathFilter.accept(XpathFilter.java:123)   at com.puppycrawl.tools.checkstyle.filters.SuppressionXpathFilter.accept(SuppressionXpathFilter.java:88)   at com.puppycrawl.tools.checkstyle.TreeWalker.getFilteredMessages(TreeWalker.java:215)   at com.puppycrawl.tools.checkstyle.TreeWalker.processFiltered(TreeWalker.java:194)   at com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck.process(AbstractFileSetCheck.java:83)   at com.puppycrawl.tools.checkstyle.Checker.processFile(Checker.java:320)   at com.puppycrawl.tools.checkstyle.Checker.processFiles(Checker.java:290)   ... 4 more Checkstyle ends with 1 errors. ```  After small investigation I got the following results  For the following simple XPATH queries, no exception occurred ``` /CLASS_DEF | /PACKAGE_DEF /CLASS_DEF | /IMPORT //CLASS_DEF | //METHOD_DEF //CLASS_DEF | //IMPORT /IMPORT | //METHOD_DEF /IMPORT | /PACKAGE_DEF //CLASS_DEF//METHOD_DEF | //METHOD_DEF //CLASS_DEF//METHOD_DEF | /METHOD_DEF ```  These queries throw exceptions ``` /CLASS_DEF | /CLASS_DEF/OBJBLOCK //CLASS_DEF | /CLASS_DEF/OBJBLOCK //CLASS_DEF | //CLASS_DEF/OBJBLOCK //CLASS_DEF | //CLASS_DEF//METHOD_DEF /PACKAGE_DEF | /PACKAGE_DEF/ANNOTATIONS ```","closed","approved,","timurt","2018-03-01T16:55:54Z","2018-04-15T14:18:04Z"
"","5513","Create xdoc page to explain the new Xpath-based suppression model","1. Create a new sub-section in the documentation section of xdoc. The name of the sub-section should be ""Suppressions"". 2. Create a new page in ""Suppressions"" section. The name of the page should be ""XPath"". 3. The ""Xpath"" page should contain the following sections: ""What is XPath"", ""XPath tree to AST mapping (with examples and pictures)"", ""How to generate XPath for Checkstyle violations"". 4. [SuppressionXpathFilter](http://checkstyle.sourceforge.net/config_filters.html#SuppressionXpathFilter) section should contain a link to the ""XPath"" page. 5. [Command line](http://checkstyle.sourceforge.net/cmdline.html) section should also contain a link to ""XPath"" page.  We can use these examples to write the documentation: - http://pmd.sourceforge.net/pmd-4.3/xpathruletutorial.html - http://techtraits.com/programming/2011/11/06/custom-pmd-rules-using-xpath.html  The main idea of ""Suppressions"" section is to collect all information on suppression models in future (annotation-based, old suppression model, etc) to make it easy for the user to find the required information. ""Filters"" section should contain the information about filters as Checkstyle modules. We need to reduce the amount of information in the section. ""Suppressions"" section is a kind of tutorials collection.  @rnveach @romani  If you agree with the proposal, please approve the issue or extend my idea.","closed","easy,","MEZk","2018-02-07T21:15:44Z","2018-04-20T21:12:52Z"
"","5069","Intellij Idea inspection violations from 2017.2.4 or 2017.2.6","1) request TC support to upload 2017.2.4 binaries to web service 2) Resolve all new inspection problems from IDEA 2017.2.4 and with update in TC to the same version of inspections.  update to code could done in branch and wait till TC web service upload inspection binaries.  attention: update only TC or resolving inspection violation could cause problems like ""redundant suppress""","closed","miscellaneous,","romani","2017-09-04T22:15:43Z","2018-02-25T01:05:35Z"
"","5934","Remove old ant phases and configs","1) remove ant-phase-compile.xml  file https://github.com/checkstyle/checkstyle/blob/master/config/ant-phase-compile.xml generate checkstylecompilation.properties  it was added at  https://github.com/checkstyle/checkstyle/commit/86cbe5bd160285d46535c03e07a197fc542727ce#diff-703a4873b08806354b912bbfe70873a9 , actual is reason of this file is not clear. content: ``` #Thu, 14 Jun 2018 23:40:59 -0700  checkstyle.compile.version=8.11-SNAPSHOT checkstyle.compile.timestamp=Thu June 14 2018, 23\:40 PDT ```  almost the same information is stored at maven manifest file (timestamp could be taken from jar file creation date): ``` Manifest-Version: 1.0 Implementation-Title: checkstyle Implementation-Version: 8.10.1 Built-By: rivanov Specification-Title: checkstyle Implementation-Vendor-Id: com.puppycrawl.tools Created-By: Apache Maven 3.3.9 Build-Jdk: 1.8.0_162 Specification-Version: 8.10 Implementation-URL: http://checkstyle.sourceforge.net/ Main-Class: com.puppycrawl.tools.checkstyle.Main ```   2) remove build.xml  remove https://github.com/checkstyle/checkstyle/blob/master/config/build.xml","closed","miscellaneous,","romani","2018-06-16T04:32:45Z","2018-06-17T04:07:17Z"
"","5973","SuppressWithNearbyCommentFilter: update document and examples on when it is appropriate to use","/var/tmp$ javac Test.java ``` (no output) ``` /var/tmp$ cat Test.java ``` class Test {      private interface SomeRepository {         void foo();         void bar();     }      //@SuppressWarnings(""checkstyle:checkfoobar"")     public void Test(SomeRepository repository) {         // CSIGNORE: checkfoobar         repository.foo();         // CSIGNORE: checkfoobar         repository.bar();     }  } ``` /var/tmp$ cat config.xml ```                                                                                                                                                       ``` /var/tmp$ java -Duser.language=en -Duser.country=US -jar checkstyle-8.10.1-all.jar -c config.xml Test.java ``` Starting audit... [ERROR] /var/tmp/Test.java:13: Forbidden use of repository.bar(). Use foo() instead! [checkfoobar] Audit done. Checkstyle ends with 1 errors. ``` ---------------  **What I tried to do:** I would like to suppress a custom RegexpSingleline-check for a specific line of code through use of the ""SuppressWithNearbyCommentFilter"" filter that listens on ""CSIGNORE: ..."" comments. After that failed, I tried to use the ""systemout"" example configuration [from the documentation](http://checkstyle.sourceforge.net/config_filters.html#SuppressWithNearbyCommentFilter) which showed the same issue.  **What I expected to happen:** 1) The custom regexp check with id ""checkfoobar"" should report a call to repository.bar() as error.  2) Uncommenting the `@SuppressWarnings(""checkfoobar"")` annotation will suppress all ""checkfoobar"" checks 3) For the calls with a ""CSIGNORE"" comment in the previous line, the error should be suppressed.  **What happens actually:** 1) :white_check_mark: The custom check is working as expected,  2) :white_check_mark: `@SuppressWarnings(""checkfoobar"")` will suppress the ""checkfoobar"" check 3)  :no_entry: ""CSIGNORE: checkfoobar"" comments have no effect.   A test with the older Checkstyle versions 8.2 and 8.8 had the same issue.  **Additional information:** - The official sample configs for SuppressWithNearbyCommentFilter  at http://checkstyle.sourceforge.net/config_filters.html#SuppressWithNearbyCommentFilter do not work as well (suppressed lines are reported as errors). - The provided regex for ""commentFormat"" seems to be working properly (run here: https://regex101.com/r/BA9Y01/1/) --------------","closed","miscellaneous,","lukaseckert","2018-06-27T14:38:25Z","2018-07-14T03:29:08Z"
"","5281","NewlineAtEndOfFile fails for one file but passes for another","/var/tmp $ javac YOUR_FILE.java /var/tmp $ cat YOUR_FILE.java  Attached files (this seems to be Unicode issue because according to many text comparing tools those files are the same) [gateway.zip](https://github.com/checkstyle/checkstyle/files/1491725/gateway.zip)  /var/tmp $ cat config.xml  ``````  Sppresion ```","closed","","igorwojda","2017-11-21T15:01:47Z","2017-11-21T16:35:14Z"
"","5269","Incompability between javadoc parser and checkstyle parser","/var/tmp $ javac TestClass.java (no errors)  /var/tmp $ cat Test.java ``` /**  * A paragraph with list.  * item  *   */ public interface Test { } ```  /var/tmp $ cat config.xml ```                ```  /tmp$ java -Duser.language=en -Duser.country=US -jar ~/Downloads/checkstyle-8.4-all.jar -c TestConfig.xml Test.java ``` Starting audit... Audit done. ```  /tmp$ javadoc Test.java ``` Loading source file Test.java... Constructing Javadoc information... Standard Doclet (Next) version 9-internal Building tree for all the packages and classes... Test.java:5: error: unexpected end tag:   * 1    ^ Generating ./Test.html... Generating ./package-frame.html... Generating ./package-summary.html... Generating ./package-tree.html... Generating ./constant-values.html... Building index for all the packages and classes... Generating ./overview-tree.html... Generating ./index-all.html... Generating ./deprecated-list.html... Building index for all classes... Generating ./allclasses-frame.html... Generating ./allclasses-noframe.html... Generating ./index.html... Generating ./help-doc.html... 1 error ``` --------------  The javadoc tool is uses an ancient HTML4 parser and stuck with it for compatibility reasons. It does not allow non-inline tags in the contents of a paragraph. As the result, the closing paragraph tag is unexpected and treated as an error. Also, there may be some other incompatibilities.  The checkstyle javadoc parser should be bug-compatible with the javadoc tool parser. Otherwise, it is possible that the code whis is correct for checkstyle will break the build.","closed","","pbludov","2017-11-17T02:28:29Z","2017-11-18T03:28:27Z"
"","5881","ImportOrder: False positive for multiline imports","/var/tmp $ javac TestClass.java  /var/tmp $ cat TestConfig.xml ```                          ```  /var/tmp $ cat TestClass.java ``` import                           // OK java.awt.Button; import java.awt.Dialog           // OK     ; import                           // violation java.awt.Frame; import java                      // OK     .awt.event.     ActionEvent     ; import java.io.File;             // OK import                           // violation   static java.awt.Button.ABORT; import static                    // violation     java.io.File.createTempFile; import static javax.swing        // OK     .WindowConstants.*;  public class TestClass { } ```  /var/tmp $ RUN_LOCALE=""-Duser.language=en -Duser.country=US"" /var/tmp $ java $RUN_LOCALE -jar checkstyle-8.10-all.jar -c TestConfig.xml TestClass.java ``` Starting audit... [ERROR] TestClass.java:6: Extra separation in import group before 'java.awt.Frame' [ImportOrder] [ERROR] TestClass.java:13: Extra separation in import group before 'java.awt.Button.ABORT' [ImportOrder] [ERROR] TestClass.java:15: Extra separation in import group before 'java.io.File.createTempFile' [ImportOrder] Audit done. Checkstyle ends with 3 errors. ```  There should be no violations.  At least, there must be some logic. Now it looks like violations happen randomly.","closed","approved,","pbludov","2018-06-03T07:06:51Z","2018-06-30T05:21:19Z"
"","5221","HiddenField should allow setting a name for builder-style methods","/var/tmp $ javac ApiResourcePurposeDtoBuilder.java  /var/tmp $ cat ApiResourcePurposeDtoBuilder.java  ``` public class ApiResourcePurposeDtoBuilder {     private Long id;      public ApiResourcePurposeDtoBuilder withId(long id) {         this.id = id;         return this;     }      public ApiResourcePurposeDtoBuilder id(long id) {         this.id = id;         return this;     } } ```  /var/tmp $ cat config.xml  ```                                                                                          ```  /var/tmp $ java -Duser.language=en -Duser.country=US -jar checkstyle-X.XX-all.jar -c config.xml ApiResourcePurposeDtoBuilder.java ``` Starting audit... [ERROR] /tmp/ApiResourcePurposeDtoBuilder.java:4:53: 'id' hides a field. [HiddenField] [ERROR] /tmp/ApiResourcePurposeDtoBuilder.java:9:49: 'id' hides a field. [HiddenField] Audit done. Checkstyle ends with 2 errors. ```  ---------------  I would expect to have an option for filtering out certain methods from hidden field check. So I woulnd't see any error message for the class above.  I think there are two options required, one for prefix (in the above case `with` would be the prefix) and one for excluding a method that has exact same name as the field. Such methods should be allowed to have a hidden field. Both of those are frequently used in builders.  Another option is doing an analysis of the method and checking for a field `id`, that the method has `this.id`. If such string exists inside it, then consider ignoring HiddenField check in such method. This would be most desired but I think it would required more work.","closed","","krzyk","2017-10-23T18:50:42Z","2017-11-19T01:25:12Z"
"","5083","Add a check to ban use of specified methods and constructors","/var/tmp $ javac -cp ~/.m2/repository/junit/junit/4.12/junit-4.12.jar BannedConstructor.java InputBanishedMethods.java  /var/tmp $ cat BannedConstructor.java InputBanishedMethods.java ```java package com.puppycrawl.tools.checkstyle.checks.misc.banishedmethods;  public class BannedConstructor {   public BannedConstructor(String str) {    } } //////////////////////////////////////////////////////////////////////////////// // Test case file for checkstyle. // Created: 2017 //////////////////////////////////////////////////////////////////////////////// package com.puppycrawl.tools.checkstyle.checks.misc.banishedmethods;  import org.junit.Assert;  /**  * Test case for detecting usage of banished methods & constructors.  * @author Raghav Kumar Gautam  **/ class InputBanishedMethods {     /**      * no param constructor      */     InputBanishedMethods() {         System.exit(1);         BannedConstructor bannedConstructor = new BannedConstructor(""oneArgument"");     }      /**      * non final param method      */     void method(String s) {         Assert.assertTrue(1 != 2);         Assert.assertTrue(""Good assert with some reason."", true);     } ``` ---------------  With the about java file. I want to be able to run checkstyle and get error that: 1. System.exit() should not be called. 2. Assert.asserTrue with 1 argument should not be called.  I could not find a simple and robust way to do this. So, I have written a check that can do this. I want to contribute it back. Others have discussed this on stackoverflow as well: https://stackoverflow.com/questions/8416870/checkstyle-rule-to-prevent-invocation-of-some-methods-and-constructors  A sample output for above example is:  /var/tmp $ cat config.xml                                                                                      /var/tmp $ cat banished_methods.xml                         /var/tmp $ java -jar checkstyle-X.XX-all.jar -c config.xml InputBanishedMethods.java  Starting audit... [ERROR] /Users/raghav/play/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/misc/banishedmethods/InputBanishedMethods.java:19:20: Call to exit with 1 arguments is banished. [BanishedMethods] [ERROR] /Users/raghav/play/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/misc/banishedmethods/InputBanishedMethods.java:20:47: Call to BannedConstructor with 1 arguments is banished. [BanishedMethods] [ERROR] /Users/raghav/play/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/misc/banishedmethods/InputBanishedMethods.java:27:26: Call to assertTrue with 1 arguments is banished. [BanishedMethods] Audit done. Checkstyle ends with 3 errors.","closed","","raghavgautam","2017-09-06T18:15:30Z","2017-09-08T18:36:19Z"
"","5248","IndentationCheck: enum values with arguments is inconsistent and wrong","/var/tmp $ cat YOUR_FILE.java ```java public enum LambdasAndEnums {   TEST(""the lambda should be indented directly below this string"",        (x) -> x,             ""this string isn't indented correctly, nor is the number below"",     5) } ```  /var/tmp $ cat config.xml ```xml                                                                                                               ``` /var/tmp $ java -jar checkstyle-8.4-all.jar -c config.xml YOUR_FILE.java ``` `lambda arguments` has incorrect indentation level 7; its expected level should be 6. ``` ---------------  I expect the line with the lambda to be just fine, since it's aligned with the argument above it.  I expect the second string and the number argument to generate indentation errors since they're clearly unaligned to anything.  But neither of these are the case.  Instead, if I outdent the lambda line by one character, so that its opening paren is (incorrectly) aligned with the opening paren of the `TEST` enum's constructor call, then it doesn't get an error.  And nothing I do seems to make the second string or number generate an error.  This inconsistency has bitten one of my students, whose actual use case was somewhat more complicated.  He was sufficiently confused that he thought the problem was the style checker can't handle nested lambdas (i.e., he had a curried function `(arg1) -> (arg2) -> (arg3) -> answer`), but it seems from this reduced case that the problem really lies with enum values with constructor arguments.","closed","indentation,","blerner","2017-11-03T15:11:06Z","2020-10-04T19:08:21Z"
"","5001","JavadocParagraph: Allow disable empty line check","---------------  I am using [PegdownDoclet](https://github.com/Abnaxos/markdown-doclet) in my Java project, thus I could safely document JavaDoc in Markdown format, in which case the `` tag is not required.  However I found checkstyle always report:  ``` Empty line should be followed by  tag on the next line.  ```  And I can't find any configuration to disable it.  --------------  This request is to have checkstyle provides a configuration to disable the empty line check","open","","greenlaw110","2017-08-25T05:17:38Z","2018-03-18T19:23:29Z"
"","5522","False Positive: checkstyle:com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationOnSameLineCheck","**Checkstyle version**: 8.7 **Tokens**: CLASS_DEF,INTERFACE_DEF,ENUM_DEF,METHOD_DEF,CTOR_DEF,VARIABLE_DEF  This code triggers a violation for rule  ""Annotation On Same Line"":  ```     @SuppressWarnings(""squid:S4142"")     private AccessRequestDto(Parcel in) {         this(in.readString(), in.readString(), new AccessRequestScheduleDto(in), in.readString(), in.readString());     } ``` ---------------  It is not possible to follow the rule (code below does not compile, this must be the first statement in a constructor body):  ```     private AccessRequestDto(Parcel in) {         @SuppressWarnings(""squid:S4142"")         this(in.readString(), in.readString(), new AccessRequestScheduleDto(in), in.readString(), in.readString());     } ``` --------------  Suggestion: Don't trigger if the line causing a violation starts with `this(`","closed","","alixwar","2018-02-13T09:24:42Z","2018-02-13T14:54:41Z"
"","5197","Checkstyle fails when using Lombok's @FieldDefaults","**/var/tmp $ cat YOUR_FILE.java** ``` @FieldDefaults(makeFinal = true, level = AccessLevel.PRIVATE) public class Foo {   String secretString; } ```  **/var/tmp $ cat config.xml** ```                                  ```  **/var/tmp $ java -Duser.language=en -Duser.country=US -jar ./checkstyle-8.3-all.jar foo.java -c test.xml** ``` Starting audit... [ERROR] ...../foo.java:5:3: Missing a Javadoc comment. [JavadocVariable] Audit done. Checkstyle ends with 1 errors. ```  ---------------  **Expected Behavior**: No errors should occur.  --------------","closed","","ErrorsAndGlitches","2017-10-17T16:47:17Z","2017-11-19T02:20:45Z"
"","5271","Update InputFinalLocalVariableBreak.java","(int) Math.random() always returns 0.  Mandatory to understand and do: 0) The issue you are trying to fix/resolve has to have the ""approved"" label. 1) Put in the description of Pull Request the reference to an issue if it exists. Example: ""Issue: #XXXXXX"" 2) Commit message should adhere to the following rules:    a) Must match one of the following patterns:\n""       ^Issue #\\d+: .*$       ^Pull #\\d+: .*$       ^(minor|config|infra|doc|spelling): .*$    b) It contains only one line of text    c) Must not end with a period, space, or tab    d) Commit message should be less than or equal to 200 characters  To avoid multiple iterations of fixes and CIs failures, please read http://checkstyle.sourceforge.net/contributing.html  ATTENTION: We are not merging Pull Requests that are not passing our CIs, but we will help to resolve issues.  Thanks for reading, remove whole this message and type what you need.","closed","","kluever","2017-11-17T18:40:47Z","2017-11-17T22:21:17Z"
"","5511","HeaderCheck: fails with empty lines","'/var/tmp $ javac Test.java':  `/var/tmp $ cat Test.java`:  ``` /*   -----------------------------------------------------------------------------------     example     Copyright (c) 2001-2018 XXX    ----------------------------------------------------------------------------------- */  public class Test {    public Test() {   } } ```  `/var/tmp $ cat checkstyle.header`:  ``` /*   -----------------------------------------------------------------------------------     example     Copyright (c) 2001-2018 XXX    ----------------------------------------------------------------------------------- */ ```  `/var/tmp $ cat config.xml`:  ```                       ```  `/var/tmp $ java -Duser.language=en -Duser.country=US -jar checkstyle-8.8-all.jar -c config.xml Test.java`:  ``` Feb 05, 2018 8:00:11 PM com.puppycrawl.tools.checkstyle.Main runCli FINE: Checkstyle debug logging enabled Feb 05, 2018 8:00:11 PM com.puppycrawl.tools.checkstyle.Main runCli FINE: Running Checkstyle with version: 8.8 Starting audit... [ERROR] /data1/home/martin/x_checkstyle/Test.java:3: Line does not match expected header line of '^$'. [Header] Audit done. Checkstyle ends with 1 errors. ```  ---------------  I found this issue upgrading from version 6.7 to 8.8. The Header check does not match the empty lines like expected. Looking through the CheckStyle source I would guess that the AbstractHeaderCheck method loadHeader is converting empty lines to ""^$"" what cannot work with the equals in the HeaderCheck isMatch method.","closed","easy,","mh000","2018-02-05T19:10:12Z","2018-04-15T04:36:20Z"
"","5260","Multiple javadoc comments are handled altogether.","$ javac /tmp/Transforms.java (no error)  $ cat /tmp/Transforms.java ``` /*  * reserved comment block  * DO NOT REMOVE OR ALTER!  */ /*  * Copyright  2003-2004 The Apache Software Foundation.  *  *  Licensed under the Apache License, Version 2.0 (the ""License"");  *  you may not use this file except in compliance with the License.  *  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an ""AS IS"" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  *  */ package Test;  /**  * A container for ds:Transforms.  *  * @author Axl Mattheus  * @see com.sun.org.apache.xml.internal.security.encryption.CipherReference  */ public interface Transforms {     /**      * Returns an Iterator over all the transforms contained in      * this transform list.      *      * @return all transforms.      */     /* Iterator getTransforms(); */      /**      * Adds a ds:Transform to the list of transforms.      *      * @param transform.      */     /* void addTransform(Transform transform); */      /**      * Removes the specified transform.      *      * @param transform.      */         /*    void removeTransform(Transform transform); */          /**          * Temporary method to turn the XMLEncryption Transforms class          * into a DS class.  The main logic is currently implemented in the          * DS class, so we need to get to get the base class.          *           * Note This will be removed in future versions      * @return          */          Transforms getDSTransforms(); } ```  $ cat /tmp/TestConfig.xml  ```                            ```  $ java -jar ~/Downloads/checkstyle-8.4-all.jar -c /tmp/TestConfig.xml /tmp/Transforms.java  ``` Starting audit... [ERROR] /tmp/Transforms.java:41: Javadoc comment at column 23 has parse error. Details: mismatched input '.' expecting  while parsing JAVADOC [SummaryJavadoc] [ERROR] /tmp/Transforms.java:48: Javadoc comment at column 23 has parse error. Details: mismatched input '.' expecting  while parsing JAVADOC [SummaryJavadoc] [ERROR] /tmp/Transforms.java:56: Unclosed HTML tag found: p [SummaryJavadoc] Audit done. Checkstyle ends with 3 errors. ```  $ java -jar ~/Downloads/checkstyle-8.4-all.jar -J /tmp/Transforms.java  ``` Exception in thread ""main"" java.lang.IllegalArgumentException: [ERROR:41] Javadoc comment at column 23 has parse error. Details: mismatched input '.' expecting  while parsing JAVADOC 	at com.puppycrawl.tools.checkstyle.DetailNodeTreeStringPrinter.parseJavadocAsDetailNode(DetailNodeTreeStringPrinter.java:69) 	at com.puppycrawl.tools.checkstyle.AstTreeStringPrinter.parseAndPrintJavadocTree(AstTreeStringPrinter.java:132) 	at com.puppycrawl.tools.checkstyle.AstTreeStringPrinter.printJavaAndJavadocTree(AstTreeStringPrinter.java:114) 	at com.puppycrawl.tools.checkstyle.AstTreeStringPrinter.printJavaAndJavadocTree(AstTreeStringPrinter.java:118) 	at com.puppycrawl.tools.checkstyle.AstTreeStringPrinter.printJavaAndJavadocTree(AstTreeStringPrinter.java:118) 	at com.puppycrawl.tools.checkstyle.AstTreeStringPrinter.printJavaAndJavadocTree(AstTreeStringPrinter.java:118) 	at com.puppycrawl.tools.checkstyle.AstTreeStringPrinter.printJavaAndJavadocTree(AstTreeStringPrinter.java:118) 	at com.puppycrawl.tools.checkstyle.AstTreeStringPrinter.printJavaAndJavadocTree(AstTreeStringPrinter.java:118) 	at com.puppycrawl.tools.checkstyle.AstTreeStringPrinter.printJavaAndJavadocTree(AstTreeStringPrinter.java:97) 	at com.puppycrawl.tools.checkstyle.Main.runCli(Main.java:411) 	at com.puppycrawl.tools.checkstyle.Main.main(Main.java:210) ```  $ javadoc /tmp/Transforms.java ``` Loading source file /tmp/Transforms.java... Constructing Javadoc information... Standard Doclet version 1.8.0_151 Building tree for all the packages and classes... Generating ./Test/Transforms.html... /tmp/Transforms.java:58: warning: no description for @return      * @return        ^ 1 warning ``` ---------------  Only the last javadoc comment should be parsed. All the rest must be ignored.  May be related to https://github.com/checkstyle/checkstyle/issues/43 --------------","closed","javadoc,","pbludov","2017-11-14T04:09:41Z","2017-12-02T14:35:04Z"
"","5967","Issue #5949: fixses for toarray and suppressions","#5949  TC is upgraded to 2018.1.4 for Pull request only","closed","","romani","2018-06-24T18:47:29Z","2018-06-24T23:04:05Z"
"","5924","Issue #5916: extend eclpipce compilation path with all folders","#5916  test resources were added to all suppressions, to let us continuously resolve problems.","closed","","romani","2018-06-15T04:10:11Z","2018-06-15T06:35:52Z"
"","5937","Issue #5916: compile noncompiled resources","#5916","closed","","romani","2018-06-16T08:07:18Z","2018-06-16T17:39:30Z"
"","5833","Update appveyor.yml","#5831 .  Test","closed","","romani","2018-05-25T14:45:47Z","2018-05-25T22:50:55Z"
"","5804","I5791 wercker shippable2","#5791","closed","","romani","2018-05-17T20:13:16Z","2018-05-17T22:59:18Z"
"","5797","Issue #5791: put in suppression all files that have violation","#5791","closed","","romani","2018-05-16T17:38:13Z","2018-05-16T20:23:35Z"
"","5795","Issue #5791: wrap lines above 100 symbols","#5791","closed","","romani","2018-05-14T21:53:19Z","2018-05-14T23:21:33Z"
"","5786","minor: disable maven site.xml validation till #5785","#5785","closed","","romani","2018-05-10T21:44:25Z","2018-05-10T23:20:36Z"
"","5733","Issue #5732: let spellchecker tolerate case jitter","#5732","closed","","jsoref","2018-04-15T03:06:43Z","2018-04-15T09:34:42Z"
"","5730","Issue #5719: Switch to git ls-files and exclude from contrib","#5719  I should explain that the hg locate fallback is for my personal use -- I manage github work using mercurial. It shouldn't impact the normal flow.","closed","","jsoref","2018-04-15T02:57:03Z","2018-04-15T05:55:05Z"
"","5703","Issue #5701: Hide details from spell checker word family output","#5701","closed","","jsoref","2018-04-08T15:49:39Z","2018-04-08T22:13:09Z"
"","5698","Issue #5677: Refactor PackageObjectFactoryTest.testCreateModuleWithNonExistName","#5677","closed","","surajumang","2018-04-08T08:35:48Z","2018-04-22T16:39:26Z"
"","5867","config: make previous releases documentation accessible from web (#5601)","#5601","closed","","romani","2018-05-29T05:40:47Z","2018-05-29T13:35:30Z"
"","5517","minor: remove unsupported checks from SuppressionXpathFilter xdoc","#5517   Based on https://github.com/checkstyle/checkstyle/pull/5464#issuecomment-362374643 and https://github.com/checkstyle/checkstyle/pull/5464#issuecomment-363918259 I removed unsupported checks from SuppressionXpathFilter xdoc.  Till https://github.com/checkstyle/checkstyle/pull/5509","closed","","MEZk","2018-02-09T22:24:31Z","2018-02-10T17:38:46Z"
"","5514","minor: fix typo in SuppressionXpathFilter xdoc","#5514","closed","","MEZk","2018-02-07T21:41:29Z","2018-02-08T02:09:20Z"
"","5490","minor: Created Contributing.md","#5488","closed","","varunu28","2018-01-26T16:04:16Z","2018-03-18T19:04:05Z"
"","5495","Issue #5452: Avoid Wercker failures in not updated PRs after release","#5452  depends on https://github.com/checkstyle/contribution/pull/277","closed","","Vladlis","2018-01-28T14:27:19Z","2018-03-30T13:39:27Z"
"","5379","Issue #5286: remove compile phase to make it same as pgjdbc travis","#5286","closed","","romani","2017-12-22T22:01:29Z","2017-12-22T22:35:27Z"
"","5292","Issue #5278: fix NullPointerException when relative path is used to run CLI","#5278","closed","","romani","2017-11-24T15:17:08Z","2017-12-21T01:47:04Z"
"","5211","minor: Fix typo in SuppressionCommentFilter xdoc","#5211","closed","","MEZk","2017-10-21T12:28:15Z","2017-10-22T14:27:48Z"
"","5360","Issue #5208: move all version from profiles to pluginManagment","#5208","closed","","romani","2017-12-14T20:59:34Z","2017-12-14T23:23:57Z"
"","5070","Issue #5040: Rename JavadocLexer rule to a more meaningful name","#5040","closed","","Vladlis","2017-09-04T22:20:13Z","2017-09-06T10:30:14Z"
"","5213","Issue #4841: Add SuppressWithPlainTextCommentFilter","#4841   1. Implemented SuppressWithPlainTextCommentFilter 2. Added UTs. 3. Added javadoc and xdoc.  The current implementation works only with single line comments.  -------------------  In my opinion, we may apply factory pattern to create the instances of Suppression class. The class constructor has some messy logic (same is for SuppressionCommentFilter). I noticed that almost all Checkstyle checks contains too many if-else logic. No abstraction, no OOP at all.   @romani, some [quotes from your blog](http://roman-ivanov.blogspot.ru/2015/10/software-quality-award-comment-for.html): > I do not share fanatic following of pure OOP designs, I am more in favor of changes to be more functional. Any re-factoring in favor of OOP is not possible without braking compatibility with plugins/extensions.  I agree with you, however as we decided to keep the whole check logic inside one class, why we cannot use some OOP practises in the scope of this particular class if they are not visible outside?  > Utility is good as it is stateless realization of algorithms.  Utilities are good if they implement small algorithms, but the logic of Checkstyle checks overcame that border. The users always require new features and changes, which will lead us to the code which is very hard to maintain as it is full of if-else-if-else logic, strange computations.   It is just my opinion, something to think about.","closed","","MEZk","2017-10-21T13:38:03Z","2017-12-29T15:16:19Z"
"","5908","Issue 3332 final","#3332. Added `rb` `rt` `rtc` and `rp` HTML tags.","closed","","voidfist","2018-06-11T05:02:14Z","2018-06-14T11:51:37Z"
"","5443","Javadoc parse exceptions are hard to understand","![image](https://user-images.githubusercontent.com/812984/34641149-56ec7f84-f2b4-11e7-86bf-0c44c2e027de.png)  ![image](https://user-images.githubusercontent.com/812984/34641150-76e3746e-f2b4-11e7-8220-adb78b7fc3ea.png)  @ps-sp and @Vladlis  We need to update message to ask user to read specification of javadoc syntax .... nobody inthis world know it, it took me a while to understand what is missed and how to make Check work.","open","approved,","rnveach","2018-01-07T15:05:08Z","2018-01-07T16:06:36Z"
"","5544","How to check align fields in columns?","![image](https://user-images.githubusercontent.com/19563352/36648892-c5f168c6-1ad3-11e8-8142-c2ac8a5abaa6.png)  I don't know whether Checkstyle can check the align fields in columns. If Checkstyle can check it, I want to know how to do it.  thx","closed","new module,","littlefisher666","2018-02-26T01:05:22Z","2018-02-28T00:49:30Z"
"","5988","doc: Fix download URLs","","closed","","mernst","2018-07-01T20:01:03Z","2018-07-02T00:03:02Z"
"","5976","config: bump ant to 1.10.4","","closed","","romani","2018-06-28T02:01:52Z","2018-06-28T20:42:11Z"
"","5975","config: bump jgit to 5.0.1.201806211838-r","","closed","","romani","2018-06-28T02:01:39Z","2018-06-28T20:41:48Z"
"","5961","config: bump org.eclipse.jgit to 5.0.0.201806131550-r","","closed","","romani","2018-06-23T00:06:50Z","2018-06-23T01:55:22Z"
"","5960","config: bump equalsverifier to 2.4.7","","closed","","romani","2018-06-23T00:04:27Z","2018-06-23T01:28:52Z"
"","5959","config: spotbugs-maven-plugin 3.1.5","","closed","","romani","2018-06-23T00:04:16Z","2018-06-23T01:27:52Z"
"","5958","config: bump maven-failsafe-plugin to 2.22.0","","closed","","romani","2018-06-23T00:00:48Z","2018-06-23T01:27:27Z"
"","5957","config: bump maven-surefire-plugin to 2.22.0","","closed","","romani","2018-06-22T23:57:05Z","2018-06-23T00:41:42Z"
"","5955","Test for Jenkins pull request build","","closed","","daniilyar","2018-06-21T22:53:19Z","2018-06-21T23:09:30Z"
"","5952","Test commit to test Jenkins PR builds. Don't Merge me!","","closed","","daniilyar","2018-06-20T20:54:08Z","2018-06-21T21:55:49Z"
"","5905","config: bump jgit to 5.0.0.201805151920-m7","","closed","","romani","2018-06-11T03:58:09Z","2018-06-11T05:04:03Z"
"","5888","config: let circleci skip build then update is only other ci config","","closed","","romani","2018-06-04T06:25:54Z","2018-06-04T16:04:55Z"
"","5875","config: bump maven-site to 3.7.1","","closed","","romani","2018-05-31T01:12:35Z","2018-05-31T02:25:10Z"
"","5874","config: bump maven-resources-plugin to 3.1.0","","closed","","romani","2018-05-31T01:02:37Z","2018-05-31T02:26:32Z"
"","5873","config: bump maven-javadoc-plugin to 3.0.1","","closed","","romani","2018-05-31T00:56:22Z","2018-05-31T02:13:18Z"
"","5872","config: bump maven-dependency-plugin to 3.1.1","","closed","","romani","2018-05-31T00:54:09Z","2018-05-31T01:39:20Z"
"","5871","config: bump spotbugs-maven-plugin to 3.1.3.1","","closed","","romani","2018-05-31T00:45:22Z","2018-05-31T01:36:38Z"
"","5870","config: let codeship run on branches to be used in PRs from the same repo","","closed","","romani","2018-05-30T01:10:52Z","2018-05-30T01:18:40Z"
"","5860","config: print werkcer command to output before execution","","closed","","romani","2018-05-27T14:03:42Z","2018-05-27T14:47:39Z"
"","5859","minor: test","","closed","","rnveach","2018-05-27T13:42:30Z","2018-05-27T14:55:08Z"
"","5856","Issue #5832: Code samples for Naming Checks","","closed","","tsunghanjacktsai","2018-05-27T09:05:40Z","2018-06-01T07:56:13Z"
"","5853","config: try pitest on circle-ci","","closed","","romani","2018-05-27T02:12:28Z","2018-05-27T05:41:27Z"
"","5845","config: update wercker skips","","closed","","romani","2018-05-26T18:23:48Z","2018-05-26T18:42:17Z"
"","5844","config: move link-check execution to travis cron, to reuse shippable for smth else","","closed","","romani","2018-05-26T17:51:30Z","2018-05-26T18:41:35Z"
"","5843","config: bump guava to 25.1","","closed","","romani","2018-05-26T17:35:31Z","2018-05-26T18:37:24Z"
"","5842","config: bump system-rules to 1.18.0","","closed","","romani","2018-05-26T17:27:38Z","2018-05-26T18:37:03Z"
"","5830","config: restore site build verification in Travis","","closed","","romani","2018-05-25T13:15:24Z","2018-05-25T21:09:47Z"
"","5822","minor: German translation fixes","","closed","","Bananeweizen","2018-05-20T07:41:43Z","2018-05-31T16:23:24Z"
"","5789","minor: fix typos","","closed","","Bananeweizen","2018-05-12T10:06:26Z","2018-05-12T18:41:54Z"
"","5776","config: moved disallows to be first in import control test","","closed","","rnveach","2018-05-05T00:50:56Z","2018-05-05T14:18:59Z"
"","5773","conig: bump pitest to 1.4.0","","closed","","romani","2018-05-04T19:13:47Z","2018-05-04T21:14:32Z"
"","5745","config: removed unnecessary suppressions","","closed","","rnveach","2018-04-19T23:58:25Z","2018-04-20T01:46:47Z"
"","5731","minor: grammar fix for pr template","","closed","","jsoref","2018-04-15T03:00:06Z","2018-04-15T04:42:55Z"
"","5700","conig: moving circleci commands to shell file, to run on local easily","","closed","","romani","2018-04-08T15:41:19Z","2018-04-08T16:27:08Z"
"","5699","config: move groovy to PATH at circleci","","closed","","romani","2018-04-08T14:55:39Z","2018-04-08T15:14:18Z"
"","5689","testing","","closed","","romani","2018-04-05T00:01:16Z","2018-04-05T23:17:41Z"
"","5688","config: make circleci parallel multiline","","closed","","romani","2018-04-04T22:31:11Z","2018-04-05T20:28:09Z"
"","5652","Checking and see the build status","","closed","","Taher-Ghaleb","2018-03-27T16:15:41Z","2018-03-27T22:46:23Z"
"","5651","Breaking the build","","closed","","Taher-Ghaleb","2018-03-27T16:15:26Z","2018-03-27T21:32:54Z"
"","5636","doc: fixed improper dtd comment examples","","closed","","rnveach","2018-03-22T20:14:11Z","2018-03-22T23:55:45Z"
"","5631","minor: extension of output for .ci/travis/xtr_releasenotes-gen.sh","","closed","","romani","2018-03-22T00:32:08Z","2018-03-22T00:44:42Z"
"","5628","config: add suppressions for indetation and javadoc to avoid asking pitest sharing from contributors","","closed","","romani","2018-03-20T15:10:06Z","2018-03-21T17:35:48Z"
"","5626","Correct some words in the German translation","","closed","","matthias-ronge","2018-03-20T08:43:53Z","2018-03-22T13:11:29Z"
"","5609","config: bumps versons of jgit and equalsverifier","","closed","","romani","2018-03-14T19:48:57Z","2018-03-14T21:40:17Z"
"","5566","config: upgraded sevntu to 1.28.0","","closed","","rnveach","2018-02-28T15:17:35Z","2018-02-28T17:04:50Z"
"","5535","config: move all shippable launches in shell file, redesign of ignored items","","closed","","romani","2018-02-22T16:37:07Z","2018-02-24T15:10:48Z"
"","5501","config: use only test phase for pitest execution at shippable","","closed","","romani","2018-01-29T23:16:41Z","2018-01-30T01:01:09Z"
"","5461","config: bump sevntu.checkstyle version to 1.27.0","","closed","","rnveach","2018-01-14T14:42:25Z","2018-01-14T20:58:39Z"
"","5451","minor: clean up folder in werckerafter build as all other do","","closed","","romani","2018-01-10T01:02:16Z","2018-01-10T19:35:33Z"
"","5424","Minor: Use correct indention in google_checks.xml","","closed","miscellaneous,","mueller-ma","2018-01-05T12:16:03Z","2018-01-06T01:16:25Z"
"","5421","Update Dependencies","","closed","","rnveach","2018-01-03T19:46:04Z","2018-01-03T22:31:23Z"
"","5408","minor: add '-e' to all mvn executions","","closed","","romani","2017-12-31T01:02:32Z","2017-12-31T03:13:22Z"
"","5382","config: move all wercker commands to wercker.sh to ease testing on local","","closed","","romani","2017-12-22T22:45:00Z","2017-12-23T00:01:30Z"
"","5380","config: move all wercker commands to wercker.sh to ease testing on local","","closed","","romani","2017-12-22T22:03:12Z","2017-12-22T22:41:21Z"
"","5378","config: bump saxon version to 9.8.0-7","","closed","","romani","2017-12-21T17:24:44Z","2017-12-21T18:32:52Z"
"","5348","config: try coverageThreshold 100 for all profiles","","closed","","romani","2017-12-12T02:21:26Z","2017-12-12T14:15:10Z"
"","5347","config: enforce uncovered validation for pitest","","closed","","romani","2017-12-12T02:13:43Z","2017-12-12T14:17:42Z"
"","5320","config: bump jgit to 4.9.1.201712030800-r","","closed","","romani","2017-12-05T01:15:37Z","2017-12-05T11:28:39Z"
"","5319","config: bump equalsverifier to 2.4","","closed","","romani","2017-12-05T01:12:40Z","2017-12-05T11:28:15Z"
"","5318","config: bump Saxon-HE to 9.8.0-6","","closed","","romani","2017-12-05T01:09:55Z","2017-12-05T11:27:51Z"
"","5317","config: bump version commons-io to 2.6","","closed","","romani","2017-12-05T01:07:07Z","2017-12-05T06:23:55Z"
"","5316","config: bump guava to 23.3-jre","","closed","","romani","2017-12-05T01:00:08Z","2017-12-05T06:22:59Z"
"","5315","config: bump system-rules to 1.17.0","","closed","","romani","2017-12-05T00:53:46Z","2018-05-09T19:52:23Z"
"","5309","Revert ""infra: fix for travis:osx problem with 'shell_session_update:…","","closed","","romani","2017-12-02T00:10:22Z","2017-12-02T14:43:51Z"
"","5300","config: update Orekit to use develop branch in wercker CI","","closed","","romani","2017-11-26T14:12:15Z","2017-11-26T15:45:00Z"
"","5289","config: print changed files if sjippable CI is skipped build","","closed","","romani","2017-11-24T00:08:12Z","2017-11-24T05:52:06Z"
"","5282","minor: minimization of appveyor","","closed","","romani","2017-11-22T22:40:24Z","2017-11-23T00:12:17Z"
"","5215","config: bump guava to 23.2","","closed","","romani","2017-10-22T15:18:25Z","2017-10-22T18:41:32Z"
"","5203","config: bump forbiddenapis to 2.4.1","","closed","","romani","2017-10-18T13:58:32Z","2017-10-20T02:57:24Z"
"","5202","config: bump versions-maven-plugin to 2.5","","closed","","romani","2017-10-18T13:53:23Z","2017-10-19T15:19:02Z"
"","5201","config: bump Saxon-HE to 9.8.0-5 version","","closed","","romani","2017-10-18T13:53:17Z","2017-10-19T15:19:25Z"
"","5200","config: dump guava to 23.1-jre","","closed","","romani","2017-10-18T13:53:12Z","2017-10-19T15:19:54Z"
"","5185","Issue #5184: AbstractFileSetCheck is not thread safe because SortedSe…","","closed","","hhuijser","2017-10-09T08:50:55Z","2017-10-10T02:51:30Z"
"","5183","Issue #5182: Use ConcurrentSkipListSet because TreeSet is not thread …","","closed","","hhuijser","2017-10-09T08:27:52Z","2017-10-10T02:51:17Z"
"","5181","Issue #5179: OneStatementPerLineCheck is not thread safe","","closed","","hhuijser","2017-10-09T07:30:05Z","2017-10-10T02:51:10Z"
"","5180","Issue #5178: RequireThisCheck is not thread safe","","closed","","hhuijser","2017-10-09T07:29:22Z","2017-10-10T02:50:57Z"
"","5170","config: bump pitest to 1.2.4","","closed","","romani","2017-10-03T12:46:35Z","2017-10-07T13:30:07Z"
"","5153","config: bump powermock to 1.7.3","","closed","","romani","2017-09-28T01:14:39Z","2017-09-28T14:01:34Z"
"","5152","config: bump maven-failsafe-plugin to 2.20.1","","closed","","romani","2017-09-28T01:14:31Z","2017-09-28T14:01:10Z"
"","5151","conifg: bump maven-surefire-plugin to 2.20.1","","closed","","romani","2017-09-28T01:14:25Z","2017-09-28T04:43:58Z"
"","5087","config: bump org.eclipse.jdt.annotation to 2.1.0","","closed","","romani","2017-09-07T18:14:08Z","2017-09-07T22:28:56Z"
"","5085","minor: testing","","closed","","romani","2017-09-07T13:09:32Z","2017-09-07T14:13:28Z"
"","5081","config: switch Travis to default OS","","closed","","romani","2017-09-06T17:34:31Z","2017-09-07T00:13:01Z"
"","5072","minor: typo in constant name","","closed","","Vladlis","2017-09-05T09:16:51Z","2017-09-06T10:30:23Z"
"","5066","Pull #5066: Fix order of message parameters in DE translation file","","closed","","akurth","2017-09-04T11:13:27Z","2017-09-04T13:31:35Z"
"","5015","config: update shippable to fail if any survived is found in report","","closed","","romani","2017-08-27T00:30:00Z","2017-08-28T21:34:07Z"
"","5010","config: bump maven-assembly-plugin 3.1.0","","closed","","romani","2017-08-25T19:37:58Z","2017-08-25T21:21:31Z"
"","5009","config: bump maven-findbugs-plugin to 3.0.5","","closed","","romani","2017-08-25T19:34:20Z","2017-08-25T21:21:15Z"