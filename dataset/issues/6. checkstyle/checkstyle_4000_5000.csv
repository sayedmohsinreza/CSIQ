"#","No","Issue Title","Issue Details","State","Labels","User name","created","Updated"
"","7899","Issue #5969: Respect and expect tab width in column number check for lambda indentations","…lambda indentations  Fixes #5969 and closes #7675   I just hope to live a happy life of Minecraft modding. Thank you for this great checkstyle! https://github.com/FabricMC/fabric/pull/518/files#diff-23a850fe9b00699c6f6cd295e8ef341d","closed","","liach","2020-03-19T05:11:48Z","2020-03-27T06:55:45Z"
"","7830","config: disable in linkcheck validation of links to maven.apache.org …","…due to very frequent failures  example https://app.codeship.com/projects/124310/builds/da7ec1ec-2a72-492d-bbdf-a63c95bd8732?line=d7533835-36e5-4951-a803-14c403c32bd5&step=parallel_.ci%2Frun-link-check-plugin.sh  ``` 2020-03-11 13:48:26  system ------------ grep of linkcheck.html--BEGIN 2020-03-11 13:48:26  system https://maven.apache.org/plugins/maven-dependency-plugin/: java.net.SocketTimeoutException : Read timed out 2020-03-11 13:48:26  system https://maven.apache.org/plugins/maven-javadoc-plugin/: java.net.SocketTimeoutException : Read timed out 2020-03-11 13:48:26  system https://img.shields.io/bountysource/team/checkstyle/activity.svg?label=salt.bountysource: java.net.SocketTimeoutException : Read timed out 2020-03-11 13:48:26  system https://maven.apache.org/enforcer/maven-enforcer-plugin/: org.apache.commons.httpclient.ConnectTimeoutException : The host did not accept the connection within timeout of 6000 ms 2020-03-11 13:48:26  system https://maven.apache.org/plugins/maven-javadoc-plugin/: java.net.SocketTimeoutException : Read timed out 2020-03-11 13:48:26  system ------------ grep of linkcheck.html--END 2020-03-11 13:48:26  system Exit code:1 ```","closed","","romani","2020-03-11T14:39:07Z","2020-03-11T22:39:32Z"
"","7767","move WriteTag Check to list of javadoc Check in XpathSuppressionFilter documentation","~Child of https://github.com/checkstyle/checkstyle/issues/5777~  This issue specifically focuses on WriteTag.","closed","gsoc second issue,","rnveach","2020-03-01T16:40:08Z","2020-04-13T11:07:15Z"
"","7376","config: registering missed coverage till #7375","workaround for #7375","closed","","romani","2019-12-12T16:30:21Z","2019-12-12T16:56:52Z"
"","7042","ConstantNameCheck default pattern","With following checks.xml:  ```                      ```  ... in my Java code:  `private static int TIME_TO_LIVE_IN_SECONDS = 10;`  I get the following warning:  > Name 'TIME_TO_LIVE_IN_SECONDS' must match pattern '^[a-z][a-zA-Z0-9]*$'.  But documentation says default pattern should be: ""^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$"" See https://checkstyle.org/config_naming.html#ConstantName  Checkstyle version used: 8.23","closed","","jeankst","2019-09-04T12:40:07Z","2019-09-04T12:58:05Z"
"","7287","Regression: LineLength is no longer supported by SuppressionCommentFilter.","With checkstyle 8.23 it was possible to suppress the LineLength check using the SuppressionCommentFilter ``` $ cat Test.java  class Test {     // CHECKSTYLE.OFF: LineLength     public String veryLongLine = ""This is line of more than 50 characters.""; } $ javac -version javac 1.8.0_222 $ javac Test.java  $ cat config-8.23.xml                                                              $ RUN_LOCALE=""-Duser.language=en -Duser.country=US"" $ java $RUN_LOCALE -jar checkstyle-8.23-all.jar -c config-8.23.xml Test.java  Starting audit... Audit done. $  ```  In Checkstyle 8.24 the LineLength check was moved outside the TreeWalker and since that version the check can no longer be disabled using a comment.  So if I try the exact same thing in Checkstyle 8.26 I get this instead: ``` $ cat Test.java  class Test {     // CHECKSTYLE.OFF: LineLength     public String veryLongLine = ""This is line of more than 50 characters.""; } $ javac -version javac 1.8.0_222 $ javac Test.java  $ cat config-8.26.xml                                                         $ RUN_LOCALE=""-Duser.language=en -Duser.country=US"" $ java $RUN_LOCALE -jar checkstyle-8.26-all.jar -c config-8.26.xml Test.java  Starting audit... [ERROR] /home/nbasjes/workspace/Prive/BugReports/checkstyle-linelength/Test.java:3: Line is longer than 50 characters (found 76). [LineLength] Audit done. Checkstyle ends with 1 errors. ``` That last error should have been suppressed.  ---------------  I suspect that because the SuppressionCommentFilter is still inside the TreeWalker and the LineLength is no longer in there the filtering has been broken.  I expect a feature that still allows me to disable the LineLength check at a line level using the SuppressionCommentFilter (or something similar).","closed","","nielsbasjes","2019-11-28T14:38:41Z","2019-11-28T15:29:18Z"
"","7038","FinalLocalVariable to work with lombok","When using lombok there is simpler way to write final variables, so instead of  ```java final String foo = ""bar""; ```  We can write  ```java val foo = ""bar""; ```  Both expressions will compile to the same code, so `FinalLocalVariable` should not flag the ""lombok way"" as an error as it is a `final` variable.","closed","","bbonanno","2019-09-02T12:49:25Z","2019-09-02T16:07:08Z"
"","7549","Add option for line wrapping of method definition in Indentation module","When I have the indentation module enabled with basicOffset = 4 and lineWrappingIndentation = 8, I'd like to have this code:  ``` class Foo {     private static VeryLongType     methodName(VeryLongType parameter,             VeryLongType parameter2) {         return parameter                 .method();     } } ```  rather than  ``` class Foo {     private static VeryLongType             methodName(VeryLongType parameter,             VeryLongType parameter2) {         return parameter                 .method();     } } ``` ---------------  I'd like to have the option to configure the line wrapping indentation for field definitions separate from the line wrapping indentation for statements.  The reason for wanting this is that the method name should not align with the parameters if the parameters need to be line wrapped. Since method definitions are always at the top level, and on their own in the code, they don't need continuation indents to separate them from the next method.  --------------","open","indentation,","marquiswang","2020-02-14T16:11:44Z","2020-02-14T16:16:52Z"
"","7121","Issue #3551, a complete implementation, fixing #6680 and #7119","What has been done:  1. Issue #6680 was fixed, robustly. 2. Issue #7119 was fixed. 3. Slightly changed behavior about how to detect empty lines.  Now take comments between imports or import groups into account.","closed","awaiting changes,","gmshake","2019-09-29T11:48:17Z","2019-10-18T15:16:33Z"
"","7246","Config in yaml/json format?","What do you think about adding additional config formats, e.g Yaml ``` modules:   NeedBracesCheck:      id : testCheck      severity : ERROR ``` Json ``` {   ""modules"": [     ""NeedBracesCheck"": {        ""id"" : ""testCheck"",        ""severity"" : ""ERROR""      }   ] } ``` ?","closed","","strkkk","2019-11-09T17:32:10Z","2019-12-08T15:06:53Z"
"","7881","Issue #7605: Update examples for SingleLineJavadoc check","Website generated:  ![Screenshot (11)](https://user-images.githubusercontent.com/51456744/76866146-b681f580-6889-11ea-8c4d-6454bdc02cfb.png) ![Screenshot (12)](https://user-images.githubusercontent.com/51456744/76866157-baae1300-6889-11ea-9562-28bfd0f60305.png) ![Screenshot (13)](https://user-images.githubusercontent.com/51456744/76866166-be419a00-6889-11ea-9c54-ea542dadaff5.png)   1.) The output of default example: config.xml ```               ```  Test.java ``` public class Test {   /**@return integer value*/   public int sum(int a, int b) {     return a + b;   } } ``` ``` C:\Users\hp\Desktop>java -jar ../Downloads/checkstyle-8.29-all.jar -c config.xml Test.java Starting audit... [ERROR] C:\Users\hp\Desktop\Test.java:2: Single-line Javadoc comment should be multi-line. [SingleLineJavadoc] Audit done. Checkstyle ends with 1 errors. ```  2.) Output of non-default example for violateExecutionOnNonTightHtml config.xml ```                         ```  Test.java ``` public class Test {   /**    *@return integer value    * First    */   public int sum(int a, int b) {     return a + b;   } } //Prints violation for unclosed HTML tag. ``` ``` C:\Users\hp\Desktop>java -jar ../Downloads/checkstyle-8.29-all.jar -c config.xml Test.java Starting audit... [ERROR] C:\Users\hp\Desktop\Test.java:4: Unclosed HTML tag found: p [SingleLineJavadoc] Audit done. Checkstyle ends with 1 errors. ```  3.) Output for non-default example for ignoredTags and ignoredInlineTags config.xml ```                               ``` Test.java ``` public class Test {   /** @see #sum(int a, int b) */   public int sum(int a, int b) {     return a + b;   } } ``` ``` C:\Users\hp\Desktop>java -jar ../Downloads/checkstyle-8.29-all.jar -c config.xml Test.java Starting audit... Audit done. ``` Test.java ``` public class Test {   /** Testing class for {@link Example} */   public int sum(int a, int b) {     return a + b;   } } ``` ``` C:\Users\hp\Desktop>java -jar ../Downloads/checkstyle-8.29-all.jar -c config.xml Test.java Starting audit... [ERROR] C:\Users\hp\Desktop\Test.java:2: Single-line Javadoc comment should be multi-line. [SingleLineJavadoc] Audit done. Checkstyle ends with 1 errors. ``` ```","closed","","ritvij14","2020-03-17T14:42:35Z","2020-03-20T13:27:29Z"
"","7809","Incorrect lambda indentation","We're using double indentation for wrapping function calls, however lambdas seem to have some issue with it.  ```         return dsl.select(...)             .from(...)             .where(...)             .fetch()             .stream()             .filter(...)             .collect(                     Collectors.groupingBy(                             record -> converter.apply(record.get(getItemField())),                             Collectors.toMap(...))); ``` Flags ``` [WARNING] :[] (indentation) Indentation: 'lambda arguments' has incorrect indentation level 28, expected level should be 24. ``` This only happens with lambdas.  Using the default configuration, ie. ``.","closed","indentation,","joca-bt","2020-03-09T09:31:03Z","2020-10-04T16:13:21Z"
"","7498","Generation and publishing regression diff report base on config in PR description","We need to remove from contributor responsibility generation of diff reports.","closed","miscellaneous,","romani","2020-01-21T00:40:19Z","2020-07-14T16:02:01Z"
"","7492","Enforce jdk8 verification during build","We do have enforcer plugin setup for jdk version, but we  forgot to update it from jdk6 ```         org.apache.maven.plugins         maven-enforcer-plugin         3.0.0-M3                                 enforce-versions                            enforce                                                                             1.6                  ```  TODO: update to 1.8  Example of failure when extra validation is activated ```                                    1.8                  ``` output: ``` [INFO]  [INFO] --- maven-enforcer-plugin:3.0.0-M3:enforce (enforce-versions) @ checkstyle --- [INFO] artifact junit:junit-dep: checking for updates from central [INFO] artifact junit:junit: checking for updates from central [INFO] Artifact net.bytebuddy:byte-buddy-agent:jar:1.9.10:test contains .class compiled with incorrect version [INFO] Artifact org.bouncycastle:bcprov-jdk15on:jar:1.64:test contains .class compiled with incorrect version [INFO] Artifact org.opentest4j:opentest4j:jar:1.2.0:test contains .class compiled with incorrect version [INFO] ------------------------------------------------------------------------ [INFO] BUILD FAILURE ```","closed","miscellaneous,","romani","2020-01-17T21:54:19Z","2020-01-18T04:35:29Z"
"","7773","Issue #7671: Update doc for NoFinalizer","Updating Update doc for NoFinalizer #7671","closed","awaiting changes,","OmarShawky1","2020-03-03T09:42:51Z","2020-03-15T22:36:52Z"
"","7770","Added Documentation for NoFinalize","Updating Update doc for NoFinalizer #7671","closed","","OmarShawky1","2020-03-02T13:28:32Z","2020-03-02T15:20:21Z"
"","7776","Issue #7693: update doc for JavaNCSS","Updated docs for for JavaNCSS.  Solves issue #7693       **CLI TEST RESULT :** 1. Default config ``` Gauravs-MacBook-Pro:checkstyle gauravpunjabi$ cat config.xml                        Gauravs-MacBook-Pro:checkstyle gauravpunjabi$ java -jar target/checkstyle-8.31-SNAPSHOT-all.jar -c config.xml Test.java  Starting audit... [ERROR] /Users/gauravpunjabi/Coding/Open Source/checkstyle/Test.java:2:5: NCSS for this method is 51 (max allowed is 50). [JavaNCSS] Audit done. Checkstyle ends with 1 errors. ```   2. Check with 40 allowed uncommented lines ``` Gauravs-MacBook-Pro:checkstyle gauravpunjabi$ cat config.xml                                              Gauravs-MacBook-Pro:checkstyle gauravpunjabi$ java -jar target/checkstyle-8.31-SNAPSHOT-all.jar -c config.xml Test.java  Starting audit... [ERROR] /Users/gauravpunjabi/Coding/Open Source/checkstyle/Test.java:2:5: NCSS for this method is 41 (max allowed is 40). [JavaNCSS] Audit done. Checkstyle ends with 1 errors.  ``` 3. Check with 100 allowed uncommented lines in a class ``` gauravpunjabi@Gauravs-MacBook-Pro:~/Coding/Open Source/checkstyle$ cat config.xml                                              gauravpunjabi@Gauravs-MacBook-Pro:~/Coding/Open Source/checkstyle$ java -jar target/checkstyle-8.31-SNAPSHOT-all.jar -c config.xml Test.java  Starting audit... [ERROR] /Users/gauravpunjabi/Coding/Open Source/checkstyle/Test.java:1:1: NCSS for this class is 101 (max allowed is 100). [JavaNCSS] Audit done. Checkstyle ends with 1 errors.  ``` 4. Check with 200 allowed uncommented lines in a file ``` gauravpunjabi@Gauravs-MacBook-Pro:~/Coding/Open Source/checkstyle$ cat config.xml                                              gauravpunjabi@Gauravs-MacBook-Pro:~/Coding/Open Source/checkstyle$ java -jar target/checkstyle-8.31-SNAPSHOT-all.jar -c config.xml Test.java  Starting audit... [ERROR] /Users/gauravpunjabi/Coding/Open Source/checkstyle/Test.java:1:1: NCSS for this file is 201 (max allowed is 200). [JavaNCSS] Audit done. Checkstyle ends with 1 errors.  ```","closed","","Gaurav-Punjabi","2020-03-03T16:10:10Z","2020-03-23T11:17:23Z"
"","7568","updated AbstractClassName","updated AbstractClassName","closed","awaiting response,","amritk07","2020-02-22T10:30:32Z","2020-09-07T08:44:41Z"
"","7794","minor: patch whitelisted words fbfb fdc","update whitelist.words to accomodate fbfb fdc from SHA's","closed","","nick-mancuso","2020-03-07T23:23:56Z","2020-03-08T01:22:42Z"
"","7831","Issue #7632: Update doc for WhitespaceAround","Update doc for WhitespaceAround. Solves issue: #7632    ![image](https://user-images.githubusercontent.com/40023562/78263119-2dbcb800-751f-11ea-877f-8ac4c75a84cc.png)  ![image](https://user-images.githubusercontent.com/40023562/78263147-36ad8980-751f-11ea-88cd-9b388305a845.png)  ![image](https://user-images.githubusercontent.com/40023562/78263181-4036f180-751f-11ea-90e5-5a4bc3d9bc33.png)  ![image](https://user-images.githubusercontent.com/40023562/78263198-475dff80-751f-11ea-9c3f-f981db7f2954.png)  ![image](https://user-images.githubusercontent.com/40023562/78263233-4e850d80-751f-11ea-990e-8cab3b6e56b1.png)  ![image](https://user-images.githubusercontent.com/40023562/78263272-58a70c00-751f-11ea-994b-37d27f2ff4ab.png)     **CLI TEST RESULT:** Default Config:   ``` Karunas-MacBook-Pro:checkstyle Harsh$ cat config.xml                         Karunas-MacBook-Pro:checkstyle Harsh$ cat Test.java  class Test {     public Test(){} // 2 violations, '{' is not followed and preceded by whitespace.     public static void main(String[] args) {         if (foo) { // ok             // body         }         else{ // violation             // body         }          for (int i = 1; i > 1; i++) {} // violation, '{' is not followed by whitespace.          Runnable noop = () ->{}; // 2 violations,         // '{' is not followed and preceded by whitespace.         try {             // body         } catch (Exception e){} // 2 violations,         // '{' is not followed and preceded by whitespace.          char[] vowels = {'a', 'e', 'i', 'o', 'u'};         for (char item: vowels) { // ok, because ignoreEnhancedForColon is true by default             // body         }     } } Karunas-MacBook-Pro:checkstyle Harsh$ java -jar target/checkstyle-8.32-SNAPSHOT-all.jar -c config.xml Test.java  Starting audit... [ERROR] /Users/Harsh/Desktop/checkstyle/Test.java:2:18: '{' is not followed by whitespace. [WhitespaceAround] [ERROR] /Users/Harsh/Desktop/checkstyle/Test.java:2:18: '{' is not preceded with whitespace. [WhitespaceAround] [ERROR] /Users/Harsh/Desktop/checkstyle/Test.java:2:19: '}' is not preceded with whitespace. [WhitespaceAround] [ERROR] /Users/Harsh/Desktop/checkstyle/Test.java:7:9: 'else' is not followed by whitespace. [WhitespaceAround] [ERROR] /Users/Harsh/Desktop/checkstyle/Test.java:7:13: '{' is not preceded with whitespace. [WhitespaceAround] [ERROR] /Users/Harsh/Desktop/checkstyle/Test.java:11:37: '{' is not followed by whitespace. [WhitespaceAround] [ERROR] /Users/Harsh/Desktop/checkstyle/Test.java:11:38: '}' is not preceded with whitespace. [WhitespaceAround] [ERROR] /Users/Harsh/Desktop/checkstyle/Test.java:13:28: '->' is not followed by whitespace. [WhitespaceAround] [ERROR] /Users/Harsh/Desktop/checkstyle/Test.java:13:30: '{' is not followed by whitespace. [WhitespaceAround] [ERROR] /Users/Harsh/Desktop/checkstyle/Test.java:13:30: '{' is not preceded with whitespace. [WhitespaceAround] [ERROR] /Users/Harsh/Desktop/checkstyle/Test.java:13:31: '}' is not preceded with whitespace. [WhitespaceAround] [ERROR] /Users/Harsh/Desktop/checkstyle/Test.java:17:30: '{' is not followed by whitespace. [WhitespaceAround] [ERROR] /Users/Harsh/Desktop/checkstyle/Test.java:17:30: '{' is not preceded with whitespace. [WhitespaceAround] [ERROR] /Users/Harsh/Desktop/checkstyle/Test.java:17:31: '}' is not preceded with whitespace. [WhitespaceAround] Audit done. Checkstyle ends with 14 errors. ``` Non-default config ``` Karunas-MacBook-Pro:checkstyle Harsh$ cat config.xml                                               Karunas-MacBook-Pro:checkstyle Harsh$ cat Test.java  class Test {     public static void main(String[] args) {         int b=10; // violation         int c = 10; // ok         b+=10; // violation         b += 10; // ok         c*=10; // violation         c *= 10; // ok         c-=5; // violation         c -= 5; // ok         c/=2; // violation         c /= 2; // ok         c%=1; // violation         c %= 1; // ok         c>>=1; // violation         c >>= 1; // ok         c>>>=1; // violation         c >>>= 1; // ok     }     public void myFunction() {         c^=1; // violation         c ^= 1; // ok         c|=1; // violation         c |= 1; // ok         c&=1; // violation         c &= 1; // ok         c 10; i--){} // ok         do {} while (i = 1); // ok         int a=4; // 2 violations, '=' is not followed and preceded by whitespace.     } } Karunas-MacBook-Pro:checkstyle Harsh$ java -jar target/checkstyle-8.32-SNAPSHOT-all.jar -c config.xml Test.java  Starting audit... [ERROR] /Users/Harsh/Desktop/checkstyle/Test.java:5:14: '=' is not followed by whitespace. [WhitespaceAround] [ERROR] /Users/Harsh/Desktop/checkstyle/Test.java:5:14: '=' is not preceded with whitespace. [WhitespaceAround] Audit done. Checkstyle ends with 2 errors. ```  ``` Karunas-MacBook-Pro:checkstyle Harsh$ cat config.xml                                               Karunas-MacBook-Pro:checkstyle Harsh$ cat Test.java  class Test {     public static void main(String[] args) {         Runnable noop = () -> {}; // ok         int a=4; // 2 violations, '=' is not followed and preceded by whitespace.     } } Karunas-MacBook-Pro:checkstyle Harsh$ java -jar target/checkstyle-8.32-SNAPSHOT-all.jar -c config.xml Test.java  Starting audit... [ERROR] /Users/Harsh/Desktop/checkstyle/Test.java:4:14: '=' is not followed by whitespace. [WhitespaceAround] [ERROR] /Users/Harsh/Desktop/checkstyle/Test.java:4:14: '=' is not preceded with whitespace. [WhitespaceAround] Audit done. Checkstyle ends with 2 errors.  ```  ``` Karunas-MacBook-Pro:checkstyle Harsh$ cat config.xml                                               Karunas-MacBook-Pro:checkstyle Harsh$ cat Test.java  class Test {     public static void main(String[] args) {         int a=4; // 2 violations, '=' is not followed and preceded by whitespace.         try {             // body         } catch (Exception e){} // ok     } } Karunas-MacBook-Pro:checkstyle Harsh$ java -jar target/checkstyle-8.32-SNAPSHOT-all.jar -c config.xml Test.java  Starting audit... [ERROR] /Users/Harsh/Desktop/checkstyle/Test.java:3:14: '=' is not followed by whitespace. [WhitespaceAround] [ERROR] /Users/Harsh/Desktop/checkstyle/Test.java:3:14: '=' is not preceded with whitespace. [WhitespaceAround] Audit done. Checkstyle ends with 2 errors.  ```  ``` Karunas-MacBook-Pro:checkstyle Harsh$ cat config.xml                                               Karunas-MacBook-Pro:checkstyle Harsh$ cat Test.java  class Test {     public static void main(String[] args) {         int a=4; // 2 violations , '=' is not followed and preceded by whitespace.         char[] vowels = {'a', 'e', 'i', 'o', 'u'};         for (char item: vowels) { // violation, ':' is not preceded by whitespace.             // body         }     } } Karunas-MacBook-Pro:checkstyle Harsh$ java -jar target/checkstyle-8.32-SNAPSHOT-all.jar -c config.xml Test.java  Starting audit... [ERROR] /Users/Harsh/Desktop/checkstyle/Test.java:3:14: '=' is not followed by whitespace. [WhitespaceAround] [ERROR] /Users/Harsh/Desktop/checkstyle/Test.java:3:14: '=' is not preceded with whitespace. [WhitespaceAround] [ERROR] /Users/Harsh/Desktop/checkstyle/Test.java:5:23: ':' is not preceded with whitespace. [WhitespaceAround] Audit done. Checkstyle ends with 3 errors.  ```","closed","","harsh-kukreja","2020-03-11T22:30:27Z","2020-04-03T13:11:06Z"
"","7972","Issue #7615: Update doc for ThrowsCount","Update doc for ThrowsCount Solves issue: #7615          **Cli Output** Default Config: ``` Karunas-MacBook-Pro:checkstyle Harsh$ cat config.xml                         Karunas-MacBook-Pro:checkstyle Harsh$ cat Test.java  class Test {     public void failTest() throws CloneNotSupportedException,             ArrayIndexOutOfBoundsException,             StringIndexOutOfBoundsException,             IllegalStateException,             NullPointerException { // violation, max allowed is 4         // body     }      public void successTest() throws ArithmeticException,             NumberFormatException { // ok         //body     }      private void privateTest() throws CloneNotSupportedException,             ClassNotFoundException,             IllegalAccessException,             ArithmeticException,             ClassCastException { // ok         // body     }  } Karunas-MacBook-Pro:checkstyle Harsh$ java -jar target/checkstyle-8.31-SNAPSHOT-all.jar -c config.xml Test.java  Starting audit... [ERROR] /Users/Harsh/Desktop/checkstyle/Test.java:2:28: Throws count is 5 (max allowed is 4). [ThrowsCount] Audit done. Checkstyle ends with 1 errors.  ```  Non Default Config:  ``` Karunas-MacBook-Pro:checkstyle Harsh$ cat config.xml                                               Karunas-MacBook-Pro:checkstylcat Test.java  class Test {     public void failTest() throws IllegalStateException,             ArrayIndexOutOfBoundsException,             NullPointerException { // violation, max allowed is 2         // body     }      public void successTest() throws ArithmeticException,             NumberFormatException { // ok         //body     }      private void privateTest() throws CloneNotSupportedException,             ClassNotFoundException,             IllegalAccessException,             ArithmeticException,             ClassCastException { // ok         // body     }  } Karunas-MacBook-Pro:checkstyle Harsh$ java -jar target/checkstyle-8.31-SNAPSHOT-all.jar -c config.xml Test.java  Starting audit... [ERROR] /Users/Harsh/Desktop/checkstyle/Test.java:2:28: Throws count is 3 (max allowed is 2). [ThrowsCount] Audit done. Checkstyle ends with 1 errors.  ```  ``` Karunas-MacBook-Pro:checkstyle Harsh$ cat config.xml                                               Karunas-MacBook-Pro:checkstylcat Test.java  class Test {     public void failTest() throws CloneNotSupportedException,             ArrayIndexOutOfBoundsException,             StringIndexOutOfBoundsException,             IllegalStateException,             NullPointerException { // violation, max allowed is 4         // body     }      public void successTest() throws ArithmeticException,             NumberFormatException { // ok         //body     }      private void privateTest() throws CloneNotSupportedException,             ClassNotFoundException,             IllegalAccessException,             ArithmeticException,             ClassCastException { // violation, max allowed is 4         // body     }      private void successTest() throws IllegalStateException,             NullPointerException { // ok         //body     }  } Karunas-MacBook-Pro:checkstyle Harsh$ java -jar target/checkstyle-8.31-SNAPSHOT-all.jar -c config.xml Test.java  Starting audit... [ERROR] /Users/Harsh/Desktop/checkstyle/Test.java:2:28: Throws count is 5 (max allowed is 4). [ThrowsCount] [ERROR] /Users/Harsh/Desktop/checkstyle/Test.java:15:32: Throws count is 5 (max allowed is 4). [ThrowsCount] Audit done. Checkstyle ends with 2 errors.  ```","closed","","harsh-kukreja","2020-03-26T18:17:13Z","2020-03-28T14:34:51Z"
"","7552","IllegalStateException: expecting RCURLY, found 'null'","Unfortunately I cannot give you full decription of the issue and data for it, it has occurred only once in IntelliJ 2019.3.2. It could happen due to some some unexpected state of file.  Plugin version: `5.35.5` CheckStyle version: `8.28`  This is the error from IntelliJ's EventLog: ``` The scan failed due to a parse error: IllegalStateException occurred while parsing file /home/petr/work/src/tipsport/tipsys2/commons/src/main/java/cz/tipsport/common/tools/JsonTools.java.  Root cause: expecting RCURLY, found 'null'  /home/petr/work/src/tipsport/tipsys2/commons/src/main/java/cz/tipsport/common/tools/JsonTools.java:119:1: expecting RCURLY, found 'null'    at antlr.Parser.match(Parser.java:211)    at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.classBlock(GeneratedJavaRecognizer.java:2564)    at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.classDefinition(GeneratedJavaRecognizer.java:634)    at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.typeDefinitionInternal(GeneratedJavaRecognizer.java:556)    at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.typeDefinition(GeneratedJavaRecognizer.java:389)    at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.compilationUnit(GeneratedJavaRecognizer.java:202)    at com.puppycrawl.tools.checkstyle.JavaParser.parse(JavaParser.java:99)    at com.puppycrawl.tools.checkstyle.TreeWalker.processFiltered(TreeWalker.java:159)    at com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck.process(AbstractFileSetCheck.java:85)    at com.puppycrawl.tools.checkstyle.Checker.processFile(Checker.java:329)    at com.puppycrawl.tools.checkstyle.Checker.processFiles(Checker.java:291)    at com.puppycrawl.tools.checkstyle.Checker.process(Checker.java:216)    at org.infernus.idea.checkstyle.service.cmd.OpScan.processAndAudit(OpScan.java:76)    at org.infernus.idea.checkstyle.service.cmd.OpScan.execute(OpScan.java:52)    at org.infernus.idea.checkstyle.service.cmd.OpScan.execute(OpScan.java:22)    at org.infernus.idea.checkstyle.service.CheckstyleActionsImpl.executeCommand(CheckstyleActionsImpl.java:130)    at org.infernus.idea.checkstyle.service.CheckstyleActionsImpl.scan(CheckstyleActionsImpl.java:76)    at org.infernus.idea.checkstyle.checker.CheckStyleChecker.scan(CheckStyleChecker.java:43)    at org.infernus.idea.checkstyle.checker.ScanFiles.lambda$checkFiles$7(ScanFiles.java:197)    at java.base/java.util.Optional.map(Optional.java:265)    at org.infernus.idea.checkstyle.checker.ScanFiles.checkFiles(ScanFiles.java:197)    at org.infernus.idea.checkstyle.checker.ScanFiles.processFilesForModuleInfoAndScan(ScanFiles.java:156)    at org.infernus.idea.checkstyle.checker.ScanFiles.call(ScanFiles.java:78)    at org.infernus.idea.checkstyle.checker.ScanFiles.call(ScanFiles.java:32)    at com.intellij.openapi.application.impl.ApplicationImpl$2.call(ApplicationImpl.java:274)    at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)    at java.base/java.lang.Thread.run(Thread.java:834)  ```","closed","","petr-nehez","2020-02-17T09:47:04Z","2020-02-18T08:37:13Z"
"","7969","Set up JDK 14 build in CI","Travis and appveyor already support Java 14, so we have to set up a build with it.","closed","miscellaneous,","pbludov","2020-03-26T14:25:33Z","2020-04-28T13:30:31Z"
"","7281","Set up JDK-13 build and drop jdk-12 (discussion on migraton to jdk11 for compilation)","Travis and appveyor already support Java 13, so we have to set up a build with it.  This is a prerequisite for #7103.","closed","CI,","pbludov","2019-11-25T04:13:52Z","2020-05-30T19:09:03Z"
"","7324","infra: activate wercker no-error-sevntu-checks","to verify https://github.com/sevntu-checkstyle/sevntu.checkstyle/pull/786  ATTENTION: ones sevntu PR is merged, I will remove `checkout` to branch","closed","","romani","2019-12-06T17:34:54Z","2019-12-07T17:25:07Z"
"","7442","config: print travis maven settings","to investigate failures of https://github.com/checkstyle/checkstyle/pull/7439","closed","","romani","2020-01-04T13:33:10Z","2020-01-04T15:15:15Z"
"","7032","MainTest#testExistingTargetFileButWithoutReadAccess fails on Win10 machine","This test (I run it on latest master) fails on my machine (Win10) but passes CI (on appveyor and linux).  ``` mvn --version Apache Maven 3.6.0 (97c98ec64a1fdfee7767ce5ffb20918da4f719f3; 2018-10-24T21:41:47+03:00) Maven home: C:\Soft\maven_3_6_0 Java version: 1.8.0_144, vendor: Oracle Corporation, runtime: C:\Program Files\Java\jdk1.8.0_144\jre Default locale: en_US, platform encoding: Cp1251 OS name: ""windows 10"", version: ""10.0"", arch: ""amd64"", family: ""windows"" ```  ![image](https://user-images.githubusercontent.com/8901354/64000790-1774f680-cb0f-11e9-81c4-58f5f825e5ce.png)  It looks like that the problem is in line 282 ``` file.setReadable(false); ``` because in debug it shows that file is still readable regardless of invocation of this method.  I do not have a good idea how to resolve it, only some ugly stuff like skip test if file.setReadable returns false.  I briefly looked through appveyor script and job log and there is nothing about windows version. May be there is something in job setup?","closed","miscellaneous,","strkkk","2019-08-30T07:17:57Z","2019-09-03T15:58:43Z"
"","7291","Revert ""Issue #7288: fix xwiki build on wercker""","This reverts commit c442c78f24af273ebc770bc31a2579a9d9831418.  Issue #7288","closed","","romani","2019-11-29T21:25:48Z","2019-11-29T22:46:57Z"
"","7851","Issue #7768: Update AbstractChecks to log DetailAST - AnnotationLocation","This resolves #7768   ## site update: ![Capture](https://user-images.githubusercontent.com/35211477/76689926-00d45e00-6661-11ea-822b-ecdc4d60e4e4.PNG)  ## diff file: https://malintha1996.github.io/checkstyle-tester-reports/AnnotationLocation/diff/index.html ## Goal  Update AbstractChecks to log DetailAST - AnnotationLocation","closed","","malinthar","2020-03-14T20:44:46Z","2020-03-16T16:50:18Z"
"","7903","Issue #7750: Update AbstractChecks to log DetailAST - NeedBraces","This resolves #7750 . ### 1. Site Changes   ### 2. Diff File  https://gaurav-punjabi.github.io/checkstyle/issue-7750/guava/index.html  ### 3. Goal Update AbstractChecks to log DetailAST - NeedBraces.","closed","","Gaurav-Punjabi","2020-03-19T08:30:28Z","2020-03-23T10:03:03Z"
"","7845","Issue #5089: LineLength measures Java characters, not Unicode characters","This PR fixes Issue #5089, namely, `LineLength() `will now count codepoints (unicode characters) instead of 2 byte characters, thus correcting existing issue where unicode characters are counted as two, 2 byte characters.  I have added some test cases, and the diff report can be found [here](https://nmancus1.github.io/diff_3_13_2020/index.html).","closed","","nick-mancuso","2020-03-13T17:33:28Z","2020-03-15T19:16:39Z"
"","7011","Issue #6207: Add xpath regression test for AvoidNestedBlocks","This PR adds XPath regression test for suppression filter on [AvoidNestedBlocks](https://checkstyle.org/config_blocks.html#AvoidNestedBlocks) check, see #6207.  Also, it fixes a complication error in related code example in documentation.  ``` AvoidNestedBlocks $ cat Demo1.java public class Demo1 {   public static void main(String[] args) {     int a = 0;     {       int a = 1;     }     System.out.println(""a="" + a);   } } ``` ``` AvoidNestedBlocks $ javac Demo1.java Demo1.java:5: error: variable a is already defined in method main(String[])       int a = 1;           ^ 1 error ```","closed","","mincong-h","2019-08-23T21:47:21Z","2019-08-24T15:00:58Z"
"","7407","Issue #3238: Java 8 Grammar: annotations on arrays and varargs","This PR adds support for parsing annotations on arrays and varargs, with the goal of resolving: * Issue #3236: Java Grammar: annotation before variable declaration * Issue #3238: Java 8 Grammar: annotations on varargs parameters * Issue #4589: Checkstyle does not support annotations on array types * potentially another related issue that hasn't been created, if it is worth distinguishing: supporting annotations in `new` array expressions  If this looks like a reasonable approach, I would be happy to try and split it up into separate PR's addressing arrays and varargs separately if that would be better.   Since the changes are relatively small (and kind of overlapping? if thinking of varargs as a kind of array), I thought I would open the PR as it is now for initial feedback.  **Regression Reports**  Ran on all the [projects-to-test-on.properties](https://github.com/checkstyle/contribution/blob/master/checkstyle-tester/projects-to-test-on.properties), also including the latest version of Guava. The only differences in the reports should be new violations for files that previously failed to parse.  * [x] [3238-annotations-class-design-2](http://esilkensen.github.io/checkstyle-tester/3238-annotations-class-design-2): config with [annotation](https://checkstyle.org/config_annotation.html), [block](https://checkstyle.org/config_blocks.html), and [class design](https://checkstyle.org/config_design.html) checks * [x] [3238-coding-2](http://esilkensen.github.io/checkstyle-tester/3238-coding-2): config with [coding](https://checkstyle.org/config_coding.html) checks * [x] [3238-headers-misc-2](http://esilkensen.github.io/checkstyle-tester/3238-headers-misc-2): config with [header](https://checkstyle.org/config_header.html), [import](https://checkstyle.org/config_imports.html), [javadoc](https://checkstyle.org/config_javadoc.html), [metrics](https://checkstyle.org/config_metrics.html), and [miscellaneous](https://checkstyle.org/config_misc.html) checks * [x] [3238-modifiers-whitespace-2](http://esilkensen.github.io/checkstyle-tester/3238-modifiers-whitespace-2): config with [modifier](https://checkstyle.org/config_modifier.html), [naming](https://checkstyle.org/config_naming.html), [regexp](https://checkstyle.org/config_regexp.html), [size](https://checkstyle.org/config_sizes.html), and [whitespace](https://checkstyle.org/config_whitespace.html) checks","closed","","esilkensen","2019-12-27T21:15:27Z","2020-01-25T17:22:56Z"
"","7132","Pitest: add new mutator NON_VOID_METHOD_CALLS","This mutator is considered unstable for certain types like Objects where NullPointerExceptions are likely.  http://pitest.org/quickstart/mutators/#NON_VOID_METHOD_CALLS  > The non void method call mutator removes method calls to non void methods. Their return value is replaced by the Java Default Value for that specific type.  Report with only new mutator added, and others disabled: http://rveach.no-ip.org/checkstyle/regression/pitest-reports/38/","open","miscellaneous,","rnveach","2019-10-02T00:40:37Z","2022-08-02T17:30:03Z"
"","7797","Resolve Pitest Issues","This issue is the main tracker of all pitest work and will be split into multiple individual issues as new work is identified. Nothing can be done in this issue.  Shown in https://github.com/checkstyle/checkstyle/blob/master/.ci/pitest.sh ,  Checkstyle uses pitest (mutation testing) to test if there is enough tests to cover all code in main source. If new code is written, or existing code is re-written, and no tests are added, pitest will fail and require more tests to cover the new changes. It is extremely important to get familar with pitest as it is an integral part of working with Checkstyle.  Checkstyle adopted pitest after we already had a bunch of modules and tests. Sadly, not all tests cover all the code we have and pitest is flagging additional lines that need to be resolved. Following pitest's terminology, lines that still need to be resolved are called Surviving mutations. The overview of all unresolved mutations can be found at https://github.com/checkstyle/checkstyle/blob/master/.ci/pitest.sh .  If at anytime, more help is needed, don't hesitate to ping an admin for guidance.  For each issue the following steps need to be taken: 1) The pitest report needs to be run on a clean checkstyle master branch and uploaded to the issue on exactly the type of mutation(s) that is surviving. It is possible that more than 1 mutation could be surviving on the same line, but it is also possible removing 1 mutation will remove the others too. 2) The reported pitest mutation must be hardcoded into a new checkstyle branch and the branch uploaded to github and reported in the issue to verify the user understands the mutation and how pitest works behind the scenes. See https://pitest.org/quickstart/mutators/ 3) Regression must be run with the hardcoded mutation branch and the regression uploaded to the issue to show if regression can find test cases that can be added to our own UTs to kill the mutations. See https://github.com/checkstyle/contribution/tree/master/checkstyle-tester#checkstyle-pitest-regression . We recommend running regression on all projects. **Note**: Step 3 may not be able to be done if the item to kill is throwing an exception that will terminate the checkstyle run. Regression is more for logic surrounding violations being printed or not.  4a) If regression does find a case, or a case is found by another means, a PR must be submitted adding only the new case to checkstyle. The mutated branch must not be used and can be deleted. 4aa) In the changes for the PR, `pitest.sh` has to be modified to remove the line in question to show the mutation is killed and no longer a concern. 4ab) With the PR a new pitest must be run and uploaded to the PR to show that the new test case does kill the mutation.  4b) If regression fails to find a case, it must be determined why the code exists and why regression didn't find anything. Some mutations require very specific code and may require additional analysis of surrounding code. Some code may never be possible to be hit and is infact unreachable. 4ba) When the admins/mentors have agree with the determination that the code is no longer needed, a PR must be submitted removing the identified code from checkstyle. The mutated branch must not be used and can be deleted. 4bb) If a UT can be found while analzing the code, then see 4a.  **1**: The command to run pitest is `./.ci/pitest.sh `, where `` is the name of the profile given to the package. Pitest execution is split by package to reduce execution time. All pitest profiles can be seen at https://github.com/checkstyle/checkstyle/blob/master/.circleci/config.yml . The pitest report will specify the exact mutation being applied, and will report failures with a red line and saying ""SURVIVED"".  Example Command: To run the javadoc pitest, you would run `./.ci/pitest.sh pitest-javadoc`.  Example Report with Failure: https://user-images.githubusercontent.com/812984/64864039-0d60f680-d5eb-11e9-8b55-10cc7c0b1fe1.png  **2**: Hardcoding the mutation depends entirely on the specific mutation being examined. Pitest's own website explains the mutations in more details. For example, if you get a surviving mutation saying `replaced equality check with true → SURVIVED`, then you must the specific equality check in the code and replace it entirely with `true`. 1 line of code can have multiple mutations connected to it. It is important to understand which part of the line is being mutated. If there is any confusion, you can space out the lines before running the report to help get a better idea.  **3**: It is important that regression hits all areas of the check in order to determine if the mutated code is even being hit. For most checks, this usually means enabling and disabling all properties for a module in as many permutations as possible to cover all expected avenues. See https://github.com/checkstyle/contribution/tree/master/checkstyle-tester#checkstyle-pitest-regression . For modules that have properties that allow custom strings, a better understanding of the property and the underlying code may be needed to know who values to put into the property.  **pitest**: https://pitest.org/  **overview of pitest mutations**: https://pitest.org/quickstart/mutators/  **unresolved pitest failures**: https://github.com/checkstyle/checkstyle/blob/master/.ci/pitest.sh  **Regression with pitest**: https://github.com/checkstyle/contribution/tree/master/checkstyle-tester#checkstyle-pitest-regression  Additional work to add to this issue (which can't be worked on separately during GSoC): https://github.com/checkstyle/checkstyle/issues/4605 https://github.com/checkstyle/checkstyle/issues/5673 https://github.com/checkstyle/checkstyle/issues/6294 https://github.com/checkstyle/checkstyle/issues/6295 https://github.com/checkstyle/checkstyle/issues/6320 https://github.com/checkstyle/checkstyle/issues/6658 https://github.com/checkstyle/checkstyle/issues/7132","closed","miscellaneous,","rnveach","2020-03-08T15:57:14Z","2022-06-27T14:33:42Z"
"","7192","config: fix Travis items to do more jdk11 and jdk12 builds","this is requirements to understand how to deal with #7033 .  it is refactoring and cleanup. Main points: 1) we do not need jdk9 and jdk10, as jdk11 is available now and it will be our next JDK, we can use only latest jdk in non LTS jdk in travis to keep amount of builds limited. 2) `package -Passembly` do skip of tests as I use this only during release to generate ""xxxxx-all.jar""  3) `-Dlinkcheck.skip=true` it is execution of link check plugin that is running during `site` phase. 4) `\!` is bash is required only when it is used in command line directly, as we keep suppressions in special string constants it is not required. Escaping of it make regex be `\!` - so it simply does not work. I verified this by `-X` execution, and execution of `mvn -e package -Dtest=....` now actually executes tests and skip only defined. 5) `*,` in front of excludes is correct way to configure it - http://maven.apache.org/surefire/maven-surefire-plugin/examples/single-test.html , https://blog.jdriven.com/2017/10/run-one-or-exclude-one-test-with-maven/ , as it is property for what to run, NOT on what to exclude. So we run ALL except for items that are negated by `!`.","closed","miscellaneous,","romani","2019-10-13T05:46:23Z","2019-10-18T13:33:25Z"
"","7210","WIP: Issue #3744: Handle slashes on Windows","This is a WIP for #3744.   If on windows (or rather if `File.separatorChar == '\\'`) any failed suppression file matches will retry with all backslashes in the path replaced with forward slashes.  The plan is to use this to test performance to determine if this can be enabled by default and what kind of toggle is needed to turn this feature off.  I've tested performance on my employers main project and couldn't see any significant difference in runtimes (If anything 8.26-SNAPSHOT is faster than 8.25, but that could be other changes since the last release). (Did five runs of each version and sorted the runtimes.)  >Checkstyle 8.25 >15.237 s >15.990 s >16.133 s >16.497 s >17.905 s  >Checkstyle 8.26-SNAPSHOT, unmodified suppressions (still using `[/\\]` in paths) >15.164 s >15.399 s >15.757 s >15.776 s >16.063 s  >Checkstyle 8.26-SNAPSHOT, modified suppressions (replaced `[/\\]` with `/` in paths)  >14.941 s >15.344 s >15.480 s >15.654 s >16.889 s  However that project might not be the best test case for this change. Anyone have a good candidate project to do performance tests on? Let me know and can run some more tests.","closed","awaiting changes,","snago","2019-10-19T08:06:42Z","2019-12-01T19:36:39Z"
"","7948","Add Enhanced Switch support","This code: ``` return switch (role) {             case USER -> ""user"";             case ADMIN,                      AUDITOR -> ""boss"";         }; ```  Fails with ""The source file could not be parsed by CheckStyle""","closed","","Ituninant","2020-03-23T17:32:36Z","2020-03-23T17:35:07Z"
"","7987","use RegexpSingleline Check to validate amount of tests in Xpath tests","there was a lot of comments in PRs that test classes in suppressionxpathfilter should have 2 or more test methods.  This example clearly showed that maintainers tend to forgot this:  https://github.com/checkstyle/checkstyle/pull/7935/files#r399724307  We need Checkstyle to help. There is Check - RegexpSingleline. Extended doc is at https://github.com/checkstyle/checkstyle/pull/7714  We need to validate all Classes in suppressionxpathfilter to have 2 or more `@Test`. If there are already several of such classes we should be able to exclude such classes from validation temporary with comment ""till "".","closed","easy,","romani","2020-03-29T14:33:14Z","2020-04-22T04:17:43Z"
"","7077","Purpose of UnnecessarySemicolonAfterTypeMemberDeclaration is unclear in documentation.","There is an example of what `UnnecessarySemicolonAfterTypeMemberDeclaration` should find as violations in documentation: ``` class A {     ; // violation, standalone semicolon     {}; // violation, extra semicolon after init block     static {}; // violation, extra semicolon after static init block     A(){}; // violation, extra semicolon after constructor definition     void method() {}; // violation, extra semicolon after method definition     int field = 10;; // violation, extra semicolon after field declaration } ```  It seems like every violation in this example is already covered by `EmptyStatement` check. It is required either remove the `UnnecessarySemicolonAfterTypeMemberDeclaration` check or enrich documentation to emphathise what this check can do, which is out of scope of `EmptyStatement`","closed","miscellaneous,","pbaranchikov","2019-09-19T13:32:59Z","2019-10-26T01:06:07Z"
"","7040","spotbugs is not executed in build process of openjdk12","The spotbugs Maven plugin doesn't seem to be executed on Travis CI for openjdk12 where it's supposed to be judging from the main CI script `travis.sh`.  it's not executed because a local execution of `mvn spotbugs:check` fails due to various violations of `RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE` in `Files.newInputStream`, because this work was not done on initial attempt (#6687) to do full build on openjdk12.   > In case it is executed I don't understand the mismatch, but then it'd still be executed for OpenJDK 11 and 12 rather than just 8.  Checktyle is on jdk8, so we(checkstyle team) do most builds only on openjdk8, all other jdks are not critical builds, but exists for convenience, as eventually we will migrate to them, and users might use them.  ``` [INFO] --- spotbugs-maven-plugin:3.1.12.2:check (default) @ checkstyle --- [INFO] BugInstance size is 7 [INFO] Error size is 0 [INFO] Total bugs: 7 [ERROR] Redundant nullcheck of stream, which is known to be non-null in  com.puppycrawl.tools.checkstyle.Main.loadProperties(File)  [com.puppycrawl.tools.checkstyle.Main, com.puppycrawl.tools.checkstyle.Main]  Redundant null check at Main.java:[line 415]Another occurrence at Main.java:[line 417]  RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE  [ERROR] Redundant nullcheck of inStream, which is known to be non-null in  com.puppycrawl.tools.checkstyle.PropertyCacheFile.load()  [com.puppycrawl.tools.checkstyle.PropertyCacheFile,  com.puppycrawl.tools.checkstyle.PropertyCacheFile] Redundant null check at  PropertyCacheFile.java:[line 123]Another occurrence at  PropertyCacheFile.java:[line 130]  RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE  [ERROR] Nullcheck of is at line 309 of value previously dereferenced in  com.puppycrawl.tools.checkstyle.PropertyCacheFile.loadExternalResource(String)  [com.puppycrawl.tools.checkstyle.PropertyCacheFile,  com.puppycrawl.tools.checkstyle.PropertyCacheFile] At  PropertyCacheFile.java:[line  309]Redundant null check at PropertyCacheFile.java:[line 310]  RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE  [ERROR] Redundant nullcheck of inStream, which is known to be non-null in  com.puppycrawl.tools.checkstyle.ant.CheckstyleAntTask.createOverridingProperties()  [com.puppycrawl.tools.checkstyle.ant.CheckstyleAntTask,  com.puppycrawl.tools.checkstyle.ant.CheckstyleAntTask] Redundant null check at  CheckstyleAntTask.java:[line 432]Another occurrence at  CheckstyleAntTask.java:[line 434]  RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE  [ERROR] Redundant nullcheck of inputStream, which is known to be non-null in  com.puppycrawl.tools.checkstyle.checks.OrderedPropertiesCheck .processFiltered(File, FileText)  [com.puppycrawl.tools.checkstyle.checks.OrderedPropertiesCheck,  com.puppycrawl.tools.checkstyle.checks.OrderedPropertiesCheck]  Redundant null check at  OrderedPropertiesCheck.java:[line 113]Another occurrence at  OrderedPropertiesCheck.java:[line 115]  RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE  [ERROR] Redundant nullcheck of inStream, which is known to be non-null in  com.puppycrawl.tools.checkstyle.checks.TranslationCheck.getTranslationKeys(File)  [com.puppycrawl.tools.checkstyle.checks.TranslationCheck,  com.puppycrawl.tools.checkstyle.checks.TranslationCheck] Redundant null check at  TranslationCheck.java:[line 567]Another occurrence at  TranslationCheck.java:[line 571]  RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE  [ERROR] Redundant nullcheck of inputStream, which is known to be non-null in  com.puppycrawl.tools.checkstyle.checks.UniquePropertiesCheck.processFiltered(File, FileText)  [com.puppycrawl.tools.checkstyle.checks.UniquePropertiesCheck,  com.puppycrawl.tools.checkstyle.checks.UniquePropertiesCheck] Redundant null check at  UniquePropertiesCheck.java:[line 91]Another occurrence at  UniquePropertiesCheck.java:[line 93]  RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE ```","closed","miscellaneous,","krichter722","2019-09-03T20:11:43Z","2019-09-30T13:03:16Z"
"","7372","Re-enable Tidy plugin","The plugin was disabled due to conflict with linkcheck in issue https://github.com/checkstyle/checkstyle/issues/751  During issue https://github.com/checkstyle/checkstyle/issues/7340 the parameter `forceSite` was reverted.  This means that `tidy` can be enabled now.","closed","miscellaneous,","pbludov","2019-12-12T09:15:20Z","2019-12-13T03:35:10Z"
"","7340","linkcheck does not see dtd files","The linkcheck [report](https://checkstyle.org/linkcheck.html) shows that all `dtd` files hosted by https://checkstyle.org are missing: ![image](https://user-images.githubusercontent.com/900805/70389113-eb012e00-19cb-11ea-97f6-5853e4a85b9e.png) Actually, the files are at the place where they should be. All such links are clickable. Perhaps the reason is that at the time when linkcheck does it work, they are not in the `target/site` folder.  From [comment](https://github.com/checkstyle/checkstyle/pull/7351#discussion_r355740089)  > Issue will only become apparent when this PR is merged and then that site becomes an old version.  > Existing links only work if they have beginning slash. The ones without a beginning slash do not work. See https://checkstyle.sourceforge.io/version/8.26/config_imports.html#ImportControl_Description as an example from your search. Clicking on it sends user to 404.  > The reason why the beginning slash makes a difference is removing it changes the URL from a absolute path to a relative path. In base directory of https://checkstyle.sourceforge.io absolute and relative are the same. However when switching the directory we are accessing from via https://checkstyle.sourceforge.io/version/8.26/ for versions, absolute path forces us back to https://checkstyle.sourceforge.io while relative continue using https://checkstyle.sourceforge.io/version/8.26/.  > DTDs are located at https://checkstyle.sourceforge.io/dtds/import_control_1_4.dtd and not https://checkstyle.sourceforge.io/version/8.26/dtds/import_control_1_4.dtd .","closed","miscellaneous,","pbludov","2019-12-08T12:05:03Z","2019-12-26T17:11:51Z"
"","7512","Mark DetailAST::getNumberOfChildren as deprecated","The interface DetailAST currently contains two methods to return the count of children:      getChildCount     getNumberOfChildren  Both methods are implemented in the same way (getChildCount has an optimization):  https://github.com/checkstyle/checkstyle/blob/master/src/main/java/com/puppycrawl/tools/checkstyle/DetailAstImpl.java#L166  https://github.com/Distrotech/antlr2/blob/master/antlr/BaseAST.java#L67  The method `getNumberOfChildren` should be deprecated. This method cannot be removed because it can be used in third-party checks.","closed","miscellaneous,","pbludov","2020-01-28T08:25:30Z","2020-01-28T20:42:58Z"
"","7176","New check: AnnotatedMethodVisibilityModifier to demand all modifiers to be the same/consistent","The goal of the check is to ensure consistency between classes, e.g.: all things annotated with `@VisibleForTesting` from guava must be protected or package-private.  ``` public class TestClass {   @VisibleForTesting   void test0(){} //valid    @VisibleForTesting   String testField; //valid    com.google.common.annotations.@VisibleForTesting   void test1(){} //valid    @VisibleForTesting   protected void test2(){} //valid    @VisibleForTesting   public void test4(){} //invalid, should be protected or package-private    @VisibleForTesting   private void test5(){} //invalid, should be protected or package-private    public void test6(){} //not checked, does not have required annotation    @OtherAnnotation   public void test7(){} //not checked, does not have required annotation } ```  Design of Check (with default values) ```                     ```  As of JUnit 5, test methods don't have to be public. https://junit.org/junit5/docs/snapshot/user-guide/#writing-tests-classes-and-methods  > ""Test classes, test methods, and lifecycle methods are not required to be public, but they must not be private""  You could use this check to ensure your unit tests all have the same visibility.","open","approved,","Michael1993","2019-10-08T14:01:18Z","2019-10-28T17:11:19Z"
"","7012","Japanese locale contains mistranslation","The file src/main/resources/com/puppycrawl/tools/checkstyle/checks/javadoc/messages_ja.properties contains a mistranslation. ""終了時"" means ""ending time"".  Current translation: ``` summary.first.sentence=Javadocの最初の文には終了時がありません。 ``` Expected: ``` summary.first.sentence=Javadocの最初の文に末尾のピリオドがありません。 ```","closed","miscellaneous,","shirayuki","2019-08-24T01:57:59Z","2019-08-24T13:17:46Z"
"","7374","FallThrough module does not support the spelling ""fall-through"" by default","The FallThrough module supports by default various spellings of the word fallthrough in comments. These spellings are listed at https://checkstyle.sourceforge.io/config_coding.html or https://checkstyle.org/config_coding.html#FallThrough  Although, one of the main common spelling ""fall-through"" is not supported  According to wiktionary, fallthrough is the alternate spelling of fall-through which is the primary form. https://en.wiktionary.org/wiki/fallthrough https://en.wiktionary.org/wiki/fall-through Note also this spelling is used in the description of the documentation of the module...  NB: ticket opened in JIRA previously https://issues.apache.org/jira/browse/MCHECKSTYLE-383?page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel&focusedCommentId=16994795#comment-16994795     ``` $ cd/tmp/ $ mkdir example $ cd example $ wget https://github.com/checkstyle/checkstyle/releases/download/checkstyle-8.27/checkstyle-8.27-all.jar $ cat >config.xml            		       ^C $ RUN_LOCALE=""-Duser.language=en -Duser.country=US"" $ cat >example.java  public class example { // adapted from the original example at https://checkstyle.org/config_coding.html#FallThrough      public static void main(String[] args) { 	int i=0; 	switch (i) { 		case 0: 		  i++; 		// fall-through 		case 1: 		  i++; 		  // falls through 		case 2: 		case 3: 		case 4: { 		  i++; 		} 		// fallthrough 		case 5: 		  i++; 		/* fallthru */case 6: 		i++; 		// note that the trailing semicolon is missing in the original example at https://checkstyle.org/config_coding.html#FallThrough 		break; 	}         System.out.println(i);     }  } ^C $ java $RUN_LOCALE  -jar checkstyle-8.27-all.jar  -c config.xml example.java  Starting audit... [ERROR] /tmp/checkstyle/example.java:10:17: Fall through from previous branch of the switch statement. [FallThrough] Audit done. Checkstyle ends with 1 errors. ```   ---------------  No error should be raised. The comment ""fall-through"" should be supported by default since it is a correct spelling contrary to ""fallthru"" (which is supported). In other words, the default ReliefPattern regex should  be ""fallthru|falls?[ -]?through"" instead of ""fallthru|falls? ?through""  --------------  Default Regexp is changed.  Aditionally become relief ""fall thru"".","closed","new feature,","guillaumelambert","2019-12-12T16:09:04Z","2019-12-29T22:58:43Z"
"","7127","BeforeExecutionExclusionFileFilter documentation is misleading","The documentation of BeforeExecutionExclusionFileFilter says ``` Property fileNamePattern - Define regular expression to match the file name against. ``` This is misleading. With regular expressions, there is a difference between finding in an input sequencing and matching an input sequencing. Matching is about the complete input sequence. Therefore the above statement should be reworded to tell that we are only trying to find the pattern in a subsequence of the absolute file path, not to match it against the entire absolute file path.","open","approved,","Bananeweizen","2019-09-30T06:50:52Z","2019-10-08T00:27:02Z"
"","7310","minor: do not merge - shippable modified","testing of https://github.com/checkstyle/checkstyle/commit/67d49f61357a1f0580b180c5150d6c4cfb51a857  in second commit, we need to change some other CI file  third commit - some java file","closed","blocked,","romani","2019-12-04T23:28:27Z","2019-12-05T21:47:07Z"
"","7312","minor: do not merge - wercker modified","testing of https://github.com/checkstyle/checkstyle/commit/67d49f61357a1f0580b180c5150d6c4cfb51a857","closed","","romani","2019-12-04T23:28:33Z","2019-12-05T21:47:45Z"
"","7311","minor: do not merge - travis modified","testing of https://github.com/checkstyle/checkstyle/commit/67d49f61357a1f0580b180c5150d6c4cfb51a857","closed","","romani","2019-12-04T23:28:30Z","2019-12-05T21:47:28Z"
"","7808","minor: remove words for failing master","Testing master for word failures in other PRs.","closed","","rnveach","2020-03-09T00:51:43Z","2020-03-09T02:41:35Z"
"","7110","minor: change circle to test build","Testing for https://github.com/checkstyle/checkstyle/pull/7090#issuecomment-534049046","closed","blocked,","rnveach","2019-09-27T01:15:49Z","2019-09-27T02:31:53Z"
"","7313","minor: test","testing","closed","","romani","2019-12-04T23:51:04Z","2019-12-06T00:45:03Z"
"","7556","config: added javadoc checkstyle regression","test javadoc regression on checkstyle project.  expecting wercker to fail because of issue with 1 check.","closed","","rnveach","2020-02-18T10:23:25Z","2020-03-09T13:04:16Z"
"","7200","Teamcity is not shown in list of CI in PRs","Teamcity is not shown in list of CI in PRs   This become a problem ones I activated Two factor authorization on my account. TC is using my credentials to connect to github for sources.  Alert in TC PullRequest configuration: > Commit Status Publisher error. GitHub status: 'Success'. Publisher: githubStatusPublisher(https://api.github.com). Failed to complete request to GitHub. Please check if the error is not returned by a proxy or caused by the lack of permissions. Status: HTTP/1.1 401 Unauthorized     TC need to be updated to work by: - web hook to trigger build immediately ones PR is started - integrate with GitHub as it was before my activation of two factor authorization, or even completely be detached from my account.","closed","miscellaneous,","romani","2019-10-15T05:33:08Z","2019-10-17T12:56:07Z"
"","7199","do not merge; test TC","TC should be shown in CI list","closed","blocked,","romani","2019-10-15T05:02:24Z","2019-10-17T12:37:29Z"
"","7120","WriteTag: Add localization for javadoc.write.tag message","TC have valid violation. We probably can open issue on it that it does not reported this issue before. But suppression of violation will probably be a challenge in property file.  I recommend to update message `javadoc.writeTag` to put ""Javadoc tag"" in front (in other files use google translator), so message will be different. Such update should be done in separate issue/PR.  _Originally posted by @romani in https://github.com/checkstyle/checkstyle/pull/7046#issuecomment-534554795_","closed","approved,","pbludov","2019-09-29T11:43:32Z","2019-10-24T15:17:21Z"
"","7505","Add warning message at style coverage pages that referenced config is not released","taken from #7503  At https://checkstyle.org/google_style.html , https://checkstyle.org/sun_style.html we use links to most recent google style file (not yet released version) on this page as we rely on search feature of GitHub, search feature is available only for master head code.  We can not put here links to previous release, that is absolutely reasonable from users perspective, but unfortunately not supported by Github search. So it would force us to use strict line number links, that will be error prone and heavy to support if modification happens.  Proposal: What we can do is to put a warning on top of such html page and warm users to use embedded version in jar or versioned (for certain tag name) file.","closed","miscellaneous,","romani","2020-01-25T14:40:00Z","2020-02-11T14:57:19Z"
"","7229","resolve warnings in output of pmd","taken from #7225 blocked by https://github.com/pmd/pmd/issues/2019  ---  Warnings about deprecation: ``` [INFO]  [INFO] --- maven-pmd-plugin:3.12.0:pmd (pmd) @ checkstyle --- [WARNING] Auxclasspath entry file:/home/rivanov/java/github/romani/checkstyle/target/test-classes doesn't exist, ignoring it [WARNING] Auxclasspath entry file:/home/rivanov/java/github/romani/checkstyle/target/classes doesn't exist, ignoring it [WARNING] Use of deprecated attribute 'VariableDeclaratorId/@ArrayDepth' in XPath query [WARNING] Use of deprecated attribute 'VariableDeclaratorId/@Array' in XPath query [WARNING] Use of deprecated attribute 'Type/@ArrayDepth' in XPath query [WARNING] Use of deprecated attribute 'Type/@Array' in XPath query [WARNING] Use of deprecated attribute 'FieldDeclaration/@VariableName' in XPath query [WARNING] Use of deprecated attribute 'FieldDeclaration/@ArrayDepth' in XPath query [WARNING] Use of deprecated attribute 'FieldDeclaration/@Array' in XPath query [WARNING] Use of deprecated attribute 'PrimitiveType/@ArrayDepth' in XPath query [WARNING] Use of deprecated attribute 'PrimitiveType/@Array' in XPath query ```  looks like we actually use them: ``` $ ag ""VariableDeclaratorId"" config/pmd.xml 426:          //VariableDeclaratorId[string-length(@Image) < 2] ``` need to be fixed. UPDATE: it is not a reason of warnings, see pmd issue at the top. BUT custom PMD rule should be removed also.","closed","blocked,","romani","2019-10-27T21:32:49Z","2022-01-01T04:06:28Z"
"","7230","Remove obsolete class loading from JavadocMethod","Split from https://github.com/checkstyle/checkstyle/issues/7116 ,  We need to remove class loading from the JavadocMethod check, which is just remains of AbstractTypeAwareCheck.","closed","breaking compatibility,","rnveach","2019-10-27T22:07:17Z","2019-12-29T20:36:54Z"
"","7096","JavadocMethodCheck: remove deprecated properties ignoreMethodNamesRegex, minLineCount, allowMissingJavadoc, allowMissingPropertyJavadoc","Split from https://github.com/checkstyle/checkstyle/issues/7089,  JavadocMethodCheck has properties that are deprecated and do nothing anymore. These properties are `ignoreMethodNamesRegex`, `minLineCount`, `allowMissingJavadoc`, `allowMissingPropertyJavadoc`. They were deprecated when we split this check into 2 for [MissingJavadocMethodCheck](https://checkstyle.org/config_javadoc.html#MissingJavadocMethod) (at [issue](https://github.com/checkstyle/checkstyle/issues/6703) released at 8.21) and do absolutely nothing since the split.","closed","breaking compatibility,","rnveach","2019-09-24T22:24:13Z","2020-09-23T13:54:34Z"
"","7190","Remove all deprecated setClassLoader methods from Checker and TreeWalker","Split from https://github.com/checkstyle/checkstyle/issues/3773 and identified at https://github.com/checkstyle/checkstyle/pull/7114#issuecomment-536136005 ,  maven-checkstyle-plugin uses Checkers and TreeWalkers `setClassLoader` method and can't be completely removed until the plugin stops using it. See https://github.com/apache/maven-checkstyle-plugin/blob/57cf9696cfd1fb0d4de5842bea050b9aa4026dd0/src/main/java/org/apache/maven/plugins/checkstyle/exec/DefaultCheckstyleExecutor.java#L204  The methods had it's functionality removed in #3773 and they do nothing now.  Once the plugin removes its usage of them, we should completely remove these methods from checkstyle.  This issue is blocked till [maven-checkstyle-plugin](https://maven.apache.org/plugins/maven-checkstyle-plugin/) is released after `Version: 3.1.0` (this is current version )  Issue in maven-checkstyle-plugin: https://issues.apache.org/jira/browse/MCHECKSTYLE-381  -------  **Migration note:**  after release of fix for this issue. There will be problems like: `Caused by: org.apache.maven.plugin.PluginContainerException: An API incompatibility was encountered while executing org.apache.maven.plugins:maven-checkstyle-plugin:3.1.0:check: java.lang.NoSuchMethodError: com.puppycrawl.tools.checkstyle.Checker.setClassLoader(Ljava/lang/ClassLoader;)V`  to fix this you need to upgrade to `maven-checkstyle-plugin:3.1.1`","closed","easy,","rnveach","2019-10-12T15:34:25Z","2020-03-12T09:58:35Z"
"","7417","JavadocMethodCheck: swap scope to access modifiers","Split from https://github.com/checkstyle/checkstyle/issues/3511 ,  Swap scope and exclude scope to access modifier in the check JavadocMethodCheck.  **Migration Notes:** Property excludeScope was dropped and scope property was from https://checkstyle.org/property_types.html#scope to accessModifiers of type https://checkstyle.org/property_types.html#access_modifiers .  The change to `accessModifiers` basically combines `scope` and `excludeScope` into 1 field and allows you specify the exact modifiers you want to validate methods with. Scope ambiguously only let you choose 1 specific modifier, and any other modifers above it in our type documentation were included, regardless if you wanted to include them or not. With `accessModifiers` you can now write out any and all modifiers you wish to cover, with no ambiguity.  Examples:  scope => accessModifiers `private` => `private`, `package`, `protected`, and `public` `package` => `package`, `protected`, and `public` `protected` => `protected`, and `public` `public` => `public`  `excludeScope` only allowed you to remove that 1 specific modifier. So `scope` of `private` and `excludeScope` of `package` included the modifiers `private`, `protected`, and `public`. With access modifiers you can have the same config with: ````      ````  Scope did support anonymous inner classes. Since that is technically not a modifier, it is no longer supported and there is workaround.  -------  **MIGRATION NOTES**: old config example: ```xml                                ``` should be changed to: ```xml                                ```  old config example: ```xml                                ``` should be changed to: ```xml                                ```","closed","breaking compatibility,","rnveach","2019-12-29T23:55:18Z","2022-04-12T16:07:57Z"
"","7105","XMLLogger: remove deprecated constructor","Split from #7089,  XMLLogger has a deprecated constructor involving boolean parameters that were converted to enumerations for easier understanding.","closed","breaking compatibility,","rnveach","2019-09-26T22:38:37Z","2019-09-28T18:45:54Z"
"","7100","FileContents: remove deprecated constructor and deprecated methods","Split from #7089,  FileContents has a deprecated constructor and deprecated methods involving the old method naming scheme ""CPP"" and ""C"" for comments. The methods were renamed to be more generic names like singleline and block comments.","closed","breaking compatibility,","rnveach","2019-09-25T11:23:56Z","2019-09-26T19:36:54Z"
"","7107","DefaultLogger: remove deprecated constructors","Split from #7089,  DefaultLogger has a few deprecated constructors involving boolean parameters that were converted to enumerations for easier understanding.","closed","breaking compatibility,","rnveach","2019-09-26T22:43:30Z","2019-09-29T12:01:20Z"
"","7108","ConfigurationLoader: remove deprecated constructors","Split from #7089,  ConfigurationLoader has a few deprecated constructors involving boolean parameters that were converted to enumerations for easier understanding.","closed","breaking compatibility,","rnveach","2019-09-26T22:55:00Z","2019-09-28T20:53:40Z"
"","7098","Remove AbstractTypeParameterNameCheck since it is Deprecated","Split from #7089,  `AbstractTypeParameterNameCheck` is a deprecated class that we don't even test or validate anymore. We deprecated it because we will no longer support abstract classes.","closed","breaking compatibility,","rnveach","2019-09-24T22:36:13Z","2019-09-26T18:52:51Z"
"","7116","Remove AbstractTypeAwareCheck and combine the missing pieces into JavadocMethod","Split from #6873 ,  It is too much work to just up and convert the check to a new version.  I suggest smaller steps and start by removing `AbstractTypeAwareCheck` and merge the needed parts into JavadocMethod so that check can continue to function as it does now.  After this merger, we can then start looking at the pieces and removing more.","closed","breaking compatibility,","rnveach","2019-09-28T16:53:21Z","2019-10-27T21:37:00Z"
"","7561","Add default config example for AbstractClassName","split from #5832   update AbstractClassName to make examples for all configs shown in documentation https://checkstyle.org/config_naming.html#AbstractClassName this check need default config and example of code that is violates and expect as correct.  See original issues for examples on how to make update.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","romani","2020-02-21T23:02:32Z","2020-07-19T13:36:09Z"
"","7562","Add default config example for ClassTypeParameterName","split from #5832  update ClassTypeParameterName to make examples for all configs shown in documentation https://checkstyle.org/config_naming.html#ClassTypeParameterName this check need default config and example of code that is violates and expect as correct.  See original issues for examples on how to make update.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","romani","2020-02-21T23:07:13Z","2020-10-23T02:01:03Z"
"","7567","Add default config example for MethodName","split from #5832  update AbstractClassName to make examples for all configs shown in documentation https://checkstyle.org/config_naming.html#MethodName this check need default config and example of code that is violates and expect as correct.  See original issues for examples on how to make update.   ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","romani","2020-02-21T23:18:58Z","2020-12-02T15:52:44Z"
"","7564","Add default config example for ConstantName","split from #5832  update AbstractClassName to make examples for all configs shown in documentation https://checkstyle.org/config_naming.html#ConstantName this check need default config and example of code that is violates and expect as correct.  See original issues for examples on how to make update.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","romani","2020-02-21T23:12:29Z","2020-12-03T04:45:07Z"
"","7563","Add default config example for CatchParameterName","split from #5832  update AbstractClassName to make examples for all configs shown in documentation https://checkstyle.org/config_naming.html#CatchParameterName this check need default config and example of code that is violates and expect as correct.  See original issues for examples on how to make update.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","romani","2020-02-21T23:10:47Z","2020-04-29T14:03:48Z"
"","7565","Add default config example for AbstractClassName","split from #5832  update AbstractClassName to make examples for all configs shown in documentation https://checkstyle.org/config_naming.html#AbstractClassName this check need default config and example of code that is violates and expect as correct.  See original issues for examples on how to make update.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","romani","2020-02-21T23:14:22Z","2020-05-28T14:15:56Z"
"","7566","Add default and missed property config example for AbbreviationAsWordInName","split from #5832  update AbstractClassName to make examples for all configs shown in documentation https://checkstyle.org/config_naming.html#AbbreviationAsWordInName this check need default config and example of code that is violates and expect as correct.  See original issues for examples on how to make update.   ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","romani","2020-02-21T23:18:10Z","2020-04-24T17:44:02Z"
"","7341","javadoc links to non-public members","Some Javadoc methods contains links to non-public fields and methods. For example:   https://checkstyle.org/apidocs/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.html#setViolateExecutionOnNonTightHtml-boolean-  ![image](https://user-images.githubusercontent.com/900805/70389643-60bcc800-19d3-11ea-81c3-9eb1e3daa31e.png)  The field `violateExecutionOnNonTightHtml` is not public and is ignored by the  javadoc tool. Such Javadoc is useless and should be rewritten.","closed","miscellaneous,","pbludov","2019-12-08T12:58:31Z","2019-12-26T17:11:56Z"
"","7445","Issue #5604: activation of sonar validation in PRs","small step for #5604  it does not integrate Sonar to PR status in githubl, but should show statistics on sonarqube.io , I will investigate further how to make complete integration.","closed","","romani","2020-01-06T01:15:27Z","2020-01-08T22:29:57Z"
"","7089","Remove deprecated methods and classes","Since maven-checkstyle-plugin was updated to not use these methods, we should remove them so they aren't taking up space in our code.  Deprecated methods are in: ConfigurationLoader, DefaultLogger, XMLLogger, FileContents, JavadocMethodCheck  And we can remove the class AbstractTypeParameterNameCheck.","closed","breaking compatibility,","rnveach","2019-09-22T19:56:30Z","2019-09-26T22:56:27Z"
"","7976","Add OpenJ9 to build chain","Similar to https://github.com/checkstyle/checkstyle/issues/7969  We only build against oracle openjdk. while most other JDKs do use the same classloading mechanisms and garbage collectors, one does stand out: OpenJ9. It is a former IBM JDK (IBM J9) which now belongs to the Eclipse Foundation.  At https://adoptopenjdk.net  you can download both adopt-hotspot (the oracle openjdk rebuilt) and adopt-openj9.  We should add this to make sure we do only rely on functionality only provided by the Java standards.  That is:   * adopt-openj9@1.8.x (LTS)  * adopt-openj9@1.11.x (LTS)  * adopt-openj9@1.14.x (latest)  i.e. all LTS releases and the latest release.  Jabba also includes this JDK.","open","discussion ongoing,","bmarwell","2020-03-28T12:18:23Z","2020-04-06T08:08:43Z"
"","7297","EmptyLineSeparator skips single line comments under package","Similar to #4763 but with single line comment. from https://github.com/checkstyle/checkstyle/pull/7251#issuecomment-554067904_  ``` cat Test.java package test; // violation is expected  import java.lang;  class Test {}  cat config.xml                              		             java -jar checkstyle-8.20-all.jar -c config.xml TestClass.java Starting audit... Audit done.  ```  expected: violation","closed","approved,","strkkk","2019-12-02T09:15:21Z","2021-04-02T14:33:32Z"
"","7521","analyse size of mail-list and Rss audience for announcements","sharing news about new release is still manual process. Historically it was done by: mail-list - https://groups.google.com/forum/#!forum/checkstyle-announce (22 members) rss - https://sourceforge.net/p/checkstyle/news/ (unknown audience) twitter - https://twitter.com/checkstyle_java (189 followers)  it would be better to avoid extra manual actions and reduce news channels that are not in use that much (mail-list, rss)  Users of such channels can simply ""watch"" us on Github for ""Releases only"": ![image](https://user-images.githubusercontent.com/812984/73095161-d6eb9000-3e96-11ea-939d-59ac9135692a.png)    -------  related discussions: https://github.com/checkstyle/sonar-checkstyle/issues/259#issuecomment-577773493 https://github.com/checkstyle/sonar-checkstyle/issues/281#issuecomment-580146879","closed","approved,","romani","2020-01-30T20:18:08Z","2020-05-31T15:07:18Z"
"","7030","minor: refactoring of line endings","separated first commit from #7025","closed","","strkkk","2019-08-29T12:27:21Z","2021-01-29T11:41:38Z"
"","7783","infra: pgjdbc, migrate Maven -> Gradle","See https://github.com/pgjdbc/pgjdbc/pull/1726#issuecomment-594643435  when https://github.com/pgjdbc/pgjdbc/pull/1627 is merged this PR be ready for merge.","closed","","vlsi","2020-03-04T16:45:13Z","2020-04-01T14:11:43Z"
"","7472","Disable instantiation of modules with private ctor","Sanar violation: Make sure that this accessibility update is safe here  https://sonarcloud.io/project/issues?id=org.checkstyle%3Acheckstyle&issues=AW9t2w4vYD2QG1pPXIVH&open=AW9t2w4vYD2QG1pPXIVH  https://github.com/checkstyle/checkstyle/blob/284278fde3431e33701cad1c3cc6690abcec0bb6/src/main/java/com/puppycrawl/tools/checkstyle/PackageObjectFactory.java#L355-L361  `declaredConstructor.setAccessible(true);`  it was added at https://github.com/checkstyle/checkstyle/commit/c5c3b7eed3a5c00aee3225742365f6e36ab11dbd ....  not sure why I was agree to allow change main code in favor of IDEA inspection.   We do not need to load private stuff and overuse reflection. All IDEA complains should be suppressed or inspection is configured to not run in `tests` as there are bunch of public stuff.  If there is some other good reason, it is better to share it in this issue and mark issue on sonar as resolved.","closed","approved,","romani","2020-01-13T22:41:08Z","2020-01-18T19:54:05Z"
"","7884","XMLLogger should include fullyqualified name of module AND moduleId when moduleId is present","Run checkstyle with a configuration file containing a [user-defined module ID](https://checkstyle.org/config.html#Id) on a file and output to a file in XML format.  The [XMLLogger](https://checkstyle.org/apidocs/com/puppycrawl/tools/checkstyle/XMLLogger.html)  output format is lossy.  ## Current Behavior   ``` /var/tmp $ javac Test.java ```  ``` /var/tmp $ cat config.xml ```  ```xml                                                                    ```  ``` /var/tmp $ cat Test.java ```  ```java public class Test {     public Test(Object input) {         if (input == null) {             System.out.println(""null input"");     }} } ```  ``` /var/tmp $ RUN_LOCALE=""-Duser.language=en -Duser.country=US"" ```  ``` java $RUN_LOCALE -jar checkstyle-8.30-all.jar -c config.xml \         -f xml -o checkstyle_errors.xml Test.java  Checkstyle ends with 2 errors. ```  ``` /var/tmp $ cat checkstyle_errors.xml ```  ```xml        ```  ---------------  ## Expected  I expect the ""source"" field to have the full source path of the violated check.  I expect the ""source"" field be consistent for all module violations, whether or not they have a user-defined module ID.  The actual check that is violated is `com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck`.  Therefore, I expect the error file generated by `-f xml` to look like this:  ``` /var/tmp $ cat checkstyle_errors.xml ```  ```xml        ```  --------------  (Copied from original issue https://github.com/checkstyle/checkstyle/issues/7538 )","open","","Sadgrinner","2020-03-17T18:19:28Z","2020-10-16T13:17:43Z"
"","7428","Revert ""Issue #7423: provide organization/projectKey name as checkstyle for sonar""","Reverts checkstyle/checkstyle#7426","closed","","romani","2019-12-31T15:42:32Z","2019-12-31T15:42:54Z"
"","7985","Issue #7874: Resolve Pitest Issues - ImportOrderCheck (3)","Resolves Issue #7874: Resolve Pitest Issues - ImportOrderCheck (3)  PiTest Report, ran before changes, showing surviving mutation: https://nmancus1.github.io/Issue-7874/com.puppycrawl.tools.checkstyle.checks.imports/ImportOrderCheck.java.html#org.pitest.mutationtest.report.html.SourceFile@7ea147e3_820  Surviving mutation: `removed conditional - replaced equality check with false → SURVIVED`  PiTest Report, ran after changes, to show mutation was killed (updated): https://nmancus1.github.io/Issue-7874/pitest_3/202003292351/com.puppycrawl.tools.checkstyle.checks.imports/ImportOrderCheck.java.html#org.pitest.mutationtest.report.html.SourceFile@2a2271dc_820","closed","","nick-mancuso","2020-03-29T04:20:04Z","2020-04-02T09:34:02Z"
"","7864","Issue #7753: Update AbstractChecks to log DetailAST - NoLineWrap","resolves Issue #7753   [Diff Report](https://abhishek-kumar09.github.io/7753/reports/diff/index.html)","closed","","Abhishek-kumar09","2020-03-16T12:04:35Z","2020-03-17T16:20:43Z"
"","7932","Issue #6192: New module RequireEmptyLineBeforeBlockTagGroup to ensure there is an empty line before javadoc tag like @param","Resolves Issue #6192 Contribution PR: https://github.com/checkstyle/contribution/pull/478  Diff Regression projects: https://gist.githubusercontent.com/josephmate/a39a39b4c60aa11929aee4574aa90220/raw/6cff315508233d6056dc37debcb8737e4c031fd5/projects-to-test-on.properties  Diff Regression config: https://gist.githubusercontent.com/josephmate/a39a39b4c60aa11929aee4574aa90220/raw/6cff315508233d6056dc37debcb8737e4c031fd5/my_check_base.xml  Diff Regression patch config: https://gist.githubusercontent.com/josephmate/a39a39b4c60aa11929aee4574aa90220/raw/6cff315508233d6056dc37debcb8737e4c031fd5/my_check_patch.xml  **How the functional change works:**  1. only inspect nodes of type `JavadocTokenTypes.JAVADOC_TAG` 2. ignore if there is already an at-clause before the current at-clause. an empty line is only needed before the first at-clause 3. ignore if the at-clause is the only thing in the javadoc. for some reason, a developer might only want the at-clause inside the javadoc with nothing else. it would be strange to recommend an empty like before it 4. check that there are enough empty lines before it","closed","","josephmate","2020-03-21T17:20:18Z","2021-04-27T01:06:39Z"
"","7816","Issue #7534: Add pmd build item","Resolves Issue  #7810 and #7534","closed","","nick-mancuso","2020-03-09T19:30:19Z","2020-03-19T14:37:31Z"
"","7908","Issue #7805: Resolve Pitest Issues - CustomImportOrderCheck (4)","Resolves #7805 and #7803   As mentioned in https://github.com/checkstyle/checkstyle/issues/7805#issuecomment-601250261 , there were no differences and no UTs were suggested in the diff report (https://github.com/checkstyle/checkstyle/issues/7805#issuecomment-600638693) and observed no other way to fix the issue.  Removing the condition was the only approach. The surviving mutation referred to by #7803 is also killed by this approach.","closed","","malinthar","2020-03-19T17:15:42Z","2020-03-20T11:49:31Z"
"","7711","Issue: #7584 add RightCurly example","Resolves #7584   ![2020-03-14](https://user-images.githubusercontent.com/29332774/76693465-e1770a00-663b-11ea-8713-d098dd143484.png) ![2020-03-14 (1)](https://user-images.githubusercontent.com/29332774/76693466-e3d96400-663b-11ea-862a-9f2179772031.png)  Ouput of default example: ``` $ cat configRightCurlyDefault.xml                 $ cat RightCurlyDefault.java public class Test {    public void test() {      if (foo) {       bar();     }           // violation, right curly must be in the same line as the 'else' keyword     else {       bar();     }      if (foo) {       bar();     } else {     // OK       bar();     }      if (foo) { bar(); } int i = 0;  // violation                   // ^^^ statement is not allowed on same line after curly right brace      if (foo) { bar(); }            // OK     int i = 0;      try {       bar();     }           // violation, rightCurly must be in the same line as 'catch' keyword     catch (Exception e) {       bar();     }      try {       bar();     } catch (Exception e) { // OK       bar();     }    }                         // OK    public void testSingleLine() { bar(); } // OK, because singleline is allowed }  $  java -jar checkstyle-8.29-all.jar -c configRightCurlyDefault.xml RightCurlyDefault.java Starting audit... [ERROR] /mnt/c/Users/jrl-c/Desktop/GSoC checkstyle/GSoC checkstyle workspace/RightCurlyDefault.java:7:5: '}' at column 5 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly] [ERROR] /mnt/c/Users/jrl-c/Desktop/GSoC checkstyle/GSoC checkstyle workspace/RightCurlyDefault.java:18:23: '}' at column 23 should be alone on a line. [RightCurly] [ERROR] /mnt/c/Users/jrl-c/Desktop/GSoC checkstyle/GSoC checkstyle workspace/RightCurlyDefault.java:25:5: '}' at column 5 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly] Audit done. Checkstyle ends with 3 errors. ```  Output of non-default example: ``` $ cat configRightCurly.xml                                            $ cat RightCurly.java public class Test {    public void test() {      if (foo) {       bar();     } else { bar(); }   // violation, right curly must be alone on line      if (foo) {       bar();     } else {       bar();     }                   // OK      try {       bar();     } catch (Exception e) { // OK because config is set to token METHOD_DEF and LITERAL_ELSE       bar();     }    }                         // OK    public void violate() { bar; } // violation, singleline is not allowed here    public void ok() {     bar();   }                              // OK }  $  java -jar checkstyle-8.2-all.jar -c configRightCurly.xml RightCurly.java Starting audit... [ERROR] /mnt/c/Users/jrl-c/Desktop/GSoC checkstyle/GSoC checkstyle workspace/RightCurly.java:7:21: '}' at column 21 should be alone on a line. [RightCurly] [ERROR] /mnt/c/Users/jrl-c/Desktop/GSoC checkstyle/GSoC checkstyle workspace/RightCurly.java:23:32: '}' at column 32 should be alone on a line. [RightCurly] Audit done. Checkstyle ends with 2 errors. ``` Add more examples: ![2020-03-14 (2)](https://user-images.githubusercontent.com/29332774/76693467-ed62cc00-663b-11ea-8f1b-6ce539ceebcc.png)   ```  $ cat configRightCurlyAloneOrSingleline.xml                                            $ cat RightCurlyAloneOrSingleline.java public class Test {    public void test() {      if (foo) {       bar();     } else {        // violation, right curly must be alone       bar();     }      if (foo) {       bar();     }               // OK     else {       bar();     }      try {       bar();     } catch (Exception e) {        // OK because config did not set token LITERAL_TRY       bar();     }    }                                // OK    public void violate() { bar(); } // OK , because singleline }  $ java -jar checkstyle-8.29- all.jar -c configRightCurlyAloneOrSingleline.xml RightCurlyAloneOrSingleline.java Starting audit... [ERROR] /mnt/c/Users/jrl-c/Desktop/GSoC checkstyle/GSoC checkstyle workspace/RightCurlyAloneOrSingleline.java:7:5: '}' at column 5 should be alone on a line. [RightCurly] Audit done. Checkstyle ends with 1 errors.  ```","closed","","AMOOOMA","2020-03-01T04:30:14Z","2020-03-15T23:37:16Z"
"","7882","Issue #6988: Sort XPath Results in Document Order","Resolves #6988   Extending the work and implementing @rnveach's sort criteria discussed in PR #7485. Example from: https://github.com/checkstyle/checkstyle/pull/7485#discussion_r373855071  ``` $ cat test.java  public class test {     void method() {     } } ``` Before: ``` $  java -jar checkstyle-8.29-all.jar -b ""//CLASS_DEF/*"" test.java  CLASS_DEF -> CLASS_DEF [1:0] |--IDENT -> test [1:13] --------- CLASS_DEF -> CLASS_DEF [1:0] |--LITERAL_CLASS -> class [1:7] --------- CLASS_DEF -> CLASS_DEF [1:0] |--MODIFIERS -> MODIFIERS [1:0] --------- CLASS_DEF -> CLASS_DEF [1:0] `--OBJBLOCK -> OBJBLOCK [1:18] ``` After: ``` $ java -jar checkstyle-8.31-SNAPSHOT-all.jar -b ""//CLASS_DEF/*"" test.java CLASS_DEF -> CLASS_DEF [1:0] |--MODIFIERS -> MODIFIERS [1:0] --------- CLASS_DEF -> CLASS_DEF [1:0] |--LITERAL_CLASS -> class [1:7] --------- CLASS_DEF -> CLASS_DEF [1:0] |--IDENT -> test [1:13] --------- CLASS_DEF -> CLASS_DEF [1:0] `--OBJBLOCK -> OBJBLOCK [1:18] ``` Diff Report: https://gaurabdg.github.io/checkstyle-tester-reports/regression/XPathSort/diff/","closed","","gaurabdg","2020-03-17T15:10:29Z","2020-05-20T22:21:55Z"
"","7993","Issue #3946: code cleanup: minimize future xdoc changes","Resolves #3946 Resolves #3934(duplicate).  1. All xdocs have been updated source: https://github.com/checkstyle/checkstyle/pull/5484#issuecomment-367367563 2. An UT has been provided to enforce this formatting  source:  https://github.com/checkstyle/checkstyle/issues/3946#issue-212299810 ``` TOKEN1, TOKEN2, TOKEN3. ``` to: ``` TOKEN1 ,TOKEN2 ,TOKEN3 . ```  Generated Site: https://gaurabdg.github.io/checkstyle-tester-reports/site/","closed","","gaurabdg","2020-03-29T20:36:58Z","2020-06-02T12:52:31Z"
"","7907","#7695 Update for RegexpMultiline","Resolve of issue #7695    ![Screenshot_2020-03-19 checkstyle – Regexp(1)](https://user-images.githubusercontent.com/42131834/77083862-27f5ab80-6a24-11ea-8179-3926c63c086c.png)  ###  Example of  Default output 1 : This check doesn't provide any configurable property.    ### Example of Default output 2 :  $ cat config2.xml  ```                                                  ```     $ cat test_2.java     ``` void method() {   System.out. // violation   print(""Example"");   System.out.   print(""Example""); }  ```    $ java -jar checkstyle-8.30-all.jar -c config2.xml test_2.java    ``` Starting audit... [ERROR] /home/methorthodox/New Folder/test_2.java:3: Line matches the illegal pattern 'System\.out.*print\('. [RegexpMultiline] Audit done. Checkstyle ends with 1 errors. ```    ### Example of Non default output 1:  $ cat config1.xml  ```                               ```    $ cat TEST1.java   ``` void method() {     System.out.print(""Example""); // OK     System.out.println(""Example""); // OK     System.out. // OK     print(""Example"");     System.out. // OK     println(""Example"");     System.out.print //OK     (""Example"");     System.out.println //OK     (""Example"");     System. // violation     out.print(""Example"");     System. // violation     out.println(""Example"");   } ```   $ java -jar checkstyle-8.30-all.jar -c config1.xml TEST1.java  ``` Starting audit... [ERROR] /home/methorthodox/New Folder/TEST1.java:2: Line matches the illegal pattern 'System\.(out)|(err)\.print(ln)?\('. [RegexpMultiline] [ERROR] /home/methorthodox/New Folder/TEST1.java:3: Line matches the illegal pattern 'System\.(out)|(err)\.print(ln)?\('. [RegexpMultiline] [ERROR] /home/methorthodox/New Folder/TEST1.java:4: Line matches the illegal pattern 'System\.(out)|(err)\.print(ln)?\('. [RegexpMultiline] [ERROR] /home/methorthodox/New Folder/TEST1.java:6: Line matches the illegal pattern 'System\.(out)|(err)\.print(ln)?\('. [RegexpMultiline] [ERROR] /home/methorthodox/New Folder/TEST1.java:8: Line matches the illegal pattern 'System\.(out)|(err)\.print(ln)?\('. [RegexpMultiline] [ERROR] /home/methorthodox/New Folder/TEST1.java:10: Line matches the illegal pattern 'System\.(out)|(err)\.print(ln)?\('. [RegexpMultiline] Audit done. Checkstyle ends with 6 errors. ```   ### Example of Non default output 2:  $ cat config2.xml   ```                                                  ```    $ cat TEST2.java   ``` void method() {     System.out. // violation     print(""Example"");     System.out // vioaltion     .print(""Example"");     System.out.print(""Example""); // OK     System. // violation     out.print(""Example"");     System // violation     .out.print(""Example"");     System.out.print // violation     (""Example"");   } ```   $ java -jar checkstyle-8.30-all.jar -c config2.xml TEST2.java  ``` Starting audit... [ERROR] /home/methorthodox/New Folder/TEST2.java:2: Line matches the illegal pattern 'System\.out.*print\('. [RegexpMultiline] Audit done. Checkstyle ends with 1 errors. ```","closed","awaiting changes,","kalakandi","2020-03-19T15:56:32Z","2020-09-07T08:52:47Z"
"","7904","#7649 Update for Modified Control Variable","Resolve issue #7649   Example: ![Screenshot from 2020-03-19 01-35-33](https://user-images.githubusercontent.com/49086647/77008130-99355000-698b-11ea-9e83-a11bc1bd84a1.png)  Example: ![Screenshot from 2020-03-19 01-34-28](https://user-images.githubusercontent.com/49086647/77008304-ed403480-698b-11ea-8ccb-597455ba3b2c.png)  Output of default examples:  Example 1: $ cat config.xml ![Screenshot from 2020-03-19 03-27-38](https://user-images.githubusercontent.com/49086647/77011972-04ceeb80-6993-11ea-96d8-8ada5ddf33ed.png)  $ cat Test.java ![Screenshot from 2020-03-19 03-28-20](https://user-images.githubusercontent.com/49086647/77011987-0dbfbd00-6993-11ea-8e96-44f8e34e8a82.png)   Example 2: $ cat config.xml ![Screenshot from 2020-03-19 03-27-34](https://user-images.githubusercontent.com/49086647/77012002-16b08e80-6993-11ea-8a2f-1ed52c01fc97.png)  $ cat Test.java ![Screenshot from 2020-03-19 03-28-28](https://user-images.githubusercontent.com/49086647/77012021-2203ba00-6993-11ea-8c31-bbf8d535ae85.png)  $ java -jar checkstyle-8.30-all.jar -c config1.xml Test1.java com.puppycrawl.tools.checkstyle.api.CheckstyleException: unable to parse configuration stream - The processing instruction target matching ""[xX][mM][lL]"" is not allowed.:5:6 	at com.puppycrawl.tools.checkstyle.ConfigurationLoader.loadConfiguration(ConfigurationLoader.java:318) 	at com.puppycrawl.tools.checkstyle.ConfigurationLoader.loadConfiguration(ConfigurationLoader.java:263) 	at com.puppycrawl.tools.checkstyle.Main.runCheckstyle(Main.java:365) 	at com.puppycrawl.tools.checkstyle.Main.runCli(Main.java:324) 	at com.puppycrawl.tools.checkstyle.Main.execute(Main.java:187) 	at com.puppycrawl.tools.checkstyle.Main.main(Main.java:124) Caused by: org.xml.sax.SAXParseException; systemId: file:/home/anisha/dir/config1.xml; lineNumber: 5; columnNumber: 6; The processing instruction target matching ""[xX][mM][lL]"" is not allowed. 	at java.xml/com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:204) 	at java.xml/com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.fatalError(ErrorHandlerWrapper.java:178) 	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:400) 	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:327) 	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLScanner.reportFatalError(XMLScanner.java:1471) 	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLScanner.scanPIData(XMLScanner.java:745) 	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanPIData(XMLDocumentFragmentScannerImpl.java:1049) 	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLScanner.scanPI(XMLScanner.java:713) 	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$PrologDriver.next(XMLDocumentScannerImpl.java:891) 	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:605) 	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:534) 	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:888) 	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:824) 	at java.xml/com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141) 	at java.xml/com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1216) 	at java.xml/com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:635) 	at com.puppycrawl.tools.checkstyle.XmlLoader.parseInputSource(XmlLoader.java:84) 	at com.puppycrawl.tools.checkstyle.ConfigurationLoader.parseInputSource(ConfigurationLoader.java:196) 	at com.puppycrawl.tools.checkstyle.ConfigurationLoader.loadConfiguration(ConfigurationLoader.java:311) 	... 5 more Checkstyle ends with 1 errors.   $ java -jar checkstyle-8.30-all.jar -c config2.xml Test2.java com.puppycrawl.tools.checkstyle.api.CheckstyleException: unable to parse configuration stream - The processing instruction target matching ""[xX][mM][lL]"" is not allowed.:5:6 	at com.puppycrawl.tools.checkstyle.ConfigurationLoader.loadConfiguration(ConfigurationLoader.java:318) 	at com.puppycrawl.tools.checkstyle.ConfigurationLoader.loadConfiguration(ConfigurationLoader.java:263) 	at com.puppycrawl.tools.checkstyle.Main.runCheckstyle(Main.java:365) 	at com.puppycrawl.tools.checkstyle.Main.runCli(Main.java:324) 	at com.puppycrawl.tools.checkstyle.Main.execute(Main.java:187) 	at com.puppycrawl.tools.checkstyle.Main.main(Main.java:124) Caused by: org.xml.sax.SAXParseException; systemId: file:/home/anisha/dir/config2.xml; lineNumber: 5; columnNumber: 6; The processing instruction target matching ""[xX][mM][lL]"" is not allowed. 	at java.xml/com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:204) 	at java.xml/com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.fatalError(ErrorHandlerWrapper.java:178) 	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:400) 	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:327) 	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLScanner.reportFatalError(XMLScanner.java:1471) 	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLScanner.scanPIData(XMLScanner.java:745) 	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanPIData(XMLDocumentFragmentScannerImpl.java:1049) 	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLScanner.scanPI(XMLScanner.java:713) 	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$PrologDriver.next(XMLDocumentScannerImpl.java:891) 	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:605) 	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:534) 	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:888) 	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:824) 	at java.xml/com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141) 	at java.xml/com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1216) 	at java.xml/com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:635) 	at com.puppycrawl.tools.checkstyle.XmlLoader.parseInputSource(XmlLoader.java:84) 	at com.puppycrawl.tools.checkstyle.ConfigurationLoader.parseInputSource(ConfigurationLoader.java:196) 	at com.puppycrawl.tools.checkstyle.ConfigurationLoader.loadConfiguration(ConfigurationLoader.java:311) 	... 5 more Checkstyle ends with 1 errors.","closed","awaiting changes,","AnishaSrivastava1411","2020-03-19T08:42:35Z","2020-06-22T19:27:36Z"
"","7986","Issue #7981: Resolve Pitest Issues - DetectorOptions","Resolve #7981 Please see comments in #7981 for all the details.","closed","","wilcoln","2020-03-29T09:33:46Z","2020-03-31T19:58:54Z"
"","7991","Issue #7846: Update doc on description of package annotation","Resolve #7846   **New description :**  ![Screenshot from 2020-04-01 11-45-28](https://user-images.githubusercontent.com/24209192/78123392-63be4700-740e-11ea-9984-3d67319d2f78.png)","closed","","wilcoln","2020-03-29T18:36:50Z","2020-04-03T10:00:50Z"
"","7843","Issue #7799: Resolve Pitest Issues - AvoidStarImportCheck (1)","Resolve #7799 Please see comments in #7799 for all the details.","closed","","wilcoln","2020-03-13T13:48:05Z","2020-03-16T02:40:54Z"
"","7841","Issue #7761: Update AbstractChecks to log DetailAST - SuppressWarning…","Resolve #7761  :  Update AbstractChecks to log DetailAST - SuppressWarningHolder  Diff report link : https://wilcoln.github.io/checkstyle-reports/7761/diff/index.html  The diff output is ok, with no new violation reported for all the projects.","closed","","wilcoln","2020-03-13T10:45:26Z","2020-03-14T13:54:44Z"
"","7829","Issue #7757: Update AbstractChecks to log DetailAST - PackageAnnotation","Resolve #7757 : Update AbstractChecks to log DetailAST - PackageAnnotation  Diff report link : https://wilcoln.github.io/checkstyle-reports/7757/diff/index.html  The diff output is ok, with no new violation reported for all the projects.","closed","","wilcoln","2020-03-11T14:08:32Z","2020-03-17T15:11:01Z"
"","7790","Issue #7754: Update AbstractChecks to log DetailAST - OneTopLevelClass","Resolve #7754: Update AbstractChecks to log DetailAST - OneTopLevelClass  Diff report: https://wltan.github.io/checkstyle-reports/2020-03-08/onetoplevel/diff/  There is only one log call to fix: https://github.com/checkstyle/checkstyle/blob/master/src/main/java/com/puppycrawl/tools/checkstyle/checks/design/OneTopLevelClassCheck.java#L153  Notes: 1. I wasn't able to upload all of the ""deeper"" files due to the max file path length (on Windows). But I think all of the essential information should be there. 2. All of the discrepancies seem to be about the extra column number, which is expected as we now log the DetailAST node instead of just the line number. 3. Our unit tests only cover violations at column 1, but other projects can have violations at other columns as well (e.g. `apache-ant` has a violation at column 2 instead as there is a whitespace in front of the declaration for whatever reason). I think we should update our tests to reflect this?","closed","","wltan","2020-03-07T06:39:32Z","2020-03-11T05:58:54Z"
"","7791","Issue #7751: Update AbstractChecks to log DetailAST - NoClone","Resolve #7751 : Update AbstractChecks to log DetailAST - NoClone  Diff report link : https://wilcoln.github.io/checkstyle-reports/7751/diff/index.html","closed","","wilcoln","2020-03-07T11:37:48Z","2020-03-14T07:15:12Z"
"","7792","Issue #7723: Update AbstractChecks to log DetailAST - ArrayTrailingComma","Resolve #7723 : Update AbstractChecks to log DetailAST - ArrayTrailingComma  Diff report links : - violation reported on rcurly (old) : https://wilcoln.github.io/checkstyle-reports/7723/diff/index.html - violation reported on last item : https://wilcoln.github.io/checkstyle-reports/7723v2/diff/index.html  As expected/wanted, the number of violations reported remains the same for all projects. The only difference between the two diff reports are the lines and cols on which the violations are being found. Which is also completely normal.","closed","","wilcoln","2020-03-07T15:54:59Z","2020-03-14T07:11:51Z"
"","7968","Issue #7722: Update AbstractChecks to log DetailAST - AnnotationUseStyle","Resolve #7722: Update AbstractChecks to log DetailAST - AnnotationUseStyle  Diff report : https://wilcoln.github.io/checkstyle-reports/7722/diff/index.html  I ran regression on all projects and the diff report was so huge (1.2Gb+)  that  `git add` was taking forever to run. Beside, i'm not sure that github will allow me to upload such a load. So I've decided to host detailed reports for only the 8 first projects.  The number of violations **has increased** as there are often multiple violations on same line. For example in the **apache-struts** project, [this file](https://github.com/apache/struts/blob/master/core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultObjectTypeDeterminer.java) contains two violations on line [71](https://github.com/apache/struts/blob/9053c84d505dfbcca0f1452b8ee2f2adbb5e54a5/core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultObjectTypeDeterminer.java#L71), at col 40 and 74 respectively.  Input files for UT's have been updated accordingly : https://github.com/checkstyle/checkstyle/blob/3db6cfd4d735e63aa83f2f65855773797d0d802f/src/test/resources/com/puppycrawl/tools/checkstyle/checks/annotation/annotationusestyle/InputAnnotationUseStyleDifferentStyles.java#L81","closed","","wilcoln","2020-03-26T11:37:25Z","2020-04-01T16:38:48Z"
"","7943","Issue #7721: Update AbstractChecks to log DetailAST - AnnotationOnSam…","Resolve #7721: Update AbstractChecks to log DetailAST - AnnotationOnSameLine  Diff report : https://wilcoln.github.io/checkstyle-reports/7721/diff/index.html  I ran regression on all projects and the diff report was so huge (1.2Gb+)  that  `git add` was taking forever to run. Beside, i'm not sure that github will allow me to upload such a load. So I've decided to host detailed reports for only the 8 first projects.  The number of violations reported remains the same. I assure you that it is the case for all 34 projects, I checked out details for each of them in local.","closed","","wilcoln","2020-03-22T23:28:13Z","2020-03-28T15:53:16Z"
"","7703","Issue #7698: Add code examples for RegexpSinglelineJava","Resolve #7698 ![example1](https://user-images.githubusercontent.com/24209192/76372538-061e6980-633e-11ea-8ece-b31ff4a2437f.png) ![example2](https://user-images.githubusercontent.com/24209192/76372843-023f1700-633f-11ea-856e-72357191e1b1.png) ![example3](https://user-images.githubusercontent.com/24209192/76372840-00755380-633f-11ea-9173-263dc7320bd6.png)   ## Ouput of default example > The default config does not match to anything, so there is no need for an example for it.  ## Ouput of non-default example 1 $ cat config.xml ```xml                          		 		 	         ``` $ cat Test.java  ```java public class Test {  	public void main(){ 		System.out.println(""""); // violation, the illegal pattern is matched on a single line 		System.out. 			println(""""); // OK		 		/* System.out.println */ // OK, comments are ignored 	} } ``` $ java -jar checkstyle-8.29-all.jar -c config.xml Test.java ``` Starting audit... [ERROR] /var/tmp/Test.java:4: Line matches the illegal pattern 'System\.out\.println'. [RegexpSinglelineJava] Audit done. Checkstyle ends with 1 errors. ``` ## Ouput of non-default example 2 $ cat config.xml ```xml                          		 		 		 	         ``` $ cat Test.java  ```java class Foo{   private int a;   /* public comment */ // OK, comment is ignored   public void bar1() {} // violation   public void bar2() {} // violation } ``` $ java -jar checkstyle-8.29-all.jar -c config.xml Test.java ``` Starting audit... [ERROR] /var/tmp/Test.java:4: Line matches the illegal pattern 'public'. [RegexpSinglelineJava] [ERROR] /var/tmp/Test.java:5: Line matches the illegal pattern 'public'. [RegexpSinglelineJava] Audit done. Checkstyle ends with 2 errors. ``` ## Ouput of non-default example 3 $ cat config.xml ```xml                          		 		 	         ``` $ cat Test.java  ```java class Foo{   public void bar(){   FileReader in = new FileReader(""path/to/input"");   int ch = in.read(); // violation   while(ch != -1) {     System.out.print((char)ch);     ch = in.read(); // violation   }     FileWriter out = new FileWriter(""path/to/output"");   out.write(""something""); // violation  } } ``` $ java -jar checkstyle-8.29-all.jar -c config.xml Test.java ``` Starting audit... [ERROR] /var/tmp/Test.java:6: IO found [RegexpSinglelineJava] [ERROR] /var/tmp/Test.java:9: IO found [RegexpSinglelineJava] [ERROR] /var/tmp/Test.java:13: IO found [RegexpSinglelineJava] Audit done. Checkstyle ends with 3 errors. ```","closed","","wilcoln","2020-02-29T14:50:14Z","2020-03-14T07:16:39Z"
"","7771","Issue #7614: Update doc for OneTopLevelClass","Resolve #7614: Update doc for OneTopLevelClass ![image](https://user-images.githubusercontent.com/53135010/75906692-08864c80-5e82-11ea-9cc3-017d50b965c5.png) Output of default config: (there is only one config to test) ``` D:\checkstyletest>type config.xml                           D:\checkstyletest>type test\Foo.java  public class Foo { // OK, first top-level class   // methods }  class Foo2 { // violation, second top-level class   // methods } D:\checkstyletest>java -jar -Duser.language=en -Duser.country=US checkstyle-8.30-all.jar -c config.xml test\Foo.java  Starting audit... [ERROR] D:\checkstyletest\test\Foo.java:5: Top-level class Foo2 has to reside in its own source file. [OneTopLevelClass] Audit done. ```","closed","","wltan","2020-03-02T16:18:04Z","2020-03-08T02:52:56Z"
"","7786","minor: replace original apex-core repository with checkstyle mirror f…","requirements of https://github.com/checkstyle/checkstyle/pull/7778  minor: replace original apex-core repository with checkstyle mirror for regression testing","closed","","nick-mancuso","2020-03-05T19:06:09Z","2020-03-09T12:53:24Z"
"","7115","minor: update in UTs for upcomming fix for #6680","related to #6680   continuation of https://github.com/checkstyle/checkstyle/pull/6830 (code provided by  @gmshake )","closed","","romani","2019-09-28T13:49:12Z","2019-09-28T20:52:12Z"
"","7462","config: enable sonar build on master and PRs","related to #5604  skipping of build was detected at https://app.wercker.com/checkstyle/checkstyle/runs/build/5e18e7a57b63df001ac78ed9?step=5e18e7e71ccc980008300654","closed","","romani","2020-01-10T21:45:15Z","2020-01-10T23:39:52Z"
"","7992","java 14 switch expression syntax is not supported","Refs https://github.com/checkstyle/checkstyle/issues/7969 and https://github.com/checkstyle/checkstyle/issues/7103  [JDK 14 has been released](https://openjdk.java.net/projects/jdk/14/). It supports [advanced switch statements](https://openjdk.java.net/jeps/361)  ```java static void howMany(int k) {     switch (k) {         case 1  -> System.out.println(""one"");         case 2  -> System.out.println(""two"");         default -> System.out.println(""many"");     } } ```  When checkstyle encounters such code, it just cannot parse the file.","closed","antlr,","koppor","2020-03-29T20:35:00Z","2020-03-30T14:10:02Z"
"","7182","Package level suppression for rule OuterTypeNumber is not compatible with compiler and package-info.java.","Refereed from  https://github.com/checkstyle/checkstyle/issues/7082  ``` @SuppressWarnings({""checkstyle:outertypenumber"",""checkstyle:outertypenumbercheck""})  package javapuzzles;   public class Puzzle extends Superb {   final byte x = 1;   final Byte y = 2;    @Override   public String toString() {     return x + "" : "" + y;   }    public static void main(String... args) {     new Puzzle();   } }  class Superb {      {     System.out.println(this);   }    } ```  package-info.java  ``` @SuppressWarnings({""checkstyle:outertypenumber""}) package javapuzzles;  ```  Compiler output: (both errors shown)  ```   warning: [options] bootstrap class path not set in conjunction with -source 10 Puzzle.java:1: error: package annotations should be in file package-info.java @SuppressWarnings({""checkstyle:outertypenumber""}) ^  package-info.java:1: error: package javapuzzles has already been annotated @SuppressWarnings({""checkstyle:outertypenumber""}) ^ 2 errors 1 warnings ```  cat config.xml  ```                                              ```  $ java checkstyle-8.24-all.jar -o output.txt -c config.xml Puzzle.java package-info.java  Describe what you expect in detail.  The checkstyle warning is expected to be suppressed in the checkstyle output. It is if placed at the package level in the class source. However, the code will not compile if the source  package has a package-info.java file. The compiler disallows placement of suppression annotation in source file if package-info.java exists.   You'd expect the suppression (in package-info.java) to be enforced across the package for all files. That does not happen for any class in the package i.e., the suppression now fails.  package-info.java is used to document information about the package. Used by javadocs.   JDK version used: Open JDK 12  Also , including this discussion from junit about package level annotations.  https://github.com/junit-team/junit4/issues/670  Do we wish to allow package level suppressions? Which rules are candidates for this allowance? I can think of MagicNumber welcoming such an approach.  The concern appears to be that suppressing violations at package level can be dangerous. It might be a good idea to identify candidates for package level suppressions and allow only those.   Or is Checkstyle suggesting that users of this check abandon package-info.java files?  EDIT:  SuppressWarnings does not support package level.  https://stackoverflow.com/questions/8910759/why-cant-i-suppresswarnings-on-a-package  Does Checkstyle need a custom annotation of its own? This will introduce a compile time dependency. FindBugs,however, uses one.","closed","","Fernal73","2019-10-10T15:28:15Z","2019-11-24T16:46:44Z"
"","7209","config: bump jgit to 5.5.1.201910021850","Redo of https://github.com/checkstyle/checkstyle/pull/7207","closed","","rnveach","2019-10-19T00:09:17Z","2019-10-19T02:30:54Z"
"","7333","infra: move spellchecker to one of first job in Travis to fail faster","Reasons: 1) it is hard to predict that whiltelist should be extended, 2) it is so easy to make typo","closed","","romani","2019-12-07T13:02:25Z","2019-12-07T15:06:46Z"
"","7419","config: upgrade several travis builds to use .ci-temp folder to keep repository untouched","problem noticed while execution of ``` $ ./.ci/travis/travis.sh no-exception-test-guava-with-google-checks ..... [INFO] BUILD SUCCESS [INFO] ------------------------------------------------------------------------ [INFO] Total time:  40.480 s [INFO] Finished at: 2019-12-29T15:39:38-08:00 [INFO] ------------------------------------------------------------------------ Running Checkstyle on src/main/java - finished linking report to index.html Removing non referenced xref files in report ...    [delete] Deleting directory /home/rivanov/java/github/checkstyle/checkstyle/contribution/checkstyle-tester/src/main/java/guava      [move] Moving 43 files to /home/rivanov/java/github/checkstyle/checkstyle/contribution/checkstyle-tester/reports/guava  ✔ ~/java/github/checkstyle/checkstyle [master|✚ 1…2]  $ git status On branch master Your branch is up-to-date with 'origin/master'. Changes not staged for commit:   (use ""git add ..."" to update what will be committed)   (use ""git checkout -- ..."" to discard changes in working directory)    modified:   src/main/resources/google_checks.xml  Untracked files:   (use ""git add ..."" to include in what will be committed)    contribution/   src/main/resources/google_checks.xml. ```","closed","","romani","2019-12-30T04:56:20Z","2019-12-31T09:16:05Z"
"","7444","Google maven mirror do not have artifact for long time","problem is detected at  https://travis-ci.org/checkstyle/contribution/jobs/632174159#L471 - stable master build problem at `contribution` for several days. https://travis-ci.org/checkstyle/checkstyle/jobs/632176090#L393 and it is become a problem for most build items in PR: ``` [INFO] --- maven-checkstyle-plugin:3.1.0:check (sevntu-checkstyle-check) @ checkstyle --- [INFO] Downloading from nexus-codehaus-snapshot: https://oss.sonatype.org/content/repositories/codehaus-snapshots/com/github/sevntu-checkstyle/sevntu-checks/1.37.0/sevntu-checks-1.37.0.pom [INFO] Downloading from google-maven-central: https://maven-central.storage-download.googleapis.com/repos/central/data/com/github/sevntu-checkstyle/sevntu-checks/1.37.0/sevntu-checks-1.37.0.pom [WARNING] The POM for com.github.sevntu-checkstyle:sevntu-checks:jar:1.37.0 is missing, no dependency information available  [INFO] Downloading from nexus-codehaus-snapshot: https://oss.sonatype.org/content/repositories/codehaus-snapshots/com/github/sevntu-checkstyle/sevntu-checks/1.37.0/sevntu-checks-1.37.0.jar [INFO] Downloading from google-maven-central: https://maven-central.storage-download.googleapis.com/repos/central/data/com/github/sevntu-checkstyle/sevntu-checks/1.37.0/sevntu-checks-1.37.0.jar [INFO] ------------------------------------------------------------------------ [INFO] BUILD FAILURE [INFO] ------------------------------------------------------------------------ [INFO] Total time:  28.603 s [INFO] Finished at: 2020-01-04T13:43:06Z [INFO] ------------------------------------------------------------------------ [ERROR] Failed to execute goal org.apache.maven.plugins:maven-checkstyle-plugin:3.1.0:check (sevntu-checkstyle-check) on project checkstyle: Execution sevntu-checkstyle-check of goal org.apache.maven.plugins:maven-checkstyle-plugin:3.1.0:check failed: Plugin org.apache.maven.plugins:maven-checkstyle-plugin:3.1.0 or one of its dependencies could not be resolved: Could not find artifact com.github.sevntu-checkstyle:sevntu-checks:jar:1.37.0 in nexus-codehaus-snapshot (https://oss.sonatype.org/content/repositories/codehaus-snapshots/) -> [Help 1] ``` it was a problem during other version bump - https://github.com/checkstyle/checkstyle/pull/7402 (BUT here only 2 build items were affected)  Problem is that Travis is using Google mirror for maven artifacts, Google mirror does not get artifacts quickly (sync process takes few days). It is ok in case build process does not need bleeding edge (just released) artifact. In case of Checkstyle we do NEED bleeding edge artifacts as dependabot service create PR to us as soon as artifact is available on maven central.  Problem become acute after dependabot introduction, as it scan for new versions on daily basis. Previously we did version check by maven version plugin execution on weekly basis, so such execution checked google mirror.   **Proposed Solution**:  disable google mirror on Travis to make PRs more reliable, and works predictably in comparison with other CIs and local execution. Side effect of such approach is that builds might become slower.","closed","miscellaneous,","romani","2020-01-04T14:50:59Z","2020-01-04T17:47:54Z"
"","7450","Shippable CI is slow","problem is described at https://github.com/Shippable/support/issues/5014#issuecomment-572297308  We introduced special version when we used pitest in shippable - https://github.com/checkstyle/checkstyle/commit/8fabe225224171b986ff8490f93ba512b2905a3a to keep report the same (looks like there was problem in generation of same report on different jdk).  Right no we do not use shippable for pitest, so we can use any image version.  Shippable support suggest to use the same version in yml config as in ""Node Pool"" (configured in UI).   Images are from: https://hub.docker.com/r/drydock/u14javall/tags https://hub.docker.com/r/drydock/u16javall/tags https://github.com/dry-dock ,  based on ubuntu 18 - https://github.com/dry-dock/u18java , is not ready for usage.","closed","miscellaneous,","romani","2020-01-08T23:57:02Z","2020-01-09T17:29:48Z"
"","7391","After migration to junit5 build output become to have output","problem can be seen at https://travis-ci.org/checkstyle/checkstyle/jobs/626861728#L1131  Example: ``` [INFO] Running com.puppycrawl.tools.checkstyle.JavadocPropertiesGeneratorTest Missing required options [--destfile=, params[0]=] Usage: java com.puppycrawl.tools.checkstyle.JavadocPropertiesGenerator [-hV]        --destfile=           The input file.       --destfile=                     The output file.   -h, --help        Show this help message and exit.   -V, --version     Print version information and exit. Missing required parameter:  Usage: java com.puppycrawl.tools.checkstyle.JavadocPropertiesGenerator [-hV]        --destfile=           The input file.       --destfile=                     The output file.   -h, --help        Show this help message and exit.   -V, --version     Print version information and exit. Usage: java com.puppycrawl.tools.checkstyle.JavadocPropertiesGenerator [-hV]        --destfile=           The input file.       --destfile=                     The output file.   -h, --help        Show this help message and exit.   -V, --version     Print version information and exit. Missing required option '--destfile=' Usage: java com.puppycrawl.tools.checkstyle.JavadocPropertiesGenerator [-hV]        --destfile=           The input file.       --destfile=                     The output file.   -h, --help        Show this help message and exit.   -V, --version     Print version information and exit. ``` but there are more out and even exception output.  Expected: UT should produce no output to plugin, build log should be clean from any unrelated information (as it was before) it is not first time to come to such situation .... is there a way to fail build if some output is leaked ?","closed","miscellaneous,","romani","2019-12-19T21:18:55Z","2019-12-31T09:26:17Z"
"","7578","infra: update wercker maven to 3.6.2 to pass build of hibernate-search","problem at https://app.wercker.com/checkstyle/checkstyle/runs/build/5e5129ae7b63df001ae10266?step=5e5129f61ccc98000832416b  `[INFO] --- maven-enforcer-plugin:3.0.0-M3:enforce (enforce-common-rules) @ hibernate-search-parent --- [WARNING] Rule 1: org.apache.maven.plugins.enforcer.RequireMavenVersion failed with message: Detected Maven Version: 3.5.2 is not in the allowed range 3.6.2.`  detected at https://github.com/checkstyle/checkstyle/pull/7577#issuecomment-589996135","closed","","romani","2020-02-23T00:51:31Z","2020-02-23T01:38:37Z"
"","7392","config: swith back to master of contribution (Issue #7329)","post update from #7329","closed","","romani","2019-12-21T04:09:55Z","2019-12-21T04:35:16Z"
"","7947","bug fixed - AbbreviationAsWordInNameCheck - no need to -1","PLEASE READ before removing!!  Rules: 1) The issue you are trying to fix/resolve has to have the ""approved"" label. 2) Put in the description of Pull Request the reference to an issue if it exists.    Example: ""Issue: #XXXXXX"" 3) Commit message should adhere to the following rules:    a) MUST match one of the following patterns:       ^Issue #\\d+: .*$       ^Pull #\\d+: .*$       ^(minor|config|infra|doc|spelling|dependency): .*$    b) MUST contain only one line of text    c) MUST NOT end with a period, space, or tab    d) MUST be less than or equal to 200 characters  To avoid multiple iterations of fixes and CIs failures, please read https://checkstyle.org/contributing.html  ATTENTION: We are not merging Pull Requests that are not passing our CIs, but we will help to resolve issues.  Thanks for reading, remove whole this message and type what you need.","closed","awaiting changes,","cyw3","2020-03-23T09:49:40Z","2020-04-24T13:31:28Z"
"","7710","Issue: Update doc for NestedIfDepth #7652","PLEASE READ before removing!!  Rules: 1) The issue you are trying to fix/resolve has to have the ""approved"" label. 2) Put in the description of Pull Request the reference to an issue if it exists.    Example: ""Issue: #XXXXXX"" 3) Commit message should adhere to the following rules:    a) MUST match one of the following patterns:       ^Issue #\\d+: .*$       ^Pull #\\d+: .*$       ^(minor|config|infra|doc|spelling|dependency): .*$    b) MUST contain only one line of text    c) MUST NOT end with a period, space, or tab    d) MUST be less than or equal to 200 characters  To avoid multiple iterations of fixes and CIs failures, please read https://checkstyle.org/contributing.html  ATTENTION: We are not merging Pull Requests that are not passing our CIs, but we will help to resolve issues.  Thanks for reading, remove whole this message and type what you need.","closed","awaiting changes,","coraljain","2020-03-01T02:40:57Z","2020-09-07T08:43:40Z"
"","7203","feature: 根据 NingG 定制的 inteliJ IDEA java code style，定制 stylecheck 文件","PLEASE READ before removing!!  Rules: 1) The issue you are trying to fix/resolve has to have the ""approved"" label. 2) Put in the description of Pull Request the reference to an issue if it exists.    Example: ""Issue: #XXXXXX"" 3) Commit message should adhere to the following rules:    a) MUST match one of the following patterns:       ^Issue #\\d+: .*$       ^Pull #\\d+: .*$       ^(minor|config|infra|doc|spelling): .*$    b) MUST contain only one line of text    c) MUST NOT end with a period, space, or tab    d) MUST be less than or equal to 200 characters  To avoid multiple iterations of fixes and CIs failures, please read https://checkstyle.org/contributing.html  ATTENTION: We are not merging Pull Requests that are not passing our CIs, but we will help to resolve issues.  Thanks for reading, remove whole this message and type what you need.","closed","","ningg","2019-10-16T06:16:42Z","2019-10-16T06:17:12Z"
"","7989","Consider adding note to RN of 8.31 about required maven plugin update","Please consider adding to [Release Notes 8.31](https://checkstyle.org/releasenotes.html#Release_8.31) note, that update of maven plugin is required. With 3.1.0 (only 0.0.1 away from the latest) plugin following happens: ``` [INFO] --- maven-checkstyle-plugin:3.1.0:check (default-cli) @ ... --- [INFO] ------------------------------------------------------------------------ [INFO] BUILD FAILURE [INFO] ------------------------------------------------------------------------ [INFO] Total time:  1.804 s [INFO] Finished at: 2020-03-29T19:21:57+02:00 [INFO] ------------------------------------------------------------------------ [ERROR] Failed to execute goal org.apache.maven.plugins:maven-checkstyle-plugin:3.1.0:check (default-cli) on project ...: Execution default-cli of goal org.apache.maven.plugins:maven-checkstyle-plugin:3.1.0:check failed: An API incompatibility was encountered while executing org.apache.maven.plugins:maven-checkstyle-plugin:3.1.0:check: java.lang.NoSuchMethodError: com.puppycrawl.tools.checkstyle.Checker.setClassLoader(Ljava/lang/ClassLoader;)V [ERROR] ----------------------------------------------------- [ERROR] realm =    plugin>org.apache.maven.plugins:maven-checkstyle-plugin:3.1.0 [ERROR] strategy = org.codehaus.plexus.classworlds.strategy.SelfFirstStrategy [ERROR] urls[0] = file:.../.m2/repository/org/apache/maven/plugins/maven-checkstyle-plugin/3.1.0/maven-checkstyle-plugin-3.1.0.jar [ERROR] urls[1] = file:.../.m2/repository/org/slf4j/jcl-over-slf4j/1.7.25/jcl-over-slf ```  It seems that plugin was prepared for that in [maven-checkstyle-plugin-3.1.1](https://github.com/apache/maven-checkstyle-plugin/releases/tag/maven-checkstyle-plugin-3.1.1). I wasn't.  I guess it is covered by current _Breaking backward compatibility_ section, but it isn't obvious for me.","closed","","pzygielo","2020-03-29T18:01:31Z","2022-02-19T16:11:54Z"
"","7510","Issue #7509: resolve some pmd warnings","partially address #7509  still not resolved: ``` [WARNING] The rule CollapsibleIfStatements is referenced multiple times  in ""PMD ruleset for Checkstyle"". Only the last rule configuration is used. [WARNING] The rule CollapsibleIfStatements is referenced multiple times  in ""PMD ruleset for Checkstyle"". Only the last rule configuration is used. [WARNING] Use of deprecated attribute 'ClassOrInterfaceDeclaration/@Image'  in XPath query ```  but `CollapsibleIfStatements` is used only ones: ``` ✔ ~/java/github/romani/checkstyle [7509-pmd L|✔]  $ ag ""CollapsibleIfStatements"" config/pmd-main.xml 14:     ```","closed","","romani","2020-01-27T17:36:01Z","2020-01-28T20:00:54Z"
"","7213","Issue #7033: make FileText.fullText to be non final","partially address #7033 address fully https://github.com/checkstyle/checkstyle/issues/7033#issuecomment-545264613","closed","","romani","2019-10-20T14:42:09Z","2019-10-27T17:06:35Z"
"","7436","Avoid using Locale.setDefault in tests","Part of migration to Junit5 process https://github.com/checkstyle/checkstyle/issues/6916 Blocker for parallel execution of all unit tests.  By enabling parallel execution of unit tests, they start to fail in random places with messages like this: ``` [ERROR]   AnnotationLocationCheckTest.testAnnotation:204->AbstractModuleTestSupport.verify:220->AbstractModuleTestSupport.verify:256->AbstractModuleTestSupport.verify:292 error message 0 expected: but was: ``` This happens when a test does  `Locale.setDefault(...)`, which affects all other tests running at the same time. To avoid such failure, all unit tests shouldn't alter the global system state. Instead, the Junit 5 extension [DefaultLocale](https://junit-pioneer.org/docs/default-locale-timezone/) should be used to trick `LocalizedMessage` to load locale-specific message.","closed","miscellaneous,","pbludov","2020-01-02T17:17:04Z","2020-01-05T14:43:53Z"
"","7329","Remove properties related to class loading from JavadocMethod","part of #7116 .  We need to remove from Check any attempt to use classloader to validate source code. Checkstyle cannot make this reliably and it is whole tool limitation for now - https://checkstyle.org/writingchecks.html#Limitations  **Migration Notes:** properties `allowMissingThrowsTags`, `allowUndeclaredRTE`  and `allowThrowsTagsForSubclasses`, `logLoadErrors`, `suppressLoadErrors` should be just removed from configs.  Behavior will change as there will be less violations in code, such properties did not work well so their removal should be ok, as there will be less false-positives. **Throws will not be validated by default !!**  If you need to validate `@throws` please enable property `validateThrows` but please read documentation as there some limitations - https://checkstyle.org/config_javadoc.html#JavadocMethod . Old documentation is at https://checkstyle.sourceforge.io/version/8.27/config_javadoc.html#JavadocMethod","closed","breaking compatibility,","romani","2019-12-06T22:35:08Z","2020-01-17T02:21:37Z"
"","7060","Align XDocs and Javadocs for sizes package","Part of #5750  package com.puppycrawl.tools.checkstyle.checks.sizes;  - [x] AnonInnerLength #7061 - [x] ExecutableStatementCount #7071 - [x] FileLength #7073 - [x] LineLength #7062 - [x] MethodCount #7074 - [x] MethodLength #7070 - [x] OuterTypeNumber #7063 - [x] ParameterNumber #7068","closed","miscellaneous,","pbludov","2019-09-15T16:22:12Z","2019-09-18T21:14:04Z"
"","7163","Align XDocs and Javadocs for regexp package","Part of #5750  package com.puppycrawl.tools.checkstyle.checks.regexp;  - [x] Regexp #7164 - [x] RegexpMultiline #7166 - [x] RegexpOnFilename #7188 - [x] RegexpSingleline #7178 - [x] RegexpSinglelineJava #7167","closed","miscellaneous,","pbludov","2019-10-06T13:12:22Z","2019-10-12T10:04:22Z"
"","7186","Align XDocs and Javadocs for modifiers package","Part of #5750  package com.puppycrawl.tools.checkstyle.checks.modifiers;  - [x] ModifierOrder #7194 - [x] RedundantModifier #7201","closed","miscellaneous,","pbludov","2019-10-10T20:46:17Z","2019-10-17T13:44:05Z"
"","7145","Align XDocs and Javadocs for metrics package","Part of #5750  package com.puppycrawl.tools.checkstyle.checks.metrics;  - [x] BooleanExpressionComplexity #7153 - [x] ClassDataAbstractionCoupling #7165 - [x] ClassFanOutComplexity #7160 - [x] CyclomaticComplexity #7155 - [x] JavaNCSS #7184 - [x] NPathComplexity #7162","closed","miscellaneous,","pbludov","2019-10-03T05:24:59Z","2019-10-11T03:51:11Z"
"","7208","Align XDocs and Javadocs for javadoc package","Part of #5750  package com.puppycrawl.tools.checkstyle.checks.javadoc;  - [x] JavadocMethod #7244 - [x] JavadocPackage #7245 - [x] JavadocParagraph #7250 - [x] JavadocStyle #7257 - [x] JavadocTagContinuationIndentation #7259 - [x] JavadocType #7262 - [x] JavadocVariable #7264 - [x] NonEmptyAtclauseDescription #7260 - [x] SingleLineJavadoc #7265 - [x] SummaryJavadoc #7263 - [x] WriteTag #7261","closed","miscellaneous,","pbludov","2019-10-18T20:24:59Z","2019-12-26T17:12:16Z"
"","7144","Align XDocs and Javadocs for imports package","Part of #5750  package com.puppycrawl.tools.checkstyle.checks.imports;  - [x] AvoidStarImport #7147 - [x] AvoidStaticImport #7151 - [x] IllegalImport #7156 - [x] ImportControl #7177 - [x] RedundantImport #7152 - [x] UnusedImports #7159","closed","miscellaneous,","pbludov","2019-10-03T05:22:04Z","2019-10-10T20:21:35Z"
"","7185","Align XDocs and Javadocs for header package","Part of #5750  package com.puppycrawl.tools.checkstyle.checks.header; - [x] Header #7195 - [x] RegexpHeader #7196","closed","miscellaneous,","pbludov","2019-10-10T20:44:48Z","2019-10-15T07:52:51Z"
"","7248","Resolve PMD deprecation warnings on InvalidSlf4jMessageFormat","output from PMD: ``` [INFO] --- maven-pmd-plugin:3.12.0:pmd (pmd) @ checkstyle --- [WARNING] Use Rule name category/java/errorprone.xml/InvalidLogMessageFormat instead of the deprecated Rule name category/java/errorprone.xml/InvalidSlf4jMessageFormat. PMD 7.0.0 will remove support for this deprecated Rule name usage. [WARNING] Use Rule name category/java/errorprone.xml/InvalidLogMessageFormat instead of the deprecated Rule name category/java/errorprone.xml/InvalidSlf4jMessageFormat. PMD 7.0.0 will remove support for this deprecated Rule name usage. [WARNING] Use of deprecated attribute 'MethodDeclarator/@Image' in XPath query [INFO] Analysis cache created ```  warnings should be resolved","closed","miscellaneous,","romani","2019-11-10T15:08:16Z","2019-11-12T20:29:11Z"
"","7363","New Check: AvoidNoArgumentSuperConstructorCall","Originally discussed at #7237  ``` $ cat Test.java class Test { 	 	Test() { 		super(); // violation 		System.out.println(""hello""); 	}        Test(Object anyArg) { 		super(); // violation 	}        Test(Object anyArg, Object b) { 		super(1); // no violation 	}         class Nested {             Nested() {                super(); // violation             }         }  	 }  class Test2 extends java.util.ArrayList {     Test2() {         super(); // violation      }     Test2(Object anyArg) {         super(new HashSet()); // no violation      } }  $ cat config.xml                      ```  Violations at lines with violation comment are shown in output","closed","new module,","strkkk","2019-12-11T07:15:39Z","2020-01-17T16:47:20Z"
"","7429","minor: remove unnecessary optional mention from JavadocMethodCheck","Noticed this when searching for something.","closed","","rnveach","2019-12-31T18:07:50Z","2020-01-03T00:03:40Z"
"","7984","AbstractJavadocCheck should have method(s) to log violation by AST","noticed at https://github.com/checkstyle/checkstyle/pull/7775  The same as Java checks do [logging of violation by AST](https://github.com/checkstyle/checkstyle/blob/master/src/main/java/com/puppycrawl/tools/checkstyle/api/AbstractCheck.java#L223), we should do this for Javadoc violations. Right now we do this like `log(textNode.getLineNumber(), textNode.getColumnNumber(), MSG_KEY);`","closed","","romani","2020-03-28T22:39:31Z","2020-03-29T04:01:23Z"
"","7501","config: disable FRETEQUIV filter","NOT to merge. This PR is need to find all cases like hcoles/pitest#725","closed","","pbludov","2020-01-21T18:19:36Z","2020-01-22T17:54:46Z"
"","7325","infra: activate no-error-stata in wercker","missed steps from https://github.com/checkstyle/checkstyle/pull/5794 to actually activate Strata code no-error validation  their config: https://github.com/OpenGamma/OG-Tools/blob/master/build-config/src/main/resources/checkstyle/checkstyle-main-v8.26.xml","closed","","romani","2019-12-06T17:59:48Z","2019-12-07T15:44:10Z"
"","7870","minor: improve clean up of .ci-temp directory","minor: improve clean up of .ci-temp directory as discussed here: https://github.com/checkstyle/checkstyle/pull/7778#discussion_r391285990","closed","","nick-mancuso","2020-03-16T19:52:36Z","2020-03-26T03:40:30Z"
"","7912","minor: add ""cd -"" to removeFolderWithProtectedFiles","minor: add ""cd -"" to removeFolderWithProtectedFiles, per discussion at https://github.com/checkstyle/checkstyle/pull/7816#discussion_r395072027","closed","","nick-mancuso","2020-03-20T05:23:47Z","2020-03-25T02:45:39Z"
"","7381","minor: fix violations for Issue #7380","minor part of Issue #7380 part of https://github.com/checkstyle/checkstyle/pull/7193","closed","","romani","2019-12-14T16:29:30Z","2019-12-14T23:23:41Z"
"","7269","config: add myself to the developer list","minor change to `pom.xml` from https://github.com/checkstyle/checkstyle/pull/7265#issuecomment-554670610","closed","","pbludov","2019-11-17T22:10:21Z","2019-11-20T21:09:41Z"
"","7072","Maven-checkstyle-plugin can use code format file directly","Maven-checkstyle-plugin can use code format file directly. such as https://raw.githubusercontent.com/spring-cloud/spring-cloud-build/master/spring-cloud-dependencies-parent/eclipse-code-formatter.xml","closed","","zhaoyuguang","2019-09-17T12:29:50Z","2019-09-17T12:39:31Z"
"","7548","doc: deprecated -> Deprecated","lowercase is used for javadoc tag, but in example there is an annotation, it should be uppercase","closed","","strkkk","2020-02-14T13:06:35Z","2020-02-15T08:24:36Z"
"","7157","config: fix issue with shippable identifying commits","Looking into issue identified at https://github.com/checkstyle/checkstyle/pull/7125#issuecomment-538694543","closed","","rnveach","2019-10-05T22:46:38Z","2019-12-04T23:30:20Z"
"","7461","TodoComment config is not search-able by github","Link to example at checkstyle_checks.xml lead to `We couldn’t find any code matching 'path:config filename:checkstyle_checks.xml repo:checkstyle/checkstyle TodoComment' ` - https://checkstyle.org/config_misc.html#TodoComment_Example_of_Usage","closed","approved,","romani","2020-01-10T21:20:48Z","2020-01-10T21:36:12Z"
"","7793","minor: update Orekit and Hipparcus checkout commits","Let me know if you want me to squash this, but I figured I should add the directory removal as a separate commit.","closed","","nick-mancuso","2020-03-07T22:41:33Z","2020-03-09T03:38:58Z"
"","7377","hosting of old version web sites on github.io","last point from migration to github.io  https://github.com/checkstyle/checkstyle/issues/5601#issuecomment-443340430  > figure out is it reasonable to store in github.io all old versions, to completely stop updating files on sourceforge.  Sourceforge is used for: - host old versions of website for user. - RSS - hosting of static file for our spell checker. - hosting of some examples of checkstyle report on some projects ( guava, openjdk) - backup hosting in general.  If reasonable, so `release.sh` need to be update to handle this (as of right now it removes all files and copy all from just generated). Good point is that git support soft links, we probably can keep old files untouched.   We can approve issue ones we have a plan on how to do this","open","","romani","2019-12-13T00:44:47Z","2019-12-13T01:54:32Z"
"","7305","Allow JUnit5 @TempDir fields to be public","Junit4 `TemporaryFolder` rule has its own annotation in Junit 5: `@TempDir`  The check `VisibilityModifier` is aware of Junit4 `@Rule` but is not aware of Junit5 `@TempDir`     ``` /var/tmp $ cat HeaderCheckTest.java import org.junit.jupiter.api.io.TempDir;  import com.puppycrawl.tools.checkstyle.AbstractModuleTestSupport;  public class HeaderCheckTest extends AbstractModuleTestSupport {      @TempDir     File temporaryFolder;  }  /var/tmp $ cat config.xml                 /var/tmp $ RUN_LOCALE=""-Duser.language=en -Duser.country=US"" /var/tmp $ java $RUN_LOCALE -jar checkstyle-8.27-all.jar \        -c config.xml HeaderCheckTest.java [checkstyle] [ERROR] .../checks/header/HeaderCheckTest.java:8:10:  Variable 'temporaryFolder' must be private and have accessor methods.  [VisibilityModifier] ```  This annotation is common for Junit5 tests and should be handled by `VisibilityModifier` by default.","closed","easy,","pbludov","2019-12-04T11:18:18Z","2019-12-05T01:53:10Z"
"","7416","Simplify JavadocStyleCheck","JavadocStyleCheck currently does 5 things, which are duplicates of other checks. https://github.com/checkstyle/checkstyle/blob/7c693ccc937109e4498c7756af0b5548348f42a7/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java#L326-L349  1) Ensure package-info.java has a Javadoc. 2) Checks the first sentence ends with a period and doesn't contain a specific fragement. 3) Checks that the javadoc isn't empty. 4) Checks that the tags have respective close for an open. 5) Checks that only allowed tags are used.  1 is a duplicate of MissingJavadocPackage (Since 8.22).  2 is a duplicate of SummaryJavadoc (since 6.0) but doesn't have a scope restriction.  3 is a duplicate of MissingJavadocMethod (since 8.21) and MissingJavadocType (since 8.20).  4 and 5 are the only things unique to this check.  I say we start new issues to remove the duplicate functionality, and provide the missing functionality to the other checks. This will help identify what is left for this check to be converted to an AbstractJavadocCheck.","open","breaking compatibility,","rnveach","2019-12-29T19:56:15Z","2020-03-15T14:29:30Z"
"","7026","Rule for platform-dependent line separator needed.","Java is a platform-independent language.  CS has no rule(s) that enforces platform-independent line separator.  Code is cleaner if  `System.lineSeparator()` ,`%n` in `System.out.printf(...)` or simply `System.out.println(...)` are used instead.  Other than unwanted String objects created by concatenation and for file formats in editors to remain consistent across platforms and behave exactly the same, I see no reason why such a rule should not be formulated.   Such a rule would be applicable across an application.  If you really need to have only one line separator across platforms, the system property can always be overridden.   https://stackoverflow.com/questions/22681534/java-change-system-new-line-character   Referring this [discussion](https://groups.google.com/forum/m/#!msg/checkstyle/aIiTeiYCa1I/xAMlr4Z4AwAJ)  in the Checkstyle Google group.   -------------- Module definition: ```xml       ``` I'm assuming the CR, CRLF and LF can be mapped to String constants in the code. If not, the actual values can be substituted and a check implemented so that malicious values are not accepted. This should come under Checker module, not TreeWalker.   Example code:  ```java package cstests;  /*** This class lists the varied combinations where the line separator denoted by \n is to be replaced by either a call to System.lineSeparator(), %n in a System.out.printf() or System.getProperty(""line.separator"").   The same rule should apply to \r\n as well, if specified. \n and \r\n must not be flagged in this comment block. ***/  public class TestPlatformIndependentLineSeparator {    /***   This class lists the varied combinations where the line separator denoted by   \n is to be replaced by either a call to System.lineSeparator(), %n in a   System.out.printf() or System.getProperty(""line.separator"").     The same rule should apply to \r\n as well, if specified.   \n and \r\n must not be flagged in this comment block either.   ***/    // test if \n is flagged here. It shouldn't.   // test if \r\n is flagged here. It shouldn't.    private static final String testString = ""\nTest to catch line separator\n"";    private static final String testString2 =       ""\r\nTest to catch line separator\r\n"";      private static final String testString3 =      ""\\nTest to escape line separator\\n"";    private static final String testString4 =       ""\\r\\nTest to escape line separator\\r\\n"";    // this must be flagged   private static final String CRLF = ""\r\n"";    // this must be flagged   private static final String LF = ""\n"";    static {     System.setProperty(""line.separator"",""\r\n"");     // above must not be flagged      System.out.println(testString);     System.out.println(testString2);     System.out.println(testString3);     System.out.println(testString4);     StringBuilder sb = new StringBuilder();     sb.append('\n');  // this should be flagged     sb.append(""\r\n""); // this should be flagged     System.out.println(sb.toString());     System.out.printf(""%s\n"", sb.toString());     // the above line must be flagged      char[] chars = new char[] {'\n', '\r', 'a', 'b', 'c'};     // the above shouldn't be flagged. Maybe, it // should or someone could do     // the following      String charString = new String(chars);     System.out.print(charString);      StringBuffer sb1 = new StringBuffer();     sb1.append('\n');  // this should be flagged     sb1.append(""\r\n""); // this should be flagged     System.out.println(sb1.toString());     System.out.printf(""%s\n"", sb1.toString());     // the above line must be flagged          System.setProperty(""line.separator"",LF);   }      public static void main(String... args) {     System.setProperty(""line.separator"",""\r\n"");     // above must not be flagged      System.out.println(testString);     System.out.println(testString2);     System.out.println(testString3);     System.out.println(testString4);     StringBuilder sb = new StringBuilder();     sb.append('\n');  // this should be flagged     sb.append(""\r\n""); // this should be flagged     System.out.println(sb.toString());     System.out.printf(""%s\n"", sb.toString());     // the above line must be flagged      char[] chars = new char[] {'\n', '\r', 'a', 'b', 'c'};     // the above shouldn't be flagged. Maybe, it // should or someone could do     // the following      String charString = new String(chars);     System.out.print(charString);      StringBuffer sb1 = new StringBuffer();     sb1.append('\n');  // this should be flagged     sb1.append(""\r\n""); // this should be flagged     System.out.println(sb1.toString());     System.out.printf(""%s\n"", sb1.toString());     // the above line must be flagged         // This line is not to be flagged     System.out.printf(""%s%n"", sb1.toString());     System.setProperty(""line.separator"",LF);   } } ```  EDITED FOR EXAMPLES ABOVE.   The code comments state which code statements are to be flagged and which aren't. No comment implies no flagging.  There could be more statements that use the PrintStream, Writer and its subclasses and their methods. But since, this check will simply check for '\n', '\r' and '\r\n', there's no real need to add these examples.","open","","Fernal73","2019-08-28T10:20:07Z","2020-11-22T17:08:03Z"
"","7103","java 13 text blocks syntax is not supported","Java 13 has been released and now it is possible to write multiline string literals ``` String multiLineStr =  """"""    SELECT * FROM USERS    WHERE USER_ID = '1' """"""; ``` Unfortunately checkstyle fails to parse it now and i have to make a difficult choice between turning off checkstyle in my project and using not  the latest version of java.  Do you have any plans to support it in the nearest future?","closed","new feature,","joxerTMD","2019-09-26T20:01:23Z","2020-08-03T22:36:33Z"
"","7065","config: use upstream equalsverifier for CI","it is possible after https://github.com/jqno/equalsverifier/pull/245  after merge, we should delete forked repo.","closed","","romani","2019-09-15T20:28:40Z","2019-09-15T21:49:01Z"
"","7399","Config validate since javadoc tag in new modules","It is not very reliable approach(in case of multi commits in PR it will not help) but lets start with some ...  **Testing on my local**: Tree with merge commit on my local : ``` $ git log --graph *   commit 7b39f32ec55abfca0ea126d36b19d45dd2c20779 |\  Merge: 10fa74a 47b2c58 | | Author: Roman Ivanov  | | Date:   Tue Dec 24 14:28:57 2019 -0800 | |  | |     Merge branch 'config-validate-since-in-new-checks' | |    | * commit 47b2c58e550f97ee6f94ac788864066e075cde13 | | Author: sd1998  | | Date:   Sun Oct 27 12:33:20 2019 +0530 | |  | |     Issue #6971: NoArrayTrailingCommaCheck added | |    | * commit cd2e1f538a5d37917028421070f3c1dc252ce470 |/  Author: Roman Ivanov  |   Date:   Tue Dec 24 14:06:20 2019 -0800 |    |       config: validate since javadoc tag in new Checks |   * commit 10fa74a551d590d45c317a5affb50369014976e5 | Author: pbludov  | Date:   Tue Dec 24 22:13:12 2019 +0300 |  |     doc: fix treeWithJavadoc command line option  ```  ``` ✔ ~/java/github/romani/checkstyle [master ↑·3|✚ 1]  $ ./.ci/travis/travis.sh check-since-version Merge: 10fa74a 47b2c58 Merge detected. PR commit: 47b2c58e550f97ee6f94ac788864066e075cde13 New files in comit: --- /dev/null +++ b/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionNoArrayTrailingCommaTest.java -- --- /dev/null +++ b/src/it/resources/org/checkstyle/suppressionxpathfilter/noarraytrailingcomma/SuppressionXpathRegressionNoArrayTrailingCommaOne.java -- --- /dev/null +++ b/src/it/resources/org/checkstyle/suppressionxpathfilter/noarraytrailingcomma/SuppressionXpathRegressionNoArrayTrailingCommaTwo.java -- --- /dev/null +++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/NoArrayTrailingCommaCheck.java -- --- /dev/null +++ b/src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/NoArrayTrailingCommaCheckTest.java -- --- /dev/null +++ b/src/test/resources/com/puppycrawl/tools/checkstyle/checks/coding/noarraytrailingcomma/InputNoArrayTrailingComma.java New Check file: src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/NoArrayTrailingCommaCheck.java New Check detected: src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/NoArrayTrailingCommaCheck.java CS Release version: 8.28 Grep for @since 8.28  * @since 8.28 ```  if file have wrong version: ``` ✔ ~/java/github/romani/checkstyle [master ↑·3|✚ 1]  $ git diff src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/NoArrayTrailingCommaCheck.java diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/NoArrayTrailingCommaCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/NoArrayTrailingCommaCheck.java index 0e1aee8..afe4796 100644 --- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/NoArrayTrailingCommaCheck.java +++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/NoArrayTrailingCommaCheck.java @@ -65,7 +65,7 @@ import com.puppycrawl.tools.checkstyle.api.TokenTypes;   * String[] foo4 = { ""FOO"", ""BAR"" }; // OK   *    * - * @since 8.28 + * @since 8.27   */  @StatelessCheck  public class NoArrayTrailingCommaCheck extends AbstractCheck {  ✔ ~/java/github/romani/checkstyle [master ↑·3|✚ 2]  $ ./.ci/travis/travis.sh check-since-version Merge: 10fa74a 47b2c58 Merge detected. PR commit: 47b2c58e550f97ee6f94ac788864066e075cde13 New files in comit: --- /dev/null +++ b/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionNoArrayTrailingCommaTest.java -- --- /dev/null +++ b/src/it/resources/org/checkstyle/suppressionxpathfilter/noarraytrailingcomma/SuppressionXpathRegressionNoArrayTrailingCommaOne.java -- --- /dev/null +++ b/src/it/resources/org/checkstyle/suppressionxpathfilter/noarraytrailingcomma/SuppressionXpathRegressionNoArrayTrailingCommaTwo.java -- --- /dev/null +++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/NoArrayTrailingCommaCheck.java -- --- /dev/null +++ b/src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/NoArrayTrailingCommaCheckTest.java -- --- /dev/null +++ b/src/test/resources/com/puppycrawl/tools/checkstyle/checks/coding/noarraytrailingcomma/InputNoArrayTrailingComma.java New Check file: src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/NoArrayTrailingCommaCheck.java New Check detected: src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/NoArrayTrailingCommaCheck.java CS Release version: 8.28 Grep for @since 8.28 ✘-1  ```","closed","","romani","2019-12-24T22:41:05Z","2019-12-26T10:12:49Z"
"","7559","doc: add example of non-instance member for MemberNameCheck","It is a bit unclear that [MemberName](https://checkstyle.org/config_naming.html#MemberName) is for **instance** members only.  This PR adds an example on non-instance member to make obvious.","closed","","pbludov","2020-02-19T09:26:27Z","2020-02-20T10:33:50Z"
"","7674","fix-for-issue-#7665","Issue: #7665  - Add example for EmptyStatement","closed","awaiting changes,","mrhakimov","2020-02-25T23:21:05Z","2020-03-13T14:17:26Z"
"","7891","Issue: #7648: add doc for magic number","Issue: #7648: add doc for magic number  Screenshot of the website ![Screen Shot 2020-03-17 at 9 59 20 PM](https://user-images.githubusercontent.com/8281380/76918131-f05bf780-689b-11ea-94ec-7acefe29d4ef.png)  ![Screen Shot 2020-03-19 at 2 38 31 PM](https://user-images.githubusercontent.com/8281380/77102531-5e650380-69ef-11ea-8204-8412087e5694.png)  Screenshot of the default behavior: ![Screen Shot 2020-03-19 at 2 11 20 PM](https://user-images.githubusercontent.com/8281380/77101907-6cfeeb00-69ee-11ea-955b-557d106ef80c.png)  Screenshot after adding the config: ![Screen Shot 2020-03-18 at 12 28 57 PM](https://user-images.githubusercontent.com/8281380/76983631-1f15b480-6914-11ea-934a-2524071eac2f.png)","closed","","paragpachpute","2020-03-18T02:07:18Z","2020-03-23T19:46:25Z"
"","7781","issue #7645: Update doc for IllegalToken","issue: #7645: Update doc for IllegalToken    Ouput of default example: $ cat config.xml ```xml                        ```      $ cat Test.java ```java public class Test {      public void myTest() {         outer: // violation         for (int i = 0; i < 5; i++) {             if (i == 1) {                 break outer;             }         }     } } ```  $ RUN_LOCALE=""-Duser.language=en -Duser.country=US"" $ java $RUN_LOCALE -jar /var/tmp/checkstyle-8.31-SNAPSHOT-all.jar -c config.xml Test.java Starting audit... [ERROR] /Users/hgh/Downloads/my_file/IDEA_workspace/Leetcode_maven/engineering_ability/src/main/java/Test.java:4:14: Using 'outer:' is not allowed. [IllegalToken] Audit done. Checkstyle ends with 1 errors.  Ouput of configure the check to find token LITERAL_NATIVE example: $ cat config.xml  ```xml                                               ``` $ cat Test.java ```java public class Test {      public native void myTest();      // violation  } ``` $ RUN_LOCALE=""-Duser.language=en -Duser.country=US"" $ java $RUN_LOCALE -jar /var/tmp/checkstyle-8.31-SNAPSHOT-all.jar -c config.xml Test.java Starting audit... [ERROR] /Users/hgh/Downloads/my_file/IDEA_workspace/Leetcode_maven/engineering_ability/src/main/java/Test2.java:3:12: Using 'native' is not allowed. [IllegalToken] Audit done. Checkstyle ends with 1 errors.","closed","","HuGanghui","2020-03-04T11:39:02Z","2020-03-05T12:01:03Z"
"","7302","Issue #7301: fix handling of small images","Issue: #7301 * fix check for wrapper (checked only config_*.xml files til now) * add handling of small images * fix display of source","closed","","jo2","2019-12-03T16:02:07Z","2019-12-07T15:49:55Z"
"","7272","Issue #7270: change repeat of header to repeat-x","Issue: #7270   ![image](https://user-images.githubusercontent.com/7516893/69139776-84ba7700-0ac1-11ea-906c-feff0b2ab80b.png)","closed","","jo2","2019-11-19T15:44:12Z","2019-11-22T01:41:34Z"
"","7255","mobile website","Issue: #7083   This PR contains refactoring of the whole page except for project info and project documentation. Those parts are generated by `maven-project-info-reports-plugin`. For making these responsive the generation of those pages has to be changed. For example the `plugin-management.html` is generated in `PluginManagementReport.java`. The line which would have to be changed is [this](https://github.com/apache/maven-project-info-reports-plugin/blob/a06436366670e7fca7e92b690b2d45d5ada00ebc/src/main/java/org/apache/maven/report/projectinfo/PluginManagementReport.java#L202).  To make tables, images and code blockwise scrollable, those tags have to be surrounded by a `span` or `div` with the class `wrapper`. For example: ```  ``` becomes ```        ``` The use of `div` and `span` depends on the block element which contains the image, code or table. In a `p` `span` has to be used, otherwise `div` can be used.","closed","","jo2","2019-11-15T14:59:20Z","2019-11-29T23:07:15Z"
"","7254","fix release date display","Issue: #7036   Display release date in upper right corner of release node block: ![image](https://user-images.githubusercontent.com/7516893/68942437-e40a4580-07a8-11ea-8c6e-ab4bff75da62.png)","closed","","jo2","2019-11-15T11:38:59Z","2019-11-17T22:14:21Z"
"","7909","Issue: #7738 Update AbstractChecks to log DetailAST - JavadocContentLocation","Issue resolves #7738 . # 1. Site Changes.   # 2. Diff Report (Default Config): https://harsh-kukreja.github.io/diff%20report%20default%20config/diff/  (Config with location of first_line): https://harsh-kukreja.github.io/diff%20report%20first_line%20config/diff/  # 3. Goal Update AbstractChecks to log DetailAST - JavadocContentLocation","closed","","harsh-kukreja","2020-03-19T19:03:14Z","2020-03-30T10:13:18Z"
"","7544","Suppress violations on empty initializer in google style from WhitespaceAround","issue is described at #7543  We need to provide temporal suppression of violations by xpath: ```                                         ```","open","","romani","2020-02-11T14:31:26Z","2020-03-15T14:15:21Z"
"","7125","config: fix previous commits check to avoid confusion with master and rewrite main ci for easier maintenance","Issue identified at https://github.com/checkstyle/checkstyle/pull/7123#issue-322507527 ,  Fixing CI so we don't skip all master runs. Right now the PR commit count is making all master CI runs act like there are no commits and is always skipping CI. See https://github.com/checkstyle/checkstyle/pull/7125#discussion_r329520373 for full description  This is also to try to provide us easier maintenance and some debugging as I am not sure I have fixed all cases.","closed","miscellaneous,","rnveach","2019-09-29T16:01:56Z","2019-10-05T23:41:00Z"
"","7124","config: fix previous commits check to avoid confusion with master","Issue identified at https://github.com/checkstyle/checkstyle/pull/7123#issue-322507527 ,  Fixing CI so we don't skip all master runs.","closed","blocked,","rnveach","2019-09-29T14:50:45Z","2019-09-29T17:18:23Z"
"","7455","minor: fix example of module for NoArrayTrailingCommaCheck","Issue identified at https://github.com/checkstyle/checkstyle/commit/f0af10863ff015bd4401878f73a70ced4baca46e#r36683492","closed","","rnveach","2020-01-09T20:31:43Z","2020-01-10T00:11:05Z"
"","7415","minor: remove obsolete suppressions","Issue https://github.com/sevntu-checkstyle/sevntu.checkstyle/issues/166 is still open, but these suppressions are redundant since https://github.com/sevntu-checkstyle/sevntu.checkstyle/issues/777","closed","","pbludov","2019-12-29T14:04:51Z","2019-12-29T16:34:34Z"
"","7332","minor: remove obsolete jacoco suppression","Issue https://github.com/jacoco/jacoco/issues/660 is resolved.  Local run of `mvn clean test jacoco:restore-instrumented-classes  jacoco:report@default-report jacoco:check@default-check` shows 100% coverage on my PC.","closed","","pbludov","2019-12-07T08:45:15Z","2019-12-07T17:31:42Z"
"","7331","minor: remove obsolete pmd suppression","Issue https://github.com/hcoles/pitest/issues/377 seems to be resolved. Local run of `pmd:check` succeeded on my PC.","closed","","pbludov","2019-12-07T05:34:44Z","2019-12-07T17:26:11Z"
"","7586","Issue #7574 : Update doc for PackageAnnotation","Issue : https://github.com/checkstyle/checkstyle/issues/7574 ![Screenshot from 2020-03-10 09-20-03](https://user-images.githubusercontent.com/50927824/76278017-7da5b780-62b0-11ea-9fc6-b15e0142c809.png)  Configuration ``` $ cat config.xml              	      ```  Output with violation in MyClass.java ``` $ cat MyClass.java @Deprecated package com.example.annotations.packageannotation;  $ java -jar checkstyle-8.29-all.jar -c config.xml MyClass.java Starting audit... [ERROR] /home/dunu008/GSOC/CHECKSTYLE-PROJECT/tests/MyClass.java:2: Package annotations must be in the package-info.java info. [PackageAnnotation] Audit done. Checkstyle ends with 1 errors. ``` Fixing violation in MyClass.java ``` $ cat MyClass.java package com.example.annotations.packageannotation;  $ java -jar checkstyle-8.29-all.jar -c config.xml MyClass.java Starting audit... Audit done. ``` Ouput in package-info.java ``` $ cat package-info.java @Deprecated package com.example.annotations.packageannotation;  $ java -jar checkstyle-8.29-all.jar -c config.xml package-info.java Starting audit... Audit done. ```","closed","","PrabodDunuwila","2020-02-23T16:31:08Z","2020-03-12T05:31:44Z"
"","7633","Issue #7569: Update doc for AnnotationLocation to have config first and code sample after","Issue : https://github.com/checkstyle/checkstyle/issues/7569 ![Screenshot from 2020-03-22 20-26-16](https://user-images.githubusercontent.com/50927824/77252704-b7e16280-6c7b-11ea-8f6d-b78a7588a554.png) ![Screenshot from 2020-03-22 20-26-27](https://user-images.githubusercontent.com/50927824/77252707-bc0d8000-6c7b-11ea-9317-4e295126a189.png)   1. Default Configuration ```$ cat config.xml              	      ``` ``` $ cat testone.java public class testone{ 	@NotNull private boolean field1; //ok 	@Override public int hashCode() { return 1; } // ok 	@NotNull //ok 	private boolean field2; 	@Override //ok 	public boolean equals(Object obj) { return true; } 	@Mock DataLoader loader; // ok 	@SuppressWarnings(""deprecation"") DataLoader loader; // violation 	@SuppressWarnings(""deprecation"") public int foo() { return 1; } // violation 	@NotNull @Mock DataLoader loader; //violation }  $ java $RUN_LOCALE -jar checkstyle-8.29-all.jar -c config.xml testone.java Starting audit... [ERROR] /home/dunu008/GSOC/CHECKSTYLE-PROJECT/tests/testone.java:9: Annotation 'SuppressWarnings' should be alone on line. [AnnotationLocation] [ERROR] /home/dunu008/GSOC/CHECKSTYLE-PROJECT/tests/testone.java:10: Annotation 'SuppressWarnings' should be alone on line. [AnnotationLocation] [ERROR] /home/dunu008/GSOC/CHECKSTYLE-PROJECT/tests/testone.java:11: Annotation 'Mock' should be alone on line. [AnnotationLocation] Audit done. Checkstyle ends with 3 errors. ```  2. Allow multiple annotations on the same line ``` $ cat config.xml              	 	   	   	   	      ``` ``` $ cat testone.java public class testone{ 	@NotNull private boolean field1; //ok 	@Override public int hashCode() { return 1; } // ok 	@NotNull //ok 	private boolean field2; 	@Override //ok 	public boolean equals(Object obj) { return true; } 	@Mock DataLoader loader; // ok 	@SuppressWarnings(""deprecation"") DataLoader loader; // ok 	@SuppressWarnings(""deprecation"") public int foo() { return 1; } // ok 	@NotNull @Mock DataLoader loader; //ok }  $ java $RUN_LOCALE -jar checkstyle-8.29-all.jar -c config.xml testone.java Starting audit... Audit done. ```  3. Allow one single parameterless annotation on the same line ``` $ cat config.xml              	 	   	   	   	      ``` ``` $ cat testone.java public class testone{ 	@NotNull private boolean field1; //ok 	@Override public int hashCode() { return 1; } // ok 	@NotNull //ok 	private boolean field2; 	@Override //ok 	public boolean equals(Object obj) { return true; } 	@Mock DataLoader loader; // ok 	@SuppressWarnings(""deprecation"") DataLoader loader; // violation 	@SuppressWarnings(""deprecation"") public int foo() { return 1; } // violation 	@NotNull @Mock DataLoader loader; //violation }  $ java $RUN_LOCALE -jar checkstyle-8.29-all.jar -c config.xml testone.java Starting audit... [ERROR] /home/dunu008/GSOC/CHECKSTYLE-PROJECT/tests/testone.java:9: Annotation 'SuppressWarnings' should be alone on line. [AnnotationLocation] [ERROR] /home/dunu008/GSOC/CHECKSTYLE-PROJECT/tests/testone.java:10: Annotation 'SuppressWarnings' should be alone on line. [AnnotationLocation] [ERROR] /home/dunu008/GSOC/CHECKSTYLE-PROJECT/tests/testone.java:11: Annotation 'Mock' should be alone on line. [AnnotationLocation] Audit done. Checkstyle ends with 3 errors. ```  4. Allow only one and only parameterized annotation on the same line: ``` $ cat config.xml              	 	   	   	   	      ``` ``` $ cat testone.java public class testone{ 	@NotNull private boolean field1; //violation 	@Override public int hashCode() { return 1; } //violation 	@NotNull //ok 	private boolean field2; 	@Override //ok 	public boolean equals(Object obj) { return true; } 	@Mock DataLoader loader; // violation 	@SuppressWarnings(""deprecation"") DataLoader loader; // ok 	@SuppressWarnings(""deprecation"") public int foo() { return 1; } // ok 	@NotNull @Mock DataLoader loader; //violation }  $ java $RUN_LOCALE -jar checkstyle-8.29-all.jar -c config.xml testone.java Starting audit... [ERROR] /home/dunu008/GSOC/CHECKSTYLE-PROJECT/tests/testone.java:2: Annotation 'NotNull' should be alone on line. [AnnotationLocation] [ERROR] /home/dunu008/GSOC/CHECKSTYLE-PROJECT/tests/testone.java:3: Annotation 'Override' should be alone on line. [AnnotationLocation] [ERROR] /home/dunu008/GSOC/CHECKSTYLE-PROJECT/tests/testone.java:8: Annotation 'Mock' should be alone on line. [AnnotationLocation] [ERROR] /home/dunu008/GSOC/CHECKSTYLE-PROJECT/tests/testone.java:11: Annotation 'Mock' should be alone on line. [AnnotationLocation] [ERROR] /home/dunu008/GSOC/CHECKSTYLE-PROJECT/tests/testone.java:11: Annotation 'NotNull' should be alone on line. [AnnotationLocation] Audit done. Checkstyle ends with 5 errors. ```  5. To only validate annotations on methods to allow one single parameterless annotation on the same line  ``` $ cat config.xml              	 	   	   	   	   	      ```  ``` $ cat testone.java public class testone{ 	@NotNull private boolean field1; //ok 	@Override public int hashCode() { return 1; } // ok 	@NotNull //ok 	private boolean field2; 	@Override //ok 	public boolean equals(Object obj) { return true; } 	@Mock DataLoader loader; // ok 	@SuppressWarnings(""deprecation"") DataLoader loader; // ok 	@SuppressWarnings(""deprecation"") public int foo() { return 1; } // violation 	@NotNull @Mock DataLoader loader; //ok }  $ java $RUN_LOCALE -jar checkstyle-8.29-all.jar -c config.xml testone.java Starting audit... [ERROR] /home/dunu008/GSOC/CHECKSTYLE-PROJECT/tests/testone.java:10: Annotation 'SuppressWarnings' should be alone on line. [AnnotationLocation] Audit done. Checkstyle ends with 1 errors.  ```","closed","","PrabodDunuwila","2020-02-24T15:53:26Z","2020-03-28T15:02:05Z"
"","7970","Issue #7969: upgrade AppVeyor build image to VS2019","Issue #7969   JDK13 is no more supported, we are moving to jdk14. AppVeyor image upgraded from Windows Server 2012 to Windows Server 2019. We have no files with jdk13 specific syntax, so travis stage `javac13` can be replaced with `javac14` too.","closed","","pbludov","2020-03-26T14:45:44Z","2020-04-06T05:54:50Z"
"","7937","Issue #7921: Resolve Pitest Issues - UnusedImportsCheck","Issue #7921   Description:  We don't need the variable collect to check if we should start collecting or not because it will always true because every java fill will contain package keyword or class that will make collect = true  Reports: Diff Report : https://amrdeveloper.github.io/checkstyle-reports/7921/diff/ pitest-after : https://amrdeveloper.github.io/checkstyle-reports/7921/pitest-after pitest-before : https://amrdeveloper.github.io/checkstyle-reports/7921/pitest-before/","closed","","AmrDeveloper","2020-03-22T10:23:57Z","2020-05-17T22:46:35Z"
"","7974","Issue #7892: Improve clean up of .ci-temp directory","Issue #7892: pwd && ls to see what is going on","closed","","pbludov","2020-03-28T07:51:20Z","2020-03-29T07:57:38Z"
"","7966","Issue #7892: Improve clean up of .ci-temp directory","Issue #7892: Improve clean up of .ci-temp directory","closed","","nick-mancuso","2020-03-26T03:38:55Z","2020-04-04T05:03:57Z"
"","7888","Issue #7885: pitest problem with coverage in SuppressWarningsHolder","Issue #7885","closed","","AmrDeveloper","2020-03-17T21:14:15Z","2020-03-18T14:46:47Z"
"","7918","Issue #7876: Fix for ImportOrderCheck(6)","Issue #7876: Fix for ImportOrderChec(6)","closed","","yajna-pandith","2020-03-20T18:22:22Z","2020-05-29T15:14:24Z"
"","7927","Issue #7854: Resolve Pitest Issues - IllegalImportCheck (1)","Issue #7854","closed","","akki111singh","2020-03-21T06:39:41Z","2020-03-28T19:14:15Z"
"","7931","Issue #7848: SuppressWarningsHolder should not report violations","Issue #7848   Diff Report: https://amrdeveloper.github.io/checkstyle-reports/7848/","closed","","AmrDeveloper","2020-03-21T15:04:04Z","2020-04-19T16:01:45Z"
"","7840","Issue #7800: Resolve Pitest Issues - AvoidStarImportCheck(2)","Issue #7800: Resolve Pitest Issues - AvoidStaticImportCheck(2)  As described as in #7800:  **Pitest report**  Link: https://huganghui.github.io/7800-AvoidStarImportCheck(2)/before-pit-reports/202003131405/ Surviving mutations: on line 188: removed conditional - replaced equality check with false → SURVIVED I am focusing on it. on line 224: removed conditional - replaced equality check with true → SURVIVED referenced by #7799, wilcoln is focusing on it.  **Hardcoded mutation**  mutation cs branch: https://github.com/HuGanghui/checkstyle/commit/1578ac0229711f39a4a7c77457f430491918cd57 comment: Looking at the pitest report, we can see that the surviving mutation is the one for which removed conditional - replaced equality check with false → SURVIVED, this is equivalent as simply removing the entire condition and keeping only the else body. Which I did.  **Regression diff report**  Used only guava and elastic-search, but there is no diff found. Link: https://huganghui.github.io/7800-AvoidStarImportCheck(2)/hardcoded-reports/diff/  **Code Logic Analysis**  Although there is no diff found in Regression diff report, I find that the reason why the surviving mutation exists is maybe a small oversight in an existing UT , details as follows: https://github.com/checkstyle/checkstyle/blob/91f13c1d2ac273f89f12dac7fb83505f42a7bbe1/src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStarImportCheckTest.java#L63  javax.swing.WindowConstants is redundant in this UT, so I remove this import and do Pitest, report shows it can kill the mutation.  **Pitest report after removing redundant code in the UT mentioned above**  Link: https://huganghui.github.io/7800-AvoidStarImportCheck(2)/after-pit-reports/202003131742/ now on line 188, is KILLED on line 188: removed conditional - replaced equality check with false → KILLED","closed","","HuGanghui","2020-03-13T10:03:37Z","2020-03-15T12:10:24Z"
"","7813","Update AbstractChecks to log DetailAST - WriteTag #7767","Issue #7767: Update AbstractChecks to log DetailAST - WriteTag","closed","","yajna-pandith","2020-03-09T18:48:29Z","2020-03-14T22:04:08Z"
"","7850","Issue #7767: Fix for WriteTag Check to include DetailAST while logging","Issue #7767: Fix for WriteTag Check to include DetailAST while logging","closed","awaiting response,","yajna-pandith","2020-03-14T19:14:15Z","2020-04-02T19:04:58Z"
"","7959","Issue #7766: Fix for VariableDeclarationUsageDistanceCheck for log DetailAST","Issue #7766: Fix for VariableDeclarationUsageDistanceCheck for log DetailAST","closed","awaiting changes,","yajna-pandith","2020-03-25T18:10:52Z","2020-10-11T04:32:00Z"
"","7836","Issue #7764: Update AbstractChecks to log DetailAST - UncommentedMain","Issue #7764   Update AbstractChecks to log DetailAST - UncommentedMain  Report : https://amrdeveloper.github.io/checkstyle-reports/7764/","closed","","AmrDeveloper","2020-03-12T08:16:23Z","2020-03-20T12:25:31Z"
"","7897","Issue #7763: Fix for TrailingCommentCheck to log DetailAST","Issue #7763: Fix for TrailingCommentCheck to log DetailAST","closed","","yajna-pandith","2020-03-18T18:32:48Z","2020-03-22T05:41:23Z"
"","7865","Issue #7763: Fix for TrailingComment while updating log to DetailAST","Issue #7763: Fix for TrailingComment while updating log to DetailAST","closed","","yajna-pandith","2020-03-16T15:28:54Z","2020-03-18T17:05:09Z"
"","7952","Issue #7763: Fix for TrailingComment to log column number in log","Issue #7763: Fix for TrailingComment to log column number in log","closed","","yajna-pandith","2020-03-24T13:35:49Z","2020-04-26T17:34:21Z"
"","7941","Issue #7763: Fix for TrailingComment to log column number in log","Issue #7763: Fix for TrailingComment to log column number in log","closed","","yajna-pandith","2020-03-22T16:53:36Z","2020-03-24T13:34:51Z"
"","7844","Issue #7755: Update AbstractChecks to log DetailAST - OuterTypeFilename","Issue #7755: Update AbstractChecks to log DetailAST - OuterTypeFilename  https://github.com/checkstyle/checkstyle/blob/0823da3cf1820603a155b5c8f14d5dfa63fe92b5/src/main/java/com/puppycrawl/tools/checkstyle/checks/OuterTypeFilenameCheck.java#L118  Diff report: https://huganghui.github.io/7755-DetailAST-outerTypeFilename/reports/diff/","closed","","HuGanghui","2020-03-13T15:39:17Z","2020-03-15T12:11:02Z"
"","7820","Issue #7748: Update AbstractChecks to log DetailAST - MissingOverride","Issue #7748: Update AbstractChecks to log DetailAST - MissingOverride  https://github.com/checkstyle/checkstyle/blob/abf829f542023e089c741c55f73098cae52dcb12/src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java#L150  https://github.com/checkstyle/checkstyle/blob/abf829f542023e089c741c55f73098cae52dcb12/src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java#L170  Diff report: default: https://huganghui.github.io/7748-DetailAST-missing-over-ride/reports1/diff/ javaFiveCompatibility property: https://huganghui.github.io/7748-DetailAST-missing-over-ride/reports2/diff/","closed","","HuGanghui","2020-03-10T15:59:31Z","2020-03-13T15:32:09Z"
"","7852","Issue #7744: Update AbstractChecks to log DetailAST - MissingCtor","Issue #7744: Update AbstractChecks to log DetailAST - MissingCtor  https://github.com/checkstyle/checkstyle/blob/5ec8cfe4ded197c67f0f4bb8edfddde1d34d78c1/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MissingCtorCheck.java#L71  Diff report: https://huganghui.github.io/7744-DetailAST-missing-ctor/reports/diff/","closed","","HuGanghui","2020-03-15T15:38:42Z","2020-03-18T15:55:23Z"
"","7949","Issue #7742: Update AbstractChecks to log DetailAST - LambdaParameter…","Issue #7742 is fixed. [Diff report](https://abhishek-kumar09.github.io/7742/reports/diff/index.html)","closed","","Abhishek-kumar09","2020-03-23T19:02:10Z","2020-03-26T08:48:22Z"
"","7868","Issue #7740: Update AbstractChecks to log DetailAST - JavadocStyle","Issue #7740: Update AbstractChecks to log DetailAST - JavadocStyle  Diff report (finally here!): https://wltan.github.io/checkstyle-reports/2020-03-18/javadocstyle-detailast-regression/diff/  Discrepancies observed are due to logging column number where we previously did not.  Note that although there are seven calls to `log` as highlighted in https://github.com/checkstyle/checkstyle/issues/7740#issuecomment-599047248, this PR only fixes one of them as instructed in https://github.com/checkstyle/checkstyle/issues/7740#issuecomment-599061545. Please see the discussion on that thread for more details.","closed","","wltan","2020-03-16T16:55:08Z","2020-03-19T14:46:26Z"
"","7967","Issue #7735: Update AbstractChecks to log DetailAST - InterfaceIsType","Issue #7735: Update AbstractChecks to log DetailAST - InterfaceIsType   diff report :  https://huganghui.github.io/7735-DetailAST-InterfaceIsType/reports/","closed","","HuGanghui","2020-03-26T04:58:54Z","2020-04-10T15:54:55Z"
"","7863","Issue #7731: Update AbstractChecks to log DetailAST - FinalClass","Issue #7731: Update AbstractChecks to log DetailAST - FinalClass  https://github.com/HuGanghui/checkstyle/blob/960d437846eb39ae1a52791528d73867c08982bf/src/main/java/com/puppycrawl/tools/checkstyle/checks/design/FinalClassCheck.java#L137  diff report: https://huganghui.github.io//7731-DetailAST-final-class/reports/reports/diff/","closed","","HuGanghui","2020-03-16T11:02:35Z","2020-03-18T15:55:11Z"
"","7887","Issue #7725: Update AbstractChecks to log DetailAST - AvoidStarImport","Issue #7725","closed","","akki111singh","2020-03-17T21:11:43Z","2020-03-17T23:10:04Z"
"","7708","Issue #7705: add no error regression for methods distance repo","Issue #7705  Expecting similar errors from wercker as repo hasn't been updated to 8.30 and already confirmed it needs changes.","closed","","rnveach","2020-02-29T19:33:34Z","2020-03-04T17:35:25Z"
"","7706","Issue #7705: add no error regression for contribution repo","Issue #7705","closed","","rnveach","2020-02-29T18:04:19Z","2020-03-03T16:29:01Z"
"","7953","Issue: #7696 update doc for RegexpOnFilename","Issue #7696: update doc for RegexpOnFilename  ### Examples Added: ![Changes4](https://user-images.githubusercontent.com/53093601/79877751-43c8e480-840a-11ea-9b19-5921ad941336.PNG)   ![Changes2](https://user-images.githubusercontent.com/53093601/77468952-5b757300-6e34-11ea-91b8-ae188136a56e.PNG)  ![Changes3](https://user-images.githubusercontent.com/53093601/77469190-b6a76580-6e34-11ea-828a-727ee3b5eb83.PNG)  ### CLI Results:  **For default configuration** config.xml  ```    	  ```  Results ``` F:\College\Checkstyle Jar>java -jar checkstyle-8.30-all.jar -c config.xml src/xdocs/""config regexp.xml"" Starting audit... [ERROR] F:\College\Checkstyle Jar\src\xdocs\config regexp.xml:1: File match folder pattern '' and file pattern '\s'. [RegexpOnFilename] Audit done. Checkstyle ends with 1 errors. ``` **For custom configurations** config.xml ```                                                                ``` Results ``` F:\College\Checkstyle Jar>java -jar checkstyle-8.30-all.jar -c config.xml src\main_properties.properties Starting audit... [ERROR] F:\College\Checkstyle Jar\src\main_properties.properties:1: File not match folder pattern '[\\/]src' and file pattern '\.(java|xml)$'. [RegexpOnFilename] Audit done. Checkstyle ends with 1 errors.  F:\College\Checkstyle Jar>java -jar checkstyle-8.30-all.jar -c config.xml src\NewClass.java Starting audit... Audit done. ```  **New Configuration** To configure the check to forbid 'md' files except 'README.md file' in folders, with custom message:  config.xml  ```                                                          	 		 		 		 		 	  ```  Results  ``` F:\College\Checkstyle Jar\src>java -jar checkstyle-8.30-all.jar -c config.xml README.md Starting audit... Audit done.  F:\College\Checkstyle Jar\src>java -jar checkstyle-8.30-all.jar -c config.xml hello.md Starting audit... [ERROR] F:\College\Checkstyle Jar\src\hello.md:1: No *.md files other then README.md [RegexpOnFilename] Audit done. Checkstyle ends with 1 errors.  F:\College\Checkstyle Jar\src>java -jar checkstyle-8.30-all.jar -c config.xml NewClass.class Starting audit... Audit done. ```","closed","","developerhb","2020-03-24T15:46:08Z","2020-04-22T13:56:02Z"
"","7901","Issue #7694: update doc for NPathComplexity","Issue #7694: added code examples  ![image](https://user-images.githubusercontent.com/7280721/77795067-f3dd4480-703a-11ea-9561-24a25f00344b.png) --- Output of default example: ``` $ cat config.xml                         $ cat Test.java public abstract class Test {  final int a = 0; int b = 0;  public void foo() { // OK, NPath complexity is less than default threshold   // function consists of one if-else block with an NPath Complexity of 3   if (a > 10) {     if (a > b) { // nested if-else decision tree adds 2 to the complexity count       buzz();     } else {       fizz();     }   } else { // last possible outcome of the main if-else block, adds 1 to complexity     buzz();   } }  public void boo() { // violation, NPath complexity is 217 (max allowed is 200)   // looping through 3 switch statements produces 6^3 + 1 (217) possible outcomes   for(int i = 0; i < b; i++) { // for statement adds 1 to final complexity     switch(i) { // each independent switch statement multiplies complexity by 6       case a:         // ternary with && adds 3 to switch's complexity         print(f(i) && g(i) ? fizz() : buzz());       default:         // ternary with || adds 3 to switch's complexity         print(f(i) || g(i) ? fizz() : buzz());     }     switch(i - 1) { // multiplies complexity by 6       case a:         print(f(i) && g(i) ? fizz() : buzz());       default:         print(f(i) || g(i) ? fizz() : buzz());     }     switch(i + 1) { // multiplies complexity by 6       case a:         print(f(i) && g(i) ? fizz() : buzz());       default:         print(f(i) || g(i) ? fizz() : buzz());     }   } }  public abstract boolean f(int x); public abstract boolean g(int x); public abstract String fizz(); public abstract String buzz(); public abstract void print(String str); }  $ java -jar checkstyle-8.30-all.jar -c config.xml Test.java Starting audit... [ERROR] C:\Users\super\Desktop\Test.java:19:1: NPath Complexity is 217 (max allowed is 200). [NPathComplexity] Audit done. Checkstyle ends with 1 errors. ``` Output of non-default example: ``` $ cat config.xml                                             $ cat Test.java public abstract class Test1 { public void foo() { // violation, NPath complexity is 128 (max allowed is 100)   int a,b,t,m,n;   a=b=t=m=n = 0;    // Complexity is achieved by choosing from 2 options 7 times (2^7 = 128 possible outcomes)   if (a > b) { // non-nested if-else decision tree multiplies complexity by 2     bar();   } else {     baz();   }    print(t > 1 ? bar() : baz()); // 5 ternary statements multiply complexity by 2^5   print(t > 2 ? bar() : baz());   print(t > 3 ? bar() : baz());   print(t > 4 ? bar() : baz());   print(t > 5 ? bar() : baz());    if (m > n) { // multiplies complexity by 2     baz();   } else {     bar();   } }  public abstract String bar(); public abstract String baz(); public abstract void print(String str); }  $ java -jar checkstyle-8.30-all.jar -c config.xml Test.java Starting audit... [ERROR] C:\Users\super\Desktop\Test.java:2:1: NPath Complexity is 128 (max allowed is 100). [NPathComplexity] Audit done. Checkstyle ends with 1 errors. ```","closed","","edwardlee","2020-03-19T07:26:47Z","2020-03-28T09:11:10Z"
"","7867","fix-for-issue-7691","Issue #7691 : update doc for ClassFanOutComplexity      Output of default example:  ``` C:\Users\Shashwat\Documents>cat config.xml                      C:\Users\Shashwat\Documents>cat Test.java package a.b;  import a.b.Bar; import a.b.c.Baz;  public class Foo {   public Bar bar; // Will be ignored, located inside ignored a.b package   public Baz baz; // Will not be ignored, located inside a.b.c package   public Data data; // Will not be ignored, same file    class Data {     public Foo foo; // Will not be ignored, same file   } }  C:\Users\Shashwat\Documents>java -jar checkstyle-8.29-all.jar -c config.xml Test.java Starting audit... Audit done. ```  Output of example 1:  ``` C:\Users\Shashwat\Documents>cat config.xml                               C:\Users\Shashwat\Documents>cat Test.java public class InputClassComplexity {   public Set _set = new HashSet(); // Ignored due to default excludedClasses property   public Map _map = new HashMap(); // Ignored due to default excludedClasses property   public List _list = new ArrayList();                       // Ignored due to default excludedClasses property   public Date _date = new Date(); // Counted, 1   public Time _time = new Time(); // Counted, 2   public Place _place = new Place(); // Counted, 3 }  C:\Users\Shashwat\Documents>java -jar checkstyle-8.29-all.jar -c config.xml Test.java Starting audit... [ERROR] C:\Users\Shashwat\Documents\Test.java:1:1: Class Fan-Out Complexity is 3 (max allowed is 2). [ClassFanOutComplexity] Audit done. Checkstyle ends with 1 errors. ```  Output of Example 2:  ``` C:\Users\Shashwat\Documents>cat config.xml                                        C:\Users\Shashwat\Documents>cat Test.java public class InputClassComplexity {   public Set _set = new HashSet(); // Ignored due to default excludedClasses property   public Map _map = new HashMap(); // Ignored due to default excludedClasses property   public List _list = new ArrayList();                       // Ignored due to default excludedClasses property   public Date _date = new Date(); // Counted, 1   public Time _time = new Time(); // Counted, 2   public Place _place = new Place(); // Counted, 3 }  C:\Users\Shashwat\Documents>java -jar checkstyle-8.29-all.jar -c config.xml Test.java Starting audit... Audit done. ```  Output of Example 3:  ``` C:\Users\Shashwat\Documents>cat config.xml                               C:\Users\Shashwat\Documents>cat Test.java package a.b;  import a.b.Bar; import a.b.c.Baz;  public class Foo {   public Bar bar; // Will be ignored, located inside ignored a.b package   public Baz baz; // Will not be ignored, located inside a.b.c package   public Data data; // Will not be ignored, same file    class Data {     public Foo foo; // Will not be ignored, same file   } }  C:\Users\Shashwat\Documents>java -jar checkstyle-8.29-all.jar -c config.xml Test.java Starting audit... Audit done. ```","closed","","shashwatj07","2020-03-16T16:00:04Z","2020-03-19T13:04:34Z"
"","7795","update doc for ClassFanOutComplexity","Issue #7691   `mvn verify` passes successfully:   The website looks as follows:","closed","","shashwatj07","2020-03-08T04:06:48Z","2020-03-16T16:03:55Z"
"","7712","Issue #7689: update doc for BooleanExpressionComplexity","Issue #7689: update doc for BooleanExpressionComplexity #7712","closed","","akki111singh","2020-03-01T06:01:03Z","2020-03-01T11:03:21Z"
"","7866","Issue #7671: Update doc for NoFinalizer","Issue #7671: added coding Example.  ![image](https://user-images.githubusercontent.com/51538094/80423239-f81dab80-88df-11ea-8071-24917fda3c7b.png)   $ cat Test.java public class Test {      protected void finalize() throws Throwable { // violation         try {             System.out.println(""overriding finalize()"");         } catch (Throwable t) {             throw t;         } finally {             super.finalize();         }     } }  $ java -jar checkstyle-8.31-all.jar -c /google_checks.xml Test.java Starting audit... [WARN] /mnt/c/Users/Ipowe/Desktop/Test.java:3:5: Avoid using finalizer method. [NoFinalizer] Audit done.","closed","","OmarShawky1","2020-03-16T15:50:26Z","2020-05-15T09:56:59Z"
"","7796","Issue #7666: Add documentation examples for InnerAssignment check","Issue #7666: Add documentation examples for InnerAssignment check  Here is the website: There is only a single (default) config on the site: ![image](https://user-images.githubusercontent.com/35621759/77342083-a034d780-6d6a-11ea-8df4-9f2ee5da794b.png)    Output of default example: ``` $ cat check.xml                  $ cat test.java class MyClass {    void foo() {     int a, b;     a = b = 5; // violation, assignment to each variable should be in a separate statement     a = b += 5; // violation      a = 5; // OK     b = 5; // OK     a = 5; b = 5; // OK      double myDouble;     double[] doubleArray = new double[] {myDouble = 4.5, 15.5}; // violation      String nameOne;     List myList = new ArrayList();     myList.add(nameOne = ""tom""); // violation      for (int k = 0; k < 10; k = k + 2) { // OK       // some code     }      boolean someVal;     if (someVal = true) { // violation       // some code     }      while (someVal = false) {} // violation      InputStream is = new FileInputStream(""textFile.txt"");     while ((b = is.read()) != -1) { // OK, this is a common idiom       // some code     }   }    boolean testMethod() {     boolean val;     return val = true; // violation   } } $ java -jar checkstyle-8.30-all.jar -c check.xml test.java Starting audit... [ERROR] /home/bhav/Desktop/test.java:5:11: Inner assignments should be avoided. [InnerAssignment] [ERROR] /home/bhav/Desktop/test.java:6:11: Inner assignments should be avoided. [InnerAssignment] [ERROR] /home/bhav/Desktop/test.java:13:51: Inner assignments should be avoided. [InnerAssignment] [ERROR] /home/bhav/Desktop/test.java:17:24: Inner assignments should be avoided. [InnerAssignment] [ERROR] /home/bhav/Desktop/test.java:24:17: Inner assignments should be avoided. [InnerAssignment] [ERROR] /home/bhav/Desktop/test.java:28:20: Inner assignments should be avoided. [InnerAssignment] [ERROR] /home/bhav/Desktop/test.java:38:16: Inner assignments should be avoided. [InnerAssignment] Audit done. Checkstyle ends with 7 errors. ```","closed","","anubh-v","2020-03-08T12:59:20Z","2020-03-24T13:29:08Z"
"","7817","Update doc for MultipleStringLiterals","Issue #7650 Updatedoc for MultipleStringLiterals  Java file :MSL.java XML file: config.xml","closed","awaiting changes,","Jalend15","2020-03-10T07:17:51Z","2020-09-07T08:53:28Z"
"","7785","Issue #7646: Update doc for IllegalTokenText","Issue #7646: Update doc for IllegalTokenText     Output of configure to configure the check to forbid String literals containing ""a href"":  $ cat config.xml ```xml                                                            ``` $ cat Test.java ```java public class Test {      public void myTest() {         String test = ""a href""; // violation     } } ``` $ RUN_LOCALE=""-Duser.language=en -Duser.country=US"" $ java $RUN_LOCALE -jar /var/tmp/checkstyle-8.31-SNAPSHOT-all.jar -c config.xml Test.java Starting audit... [ERROR] /var/tmp/Test.java:4:23: Token text matches the illegal pattern 'a href'. [IllegalTokenText] Audit done. Checkstyle ends with 1 errors.  Output of  to configure the check to forbid leading zeros in an integer literal, other than zero and a hex literal: $ cat config.xml ```xml                                                                         ``` $ cat Test.java ```java public class Test {      public void myTest() {         int test1 = 0; // OK         int test2 = 0x111; // OK         int test3 = 0X111; // OK, case is ignored         int test4 = 010; // violation         long test5 = 0L; // OK         long test6 = 010L; // violation     } } ``` $ RUN_LOCALE=""-Duser.language=en -Duser.country=US"" $ java $RUN_LOCALE -jar /var/tmp/checkstyle-8.31-SNAPSHOT-all.jar -c config.xml Test.java Starting audit... [ERROR] /Users/hgh/Downloads/my_file/IDEA_workspace/Leetcode_maven/engineering_ability/src/main/java/checkstyle_demo/illegalTokenText/Test.java:9:21: Token text matches the illegal pattern '^0[^lx]'. [IllegalTokenText] [ERROR] /Users/hgh/Downloads/my_file/IDEA_workspace/Leetcode_maven/engineering_ability/src/main/java/checkstyle_demo/illegalTokenText/Test.java:11:22: Token text matches the illegal pattern '^0[^lx]'. [IllegalTokenText] Audit done. Checkstyle ends with 2 errors.","closed","","HuGanghui","2020-03-05T14:52:02Z","2020-03-09T12:41:02Z"
"","7821","Issue #7639: update doc for ExplicitInitialization","Issue #7639: update doc for ExplicitInitialization  ![image](https://user-images.githubusercontent.com/29354535/78828482-99fb5800-7a06-11ea-9572-bacb46a9c783.png) ![image](https://user-images.githubusercontent.com/29354535/78828502-a1226600-7a06-11ea-938b-50bfc10daf92.png)  Output of default example: $ cat config.xml ```                      ``` $ cat Test.java ``` public class Test {     private int a = 0; // violation     private int b = 1;     private int c = 2;      private char a = '\0'; // violation     private char b = 'b';     private char c = 'c';      private boolean a = true;     private boolean b = false; // violation     private boolean c = true;     private boolean d = false; // violation     private boolean e = false; // violation      private A a = new A();     private A b = null; // violation     private C c = null; // violation     private D d = new D();      int ar1[] = null; // violation     int ar2[] = new int[10];     int ar3[];      private Bar bar = null; // violation     private Bar[] barArray = null; // violation } ```  $ java -jar checkstyle/target/checkstyle-8.31-SNAPSHOT-all.jar -c config.xml java_sandbox/src/com/codestyle/sandbox/Test.java  ``` Starting audit... [ERROR] /Users/demezhanmarikov/IdeaProjects/java_sandbox/src/com/codestyle/sandbox/Test.java:4:17: Variable 'a' explicitly initialized to '0' (default value for its type). [ExplicitInitialization] [ERROR] /Users/demezhanmarikov/IdeaProjects/java_sandbox/src/com/codestyle/sandbox/Test.java:8:18: Variable 'a' explicitly initialized to '\0' (default value for its type). [ExplicitInitialization] [ERROR] /Users/demezhanmarikov/IdeaProjects/java_sandbox/src/com/codestyle/sandbox/Test.java:13:21: Variable 'b' explicitly initialized to 'false' (default value for its type). [ExplicitInitialization] [ERROR] /Users/demezhanmarikov/IdeaProjects/java_sandbox/src/com/codestyle/sandbox/Test.java:15:21: Variable 'd' explicitly initialized to 'false' (default value for its type). [ExplicitInitialization] [ERROR] /Users/demezhanmarikov/IdeaProjects/java_sandbox/src/com/codestyle/sandbox/Test.java:16:21: Variable 'e' explicitly initialized to 'false' (default value for its type). [ExplicitInitialization] [ERROR] /Users/demezhanmarikov/IdeaProjects/java_sandbox/src/com/codestyle/sandbox/Test.java:19:15: Variable 'b' explicitly initialized to 'null' (default value for its type). [ExplicitInitialization] [ERROR] /Users/demezhanmarikov/IdeaProjects/java_sandbox/src/com/codestyle/sandbox/Test.java:20:15: Variable 'c' explicitly initialized to 'null' (default value for its type). [ExplicitInitialization] [ERROR] /Users/demezhanmarikov/IdeaProjects/java_sandbox/src/com/codestyle/sandbox/Test.java:23:9: Variable 'ar1' explicitly initialized to 'null' (default value for its type). [ExplicitInitialization] [ERROR] /Users/demezhanmarikov/IdeaProjects/java_sandbox/src/com/codestyle/sandbox/Test.java:27:25: Variable 'bar' explicitly initialized to 'null' (default value for its type). [ExplicitInitialization] [ERROR] /Users/demezhanmarikov/IdeaProjects/java_sandbox/src/com/codestyle/sandbox/Test.java:28:27: Variable 'barArray' explicitly initialized to 'null' (default value for its type). [ExplicitInitialization] Audit done.  ``` Output of default example: $ cat config.xml ```                                              ``` $ cat Test.java ``` public class Test {     private int a = 0;     private int b = 1;     private int c = 2;      private char a = '\0';     private char b = 'b';     private char c = 'c';      private boolean a = true;     private boolean b = false;     private boolean c = true;     private boolean d = false;     private boolean e = false;      private A a = new A();     private A b = null; // violation     private C c = null; // violation     private D d = new D();      int ar1[] = null; // violation     int ar2[] = new int[10];     int ar3[];      private Bar bar = null; // violation     private Bar[] barArray = null; // violation } ```  $ java -jar checkstyle/target/checkstyle-8.31-SNAPSHOT-all.jar -c config.xml java_sandbox/src/com/codestyle/sandbox/Test.java  ``` Starting audit... [ERROR] /Users/demezhanmarikov/IdeaProjects/java_sandbox/src/com/codestyle/sandbox/Test.java:19:15: Variable 'b' explicitly initialized to 'null' (default value for its type). [ExplicitInitialization] [ERROR] /Users/demezhanmarikov/IdeaProjects/java_sandbox/src/com/codestyle/sandbox/Test.java:20:15: Variable 'c' explicitly initialized to 'null' (default value for its type). [ExplicitInitialization] [ERROR] /Users/demezhanmarikov/IdeaProjects/java_sandbox/src/com/codestyle/sandbox/Test.java:23:9: Variable 'ar1' explicitly initialized to 'null' (default value for its type). [ExplicitInitialization] [ERROR] /Users/demezhanmarikov/IdeaProjects/java_sandbox/src/com/codestyle/sandbox/Test.java:27:25: Variable 'bar' explicitly initialized to 'null' (default value for its type). [ExplicitInitialization] [ERROR] /Users/demezhanmarikov/IdeaProjects/java_sandbox/src/com/codestyle/sandbox/Test.java:28:27: Variable 'barArray' explicitly initialized to 'null' (default value for its type). [ExplicitInitialization] Audit done.  ```","closed","","ImmortalRabbit","2020-03-10T17:34:53Z","2020-04-09T19:17:30Z"
"","7869","Issue #7637: Update doc for EqualsAvoidNull","Issue #7637: Update doc for EqualsAvoidNull ![EqualsAvoidNullCheck](https://user-images.githubusercontent.com/19225540/77197448-946fb980-6abb-11ea-89a2-6bcf8e3ec0f2.PNG)  Output for default example ``` $ type config.xml                                                                                                                                                                                                                                                                                                                                                                                                   $ type Test.java                                       public class Test {      	boolean equalsValue(String someString){     		return someString.equals(""value"");  	}  	boolean equalsValueIgnoreCase(String someString){     		return someString.equalsIgnoreCase(""value""); 	} }  $ java -jar checkstyle-8.30-all.jar -c config.xml Test.java Starting audit... [ERROR] C:\Users\Ray\IdeaProjects\Test\src\Test.java:4:41: String literal expressions should be on the left side of an equals comparison. [EqualsAvoidNull] [ERROR] C:\Users\Ray\IdeaProjects\Test\src\Test.java:8:51: String literal expressions should be on the left side of an equalsIgnoreCase comparison. [EqualsAvoidNull] Audit done. Checkstyle ends with 2 errors.```                                                       Output for non-default example ``` $ type config.xml                                 $ type Test.java                                       public class Test {      	boolean equalsValue(String someString){     		return someString.equals(""value"");  	}  	boolean equalsValueIgnoreCase(String someString){     		return someString.equalsIgnoreCase(""value""); 	} } $ java -jar checkstyle-8.30-all.jar -c config.xml Test.java Starting audit... [ERROR] C:\Users\Ray\IdeaProjects\Test\src\Test.java:4:41: String literal expressions should be on the left side of an equals comparison. [EqualsAvoidNull] Audit done. Checkstyle ends with 1 errors. ```","closed","","RayRCaringal","2020-03-16T17:18:36Z","2020-04-07T02:15:19Z"
"","7634","Issue #7631: Update doc for WhitespaceAfter","Issue #7631: add code examples  ![image](https://user-images.githubusercontent.com/812984/75552047-4d296800-59ea-11ea-90bc-9dd2fcc78b20.png)  Ouput of default example: ``` $ cat config.xml                 $ cat Test.java  public class Test {    public void myTest() {       if (foo) {              // OK           //...       } else if(bar) {        // violation           //...       }        testMethod(foo, bar);   // OK       testMethod(foo,bar);    // violation        for (;;){}               // OK       for(;;){}                // violation, space after 'for' is required   }  }  $ java -jar /var/tmp/checkstyle-8.29-all.jar -c config.xml Test.java  Starting audit... [ERROR] /var/tmp/Test.java:6:14: 'if' is not followed by whitespace. [WhitespaceAfter] [ERROR] /var/tmp/Test.java:11:21: ',' is not followed by whitespace. [WhitespaceAfter] [ERROR] /var/tmp/Test.java:14:7: 'for' is not followed by whitespace. [WhitespaceAfter] Audit done. Checkstyle ends with 3 errors. ```  output of non-default example: ``` $ cat config.xml                              $ cat Test.java  public class Test {    public void myTest() {       int a; int b;           // OK       int a;int b;            // violation        testMethod(foo, bar);   // OK       testMethod(foo,bar);    // violation        for(;;) {} // OK   }  }  $ java -jar /var/tmp/checkstyle-8.29-all.jar -c config.xml Test.java  Starting audit... [ERROR] /var/tmp/Test.java:5:12: ';' is not followed by whitespace. [WhitespaceAfter] [ERROR] /var/tmp/Test.java:8:21: ',' is not followed by whitespace. [WhitespaceAfter] Audit done. Checkstyle ends with 2 errors.  ```","closed","","nick-mancuso","2020-02-24T20:59:51Z","2021-01-08T22:44:09Z"
"","7700","Issue #7621: Update doc for GenericWhitespace","Issue #7621: Update doc for GenericWhitespace  The relevant section has been modified. It now looks like this:  ![image](https://user-images.githubusercontent.com/53135010/75612984-a10b8c80-5b63-11ea-986c-c5a8141d64ac.png)  There are no additional configurations, so there is only one set of example violations. Output: ``` D:\checkstyletest>type config.xml                           D:\checkstyletest>type test\Test.java  public class Test {      public void foo() {} // violation, """" followed with whitespace         Mapm; // violation, "">"" not followed with whitespace         Pair p; // violation, "">"" preceded with whitespace     }  }  D:\checkstyletest>java -jar -Duser.language=en -Duser.country=US checkstyle-8.29-all.jar -c config.xml test\Test.java  Starting audit... [ERROR] D:\checkstyletest\test\Test.java:3:11: '' is preceded with whitespace. [GenericWhitespace] Audit done. ```","closed","","wltan","2020-02-28T17:38:43Z","2020-03-01T13:03:19Z"
"","7934","Issue #7612: Update doc for InterfaceIsType","Issue #7612: Update doc for InterfaceIsType    Ouput of default example: $ cat config.xml ```xml                        ``` $ cat Test.java ```java public interface Test1 { // violation     int a = 3; }  interface Test2 { // OK  }  interface Test3 { // OK     int a = 3;     void test(); } ``` $ RUN_LOCALE=""-Duser.language=en -Duser.country=US"" $ java $RUN_LOCALE -jar /var/tmp/checkstyle-8.31-SNAPSHOT-all.jar -c config.xml Test.java Starting audit... [ERROR] /var/tmp/Test.java:1: interfaces should describe a type and hence have methods. [InterfaceIsType] Audit done. Checkstyle ends with 1 errors.  Ouput of configure the check to report violation so that it doesn't allow Marker Interfaces:  $ cat config.xml ```xml                                                   ``` $ cat Test.java ```java public interface Test1 { // violation     int a = 3; }  interface Test2 { // violation  } ``` $ RUN_LOCALE=""-Duser.language=en -Duser.country=US"" $ java $RUN_LOCALE -jar /var/tmp/checkstyle-8.31-SNAPSHOT-all.jar -c config.xml Test.java Starting audit... [ERROR] /var/tmp/Test.java:1: interfaces should describe a type and hence have methods. [InterfaceIsType] [ERROR] /var/tmp/Test.java:6: interfaces should describe a type and hence have methods. [InterfaceIsType] Audit done. Checkstyle ends with 2 errors.","closed","","HuGanghui","2020-03-22T07:46:19Z","2020-03-25T15:38:10Z"
"","7939","Issue #7605: Update doc for SingleLineJavadoc","Issue #7605: add examples ![Screenshot (22)](https://user-images.githubusercontent.com/51456744/77694489-18e89d80-6fd0-11ea-88f5-571cf5e94f83.png) ![Screenshot (23)](https://user-images.githubusercontent.com/51456744/77694498-1be38e00-6fd0-11ea-8e21-3603f66d0e01.png) ![Screenshot (24)](https://user-images.githubusercontent.com/51456744/77694505-1e45e800-6fd0-11ea-973a-91bf961a269f.png)    Default Example: config.xml ```               ``` Test.java ``` public class Test {   /** @return integer value */ // violation   // Javadoc has one at-clause, should be written in multiple lines   public int sum(int a, int b) {     return a + b;   } } ``` ``` $ java -jar ../Downloads/checkstyle-8.29-all.jar -c config.xml Test.java Starting audit... [ERROR] C:\Users\hp\Desktop\Test.java:2: Single-line Javadoc comment should be multi-line. [SingleLineJavadoc] Audit done. Checkstyle ends with 1 errors. ``` Non-default example 1: config.xml ```                         ``` Test.java ``` public class Test {   /**    * @return integer value    *    * <p> First // violation, unclosed HTML tag <p>    */   public int sum(int a, int b) {     return a + b;   } } ``` ``` $ java -jar ../Downloads/checkstyle-8.29-all.jar -c config.xml Test.java Starting audit... [ERROR] C:\Users\hp\Desktop\Test.java:5: Unclosed HTML tag found: p [SingleLineJavadoc] Audit done. Checkstyle ends with 1 errors. ``` Non-default example 2: config.xml ```                               ``` Test.java ``` public class Test {   /** @see #sum(int a, int b) */ // ok   public int sum(int a, int b) {     return a + b;   } } ``` $ java -jar ../Downloads/checkstyle-8.29-all.jar -c config.xml Test.java Starting audit... Audit done. ``` Non-default example 3: config.xml ```                               ``` Test.java ``` public class Test {   /** Testing class for {@link Example} */ // violation   // single-line javadoc comment should be multi-line   public int sum(int a, int b) {     return a + b;   } } ``` ``` $ java -jar ../Downloads/checkstyle-8.29-all.jar -c config.xml Test.java                                                Starting audit... [ERROR] C:\Users\hp\Desktop\Test.java:2: Single-line Javadoc comment should be multi-line. [SingleLineJavadoc] Audit done. Checkstyle ends with 1 errors. ```","closed","","ritvij14","2020-03-22T11:59:16Z","2020-04-12T00:35:46Z"
"","7842","Issue #7590: Update doc for OuterTypeFilename","Issue #7590: Update doc for OuterTypeFilename     Output of configure the check:  $ cat config.xml ```xml                        ``` $ cat Test.java ```java public class Test { // OK  } ``` $ RUN_LOCALE=""-Duser.language=en -Duser.country=US"" $ java $RUN_LOCALE -jar /var/tmp/checkstyle-8.31-SNAPSHOT-all.jar -c config.xml Test.java Starting audit... Audit done. $ cat Test.java ```java class Foo { // violation  } ``` $ RUN_LOCALE=""-Duser.language=en -Duser.country=US"" $ java $RUN_LOCALE -jar /var/tmp/checkstyle-8.31-SNAPSHOT-all.jar -c config.xml Test.java Starting audit... [ERROR] /var/tmp/Test.java:1: The name of the outer type and the file do not match. [OuterTypeFilename] Audit done. Checkstyle ends with 1 errors.  $ cat Test.java ```java interface Foo { // violation  } ``` $ RUN_LOCALE=""-Duser.language=en -Duser.country=US"" $ java $RUN_LOCALE -jar /var/tmp/checkstyle-8.31-SNAPSHOT-all.jar -c config.xml Test.java Starting audit... [ERROR] /var/tmp/Test.java:1: The name of the outer type and the file do not match. [OuterTypeFilename] Audit done. Checkstyle ends with 1 errors.  $ cat Test.java ```java enum Foo { // violation  } ``` $ RUN_LOCALE=""-Duser.language=en -Duser.country=US"" $ java $RUN_LOCALE -jar /var/tmp/checkstyle-8.31-SNAPSHOT-all.jar -c config.xml Test.java Starting audit... [ERROR] /var/tmp/Test.java:1: The name of the outer type and the file do not match. [OuterTypeFilename] Audit done. Checkstyle ends with 1 errors.","closed","","HuGanghui","2020-03-13T11:46:53Z","2020-03-17T13:49:15Z"
"","7607","added examples for single-line statements without braces (#7583)","Issue #7583  added examples for single-line statements without braces","closed","abandoned,","xkarx","2020-02-24T06:56:27Z","2020-09-07T08:36:11Z"
"","7789","Issue #7573: update doc for MissingOverride","Issue #7573: update doc for MissingOverride     Ouput of default example: $ cat config.xml ```xml                         ```  $ cat Test.java ```java class Test extends SuperClass {      /** {@inheritDoc} */     @Override     public void test1() { // OK      }      /** {@inheritDoc} */     public void test2() { // violation, should be annotated with @Override      }      /** {@inheritDoc} */     private void test3() { // violation, using the @inheritDoc tag on private method that is not valid      }      /** {@inheritDoc} */     public static void test4() { // violation, using the @inheritDoc tag on static method that is not valid      }  } ``` $ RUN_LOCALE=""-Duser.language=en -Duser.country=US"" $ java $RUN_LOCALE -jar /var/tmp/checkstyle-8.31-SNAPSHOT-all.jar -c config.xml Test2.java Starting audit... [ERROR] /var/tmp/Test.java:10: Must include @java.lang.Override annotation when {@inheritDoc} Javadoc tag exists. [MissingOverride] [ERROR]  /var/tmp/Test.java:15: The Javadoc {@inheritDoc} tag is not valid at this location. [MissingOverride] [ERROR]  /var/tmp/Test.java:20: The Javadoc {@inheritDoc} tag is not valid at this location. [MissingOverride] Audit done. Checkstyle ends with 3 errors.   Ouput of configure the check for the javaFiveCompatibility mode: $ cat config.xml   ```xml                                               ``` $ cat Test.java ```java class Test1 {      /** {@inheritDoc} */     public void equals() { // violation, should be annotated with @Override      } }  interface Test2 {      /** {@inheritDoc} */     public abstract void test(); // violation, should be annotated with @Override  }  class Test3 extends SuperClass {      /** {@inheritDoc} */     public void test() { // OK, is ignored because class extends other class      } }  class Test4 implements SuperInterface {      /** {@inheritDoc} */     public void test() { // OK, is ignored because class implements interface      } }  class Test5 {     Runnable r = new Runnable() {          /** {@inheritDoc} */         public void run() { // OK, is ignored because class is anonymous class          }     }; } ``` $ RUN_LOCALE=""-Duser.language=en -Duser.country=US"" $ java $RUN_LOCALE -jar /var/tmp/checkstyle-8.31-SNAPSHOT-all.jar -c config.xml Test.java Starting audit... [ERROR] /var/tmp/Test.java:4: Must include @java.lang.Override annotation when {@inheritDoc} Javadoc tag exists. [MissingOverride] [ERROR]  /var/tmp/Test.java:12: Must include @java.lang.Override annotation when {@inheritDoc} Javadoc tag exists. [MissingOverride] Audit done. Checkstyle ends with 2 errors.","closed","","HuGanghui","2020-03-06T17:06:44Z","2020-03-11T11:43:25Z"
"","7683","issue-7534-npe-in-MissingDeprecatedCheck","Issue #7534: NPE in MissingDeprecatedCheck","closed","","nick-mancuso","2020-02-28T05:13:21Z","2020-02-29T17:57:35Z"
"","7707","Issue #7534: fix NPE in MissingDeprecatedCheck","Issue #7534: fix NPE in MissingDeprecatedCheck diff report here: https://www.nickmancuso.dev/hosting/diff/index.html","closed","","nick-mancuso","2020-02-29T18:58:18Z","2020-03-09T12:59:35Z"
"","7772","Issue #7522: fix @SuppressWarnings as an annotation property exception","Issue #7522   Add support for using SuppressWarningsHolder with @SuppressWarnings as an annotation property  Examples of a valid code now  @CustomAnnotation(@SuppressWarnings(""unchecked""))   @Getter(onMethod_ = @SuppressWarnings(""unchecked""))  Report https://amrdeveloper.github.io/checkstyle-reports/7522/","closed","","AmrDeveloper","2020-03-02T20:58:17Z","2020-03-11T13:40:59Z"
"","7513","Issue #7512: mark DetailAST::getNumberOfChildren deprecated","Issue #7512   The method was used only in one check.  Regression (no difference): https://pbludov.github.io/issue-7512-get-number-of-children/","closed","","pbludov","2020-01-28T13:55:10Z","2020-01-28T20:42:58Z"
"","7540","Issue #7505: add attention note to tables of style coverage","Issue #7505  ![image](https://user-images.githubusercontent.com/812984/74111923-1f6ca400-4b4d-11ea-94c8-c7a30ed32e30.png)","closed","","romani","2020-02-09T02:05:52Z","2020-11-07T15:59:33Z"
"","7493","Issue #7492: enforce jdk 1.8 by maven enforcer plugin","Issue #7492","closed","","romani","2020-01-17T21:57:18Z","2020-11-07T15:59:38Z"
"","7489","Issue 7487 add method hasChildren() to DetailAST","Issue #7487   First commit to add the method. Second commit to switch `ast.getChildCount() > 0` to `ast.hasChildren()` and `ast.getChildCount() == 0` to `!ast.hasChildren()`  Some `if`'s are inverted for readablity. The method `isOnEnumConstant` is rewritten to eliminate multiple calls to `getPrevSiblingSkipComments`   ### Regression  [InvalidJavadocPosition, DesignForExtension, JavadocContentLocation, MissingJavadocPackage](https://pbludov.github.io/issue-7487-has-children-6/)  [AtclauseOrder, JavadocBlockTagLocation, JavadocParagraph, JavadocTagContinuationIndentation, MissingDeprecated, NonEmptyAtclauseDescription, SingleLineJavadoc, SummaryJavadoc](https://pbludov.github.io/issue-7487-has-children-5/)  [SummaryJavadoc only](https://pbludov.github.io/issue-7487-has-children-4/)","closed","","pbludov","2020-01-17T19:25:32Z","2020-01-26T14:28:47Z"
"","7478","Issue #7475: resolve Cognitive Complexity cases above 20","Issue #7475   we need to verify that Sonar does reports such cases as violation. but at https://sonarcloud.io/project/issues?id=org.checkstyle%3Acheckstyle&pullRequest=7478 I see not issues at all, looks like Sonar filter out all issues that present in master, so I do not know how to make sure I actually did fix for violation.","closed","","romani","2020-01-16T05:23:18Z","2020-01-18T22:11:00Z"
"","7955","Issue #7473: JavadocMethod: false positive with validateThrows","Issue #7473: JavadocMethod: false positive with validateThrows if catched inside the method  Logic has been tweaked as follows: 1. For every use of the `throws` literal, check the AST node's ancestors to see where it comes from 2. If we find that it is from a lambda or `try` block, we disregard that node. **Update**: Local and anonymous classes defined in the method will also be ignored. 3. `catch` and `finally` literals are considered children of the `try` literal. However they should not be ignored because exceptions can be thrown there that go uncaught. Hence if we encounter `catch` and `finally` on the way up then we need to 'skip' the next ancestor (the `try` literal).  Regression: https://wltan.github.io/checkstyle-reports/2020-04-20/javadocmethod-throws/index (updated)","closed","","wltan","2020-03-24T18:59:26Z","2020-04-29T12:29:02Z"
"","7491","Issue #7472: disable instatiation of modules with private ctor","Issue #7472   final modifier was added to satisfy Check ```      [echo] Checkstyle started (checkstyle_checks.xml): 17/01/2020 11:59:45 AM [checkstyle] Running Checkstyle  on 1105 files [checkstyle] [ERROR] src/test/java/com/puppycrawl/tools/checkstyle/CheckerTest.java:1481:9: Class 'DynamicalResourceHolderCheck' looks like designed for extension (can be subclassed), but the method 'setFirstExternalResourceLocation' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DynamicalResourceHolderCheck' final or making the method 'setFirstExternalResourceLocation' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension] [checkstyle] [ERROR] src/test/java/com/puppycrawl/tools/checkstyle/CheckerTest.java:1485:9: Class 'DynamicalResourceHolderCheck' looks like designed for extension (can be subclassed), but the method 'setSecondExternalResourceLocation' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DynamicalResourceHolderCheck' final or making the method 'setSecondExternalResourceLocation' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension] [checkstyle] [ERROR] src/test/java/com/puppycrawl/tools/checkstyle/CheckerTest.java:1677:9: Class 'DummyFileSet' looks like designed for extension (can be subclassed), but the method 'getMethodCalls' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DummyFileSet' final or making the method 'getMethodCalls' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension] [checkstyle] [ERROR] src/test/java/com/puppycrawl/tools/checkstyle/CheckerTest.java:1681:9: Class 'DummyFileSet' looks like designed for extension (can be subclassed), but the method 'isInitCalled' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DummyFileSet' final or making the method 'isInitCalled' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension] [checkstyle] [ERROR] src/test/java/com/puppycrawl/tools/checkstyle/CheckerTest.java:1685:9: Class 'DummyFileSet' looks like designed for extension (can be subclassed), but the method 'getInternalMessageDispatcher' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DummyFileSet' final or making the method 'getInternalMessageDispatcher' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension] [checkstyle] [ERROR] src/test/java/com/puppycrawl/tools/checkstyle/api/AutomaticBeanTest.java:258:9: Class 'TestBean' looks like designed for extension (can be subclassed), but the method 'setWrong' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TestBean' final or making the method 'setWrong' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension] [checkstyle] [ERROR] src/test/java/com/puppycrawl/tools/checkstyle/api/AutomaticBeanTest.java:262:9: Class 'TestBean' looks like designed for extension (can be subclassed), but the method 'setVal' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TestBean' final or making the method 'setVal' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension] [checkstyle] [ERROR] src/test/java/com/puppycrawl/tools/checkstyle/api/AutomaticBeanTest.java:266:9: Class 'TestBean' looks like designed for extension (can be subclassed), but the method 'assignPrivateFieldSecretly' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TestBean' final or making the method 'assignPrivateFieldSecretly' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension] [checkstyle] [ERROR] src/test/java/com/puppycrawl/tools/checkstyle/api/AutomaticBeanTest.java:270:9: Class 'TestBean' looks like designed for extension (can be subclassed), but the method 'setExceptionalMethod' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TestBean' final or making the method 'setExceptionalMethod' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]  ```","closed","","romani","2020-01-17T21:08:43Z","2020-11-07T15:59:39Z"
"","7495","Issue #7468: disable 'external-parameter-entities' feature by default","Issue #7468  fix is blind, I am not sure  how to test it, but it is recommended to disable it by default - https://cheatsheetseries.owasp.org/cheatsheets/XML_External_Entity_Prevention_Cheat_Sheet.html#jaxb-unmarshaller . See issue for details.","closed","","romani","2020-01-19T01:43:47Z","2020-11-07T15:59:37Z"
"","7471","Issue #7458: 'ThreadLocal' variables should be cleaned up when no longer used","Issue #7458  we need to recheck PR validation on sonar to make sure violations gone.","closed","","romani","2020-01-13T22:18:33Z","2020-11-07T15:59:45Z"
"","7451","Issue #7450: match image version with image defined in 'Node Pools'","Issue #7450","closed","","romani","2020-01-09T00:30:13Z","2020-01-09T17:29:09Z"
"","7456","doc: sync summaries of all checks.","Issue #7446   First PR to make the xdocs ready for the upcoming test.","closed","","pbludov","2020-01-09T22:17:47Z","2020-01-11T03:54:15Z"
"","7463","Issue #7446: ensure all checks summaries in sync with checks.xml","Issue #7446  `Node.getAttributes().getNamedItem(""name"").getNodeValue()` extracted to an utility method.  Method `sanitizeXml` moved to the class `XmlUtil`.","closed","","pbludov","2020-01-11T17:15:43Z","2020-01-12T05:21:06Z"
"","7440","Issue #7436: avoid using Locale.setDefault in tests","Issue #7436  Small step to run tests in parallel. We need to get rid of the global state change in the tests.","closed","","pbludov","2020-01-03T10:00:37Z","2020-01-05T14:44:14Z"
"","7431","Issue #7430: fix javadoc recognition on package with comment between","Issue #7430  Regression to come.","closed","","rnveach","2019-12-31T18:48:42Z","2020-01-04T20:09:29Z"
"","7441","Issue #7423: new sonarqube project was created in checkstyle organization","Issue #7423   new project page - https://sonarcloud.io/dashboard?id=org.checkstyle%3Acheckstyle","closed","","romani","2020-01-04T00:11:16Z","2020-01-04T00:39:13Z"
"","7426","Issue #7423: provide organization/projectKey name as checkstyle for sonar","Issue #7423  it executes only from master build, not PR.  for some reason I can not run it from local, as it is hanging at `[INFO] User cache: /home/rivanov/.sonar/cache` probably this PR should be just merged. On remote it passed in master https://travis-ci.org/checkstyle/checkstyle/jobs/631080595#L1215 looks like this line is instant action and sonarqube server info should be printed immediately.","closed","","romani","2019-12-31T07:19:51Z","2019-12-31T13:00:21Z"
"","7418","Issue #7417: change scope to acces modifier in JavadocMethodCheck","Issue #7417 (umbrella issue is #3511)  Removed all references to scope. Added access modifier property.  Regression to come.","closed","","rnveach","2019-12-30T00:01:00Z","2021-03-22T23:25:12Z"
"","7412","Issue #7413: remove obsolete import handling from JavadocMethodCheck","Issue #7413  This is the only thing left I can see that can be done from the remains of my old #7116 branch.  Regression to come.","closed","","rnveach","2019-12-28T23:26:35Z","2019-12-29T14:34:46Z"
"","7420","Issue #7411: pipe cat after diff to avoid failure","Issue #7411  with extra `echo`  just in case.","closed","","romani","2019-12-30T05:06:54Z","2019-12-31T09:18:41Z"
"","7406","Issue #7405: all new checks should have XpathRegressionTest","Issue #7405   Now all checks are split into three sets:  * incompatible with SuppressionXpathFilter (#5770, #5777) * compatible with SuppressionXpathFilter, but missing XPath IT Regression Testing (#6207) * compatible with SuppressionXpathFilter and with XPath IT Regression Testing  After adding a new check, it must have xpath regression tests, or if this is not possible, it must be included in the list of incompatible checks.","closed","","pbludov","2019-12-27T20:20:25Z","2020-01-06T04:05:49Z"
"","7409","Issue #7391: mute System.{err,out} in tests","Issue #7391  All tests now use `captureMuted()` method.","closed","","pbludov","2019-12-28T09:46:47Z","2019-12-28T20:36:08Z"
"","7383","Issue #7382: Fix Appveyor junit5 tests","Issue #7382   Blocker for #6916  The '@ TempDir ' annotation from Junit5 works slightly differently than the `@TemporaryFolder` rule from Junit4. This creates a new subdirectory in the $TMP folder, and deletes it when the test completes.  This creates problems when running tests under Windows. If there are unclosed files in the temporary subdirectory, the directory cannot be deleted.","closed","","pbludov","2019-12-14T23:05:14Z","2019-12-19T12:58:00Z"
"","7390","Issue #7374: add default support for ""fall-through"" spelling to FallThrough reliefPattern","Issue #7374  - update FallThrough reliefPattern default regex to ""falls?[ -]?thr(u|ough)"" in order to support ""fall-through"" spelling and some other variants - modify documentation and comments and  examples accordingly, fix the documentation example missing semicolon by the way.  Regression report: https://romani.github.io/7374/diff/index.html","closed","","guillaumelambert","2019-12-19T17:09:37Z","2020-01-14T10:45:25Z"
"","7373","Issue #7372: Re-enable Tidy","Issue #7372   Tidy enabled and applied.","closed","","pbludov","2019-12-12T09:20:38Z","2019-12-14T14:15:37Z"
"","7352","Issue #7341: fix javadoc links to non-public members","Issue #7341  This PR fixes links to non-public members and links to methods with changed signatures.","closed","","pbludov","2019-12-09T12:23:28Z","2019-12-10T03:46:05Z"
"","7351","Issue #7340: linkcheck reports that all dtd files are missing","Issue #7340  Solved by reordering reports to execute `linkcheck` last. Validation of links to `project-reports.html` and `project-info.html` suppressed as they created after **all reports** are generated.  `forcesite` was added at https://github.com/checkstyle/checkstyle/commit/dc3111cb1a2720eb59770756e1afa8d8b9982d8a there is small discussion in commit about such files","closed","","pbludov","2019-12-09T10:44:36Z","2019-12-10T16:35:38Z"
"","7356","Issue #7339: document property type file","Issue #7339  New property type `file`.  Also, the documentation for all types that were called properties for some reason, even though they are types, has been fixed. Discovered by @rnveach at https://github.com/checkstyle/checkstyle/pull/7046#discussion_r336712228","closed","","pbludov","2019-12-10T09:10:04Z","2019-12-11T02:10:44Z"
"","7316","Issue #7309: fix teamcity inspections issues","Issue #7309  Fixed in code: *    Redundant suppression (Errors) (8) *    Misordered 'assertEquals()' arguments (Errors) (1) *    Redundant Collection operation (1) *    Redundant type cast (Errors) (7) *    Unnecessarily escaped character (1)  Fixed in config: *    Constant on the wrong side of comparison (Errors) (2247) *    Duplicated code fragment (30)","closed","","pbludov","2019-12-05T10:56:26Z","2019-12-06T04:19:57Z"
"","7357","Issue #7301: fix source display for firefox","Issue #7301: * Fix source display in firefox  how it was before: ![image](https://user-images.githubusercontent.com/7516893/70549564-b67ca600-1b74-11ea-8db8-94a7616f9c44.png) according to @rnveach there should be some space between the text of the code snippet and its border. This already works in chrome (merged in https://github.com/checkstyle/checkstyle/pull/7302) and this pr fixes that for firefox.  ![image](https://user-images.githubusercontent.com/7516893/70550592-466f1f80-1b76-11ea-9d17-db29c06c4dbf.png)","closed","","jo2","2019-12-10T09:18:27Z","2019-12-10T20:20:03Z"
"","7300","Issue #7299: remove build for old non-LTS releases","Issue #7299  JDK 9 and JDK 10 build removed. Java 9 specific syntax verified with JDK 11 in `--release 9` mode","closed","","pbludov","2019-12-03T07:31:44Z","2019-12-03T14:49:39Z"
"","7289","Issue #7288: fix xwiki build on wercker","Issue #7288","closed","","romani","2019-11-28T20:26:24Z","2019-11-28T23:57:02Z"
"","7282","Issue #7281: set up jdk-13 build, drop jdk-12","Issue #7281  Travis & Appveyor JAVA 13 builds","closed","","pbludov","2019-11-25T04:27:41Z","2019-12-03T14:53:55Z"
"","7280","Issue #7276: Fix OutputStream flush count on JDK 13","Issue #7276  In JDK-13 there is one more call to `out.flush` from `implClose`: ``` -            else -                out.close(); +            else { +                try { +                    out.flush(); +                } finally { +                    out.close(); +                } +            } ``` See https://bugs.openjdk.java.net/browse/JDK-8220477"">JDK-8220477","closed","","pbludov","2019-11-25T04:02:33Z","2019-12-02T12:15:32Z"
"","7294","Issue #7268: fix proper mod of files in archive at sourceforge","Issue #7268","closed","","romani","2019-11-30T19:22:00Z","2019-12-01T19:17:06Z"
"","7249","Issue #7248: resolve PMD warning on deprecated MethodDeclarator","Issue #7248","closed","","romani","2019-11-10T15:32:00Z","2019-11-12T19:59:21Z"
"","7226","Issue #7225: bump pmd to 6.18.0","Issue #7225 (first part of update)  second Part (will be separate PR) to resolve WARNINGS. As issue is misc it is ok to make fixes in few PRs (even in different releases).","closed","","romani","2019-10-23T07:06:47Z","2019-10-27T17:08:19Z"
"","7265","Issue #7208: aligned javadoc/xdoc for SingleLineJavadoc","Issue #7208 (part of #5750)  No changes in the code.","closed","","pbludov","2019-11-16T20:10:29Z","2019-11-18T15:12:18Z"
"","7264","Issue #7208: aligned javadoc/xdoc for JavadocVariable","Issue #7208 (part of #5750)  No changes in the code.","closed","","pbludov","2019-11-16T19:43:36Z","2019-11-16T19:55:38Z"
"","7263","Issue #7208: aligned javadoc/xdoc for SummaryJavadoc","Issue #7208 (part of #5750)  No changes in the code.","closed","","pbludov","2019-11-16T19:19:51Z","2019-11-16T19:28:26Z"
"","7262","Issue #7208: aligned javadoc/xdoc for JavadocType","Issue #7208 (part of #5750)  No changes in the code.","closed","","pbludov","2019-11-16T18:46:41Z","2019-11-16T19:28:18Z"
"","7261","Issue #7208: aligned javadoc/xdoc for WriteTag","Issue #7208 (part of #5750)  No changes in the code.","closed","","pbludov","2019-11-16T17:13:12Z","2019-11-16T18:11:28Z"
"","7260","Issue #7208: aligned javadoc/xdoc for NonEmptyAtclauseDescription","Issue #7208 (part of #5750)  No changes in the code.","closed","","pbludov","2019-11-16T16:37:18Z","2019-11-16T18:11:18Z"
"","7259","Issue #7208: aligned javadoc/xdoc for JavadocTagContinuationIndentati…","Issue #7208 (part of #5750)  No changes in the code.","closed","","pbludov","2019-11-16T16:11:45Z","2019-11-16T18:11:09Z"
"","7257","Issue #7208: aligned javadoc/xdoc for JavadocStyle","Issue #7208 (part of #5750)  No changes in the code.","closed","","pbludov","2019-11-15T21:13:29Z","2019-11-16T15:55:42Z"
"","7250","Issue #7208: aligned javadoc/xdoc for JavadocParagraph","Issue #7208 (part of #5750)  No changes in the code.","closed","","pbludov","2019-11-10T21:13:55Z","2019-11-13T07:32:04Z"
"","7245","Issue #7208: aligned javadoc/xdoc for JavadocPackage","Issue #7208 (part of #5750)  No changes in the code.","closed","","pbludov","2019-11-07T20:25:37Z","2019-11-08T10:12:44Z"
"","7244","Issue #7208: aligned javadoc/xdoc for JavadocMethod","Issue #7208 (part of #5750)  No changes in the code.","closed","","pbludov","2019-11-06T20:48:17Z","2019-11-07T19:57:02Z"
"","7778","Issue #7190: remove deprecated setClassLoader methods","Issue #7190: remove deprecated setClassLoader methods","closed","","nick-mancuso","2020-03-03T20:34:15Z","2020-03-16T00:21:32Z"
"","7680","Issue #7190: remove deprecated setClassLoader methods","Issue #7190: remove deprecated setClassLoader methods","closed","","nick-mancuso","2020-02-27T04:24:25Z","2020-03-04T15:34:21Z"
"","7201","Issue #7186: aligned javadoc/xdoc for RedundantModifier","Issue #7186 (part of #5750)  No changes in the code.","closed","","pbludov","2019-10-15T18:52:16Z","2019-10-17T13:43:45Z"
"","7194","Issue #7186: aligned javadoc/xdoc for ModifierOrder","Issue #7186 (part of #5750)  No changes in the code.","closed","","pbludov","2019-10-13T14:33:07Z","2019-10-15T07:51:42Z"
"","7196","Issue #7185: aligned javadoc/xdoc for RegexpHeader","Issue #7185 (part of #5750)  No changes in the code.","closed","","pbludov","2019-10-13T18:53:39Z","2019-10-15T07:51:53Z"
"","7195","Issue #7185: aligned javadoc/xdoc for Header","Issue #7185 (part of #5750)  No changes in the code.","closed","","pbludov","2019-10-13T15:23:42Z","2019-12-03T14:54:47Z"
"","7775","Issue #7183: add JavadocMissingWhitespaceAfterAsteriskCheck","Issue #7183  Contribution PR: checkstyle/contribution#454 https://github.com/checkstyle/contribution/pull/454 (this link was added to satisfy `verify-no-exception-configs` build item)  Regression report: https://0blivious.github.io/7183/index.html  Old regression report https://0blivious.github.io/index.html  Sevntu-checkstyle PR (merged) https://github.com/sevntu-checkstyle/sevntu.checkstyle/pull/806  Checkstyle PR https://github.com/checkstyle/checkstyle/pull/7883","closed","","0blivious","2020-03-03T10:29:45Z","2020-04-03T13:07:13Z"
"","7883","minor: fix missed space violation from JavadocMissingWhitespaceAfterAsteriskCheck","Issue #7183","closed","","0blivious","2020-03-17T15:26:57Z","2020-03-18T12:15:01Z"
"","7520","Issue #7174: update RightCurly doc on unsupported tokens","Issue #7174","closed","","romani","2020-01-29T20:31:10Z","2020-11-07T15:59:36Z"
"","7171","Issue #7170: fix LocalizedMessageTest for empty locale","Issue #7170   Do not validate empty strings Iif user has no locale configured.","closed","","pbludov","2019-10-07T06:42:31Z","2019-10-08T09:23:09Z"
"","7188","Issue #7163: aligned javadoc/xdoc for RegexpOnFilename","Issue #7163 (part of #5750)  No changes in the code.","closed","","pbludov","2019-10-11T21:04:40Z","2019-10-12T10:03:59Z"
"","7178","Issue #7163: aligned javadoc/xdoc for RegexpSingleline","Issue #7163 (part of #5750)  No changes in the code.","closed","","pbludov","2019-10-08T19:48:14Z","2019-10-11T20:30:47Z"
"","7167","Issue #7163: aligned javadoc/xdoc for RegexpSinglelineJava","Issue #7163 (part of #5750)  No changes in the code.","closed","","pbludov","2019-10-06T20:39:05Z","2019-10-07T05:46:28Z"
"","7166","Issue #7163: aligned javadoc/xdoc for RegexpMultiline","Issue #7163 (part of #5750)  No changes in the code.","closed","","pbludov","2019-10-06T20:24:08Z","2019-10-07T05:45:53Z"
"","7164","Issue #7163: aligned javadoc/xdoc for Regexp","Issue #7163 (part of #5750)  No changes in the code.","closed","","pbludov","2019-10-06T15:06:06Z","2019-10-06T20:05:19Z"
"","7184","Issue #7145: aligned javadoc/xdoc for JavaNCSSCheck","Issue #7145 (part of #5750)  No changes in the code.","closed","","pbludov","2019-10-10T20:34:58Z","2019-10-11T03:48:05Z"
"","7165","Issue #7145: aligned javadoc/xdoc for ClassDataAbstractionCoupling","Issue #7145 (part of #5750)  No changes in the code.","closed","","pbludov","2019-10-06T18:10:15Z","2019-10-06T20:41:27Z"
"","7162","Issue #7145: aligned javadoc/xdoc for NPathComplexity","Issue #7145 (part of #5750)  No changes in the code.","closed","","pbludov","2019-10-06T12:57:54Z","2019-10-07T05:34:02Z"
"","7160","Issue #7145: aligned javadoc/xdoc for ClassFanOutComplexity","Issue #7145 (part of #5750)  No changes in the code.","closed","","pbludov","2019-10-06T10:49:46Z","2019-10-06T17:05:30Z"
"","7155","Issue #7145: aligned javadoc/xdoc for CyclomaticComplexity","Issue #7145 (part of #5750)  No changes in the code.","closed","","pbludov","2019-10-05T11:59:34Z","2019-10-06T09:21:19Z"
"","7153","Issue #7145: aligned javadoc/xdoc for BooleanExpressionComplexity","Issue #7145 (part of #5750)  No changes in the code.","closed","","pbludov","2019-10-05T11:33:13Z","2019-10-06T09:21:05Z"
"","7177","Issue #7144: aligned javadoc/xdoc for ImportControl","Issue #7144 (part of #5750)  Second commit to change `` to `` to avoid `header used out of sequence` error issued by the javadoc tool.","closed","","pbludov","2019-10-08T18:58:38Z","2019-10-10T20:12:48Z"
"","7159","Issue #7144: aligned javadoc/xdoc for UnusedImports","Issue #7144 (part of #5750)  No changes in the code.","closed","","pbludov","2019-10-06T10:32:17Z","2019-10-06T20:04:26Z"
"","7156","Issue #7144: aligned javadoc/xdoc for IllegalImport","Issue #7144 (part of #5750)  No changes in the code.","closed","","pbludov","2019-10-05T17:17:56Z","2019-10-07T05:46:39Z"
"","7152","Issue #7144: aligned javadoc/xdoc for RedundantImport","Issue #7144 (part of #5750)  No changes in the code.","closed","","pbludov","2019-10-05T10:45:08Z","2019-10-05T16:00:30Z"
"","7151","Issue #7144: aligned javadoc/xdoc for AvoidStaticImport","Issue #7144 (part of #5750)  No changes in the code.","closed","","pbludov","2019-10-05T10:44:22Z","2019-10-05T16:00:51Z"
"","7147","Issue #7144: aligned javadoc/xdoc for AvoidStarImport","Issue #7144 (part of #5750)  No changes in the code.","closed","","pbludov","2019-10-03T07:52:01Z","2019-12-03T14:56:43Z"
"","7130","Issue #7129: use ja-JP for Japanese locale, zh-CN for Chinese locale in travis.sh","Issue #7129  Fixed mistype in `.ci/travis.sh`  `LocalizedMessageTest` now fails if the specified language or country code are not valid.","closed","","pbludov","2019-09-30T20:53:52Z","2019-12-03T14:56:48Z"
"","7122","Issue #7120: Add localization for javadoc.write.tag","Issue #7120  Fix violation of IntelliJ IDEA inspection `InconsistentResourceBundle`","closed","","pbludov","2019-09-29T12:21:51Z","2019-10-05T16:01:02Z"
"","7189","Issue #7116: remove AbstractTypeAwareCheck and combine to JavadocMethod","Issue #7116  First PR of this issue. Removes `AbstractTypeAwareCheck` and merges it into JavadocMethodCheck.  Regression to come.","closed","","rnveach","2019-10-12T08:11:47Z","2019-10-13T14:04:02Z"
"","7113","Issue #7108: remove deprecated constructors for ConfigurationLoader","Issue #7108","closed","","rnveach","2019-09-27T23:41:11Z","2019-09-28T22:21:29Z"
"","7112","Issue #7107: remove deprecated constructors for DefaultLogger","Issue #7107","closed","","rnveach","2019-09-27T23:36:41Z","2019-09-29T12:00:56Z"
"","7106","Issue #7105: remove deprecated constructor from XMLLogger","Issue #7105","closed","","rnveach","2019-09-26T22:41:39Z","2019-09-28T18:45:32Z"
"","7101","Issue #7100: remove deprecated constructor and methods from FileContents","Issue #7100","closed","","rnveach","2019-09-25T11:30:47Z","2019-09-26T22:10:08Z"
"","7099","Issue #7098: remove AbstractTypeParameterNameCheck","Issue #7098","closed","","rnveach","2019-09-24T22:38:37Z","2019-09-26T18:52:33Z"
"","7097","Issue #7096: remove deprecated properties from JavadocMethodCheck","Issue #7096","closed","","rnveach","2019-09-24T22:31:41Z","2019-09-26T18:53:16Z"
"","7088","Remove deprecated classes","Issue #7089","closed","","rnveach","2019-09-22T19:24:07Z","2019-09-26T22:58:01Z"
"","7081","Issue #7080: fix CustomImportOrder documentation","Issue #7080","closed","","romani","2019-09-20T13:39:38Z","2019-09-20T21:34:51Z"
"","7078","Issue #7075: recreate appveyor.bat","Issue #7075  Few commits to make it clear, after any rebase operation (on my local), git fall in same problem, so lets keep two commits.  EDIT: ~~related PR to avoid such issue in future - https://github.com/checkstyle/checkstyle/pull/7076~~ - merged to this PR  tested by https://github.com/checkstyle/contribution/pull/410 , https://travis-ci.org/checkstyle/contribution/builds/587018870","closed","","romani","2019-09-19T13:47:05Z","2019-09-21T03:09:24Z"
"","7074","Issue #7060: aligned javadoc/xdoc for MethodCount","Issue #7060 (part of #5750)  No changes in the code.","closed","","pbludov","2019-09-17T19:40:09Z","2019-09-18T19:21:30Z"
"","7073","Issue #7060: aligned javadoc/xdoc for FileLength","Issue #7060 (part of #5750)  No changes in the code.","closed","","pbludov","2019-09-17T17:50:29Z","2019-09-17T19:22:55Z"
"","7071","Issue #7060: aligned javadoc/xdoc for ExecutableStatementCount","Issue #7060 (part of #5750)  No changes in the code.","closed","","pbludov","2019-09-16T18:21:07Z","2019-09-18T19:22:11Z"
"","7070","Issue #7060: aligned javadoc/xdoc for MethodLength","Issue #7060 (part of #5750)  No changes in the code.","closed","","pbludov","2019-09-16T17:57:14Z","2019-09-18T19:22:10Z"
"","7068","Issue #7060: aligned javadoc/xdoc for ParameterNumber","Issue #7060 (part of #5750)  No changes in the code.","closed","","pbludov","2019-09-16T05:12:23Z","2019-09-16T16:16:02Z"
"","7063","Issue #7060: aligned javadoc/xdoc for OuterTypeNumber","Issue #7060 (part of #5750)  No changes in the code.","closed","","pbludov","2019-09-15T17:00:48Z","2019-09-16T04:47:38Z"
"","7062","Issue #7060: aligned javadoc/xdoc for LineLength","Issue #7060 (part of #5750)  No changes in the code.","closed","","pbludov","2019-09-15T16:54:09Z","2019-09-16T16:15:32Z"
"","7061","Issue #7060: aligned javadoc/xdoc for AnonInnerLength","Issue #7060 (part of #5750)  No changes in the code.","closed","","pbludov","2019-09-15T16:36:49Z","2019-09-16T04:47:14Z"
"","7247","Issue #7033: update tests to pass openjdk12","Issue #7033  sacrify some pitest coverage on generated binary code Coverage when test is removed (not sure why we did reflection, we can cover it now without reflection): ![Screenshot from 2019-11-09 15-51-35](https://user-images.githubusercontent.com/812984/68536830-1b42a780-030e-11ea-8d34-4aa75897ffd9.png)  Problems in pitests over try with resources: ![Screenshot from 2019-11-09 16-05-24](https://user-images.githubusercontent.com/812984/68536831-1b42a780-030e-11ea-9cfd-b1b328aa3452.png) ![Screenshot from 2019-11-09 16-25-30](https://user-images.githubusercontent.com/812984/68536832-1b42a780-030e-11ea-9a4b-4c4a82713c03.png)  We value execution on new JDK more that pitest coverage (it is pitest issue, pitest should ignore such mutations, coverage of it become too problematic). ``` java -version openjdk version ""12"" 2019-03-19 OpenJDK Runtime Environment (build 12+32) OpenJDK 64-Bit Server VM (build 12+32, mixed mode, sharing) # following are passed on openjdk12 (on my local) ./.ci/pitest.sh pitest-utils ./.ci/pitest.sh pitest-imports ```","closed","","romani","2019-11-10T00:29:48Z","2019-11-10T18:49:46Z"
"","7095","Issue #7023: fix all commits CI check to go against origin's master","Issue #7023  Split from https://github.com/checkstyle/checkstyle/pull/7088 where the PR showed the small fixes worked and the CI was running for all commits involved.","closed","","rnveach","2019-09-24T22:20:18Z","2019-09-25T01:46:26Z"
"","7018","Issue #7017: move puppet CI scripts to shippable","Issue #7017","closed","","romani","2019-08-24T23:57:46Z","2019-08-26T05:42:30Z"
"","7009","Issue #6966: aligned javadoc/xdoc for Translation","Issue #6966 (part of #5750)  Second commit to ignore fields from inner `private` types. This check has inner type `ResourceBundle` which also has a field named `baseName`. Such fields should be ignored as we already do it for setters.","closed","","pbludov","2019-08-23T08:45:03Z","2019-08-23T21:55:45Z"
"","7015","Issue #6966: aligned javadoc/xdoc for Indentation","Issue #6966 (part of #5750)  No changes in the code. Implementation details moved from javadoc comment to regular comment.","closed","","pbludov","2019-08-24T16:00:33Z","2019-08-25T12:52:53Z"
"","7014","Issue #6966: aligned javadoc/xdoc for TodoComment","Issue #6966 (part of #5750)  No changes in the code.","closed","","pbludov","2019-08-24T08:00:46Z","2019-08-24T16:21:44Z"
"","7005","Issue #6966: aligned javadoc/xdoc for NewlineAtEndOfFile","Issue #6966 (part of #5750)  No changes in the code.","closed","","pbludov","2019-08-22T22:40:52Z","2019-08-24T15:56:56Z"
"","7004","Issue #6966: aligned javadoc/xdoc for UpperEll","Issue #6966 (part of #5750)  No changes in the code.","closed","","pbludov","2019-08-22T22:08:40Z","2019-08-23T04:50:41Z"
"","7378","Issue #6946: add suppression filters to google and sun configs","Issue #6946  Examples of execution by CLI: ``` java -Dorg.checkstyle.google.suppressionxpathfilter.config=""/var/tmp/xpath-suppressions.xml"" \   -jar /var/tmp/checkstyle-8.28-all.jar \   -c google_checks.xml \   Test.java Starting audit... Audit done. ``` ``` java -Dorg.checkstyle.google.suppressionfilter.config=""/var/tmp/suppressions.xml"" \   -jar /var/tmp/checkstyle-8.28-all.jar \   -c google_checks.xml \   Test.java Starting audit... Audit done. ```  Tested at https://github.com/sevntu-checkstyle/checkstyle-samples/pull/23","closed","","romani","2019-12-13T22:40:33Z","2019-12-23T22:56:19Z"
"","7371","Issue #6916: fix AbstractJavadocCheckTest","Issue #6916   Fix for broken pitest. The original [commit](https://github.com/checkstyle/checkstyle/pull/7360/commits/e923b01b20607f3f62aff073618e15d81ae19d45#diff-d6da3ccf0fd4b2a7f156b27130a0fbbdL48) has `SystemOutGuard` instead of `SystemErrGuard`. As a result, wrong output stream was asserted.  This PR fixes it.","closed","","pbludov","2019-12-12T06:12:32Z","2019-12-14T14:15:57Z"
"","7292","Issue #6916: migrate integration tests to junit5","issue #6916   An attempt to fix `it` tests with junit5.","closed","","pbludov","2019-11-30T09:50:33Z","2019-12-03T17:07:00Z"
"","7379","Issue #6916: migrate tests to junit5 for package checkstyle","Issue #6916  Tests of the checkstyle package are migrated to Junit5, except `MainTest` and `JavadocPropertiesGeneratorTest` which will be submitted in separate PR.","closed","","pbludov","2019-12-14T14:33:15Z","2019-12-14T21:21:51Z"
"","7361","Issue #6916: migrate tests to junit5 for package xpath","Issue #6916  Tests of the `xpath` package are migrated to Junit5.","closed","","pbludov","2019-12-10T18:16:19Z","2019-12-11T02:39:14Z"
"","7347","Issue #6916: migrate tests to junit5 for whitespace package","Issue #6916  Tests of the `whitespace` package are migrated to Junit5.","closed","","pbludov","2019-12-09T04:55:41Z","2019-12-10T03:34:43Z"
"","7359","Issue #6916: migrate tests to junit5 for package utils","Issue #6916  Tests of the `utils` package are migrated to Junit5.","closed","","pbludov","2019-12-10T16:49:26Z","2019-12-10T17:58:13Z"
"","7345","Issue #6916: migrate tests to junit5 for sizes package","Issue #6916  Tests of the `sizes` package are migrated to Junit5.","closed","","pbludov","2019-12-08T16:10:27Z","2019-12-09T04:35:40Z"
"","7343","Issue #6916: migrate tests to junit5 for regexp package","Issue #6916  Tests of the `regexp` package are migrated to Junit5.","closed","","pbludov","2019-12-08T13:20:51Z","2019-12-08T15:56:13Z"
"","7337","Issue #6916: migrate tests to junit5 for naming package","Issue #6916  Tests of the `naming` package are migrated to Junit5.","closed","","pbludov","2019-12-08T03:21:13Z","2019-12-08T07:58:06Z"
"","7334","Issue #6916: migrate tests to junit5 for modifier package","Issue #6916  Tests of the `modifier` package are migrated to Junit5.","closed","","pbludov","2019-12-07T18:07:01Z","2019-12-08T02:17:39Z"
"","7319","Issue #6916: migrate tests to junit5 for metrics package","Issue #6916  Tests of the `metrics` package are migrated to Junit5.","closed","","pbludov","2019-12-06T05:53:07Z","2019-12-07T17:32:40Z"
"","7360","Issue #6916: migrate tests to junit5 for javadoc package","Issue #6916  Tests of the `javadoc` package are migrated to Junit5.  This PR introduces new dependency: https://github.com/itsallcode/junit5-system-extensions This is replacement for [SystemRules ](https://github.com/stefanbirkner/system-rules)  See changes in AbstractJavadocCheckTest.java","closed","","pbludov","2019-12-10T18:09:02Z","2019-12-11T04:25:30Z"
"","7362","Issue #6916: migrate tests to junit5 for package internal","Issue #6916  Tests of the `internal` package are migrated to Junit5, except of `powermock`","closed","","pbludov","2019-12-11T03:06:03Z","2019-12-14T14:13:25Z"
"","7358","Issue #6916: migrate tests to junit5 for indentation package","Issue #6916  Tests of the `indentation` package are migrated to Junit5.","closed","","pbludov","2019-12-10T13:17:54Z","2019-12-10T16:49:52Z"
"","7355","Issue #6916: migrate tests to junit5 for imports package","Issue #6916  Tests of the `imports` package are migrated to Junit5.","closed","","pbludov","2019-12-10T04:00:04Z","2019-12-10T13:04:53Z"
"","7348","Issue #6916: migrate tests to junit5 for header package","Issue #6916  Tests of the `header` package are migrated to Junit5.","closed","","pbludov","2019-12-09T05:09:37Z","2019-12-10T03:47:28Z"
"","7354","Issue #6916: migrate tests to junit5 for package gui","Issue #6916  Tests of the `gui` package are migrated to Junit5.","closed","","pbludov","2019-12-10T03:31:22Z","2019-12-10T16:35:24Z"
"","7346","Issue #6916: migrate tests to junit5 for package grammar","Issue #6916  Tests of the `grammar` package are migrated to Junit5.","closed","","pbludov","2019-12-09T04:41:30Z","2019-12-10T03:29:24Z"
"","7342","Issue #6916: migrate tests to junit5 for design package","Issue #6916  Tests of the `design` package are migrated to Junit5.","closed","","pbludov","2019-12-08T13:03:27Z","2019-12-09T04:36:16Z"
"","7336","Issue #6916: migrate tests to junit5 for coding package","Issue #6916  Tests of the `coding` package are migrated to Junit5.","closed","","pbludov","2019-12-08T03:07:34Z","2019-12-08T05:09:00Z"
"","7367","Issue 6916: migrate tests to junit5 for package checkstyle","Issue #6916  Tests of the `checkstyle` package are migrated to Junit5  Due to the large size, PR is split into three commits: * Fixes to `AbstractJavadocCheckTest` (`errStream` renamed to `systemOut` for clarity) * Migration of `MainTest` and `JavadocPropertiesGeneratorTest` (rewritten manually) * Everything else (migrated automagically with IDEA)","closed","","pbludov","2019-12-11T09:37:42Z","2019-12-19T12:58:00Z"
"","7321","Issue #6916: migrate tests to junit5 for checks package","Issue #6916  Tests of the `checks` (misc) package are migrated to Junit5.  Changes in the config: Junit5 annotations `BeforeAll, AfterAll, BeforeEach, AfterEach` added to `DesignForExtension`; annotation `TempDir` to `VisibilityModifier`.","closed","","pbludov","2019-12-06T11:34:26Z","2019-12-07T17:32:16Z"
"","7318","Issue #6916: migrate tests to junit5 for blocks package","Issue #6916  Tests of the `blocks` package are migrated to Junit5.","closed","","pbludov","2019-12-06T05:38:20Z","2019-12-08T02:17:19Z"
"","7335","Issue #6916: migrate tests to junit5 for api package","Issue #6916  Tests of the `api` package are migrated to Junit5.  Some tests are changed as a workaround of PMD bug https://github.com/pmd/pmd/issues/2149 For example: ``` assertEquals(lineColumn, copy.lineColumn(100), ""Invalid linecolumn""); ``` now ``` final LineColumn actual = copy.lineColumn(100); assertEquals(lineColumn, actual, ""Invalid linecolumn""); ``","closed","","pbludov","2019-12-08T02:29:51Z","2019-12-08T05:31:47Z"
"","7320","Issue #6916: migrate tests to junit5 for ant package","Issue #6916  Tests of the `ant` package are migrated to Junit5.  ~~I don't understand why IDEA replaced with static import invocations of method `MatcherAssert.assertThat` from `Hamcrest` but decided to leave them static for consistency with other test methods.~~  UPD: actually, IDEA did opposite change: *some* static import of `assertThat` were replaced with `MatcherAssert.assertThat` and this change broke the build. I reverted it back to static import.","closed","","pbludov","2019-12-06T06:39:36Z","2019-12-07T17:32:33Z"
"","7384","Issue #6916: migrate tests to junit5 for {Main,JavadocPropertiesenerator}Test","Issue #6916  Tests of the ` {Main,JavadocPropertiesenerator}Test` are migrated to Junit5.","closed","","pbludov","2019-12-16T05:07:30Z","2019-12-18T19:28:26Z"
"","7344","Issue #6916: migrate tests to junit5 for packages filefilters, filters","Issue #6916  Tests of the 'filters' and 'filefilters` packages are migrated to Junit5.","closed","","pbludov","2019-12-08T14:36:39Z","2019-12-09T04:36:01Z"
"","7303","Issue #6916: migrate tests to junit5 for annotation package","Issue #6916  Auto converted to Junit5 with IDEA inspections. As a side effect, some imports replaced with static imports.","closed","","pbludov","2019-12-03T19:11:03Z","2019-12-06T05:17:48Z"
"","7010","Issue #6868: update pmd to 6.17.0 and resolve violations","Issue #6868  https://pmd.github.io/latest/pmd_rules_java_errorprone.html#closeresource","closed","","romani","2019-08-23T18:29:11Z","2019-08-23T20:59:10Z"
"","7422","Issue #6807: Add an alone_or_empty option to RightCurlyOption.","Issue #6807: Add a RightCurlyOption.ALONE_OR_EMPTY  This new option matches the allows right curly placement of the Google Style Guide.","closed","awaiting response,","ILMTitan","2019-12-30T18:54:28Z","2020-03-03T22:46:53Z"
"","7542","Issue #6807: add suppression filter for RightCurlyAlone","Issue #6807  report: https://romani.github.io/6807-google-rightcurlyalone/diff/index.html","closed","","romani","2020-02-09T02:48:42Z","2020-11-07T15:59:31Z"
"","7676","Issue #6807: update xpath for RcurlyAlone to keep violations on initializers","Issue #6807  Diff Report on all projects, get me absolutely no diff. I do not share it, as I amended commit message and removed commit to suppress javadoc parse errors.  performance is not de-gradated: ```  ✔ ~/java/github/checkstyle/contribution/checkstyle-tester [master|✚ 2…1]  $ groovy diff.groovy --localGitRepo ~/java/github/romani/checkstyle      \ --baseBranch master      --patchBranch rcurly-init       \ --patchConfig ~/java/github/romani/checkstyle/src/main/resources/google_checks.xml \ --baseConfig /home/rivanov/java/github/google_checks_7543.xml  \ --listOfProjects projects-to-test-on.properties > 1.log  $ cat 1.log | grep -E ""(Total time:)|( files to .*/checkstyle-tester/src)"" | \    grep -v ""Total time:  0.1.* s"" | grep ""Total time: "" | grep -v "" s"" [INFO] Total time:  01:05 min [INFO] Total time:  01:50 min [INFO] Total time:  01:06 min [INFO] Total time:  01:54 min ```","closed","awaiting changes,","romani","2020-02-26T13:44:08Z","2020-11-07T15:59:29Z"
"","7016","Issue #6771: update xdoc files to use violation term instead of error","Issue #6771 , this is not a final fix, just fixes over `xdoc` folder.  please review https://github.com/checkstyle/checkstyle/issues/6771#issuecomment-524585694  most interesting changes are at the bottom of github change page.","closed","","romani","2019-08-24T22:39:33Z","2019-08-25T19:08:41Z"
"","7024","Issue #6771: use 'violation' term in test/resources instead of 'error'","Issue #6771  in some cases I do not understand comment at all, complete mess ....","closed","","romani","2019-08-27T03:26:37Z","2019-08-29T12:09:54Z"
"","7031","Issue #6771: use 'violation'/'problem' term in it/resources insteadof 'error'","Issue #6771","closed","","romani","2019-08-29T13:37:18Z","2019-08-30T16:44:33Z"
"","7044","Issue #6724: format sources to pass JavadocSummaryLocationCheck","Issue #6724   Formatted all multi-line javadocs. Now summary begin with the second line.","closed","","pbludov","2019-09-07T20:41:20Z","2019-09-08T10:05:23Z"
"","7046","[WIP] Issue #6724: add check JavadocSummaryLocation","Issue #6724   contribution PR: https://github.com/checkstyle/contribution/pull/406  Regression: https://pbludov.github.io/issue-6724-exceptions/ https://pbludov.github.io/issue-6724-first-line/ https://pbludov.github.io/issue-6724-second-line/  V2: https://pbludov.github.io/v2/issue-6724-first-line/ https://pbludov.github.io/v2/issue-6724-second-line/  Second commit to format the sources.","closed","","pbludov","2019-09-08T14:53:17Z","2019-12-03T14:54:07Z"
"","7223","Issue #6724: add check JavadocContentLocation","Issue #6724   contribution PR: https://github.com/checkstyle/contribution/pull/406  Regression to come.  Second commit to format the sources.","closed","","pbludov","2019-10-22T20:45:55Z","2019-12-03T14:53:57Z"
"","7231","Issue #6724: add check JavadocContentLocation","Issue #6724  contribution PR: checkstyle/contribution#406  This is a remake of #7223 Now it is pure Java check.    Regression: https://pbludov.github.io/v4/issue-6724-first-line/ https://pbludov.github.io/v4/issue-6724-second-line/  Second commit to format the sources.","closed","","pbludov","2019-10-27T22:33:28Z","2019-11-17T01:05:04Z"
"","7086","Issue #6717: add support to RegexpMultiline to match across lines","Issue #6717","closed","","rnveach","2019-09-22T17:11:31Z","2019-09-28T17:45:15Z"
"","7916","Issue #6707: fix false violation report that does not allow spaces in front of ellipsis tokens for Google Style","Issue #6707: fix false violation report that does not allow spaces in front of ellipsis tokens for Google Style, specific information are in issue.  diff report: https://huganghui.github.io/6707-ellipsis/diff/","closed","","HuGanghui","2020-03-20T16:23:21Z","2020-05-29T14:32:08Z"
"","7197","Issue #6680: fix unexpected violation for extra empty line between package and import","Issue #6680   Regression report: https://gmshake.github.io/checkstyle_contribution/checkstyle-tester/diff_pr_7197_3 https://romani.github.io/6680/diff/index.html","closed","","gmshake","2019-10-15T01:43:17Z","2019-12-11T06:05:09Z"
"","7087","Issue #6628: removed antlr specific methods from DetailAST","Issue #6628","closed","","rnveach","2019-09-22T17:36:56Z","2019-09-26T22:09:21Z"
"","7395","Issue #6385: explicitly define default tokens in google_checks.xml","Issue #6385  originally proposed in PR #7252","closed","","romani","2019-12-23T22:48:21Z","2019-12-26T09:57:17Z"
"","7131","Issue #6367: resolved pitest for blocks package","Issue #6367  Regression to come.","closed","","rnveach","2019-09-30T22:49:34Z","2019-10-01T20:20:50Z"
"","7141","Issue #6320: resolve remove conditional for ReturnCountCheck","Issue #6320  http://rveach.no-ip.org/checkstyle/regression/pitest-reports/37/pitest-coding/com.puppycrawl.tools.checkstyle.checks.coding/ReturnCountCheck.java.html#org.pitest.mutationtest.report.html.SourceFile@1716bfb9_326  Regression to come.","closed","","rnveach","2019-10-02T20:22:08Z","2019-10-03T10:59:11Z"
"","7135","Issue #6320: resolve remove conditional for DefaultComesLastCheck","Issue #6320  http://rveach.no-ip.org/checkstyle/regression/pitest-reports/37/pitest-coding/com.puppycrawl.tools.checkstyle.checks.coding/DefaultComesLastCheck.java.html#org.pitest.mutationtest.report.html.SourceFile@73f93fb4_132  Regression to come.","closed","","rnveach","2019-10-02T01:27:23Z","2019-10-03T10:56:54Z"
"","7150","Issue #6320: resolve remove conditional for SimplifyBooleanReturnCheck","Issue #6320 http://rveach.no-ip.org/checkstyle/regression/pitest-reports/37/pitest-coding/com.puppycrawl.tools.checkstyle.checks.coding/SimplifyBooleanReturnCheck.java.html#org.pitest.mutationtest.report.html.SourceFile@3fccc795_101  No regression needed.","closed","","rnveach","2019-10-04T00:11:32Z","2019-10-04T20:10:50Z"
"","7142","Issue #6320: resolve remove conditional for ParameterAssignmentCheck","Issue #6320 http://rveach.no-ip.org/checkstyle/regression/pitest-reports/37/pitest-coding/com.puppycrawl.tools.checkstyle.checks.coding/ParameterAssignmentCheck.java.html#org.pitest.mutationtest.report.html.SourceFile@25925217_193  I don't think regression is needed. Let me know.","closed","","rnveach","2019-10-02T20:52:06Z","2019-10-03T10:59:24Z"
"","7149","Issue #6320: resolve remove conditional for ModifiedControlVariableCheck","Issue #6320 http://rveach.no-ip.org/checkstyle/regression/pitest-reports/37/pitest-coding/com.puppycrawl.tools.checkstyle.checks.coding/ModifiedControlVariableCheck.java.html  Regression to come.","closed","","rnveach","2019-10-03T23:38:37Z","2019-10-04T21:07:11Z"
"","7143","Issue #6320: resolve remove conditional for IllegalThrowsCheck","Issue #6320 http://rveach.no-ip.org/checkstyle/regression/pitest-reports/37/pitest-coding/com.puppycrawl.tools.checkstyle.checks.coding/IllegalThrowsCheck.java.html#org.pitest.mutationtest.report.html.SourceFile@4f4e6a99_149  Regression to come.","closed","","rnveach","2019-10-02T21:16:08Z","2019-10-03T11:43:48Z"
"","7140","Issue #6320: resolve remove conditional for IllegalCatchCheck","Issue #6320 http://rveach.no-ip.org/checkstyle/regression/pitest-reports/37/pitest-coding/com.puppycrawl.tools.checkstyle.checks.coding/IllegalCatchCheck.java.html#org.pitest.mutationtest.report.html.SourceFile@77baac76_132  Regression to come.","closed","","rnveach","2019-10-02T13:58:52Z","2019-10-03T10:58:59Z"
"","7139","Issue #6320: resolve remove conditional for FallThroughCheck","Issue #6320 http://rveach.no-ip.org/checkstyle/regression/pitest-reports/37/pitest-coding/com.puppycrawl.tools.checkstyle.checks.coding/FallThroughCheck.java.html#org.pitest.mutationtest.report.html.SourceFile@34199d1c_276  I am not sure regression is needed. Let me know otherwise.","closed","","rnveach","2019-10-02T13:44:59Z","2019-10-03T10:58:09Z"
"","7138","Issue #6320: resolve remove conditional for ExplicitInitializationCheck","Issue #6320 http://rveach.no-ip.org/checkstyle/regression/pitest-reports/37/pitest-coding/com.puppycrawl.tools.checkstyle.checks.coding/ExplicitInitializationCheck.java.html#org.pitest.mutationtest.report.html.SourceFile@4a1f8f59_184  Regression to come.","closed","","rnveach","2019-10-02T12:52:16Z","2019-10-03T10:57:29Z"
"","7137","Issue #6320: resolve remove conditional for EqualsHashCodeCheck","Issue #6320 http://rveach.no-ip.org/checkstyle/regression/pitest-reports/37/pitest-coding/com.puppycrawl.tools.checkstyle.checks.coding/EqualsHashCodeCheck.java.html  Regression to come.","closed","","rnveach","2019-10-02T12:09:17Z","2019-10-03T10:57:14Z"
"","7136","Issue #6320: resolve remove conditional for EqualsAvoidNullCheck","Issue #6320 http://rveach.no-ip.org/checkstyle/regression/pitest-reports/37/pitest-coding/com.puppycrawl.tools.checkstyle.checks.coding/EqualsAvoidNullCheck.java.html  Regression to come.","closed","","rnveach","2019-10-02T01:38:38Z","2019-10-03T20:52:24Z"
"","7134","Issue #6320: resolve remove conditional for CovariantEqualsCheck","Issue #6320 http://rveach.no-ip.org/checkstyle/regression/pitest-reports/37/pitest-coding/com.puppycrawl.tools.checkstyle.checks.coding/CovariantEqualsCheck.java.html#org.pitest.mutationtest.report.html.SourceFile@9ed9769_147  Regression to come.","closed","","rnveach","2019-10-02T01:10:00Z","2019-10-03T10:56:34Z"
"","7133","Issue #6320: resolve remove conditional for ArrayTrailingCommaCheck","Issue #6320 http://rveach.no-ip.org/checkstyle/regression/pitest-reports/37/pitest-coding/com.puppycrawl.tools.checkstyle.checks.coding/ArrayTrailingCommaCheck.java.html#org.pitest.mutationtest.report.html.SourceFile@3e738d34_165  Regression to come.","closed","","rnveach","2019-10-02T00:46:21Z","2019-10-03T10:57:48Z"
"","7238","Issue #6210: Use lineWrappingIndentation in multiline method call","Issue #6210  regression report: https://alinkov.github.io/full_report/reports/diff/index.html  When we set up different values for **lineWrappingIndentation** and **basicOffset** (these values are different in sun checks and google checks) in some cases we have error `'method call rparen' has incorrect indentation` For example for code ```java     when(someService.someMethod(any(), any()))         .thenReturn(             new SearchResult(""val1"", ""val2"")         ); ```","closed","","alinkov","2019-11-01T21:26:15Z","2020-01-13T20:43:40Z"
"","7886","Issue #6204: Exception when Char literals contain unicode characters","Issue #6204: Exception when Char literals contain unicode characters. This PR alters the CHAR_LITERAL rule to accommodate surrogate pair representations of unicode characters, on operating systems that use charsets other than UTF-8.","closed","","nick-mancuso","2020-03-17T20:32:08Z","2020-04-08T13:50:40Z"
"","7401","Issue #5777: Update AbbreviationAsWordInName to log DetailAST","Issue #5777  The check `AbbreviationAsWordInName` updated to log DetailAST","closed","","pbludov","2019-12-26T20:52:23Z","2019-12-28T08:13:26Z"
"","7481","Issue #5604: resolve Sonar violation 'Use Arrays.copyOf, Arrays.asList… instead","Issue #5604  https://sonarcloud.io/project/issues?id=org.checkstyle%3Acheckstyle&issues=AW9t2wyqYD2QG1pPXITF&open=AW9t2wyqYD2QG1pPXITF  solution taken from https://stackoverflow.com/a/23548085/1015848","closed","","romani","2020-01-16T06:33:55Z","2020-11-07T15:59:43Z"
"","7480","Issue #5604: resolve Sonar violation Replace this Map.get() with Map.computeIfAbsent","Issue #5604  https://sonarcloud.io/project/issues?id=org.checkstyle%3Acheckstyle&issues=AW9t2w2eYD2QG1pPXIUN&open=AW9t2w2eYD2QG1pPXIUN","closed","","romani","2020-01-16T05:58:16Z","2020-01-16T23:25:03Z"
"","7479","Issue #5604: resolve Sonar violation 'Use the primitive boolean expression here'","Issue #5604  https://sonarcloud.io/project/issues?id=org.checkstyle%3Acheckstyle&issues=AW9t2w0PYD2QG1pPXITg&open=AW9t2w0PYD2QG1pPXITg Should gone.","closed","","romani","2020-01-16T05:38:55Z","2020-01-17T07:32:33Z"
"","7482","Issue #5604: resolve Sonar violation 'Change this try to a try-with-resources.'","Issue #5604  https://sonarcloud.io/project/issues?id=org.checkstyle%3Acheckstyle&issues=AW-COCjR3bGE1f9XPc2U&open=AW-COCjR3bGE1f9XPc2U  second case was detected manually.   spotbugs suppression was reproducing only on Windows - https://ci.appveyor.com/project/Checkstyle/checkstyle/builds/30150824/job/gpdfipxhmn2tqs9w#L1089 , not a issue on linux for some reason. ``` [INFO] --- spotbugs-maven-plugin:3.1.12.2:check (default) @ checkstyle --- [INFO] BugInstance size is 1 [INFO] Error size is 0 [INFO] Total bugs: 1 [ERROR] Redundant nullcheck of out, which is known to be non-null in  com.puppycrawl.tools.checkstyle.PropertyCacheFile.persist()  [com.puppycrawl.tools.checkstyle.PropertyCacheFile,  com.puppycrawl.tools.checkstyle.PropertyCacheFile]  Redundant null check at PropertyCacheFile.java:[line 149] Another occurrence at PropertyCacheFile.java:[line 151]  RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE [INFO]   ```","closed","","romani","2020-01-16T06:53:02Z","2020-01-16T21:22:07Z"
"","7483","Issue #5604: resolve Sonar violation 'Remove this useless assignment'","Issue #5604  'reference' already holds the assigned value along all execution'  https://sonarcloud.io/project/issues?id=org.checkstyle%3Acheckstyle&issues=AW9t2w3qYD2QG1pPXIUe&open=AW9t2w3qYD2QG1pPXIUe  history of how such code appear - https://github.com/checkstyle/checkstyle/commit/69a3d541b4888e5e0e6ab09aa675667155c65381   diff looks big, but all I did is inverted condition and put adjacent ELSE_IF as nested.","closed","","romani","2020-01-16T07:05:13Z","2020-11-07T15:59:44Z"
"","7102","Issue #5496: fail CI if top master commit is too far back","Issue #5496","closed","","rnveach","2019-09-26T00:47:58Z","2019-09-26T12:43:35Z"
"","7085","Issue #5450: add javadoc recognition to DesignForExtension","Issue #5450  Regression to come.","closed","","rnveach","2019-09-22T16:34:14Z","2019-09-26T16:02:56Z"
"","7424","Issue #5234: remove DetailAST.branchContains","Issue #5234  This removes `DetailAST.branchContains`.  @romani I am not seeing this method deprecated, but it has been removed from checkstyle for a few versions. Do you still want to deprecate this first before removing it?","closed","","rnveach","2019-12-30T23:48:16Z","2019-12-31T21:42:29Z"
"","7118","Issue #5124: remove usages of branchContains for EqualsAvoidNullCheck","Issue #5124   Rewritten without `branchContains`  Regression report: https://pbludov.github.io/issue-5124-2/  Before this PR there was a bug causing a call to ``` frame.findField(""((fieldName))"") ``` which returns `null`.  Changes in the method `skipVariableAssign` fixes this.","closed","","pbludov","2019-09-29T09:38:58Z","2019-10-03T12:33:31Z"
"","7094","Issue #5124: remove usages of branchContains for EqualsAvoidNullCheck","Issue #5124  This is just a simple rewrite. Regression: https://pbludov.github.io/issue-5124/ (empty)","closed","","pbludov","2019-09-23T22:06:41Z","2019-09-29T09:29:47Z"
"","7148","Issue #5060: activate org.eclipse.jdt.core.compiler.problem.unnecessaryElse","Issue #5060  Discussion point https://github.com/checkstyle/checkstyle/issues/5060#issuecomment-536335043","closed","","romani","2019-10-03T19:11:14Z","2019-10-06T12:54:36Z"
"","7126","Issue #5060: put reason to why eclipse violations are disabled","Issue #5060  Added reasons why some eclipse preferences are suppressed. The rest remaining could be enabled.","closed","","rnveach","2019-09-29T20:15:11Z","2019-10-03T20:51:47Z"
"","7585","Issue #4937: Drop CDATA support in javadoc grammar","Issue #4937   Regression report https://pbludov.github.io/issue-4937/ (no difference). Nobody uses CDATA in Javadoc.","closed","","pbludov","2020-02-23T15:45:05Z","2020-05-29T16:49:12Z"
"","7109","Issue #4545: deprecate test only FileText constructor","Issue #4545  Constructor is only used by tests. New issue should be created to fully remove this method.","closed","","rnveach","2019-09-26T23:51:51Z","2019-09-27T11:08:24Z"
"","7114","Issue #3773: remove Checker's classLoader","Issue #3773","closed","","rnveach","2019-09-28T00:45:54Z","2019-10-12T07:39:12Z"
"","7092","Issue #3279: let wercker to test cloned checkstyle repo(master or PR branch","Issue #3279   it was recently requested at https://github.com/checkstyle/checkstyle/pull/7078#issuecomment-533757737 but due to rash to resolve ""git clone"" issue, was postponed.  ====  PR in contribution - https://github.com/checkstyle/contribution/pull/413 after its merge, this PR need to be updated to use master branch of contribution repo.","closed","","romani","2019-09-23T05:07:21Z","2019-09-26T22:34:43Z"
"","7059","Revert ""Issue #2116: use forked simple-binary-encoding with fix to pass CI build","Issue #2116  This reverts commit 7a87bb5bf1e38f0f67a5d18b85fc4b2d933e385a.","closed","","romani","2019-09-15T12:29:04Z","2019-09-15T13:51:26Z"
"","7020","Issue #2116: switch wercker to use forked equalsverifier","Issue #2116","closed","","romani","2019-08-26T05:24:39Z","2019-08-26T06:06:06Z"
"","7019","Issue #2116: add sun_checks.xml regression","Issue #2116","closed","","rnveach","2019-08-26T01:18:39Z","2019-08-26T11:58:55Z"
"","7293","config: add more output to investigate #7268","Issue  #7268","closed","","romani","2019-11-30T16:38:15Z","2019-11-30T18:51:49Z"
"","7895","new Check: RedundantThis","Is it possible to detect a redundant ""this"" modifier? proposed config will looks like: ```                        ```  ``` class X {   private int x;    public X() {     this.x = 1; // violation - redundant 'this' modifier   }    public X(int x) {     this.x = x; // no violation - 'this' is necessary here   } } ``` I would like to have an opposite rule to the [RequireThis](https://checkstyle.sourceforge.io/config_coding.html#RequireThis) rule.  Rationale: modern IDEs (e.g. IDEA, Eclipse, NetBeans) show what an entity is (class variable, local variable etc.) so there is no need to put a redundant 'this' keyword.","open","new module,","zielint0","2020-03-18T18:15:40Z","2021-12-20T18:25:20Z"
"","7129","Use ja-JP for Japanese locale, zh-CN for Chinese locale in travis.sh","Instead of `jp-JP` we need `ja-JP` for Japanese in `travis.sh`.  _Originally posted by @pbludov in https://github.com/checkstyle/checkstyle/pull/7122#issuecomment-536746154_","closed","miscellaneous,","pbludov","2019-09-30T20:50:14Z","2019-10-05T06:44:53Z"
"","7448","Please ensure binary compatibility across CS versions","In the past there were several breaks in binary compatibility, which makes life very hard for me as an extension developer (examples below). To me it appears that CHECKSTYLE and SEVNTU are always *compiled* for each released version, and tested, to ensure *source* compatibility. However when it comes to *binary* compatibility (such as when you load a CS extension), users often get mysterious error messages which are *extremely* hard to track down. The larger part of issues reported against http://unkrig.de/w/Cs-contrib.unkrig.de originate from such binary imcompatibilities. Effectively, I have to maintain a table that documents which versions of the extension are compatible with which versions of CS, which is very inconvenient for my users.  Sometimes it is possible to build workarounds (using reflection), sometimes it is not. But these workarounds ""pollute"" my code, and I have no criterion when I can remove each workaround -- very ugly.  My feeling is that you exercise little or no regression testing for *binary compatibility*, which, in my opinion, is absolutely crucial for a tool that claims to be extensible. Especially you should ensure that *older* versions of extensions still work with *younger* versions of CS-core, because extensions usually have a slower release cycle than the core product, and, in case of problems, it is easier for users to upgrade the core product than third-party extensions. Also, since CS is often bundled with other products (e.g. ECLIPSE), users often *cannot refuse* to upgrade the core product.  How about running your regression test suite against combinations of *older* SEVNTU versions and *younger* CS versions? That would have detected all the problems that I had in the past.  Examples for binary incompatibilities in the past:  (1) The integer constants in `TokenTypes` have been augmented for newer Java language features (good), but, apart from that, were unnecessarily changed *several times*, breaking binary compatibility each and every time:  5.8 => 5.9 5.9 => 6.0 6.1 => 8.12 (versions in between were not analysed)  (2) The parents of some checks (or filters) were changed, breaking each and every existing CS configuration that uses the check, and each and every tool that generates CS configurations (e.g. ECLIPSE-CS). E.g. `LineLengthCheck`:  8.23 => 8.24 Base class changed from `AbstractCheck` to `AbstractFileSetCheck` (so parent changed from `TreeWalker` to `Checker`  One ugly side effect of this change is that because `SuppressWithNearbyCommentFilter` affects only checks that or children of `TreeWalker`, it no longer suppresses messages issued by `LineLengthCheck`. The solution would be to change the superclass of `SuppressWithNearbyCommentFilter` (and all its friends) from `TreeWalkerFilter` to `Filter`. (Like I did for my `SpuuressionRegex` filter.)  (3) The class hierarchy around `DetailAST` has changed several times:  5.9 => 6.0: Parent class changed from `CommonAST` to `CommonASTwithHiddenTokens` 8.20 => 8.21: `DetailAST` is no longer a class but an interface - creates tons of `IncompatibleClassChangeError` 8.24 => 8.25: 9 Methods were removed - again, tons of runtime errors  I mean -- `DetailAST` is *the* central API for all `TreeWalker`-based checks -- why does anyone believe it is a good idea to modify that all the time??  Summary: The continuous changes in the CS core framework meant little improvements for me (apart from the support of newer Java features), but caused lots of trouble.  Honestly, I'm considering to give up on cs-contrib, because it gives me and my users constant frustration to keep it alive.  Could you please leave the framework and APIs untouched in the future, and, rather than make incompatible changes to the existing checks and filters, deprecate them and add *new* checks and filters, e.g. `LineLengthCheck` (parent `TreeWalker`) => deprecated, and new check `LineLengthCheck2` (parent `Checker`).","closed","","aunkrig","2020-01-08T11:26:55Z","2020-02-03T00:54:03Z"
"","7826","Issue #7802: Resolve Pitest Issues - CustomImportOrderCheck (1)","In https://github.com/checkstyle/checkstyle/issues/7802#issuecomment-597470793 it was found that the current unit tests are not well-designed to kill the mutations produced by pitest. Copied here for reference: > We already have unit tests in `CustomImportOrderCheckTest.java` that covers the different cases of regex matching, but the problem is that the input file is currently designed such that even if the test were to ""fail"" with the mutation, the output (violations) does not change, and so the tests incorrectly pass.  This PR aims to address that problem by enhancing the existing unit tests.  Pitest report for this branch: https://wltan.github.io/checkstyle-reports/2020-03-12/202003121402/  Both lines 815 and 816 no longer cause issues under pitest. It appears that this PR can solve both #7802 and #7806 at the same time.","closed","","wltan","2020-03-11T06:55:19Z","2020-03-12T19:02:23Z"
"","7425","CustomImportOrder warning seems incorrect","In Checkstyle 8.27 the following works fine.  Config: ```xml                        ```  Imports: ```java import com.fasterxml.jackson.annotation.JsonCreator; import com.fasterxml.jackson.annotation.JsonProperty;  import java.util.Objects; import java.util.StringJoiner; ```  ---------------  I expect this to work the same in 8.28, but I get the following error:  ``` [WARNING] src/main/java/com/sanctionco/thunder/models/Email.java:[6] (imports) CustomImportOrder: Extra separation in import group before 'java.util.Objects' ```  ---------------  Can anyone advise what changed in 8.28?","closed","","RohanNagar","2019-12-31T03:55:41Z","2020-01-07T23:01:43Z"
"","7413","JavadocMethodCheck: remove obsolete import token","IMPORT token used in check is obsolete and is not really used anywhere since class loading was removed. Even pitest is complaining about it.  We should remove the token from the check.","closed","breaking compatibility,","rnveach","2019-12-28T23:46:45Z","2019-12-29T07:11:10Z"
"","7235","SonarQube Checkstyle fails using Gradle and Java 11","im using:  OpenJDK 11 Gradle 5.4.1 sonarqube-gradle-plugin 2.7.1 SonarQube Checkstyle 4.21 SonarJava 5.13.1 i have a multiproject that im trying to migrate to Java 11 i try to migrate 2 submodules by adding this gradle configuration: https://guides.gradle.org/building-java-9-modules/  but when Jenkins try to execute the task sonarqube, it works fine on the projects that i didnt add the modules-info.java and change the gradle task, but for the projects that i migrated it fails:  Sensor CheckstyleSensor [checkstyle] Checkstyle output report: /**********/checkstyle-result.xml Checkstyle configuration: /**********/checkstyle.xml Checkstyle charset: UTF-8 :sonarqube (Thread[Execution worker for ':' Thread 7,5,main]) completed. Took 25.515 secs.  FAILURE: Build failed with an exception.  * What went wrong: Execution failed for task ':sonarqube'. > Can not execute Checkstyle  * Try: Run with --debug option to get more log output. Run with --scan to get full insights.  * Exception is:  FAILURE: Build failed with an exception.  * What went wrong: antlr/FileLineFormatter > antlr.FileLineFormatter  * Try: Run with --debug option to get more log output. Run with --scan to get full insights.  * Exception is: java.lang.NoClassDefFoundError: antlr/FileLineFormatter         at antlr.RecognitionException.toString(RecognitionException.java:67)         at org.gradle.internal.exceptions.DefaultMultiCauseException.printStackTrace(DefaultMultiCauseException.java:121)         at org.gradle.internal.logging.text.AbstractStyledTextOutput.exception(AbstractStyledTextOutput.java:80)         at org.gradle.internal.buildevents.BuildExceptionReporter.writeFailureDetails(BuildExceptionReporter.java:264)         at org.gradle.internal.buildevents.BuildExceptionReporter.renderSingleBuildException(BuildExceptionReporter.java:112)         at org.gradle.internal.buildevents.BuildExceptionReporter.execute(BuildExceptionReporter.java:77)         at org.gradle.internal.buildevents.BuildExceptionReporter.buildFinished(BuildExceptionReporter.java:67)         at org.gradle.internal.buildevents.BuildLogger.logResult(BuildLogger.java:97)         at org.gradle.launcher.exec.BuildOutcomeReportingBuildActionRunner.run(BuildOutcomeReportingBuildActionRunner.java:60)         at org.gradle.tooling.internal.provider.ValidatingBuildActionRunner.run(ValidatingBuildActionRunner.java:32)         at org.gradle.launcher.exec.BuildCompletionNotifyingBuildActionRunner.run(BuildCompletionNotifyingBuildActionRunner.java:39)         at org.gradle.launcher.exec.RunAsBuildOperationBuildActionRunner$3.call(RunAsBuildOperationBuildActionRunner.java:51)         at org.gradle.launcher.exec.RunAsBuildOperationBuildActionRunner$3.call(RunAsBuildOperationBuildActionRunner.java:45)         at org.gradle.internal.operations.DefaultBuildOperationExecutor$CallableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:416)         at org.gradle.internal.operations.DefaultBuildOperationExecutor$CallableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:406)         at org.gradle.internal.operations.DefaultBuildOperationExecutor$1.execute(DefaultBuildOperationExecutor.java:165)         at org.gradle.internal.operations.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:250)         at org.gradle.internal.operations.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:158)         at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:102)         at org.gradle.internal.operations.DelegatingBuildOperationExecutor.call(DelegatingBuildOperationExecutor.java:36)         at org.gradle.launcher.exec.RunAsBuildOperationBuildActionRunner.run(RunAsBuildOperationBuildActionRunner.java:45)         at org.gradle.launcher.exec.InProcessBuildActionExecuter$1.transform(InProcessBuildActionExecuter.java:49)         at org.gradle.launcher.exec.InProcessBuildActionExecuter$1.transform(InProcessBuildActionExecuter.java:46)         at org.gradle.composite.internal.DefaultRootBuildState.run(DefaultRootBuildState.java:78)         at org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:46)         at org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:31)         at org.gradle.launcher.exec.BuildTreeScopeBuildActionExecuter.execute(BuildTreeScopeBuildActionExecuter.java:42)         at org.gradle.launcher.exec.BuildTreeScopeBuildActionExecuter.execute(BuildTreeScopeBuildActionExecuter.java:28)         at org.gradle.tooling.internal.provider.ContinuousBuildActionExecuter.execute(ContinuousBuildActionExecuter.java:78)         at org.gradle.tooling.internal.provider.ContinuousBuildActionExecuter.execute(ContinuousBuildActionExecuter.java:52)         at org.gradle.tooling.internal.provider.SubscribableBuildActionExecuter.execute(SubscribableBuildActionExecuter.java:59)         at org.gradle.tooling.internal.provider.SubscribableBuildActionExecuter.execute(SubscribableBuildActionExecuter.java:36)         at org.gradle.tooling.internal.provider.SessionScopeBuildActionExecuter.execute(SessionScopeBuildActionExecuter.java:68)         at org.gradle.tooling.internal.provider.SessionScopeBuildActionExecuter.execute(SessionScopeBuildActionExecuter.java:38)         at org.gradle.tooling.internal.provider.GradleThreadBuildActionExecuter.execute(GradleThreadBuildActionExecuter.java:37)         at org.gradle.tooling.internal.provider.GradleThreadBuildActionExecuter.execute(GradleThreadBuildActionExecuter.java:26)         at org.gradle.tooling.internal.provider.ParallelismConfigurationBuildActionExecuter.execute(ParallelismConfigurationBuildActionExecuter.java:43)         at org.gradle.tooling.internal.provider.ParallelismConfigurationBuildActionExecuter.execute(ParallelismConfigurationBuildActionExecuter.java:29)         at org.gradle.tooling.internal.provider.StartParamsValidatingActionExecuter.execute(StartParamsValidatingActionExecuter.java:60)         at org.gradle.tooling.internal.provider.StartParamsValidatingActionExecuter.execute(StartParamsValidatingActionExecuter.java:32)         at org.gradle.tooling.internal.provider.SessionFailureReportingActionExecuter.execute(SessionFailureReportingActionExecuter.java:55)         at org.gradle.tooling.internal.provider.SessionFailureReportingActionExecuter.execute(SessionFailureReportingActionExecuter.java:41)         at org.gradle.tooling.internal.provider.SetupLoggingActionExecuter.execute(SetupLoggingActionExecuter.java:48)         at org.gradle.tooling.internal.provider.SetupLoggingActionExecuter.execute(SetupLoggingActionExecuter.java:32)         at org.gradle.launcher.daemon.server.exec.ExecuteBuild.doBuild(ExecuteBuild.java:67)         at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:36)         at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)         at org.gradle.launcher.daemon.server.exec.WatchForDisconnection.execute(WatchForDisconnection.java:37)         at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)         at org.gradle.launcher.daemon.server.exec.ResetDeprecationLogger.execute(ResetDeprecationLogger.java:26)         at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)         at org.gradle.launcher.daemon.server.exec.RequestStopIfSingleUsedDaemon.execute(RequestStopIfSingleUsedDaemon.java:34)         at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)         at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.call(ForwardClientInput.java:74)         at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.call(ForwardClientInput.java:72)         at org.gradle.util.Swapper.swap(Swapper.java:38)         at org.gradle.launcher.daemon.server.exec.ForwardClientInput.execute(ForwardClientInput.java:72)         at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)         at org.gradle.launcher.daemon.server.exec.LogAndCheckHealth.execute(LogAndCheckHealth.java:55)         at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)         at org.gradle.launcher.daemon.server.exec.LogToClient.doBuild(LogToClient.java:62)         at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:36)         at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)         at org.gradle.launcher.daemon.server.exec.EstablishBuildEnvironment.doBuild(EstablishBuildEnvironment.java:81)         at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:36)         at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)         at org.gradle.launcher.daemon.server.exec.StartBuildOrRespondWithBusy$1.run(StartBuildOrRespondWithBusy.java:50)         at org.gradle.launcher.daemon.server.DaemonStateCoordinator$1.run(DaemonStateCoordinator.java:295)         at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)         at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)         at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) Caused by: java.lang.ClassNotFoundException: antlr.FileLineFormatter         at org.sonar.classloader.ParentFirstStrategy.loadClass(ParentFirstStrategy.java:39)         at org.sonar.classloader.ClassRealm.loadClass(ClassRealm.java:87)         at org.sonar.classloader.ClassRealm.loadClass(ClassRealm.java:76)         ... 71 more i try to add the antlr as a dependency, add also on the modules-info.java, trying to change the sonarQube jvm arguments, but nothing seems to work, for now im reverting the change about adding the modules-info.java","closed","","rama99526","2019-10-30T16:02:25Z","2019-10-31T01:09:47Z"
"","7675","Confusing violation of Indentation rule","Im having a problem with the https://checkstyle.sourceforge.io/config_misc.html#Indentation check.  ```/home/serra/dev/cs-repro $ javac Test.java``` [no output here] ```/home/serra/dev/cs-repro $ cat my-checks.xml``` ```xml    	 	 	 		 			 			 			 		 	  ```  ```/home/serra/dev/cs-repro $ cat Test.java``` ```java import java.util.Arrays; import java.util.stream.Stream;  public class Test { 	public void test(Stream","closed","indentation,","Serranya","2020-02-26T13:25:48Z","2020-03-27T06:41:26Z"
"","7911","Build is not passing on Chineese (non English) locale","If you locale is not English, then you may face some errors when maven verify ,the checkstyle validation cannot pass, like [#7644 error](https://github.com/checkstyle/checkstyle/issues/7644#issuecomment-600472495).  ``` [checkstyle] [ERROR] ……\src\test\java\com\puppycrawl\tools\checkstyle\internal\ powermock\AuditEventDefaultFormatterPowerTest.java:23:1:  not allowed import： org.mockito.Mockito.when 。  [ImportControlTest] ``` caused by mismatch of [suppression](https://github.com/checkstyle/checkstyle/blob/master/config/suppressions.xml): ```      ```  From [# 7644 comment](https://github.com/checkstyle/checkstyle/issues/7644#issuecomment-600646979), We know that checkstyle is strictly tested in the English environment, so the test will fail in the non-English environment.  So the problem is how to force the locale to be changed to English during build? (of course, you can also use the environment created by CI for build)","open","easy,","jokowncode","2020-03-20T02:42:17Z","2021-04-04T00:57:33Z"
"","7123","config: upgrade eclipse static analysis","Identified at https://github.com/sevntu-checkstyle/sevntu.checkstyle/pull/779 ,  4.10 doesn't exist on the server anymore, 4.11 is the lowest version. We need to identify why our CI didn't pick this up. I looked at some previous builds and eclipse analysis was being skipped in them. My local fails the same as sevntu.","closed","","rnveach","2019-09-29T13:56:00Z","2019-09-29T18:56:43Z"
"","7446","Checks summary page is not in sync with javadoc summary","identified at https://github.com/checkstyle/eclipse-cs/pull/199#pullrequestreview-339235374 for NoArrayTrailingComma  https://checkstyle.org/checks.html > Checks if array initialization does not contain a trailing comma.  https://checkstyle.org/config_coding.html#NoArrayTrailingComma > Checks that array initialization do not contain a trailing comma.  It will be good to verify that checks.html have same value from javadoc summary sentence.","closed","miscellaneous,","romani","2020-01-07T14:12:04Z","2020-01-11T22:32:33Z"
"","7075","appveyor.bat is changed right after clone of repo of github","identified at https://github.com/checkstyle/contribution/issues/409 , see some investigation at that issue.  ``` git clone https://github.com/checkstyle/checkstyle.git cd checkstye ✔ ~/java/github/tmp/checkstyle [master|✚ 1]  $ git diff --color --ws-error-highlight=new,old diff --git a/.ci/appveyor.bat b/.ci/appveyor.bat index 875e7a3..b4c1236 100644 --- a/.ci/appveyor.bat +++ b/.ci/appveyor.bat @@ -1,60 +1,60 @@ -@echo off^M -^M ...... +@echo off + .... ```","closed","miscellaneous,","romani","2019-09-19T12:51:53Z","2019-09-21T04:27:40Z"
"","7270","fix website header rendering issue","identified at https://github.com/checkstyle/checkstyle/pull/7254#issuecomment-554760240  ![image](https://user-images.githubusercontent.com/812984/69010050-4467c700-0910-11ea-9eca-243292813cd8.png)  but it is not caused by this change, and it is already visible at https://checkstyle.org/ but it worked fine at https://checkstyle.sourceforge.io/version/8.20/ , so it is some our recent change.","closed","miscellaneous,","romani","2019-11-17T23:02:26Z","2019-11-22T01:42:03Z"
"","7091","config: add stack trace to gradle","Identified at https://github.com/checkstyle/checkstyle/pull/7088  Needed stacktrace to see `Property 'allowMissingJavadoc' does not exist, please check the documentation` Original error was only showing `Unable to create Root Module: config {/home/travis/build/checkstyle/checkstyle/.ci-temp/simple-binary-encoding/config/checkstyle/checkstyle.xml}, classpath {/home/travis/build/checkstyle/checkstyle/.ci-temp/simple-binary-encoding/sbe-benchmarks/build/classes/java/generated:/home/travis/build/checkstyle/checkstyle/.ci-temp/simple-binary-encoding/sbe-benchmarks/build/resources/generated}.`","closed","","rnveach","2019-09-22T21:35:15Z","2019-09-22T22:37:52Z"
"","7080","CustomImportOrder: documentation should have description that only one separtor line is allowed","identified at https://github.com/checkstyle/checkstyle/pull/6830#discussion_r297799608  The [documentation](https://checkstyle.org/config_imports.html#CustomImportOrder_Examples) says  >groups are separated by, at least, one blank line  but it is 'exactly one blank line'.  ``` # config from https://checkstyle.org/config_imports.html#CustomImportOrder_Examples  # for first 'groups are separated by, at least, one blank line' $ cat config.xml                                                          $ cat Test.java   package com.example;  import static java.awt.Button.ABORT;   import java.util.Map;  class InputCustomImportOrderSingleLine {}  $ java -jar checkstyle-8.24-all.jar -c config.xml Test.java Starting audit... [ERROR] /var/tmp/Test.java:7: 'java.util.Map' should be separated from  previous import group by one line. [CustomImportOrder] Audit done. Checkstyle ends with 1 errors. ```","closed","miscellaneous,","romani","2019-09-20T13:30:53Z","2019-09-20T21:35:08Z"
"","7179","Update documentation of filters to reference targets of suppression","identified at https://github.com/checkstyle/checkstyle/issues/7084 , users have hard time to understand why filter is not suppressing violations, as there is nuance of proper Filter usage for specific Checks.  Main rule of suppression is `filter has to be on the same level or higher than Check`. Not all users see configuration as XML, as there are bunch of UI plugins that hide tree of modules from users. BUT most/all users read or web documentation. So wording should try to help both group of users.   We need to update documentation of each filter to place a Note section with message: `filter can suppress Checks that have Trewalker as parent module` or `filter can suppress Checks that have Trewalker or Checker as parent module`","closed","miscellaneous,","romani","2019-10-10T10:42:24Z","2020-04-15T01:11:30Z"
"","7531","XPath has direct connection to if comment aware checks are added or not","Identified at https://github.com/checkstyle/checkstyle/issues/6807#issuecomment-581674231 ,  XPath was generated for a single check and it suppressed all issues.  ``` $ javac Test1.java $ cat Test1.java  public class Test1 {      {}     static {}      void method6(int a) {           {}; //ok     }      void method7(int a) {} //ok     void method8(int a) {/*:)*/} //ok, should be violation      class TestClass4 {} //ok      enum Test {}      interface Interface {}      @interface ClassPreamble { } //ok, should be violation, as there is space }  $ cat config.xml                                                                                                                  $ java -jar /var/tmp/checkstyle-8.29-all.jar -c config.xml Test1.java  Starting audit... Audit done. ```  However, once a comment aware check if added, the suppression fails for one instance, which have comments in the violation path.  ```` $ cat TestClass.java public class Test1 {      {}     static {}      void method6(int a) {           {}; //ok     }      void method7(int a) {} //ok     void method8(int a) {/*:)*/} //ok, should be violation      class TestClass4 {} //ok      enum Test {}      interface Interface {}      @interface ClassPreamble { } //ok, should be violation, as there is space }  $ cat TestConfig.xml                                                                                                                          $ java -jar checkstyle-8.29-all.jar -c TestConfig.xml TestClass.java Starting audit... [ERROR] TestClass.java:11:32: '}' at column 32 should be alone on a line. [RightCurlyAlone] Audit done. Checkstyle ends with 1 errors. ````  This shows a direct correlation between xpath suppressions and the type of checks added to a configuration. This is not very user friendly as users are directly aware if a check is comment aware or not. This could cause issues with generating a case that works for everyone.","open","xpath,","rnveach","2020-02-03T23:51:41Z","2020-03-14T23:21:47Z"
"","7023","update CIs scripts to skip execution only after checking all commits changes","identified at https://github.com/checkstyle/checkstyle/issues/2116#issuecomment-524727108  most CIs have code like - https://github.com/checkstyle/checkstyle/blob/master/.travis.yml#L285 it is was created to skip other CIs is there is change in configuration of only particular CI, it is was good  but it worked when we have single commit PR, that is 99% cases in our workflow.  But there was a case in referenced incident.  TODO: review all CIs on how they do clone and if that is possible to get amount of commits in PR, if yes...get diff of files in commits between master and branch head (PRs).","closed","CI,","romani","2019-08-27T00:39:06Z","2019-09-29T18:54:43Z"
"","7079","Manifest order warning: uses-permission tag appears after application tag","I'm using Checkstyle plugin 5.32.0 on Android Studio, and I'm using built-in google style as the configuration.   After reformat the Manifest.xml by Ctrl + Alt + L, the `uses-permission` tag is moved after `application` tag and a warning is shown. ![TIM截图20190920113754](https://user-images.githubusercontent.com/16363180/65298095-c6e83a80-db9c-11e9-8443-455965e99772.png)  ```xml                                                                ```  --------------- Expected:  ```xml                                                                ```  --------------","closed","","DevDengChao","2019-09-20T03:55:22Z","2019-09-20T08:25:54Z"
"","7253","Make Checkstyle multithread save?","I'd like to synchronize checkstyle code analysis but doing so I run into multiple problems. For example in `com/puppycrawl/tools/checkstyle/checks/coding/ReturnCountCheck.java` I get a NoSuchElementException in line 271 when using pop() on an empty stack.  To fix this, checkstyle wouldn't have to implement synchronization, it would just have to be thread save.   Is something like that planned for one of the next releases or is there something you're working on? If not, I could try fixing the problems I'll run into and create a PR after I'm finished? Would you be interested in that and make it part of one of the next releases (only once it's finished and tested of course)?","open","","jo2","2019-11-13T17:42:54Z","2019-12-27T11:24:58Z"
"","7504","New Check: UnusedVariable","I'd like to request an unused variable module. The following should fail:      public void foo() {         Integer bar = 1;         // This should fail since bar is not used     }      Where as:      public Integer foo() {         Integer bar = 1;         return bar     }      Should not since it is used.  Thanks","closed","new module,","furstenheim","2020-01-22T14:44:09Z","2022-01-18T16:32:01Z"
"","7173","New Property for AbbreviationAsWordInNameCheck","I would like to suggest that a new property be added to AbbreviationAsWordInNameCheck. This property would be used to outright ban specific abbreviations from being used.   Examples: ``` allowedLength = 5 bannedAbbreviations = URL, HTTP, XML  String myXMLExample //violation, XML is a banned abbreviation String validHttpExample // OK String thisISValid // OK, ISV is not a banned abbreviation String thisIsAURL //violation, URL is a banned abbreviation ```   Code below:  ``` public void setBannedAbbreviations(String... bannedAbbreviations) {         if(bannedAbbreviations != null) {             this.bannedAbbreviations =                 Arrays.stream(bannedAbbreviations).collect(Collectors.toSet());         } }  public void visitToken(DetailAST ast) {         if (!isIgnoreSituation(ast) && !isBannedAbbreviation(ast)) {             final DetailAST nameAst = ast.findFirstToken(TokenTypes.IDENT);             final String typeName = nameAst.getText();              final String abbr = getDisallowedAbbreviation(typeName);             if (abbr != null) {                 log(nameAst.getLineNo(), MSG_KEY, typeName, allowedAbbreviationLength + 1);             }         }     }  private boolean isBannedAbbreviation(DetailAST ast) {         boolean isBannedAbbreviation = false;         final DetailAST nameAst = ast.findFirstToken(TokenTypes.IDENT);         final String typeName = nameAst.getText();         for (String bannedAbbreviation : bannedAbbreviations) {             if (typeName.contains(bannedAbbreviation)) {                 isBannedAbbreviation = true;                 log(nameAst.getLineNo(), MSG_BANNED_KEY, typeName,                         this.bannedAbbreviations.stream().collect(                                 Collectors.joining("", "", """", """")));             }         }         return isBannedAbbreviation;     }","closed","","chrischild","2019-10-07T19:14:12Z","2019-10-09T10:29:35Z"
"","7538","Improve XMLFormatter to include sourceName AND moduleId","I would like to add more information to the output XML generated by the XMLLogger's `writeFileError()` method.  ## CURRENT  * [This method](https://github.com/checkstyle/checkstyle/blob/ae9edbd4a8645c8cc1a99ad6890dd0006700d1cb/src/main/java/com/puppycrawl/tools/checkstyle/XMLLogger.java#L186-L205) writes up to five XML properties for each `error`, including:   * `line`   * `column`   * `severity`   * `message`   * `source`  Currently, the code writes *either* the `event.getModuleId()` (if one is present) *or*, if there is no moduleId present, the `event.getSourceName()`.  Thus, the output `checkstyle_report.xml` is lossy - anytime users apply a module id (example [here](https://github.com/checkstyle/checkstyle/blob/f71bab0270b8a30ed01ff01f0da6038ed229a2ed/src/main/resources/google_checks.xml#L86)), the XML file will not include the source of the event.  ## Example report (*before* my proposed update)  ```xml                        ```  ## PROPOSAL  I propose adding the the shortName (ie: ""moduleId"", if one is present), in additional to the full source module name (ie: ""`com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck`"").   This change would make the XMLFormatter write up to six XML properties for each `error`, including:   * `line`   * `column`   * `severity`   * `message`   * `source` // *always* the full source name   * `shortName` // either the moduleId, if present, or else the Check name without the 'Check' suffix  ## Example `checkstyle_report.xml` *after* my proposed changes ```xml                        ```","closed","","Sadgrinner","2020-02-06T19:58:43Z","2020-03-17T22:02:40Z"
"","7111","RegexpOnFilenameCheck: very bad performance on Windows","I regularly profile the checkstyle run on my company projects. After introduction of a single RegexpOnFilenameCheck into an otherwise rather large checks configuration the CPU time went up from 7 to 11 minutes. All of those additional 4 minutes are spent in ```     private static String getFolderPath(File file) throws CheckstyleException {         try {             return file.getCanonicalFile().getParent();         }         catch (IOException ex) {             throw new CheckstyleException(""unable to create canonical path names for ""                     + file.getAbsolutePath(), ex);         }     } ``` for the `getCanonicalFile()` call according to Yourkit. At least on Windows (and with company anti virus enforced) such file accesses generally take a huge amount of time.  I believe there is a simple fix to the issue: It is not necessary to canonicalize the path of each file during the scan, but only all the ""roots"" of the recursive directory traversal. If those have been canonicalized, the directory walking searched for nested directories/files will produce canonicalized file names automatically by appending the current directory/file name to the already canonical parent name.  ![image](https://user-images.githubusercontent.com/406876/65766629-db43ae80-e12b-11e9-81c8-a8410ac46edc.png)","closed","","Bananeweizen","2019-09-27T11:38:22Z","2019-12-12T23:43:59Z"
"","7296","config: update 'verify-no-exception-configs' validation to not fail build if some contribution PR is referenced in description","I really tiered to recheck Travis state when new Check is introduced .... so here is extra hacking to ease this problem. I do check any PR link as if it present it will be verified by human, so any link to contributions pools is ok for now. We can make validation more exact later on if required.   tested on https://github.com/checkstyle/checkstyle/pull/7228  testing: ``` diff --git a/config/checkstyle_checks.xml b/config/checkstyle_checks.xml index dac232b..3cf89b3 100644 --- a/config/checkstyle_checks.xml +++ b/config/checkstyle_checks.xml @@ -77,6 +77,7 @@               +            ~/java/github/romani/checkstyle [new-check-contribution L|✚ 2]  $ export TRAVIS_PULL_REQUEST=""7229"" && READ_ONLY_TOKEN=vaaaalue && ./.ci/travis/travis.sh verify-no-exception-configs .ci-temp/checks-nonjavadoc-error.xml:4.63: failed to load external entity ""https://checkstyle.org/dtds/configuration_1_3.dtd""           ""https://checkstyle.org/dtds/configuration_1_3.dtd"">                                                               ^ failed to load external entity ""-n"" .ci-temp/checks-only-javadoc-error.xml:4.66: failed to load HTTP resource           ""http://www.puppycrawl.com/dtds/configuration_1_3.dtd"">                                                                  ^ config/checkstyle_checks.xml:4.63: failed to load external entity ""https://checkstyle.org/dtds/configuration_1_3.dtd""           ""https://checkstyle.org/dtds/configuration_1_3.dtd"">                                                               ^ PR Description grepped: You introduce new Check --- .ci-temp/web.txt	2019-12-02 00:17:52.695775967 -0800 +++ .ci-temp/file.txt	2019-12-02 00:17:52.707776418 -0800 @@ -155,6 +155,7 @@  TypeName  UncommentedMain  UniqueProperties +UniqueProperties111  UnnecessaryParentheses  UnnecessarySemicolonAfterTypeMemberDeclaration  UnnecessarySemicolonInEnumeration Please create PR to repository https://github.com/checkstyle/contribution and add your new Check     to file checkstyle-tester/checks-nonjavadoc-error.xml or to file checkstyle-tester/checks-only-javadoc-error.xml PR for contribution repositoty will be merged right after this PR.  ✘-1 ~/java/github/romani/checkstyle [new-check-contribution L|✚ 2]  00:17 $ export TRAVIS_PULL_REQUEST=""7228"" && READ_ONLY_TOKEN=vaaaalue && ./.ci/travis/travis.sh verify-no-exception-configs .ci-temp/checks-nonjavadoc-error.xml:4.63: failed to load external entity ""https://checkstyle.org/dtds/configuration_1_3.dtd""           ""https://checkstyle.org/dtds/configuration_1_3.dtd"">                                                               ^ failed to load external entity ""-n"" .ci-temp/checks-only-javadoc-error.xml:4.66: failed to load HTTP resource           ""http://www.puppycrawl.com/dtds/configuration_1_3.dtd"">                                                                  ^ config/checkstyle_checks.xml:4.63: failed to load external entity ""https://checkstyle.org/dtds/configuration_1_3.dtd""           ""https://checkstyle.org/dtds/configuration_1_3.dtd"">                                                               ^ PR Description grepped:""Fix for issue #6971.\r\n\r\nContribution PR: https://github.com/checkstyle/contribution/pull/417\r\n\r\nRegression report:\r\nhttps://sd1998.github.io/checkstyle-regression/Fix-69  $ READ_ONLY_TOKEN=valuue && ./.ci/travis/travis.sh verify-no-exception-configs .ci-temp/checks-nonjavadoc-error.xml:4.63: failed to load external entity ""https://checkstyle.org/dtds/configuration_1_3.dtd""           ""https://checkstyle.org/dtds/configuration_1_3.dtd"">                                                               ^ failed to load external entity ""-n"" .ci-temp/checks-only-javadoc-error.xml:4.66: failed to load HTTP resource           ""http://www.puppycrawl.com/dtds/configuration_1_3.dtd"">                                                                  ^ config/checkstyle_checks.xml:4.63: failed to load external entity ""https://checkstyle.org/dtds/configuration_1_3.dtd""           ""https://checkstyle.org/dtds/configuration_1_3.dtd"">                                                               ^ ✔ ```","closed","","romani","2019-12-02T08:25:32Z","2019-12-04T04:52:40Z"
"","7307","Use depclean-maven-plugin in CI","I noticed that the dependency `org.junit.jupiter:junit-jupiter-engine` was added to the pom when migrating integration tests to junit5 in https://github.com/checkstyle/checkstyle/commit/8ed2ebf91585e0320f4d6584abac1ad5de73105e. However, this dependency is not used and should be removed to make the pom clearer, the dependency tree smaller and easier to maintain.  I analyzed the bytecode usages between Checkstyle and all its dependencies (direct and transitive) using this tool:  https://castor-software.github.io/depclean. Then, I detected and removed the dependency and verify that all the checks pass.   It will be useful to use plugin in CI","closed","CI,","cesarsotovalero","2019-12-04T20:29:52Z","2019-12-05T21:28:06Z"
"","8004","ignoreSetter for HiddenField not working","I have the following in my `checkstyle.xml`:  ```xml                                             ```  And I have the following code:  ```java     public void setUseMiniItemVariants(final boolean useMiniVariant) {         this.useMiniVariant = useMiniVariant;     } ```  However I'm still getting `'useMiniVariant' hides a field. [HiddenField]` when running Checkstyle 8.31 through the Gradle plugin.","closed","","wb9688","2020-03-31T09:34:49Z","2020-03-31T09:37:05Z"
"","7275","Configuration or config parsing broken","I have the 3.1.0 checkstyle maven plugin, and a separate checkstyle.xml config file. But EVERY time the checkstyle target is executed, it fails. Not sure if this is a bug in the code, or in the configuration / config parsing. Below is the output, and additional parts of the pom.xml and checkstyle.xml ---------------  Describe what you expect in detail. A resolution to the fault, such that I can build the project with site reports successfully -------------- [ERROR] Failed to execute goal org.apache.maven.plugins:maven-site-plugin:3.4:site (default-cli) on project sigma-domain-parent: Error generating maven-checkstyle-plugin:3.1.0:checkstyle-aggregate: Failed during checkstyle configuration: cannot initialize module TreeWalker - Property 'cacheFile' does not exist, please check the documentation -> [Help 1] org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.maven.plugins:maven-site-plugin:3.4:site (default-cli) on project sigma-domain-parent: Error generating maven-checkstyle-plugin:3.1.0:checkstyle-aggregate: Failed during checkstyle configuration     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:215)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:156)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:148)     at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)     at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)     at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:56)     at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)     at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:305)     at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:192)     at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:105)     at org.apache.maven.cli.MavenCli.execute (MavenCli.java:956)     at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:288)     at org.apache.maven.cli.MavenCli.main (MavenCli.java:192)     at sun.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)     at sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke (Method.java:498)     at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:282)     at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:225)     at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:406)     at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:347) Caused by: org.apache.maven.plugin.MojoExecutionException: Error generating maven-checkstyle-plugin:3.1.0:checkstyle-aggregate: Failed during checkstyle configuration     at org.apache.maven.plugins.site.render.SiteMojo.execute (SiteMojo.java:146)     at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo (DefaultBuildPluginManager.java:137)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:210)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:156)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:148)     at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)     at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)     at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:56)     at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)     at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:305)     at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:192)     at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:105)     at org.apache.maven.cli.MavenCli.execute (MavenCli.java:956)     at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:288)     at org.apache.maven.cli.MavenCli.main (MavenCli.java:192)     at sun.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)     at sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke (Method.java:498)     at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:282)     at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:225)     at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:406)     at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:347) Caused by: org.apache.maven.doxia.siterenderer.RendererException: Error generating maven-checkstyle-plugin:3.1.0:checkstyle-aggregate: Failed during checkstyle configuration     at org.apache.maven.plugins.site.render.ReportDocumentRenderer.renderDocument (ReportDocumentRenderer.java:239)     at org.apache.maven.doxia.siterenderer.DefaultSiteRenderer.renderModule (DefaultSiteRenderer.java:311)     at org.apache.maven.doxia.siterenderer.DefaultSiteRenderer.render (DefaultSiteRenderer.java:129)     at org.apache.maven.plugins.site.render.SiteMojo.renderLocale (SiteMojo.java:182)     at org.apache.maven.plugins.site.render.SiteMojo.execute (SiteMojo.java:141)     at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo (DefaultBuildPluginManager.java:137)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:210)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:156)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:148)     at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)     at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)     at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:56)     at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)     at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:305)     at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:192)     at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:105)     at org.apache.maven.cli.MavenCli.execute (MavenCli.java:956)     at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:288)     at org.apache.maven.cli.MavenCli.main (MavenCli.java:192)     at sun.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)     at sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke (Method.java:498)     at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:282)     at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:225)     at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:406)     at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:347) Caused by: org.apache.maven.reporting.MavenReportException: Failed during checkstyle configuration     at org.apache.maven.plugins.checkstyle.AbstractCheckstyleReport.executeReport (AbstractCheckstyleReport.java:548)     at org.apache.maven.reporting.AbstractMavenReport.generate (AbstractMavenReport.java:255)     at org.apache.maven.plugins.site.render.ReportDocumentRenderer.renderDocument (ReportDocumentRenderer.java:224)     at org.apache.maven.doxia.siterenderer.DefaultSiteRenderer.renderModule (DefaultSiteRenderer.java:311)     at org.apache.maven.doxia.siterenderer.DefaultSiteRenderer.render (DefaultSiteRenderer.java:129)     at org.apache.maven.plugins.site.render.SiteMojo.renderLocale (SiteMojo.java:182)     at org.apache.maven.plugins.site.render.SiteMojo.execute (SiteMojo.java:141)     at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo (DefaultBuildPluginManager.java:137)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:210)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:156)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:148)     at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)     at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)     at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:56)     at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)     at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:305)     at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:192)     at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:105)     at org.apache.maven.cli.MavenCli.execute (MavenCli.java:956)     at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:288)     at org.apache.maven.cli.MavenCli.main (MavenCli.java:192)     at sun.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)     at sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke (Method.java:498)     at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:282)     at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:225)     at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:406)     at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:347) Caused by: com.puppycrawl.tools.checkstyle.api.CheckstyleException: cannot initialize module TreeWalker - Property 'cacheFile' does not exist, please check the documentation     at com.puppycrawl.tools.checkstyle.Checker.setupChild (Checker.java:477)     at com.puppycrawl.tools.checkstyle.api.AutomaticBean.configure (AutomaticBean.java:198)     at org.apache.maven.plugins.checkstyle.exec.DefaultCheckstyleExecutor.executeCheckstyle (DefaultCheckstyleExecutor.java:213)     at org.apache.maven.plugins.checkstyle.AbstractCheckstyleReport.executeReport (AbstractCheckstyleReport.java:533)     at org.apache.maven.reporting.AbstractMavenReport.generate (AbstractMavenReport.java:255)     at org.apache.maven.plugins.site.render.ReportDocumentRenderer.renderDocument (ReportDocumentRenderer.java:224)     at org.apache.maven.doxia.siterenderer.DefaultSiteRenderer.renderModule (DefaultSiteRenderer.java:311)     at org.apache.maven.doxia.siterenderer.DefaultSiteRenderer.render (DefaultSiteRenderer.java:129)     at org.apache.maven.plugins.site.render.SiteMojo.renderLocale (SiteMojo.java:182)     at org.apache.maven.plugins.site.render.SiteMojo.execute (SiteMojo.java:141)     at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo (DefaultBuildPluginManager.java:137)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:210)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:156)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:148)     at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)     at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)     at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:56)     at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)     at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:305)     at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:192)     at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:105)     at org.apache.maven.cli.MavenCli.execute (MavenCli.java:956)     at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:288)     at org.apache.maven.cli.MavenCli.main (MavenCli.java:192)     at sun.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)     at sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke (Method.java:498)     at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:282)     at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:225)     at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:406)     at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:347) Caused by: com.puppycrawl.tools.checkstyle.api.CheckstyleException: Property 'cacheFile' does not exist, please check the documentation     at com.puppycrawl.tools.checkstyle.api.AutomaticBean.tryCopyProperty (AutomaticBean.java:223)     at com.puppycrawl.tools.checkstyle.api.AutomaticBean.configure (AutomaticBean.java:191)     at com.puppycrawl.tools.checkstyle.Checker.setupChild (Checker.java:472)     at com.puppycrawl.tools.checkstyle.api.AutomaticBean.configure (AutomaticBean.java:198)     at org.apache.maven.plugins.checkstyle.exec.DefaultCheckstyleExecutor.executeCheckstyle (DefaultCheckstyleExecutor.java:213)     at org.apache.maven.plugins.checkstyle.AbstractCheckstyleReport.executeReport (AbstractCheckstyleReport.java:533)     at org.apache.maven.reporting.AbstractMavenReport.generate (AbstractMavenReport.java:255)     at org.apache.maven.plugins.site.render.ReportDocumentRenderer.renderDocument (ReportDocumentRenderer.java:224)     at org.apache.maven.doxia.siterenderer.DefaultSiteRenderer.renderModule (DefaultSiteRenderer.java:311)     at org.apache.maven.doxia.siterenderer.DefaultSiteRenderer.render (DefaultSiteRenderer.java:129)     at org.apache.maven.plugins.site.render.SiteMojo.renderLocale (SiteMojo.java:182)     at org.apache.maven.plugins.site.render.SiteMojo.execute (SiteMojo.java:141)     at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo (DefaultBuildPluginManager.java:137)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:210)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:156)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:148)     at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)     at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)     at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:56)     at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)     at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:305)     at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:192)     at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:105)     at org.apache.maven.cli.MavenCli.execute (MavenCli.java:956)     at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:288)     at org.apache.maven.cli.MavenCli.main (MavenCli.java:192)     at sun.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)     at sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke (Method.java:498)     at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:282)     at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:225)     at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:406)     at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:347) [ERROR]  [ERROR]  [ERROR] For more information about the errors and possible solutions, please read the following articles: [ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException    >>>>>>> pertinent sections of the checkstyle config xml                   ... removed for brevity      AND FROM SAME CHECKSTYLE CONFIG FILE                                                       .... rest removed for brevity   >>>>>>> pertinent parts of the maven pom.xml          3.1.0  ..... removed for brevity                               org.apache.maven.plugins                 maven-checkstyle-plugin                 ${maven-checkstyle-plugin.version}                                      sigma-checkstyle.xml                     **/*Test.java                                .... rest removed for brevity  Thank you for your answer.","closed","","alan-hwp","2019-11-21T12:34:04Z","2019-11-22T09:04:37Z"
"","7233","JavadocMethod : throws sometimes complain about fully qualified name","I did not manage to reproduce the bug easily in a single java file, so I created a dedicated project for reproducing the bug: https://github.com/surli/checkstyle-error  The error occurred specifically on https://github.com/surli/checkstyle-error/blob/master/src/main/java/org/xwiki/security/authorization/cache/internal/SecurityCache.java#L43 with the following throws: ``` @throws org.xwiki.security.authorization.cache.ConflictingInsertionException when another thread have ```  Checkstyle complains like this: > src/main/java/org/xwiki/security/authorization/cache/internal/SecurityCache.java:[47,45] (javadoc) JavadocMethod: Balise Javadoc @throws manquante pour 'ConflictingInsertionException'.  Using the simple name fixes the issue: ``` @throws ConflictingInsertionException when another thread have ```  but what's really strange is that we have another throws on the same method, and type can be fully qualified or not it doesn't make checkstyle complaining.  Reported as a regression since we had the issue while upgrading checkstyle to 8.26: we don't have any report when using Checkstyle 8.25, this can be tested by changing the version on the pom.xml of the test project.","closed","","surli","2019-10-29T09:40:00Z","2019-12-30T15:21:39Z"
"","7469","Use archunit library to control source code","https://www.archunit.org/userguide/html/000_Index.html#_cycle_checks To prevent cycles in packages or use it just another static analysis tool.  Limitation: https://github.com/TNG/ArchUnit/issues/359 Archunit do not see `@Retention(SOURCE)`  annotations like `java.lang.Override`.   Some links https://blogs.oracle.com/javamagazine/unit-test-your-architecture-with-archunit https://www.archunit.org/userguide/html/000_Index.html#_general_coding_rules https://github.com/TNG/ArchUnit-Examples/blob/master/example-junit4/src/test/java/com/tngtech/archunit/exampletest/junit4/MethodsTest.java https://github.com/societe-generale/arch-unit-build-plugin-core/blob/arch_unit_build_plugin_core_2.3.0/src/main/java/com/societegenerale/commons/plugin/rules/NoJunitAssertRuleTest.java https://github.com/TNG/ArchUnit/blob/master/archunit/src/main/java/com/tngtech/archunit/library/GeneralCodingRules.java https://github.com/societe-generale/arch-unit-maven-plugin/blob/master/README.md","closed","miscellaneous,","romani","2020-01-13T18:16:05Z","2020-06-03T15:45:05Z"
"","7411","Fix output of failed build item","https://travis-ci.org/checkstyle/checkstyle/jobs/630407383#L250  ``` eval of CMD is starting CMD=./.ci/travis/travis.sh verify-no-exception-configs .ci-temp/checks-nonjavadoc-error.xml:4.63: failed to load external entity ""https://checkstyle.org/dtds/configuration_1_3.dtd""           ""https://checkstyle.org/dtds/configuration_1_3.dtd"">                                                               ^ failed to load external entity ""-n"" .ci-temp/checks-only-javadoc-error.xml:4.66: failed to load HTTP resource           ""http://www.puppycrawl.com/dtds/configuration_1_3.dtd"">                                                                 config/checkstyle_checks.xml:4.63: failed to load external entity ""https://checkstyle.org/dtds/configuration_1_3.dtd""           ""https://checkstyle.org/dtds/configuration_1_3.dtd"">                                                               ^ --- .ci-temp/web.txt	2019-12- ```","closed","miscellaneous,","romani","2019-12-28T21:46:17Z","2019-12-31T09:19:07Z"
"","7206","config: bump jacoco to 0.8.5","https://travis-ci.org/checkstyle/checkstyle/jobs/598822377#L1084","closed","","romani","2019-10-17T15:19:05Z","2019-10-17T19:30:27Z"
"","7207","config: bump jgit to 5.5.1.201910021850","https://travis-ci.org/checkstyle/checkstyle/jobs/598822377#L1069","closed","","romani","2019-10-17T15:23:13Z","2019-10-19T00:08:43Z"
"","7181","config: bump jgit to 5.5.0.201909110433-r","https://travis-ci.org/checkstyle/checkstyle/jobs/595782529#L1089","closed","","romani","2019-10-10T11:50:20Z","2019-10-10T15:15:00Z"
"","7180","config: bump equalsverifier to 3.1.10","https://travis-ci.org/checkstyle/checkstyle/jobs/595782529#L1073","closed","","romani","2019-10-10T11:46:48Z","2019-10-10T13:35:47Z"
"","7051","config: bump pitest to 1.4.10","https://travis-ci.org/checkstyle/checkstyle/jobs/583818724#L1205","closed","","romani","2019-09-13T02:50:46Z","2019-09-13T13:04:48Z"
"","7052","config: bump sonar to 3.6.1.1688","https://travis-ci.org/checkstyle/checkstyle/jobs/583818724#L1192","closed","","romani","2019-09-13T02:52:55Z","2019-09-13T11:21:03Z"
"","7057","config: bump it to 5.4.3.201909031940","https://travis-ci.org/checkstyle/checkstyle/jobs/583818724#L1179","closed","","romani","2019-09-13T03:06:45Z","2019-09-13T12:31:29Z"
"","7053","config: bump ant to 1.10.7","https://travis-ci.org/checkstyle/checkstyle/jobs/583818724#L1166","closed","","romani","2019-09-13T02:56:22Z","2019-09-13T11:21:30Z"
"","7054","config: bump saxon to 9.9.1-5","https://travis-ci.org/checkstyle/checkstyle/jobs/583818724#L1148","closed","","romani","2019-09-13T02:59:42Z","2019-09-15T20:37:03Z"
"","7055","config: bump picocli to 4.0.4","https://travis-ci.org/checkstyle/checkstyle/jobs/583818724#L1134","closed","","romani","2019-09-13T03:02:05Z","2019-09-13T11:22:45Z"
"","7056","config: bump guava to 28.1-jre","https://travis-ci.org/checkstyle/checkstyle/jobs/583818724#L1118","closed","","romani","2019-09-13T03:04:07Z","2019-09-13T11:23:05Z"
"","7028","config: bump jgit to 5.4.2","https://travis-ci.org/checkstyle/checkstyle/jobs/578022414#L1126","closed","","romani","2019-08-28T20:39:49Z","2019-08-29T01:02:49Z"
"","7027","config: bump picocli to 4.0.3","https://travis-ci.org/checkstyle/checkstyle/jobs/578022414#L1110","closed","","romani","2019-08-28T20:37:49Z","2019-08-28T21:59:36Z"
"","7006","config: bump spotbugs to 3.1.12.2","https://travis-ci.org/checkstyle/checkstyle/jobs/575015020#L1160","closed","","romani","2019-08-23T01:42:31Z","2019-08-23T03:18:18Z"
"","7007","config: bump slf4j to 1.7.28","https://travis-ci.org/checkstyle/checkstyle/jobs/575015020#L1147","closed","","romani","2019-08-23T01:45:21Z","2019-08-23T03:16:06Z"
"","7008","config: bump picocli to 4.0.2","https://travis-ci.org/checkstyle/checkstyle/jobs/575015020#L1131","closed","","romani","2019-08-23T01:47:34Z","2019-08-23T03:17:33Z"
"","7276","JDK 13 Travis Failure","https://travis-ci.org/checkstyle/checkstyle/builds/615140227?utm_source=github_status&utm_medium=notification https://travis-ci.org/checkstyle/checkstyle/builds/614013468?utm_source=github_status&utm_medium=notification  ```` [INFO] Results: [INFO]  [ERROR] Failures:  [ERROR]   CheckerTest.testDefaultLoggerClosesItStreams:1337 Flush count was not expected expected: but was: [ERROR]   CheckerTest.testXmlLoggerClosesItStreams:1362 Flush count was not expected expected: but was: [ERROR]   XpathFileGeneratorAuditListenerTest.testCorrectOne:168->verifyOutput:309 expected number of flushes expected: but was: [ERROR]   XpathFileGeneratorAuditListenerTest.testCorrectTwo:199->verifyOutput:309 expected number of flushes expected: but was: [ERROR]   XpathFileGeneratorAuditListenerTest.testOnlyOneMatching:227->verifyOutput:309 expected number of flushes expected: but was: [INFO]  [ERROR] Tests run: 3159, Failures: 5, Errors: 0, Skipped: 0 ````","closed","miscellaneous,","rnveach","2019-11-22T01:50:26Z","2019-12-26T17:10:58Z"
"","7458","Sonar violation: ""ThreadLocal"" variables should be cleaned up when no longer used","https://sonarcloud.io/project/issues?id=org.checkstyle%3Acheckstyle&resolved=false&rules=java%3AS5164&types=BUG  such code it is resulted in incomplete Multithreading implementation. Violation looks valid.  Should we update code with execution of `remove` ? or remove ThreadLocal ? Or mark this as ""Won't fix"" ?","closed","approved,","romani","2020-01-10T18:27:56Z","2020-01-17T15:39:55Z"
"","7486","Xpath implementation: relationship between getLocalPart and getStringValue","https://sonarcloud.io/project/issues?id=org.checkstyle%3Acheckstyle&resolved=false&rules=java%3AS4144  https://github.com/checkstyle/checkstyle/blob/master/src/main/java/com/puppycrawl/tools/checkstyle/xpath/ElementNode.java#L121-L128  src/.../tools/checkstyle/xpath/ElementNode.java Update this method so that its implementation is not identical to ""getLocalPart"" on line 126. L162  src/.../tools/checkstyle/xpath/RootNode.java Update this method so that its implementation is not identical to ""getLocalPart"" on line 92. L128  Should we make it like ? ```     public String getLocalPart() {         return getStringValue();     } ``` https://www.saxonica.com/html/documentation/javadoc/net/sf/saxon/om/NodeInfo.html#getLocalPart--  there is idea that we do not need getStringValue - https://github.com/checkstyle/checkstyle/issues/5604#issuecomment-575275971","closed","miscellaneous,","romani","2020-01-16T20:07:22Z","2020-01-31T13:02:17Z"
"","7459","Sonar violation: Null pointers should not be dereferenced","https://sonarcloud.io/project/issues?id=org.checkstyle%3Acheckstyle&resolved=false&rules=java%3AS2259&types=BUG   I am not sure we are ready to update code with `Nonnull` annotations. We might come back to this later on. I propose to mark all issues as ""Won't fix"". Please vote","closed","","romani","2020-01-10T18:31:02Z","2020-01-12T18:37:49Z"
"","7468","Sonar violation: Disable XML external entity (XXE) processing","https://sonarcloud.io/project/issues?id=org.checkstyle%3Acheckstyle&issues=AW9t2w41YD2QG1pPXIVJ&open=AW9t2w41YD2QG1pPXIVJ  Vulnerability at [src/.../tools/checkstyle/XmlLoader.java](https://github.com/checkstyle/checkstyle/blob/master/src/main/java/com/puppycrawl/tools/checkstyle/XmlLoader.java#L67) Disable XML external entity (XXE) processing.  All details of such rule - https://rules.sonarsource.com/java/RSPEC-2755   Reply  from Security expert: > Hi Roman, The next line `setFeaturesBySystemProperty` does disable the loading of external entities when the system property is not configured by the user. https://github.com/checkstyle/checkstyle/blob/ae9edbd4a8645c8cc1a99ad6890dd0006700d1cb/src/main/java/com/puppycrawl/tools/checkstyle/XmlLoader.java#L141-L149 I would validate that you are using all of the prevention methods suggested in this document here: https://cheatsheetseries.owasp.org/cheatsheets/XML_External_Entity_Prevention_Cheat_Sheet.html The cases you need to be concerned with are any involving the use of the SAXParserFactory. If you find any cases you are missing, then you may be vulnerable. In which case, please let me know. Cheers, Jonathan Leitschuh  TODO: We need to investigate this to make sure if we are vulnerable","closed","approved,","romani","2020-01-13T17:42:15Z","2020-01-25T14:31:26Z"
"","7476","Sonar violation: Cognitive Complexity of methods should not be too high (above 15)","https://sonarcloud.io/organizations/checkstyle/issues?resolved=false&rules=java%3AS3776  Rule description https://sonarcloud.io/organizations/checkstyle/rules?open=java%3AS3776&q=java%3AS3776  We need to try to change limit to 15 and get understanding how it is achievable to reach such limit in our codebase.  It do make sense .... it does conflict a bit with ""single return"" rule that we follow,  but it could be reconciled by raising allowed limit for Cognitive Complexity.   Cases: checkstylesrc/.../puppycrawl/tools/checkstyle/Checker.java Reduce its Cognitive Complexity from 19 to the 15 allowed L277  checkstylesrc/.../puppycrawl/tools/checkstyle/Main.java Reduce its Cognitive Complexity from 23 to the 15 allowed L750  checkstylesrc/.../tools/checkstyle/checks/SuppressWarningsHolder.java Reduce its Cognitive Complexity from 17 to the 15 allowed L286  checkstylesrc/.../checkstyle/checks/annotation/SuppressWarningsCheck.java Reduce its Cognitive Complexity from 19 to the 15 allowed L187  checkstylesrc/.../tools/checkstyle/checks/coding/CovariantEqualsCheck.java Reduce its Cognitive Complexity from 16 to the 15 allowed L138  checkstylesrc/.../tools/checkstyle/checks/coding/FinalLocalVariableCheck.java Reduce its Cognitive Complexity from 16 to the 15 allowed L246  Reduce its Cognitive Complexity from 17 to the 15 allowed L436  checkstylesrc/.../tools/checkstyle/checks/coding/MultipleVariableDeclarationsCheck.java Reduce its Cognitive Complexity from 19 to the 15 allowed L79  checkstylesrc/.../tools/checkstyle/checks/coding/RequireThisCheck.java Reduce its Cognitive Complexity from 17 to the 15 allowed L611  checkstylesrc/.../tools/checkstyle/checks/coding/UnnecessaryParenthesesCheck.java Reduce its Cognitive Complexity from 17 to the 15 allowed L282  checkstylesrc/.../tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheck.java Reduce its Cognitive Complexity from 18 to the 15 allowed L281  Reduce its Cognitive Complexity from 19 to the 15 allowed L342  Reduce its Cognitive Complexity from 16 to the 15 allowed L648  checkstylesrc/.../tools/checkstyle/checks/design/HideUtilityClassConstructorCheck.java Reduce its Cognitive Complexity from 18 to the 15 allowed L197  checkstylesrc/.../tools/checkstyle/checks/header/RegexpHeaderCheck.java Reduce its Cognitive Complexity from 18 to the 15 allowed L241  checkstylesrc/.../checkstyle/checks/imports/CustomImportOrderCheck.java Reduce its Cognitive Complexity from 25 to the 15 allowed L552  Reduce its Cognitive Complexity from 16 to the 15 allowed L738  checkstylesrc/.../checkstyle/checks/indentation/CommentsIndentationCheck.java Reduce its Cognitive Complexity from 20 to the 15 allowed L373  Reduce its Cognitive Complexity from 16 to the 15 allowed L979  checkstylesrc/.../checkstyle/checks/javadoc/AbstractJavadocCheck.java Reduce its Cognitive Complexity from 16 to the 15 allowed L346  checkstylesrc/.../checkstyle/checks/javadoc/JavadocStyleCheck.java Reduce its Cognitive Complexity from 19 to the 15 allowed L476  checkstylesrc/.../checkstyle/checks/modifier/ModifierOrderCheck.java Reduce its Cognitive Complexity from 20 to the 15 allowed L149","open","approved,","romani","2020-01-16T03:56:05Z","2020-03-09T01:27:57Z"
"","7475","Sonar violation: Cognitive Complexity of methods should not be too high (above 20)","https://sonarcloud.io/organizations/checkstyle/issues?resolved=false&rules=java%3AS3776  Rule description https://sonarcloud.io/organizations/checkstyle/rules?open=java%3AS3776&q=java%3AS3776  cases: https://sonarcloud.io/project/issues?id=org.checkstyle%3Acheckstyle&issues=AW9t2w4mYD2QG1pPXIVE&open=AW9t2w4mYD2QG1pPXIVE and https://sonarcloud.io/project/issues?id=org.checkstyle%3Acheckstyle&issues=AW9t2wy2YD2QG1pPXITK&open=AW9t2wy2YD2QG1pPXITK  should be fixed as they most complicated cases for sure: src/.../puppycrawl/tools/checkstyle/Main.java Refactor this method to reduce its Cognitive Complexity from 23 to the 20 allowed. L750  src/.../checkstyle/checks/imports/CustomImportOrderCheck.java Refactor this method to reduce its Cognitive Complexity from 25 to the 20 allowed. L552   ------  FYI: same method `Main#validateCli` is violated by Cyclomatic `[checkstyle] [ERROR] src/main/java/com/puppycrawl/tools/checkstyle/Main.java:749:9: Cyclomatic Complexity is 21 (max allowed is 10). [CyclomaticComplexity]`","closed","miscellaneous,","romani","2020-01-16T03:54:19Z","2020-01-18T22:11:33Z"
"","7017","stop using puppet/disteli CI","https://pipelines.puppet.com/checkstyle/apps  >Puppet Pipelines SaaS will reach its end of life (EOL) on January 31, 2020. If you have questions, please contact pipelines.eol@puppet.com.","closed","CI,","romani","2019-08-24T23:32:11Z","2019-08-26T05:42:49Z"
"","7339","Fix type of Checker property cacheFile","https://pbludov.github.io/site/config.html#Checker_Properties  The type of property `cacheFile` is `File`, which does not exist at our website documentation https://pbludov.github.io/site/property_types.html#file . We either should change it to [URI](https://pbludov.github.io/site/property_types.html#uri) or add a new property type.","closed","miscellaneous,","pbludov","2019-12-08T11:34:13Z","2019-12-26T17:11:46Z"
"","7232","investigate JitCI (Jitpack) to publish ""-all"" artifact on each build","https://jitci.com/gh/checkstyle/checkstyle  We do publication of SNAPSHOT artifacts to maven central (but not a ""-all.jar"").  TODO: - investigate ability of CI to build and publish ""-all.jar"" - do we need to publish SNAPSHOT to jitCI from master branch ? - can we reuse this CI for general testing ? does it have access to build logs ? integration with Pull requests ?  Accessible settings: ![image](https://user-images.githubusercontent.com/812984/67643156-6b167d00-f8d1-11e9-92f7-38f1ef5111aa.png)","open","CI,","romani","2019-10-27T22:45:44Z","2019-12-12T18:58:03Z"
"","7323","infra: activate wercker.sh no-error-checkstyles-sevntu","https://github.com/sevntu-checkstyle/sevntu.checkstyle/issues/745 is fixed.","closed","","romani","2019-12-06T17:16:03Z","2019-12-07T15:38:33Z"
"","7045","Use azure CI for some validation tasks","https://github.com/marketplace/azure-pipelines  Example: https://github.com/hcoles/pitest/blob/master/azure-pipelines.yml  Free style bash task https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/utility/bash?view=azure-devops  Looks like in matrix variables are defined https://mattvsts.github.io/2020/01/07/create-a-build-matrix-with-azure-pipelines/  Bash is part of regular job https://docs.microsoft.com/en-us/azure/devops/pipelines/process/phases?view=azure-devops&tabs=yaml it is a shortcut of https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/utility/bash?view=azure-devops  https://docs.microsoft.com/en-us/azure/devops/pipelines/release/caching?view=azure-devops#maven  available images with list of installed applications - https://docs.microsoft.com/en-us/azure/devops/pipelines/agents/hosted?view=azure-devops&tabs=yaml  ------  cron execution:  https://docs.microsoft.com/en-us/azure/devops/pipelines/process/scheduled-triggers?view=azure-devops&tabs=yaml example how to allow run by cron only (Reason: scheduled): https://github.com/giotto-ai/giotto-tda/blob/master/azure-pipelines.yml https://docs.microsoft.com/en-us/azure/devops/pipelines/build/variables?view=azure-devops&tabs=yaml","closed","CI,","romani","2019-09-07T22:00:41Z","2022-05-08T03:16:50Z"
"","7496","Issue #7486: Xpath implementation: relationship between getLocalPart and getStringValue","https://github.com/checkstyle/checkstyle/issues/7486","closed","","timurt","2020-01-19T14:16:14Z","2020-01-31T13:01:46Z"
"","7485","Issue #6988: Xpath results are not sorted in document order","https://github.com/checkstyle/checkstyle/issues/6988","closed","awaiting changes,","timurt","2020-01-16T17:29:38Z","2020-03-22T11:58:40Z"
"","7677","New check: UnnecessarySemicolonAfterOuterTypeDeclaration","https://github.com/checkstyle/checkstyle/issues/6847#issuecomment-508939783 Similar to other UnnecessarySemicolon* checks, this one checks unnecessary semicolon after type declaration. ``` cat TestClass.java class A {  // some code  class Inner {  }; // no violation, covered by UnnecessarySemicolonAfterTypeMemberDeclaration  }; // violation  interface B {  // some code }; // violation  @interface C {  // some code }; // violation  enum D {  // some code }; // violation  $ cat conf.xml                               $ java -jar checkstyle-8.29-all.jar -c conf.xml Test.java Starting audit... // here violations at lines with violation comments ```","closed","new module,","strkkk","2020-02-26T13:47:58Z","2020-03-29T20:59:17Z"
"","7834","Update issue template to new format","https://github.com/checkstyle/checkstyle/blob/master/.github/ISSUE_TEMPLATE.md  There is warning >You are using an old version of issue templates. Please update to the new issue template workflow. Learn more  We need to figure out what this means and upgrade to make GitHub happy.","closed","miscellaneous,","romani","2020-03-12T03:17:08Z","2020-06-20T19:07:50Z"
"","7832","Publish pitest report as artifact at circleci","https://circleci.com/docs/2.0/artifacts/  We can deploy pitest html report as artifact and it will be available at circleci UI for review.  It will be very useful if contributor stuck with pitest and need help from us","closed","CI,","romani","2020-03-12T03:08:02Z","2020-04-07T03:06:24Z"
"","7268","Problem to open archive web ages starting from 8.21","https://checkstyle.sourceforge.io/version/8.20/ is last archive site that is accessible all further releases (for example https://checkstyle.sourceforge.io/version/8.21/ ) result in: ``` An error has been encountered in accessing this page.  1. Server: checkstyle.sourceforge.io 2. URL path: /version/8.21/ 3. Error notes: Server unable to read htaccess file, denying access to be safe 4. Error type: 403 5. Request method: GET 6. Request query string: NONE 7. Time: 2019-11-17 16:04:52 UTC (1574006692)  ```","closed","miscellaneous,","romani","2019-11-17T16:06:16Z","2019-12-02T06:44:41Z"
"","7427","Add API to fix violations automatically","https://checkstyle.sourceforge.io/config_whitespace.html#WhitespaceAround  Sample output:  ``` [ant:checkstyle] [ERROR] /../calcite/core/src/main/java/org/apache/calcite/plan/RelOptUtil.java:3527:53: ':' is not preceded with whitespace. [WhitespaceAround] [ant:checkstyle] [ERROR] /../calcite/core/src/main/java/org/apache/calcite/plan/RelOptUtil.java:3528:54: ':' is not preceded with whitespace. [WhitespaceAround] ```  Just in case, the code in question was  ```java             joinConvention == Convention.NONE ? left: RelOptRule.convert(left, joinConvention),             joinConvention == Convention.NONE ? right: RelOptRule.convert(right, joinConvention), ```  Even though the message is more or less clear, the case is trivial, and Checkstyle could insert the space automatically.  The same goes for UnusedImports, ImportOrder, CustomImportOrder, RedundantImport, ModifierOrder, and so on.  Adding auto-correction API to Checkstyle would save a lot of time for developers across the world.  Of course, there always will be checks that can't be automatically corrected. For instance, AnonInnerLength requires manual input for resolution.  Note: the purpose of this issue is not not make all the checks auto-correctable, but I suggest an API is added, so more and more checks could become auto-correctable in the future.  Note: [ktlint](https://github.com/pinterest/ktlint) implements auto-correctable checks for Kotlin, and it is really nice to use.","open","discussion ongoing,","vlsi","2019-12-31T08:08:38Z","2021-12-26T00:52:51Z"
"","7473","JavadocMethod: false positive with validateThrows if catched inside the method","https://checkstyle.sourceforge.io/config_javadoc.html#JavadocMethod  ``` $ javac TestUtils.java $ echo $? 0 $ cat checkstyle.xml                                                                                     $ cat TestUtils.java package com.myapp.test;  /**  * Test class  */ public class TestUtils {      /**      * Constructor      */     private TestUtils() {         // ""private"" to prevent instantiation     }      /**      * Parse a positive integer      *      * @param s String to parse      * @return A positive integer      * @throws IllegalArgumentException If the number if zero/negative or if an error occured while parsing the string      */     private static int parsePositiveInt(final String s) {         try {             int value = Integer.parseInt(s);             if (value","closed","approved,","jdussouillez","2020-01-14T14:00:18Z","2020-04-29T12:29:53Z"
"","7827","Remove javaFiveCompatibility from MissingOverride?","https://checkstyle.sourceforge.io/config_annotation.html#MissingOverride  MissingOverride has property `javaFiveCompatibility`, its description says  > This property will only check classes, interfaces, etc. that do not contain the extends or implements keyword or are not anonymous classes. This means it only checks methods overridden from java.lang.Object. Java 5 Compatibility mode severely limits this check. It is recommended to only use it on Java 5 source.  I really doubt if there are users with Java 5, this property looks redundant in 2020.","closed","question,","strkkk","2020-03-11T07:02:16Z","2020-03-12T10:01:47Z"
"","7084","Documentation for Checkstyle rules need to be more informative.","https://checkstyle.sourceforge.io/config_annotation.html  Checkstyle rules must document what java source class element they are to be annotated to for @SuppressWarnings.  ""ElementType.ANNOTATION_TYPE can be applied to an annotation type. ElementType.CONSTRUCTOR can be applied to a constructor. ElementType.FIELD can be applied to a field or property. ElementType.LOCAL_VARIABLE can be applied to a local variable. ElementType.METHOD can be applied to a method-level annotation. ElementType.PACKAGE can be applied to a package declaration. ElementType.PARAMETER can be applied to the parameters of a method. ElementType.TYPE can be applied to any element of a class.""  https://docs.oracle.com/javase/tutorial/java/annotations/predefined.html  Rules that belong to TreeWalker and Checker modules are to be differentiated in the documentation via a marker (either an asterisk or something distinguishable). The current Checker module rules have a chain icon. It would help if the Tree Walker modules had a tree icon.  Additionally, the parent module field descriptor should be moved to the top from the bottom of each rule. This way, it's visible right away.   There needs to be another field for each rule: Supports SuppressionXpathFilter: Yes/No.  The documentation for each rule needs to state its severity level : IGNORE, INFO, WARNING, ERROR. This, too, needs to be at the top of the rule description.   As a general rule-of-thumb, information that forms a decision criteria must be placed up-front.  While this is not related to documentation, it would help if there were a tool or way to check if a user's configuration is up-to-date with the latest Checkstyle version. Scanning through release notes and doing it manually is not the best way to go about it. This should not just list the new rules but also the rules not in use and properties or attributes missing or added to existing rules in the user's configuration since. Also, deprecated attributes and rules currently in use in the user's configuration.  While this might seem well suited to develop as a GUI, a simpler option is to collect or collate the differences in an importable file format that can be either interactively or in batch mode be pulled in. This file can also be made available for user to edit and his previous configuration be saved for roll back should the import fail or break anything.","closed","","Fernal73","2019-09-21T15:00:12Z","2019-11-08T12:32:31Z"
"","7083","Checkstyle website does not resize to mobile browser screens.","https://checkstyle.sourceforge.io/  Checkstyle website does not render well and resize to mobile browser.  Browsers checked against :+1:  Opera Mini, Google Chrome, Mi Browser.","closed","miscellaneous,","Fernal73","2019-09-21T14:51:49Z","2019-12-03T10:40:56Z"
"","7036","Dates of release if not properly rendering in Firefox","https://checkstyle.org/releasenotes.html  ![image](https://user-images.githubusercontent.com/812984/64079177-24255600-cc99-11e9-8809-10788e174ee6.png)  the same in Chrome  It was good in previous version","closed","miscellaneous,","romani","2019-09-01T16:17:01Z","2019-11-17T23:04:34Z"
"","7465","Remove Google plus links from website","https://checkstyle.org/index.html  We need to remove g+ banner  And any other links to it.","closed","miscellaneous,","romani","2020-01-12T04:47:48Z","2020-01-12T17:29:27Z"
"","7632","Update doc for WhitespaceAround","https://checkstyle.org/config_whitespace.html#WhitespaceAround  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","pbludov","2020-02-24T15:18:43Z","2020-04-03T13:11:47Z"
"","7631","Update doc for WhitespaceAfter","https://checkstyle.org/config_whitespace.html#WhitespaceAfter  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","pbludov","2020-02-24T15:16:45Z","2020-02-28T22:11:49Z"
"","7630","Update doc for TypecastParenPad","https://checkstyle.org/config_whitespace.html#TypecastParenPad  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","pbludov","2020-02-24T15:16:02Z","2020-04-07T11:50:15Z"
"","7629","Update doc for SingleSpaceSeparator","https://checkstyle.org/config_whitespace.html#SingleSpaceSeparator  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","pbludov","2020-02-24T15:15:25Z","2020-03-14T06:25:06Z"
"","7628","Update doc for SeparatorWrap","https://checkstyle.org/config_whitespace.html#SeparatorWrap  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","pbludov","2020-02-24T15:14:39Z","2020-04-15T07:39:48Z"
"","7627","Update doc for ParenPad","https://checkstyle.org/config_whitespace.html#ParenPad  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","pbludov","2020-02-24T15:13:42Z","2020-04-23T15:28:20Z"
"","7626","Update doc for OperatorWrap","https://checkstyle.org/config_whitespace.html#OperatorWrap  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","pbludov","2020-02-24T15:12:54Z","2020-04-03T11:07:50Z"
"","7625","Update doc for NoWhitespaceBefore","https://checkstyle.org/config_whitespace.html#NoWhitespaceBefore  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","pbludov","2020-02-24T15:12:12Z","2020-03-18T14:52:49Z"
"","7624","Update doc for NoWhitespaceAfter","https://checkstyle.org/config_whitespace.html#NoWhitespaceAfter  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","pbludov","2020-02-24T15:11:23Z","2022-05-14T13:12:41Z"
"","7623","Update doc for NoLineWrap","https://checkstyle.org/config_whitespace.html#NoLineWrap  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","pbludov","2020-02-24T15:10:38Z","2020-03-29T13:39:57Z"
"","7622","Update doc for MethodParamPad","https://checkstyle.org/config_whitespace.html#MethodParamPad  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","pbludov","2020-02-24T15:09:36Z","2022-05-05T02:36:02Z"
"","7621","Update doc for GenericWhitespace","https://checkstyle.org/config_whitespace.html#GenericWhitespace  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","pbludov","2020-02-24T15:08:42Z","2020-03-01T13:03:55Z"
"","7620","Update doc for FileTabCharacter","https://checkstyle.org/config_whitespace.html#FileTabCharacter  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","pbludov","2020-02-24T15:07:24Z","2021-01-25T05:11:57Z"
"","7619","Update doc for EmptyLineSeparator","https://checkstyle.org/config_whitespace.html#EmptyLineSeparator  Update example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","open","gsoc first issue,","pbludov","2020-02-24T14:12:06Z","2022-04-23T13:21:12Z"
"","7618","Update doc for EmptyForIteratorPad","https://checkstyle.org/config_whitespace.html#EmptyForIteratorPad  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","pbludov","2020-02-24T14:10:08Z","2021-03-24T13:25:36Z"
"","7617","Update doc for EmptyForInitializerPad","https://checkstyle.org/config_whitespace.html#EmptyForInitializerPad  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","pbludov","2020-02-24T14:09:05Z","2022-05-12T12:58:28Z"
"","7698","update doc for RegexpSinglelineJava","https://checkstyle.org/config_regexp.html#RegexpSinglelineJava  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Please add examples for all properties of Check.  look at referenced commits of #5832, to see what and how should be changed in code.  please play with module/Check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","romani","2020-02-28T14:34:31Z","2020-03-11T21:54:24Z"
"","7697","update doc for RegexpSingleline","https://checkstyle.org/config_regexp.html#RegexpSingleline  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Please add examples for all properties of Check.  look at referenced commits of #5832, to see what and how should be changed in code.  please play with module/Check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","romani","2020-02-28T14:33:44Z","2020-03-29T22:51:19Z"
"","7696","update doc for RegexpOnFilename","https://checkstyle.org/config_regexp.html#RegexpOnFilename  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Please add examples for all properties of Check.  look at referenced commits of #5832, to see what and how should be changed in code.  please play with module/Check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","romani","2020-02-28T14:32:57Z","2020-04-22T13:44:26Z"
"","7695","update doc for RegexpMultiline","https://checkstyle.org/config_regexp.html#RegexpMultiline  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Please add examples for all properties of Check.  look at referenced commits of #5832, to see what and how should be changed in code.  please play with module/Check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","romani","2020-02-28T14:31:56Z","2021-02-14T04:22:12Z"
"","8005","config_naming has inconsistent tag usage","https://checkstyle.org/config_naming.html In the documentation, the `` tag is typically used to mark configuration examples.  ![image](https://user-images.githubusercontent.com/53135010/78029635-819a9600-7393-11ea-86f5-193f466faa5f.png)  However, this is not the case for some of the examples. The `` tag is used instead. ![image](https://user-images.githubusercontent.com/53135010/78029764-ae4ead80-7393-11ea-9a31-a52b9cda54f5.png)  On closer inspection, some of these examples have incorrect syntax as I believe they are not being validated. Self-closing tags like `property` are missing a `/` at the end of the tag. ![image](https://user-images.githubusercontent.com/53135010/78030206-4c427800-7394-11ea-85e3-fbd9614cd691.png)  Hence, I am requesting to: 1. Change the configuration examples to use `` instead of `` 2. Fix all the syntax mistakes inside configuration examples so that they are valid","closed","miscellaneous,","wltan","2020-03-31T13:16:44Z","2020-04-03T13:21:53Z"
"","7596","Update doc for UpperEll","https://checkstyle.org/config_misc.html#UpperEll  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName  please play with module/Check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","timurt","2020-02-23T16:49:31Z","2020-04-06T01:33:32Z"
"","7595","Update doc for UniqueProperties","https://checkstyle.org/config_misc.html#UniqueProperties  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName  please play with module/Check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","timurt","2020-02-23T16:48:46Z","2021-02-15T16:09:05Z"
"","7594","Update doc for UncommentedMain","https://checkstyle.org/config_misc.html#UncommentedMain  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName  please play with module/Check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","timurt","2020-02-23T16:48:01Z","2020-03-10T00:29:26Z"
"","7593","Update doc for Translation","https://checkstyle.org/config_misc.html#Translation  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName  please play with module/Check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","open","gsoc first issue,","timurt","2020-02-23T16:47:17Z","2022-04-23T13:36:14Z"
"","7592","Update doc for TrailingComment","https://checkstyle.org/config_misc.html#TrailingComment  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName  please play with module/Check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","timurt","2020-02-23T16:45:49Z","2022-06-25T07:08:19Z"
"","7591","Update doc for TodoComment","https://checkstyle.org/config_misc.html#TodoComment  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName  please play with module/Check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","timurt","2020-02-23T16:45:02Z","2020-03-01T05:52:01Z"
"","7590","Update doc for OuterTypeFilename","https://checkstyle.org/config_misc.html#OuterTypeFilename  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName  please play with module/Check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","timurt","2020-02-23T16:44:03Z","2020-03-16T18:55:55Z"
"","7589","Update doc for NewlineAtEndOfFile","https://checkstyle.org/config_misc.html#NewlineAtEndOfFile  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName  please play with module/Check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","timurt","2020-02-23T16:42:31Z","2020-03-31T10:31:14Z"
"","7588","Update doc for FinalParameters","https://checkstyle.org/config_misc.html#FinalParameters  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName  please play with module/Check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","timurt","2020-02-23T16:40:32Z","2022-02-20T16:50:09Z"
"","7587","Update doc for DescendantToken","https://checkstyle.org/config_misc.html#DescendantToken  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName  please play with module/Check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","open","gsoc first issue,","timurt","2020-02-23T16:39:13Z","2022-04-23T13:36:54Z"
"","7889","Broken link - AvoidDoubleBraceInitialization","https://checkstyle.org/config_misc.html#AvoidDoubleBraceInitialization does not go to rule's description.","closed","miscellaneous,","zielint0","2020-03-17T22:38:59Z","2020-05-21T09:40:57Z"
"","7694","update doc for NPathComplexity","https://checkstyle.org/config_metrics.html#NPathComplexity  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Please add examples for all properties of Check.  look at referenced commits of #5832, to see what and how should be changed in code.  please play with module/Check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","romani","2020-02-28T14:30:05Z","2020-03-28T09:12:01Z"
"","7693","update doc for JavaNCSS","https://checkstyle.org/config_metrics.html#JavaNCSS  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Please add examples for all properties of Check.  look at referenced commits of #5832, to see what and how should be changed in code.  please play with module/Check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","romani","2020-02-28T14:28:54Z","2020-03-23T11:18:15Z"
"","7692","update doc for CyclomaticComplexity","https://checkstyle.org/config_metrics.html#CyclomaticComplexity  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Please add examples for all properties of Check.  look at referenced commits of #5832, to see what and how should be changed in code.  please play with module/Check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","romani","2020-02-28T14:28:05Z","2020-04-12T10:08:20Z"
"","7691","update doc for ClassFanOutComplexity","https://checkstyle.org/config_metrics.html#ClassFanOutComplexity  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Please add examples for all properties of Check.  look at referenced commits of #5832, to see what and how should be changed in code.  please play with module/Check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","romani","2020-02-28T14:26:50Z","2020-04-14T08:24:09Z"
"","7690","update doc for ClassDataAbstractionCoupling","https://checkstyle.org/config_metrics.html#ClassDataAbstractionCoupling  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Please add examples for all properties of Check.  look at referenced commits of #5832, to see what and how should be changed in code.  please play with module/Check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","romani","2020-02-28T14:25:52Z","2020-05-28T14:12:52Z"
"","7689","update doc for BooleanExpressionComplexity","https://checkstyle.org/config_metrics.html#BooleanExpressionComplexity  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Please add examples for all properties of Check.  look at referenced commits of #5832, to see what and how should be changed in code.  please play with module/Check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","romani","2020-02-28T14:24:37Z","2020-03-10T01:08:24Z"
"","7606","Update doc for WriteTag","https://checkstyle.org/config_javadoc.html#WriteTag  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","baratali","2020-02-23T22:07:18Z","2020-11-12T14:51:20Z"
"","7605","Update doc for SingleLineJavadoc","https://checkstyle.org/config_javadoc.html#SingleLineJavadoc  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","baratali","2020-02-23T22:04:47Z","2021-03-07T00:13:48Z"
"","7604","Update doc for NonEmptyAtclauseDescription","https://checkstyle.org/config_javadoc.html#NonEmptyAtclauseDescription  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","open","gsoc first issue,","baratali","2020-02-23T22:04:05Z","2022-03-24T03:21:30Z"
"","7117","MissingJavadocPackage - file header interferes with javadoc detection","https://checkstyle.org/config_javadoc.html#MissingJavadocPackage  ```` $ cat package-info.java /*  * Copyright (c)   */  /**  * This package contains javadoc.  */ @ParametersAreNonnullByDefault package example;  import javax.annotation.ParametersAreNonnullByDefault;  $ cat TestConfig.xml                        $ java -jar checkstyle-8.25-all.jar -c TestConfig.xml package-info.java Starting audit... [ERROR] //src/main/java/example/package-info.java:9: Missing javadoc for package-info.java file. Audit done. ````  Not expecting the violation as there is a javadoc above the package.","closed","approved,","sdavids","2019-09-28T18:55:22Z","2019-12-03T23:13:44Z"
"","7603","Update doc for MissingJavadocMethod","https://checkstyle.org/config_javadoc.html#MissingJavadocMethod  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","baratali","2020-02-23T22:02:54Z","2020-04-25T12:31:58Z"
"","7602","Update doc for JavadocVariable","https://checkstyle.org/config_javadoc.html#JavadocVariable  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","baratali","2020-02-23T22:01:33Z","2021-03-21T15:13:38Z"
"","7601","Update doc for JavadocType","https://checkstyle.org/config_javadoc.html#JavadocType  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","open","gsoc first issue,","baratali","2020-02-23T22:00:51Z","2022-05-05T15:09:58Z"
"","7600","Update doc for JavadocTagContinuationIndentation","https://checkstyle.org/config_javadoc.html#JavadocTagContinuationIndentation  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","baratali","2020-02-23T22:00:00Z","2020-04-17T11:27:09Z"
"","7599","Update doc for JavadocStyle","https://checkstyle.org/config_javadoc.html#JavadocStyle  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","baratali","2020-02-23T21:58:36Z","2020-04-03T20:03:08Z"
"","7598","Update doc for JavadocMethod","https://checkstyle.org/config_javadoc.html#JavadocMethod  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","open","gsoc first issue,","baratali","2020-02-23T21:54:39Z","2022-04-23T13:35:17Z"
"","7597","Update doc for AtclauseOrder","https://checkstyle.org/config_javadoc.html#AtclauseOrder  We need to have example for each property that we have except for `violateExecutionOnNonTightHtml` to clearly show user how Check works and change behavior when some property is used.  We need to have: default config + example of code that shows how it work. config with `target` override + example code to see difference in comparison with default. config with `tagOrder` override + example code to see difference in comparison with default.   example code should have ""ok"" code and code that  cause violation (with ""/violation"" trailing comment).  Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","baratali","2020-02-23T21:48:36Z","2022-03-24T11:49:59Z"
"","7688","update doc for RedundantImport","https://checkstyle.org/config_imports.html#RedundantImport  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Please add examples for all properties of Check.  look at referenced commits of #5832, to see what and how should be changed in code.  please play with module/Check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","romani","2020-02-28T14:23:26Z","2021-12-17T16:02:39Z"
"","7687","update doc for ImportOrder","https://checkstyle.org/config_imports.html#ImportOrder  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Please add examples for all properties of Check.  look at referenced commits of #5832, to see what and how should be changed in code.  please play with module/Check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","romani","2020-02-28T14:21:33Z","2021-01-29T15:53:21Z"
"","7128","CustomImportOrderCheck.customImportOrderRules does not support the default value","https://checkstyle.org/config_imports.html#CustomImportOrder  In this example: ```  ``` I am trying to allow users to specify their own values, as recommended in [the documentation [1]](https://checkstyle.org/config.html#Properties). This approach requires a default value, and per [the documentation [2]](https://checkstyle.org/config_imports.html#CustomImportOrder_Properties), `{}` is the default.  Expected behavior: `{}` should behave the same as not setting the value at all.  Actual behavior: [checkstyle does not support `{}` [3]](https://github.com/checkstyle/checkstyle/blob/394030d57239730a5cb622baff934a12be3d0693/src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java#L489)  -------  Links 1. https://checkstyle.org/config.html#Properties 2. https://checkstyle.org/config_imports.html 3. https://github.com/checkstyle/checkstyle/blob/394030d57239730a5cb622baff934a12be3d0693/src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java#L488","closed","approved,","scottanderson","2019-09-30T17:29:40Z","2020-04-13T14:50:44Z"
"","7686","update doc for CustomImportOrder","https://checkstyle.org/config_imports.html#CustomImportOrder  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Please add examples for all properties of Check.  look at referenced commits of #5832, to see what and how should be changed in code.  please play with module/Check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","romani","2020-02-28T14:19:55Z","2021-02-14T23:48:52Z"
"","7314","CustomImportOrder: should check empty line separator between import statements but not the ones before import statement","https://checkstyle.org/config_imports.html#CustomImportOrder  ``` /var/tmp $ javac CustomImportOrder.java ```  ``` /var/tmp $ cat config.xml ``` ```xml                              ``` ``` /var/tmp $ cat CustomImportOrder.java ``` ```java package com.example;  import static java.awt.Button.ABORT; import static java.io.File.createTempFile; import static javax.swing.WindowConstants.*;  // comment between import groups  import java.io.File; // should warn import java.io.IOException;   // comment within import group import java.io.InputStream; // should warn import java.io.Reader;  // comment within import group  import javax.swing.JTable; // should warn  class CustomImportOrder { } ``` ``` /var/tmp $ RUN_LOCALE=""-Duser.language=en -Duser.country=US"" /var/tmp $ java $RUN_LOCALE -jar checkstyle-8.27-all.jar -c config.xml CustomImportOrder.java Starting audit... Audit done. ```  ---------------  The lines in `CustomImportOrder.java` commented with `should warn` should trigger violations during checkstyle check. The comments between import statements should take account into since we're checking empty lines between import statements but not the ones before import statement.  --------------","closed","approved,","gmshake","2019-12-05T02:02:17Z","2019-12-21T18:55:54Z"
"","7278","CustomImportOrder: introduce a new message for the violation within import group","https://checkstyle.org/config_imports.html#CustomImportOrder  ``` /var/tmp $ javac CustomImportOrder.java ```  ``` /var/tmp $ cat config.xml ``` ```xml                              ```  ``` /var/tmp $ cat CustomImportOrder.java ``` ```java package com.example;  import java.io.File;   import java.util.Arrays;  class CustomImportOrder { } ```  ``` /var/tmp $ RUN_LOCALE=""-Duser.language=en -Duser.country=US"" /var/tmp $ java $RUN_LOCALE -jar checkstyle-8.26-all.jar \     -c config.xml CustomImportOrder.java Starting audit... [ERROR] /var/tmp/CustomImportOrder.java:6: 'java.util.Arrays' should be separated from previous import group by one line. [CustomImportOrder] Audit done. Checkstyle ends with 1 errors. ```  ---------------  The violation message is misleading as it is the same as the message between different import groups.  I'd like to propose that we introduce a new message for the violation within import group, some one like ```ImportOrderCheck#MSG_SEPARATED_IN_GROUP```.  --------------","closed","new feature,","gmshake","2019-11-22T02:42:34Z","2019-12-13T20:26:56Z"
"","7685","update doc for AvoidStaticImport","https://checkstyle.org/config_imports.html#AvoidStaticImport  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Please add examples for all properties of Check.  look at referenced commits of #5832, to see what and how should be changed in code.  please play with module/Check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","romani","2020-02-28T14:18:54Z","2020-10-04T15:06:14Z"
"","7684","update doc for AvoidStarImport","https://checkstyle.org/config_imports.html#AvoidStarImport  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Please add examples for all properties of Check.  look at referenced commits of #5832, to see what and how should be changed in code.  please play with module/Check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","romani","2020-02-28T14:17:43Z","2020-03-04T07:12:34Z"
"","7064","SuppressWithPlainTextCommentFilter should has influenceFormat property","https://checkstyle.org/config_filters.html#SuppressWithPlainTextCommentFilter  We spoke about it some time ago and become an user raised issue at https://github.com/jqno/equalsverifier/pull/245  SuppressWithPlainTextCommentFilter should support influenceFormat property same as at https://checkstyle.org/config_filters.html#SuppressWithNearbyCommentFilter_Properties , as proof of implementation we need to restore code/comments of suppression at equalsverifier.  This should allow user to use suppression on LineLength Check that is now under Checker (#2116).","closed","medium,","romani","2019-09-15T19:48:26Z","2022-07-21T14:22:56Z"
"","7616","Update doc for VisibilityModifier","https://checkstyle.org/config_design.html#VisibilityModifier   The doc already has some examples, they should be formatted to match the common style.  Update example to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","open","gsoc first issue,","pbludov","2020-02-24T12:45:49Z","2022-03-24T03:20:45Z"
"","7615","Update doc for ThrowsCount","https://checkstyle.org/config_design.html#ThrowsCount  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","pbludov","2020-02-24T12:43:27Z","2020-03-28T14:35:32Z"
"","7614","Update doc for OneTopLevelClass","https://checkstyle.org/config_design.html#OneTopLevelClass  The doc already has some examples, they should be formatted to match the common style.   Update example to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","pbludov","2020-02-24T12:42:27Z","2020-03-08T02:53:33Z"
"","7613","Update doc for MutableException","https://checkstyle.org/config_design.html#MutableException  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","open","gsoc first issue,","pbludov","2020-02-24T12:37:42Z","2022-03-29T12:26:10Z"
"","7612","Update doc for InterfaceIsType","https://checkstyle.org/config_design.html#InterfaceIsType  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","pbludov","2020-02-24T12:36:45Z","2020-03-24T15:45:07Z"
"","7611","Update doc for InnerTypeLast","https://checkstyle.org/config_design.html#InnerTypeLast  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","pbludov","2020-02-24T12:35:23Z","2020-04-23T11:57:06Z"
"","7610","Update doc for HideUtilityClassConstructor","https://checkstyle.org/config_design.html#HideUtilityClassConstructor  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","pbludov","2020-02-24T12:33:37Z","2020-04-07T07:00:10Z"
"","7609","Update doc for FinalClass","https://checkstyle.org/config_design.html#FinalClass  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","pbludov","2020-02-24T12:31:29Z","2020-11-22T14:55:03Z"
"","7608","Update doc for DesignForExtension","https://checkstyle.org/config_design.html#DesignForExtension  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","open","gsoc first issue,","pbludov","2020-02-24T12:29:52Z","2022-04-23T13:34:16Z"
"","7663","Update doc for VariableDeclarationUsageDistance","https://checkstyle.org/config_coding.html#VariableDeclarationUsageDistance  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","strkkk","2020-02-25T14:54:05Z","2021-01-30T15:54:08Z"
"","7662","Update doc for SuperFinalize","https://checkstyle.org/config_coding.html#SuperFinalize  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","strkkk","2020-02-25T14:52:58Z","2022-05-04T19:51:02Z"
"","7661","Update doc for SuperClone","https://checkstyle.org/config_coding.html#SuperClone  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","strkkk","2020-02-25T14:52:28Z","2020-03-11T21:59:29Z"
"","7660","Update doc for StringLiteralEquality","https://checkstyle.org/config_coding.html#StringLiteralEquality  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","strkkk","2020-02-25T14:51:15Z","2020-02-29T13:56:50Z"
"","7659","Update doc for SimplifyBooleanReturn","https://checkstyle.org/config_coding.html#SimplifyBooleanReturn  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","strkkk","2020-02-25T14:50:36Z","2020-03-07T07:42:58Z"
"","7658","Update doc for SimplifyBooleanExpression","https://checkstyle.org/config_coding.html#SimplifyBooleanExpression  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.   ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","strkkk","2020-02-25T14:49:46Z","2020-03-11T04:48:43Z"
"","7657","Update doc for ReturnCount","https://checkstyle.org/config_coding.html#ReturnCount  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","strkkk","2020-02-25T14:48:55Z","2022-02-07T00:58:42Z"
"","7656","Update doc for RequireThis","https://checkstyle.org/config_coding.html#RequireThis  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","strkkk","2020-02-25T14:48:19Z","2021-02-14T08:11:33Z"
"","7655","Update doc for ParameterAssignment","https://checkstyle.org/config_coding.html#ParameterAssignment  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","strkkk","2020-02-25T14:47:25Z","2021-02-26T03:16:06Z"
"","7672","Update doc for OverloadMethodsDeclarationOrder","https://checkstyle.org/config_coding.html#OverloadMethodsDeclarationOrder  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","strkkk","2020-02-25T15:04:12Z","2020-04-14T04:47:01Z"
"","7671","Update doc for NoFinalizer","https://checkstyle.org/config_coding.html#NoFinalizer  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","strkkk","2020-02-25T15:03:10Z","2020-05-15T09:57:35Z"
"","7670","Update doc for NoClone","https://checkstyle.org/config_coding.html#NoClone  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","strkkk","2020-02-25T15:02:38Z","2020-03-04T13:53:40Z"
"","7653","Update doc for NestedTryDepth","https://checkstyle.org/config_coding.html#NestedTryDepth  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","strkkk","2020-02-25T14:39:37Z","2020-03-13T12:08:34Z"
"","7652","Update doc for NestedIfDepth","https://checkstyle.org/config_coding.html#NestedIfDepth  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","strkkk","2020-02-25T14:38:56Z","2020-12-06T07:24:07Z"
"","7651","Update doc for NestedForDepth","https://checkstyle.org/config_coding.html#NestedForDepth  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","strkkk","2020-02-25T14:38:13Z","2020-09-09T17:35:04Z"
"","7669","Update doc for MultipleVariableDeclarations","https://checkstyle.org/config_coding.html#MultipleVariableDeclarations  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","strkkk","2020-02-25T15:01:36Z","2020-11-16T11:18:48Z"
"","7650","Update doc for MultipleStringLiterals","https://checkstyle.org/config_coding.html#MultipleStringLiterals  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","strkkk","2020-02-25T14:37:27Z","2022-03-20T22:58:37Z"
"","7649","Update doc for ModifiedControlVariable","https://checkstyle.org/config_coding.html#ModifiedControlVariable  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","strkkk","2020-02-25T14:36:28Z","2021-03-18T14:33:07Z"
"","7668","Update doc for MissingSwitchDefault","https://checkstyle.org/config_coding.html#MissingSwitchDefault  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","strkkk","2020-02-25T15:00:43Z","2020-02-29T06:19:38Z"
"","7667","Update doc for MissingCtor","https://checkstyle.org/config_coding.html#MissingCtor  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","strkkk","2020-02-25T15:00:05Z","2020-04-29T07:39:12Z"
"","7648","Update doc for MagicNumber","https://checkstyle.org/config_coding.html#MagicNumber  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","strkkk","2020-02-25T14:35:33Z","2020-03-23T19:47:08Z"
"","7666","Update doc for InnerAssignment","https://checkstyle.org/config_coding.html#InnerAssignment  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","strkkk","2020-02-25T14:59:12Z","2020-03-24T13:29:34Z"
"","7647","Update doc for IllegalType","https://checkstyle.org/config_coding.html#IllegalType  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","strkkk","2020-02-25T14:34:37Z","2020-04-10T12:25:08Z"
"","7646","Update doc for IllegalTokenText","https://checkstyle.org/config_coding.html#IllegalTokenText  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","strkkk","2020-02-25T14:33:23Z","2020-03-09T12:32:19Z"
"","7645","Update doc for IllegalToken","https://checkstyle.org/config_coding.html#IllegalToken  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","strkkk","2020-02-25T14:32:46Z","2020-03-05T11:55:27Z"
"","7644","Update doc for IllegalThrows","https://checkstyle.org/config_coding.html#IllegalThrows  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","miscellaneous,","strkkk","2020-02-25T14:31:56Z","2020-09-09T12:01:29Z"
"","7643","Update doc for IllegalInstantiation","https://checkstyle.org/config_coding.html#IllegalInstantiation  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","strkkk","2020-02-25T14:31:18Z","2021-02-07T23:42:50Z"
"","7642","Update doc for IllegalCatch","https://checkstyle.org/config_coding.html#IllegalCatch  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","strkkk","2020-02-25T14:30:34Z","2020-03-10T07:28:33Z"
"","7641","Update doc for HiddenField","https://checkstyle.org/config_coding.html#HiddenField  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","strkkk","2020-02-25T14:29:31Z","2021-02-13T16:12:27Z"
"","7640","Update doc for FallThrough","https://checkstyle.org/config_coding.html#FallThrough  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","strkkk","2020-02-25T14:28:08Z","2020-10-03T20:33:24Z"
"","7639","Update doc for ExplicitInitialization","https://checkstyle.org/config_coding.html#ExplicitInitialization   Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","miscellaneous,","strkkk","2020-02-25T14:27:21Z","2020-09-07T08:40:49Z"
"","7638","Update doc for EqualsHashCode","https://checkstyle.org/config_coding.html#EqualsHashCode  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","strkkk","2020-02-25T14:26:02Z","2020-03-12T12:57:44Z"
"","7637","Update doc for EqualsAvoidNull","https://checkstyle.org/config_coding.html#EqualsAvoidNull  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","strkkk","2020-02-25T14:24:52Z","2020-10-12T01:10:21Z"
"","7665","Update doc for EmptyStatement","https://checkstyle.org/config_coding.html#EmptyStatement  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","strkkk","2020-02-25T14:56:58Z","2020-10-04T15:02:19Z"
"","7636","Update doc for DefaultComesLast","https://checkstyle.org/config_coding.html#DefaultComesLast  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","strkkk","2020-02-25T14:23:06Z","2020-03-19T10:41:38Z"
"","7043","DeclarationOrder: ignore *visibility* modifiers","https://checkstyle.org/config_coding.html#DeclarationOrder  The `DeclarationOrder` check has an `ignoreModifiers` flag which will cause the check to ignore *all* field modifiers. Example: ```sh $ javac Dummy.java $ cat -n Dummy.java      1  final class Dummy {      2      private final int myValue;      3         4      private static final int MY_CONSTANT = 0;      5         6      Dummy(int myValue) {      7          this.myValue = myValue;      8      }         9  } $ cat -n config.xml      1        2        3            4                5                    6                7            8   $ java -jar checkstyle-8.24-all.jar -c config.xml Dummy.java Starting audit... Audit done. ```  In a large code base it's nearly impossible to use this check without `ignoreModifiers`, because the check is not advanced enough to identify all cases in which fields have to be reordered so as to avoid forward references.  However, what one _can_ always do is order all `static` fields before all instance fields. Thus my suggestion: introduce a flag `ignoreVisibilityModifiers` (name TBD) which ignores `public`, `protected` and `private`, but _does_ require that all `static` fields are before all non-`static` fields.  WDYT?","open","","Stephan202","2019-09-07T12:47:02Z","2019-09-08T08:17:58Z"
"","7635","Update doc for DeclarationOrder","https://checkstyle.org/config_coding.html#DeclarationOrder  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","strkkk","2020-02-25T14:22:15Z","2021-02-08T00:03:04Z"
"","7664","Update doc for AvoidInlineConditionals","https://checkstyle.org/config_coding.html#AvoidInlineConditionals  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","strkkk","2020-02-25T14:55:43Z","2020-04-27T08:49:43Z"
"","7584","Update doc for RightCurly","https://checkstyle.org/config_blocks.html#RightCurly  Add examples for each existing config to show what code is ok and what code causes violations.  Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","rdiachenko","2020-02-23T12:27:18Z","2020-03-15T22:50:02Z"
"","7187","RightCurlyCheck: False Positive with SAME or ALONE_OR_SINGLELINE","https://checkstyle.org/config_blocks.html#RightCurly  `RightCulryCheck.java` gives false positives in case of `RightCurlyOption.SAME` and `RightCurlyOptioon.ALONE_OR_SINGLELINE` in case of tokens like `CLASS_DEF`, `METHOOD_DEF`, `ANNOOTATION_DEF` etc.  ``` $ javac YOUR_FILE.java  $ cat test_config_same.xml                                                                     $ cat test_config_alone_or_single.xml                                                                     $ cat TestClass.java  public class TestClass {  	public TestClass() {}; //violation 	 	public void doSomething(){}; //violation }; //violation  $ java -Duser.language=en -Duser.country=US -jar checkstyle-8.26-all.jar \             -c test_config_same.xml TestClass.java  Starting audit... [ERROR] /TestClass.java:3:29: '}' at column 22 should be alone on a line. [RightCurly] [ERROR] /TestClass.java:5:35: '}' at column 28 should be alone on a line. [RightCurly] [ERROR] /TestClass.java:6:1: '}' at column 1 should be alone on a line. [RightCurly] Audit done. Checkstyle ends with 3 errors.  $ java -Duser.language=en -Duser.country=US -jar checkstyle-8.26-all.jar \      -c test_config_alone_or_single.xml TestClass.java  Starting audit... [ERROR] /TestClass.java:3:29: '}' at column 22 should be alone on a line. [RightCurly] [ERROR] /TestClass.java:5:35: '}' at column 28 should be alone on a line. [RightCurly] [ERROR] /TestClass.java:6:1: '}' at column 1 should be alone on a line. [RightCurly] Audit done. Checkstyle ends with 3 errors. ```   As can seen above in case of `RightCurlyOption.SAME` and `RightCurlyOption.ALONE_OR_SINGLELINE` a violation is raised which should not be the case.","closed","approved,","shashvat-kedia","2019-10-11T03:52:34Z","2019-12-26T07:15:50Z"
"","7583","Update doc for NeedBraces","https://checkstyle.org/config_blocks.html#NeedBraces  Add examples for each existing config to show what code is ok and what code causes violations.  Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","rdiachenko","2020-02-23T12:25:41Z","2021-02-15T15:50:55Z"
"","7582","Update doc for LeftCurly","https://checkstyle.org/config_blocks.html#LeftCurly  Add examples for each existing config to show what code is ok and what code causes violations.  Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  NOTE: we just need more examples on different modes of  `option` property https://checkstyle.org/property_types.html#LeftCurlyOption  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","rdiachenko","2020-02-23T12:22:23Z","2022-06-26T04:50:25Z"
"","7581","Add default config and code examples for EmptyCatchBlock","https://checkstyle.org/config_blocks.html#EmptyCatchBlock  This check needs a default config and examples of code that gives violations and that is correct.  Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.   ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","rdiachenko","2020-02-23T12:19:41Z","2021-03-18T14:28:26Z"
"","7580","Update doc for EmptyBlock","https://checkstyle.org/config_blocks.html#EmptyBlock  Add examples for each existing config to show what code is ok and what code causes violations.  Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","rdiachenko","2020-02-23T12:07:28Z","2020-11-13T14:06:48Z"
"","7579","Update doc for AvoidNestedBlocks","https://checkstyle.org/config_blocks.html#AvoidNestedBlocks  Add code examples for check's default configuration (one which produces violations and one without violations). Add a config and examples with configured (non default) allowInSwitchCase property.  Look at referenced commits of #5832, to see what and how should be changed in code.  Please play with module/check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","rdiachenko","2020-02-23T11:56:04Z","2021-01-22T21:35:14Z"
"","7576","update doc for SuppressWarningsHolder","https://checkstyle.org/config_annotation.html#SuppressWarningsHolder  Add example of config for each existing code to show examples of usage. Good example is https://checkstyle.org/config_naming.html#AbstractClassName  please play with module/Check by means of https://checkstyle.org/cmdline.html to understand how it works.  look at referenced commits of #5832, to see what and how should be changed in code.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","romani","2020-02-22T15:27:12Z","2022-07-28T12:51:49Z"
"","7575","update doc for SuppressWarnings","https://checkstyle.org/config_annotation.html#SuppressWarnings  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName  look at referenced commits of #5832, to see what and how should be changed in code.  please play with module/Check by means of https://checkstyle.org/cmdline.html to understand how it works.   ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","open","gsoc first issue,","romani","2020-02-22T15:24:19Z","2022-04-23T13:39:14Z"
"","7574","update doc for PackageAnnotation","https://checkstyle.org/config_annotation.html#PackageAnnotation  Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName  look at referenced commits of #5832, to see what and how should be changed in code.  please play with module/Check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","romani","2020-02-22T15:21:58Z","2020-03-11T22:41:41Z"
"","7573","update doc for MissingOverride","https://checkstyle.org/config_annotation.html#MissingOverride  1) Add example for each existing config to show what code is ok and what code cause violation.     Good example is https://checkstyle.org/config_naming.html#AbstractClassName  look at referenced commits of #5832, to see what and how should be changed in code.  please play with module/Check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","romani","2020-02-22T15:20:23Z","2020-03-11T11:40:40Z"
"","7572","update doc for MissingDeprecated","https://checkstyle.org/config_annotation.html#MissingDeprecated  1) Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName  look at referenced commits of #5832, to see what and how should be changed in code.  please play with module/Check by means of https://checkstyle.org/cmdline.html to understand how it works.  ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","romani","2020-02-22T15:18:23Z","2021-03-22T14:38:59Z"
"","7571","update doc for AnnotationUseStyle","https://checkstyle.org/config_annotation.html#AnnotationUseStyle  1) Add example for each existing config to show what code is ok and what code cause violation. Good example is https://checkstyle.org/config_naming.html#AbstractClassName  2) Please add example with non default value for `trailingArrayComma`   look at referenced commits of #5832, to see what and how should be changed in code.  please play with module/Check by means of https://checkstyle.org/cmdline.html to understand how it works.   ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","open","gsoc first issue,","romani","2020-02-22T15:11:55Z","2022-03-24T03:26:21Z"
"","7570","update doc for AnnotationOnSameLine","https://checkstyle.org/config_annotation.html#AnnotationOnSameLine  add code examples with code that are expected by Check (produce no violations). add example with configured (non default) `tokens` property ([example](https://checkstyle.org/config_blocks.html#EmptyBlock)).  look at referenced commits of #5832, to see what and how should be changed in code.  please play with module/Check by means of https://checkstyle.org/cmdline.html to understand how it works.   ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","romani","2020-02-22T15:06:35Z","2020-04-26T08:43:52Z"
"","7569","update doc for AnnotationLocation to have config first and code sample after","https://checkstyle.org/config_annotation.html#AnnotationLocation  There is no example of default configuration of this Check. Please add. update doc for AnnotationLocation to have config first and code sample after.  Code of documentation is at https://github.com/checkstyle/checkstyle/blob/master/src/xdocs/config_annotation.xml  Good example of documentation structure is at https://checkstyle.org/config_naming.html#AbbreviationAsWordInName  look at referenced commits of #5832, to see what and how should be changed in code.   please play with module/Check by means of https://checkstyle.org/cmdline.html to understand how it works.   ------------  PLEASE READ https://github.com/checkstyle/checkstyle/wiki/Good-practice-on-how-to-update-examples","closed","gsoc first issue,","romani","2020-02-22T15:00:10Z","2020-03-28T15:03:36Z"
"","7396","CLI option '--branch-matching-xpath' is missed in html documentation","https://checkstyle.org/cmdline.html#Command_line_usage there are no information of `-b` option.   ```         @Option(names = {""-b"", ""--branch-matching-xpath""},             description = ""Show Abstract Syntax Tree(AST) branches that match XPath"") ```  feature was added at https://github.com/checkstyle/checkstyle/commit/5ed866347e51cac0a4835d93467908d2910a4b8f is scope of #6660","closed","miscellaneous,","romani","2019-12-24T09:31:43Z","2019-12-24T21:39:01Z"
"","7523","CLI '-s' option does not match by data from '-t'","https://checkstyle.org/cmdline.html#Command_line_usage  ``` $ cat Test.java  public class Test {   public Test() {} }  $ java -jar /var/tmp/checkstyle-8.29-all.jar -t Test.java CLASS_DEF -> CLASS_DEF [1:0] |--MODIFIERS -> MODIFIERS [1:0] |   `--LITERAL_PUBLIC -> public [1:0] |--LITERAL_CLASS -> class [1:7] |--IDENT -> Test [1:13] `--OBJBLOCK -> OBJBLOCK [1:18]     |--LCURLY -> { [1:18]     |--CTOR_DEF -> CTOR_DEF [2:2]     |   |--MODIFIERS -> MODIFIERS [2:2]     |   |   `--LITERAL_PUBLIC -> public [2:2]     |   |--IDENT -> Test [2:9]     |   |--LPAREN -> ( [2:13]     |   |--PARAMETERS -> PARAMETERS [2:14]     |   |--RPAREN -> ) [2:14]     |   `--SLIST -> { [2:16]     |       `--RCURLY -> } [2:17]     `--RCURLY -> } [3:0]  $ java -jar /var/tmp/checkstyle-8.29-all.jar -s 2:17 Test.java  /CLASS_DEF[./IDENT[@text='Test']]/OBJBLOCK/CTOR_DEF[./IDENT[@text='Test']]/SLIST  $ java -jar /var/tmp/checkstyle-8.29-all.jar -s 2:16 Test.java   $  ```  by first command, xpath is printed for parent token `SLIST`, but expected `RCURLY`. by second command, nothing is printed but expected xpath for `SLIST`.","open","xpath,","romani","2020-01-30T23:01:34Z","2020-03-18T14:09:56Z"
"","7288","Resolve xwiki build problem","https://app.wercker.com/checkstyle/checkstyle/runs/build/5ddfc9f68e18590008b4cd07?step=5ddfca2a0df37600080ac3ae  `Could not resolve dependencies for project org.xwiki.commons:xwiki-commons-velocity:jar:12.0-SNAPSHOT: Failure to find org.apache.velocity:velocity-engine-core:jar:2.2-rc-1 in https://repo.maven.apache.org/maven2 was cached in the local repository, resolution will not be reattempted until the update interval of central has elapsed or updates are forced -> [Help 1] org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal on project xwiki-commons-velocity: Could not resolve dependencies for project org.xwiki.commons:xwiki-commons-velocity:jar:12.0-SNAPSHOT: Failure to find org.apache.velocity:velocity-engine-core:jar:2.2-rc-1 in https://repo.maven.apache.org/maven2 was cached in the local repository, resolution will not be reattempted until the update interval of central has elapsed or updates are forced`  no rc artifacts any more - https://mvnrepository.com/artifact/org.apache.velocity/velocity-engine-core  detected by CI: ``` [INFO] XWiki Commons - Velocity ........................... FAILURE [  0.079 s] [INFO] XWiki Commons - Tools - Archiver ................... SKIPPED [INFO] XWiki Commons - Tools - Extension Plugin ........... SKIPPED [INFO] XWiki Commons - Tools - WEBJAR XAR Handlers ........ SKIPPED [INFO] XWiki Commons - Tools - XAR Tools .................. SKIPPED [INFO] XWiki Commons - Tools - XAR Tools - XAR Plugin ..... SKIPPED [INFO] XWiki Commons - Tools - XAR Tools - XAR Handlers ... SKIPPED [INFO] ------------------------------------------------------------------------ [INFO] BUILD FAILURE [INFO] ------------------------------------------------------------------------ [INFO] Total time: 01:33 min [INFO] Finished at: 2019-11-28T13:27:11Z [INFO] Final Memory: 188M/2548M [INFO] ------------------------------------------------------------------------ [ERROR] Failed to execute goal on project xwiki-commons-velocity: Could not resolve dependencies for project org.xwiki.commons:xwiki-commons-velocity:jar:12.0-SNAPSHOT: Failure to find org.apache.velocity:velocity-engine-core:jar:2.2-rc-1 in https://repo.maven.apache.org/maven2 was cached in the local repository, resolution will not be reattempted until the update interval of central has elapsed or updates are forced -> [Help 1] org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal on project xwiki-commons-velocity: Could not resolve dependencies for project org.xwiki.commons:xwiki-commons-velocity:jar:12.0-SNAPSHOT: Failure to find org.apache.velocity:velocity-engine-core:jar:2.2-rc-1 in https://repo.maven.apache.org/maven2 was cached in the local repository, resolution will not be reattempted until the update interval of central has elapsed or updates are forced     at org.apache.maven.lifecycle.internal.LifecycleDependencyResolver.getDependencies (LifecycleDependencyResolver.java:249)     at org.apache.maven.lifecycle.internal.LifecycleDependencyResolver.resolveProjectDependencies (LifecycleDependencyResolver.java:145)     at org.apache.maven.lifecycle.internal.MojoExecutor.ensureDependenciesAreResolved (MojoExecutor.java:246)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:200)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:154)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:146)     at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)     at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)     at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:51)     at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)     at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:309)     at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:194)     at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:107)     at org.apache.maven.cli.MavenCli.execute (MavenCli.java:955)     at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:290)     at org.apache.maven.cli.MavenCli.main (MavenCli.java:194)     at sun.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)     at sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke (Method.java:498)     at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:289)     at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:229)     at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:415)     at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:356) Caused by: org.apache.maven.project.DependencyResolutionException: Could not resolve dependencies for project org.xwiki.commons:xwiki-commons-velocity:jar:12.0-SNAPSHOT: Failure to find org.apache.velocity:velocity-engine-core:jar:2.2-rc-1 in https://repo.maven.apache.org/maven2 was cached in the local repository, resolution will not be reattempted until the update interval of central has elapsed or updates are forced     at org.apache.maven.project.DefaultProjectDependenciesResolver.resolve (DefaultProjectDependenciesResolver.java:209)     at org.apache.maven.lifecycle.internal.LifecycleDependencyResolver.getDependencies (LifecycleDependencyResolver.java:223)     at org.apache.maven.lifecycle.internal.LifecycleDependencyResolver.resolveProjectDependencies (LifecycleDependencyResolver.java:145)     at org.apache.maven.lifecycle.internal.MojoExecutor.ensureDependenciesAreResolved (MojoExecutor.java:246)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:200)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:154)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:146)     at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)     at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)     at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:51)     at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)     at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:309)     at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:194)     at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:107)     at org.apache.maven.cli.MavenCli.execute (MavenCli.java:955)     at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:290)     at org.apache.maven.cli.MavenCli.main (MavenCli.java:194)     at sun.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)     at sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke (Method.java:498)     at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:289)     at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:229)     at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:415)     at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:356) Caused by: org.eclipse.aether.resolution.DependencyResolutionException: Failure to find org.apache.velocity:velocity-engine-core:jar:2.2-rc-1 in https://repo.maven.apache.org/maven2 was cached in the local repository, resolution will not be reattempted until the update interval of central has elapsed or updates are forced     at org.eclipse.aether.internal.impl.DefaultRepositorySystem.resolveDependencies (DefaultRepositorySystem.java:355)     at org.apache.maven.project.DefaultProjectDependenciesResolver.resolve (DefaultProjectDependenciesResolver.java:202)     at org.apache.maven.lifecycle.internal.LifecycleDependencyResolver.getDependencies (LifecycleDependencyResolver.java:223)     at org.apache.maven.lifecycle.internal.LifecycleDependencyResolver.resolveProjectDependencies (LifecycleDependencyResolver.java:145)     at org.apache.maven.lifecycle.internal.MojoExecutor.ensureDependenciesAreResolved (MojoExecutor.java:246)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:200)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:154)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:146)     at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)     at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)     at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:51)     at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)     at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:309)     at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:194)     at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:107)     at org.apache.maven.cli.MavenCli.execute (MavenCli.java:955)     at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:290)     at org.apache.maven.cli.MavenCli.main (MavenCli.java:194)     at sun.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)     at sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke (Method.java:498)     at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:289)     at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:229)     at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:415)     at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:356) Caused by: org.eclipse.aether.resolution.ArtifactResolutionException: Failure to find org.apache.velocity:velocity-engine-core:jar:2.2-rc-1 in https://repo.maven.apache.org/maven2 was cached in the local repository, resolution will not be reattempted until the update interval of central has elapsed or updates are forced     at org.eclipse.aether.internal.impl.DefaultArtifactResolver.resolve (DefaultArtifactResolver.java:422)     at org.eclipse.aether.internal.impl.DefaultArtifactResolver.resolveArtifacts (DefaultArtifactResolver.java:224)     at org.eclipse.aether.internal.impl.DefaultRepositorySystem.resolveDependencies (DefaultRepositorySystem.java:338)     at org.apache.maven.project.DefaultProjectDependenciesResolver.resolve (DefaultProjectDependenciesResolver.java:202)     at org.apache.maven.lifecycle.internal.LifecycleDependencyResolver.getDependencies (LifecycleDependencyResolver.java:223)     at org.apache.maven.lifecycle.internal.LifecycleDependencyResolver.resolveProjectDependencies (LifecycleDependencyResolver.java:145)     at org.apache.maven.lifecycle.internal.MojoExecutor.ensureDependenciesAreResolved (MojoExecutor.java:246)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:200)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:154)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:146)     at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)     at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)     at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:51)     at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)     at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:309)     at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:194)     at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:107)     at org.apache.maven.cli.MavenCli.execute (MavenCli.java:955)     at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:290)     at org.apache.maven.cli.MavenCli.main (MavenCli.java:194)     at sun.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)     at sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke (Method.java:498)     at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:289)     at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:229)     at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:415)     at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:356) Caused by: org.eclipse.aether.transfer.ArtifactNotFoundException: Failure to find org.apache.velocity:velocity-engine-core:jar:2.2-rc-1 in https://repo.maven.apache.org/maven2 was cached in the local repository, resolution will not be reattempted until the update interval of central has elapsed or updates are forced     at org.eclipse.aether.internal.impl.DefaultUpdateCheckManager.newException (DefaultUpdateCheckManager.java:233)     at org.eclipse.aether.internal.impl.DefaultUpdateCheckManager.checkArtifact (DefaultUpdateCheckManager.java:208)     at org.eclipse.aether.internal.impl.DefaultArtifactResolver.gatherDownloads (DefaultArtifactResolver.java:563)     at org.eclipse.aether.internal.impl.DefaultArtifactResolver.performDownloads (DefaultArtifactResolver.java:481)     at org.eclipse.aether.internal.impl.DefaultArtifactResolver.resolve (DefaultArtifactResolver.java:399)     at org.eclipse.aether.internal.impl.DefaultArtifactResolver.resolveArtifacts (DefaultArtifactResolver.java:224)     at org.eclipse.aether.internal.impl.DefaultRepositorySystem.resolveDependencies (DefaultRepositorySystem.java:338)     at org.apache.maven.project.DefaultProjectDependenciesResolver.resolve (DefaultProjectDependenciesResolver.java:202)     at org.apache.maven.lifecycle.internal.LifecycleDependencyResolver.getDependencies (LifecycleDependencyResolver.java:223)     at org.apache.maven.lifecycle.internal.LifecycleDependencyResolver.resolveProjectDependencies (LifecycleDependencyResolver.java:145)     at org.apache.maven.lifecycle.internal.MojoExecutor.ensureDependenciesAreResolved (MojoExecutor.java:246)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:200)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:154)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:146)     at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)     at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)     at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:51)     at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)     at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:309)     at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:194)     at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:107)     at org.apache.maven.cli.MavenCli.execute (MavenCli.java:955)     at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:290)     at org.apache.maven.cli.MavenCli.main (MavenCli.java:194)     at sun.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)     at sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke (Method.java:498)     at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:289)     at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:229)     at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:415)     at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:356) ```  Root cause: xwiki project do version upgrade and looks like it is still in progress.","closed","miscellaneous,","romani","2019-11-28T20:17:42Z","2019-11-29T21:26:47Z"
"","7224","Integrate dependabot service","https://app.dependabot.com/accounts/checkstyle/projects/106037 https://dependabot.com/docs/config-file/  Rationale: we do such updates manually now (only detection of version and notification is automated now), we always try to update to new versions. So this service will remove bunch of manual work.  even there problems to use it conveniently: https://github.com/dependabot/dependabot-core/issues/1460 https://github.com/dependabot/dependabot-core/issues/1459  ![Screenshot from 2019-10-22 22-49-37](https://user-images.githubusercontent.com/812984/67952352-6b04ce80-fbaa-11e9-98d9-24e5cd8764f0.png)   We can start using it, as it is promising and only need minor enhancements, that I hope eventually be done.  Right now service create branches in our repo, so we will need amend commits (push force).  As part of this issue it is required: - host config file in our repo to be able to define prefix - update our allowed list of prefixes to have ""dependency:"" prefix and configure it dependabot. - update our commit validation to skip dependabot user commits from validation while defined above issues are not fixed.    ATTENTION: We probably can ease commit rules for dependabot user and allow it to have multiline commit messages (while it is not allowed to be configured). As we are not going to print such commit messages in releasenotes we kind of do not care that is written in description of commit message.","closed","miscellaneous,","romani","2019-10-23T06:11:23Z","2019-12-10T03:30:23Z"
"","7913","Use spoon project to validate our code","http://spoon.gforge.inria.fr/ https://github.com/INRIA/spoon  We need to figureout how to use it and for what types of validation to to do less during code review.","open","approved,","romani","2020-03-20T13:30:05Z","2020-03-23T11:00:08Z"
"","7256","Exclude a path / package","Hi Checkstyle Community,  Sorry to post this here, but I did not know a better place. And Google did not help. The Checkstyle Maven plugin supports an  tag for ignoring paths, we use it to prevent scanning test code. Is it possible to effect the same outcome from the checkstyle.xml configuration for IDE plugin?  I'm using the checkstyle plugin for VS Code, and it's scanning unit test sources that our maven file does not scan. So I'm seeing errors the ""build"" does not see. The argument for scanning tests too is not really pertinent to this. I've made the case internally to check all source code.  Many thanks in advance for any helpful suggestions.  Alan","closed","","alan-hwp","2019-11-15T17:32:01Z","2019-11-16T02:53:34Z"
"","7917","Website Template Change","Hey , I am new to github and being a java coder, I just came across your project. The first thing I researched was browsing the website. I have a suggestion if it adds any value to your project. The webpage has an innovative logo but the font (red color) does not go well with the theme. In fact I feel, that instead of using white and grey as the background colors, you must go for black and grey, they not only add that professional feature to your website but also adds the dark mode feature to your website. If you find my issue worth consideration, I would love to work on it.","open","","satakshigarg","2020-03-20T18:13:50Z","2020-03-23T09:03:13Z"
"","7558","Can MemberName ignore `final` variable names？","here is the code to checked: ``` public class Test{     public final int TEST = 1; } ``` And when checkstyle check it, issue is : `Name 'TEST' must match pattern '(^[a-z][a-z0-9][a-zA-Z0-9]*$)'.`  However, I think final variable names should be all caps, and i don't know how to ignore that.  Can you help me?","closed","","cyw3","2020-02-19T08:24:58Z","2020-02-25T06:14:08Z"
"","7433","minor: bump year to 2020 in headers","Happy New Years.  Yearly year increase for the new year.  By command from https://github.com/checkstyle/checkstyle/wiki/How-to-make-a-release#before-starting","closed","","rnveach","2020-01-01T22:41:44Z","2020-01-02T19:43:18Z"
"","7699","Discussion forum and Mailing list is broken","GSoC Mailing lists and discussion forum is broken :   _Message Shown_  `This group either doesn't exist, or you don't have permission to access it. If you're sure this group exists, contact the Owner of the group and ask them to give you access.` please review.","closed","","Abhishek-kumar09","2020-02-28T14:36:12Z","2020-02-29T16:42:15Z"
"","7833","Create code of conduct","GitHub and GSOC suggest to have code if conduct. GitHub at https://github.com/checkstyle/checkstyle/community  Some links: https://opensource.google/docs/releasing/template/CODE_OF_CONDUCT/ https://www.contributor-covenant.org/version/1/4/code-of-conduct/ , or https://www.contributor-covenant.org/version/2/0/code_of_conduct/ , or any latest. https://adainitiative.org/2014/02/18/howto-design-a-code-of-conduct-for-your-community/ https://www.rust-lang.org/policies/code-of-conduct https://opensource.guide/code-of-conduct/","closed","miscellaneous,","romani","2020-03-12T03:13:08Z","2020-04-28T15:53:21Z"
"","7309","Fix Teamcity inspections issues","from TC - https://teamcity.jetbrains.com/viewLog.html?buildId=2662273&tab=Inspection&buildTypeId=Checkstyle_IdeaInspectionsMaster  > This server has been updated to 2019.2 RC version on 28th of November  >IntelliJ Inspections and Duplicates Engine: Bundled Intellij Idea 2019.3  Violations: Code style issues - Constant on the wrong side of comparison (Errors) (2247)  General -  Duplicated code fragment (30) -  Redundant suppression (Errors) (8)  JUnit -  Misordered 'assertEquals()' arguments (Errors) (1)  Verbose or redundant code constructs -  Redundant Collection operation (1) -  Redundant type cast (Errors) (7) -  Unnecessarily escaped character (1)","closed","miscellaneous,","romani","2019-12-04T22:51:09Z","2019-12-26T17:11:40Z"
"","7509","PMD warnings about duplicate rules","from https://travis-ci.org/checkstyle/checkstyle/jobs/642243186#L596  ``` [INFO] --- maven-pmd-plugin:3.12.0:pmd (pmd) @ checkstyle --- [WARNING] The rule ClassNamingConventions is referenced multiple times  in ""PMD ruleset for Checkstyle"". Only the last rule configuration is used. [WARNING] The rule CollapsibleIfStatements is referenced multiple times  in ""PMD ruleset for Checkstyle"". Only the last rule configuration is used. [WARNING] The rule ClassNamingConventions is referenced multiple times  in ""PMD ruleset for Checkstyle"". Only the last rule configuration is used. [WARNING] The rule ClassNamingConventions is referenced multiple times  in ""PMD ruleset for Checkstyle"". Only the last rule configuration is used. [WARNING] The rule CollapsibleIfStatements is referenced multiple times  in ""PMD ruleset for Checkstyle"". Only the last rule configuration is used. [WARNING] The rule ClassNamingConventions is referenced multiple times  in ""PMD ruleset for Checkstyle"". Only the last rule configuration is used. [WARNING] Auxclasspath entry file:/home/travis/build/checkstyle/checkstyle/target/test-classes  doesn't exist, ignoring it [WARNING] Use of deprecated attribute 'ClassOrInterfaceDeclaration/@Image'  in XPath query ```","closed","miscellaneous,","romani","2020-01-27T16:45:28Z","2020-01-28T22:43:21Z"
"","7487","Add method hasChildren to DetailAST","From https://github.com/sevntu-checkstyle/sevntu.checkstyle/pull/794#issue-361850509  The most common usage of the method [getChildCount](https://github.com/checkstyle/checkstyle/blob/master/src/main/java/com/puppycrawl/tools/checkstyle/api/DetailAST.java#L36) is to compare the count to zero. For [example](https://github.com/checkstyle/checkstyle/blob/master/src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyForInitializerPadCheck.java#L112). This is not efficient nor readable. Both issues can be fixed by adding a new method to the `DetailAST` interface: ```java default boolean hasChildren() {     return getFirstChild() != null; } ```","closed","miscellaneous,","pbludov","2020-01-16T20:19:19Z","2020-01-26T13:05:02Z"
"","7211","doc: fix config sample for SuppressWithNearbyCommentFilter","from https://github.com/checkstyle/sonar-checkstyle/pull/245#issuecomment-544212422","closed","","romani","2019-10-20T01:50:46Z","2019-10-20T17:07:05Z"
"","7957","Update type definitions for OneTopLevelClass","From https://github.com/checkstyle/checkstyle/pull/7905#discussion_r396111327  Currently, our logic defines class, interface, and enum types as candidates for top-level types. It was mentioned in https://github.com/checkstyle/checkstyle/pull/7905#discussion_r396111327 that [annotation type declarations](https://docs.oracle.com/javase/tutorial/java/annotations/declaring.html) should be considered as well.  Current Behavior: ``` D:\checkstyletest>type config.xml                           D:\checkstyletest>type test\*.java  @interface ClassPreamble {    String author();    String date();    int currentRevision() default 1;    String lastModified() default ""N/A"";    String lastModifiedBy() default ""N/A"";    // Note use of array    String[] reviewers(); }  class ExtraClass {  }  interface ExtraInterface {  } D:\checkstyletest>java -jar -Duser.language=en -Duser.country=US \    checkstyle-8.30-all.jar -c config.xml test\*.java  Starting audit... [ERROR] D:\checkstyletest\test\Test.java:15:  Top-level class ExtraInterface has to reside in its own source file. [OneTopLevelClass] Audit done. ``` The annotation tag is not being counted as a top-level declaration, so `ExtraClass` is seen as the top-level class and only `ExtraInterface` is a violation.  The expected behavior should be that `ClassPreamble` is the top-level definition, while both `ExtraClass` and `ExtraInterface` are considered violations.  If added, the [documentation](https://checkstyle.org/config_design.html#OneTopLevelClass) will have to be updated as well. ~~More interestingly, the [reference](https://docs.oracle.com/javase/specs/jls/se11/html/jls-7.html#jls-7.6) cited by the documentation says that **only classes or interfaces are considered top-level types**.~~ > _A top level type declaration declares a top level class type (§8 (Classes)) or a top level interface type (§9 (Interfaces))._  The same thing can be found for the [Java 14 documentation](https://docs.oracle.com/javase/specs/jls/se14/html/jls-7.html#jls-7.6) as well.  ~~We need to sort out the discrepancy here. Can annotation types and enums be considered top-level types? If so, we might want to tweak the documentation as well to note the difference between the check behavior and the Java Language Specification.~~ (resolved, see next comment)","closed","new feature,","wltan","2020-03-25T16:20:11Z","2020-04-24T11:54:06Z"
"","7880","infra: update wercker to print content of .ci-temp and git status","from https://github.com/checkstyle/checkstyle/pull/7870#issuecomment-599868948 no validation, just printing status.","closed","","romani","2020-03-17T13:45:50Z","2020-11-07T15:59:28Z"
"","7812","OneTopLevelClass: Improve data structure efficiency","From https://github.com/checkstyle/checkstyle/pull/7790#discussion_r389439081  In PR #7790 we changed `OneTopLevelClass` to log violations using the DetailAST node itself, rather than just the line number. However that is a very minimal change to the check functionality and was more focused on the changes to unit/integration/regression testing, where we now log the column number as well.  There is a bit of inefficiency in the way this check works. In particular, the problem is that we are using a `TreeMap` to store our (potential) violations. Some observations: 1. Although a `TreeMap` can help us to maintain that the nodes are in the correct order, there is no need to do this as the AST traversal in `beginTree` should already visit all of the nodes in the correct order. As long as we store the nodes in a way that preserves this ""traversal order"", that is sufficient for our purposes. 2. There is no longer a need to store the type name together with the node, as we can simply derive the type name from the node itself.  Hence, I am suggesting to replace the usage of `SortedMap` and `TreeMap` with a more appropriate data structure such as `Queue`. This will reduce the runtime of `beginTree` from O(m + n log n) to just O(m) for m nodes and n violations, and also removes the redundant string storage for type name.  Open to more ideas on even better ways to implement this, maybe just use the node given in `finishTree` and traverse it again?","closed","miscellaneous,","wltan","2020-03-09T15:18:17Z","2020-04-03T13:22:32Z"
"","7779","JavadocStyleCheck incorrectly allows ""style"" tag","From https://github.com/checkstyle/checkstyle/pull/7717#issuecomment-593454809 `style` is one of the `ALLOWED_TAGS` in JavadocStyleCheck: https://github.com/checkstyle/checkstyle/blob/12c6e69fe7de3d462f5ca117dc4a6f0ba51a1d7c/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java#L209-L218  However this is not reflected in the javadoc or xdoc: https://checkstyle.org/config_javadoc.html#JavadocStyle  On closer analysis, it seems that `` is not even a valid javadoc tag.  ``` D:\checkstyletest>type config.xml                          D:\checkstyletest>cd test  D:\checkstyletest\test>type Test.java /**  * First sentence.  *  * this is a valid tag  * this is also a valid tag  * this is not a valid tag  * is this a valid tag?  *  */ public class Test {} D:\checkstyletest\test>javadoc --version javadoc 11.0.5  D:\checkstyletest\test>javadoc Test.java Loading source file Test.java... Constructing Javadoc information... Standard Doclet version 11.0.5 Building tree for all the packages and classes... Test.java:6: error: unknown tag: foo  * this is not a valid tag    ^ Test.java:6: error: unknown tag: foo  * this is not a valid tag                                ^ Test.java:7: error: unknown tag: style  * is this a valid tag?    ^ Test.java:7: error: unknown tag: style  * is this a valid tag?                               ^ Generating .\Test.html... Generating .\package-summary.html... Generating .\package-tree.html... Generating .\constant-values.html... Building index for all the packages and classes... Generating .\overview-tree.html... Generating .\index-all.html... Building index for all classes... Generating .\allclasses-index.html... Generating .\allpackages-index.html... Generating .\deprecated-list.html... Building index for all classes... Generating .\allclasses.html... Generating .\allclasses.html... Generating .\index.html... Generating .\help-doc.html... 4 errors  D:\checkstyletest\test>cd ..  D:\checkstyletest>java -jar -Duser.language=en -Duser.country=US checkstyle-8.30-all.jar -c config.xml test\Test.java Starting audit... [ERROR] D:\checkstyletest\test\Test.java:6:32: Extra HTML tag found:  [JavadocStyle] Audit done. Checkstyle ends with 1 errors. ```  Since javadoc does not recognize the `style` tag, I would expect that Checkstyle raises a violation for it as well. This should be achievable by dropping `style` from `ALLOWED_TAGS`.","closed","approved,","wltan","2020-03-04T05:45:03Z","2020-03-11T04:14:24Z"
"","7528","minor: add Check with id noDefaultCommentWithOtherVisibility","from https://github.com/checkstyle/checkstyle/pull/7485#discussion_r373470333  tested: ``` ✔ ~/java/github/romani/checkstyle [minor-extra-regexp-check L|✚ 1]  $ git diff diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/xpath/ElementNode.java  b/src/main/java/com/puppycrawl/tools/checkstyle/xpath/ElementNode.java index 6eefd8e..15a5622 100644 --- a/src/main/java/com/puppycrawl/tools/checkstyle/xpath/ElementNode.java +++ b/src/main/java/com/puppycrawl/tools/checkstyle/xpath/ElementNode.java @@ -374,7 +374,7 @@ public class ElementNode extends AbstractNode {           * Create an iterator over the ""following"" axis.           * @param start the initial context node.           */ -        /* default */ FollowingEnumeration(NodeInfo start) { +        /* default */ public FollowingEnumeration(NodeInfo start) {              siblingEnum = start.iterateAxis(AxisInfo.FOLLOWING_SIBLING);          }  $ mvn compile antrun:run@ant-phase-verify .... execute:  [echo] Checkstyle started (checkstyle_checks.xml): 01/02/2020 07:36:47 PM [checkstyle] Running Checkstyle  on 1105 files [checkstyle] [ERROR] /home/rivanov/java/github/romani/checkstyle/ src/main/java/com/puppycrawl/tools/checkstyle/xpath/ElementNode.java:377:  Default comment marker should not be used if other visibility is defined  [noDefaultCommentWithOtherVisibility] [checkstyle] [ERROR] /home/rivanov/java/github/romani/checkstyle/ src/main/java/com/puppycrawl/tools/checkstyle/xpath/ElementNode.java:377:23:  Redundant 'public' modifier.  [RedundantModifier] ```","closed","","romani","2020-02-02T03:43:08Z","2020-11-07T15:59:35Z"
"","7405","Add a test to make sure that all new checks have XpathRegressionTest","From https://github.com/checkstyle/checkstyle/pull/7401#commitcomment-36586626  We already have `XpathRegressionTest`. This test should be extended to ensure that all modules either have an xpath regression test or are included in the ""not yet compatible"" list.  The list of incompatible checks should be in sync with `SuppressionXpathFilter` documentation.","closed","miscellaneous,","pbludov","2019-12-27T18:21:09Z","2020-01-06T04:06:24Z"
"","7398","doc: fix treeWithJavadoc command line option","From https://github.com/checkstyle/checkstyle/pull/7397#discussion_r361214509  fix for a minor typo","closed","","pbludov","2019-12-24T19:15:22Z","2019-12-24T21:37:24Z"
"","7047","Javadoc: treat multiple *** as one LEADING_ASTERISK","From https://github.com/checkstyle/checkstyle/pull/7046#issuecomment-529742681  /var/tmp $ javac TestClass.java (no output)  /var/tmp $ cat TestClass.java ```     /***** First line.      ***** Second line.       * */ public class TestClass{} ``` javadoc TestClass.java ``` Loading source file TestClass.java... Constructing Javadoc information... Standard Doclet version 11.0.4 Building tree for all the packages and classes... Generating ./TestClass.html... ```  Generated documentation: ``` public class TestClass extends java.lang.Object  First line. Second line. ```  $ java -jar checkstyle -J TestClass.java ``` `--JAVADOC -> JAVADOC [1:7]     |--LEADING_ASTERISK -> * [1:7]     |--TEXT -> ** First line. [1:8]     |--NEWLINE -> \n [1:22]     |--LEADING_ASTERISK ->      * [2:0]     |--TEXT -> **** Second line.  [2:6]     |--NEWLINE -> \n [2:24]     |--LEADING_ASTERISK ->      * [3:0]     |--TEXT ->   [3:6]     `--EOF ->  [3:7] ```  *Expected* tree: ``` `--JAVADOC -> JAVADOC [1:7]     |--LEADING_ASTERISK -> *** [1:7]     |--TEXT ->  First line. [1:10]     |--NEWLINE -> \n [1:22]     |--LEADING_ASTERISK ->      ***** [2:0]     |--TEXT ->  Second line.  [2:10]     |--NEWLINE -> \n [2:24]     |--LEADING_ASTERISK ->      * [3:0]     |--TEXT ->   [3:6]     `--EOF ->  [3:7] ```  As [the spec](https://docs.oracle.com/en/java/javase/11/docs/specs/doc-comment-spec.html) say:  >Leading Asterisks When a documentation comment is read, leading asterisks `(*)` on each line are discarded, and blanks and tabs that precede the initial asterisks `(*)` are also discarded. If you omit the leading asterisk on a line, then the leading white space is no longer removed so that you can paste code examples directly into a documentation comment inside a <pre> tag with its indentation preserved. Spaces are interpreted by browsers more uniformly than tabs. Indentation is relative to the left margin (rather than the separator `/**` or <pre> tag).  Out parser currently recognises only first `*` as leading asterisks, passing the rest to the `TEXT` element. This is not correct and should be fixed.","open","antlr-javadoc,","pbludov","2019-09-10T05:47:43Z","2020-04-19T13:49:31Z"
"","7810","Add pmd to no-error validation build item","from https://github.com/checkstyle/checkstyle/issues/7534#issuecomment-596064055   we need to create no-error build item for pmd master:HEAD code, example of how we do this for other projects - https://github.com/checkstyle/checkstyle/blob/master/.ci/wercker.sh#L51  command should be used `mvn checkstyle:check` (lets try to avoid mvnw as it might take extra time for download for each build)   FYI: together with https://github.com/checkstyle/contribution/issues/456 it will be good protection from regressions in future in this project.","closed","miscellaneous,","romani","2020-03-09T13:13:32Z","2020-03-20T04:58:29Z"
"","7815","upgrade Apex project to use latest checkstyle version","from https://app.wercker.com/checkstyle/checkstyle/runs/build/5e665a287b63df001aea239d?step=5e665a6c1ccc9800088c9e74  `[ERROR] Failed to execute goal org.apache.maven.plugins:maven-checkstyle-plugin:3.1.1:check (default-cli) on project apex: Failed during checkstyle configuration: cannot initialize module TreeWalker - TreeWalker is not allowed as a parent of LineLength Please review 'Parent Module' section for this Check in web documentation if Check is standard. -> [Help 1] org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.maven.plugins:maven-checkstyle-plugin:3.1.1:check (default-cli) on project apex: Failed during checkstyle configuration`","open","approved,","romani","2020-03-09T19:23:27Z","2020-03-09T19:50:41Z"
"","7375","restore pitest coverage at JavadocDetailNodeParser","from https://app.circleci.com/jobs/github/checkstyle/checkstyle/32205 :  ``` $ ./.ci/pitest.sh pitest-tree-walker   Diff: --- target/ignored.txt	2019-12-11 22:48:14.031612023 +0000 +++ target/actual.txt	2019-12-11 22:48:14.027612014 +0000 @@ -1,3 +1,4 @@ +JavadocDetailNodeParser.java.html:        parser.removeErrorListeners();  TreeWalker.java.html:            if (!commentChecks.isEmpty()) {  TreeWalker.java.html:            if (!ordinaryChecks.isEmpty()) {  TreeWalker.java.html:            if (filters.isEmpty()) { Difference between 'Actual' and 'Ignore' lists is detected, lists should be equal. build will be failed. Exited with code exit status 1 CircleCI received exit code 1 ```","closed","approved,","romani","2019-12-12T16:28:48Z","2019-12-12T16:35:56Z"
"","7298","Output file is not generated when Xpath suppression fails.","From  https://github.com/checkstyle/checkstyle/issues/6885#issuecomment-560483861  ```java package cstests;  public interface TestMagicNumber {    static byte[] getAsciiRotator() {     byte[] rotation = new byte[95 * 2];     for (byte i = ' '; i","closed","","Fernal73","2019-12-03T00:02:40Z","2019-12-05T17:35:59Z"
"","7997","Issue #7996: update regexp of RegexpSingleline at checkstyle_non_main…","fixses #7996   tested: ``` $ mvn compile antrun:run@ant-phase-verify  [checkstyle] Running Checkstyle  on 2033 files [checkstyle] [ERROR] /home/rivanov/java/github/ checkstyle/checkstyle/codeship-steps.yml:10: Line should not be longer than 100 symbols [RegexpSingleline] [INFO] ------------------------------------------------------------------------ [INFO] BUILD FAILURE [INFO] ------------------------------------------------------------------------ [INFO] Total time:  9.202 s ```","closed","","romani","2020-03-30T00:11:53Z","2020-04-05T22:29:23Z"
"","7709","Issue #7684: update doc for AvoidStarImport","Fixes Issue: #7684   ![avoid star impoer](https://user-images.githubusercontent.com/23631699/75631749-293e7000-5bfe-11ea-8da0-6f1d0e244e08.PNG)  Output of default example:      $ cat config.xml                                                         $ cat Test.java     import java.util.Scanner;         // OK     import java.io.*;                 // violation     import static java.lang.Math.*;   // violation      $ java -jar checkstyle-8.29-all.jar -c config.xml Test.java     Starting audit...     [ERROR] D:\OpenSource\TestCommit\Test.java:2: Using the '.*' form of import should be avoided - java.io.*. [AvoidStarImport]     [ERROR] D:\OpenSource\TestCommit\Test.java:3: Using the '.*' form of import should be avoided - java.lang.Math.*. [AvoidStarImport]     Audit done.     Checkstyle ends with 2 errors.   Output of non-default example:      $ cat config.xml                                                                     $ cat Test.java      import java.util.Scanner;         // OK     import java.io.*;                 // OK     import static java.lang.Math.*;   // OK     import java.util.*;               // violation      $ java -jar checkstyle-8.29-all.jar -c config.xml Test.java     Starting audit...     [ERROR] D:\OpenSource\TestCommit\Test.java:4: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]     Audit done.     Checkstyle ends with 1 errors.  Output of allowClassImports example:      $ cat config.xml                                                                     $ cat Test.java      import java.util.Scanner;         // OK     import java.io.*;                 // OK     import static java.lang.Math.*;   // violation     import java.util.*;               // OK      $ java -jar checkstyle-8.29-all.jar -c config2.xml Test2.java      Starting audit...     [ERROR] D:\OpenSource\TestCommit\Test.java:3: Using the '.*' form of import should be avoided - java.lang.Math.*. [AvoidStarImport]     Audit done.     Checkstyle ends with 1 errors.  Output of non-allowStaticMemberImports example:      $ cat config.xml                                                                    $ cat Test.java      import java.util.Scanner;         // OK     import java.io.*;                 // violation     import static java.lang.Math.*;   // OK     import java.util.*;               // violation      $ java -jar checkstyle-8.29-all.jar -c config2.xml Test2.java     Starting audit...     [ERROR] D:\OpenSource\TestCommit\Test.java:2: Using the '.*' form of import should be avoided - java.io.*. [AvoidStarImport]     [ERROR] D:\OpenSource\TestCommit\Test.java:4: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]     Audit done.     Checkstyle ends with 2 errors.","closed","","AmrDeveloper","2020-03-01T00:24:20Z","2020-03-04T07:12:06Z"
"","7678","Issue #7668: Add examples for Missing Switch default","Fixes Issue: #7668   ![switchscreen](https://user-images.githubusercontent.com/23631699/75578787-2e1fea00-5a6d-11ea-86ef-1f9f5318e303.PNG)  Ouput of default example:       $ cat config.xml                                                          $ cat Test.java       public class Test {          public void myTest() {              switch (i) {                  case 1:                      break;                  case 2:                      break;                  // violation              }               switch (i) {                  case 1:                      break;                  default: // OK                      break;              }         }         }       $ java -jar checkstyle-8.29-all.jar -c config.xml Test.java       Starting audit...      [ERROR] D:\OpenSource\TestCommit\Test.java:4: switch without ""default"" clause. [MissingSwitchDefault]      Audit done.      Checkstyle ends with 1 errors.","closed","","AmrDeveloper","2020-02-26T19:33:22Z","2020-02-29T06:18:12Z"
"","7704","Issue #7653: Updated doc for NestedTryDepth","Fixes Issue: #7653  ![Screenshot_2020-03-12 checkstyle – Coding(1)](https://user-images.githubusercontent.com/48255244/76461082-3977fb80-6405-11ea-9a47-b24f34ccd08e.png)    **Output of default Exmaple** ``` $ cat config.xml                         ``` ``` $ cat Test.java  public class Test {     public static void defaultTest() {         try {             try {                 try { // violation, current depth is 2, max default allowed depth is 1                 } catch (Exception e) {                 }             } catch (Exception e) {             }         } catch (Exception e) {         }     } } ``` ``` java -jar checkstyle-8.30-all.jar -c config.xml Test.java Starting audit... [ERROR] /home/abhishek99/checkstyleTest/Test.java:5:17: Nested try depth is 2 (max allowed is 1). [NestedTryDepth] Audit done. Checkstyle ends with 1 errors. ``` *case 2: Example of correct code for handling unique and general Exceptions* ``` $ cat config.xml                          $ cat Test2.java  public class Test2 { 	public static void defaultTestCase2() { 		try { 			try { // OK, current depth is 1,default max allowed depth is also 1 					// any more nesting could cause code violation! 				throw ArithmeticException(); 			} catch (ArithmeticException e) { // catches arithmetic exceptions 			} catch (NumberFormatException e) { // catches number-format exceptions 			} catch (Exception e) { // catches general exceptions other than stated above 			} 		} catch (ArithmeticException | NumberFormatException | ArrayIndexOutOfBoundsException e) { // catches any of the 3 exception 		} catch (Exception e) { // catches general exception 		} finally { // do something when try-catch block finished execution 		} 	} }  $ java -jar checkstyle-8.30-all.jar -c config.xml Test2.java Starting audit... Audit done. ``` **Non Default Example** ``` $ cat config.xml                        ``` ``` $ cat Test.java  public class Test {     public static void nonDefaultTest() {         try {             try {                 try {                     try {                         try { // violation, current depth is 4, max allowed depth is 3                         } catch (Exception e) {                         }                     } catch (Exception e) {                     }                 } catch (Exception e) {                 }             } catch (Exception e) {             }         } catch (Exception e) {         }     } } ``` ``` java -jar checkstyle-8.30-all.jar -c config.xml Test.java Starting audit... [ERROR] /home/abhishek99/checkstyleTest/Test.java:7:25: Nested try depth is 4 (max allowed is 3). [NestedTryDepth] Audit done. Checkstyle ends with 1 errors. ```","closed","","Abhishek-kumar09","2020-02-29T16:32:28Z","2020-03-18T16:22:55Z"
"","7896","Issue #7644: Update doc for IllegalThrows","Fixes Issue: #7644 ![2020-03-19_022944](https://user-images.githubusercontent.com/56132196/76994690-bff28700-6989-11ea-87b6-1e5e9a95046d.jpg) Output of default example: ``` $ cat test/config.xml                        $ cat test/Test.java public class Test{ 	public void func1() throws RuntimeException{}  // violation 	 	public void func2() throws Exception{}   // ok 	 	public void func3() throws Error{}    // violation 	 	public void func4() throws Throwable{}    // violation }  $ java -Duser.language=en -Duser.country=US -jar checkstyle-8.30-all.jar -c test/config.xml test/Test.java Starting audit... [ERROR] D:\checkstyle\test\Test.java:2:36: Throwing 'RuntimeException' is not allowed. [IllegalThrows] [ERROR] D:\checkstyle\test\Test.java:6:36: Throwing 'Error' is not allowed. [IllegalThrows] [ERROR] D:\checkstyle\test\Test.java:8:36: Throwing 'Throwable' is not allowed. [IllegalThrows] Audit done. Checkstyle ends with 3 errors. ``` Output of illegalClassNames example: ``` $ cat test/config.xml                                                       $ cat test/Test.java public class Test{         public void func1() throws RuntimeException{} // ok          public void func2() throws NullPointerException{} // violation }  $ java -Duser.language=en -Duser.country=US -jar checkstyle-8.30-all.jar -c test/config.xml test/Test.java Starting audit... [ERROR] D:\checkstyle\test\Test.java:4:36: Throwing 'NullPointerException' is not allowed. [IllegalThrows] Audit done. Checkstyle ends with 1 errors. ``` Output of ignoredMethodNames example: ``` $ cat test/config.xml                                                       $ cat test/Test.java public class Test{         public void func1() throws RuntimeException{}  // ok (method func1 is ignored)          public void func2() throws Error{}  // violation }  $ java -Duser.language=en -Duser.country=US -jar checkstyle-8.30-all.jar -c test/config.xml test/Test.java Starting audit... [ERROR] D:\checkstyle\test\Test.java:4:36: Throwing 'Error' is not allowed. [IllegalThrows] Audit done. Checkstyle ends with 1 errors. ``` Output of ignoreOverriddenMethods example: ``` $ cat test/config.xml                                                       $ cat test/Test.java public class Test{         public void func1() throws Throwable{} // violation }  class Son extends Test{         public void func1() throws RuntimeException{}  // violation }  $ java -Duser.language=en -Duser.country=US -jar checkstyle-8.30-all.jar -c test/config.xml test/Test.java Starting audit... [ERROR] D:\checkstyle\test\Test.java:2:36: Throwing 'Throwable' is not allowed. [IllegalThrows] [ERROR] D:\checkstyle\test\Test.java:7:36: Throwing 'RuntimeException' is not allowed. [IllegalThrows] Audit done. Checkstyle ends with 2 errors. ```","closed","abandoned,","jokowncode","2020-03-18T18:32:28Z","2020-09-07T08:36:54Z"
"","7788","Issue #7594: Update doc for UncommentedMain","Fixes Issue: #7594   ![uncommentedmain](https://user-images.githubusercontent.com/23631699/76069149-18de1a80-5f9b-11ea-9963-a3d39eabb0e2.PNG)  Output of default example:      $ cat config2.xml                                                         $ cat Test2.java      public class Game{        public static void main(String[] args){}  // violation     }      public class Main{        public static void main(String[] args){}  // violation     }      public class Launch{        //public static void main(String[] args){} // OK     }      $ java -jar checkstyle-8.29-all.jar -c config2.xml Test2.java     Starting audit...     [ERROR] D:\OpenSource\TestCommit\Test2.java:2: Uncommented main method found. [UncommentedMain]     [ERROR] D:\OpenSource\TestCommit\Test2.java:6: Uncommented main method found. [UncommentedMain]     Audit done.     Checkstyle ends with 2 errors.  Output of excludedClasses example:      $ cat config2.xml                                                                                     $ cat Test2.java      public class Game{        public static void main(String[] args){}  // violation     }      public class Main{        public static void main(String[] args){}  // OK     }      public class Launch{        //public static void main(String[] args){} // OK     }      $ java -jar checkstyle-8.29-all.jar -c config2.xml Test2.java     Starting audit...     [ERROR] D:\OpenSource\TestCommit\Test2.java:2: Uncommented main method found. [UncommentedMain]     Audit done.     Checkstyle ends with 1 errors.","closed","","AmrDeveloper","2020-03-06T09:13:27Z","2020-10-05T18:42:16Z"
"","7682","Issue #7591: Update doc for TodoComment","Fixes Issue: #7591  ![todocheck](https://user-images.githubusercontent.com/23631699/75577517-cff20780-5a6a-11ea-8961-604801a7ca0b.PNG)  Output of default example:          $ cat config.xml                                                   $ cat Test.java      public class Test {        public void myTest() {         i++;   // TODO: do differently in future   // violation         i++;   // todo: do differently in future   // OK        }       }       $ java -jar checkstyle-8.29-all.jar -c config.xml Test.java      Starting audit...      [ERROR] D:\OpenSource\TestCommit\Test.java:4: Comment matches to-do format 'TODO:'. [TodoComment]       Audit done.      Checkstyle ends with 1 errors.   Output of non-default example:      $ cat config2.xml                                                                 $ cat Test2.java      public class Test {        public void myTest() {           i++;   // TODO: do differently in future   // violation           i++;   // todo: do differently in future   // OK           i=i/x; // FIXME: handle x = 0 case         // violation           i=i/x; // FIX :  handle x = 0 case         // OK       }      }     $ java -jar checkstyle-8.29-all.jar -c config2.xml Test2.java     Starting audit...     [ERROR] D:\OpenSource\TestCommit\Test2.java:4: Comment matches to-do format '(TODO)|(FIXME)'. [TodoComment]     [ERROR] D:\OpenSource\TestCommit\Test2.java:6: Comment matches to-do format '(TODO)|(FIXME)'. [TodoComment]     Audit done.     Checkstyle ends with 2 errors.","closed","","AmrDeveloper","2020-02-27T22:09:35Z","2020-10-19T06:52:35Z"
"","7577","Issue #7564: Add default config examples for ConstantName","Fixes Issue: #7564 Updated the ConstantName with examples for default configuration.","closed","","RhnSaxena","2020-02-22T19:23:36Z","2020-03-19T18:02:13Z"
"","7929","Issue #7920: Resolve Pitest Issues - RedundantImportCheck","Fixes issue #7920   ### Description This mutation was surviving `removed conditional - replaced equality check with true → KILLED` at line no 120.  ### Solution If `pkgName` is null it means this is an unnamed package and as an unnamed package cannot be imported we don't need to check if the `pkgName` is null as the second condition will return false.","closed","","Gaurav-Punjabi","2020-03-21T11:29:56Z","2020-03-26T07:04:10Z"
"","7930","Issue #7914: add spoon project to no-exception testing","Fixes Issue #7914  Add spoon to no exception in wercker.sh","closed","","Abhishek-kumar09","2020-03-21T13:17:02Z","2020-03-23T08:25:12Z"
"","7814","Issue #7749: Update AbstractChecks to log DetailAST - MissingSwitchDe…","Fixes Issue #7749   [Diff report](https://abhishek-kumar09.github.io/7749/reports/diff/index.html)","closed","","Abhishek-kumar09","2020-03-09T19:10:43Z","2020-03-18T16:21:28Z"
"","7936","Issue #7747: Update AbstractChecks to log DetailAST - MissingJavadocType","Fixes Issue #7747 Update AbstractChecks to log DetailAST - MissingJavadocType","closed","awaiting changes,","jokowncode","2020-03-22T09:15:36Z","2020-06-28T12:33:16Z"
"","7847","Issue: #7733 Update AbstractChecks to log DetailAST - ImportOrder","Fixes issue #7733   **Updates(total 5 log calls):** https://github.com/checkstyle/checkstyle/blob/3953912f63bf368a5c586f276dca0d996cca3124/src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java#L666  https://github.com/checkstyle/checkstyle/blob/3953912f63bf368a5c586f276dca0d996cca3124/src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java#L673  https://github.com/checkstyle/checkstyle/blob/3953912f63bf368a5c586f276dca0d996cca3124/src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java#L676  https://github.com/checkstyle/checkstyle/blob/3953912f63bf368a5c586f276dca0d996cca3124/src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java#L738  https://github.com/checkstyle/checkstyle/blob/3953912f63bf368a5c586f276dca0d996cca3124/src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java#L754  **diff report:** https://dxtkastb.github.io/checkstyle/reports/ImportOrder/diff/","closed","","DXTkastb","2020-03-14T08:06:49Z","2020-03-16T23:42:40Z"
"","7871","Issue #7733: Update AbstractChecks to log DetailAST - ImportOrder","Fixes issue #7733   **Updates(total 5 log calls):** https://github.com/checkstyle/checkstyle/blob/3953912f63bf368a5c586f276dca0d996cca3124/src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java#L666  https://github.com/checkstyle/checkstyle/blob/3953912f63bf368a5c586f276dca0d996cca3124/src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java#L673  https://github.com/checkstyle/checkstyle/blob/3953912f63bf368a5c586f276dca0d996cca3124/src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java#L676  https://github.com/checkstyle/checkstyle/blob/3953912f63bf368a5c586f276dca0d996cca3124/src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java#L738  https://github.com/checkstyle/checkstyle/blob/3953912f63bf368a5c586f276dca0d996cca3124/src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java#L754  **diff report(default configuration):** https://dxtkastb.github.io/checkstyle/reports/ImportOrder/diff/  **diff report for configuration:** https://dxtkastb.github.io/checkstyle/reports/ImportOrder/diff2.0/  configuration: ```         ```","closed","","DXTkastb","2020-03-16T20:34:48Z","2020-03-19T17:54:30Z"
"","7890","Issue #7725: Update AbstractChecks to log DetailAST - AvoidStarImport","Fixes Issue #7725  Log update: https://github.com/checkstyle/checkstyle/blob/abf829f542023e089c741c55f73098cae52dcb12/src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStarImportCheck.java#L240  diff report: https://akki111singh.github.io/diff/index.html","closed","","akki111singh","2020-03-17T23:09:29Z","2020-03-28T19:20:56Z"
"","7935","Issue #7677: add UnnecessarySemicolonAfterOuterTypeDeclarationCheck","Fixes Issue #7677   Diff report: https://strkkk.github.io/7677/index.html  Contrib repo PR: https://github.com/checkstyle/contribution/pull/464","closed","","strkkk","2020-03-22T07:52:37Z","2020-03-29T14:59:47Z"
"","7713","Issue #7651: Update doc for NestedForDepth","Fixes Issue #7651   ![WebsiteView_NestedFor](https://user-images.githubusercontent.com/60020042/76695913-2ef67580-6642-11ea-8040-02d5b8b35d5f.PNG)  $ cat config.xml                                               $ cat Test.java public class Test {      public void myTest() {         for(int i=0; i","closed","awaiting changes,","Rainy0707","2020-03-01T08:03:38Z","2020-09-07T08:54:52Z"
"","7777","Issue #7625: Updated doc for NoWhiteSpaceBefore","Fixes Issue #7625  ![Screenshot_2020-03-18 checkstyle – Whitespace(1)](https://user-images.githubusercontent.com/48255244/76904348-cc151080-68c5-11ea-8e6a-76863a3cb878.png)  **Default Example** ``` $ cat config.xml                                         $ cat Test.java  class Test {   void defaultTest() {     int foo;     foo ++; // violation, whitespace before '++' is not allowed     foo++; // OK     for (int i = 0 ; i < 5; i++) {}  // violation               // ^ whitespace before ';' is not allowed     for (int i = 0; i < 5; i++) {} // OK     int[][] array = { { 1, 2 }                     , { 3, 4 } }; // violation, whitespace before ',' is not allowed     int[][] array2 = { { 1, 2 },                       { 3, 4 } }; // OK     Lists.charactersOf(""foo"").listIterator()           .forEachRemaining(System.out::print) 	  ; // violation, whitespace before '.' is not allowed           } }  $ java -jar checkstyle-8.30-all.jar -c config.xml Test.java Starting audit... [ERROR] /home/abhishek99/GSoC/NoWhitespaceBefore/Test.java:4:9: '++' is preceded with whitespace. [NoWhitespaceBefore] [ERROR] /home/abhishek99/GSoC/NoWhitespaceBefore/Test.java:6:20: ';' is preceded with whitespace. [NoWhitespaceBefore] [ERROR] /home/abhishek99/GSoC/NoWhitespaceBefore/Test.java:10:21: ',' is preceded with whitespace. [NoWhitespaceBefore] [ERROR] /home/abhishek99/GSoC/NoWhitespaceBefore/Test.java:15:11: ';' is preceded with whitespace. [NoWhitespaceBefore] Audit done. Checkstyle ends with 3 errors. ``` **Non- Default Example** ``` cat config.xml                                                          $ cat Test.java  class Test {   void config2() {     int[][] array = { { 1, 2 }                     , { 3, 4 } }; // OK, linebreak is allowed before ','     int[][] array2 = { { 1, 2 },                        { 3, 4 } }; // OK, ideal code     Lists.charactersOf(""foo"")     .listIterator()     .forEachRemaining(System.out::print); // OK     }    void ellipsisExample(String ...params) {}; // violation, whitespace before '...' is not allowed    void ellipsisExample2(String             ...params) {}; //OK, linebreak is allowed before '...'  }  $ java -jar checkstyle-8.30-all.jar -c config.xml Test.java Starting audit... [ERROR] /home/abhishek99/GSoC/NoWhitespaceBefore/Test.java:11:32: '...' is preceded with whitespace. [NoWhitespaceBefore] Audit done. Checkstyle ends with 1 errors. ``` ``` $ cat config.xml                                                                  $ cat Test.java  class Test {   void config3() {     Lists.charactersOf(""foo"").listIterator()        .forEachRemaining(System.out::print); // violation, whitespace before '.' is not allowed     Lists.charactersOf(""foo"").listIterator().forEachRemaining(System.out ::print); // violation,                               // whitespace before '::' is not allowed  ^     Lists.charactersOf(""foo"").listIterator().forEachRemaining(System.out::print); // OK   } }  $ java -jar checkstyle-8.30-all.jar -c config.xml Test.java Starting audit... [ERROR] /home/abhishek99/GSoC/NoWhitespaceBefore/Test.java:4:8: '.' is preceded with whitespace. [NoWhitespaceBefore] [ERROR] /home/abhishek99/GSoC/NoWhitespaceBefore/Test.java:5:74: '::' is preceded with whitespace. [NoWhitespaceBefore] Audit done. Checkstyle ends with 2 errors. ``` ``` $ cat config.xml                                                                            $ cat Test.java  class Test {   void config4() {     Lists .charactersOf(""foo"") //violation, whitespace before '.' is not allowed             .listIterator()             .forEachRemaining(System.out ::print); // violation,                                     // ^ whitespace before '::' is not allowed     Lists.charactersOf(""foo"")           .listIterator()           .forEachRemaining(System.out::print); // OK   } }  $ java -jar checkstyle-8.30-all.jar -c config.xml Test.java Starting audit... [ERROR] /home/abhishek99/GSoC/NoWhitespaceBefore/Test.java:3:11: '.' is preceded with whitespace. [NoWhitespaceBefore] [ERROR] /home/abhishek99/GSoC/NoWhitespaceBefore/Test.java:5:42: '::' is preceded with whitespace. [NoWhitespaceBefore] Audit done. Checkstyle ends with 2 errors. ```","closed","","Abhishek-kumar09","2020-03-03T16:34:55Z","2020-03-18T16:21:49Z"
"","7954","Issue #7599: update doc for JavadocStyle","Fixes issue #7599   Screenshot:      #### CLI Test Results 1. Default check ``` gauravpunjabi@Gauravs-MacBook-Pro:~/Coding/Open Source/checkstyle$ cat config.xml                                gauravpunjabi@Gauravs-MacBook-Pro:~/Coding/Open Source/checkstyle$ java -jar target/checkstyle-8.31-SNAPSHOT-all.jar -c config.xml Test.java Starting audit... [ERROR] /Users/gauravpunjabi/Coding/Open Source/checkstyle/Test.java:7: First sentence should end with a period. [JavadocStyle] Audit done. Checkstyle ends with 1 errors. ```  2. Check for public scope ``` punjabi@Gauravs-MacBook-Pro:~/Coding/Open Source/checkstyle$ cat config.xml                                             gauravpunjabi@Gauravs-MacBook-Pro:~/Coding/Open Source/checkstyle$ java -jar target/checkstyle-8.31-SNAPSHOT-all.jar -c config.xml Test.java Starting audit... [ERROR] /Users/gauravpunjabi/Coding/Open Source/checkstyle/Test.java:2: First sentence should end with a period. [JavadocStyle] Audit done. Checkstyle ends with 1 errors. ```  3. Check for private scope excluding package scope ``` auravpunjabi@Gauravs-MacBook-Pro:~/Coding/Open Source/checkstyle$ cat config.xml                                                          gauravpunjabi@Gauravs-MacBook-Pro:~/Coding/Open Source/checkstyle$ java -jar target/checkstyle-8.31-SNAPSHOT-all.jar -c config.xml Test.java Starting audit... [ERROR] /Users/gauravpunjabi/Coding/Open Source/checkstyle/Test.java:2: First sentence should end with a period. [JavadocStyle] Audit done. Checkstyle ends with 1 errors. ```  4. Check to turn off first sentence checking ``` gauravpunjabi@Gauravs-MacBook-Pro:~/Coding/Open Source/checkstyle$ cat config.xml                                             gauravpunjabi@Gauravs-MacBook-Pro:~/Coding/Open Source/checkstyle$ java -jar target/checkstyle-8.31-SNAPSHOT-all.jar -c config.xml Test.java Starting audit... [ERROR] /Users/gauravpunjabi/Coding/Open Source/checkstyle/Test.java:4: Incomplete HTML tag found:      *","closed","","Gaurav-Punjabi","2020-03-24T16:03:34Z","2020-04-03T20:01:46Z"
"","7971","Issue #7589: Update doc for NewlineAtEndOfFile","Fixes issue #7589   Screenshot    ### CLI Test Results 1. Check with default config ``` gauravpunjabi@Gauravs-MacBook-Pro:~/Coding/Open Source/checkstyle$ cat conifg.xml         gauravpunjabi@Gauravs-MacBook-Pro:~/Coding/Open Source/checkstyle$ java -jar target/checkstyle-8.31-SNAPSHOT-all.jar -c conifg.xml Test.java Starting audit... [ERROR] /Users/gauravpunjabi/Coding/Open Source/checkstyle/Test.java:1: File does not end with a newline. [NewlineAtEndOfFile] Audit done. Checkstyle ends with 1 errors. ```  2. Check with lineSeparator config ``` gauravpunjabi@Gauravs-MacBook-Pro:~/Coding/Open Source/checkstyle$ cat conifg.xml                       gauravpunjabi@Gauravs-MacBook-Pro:~/Coding/Open Source/checkstyle$ java -jar target/checkstyle-8.31-SNAPSHOT-all.jar -c conifg.xml Test.java Starting audit... [ERROR] /Users/gauravpunjabi/Coding/Open Source/checkstyle/Test.java:1: File does not end with a newline. [NewlineAtEndOfFile] Audit done. Checkstyle ends with 1 errors. ```  3. Check with fileExtension configuration ``` gauravpunjabi@Gauravs-MacBook-Pro:~/Coding/Open Source/checkstyle$ cat conifg.xml                       gauravpunjabi@Gauravs-MacBook-Pro:~/Coding/Open Source/checkstyle$ java -jar target/checkstyle-8.31-SNAPSHOT-all.jar -c conifg.xml Test.java Starting audit... [ERROR] /Users/gauravpunjabi/Coding/Open Source/checkstyle/Test.java:1: File does not end with a newline. [NewlineAtEndOfFile] Audit done. Checkstyle ends with 1 errors. ```","closed","","Gaurav-Punjabi","2020-03-26T16:26:17Z","2020-03-31T10:30:41Z"
"","7467","Issue #7465: remove GooglePlus banner from web site","fixes Issue #7465  ``` ✔ ~/java/github/romani/checkstyle [7465-gplus-removal L|✔]  $ ag -Qi ""Google+"" ✘-1 ~/java/github/romani/checkstyle [7465-gplus-removal L|✔]  $ ag -Qi ""GooglePlus"" ✘-1 ```","closed","","romani","2020-01-12T16:03:19Z","2020-01-12T17:29:04Z"
"","7938","Issue #4352: Added ability to skip CI executions base on commit files i…","Fixes issue #4352","closed","","Gaurav-Punjabi","2020-03-22T10:48:20Z","2020-04-04T23:20:11Z"
"","8002","Issue #2813: JavadocTagContinuationIndentation doesn't report some lines","Fixes issue #2813   ### Cause of the issue Originally in this, we retrieved all the new line nodes (`\n`) in the Javadoc and considered their 2nd next sibling as our description. The problem with this technique was that it was failing to consider the first description in the example below .i.e `Description 1` because according to the AST `Description 1` is not 2nd next sibling of `\n`, hence it was not being violated as specified in the issue.  ```     /**      * @param s      * Description 1.      * Description 2.      */      public void test(String s) {} ```  ### Solution To solve this problem, I changed the traversing technique. Now we are retrieving all the `LEADING_ASTRISK` nodes, as from my observation each description is followed by a `LEADIN_ASTERISK`. The important change in this technique is that a `LEADING_ASTRISK` is always followed by either a `NEWLINE` or `TEXT` node. Hence I had to remove the condition `textNode != null` in method `visitJavadocToken` to achieve 100% branch coverage as I couldn't find any case where `LEADING_ASTRISK` was not followed by `NEWLINE`   #### Note ``` /**  * @param s  *                  Some description here // not a violation  */ public void test() {} ``` I didn't consider the above case as a violation because it has minimum indentation of 4 char and many of the projects have indentations greater than min length. So we cannot provide this check by default. Either we'll need to add a new property for this or we'll need to change the violated Javadoc in the all the projects.  #### Regression Report https://gaurav-punjabi.github.io/checkstyle/issue-2813/index.html","closed","","Gaurav-Punjabi","2020-03-30T23:07:03Z","2020-05-03T02:26:31Z"
"","8001","Issue #7983:Resolve Pitest Issues - RegexpCheck (2)","fixes #7983   Regression Report: https://akki111singh.github.io/diff/index.html using various configs","closed","awaiting changes,","akki111singh","2020-03-30T20:00:54Z","2020-10-11T04:35:27Z"
"","7994","Issue #7982: Resolve Pitest Issues - RegexpCheck (1)","Fixes #7982   ### Solution This mutation `replaced equality check with true` was surviving  on condition  `if(message == null)` in method `RegexpCheck@setMessage()`. Killed the mutation by removing the condition `message == null`  ### Explanation The member `message` is only used in one method `logMessage` and in that method, we are already null checking member `message` as shown below ``` if (message == null || message.isEmpty()) {      msg = format.pattern(); } ``` This makes our null check in `setMessage()` useless, hence removing this condition won't affect any functionality or test case and would kill the mutation.","closed","","Gaurav-Punjabi","2020-03-29T20:45:56Z","2020-04-04T10:23:36Z"
"","7837","Issue #7832: Publish pitest report as artifact at circleci","Fixes #7832  Please ignore, because I am testing the CI.","closed","","gaurabdg","2020-03-12T16:28:46Z","2020-04-09T21:43:29Z"
"","7828","Issue #7801: Resolve Pitest Issues - AvoidStaticImportCheck","Fixes #7801   Adds an UT for fixing the issue mentioned in https://github.com/checkstyle/checkstyle/issues/7801#issuecomment-597193539: > ## 4. Regression and Code Logic Analysis > Although the results of the regression report wasn't useful, I have discovered an UT by analysing the code which tests a particular edge case of `if(exclude.endsWith("".*"")) `. The reason the absence of the if statement didn't break the test codes: > `if(exclude.endsWith("".*""))` is redundant, since even if this check wasn't there and let's assume the exclude was a random member, it would yield true for the second condition but not for the first condition in `if (classOrStaticMember.startsWith(excludeMinusDotStar)&& !classOrStaticMember.equals(excludeMinusDotStar))`. and hence not move forward. >  > But if a specific exclude had a pattern like `package.path.class.` where was a single letter ( for e.g. `java.lang.Math.E`) the absence of the if statement would yield that as if `.E` is `.*` and give a false positive. Hence, including this test case has forced the if statement to do an important check and the mutation was `killed`.","closed","","gaurabdg","2020-03-11T08:30:21Z","2020-04-09T21:44:12Z"
"","7798","Issue #7752: Update AbstractChecks to log DetailAST - NoFinalizer","Fixes #7752 Log Update: https://github.com/checkstyle/checkstyle/blob/abf829f542023e089c741c55f73098cae52dcb12/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/NoFinalizerCheck.java#L86 Diff report: https://gaurabdg.github.io/checkstyle-tester-reports/regression/NoFinalizer/diff/index.html","closed","","gaurabdg","2020-03-08T17:09:37Z","2020-04-09T21:44:28Z"
"","7946","Issue #7746: Update AbstractChecks to log DetailAST - MissingJavadocP…","Fixes #7746   Updates: https://github.com/checkstyle/checkstyle/blob/9b94d177d01b1d2c71f79b01a66359caa2f874b8/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/MissingJavadocPackageCheck.java#L95  Diff Report: https://gaurabdg.github.io/checkstyle-tester-reports/regression/MissingJavadocPackage/diff/","closed","","gaurabdg","2020-03-23T08:54:01Z","2020-04-09T21:41:55Z"
"","7928","Issue #7737: Update AbstractChecks to log DetailAST - InvalidJavadocP…","Fixes #7737   The check already reports violation to DetailAST node: https://github.com/checkstyle/checkstyle/blob/34615b4a3c8f8826fb6961ed9a35449e73c16a2f/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/InvalidJavadocPositionCheck.java#L96  Diff file: https://sulkykookie.github.io/invalidjavadocposition","closed","","sulkykookie","2020-03-21T09:45:10Z","2020-03-24T06:47:02Z"
"","7915","Issue #7732: Update AbstractChecks to log DetailAST - IllegalC…","Fixes #7732   This check already reports on the DetailAST node: https://github.com/checkstyle/checkstyle/blob/34615b4a3c8f8826fb6961ed9a35449e73c16a2f/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java#L187  Diff report: https://sulkykookie.github.io/illegalcatch/","closed","","sulkykookie","2020-03-20T15:11:50Z","2020-03-23T12:13:34Z"
"","7774","Issue #7729: Update AbstractChecks to log DetailAST - EmptyCatchBlock","Fixes #7729 Updates : https://github.com/checkstyle/checkstyle/blob/abf829f542023e089c741c55f73098cae52dcb12/src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyCatchBlockCheck.java#L238 Diff Report: https://gaurabdg.github.io/checkstyle-tester-reports/regression/EmptyCatchBlock/diff/index.html","closed","","gaurabdg","2020-03-03T09:46:05Z","2020-04-09T21:44:59Z"
"","7853","Issue #7726: Update AbstractChecks to log DetailAST - AvoidStaticImport","Fixes #7726  Log Update: https://github.com/checkstyle/checkstyle/blob/5ec8cfe4ded197c67f0f4bb8edfddde1d34d78c1/src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStaticImportCheck.java#L128  Diff Report: https://gaurabdg.github.io/checkstyle-tester-reports/regression/AvoidStaticImport/diff/index.html","closed","","gaurabdg","2020-03-15T15:46:14Z","2020-04-09T21:42:11Z"
"","7715","Issue #7689: update doc for BooleanExpressionComplexity","Fixes #7689","closed","","akki111singh","2020-03-01T10:57:54Z","2020-03-10T01:07:52Z"
"","7673","Issue #7660: Add code example for StringLiteralEquality","Fixes #7660","closed","","gaurabdg","2020-02-25T19:00:00Z","2020-04-09T21:45:12Z"
"","7784","Issue #7642: Update doc for IllegalCatch","Fixes #7642  ![n1](https://user-images.githubusercontent.com/23253816/76160425-415b4580-6150-11ea-9645-dcd7558facff.png) ![n2](https://user-images.githubusercontent.com/23253816/76160428-43250900-6150-11ea-87df-370d3d2337be.png)  Output for default example: ``` $ cat config.xml                  $ cat test.java  class test{     public static void main(String[] args)     {         try {             // do stuff         } catch (Exception e) { // Violation          }          try {             // do stuff         } catch (ArithmeticException e) {                      } catch (Exception e) { //Violation, one of the exception is declared to be illegal and order of multi-catch blocks doesn't matter          }          try {             // do stuff         } catch (ArithmeticException | Exception e) {  Violation, one of the exception is declared to be illegal                      }          try {             // do stuff         } catch (ArithmeticException e) { // OK          }             } }  $ java -jar checkstyle-8.29-SNAPSHOT-all.jar -c config.xml test.java Starting audit... [ERROR] /home/gaurab/Workspace/checkstyle-test/test.java:6:11: Catching 'Exception' is not allowed. [IllegalCatch] [ERROR] /home/gaurab/Workspace/checkstyle-test/test.java:14:11: Catching 'Exception' is not allowed. [IllegalCatch] [ERROR] /home/gaurab/Workspace/checkstyle-test/test.java:20:11: Catching 'Exception' is not allowed. [IllegalCatch] Audit done. Checkstyle ends with 3 errors.                ``` Output for non-default example: ``` $ cat config.xml                                                                                 $ cat test.java  class test{      public static void main(String[] args){         try {             // some code here         } catch (OutOfMemoryError e) { // violation                  }                  try {             // some code here         } catch (ArithmeticException e) { // violation                  }                  try {             // some code here         } catch (NullPointerException e) {                  } catch (OutOfMemoryError e) { // violation, catching OutOfMemoryError is illegal                  }                  try {             // some code here         } catch (ArithmeticException | Exception e) {  // violation                  }                  try {             // some code here         } catch (Exception e) { // OK                  }      }  }   $ java -jar checkstyle-8.29-all.jar -c config.xml test.java Starting audit... [ERROR] /home/gaurabdg/Workspace/checkstyle-try/test.java:5:11: Catching 'OutOfMemoryError' is not allowed. [IllegalCatch] [ERROR] /home/gaurabdg/Workspace/checkstyle-try/test.java:11:11: Catching 'ArithmeticException' is not allowed. [IllegalCatch] [ERROR] /home/gaurabdg/Workspace/checkstyle-try/test.java:19:11: Catching 'OutOfMemoryError' is not allowed. [IllegalCatch] [ERROR] /home/gaurabdg/Workspace/checkstyle-try/test.java:25:11: Catching 'ArithmeticException' is not allowed. [IllegalCatch] Audit done. Checkstyle ends with 4 errors. ```","closed","","gaurabdg","2020-03-05T11:49:43Z","2020-04-09T21:44:40Z"
"","7893","Issue #7636: Update doc for DefaultComesLast","fixes #7636  ![Screenshot from 2020-03-19 00-35-46](https://user-images.githubusercontent.com/38028330/76997730-c973f300-6979-11ea-8086-97ebbbf0932a.png) ![Screenshot from 2020-03-19 00-36-21](https://user-images.githubusercontent.com/38028330/76997789-e27ca400-6979-11ea-8313-50c0f51dd7a9.png)   **Output for default example**  ```` kaustubh@dxtk:~$ cat Test.xml            kaustubh@dxtk:~$ cat Test.java public class Test {   void method(int i) {     switch (i) {       case 1:         break;       case 2:         break;       default: // OK         break;      }       switch (i) {       case 1:         break;       case 2:         break; // OK, no default     }       switch (i) {       case 1:         break;       default: // violation, 'default' before 'case'         break;       case 2:         break;     }       switch (i) {       case 1:       default: // violation, 'default' before 'case'         break;       case 2:         break;     }   } } kaustubh@dxtk:~$ java -jar checkstyle-8.30-all.jar -c Test.xml Test.java Starting audit... [ERROR] /home/kaustubh/Test.java:22:7: Default should be last label in the switch. [DefaultComesLast] [ERROR] /home/kaustubh/Test.java:30:7: Default should be last label in the switch. [DefaultComesLast] Audit done. Checkstyle ends with 2 errors. ````  **Output for configuration** ```` kaustubh@dxtk:~$ cat Test.xml                  kaustubh@dxtk:~$ cat Test.java public class Test {   void method(int i) {    switch (i) {      case 1:        break;      case 2:      default: // OK        break;      case 3:        break;    }    switch (i) {      case 1:        break;      default: // violation      case 2:        break;    }    } } kaustubh@dxtk:~$ java -jar checkstyle-8.30-all.jar -c Test.xml Test.java Starting audit... [ERROR] /home/kaustubh/Test.java:15:6: Default should be last label in the case group. [DefaultComesLast] Audit done. Checkstyle ends with 1 errors. ```` @strkkk please review.","closed","","DXTkastb","2020-03-18T05:35:39Z","2020-03-19T11:17:09Z"
"","7849","Issue #7636: Update doc for DefaultComesLast","fixes #7636  ![oooo](https://user-images.githubusercontent.com/38028330/76805388-aa078980-6804-11ea-8fc8-55432d185be7.png) ![Screenshot from 2020-03-17 04-04-52](https://user-images.githubusercontent.com/38028330/76805419-c0154a00-6804-11ea-81ab-74b72b1c46e9.png)   **Output for default example**  ```` kaustubh@dxtk:~$ cat Test.xml            kaustubh@dxtk:~$ cat Test.java public class Test {   void method(int i) {     switch (i) {       case 1:         break;       case 2:         break;       default:         break; // OK     }       switch (i) {       case 1:         break;       case 2:         break; // OK, no default     }       switch (i) {       case 1:         break;       default: // violation, 'default' before 'case'         break;       case 2:         break;     }       switch (i) {       case 1:       default: // violation, 'default' before 'case'         break;       case 2:         break;     }   } } kaustubh@dxtk:~$ java -jar checkstyle-8.30-all.jar -c Test.xml Test.java Starting audit... [ERROR] /home/kaustubh/Test.java:22:7: Default should be last label in the switch. [DefaultComesLast] [ERROR] /home/kaustubh/Test.java:30:7: Default should be last label in the switch. [DefaultComesLast] Audit done. Checkstyle ends with 2 errors. ````  **Output for configuration** ```` kaustubh@dxtk:~$ cat Test.xml                  kaustubh@dxtk:~$ cat Test.java public class Test {   void method(int i) {    switch (i) {      case 1:        break;      case 2:      default: // OK        break;      case 3:        break;    }    switch (i) {      case 1:        break;      default: // violation, with the new option is expected      case 2:        break;    }    } } kaustubh@dxtk:~$ java -jar checkstyle-8.30-all.jar -c Test.xml Test.java Starting audit... [ERROR] /home/kaustubh/Test.java:15:6: Default should be last label in the case group. [DefaultComesLast] Audit done. Checkstyle ends with 1 errors. ```` @strkkk please review.","closed","","DXTkastb","2020-03-14T18:22:38Z","2020-03-17T15:24:20Z"
"","7193","Issue #7329: remove class loading in JavadocMethod","fixes #7329 , #7380  My plan to diminish class loading is to remove pieces at a time. I will work from the inside out identifying pieces as I go which can be removed and what can stay. Suppressions will be needed as I go as the code may be in an incomplete form.  This PR breaks class loading in the check by removing the most inner piece for it to function. Differences were created in the tests.   **Regressions**: minor, not ideal, but user have workaround by placing each exception on its own line - not ideal, but it is ok -   https://romani.github.io/7329/diff/Hbase/index.html#A37 , is somebody complained, will be resolved as bug later on.","closed","","rnveach","2019-10-13T14:15:24Z","2019-12-17T21:05:58Z"
"","7326","Issue #7322: add no-error-spring-integration to wercker","fixes #7322","closed","","romani","2019-12-06T19:47:41Z","2019-12-07T15:23:15Z"
"","7353","Issue #7224: dependabot config to configure commit message","fixes #7224  releasenotes builder PR - https://github.com/checkstyle/contribution/pull/420","closed","","romani","2019-12-09T22:40:59Z","2019-12-10T03:27:43Z"
"","7990","Issue #6745: Improve VisibilityModifier documentation","Fixes #6745   As mentioned in https://github.com/checkstyle/checkstyle/issues/6745#issuecomment-605467069 I would also like to reduce the amount of bold formatting used in this section. The site now looks like this:  ![image](https://user-images.githubusercontent.com/53135010/77856818-5fd2cf00-722c-11ea-9a94-e9fe98e526ec.png)","closed","","wltan","2020-03-29T18:19:32Z","2020-04-22T15:20:19Z"
"","7506","updates for release.sh","fixes #6333  fixes #6186  taken from https://github.com/checkstyle/checkstyle/wiki/How-to-make-a-release it finally worked well.","closed","","romani","2020-01-26T23:53:27Z","2020-01-27T16:26:37Z"
"","7168","Issue #5060: keep nullanalysis disabled as we have no time to make it now","fixes #5060  Reason: https://github.com/checkstyle/checkstyle/issues/5060#issuecomment-538684043  Reason for second commit: https://github.com/checkstyle/checkstyle/pull/7169#issuecomment-538806309","closed","","romani","2019-10-06T22:04:48Z","2019-10-07T05:40:04Z"
"","7919","Issue #2986: Add property to skip package-info.java in HeaderCheck","Fixes #2986  Diff Report for default configs for base & patch: https://gaurabdg.github.io/checkstyle-tester-reports/regression/Header-default/diff/index.html Diff Report for forced violations in base & fixed violations in patch: https://gaurabdg.github.io/checkstyle-tester-reports/regression/Header-propertycheck/diff/index.html The `skipFiles` property suppressed all violations.","closed","","gaurabdg","2020-03-20T18:34:00Z","2020-05-20T22:21:42Z"
"","7950","Issue #2810: Feature to have JavadocMethod validate parameter order","Fixes #2810   To add order check-in `JavadocMethod`. As we needed the original order of the param, hence I had to maintain a copy of the original param list through which we search the `position` of parameter with `@param` tag.","closed","","Gaurav-Punjabi","2020-03-24T01:37:05Z","2020-11-14T23:50:36Z"
"","7654","doc: fix indentation of config example","Fix ugly indent ![image](https://user-images.githubusercontent.com/8901354/75257740-7386b200-57f6-11ea-91cc-fa988cda7849.png)","closed","","strkkk","2020-02-25T14:44:41Z","2020-02-26T13:21:47Z"
"","7515","doc: fix typo training -> trailing","fix typo","closed","","strkkk","2020-01-29T02:36:05Z","2021-01-29T11:43:43Z"
"","7365","Issue #7314: check empty line separator between import statements","Fix issue #7314   Regression report: https://gmshake.github.io/checkstyle_contribution/checkstyle-tester/diff_pr_7365_4/","closed","","gmshake","2019-12-11T08:14:48Z","2019-12-21T18:55:21Z"
"","7104","config: fix string to number issue in pr age check","Fix for PR age issue. I believe the issue is the number being returned is a string and not integer and so needs to be converted to an integer. Minor changes to the displays for easier debugging.","closed","","rnveach","2019-09-26T22:19:08Z","2019-09-28T18:44:36Z"
"","7973","Issue #7855: Resolve Pitest Issues - IllegalImportCheck (2)","Fix for Issue #7855   Pitest Report https://harsh-kukreja.github.io/pitest-report-before/com.puppycrawl.tools.checkstyle.checks.imports/IllegalImportCheck.java.html  Diff Report: https://harsh-kukreja.github.io/IllegalImportCheckDiffReport3/   As per the decision in comment: https://github.com/checkstyle/checkstyle/issues/7855#issuecomment-604737052","closed","","harsh-kukreja","2020-03-27T11:53:54Z","2020-03-28T17:08:45Z"
"","7995","Issue #7626: Update doc for OperatorWrap","Fix for issue #7626  Website changes ![image](https://user-images.githubusercontent.com/40023562/78351351-44691a80-75c4-11ea-85e5-b6c7e3695987.png) ![image](https://user-images.githubusercontent.com/40023562/78351380-4cc15580-75c4-11ea-8c3a-a48b182036a2.png)  CLI Output:  ``` Karunas-MacBook-Pro:checkstyle Harsh$ cat config.xml                        Karunas-MacBook-Pro:checkstyle Harsh$ cat Test.java class Test {     public static void main(String[] args) {         String s = ""Hello"" +                 ""World""; // violation, '+' should be on new line          if (10 ==                 20) { // violation, '==' should be on new line.             // body         }         if (10                 ==                 20) { // ok             // body         }          int c = 10 /                 5; // violation, '/' should be on new line.          int d = c                 + 10; // ok     }  }Karunas-MacBook-Pro:checkstyle Harsh$ java -jar target/checkstyle-8.32-SNAPSHOT-all.jar -c config.xml Test.java  Starting audit... [ERROR] /Users/Harsh/Desktop/checkstyle/Test.java:3:28: '+' should be on a new line. [OperatorWrap] [ERROR] /Users/Harsh/Desktop/checkstyle/Test.java:6:16: '==' should be on a new line. [OperatorWrap] [ERROR] /Users/Harsh/Desktop/checkstyle/Test.java:16:20: '/' should be on a new line. [OperatorWrap] Audit done. Checkstyle ends with 3 errors. ```   ``` Karunas-MacBook-Pro:checkstyle Harsh$ cat config.xml                                                           Karunas-MacBook-Pro:checkstylcat Test.java  class Test {     public static void main(String[] args) {         int b                 = 10; // violation, '=' should be on previous line         int c =                 10; // ok         b                 += 10; // violation, '+=' should be on previous line         b +=                 10; // ok         c                 *= 10; // violation, '*=' should be on previous line         c *=                 10; // ok         c                 -= 5; // violation, '-=' should be on previous line         c -=                 5; // ok         c                 /= 2; // violation, '/=' should be on previous line         c                 %= 1; // violation, '%=' should be on previous line         c                 >>= 1; // violation, '>>=' should be on previous line         c                 >>>= 1; // violation, '>>>=' should be on previous line     }     public void myFunction() {         c                 ^= 1; // violation, '^=' should be on previous line         c                 |= 1; // violation, '|=' should be on previous line         c                 &=1 ; // violation, '&=' should be on previous line         c","closed","","harsh-kukreja","2020-03-29T22:14:46Z","2020-04-03T11:07:26Z"
"","7205","Fix #7187: RightCurlyCheck false positives fixed.","Fix for issue #7187. This PR is blocker for PR #7039 .   RightCurlyCheck false positives fixed.  For various tokens like `CLASS_DEF`, `METHOD_DEF` etc.  Regression report:  https://sd1998.github.io/checkstyle-regression/Fix-7187/index.html  Base Config: https://sd1998.github.io/checkstyle-regression/Fix-7187/base_config.xml  Patch Config: https://sd1998.github.io/checkstyle-regression/Fix-7187/patch_config.xml  Report repository: https://github.com/sd1998/checkstyle-regression/tree/master/Fix-7187","closed","","shashvat-kedia","2019-10-17T14:10:15Z","2019-12-26T07:15:17Z"
"","7404","Issue #6972: Added implementation for NoEnumTrailingCommaCheck","Fix for issue #6972.  Contribution PR: https://github.com/checkstyle/contribution/pull/432  Regression report: https://sd1998.github.io/checkstyle-regression/Fix-6972/index.html  Old Regression Report:  https://sd1998.github.io/checkstyle-regression/Fix-6972/old-report/index.html  Base config: https://sd1998.github.io/checkstyle-regression/Fix-6972/base_config.xml  Patch config: https://sd1998.github.io/checkstyle-regression/Fix-6972/patch_config.xml  Report repo: https://github.com/sd1998/checkstyle-regression/tree/master/Fix-6972","closed","","shashvat-kedia","2019-12-27T11:45:33Z","2020-01-09T14:51:03Z"
"","7228","Issue #6971: Added implementation for NoArrayTrailingCommaCheck","Fix for issue #6971.  Contribution PR: https://github.com/checkstyle/contribution/pull/436  Regression report: https://sd1998.github.io/checkstyle-regression/Fix-6971/index.html  Base config: https://sd1998.github.io/checkstyle-regression/Fix-6971/base_config.xml  Patch config: https://sd1998.github.io/checkstyle-regression/Fix-6971/patch_config.xml  Report repo: https://github.com/sd1998/checkstyle-regression/tree/master/Fix-6971","closed","","shashvat-kedia","2019-10-27T15:12:58Z","2019-12-28T19:09:32Z"
"","7252","Issue #6385: Hardcode google tokens in config","Fix for issue #6385.","closed","awaiting changes,","shashvat-kedia","2019-11-13T17:11:51Z","2019-12-24T08:59:35Z"
"","7274","config: update wercker build of hibernate to skip elaticsearch","Fix for build problem https://app.wercker.com/checkstyle/checkstyle/runs/build/5dd4cb4b8e18590008b09d9a?step=5dd4cb9ef947d10009282aa1  Root cause: https://github.com/hibernate/hibernate-search/commit/170491f69d89a723fc1c7a1c4744f2a026933f32 see changes at bottom","closed","","romani","2019-11-20T16:35:32Z","2019-11-20T19:24:09Z"
"","7490","fix for build","fix for build","closed","","romani","2020-01-17T19:40:24Z","2020-01-17T19:40:43Z"
"","7701","Issue #7672:Updated doc for OverloadMethodsDeclarationOrder","Fix for #7672     Output of default example (invalid): ``` $ cat config.xml                          $ cat MyClass.java  public class MyClass{     public void foo(int i) {} //OK     public void foo(String s) {} //OK     public void notFoo() {} // violation. Have to be after foo(String s, int i)     public void foo(int i, String s) {}     public void foo(String s, int i) {} }  $ java -jar checkstyle-8.30-all.jar -c config.xml MyClass.java Starting audit... [ERROR] /Users/guneshi/github/test/MyClass.java:5: Overload methods should not be split. Previous overloaded method located at line '3'. [OverloadMethodsDeclarationOrder] Audit done. Checkstyle ends with 1 errors. ``` Output of default example (correct):  ``` $ cat config.xml                          $ cat MyClass.java  public class MyClass{     public void foo(int i) {}     public void foo(String s) {}     public void foo(String s, int i) {}     public void foo(int i, String s) {}     public void notFoo() {} } $ java -jar checkstyle-8.30-all.jar -c config.xml MyClass.java Starting audit... Audit done. ```","closed","","ghost","2020-02-29T07:04:21Z","2020-04-14T04:46:36Z"
"","7905","Issue #7812: OneTopLevelClass: Improve data structure efficiency","Fix #7812: OneTopLevelClass: Improve data structure efficiency  Even though this is not really important, I feel that I should at least tie up the loose end from https://github.com/checkstyle/checkstyle/pull/7790#discussion_r389439081. Right now using a `SortedMap` just to store a redundant line number is an awkward implementation, no matter how you look at it.  Regression: https://wltan.github.io/checkstyle-reports/2020-03-26/onetoplevel-detailast-regression/diff/","closed","","wltan","2020-03-19T10:08:39Z","2020-04-03T13:21:56Z"
"","7780","Issue #7779: JavadocStyleCheck incorrectly allows ""style"" tag","Fix #7779: JavadocStyleCheck incorrectly allows ""style"" tag Sample run: ``` D:\checkstyletest>type config.xml                          D:\checkstyletest>cd test  D:\checkstyletest\test>type Test.java /**  * First sentence.  *  * this is a valid tag  * this is also a valid tag  * this is not a valid tag  * is this a valid tag?  *  */ public class Test {} D:\checkstyletest\test>javadoc --version javadoc 11.0.5  D:\checkstyletest\test>javadoc Test.java Loading source file Test.java... Constructing Javadoc information... Standard Doclet version 11.0.5 Building tree for all the packages and classes... Test.java:6: error: unknown tag: foo  * this is not a valid tag    ^ Test.java:6: error: unknown tag: foo  * this is not a valid tag                                ^ Test.java:7: error: unknown tag: style  * is this a valid tag?    ^ Test.java:7: error: unknown tag: style  * is this a valid tag?                               ^ Generating .\Test.html... Generating .\package-summary.html... Generating .\package-tree.html... Generating .\constant-values.html... Building index for all the packages and classes... Generating .\overview-tree.html... Generating .\index-all.html... Building index for all classes... Generating .\allclasses-index.html... Generating .\allpackages-index.html... Generating .\deprecated-list.html... Building index for all classes... Generating .\allclasses.html... Generating .\allclasses.html... Generating .\index.html... Generating .\help-doc.html... 4 errors  D:\checkstyletest\test>cd ..  D:\checkstyletest>java -jar -Duser.language=en -Duser.country=US checkstyle-8.31-SNAPSHOT-all.jar -c config.xml test\Test.java Starting audit... [ERROR] D:\checkstyletest\test\Test.java:6:32: Extra HTML tag found:  [JavadocStyle] [ERROR] D:\checkstyletest\test\Test.java:7:31: Extra HTML tag found:  [JavadocStyle] Audit done. Checkstyle ends with 2 errors. ``` The `` tag now (correctly) raises a violation, where it previously did not.  Diff report (excluding OpenJDK): https://wltan.github.io/checkstyle-reports/2020-03-05/styletag/diff/ Diff report (OpenJDK 7/8/9/10): https://wltan.github.io/checkstyle-reports/2020-03-05/styletag-openjdk/diff/","closed","","wltan","2020-03-04T07:47:51Z","2020-05-04T04:21:32Z"
"","7894","Issue #7128: customImportOrderRules does not support the default value","Fix #7128   The documentation mistakenly shows the default value to be an empty set `{}` when it should be the empty string `""""`. This led to some confusion in #7128 when the user thought that they could use `{}` as the default value.  This PR aims to fix the two points brought up in https://github.com/checkstyle/checkstyle/issues/7128#issuecomment-544254686: 1. Documentation is now updated to show `""""` instead of `{}` 2. `setCustomImportOrderRules` now checks if `inputCustomImportOrder` is empty, and will not modify `customImportOrderRules` at all if it is the case.  Diff report: https://wltan.github.io/checkstyle-reports/2020-03-18/customimport-defaultrule-regression/diff/","closed","","wltan","2020-03-18T14:53:09Z","2020-04-13T14:50:15Z"
"","7423","SonarCloud upcoming change: ""sonar.organization"" property soon mandatory","First time mentioned at https://github.com/checkstyle/sonar-checkstyle/issues/251  Hello,  I'm Fabrice, from SonarCloud team at SonarSource.​  I am contacting you to notify you in advance of a change that will happen before the end of the year on SonarCloud: the​ ""sonar.organization"" property will become mandatory.​  Since you are one of the early adopters of SonarCloud, your project still belongs to the ""Attic"" organization - which was originally the only organization on SonarCloud when we started the service. Because of this, until now, you did not have to specify​ the​ ""sonar.organization"" property on your project since it was defaulting to the ""Attic"" org. For consistency reasons, we are going to make this property mandatory, which means that you will have to set it to ""default"". For instance: if you are using Maven, this would look like the following in​ your main POM file: ```  ​ default  ``` If you are relying on the scanner CLI, you should add the following line in your ""sonar-project.properties"": `sonar.organization=default`  You probably want to update your repositories as soon as possible to avoid any failure on your CI jobs when we make this property mandatory.  Note that an alternative is to delete your project from this ""Attic"" org and to follow the ""Get started with GitHub"" doc​ to have your project correctly setup on SonarCloud. You will lose history, but this is definitely a better option since this will allow you to benefit from all the latest features (including the analysis of Pull Requests).  May you have any questions, the​ SonarCloud forum​ is here to help you.  --------  We do have `default` for orgazation at https://sonarcloud.io/dashboard?id=com.puppycrawl.tools%3Acheckstyle No organization definition https://github.com/checkstyle/checkstyle/blob/61c25884334f31673e4b47084bd54a5e0740304c/.ci/travis/travis.sh#L190 ![image](https://user-images.githubusercontent.com/812984/71613237-0e963f00-2b5a-11ea-938c-9e99e133bfc1.png)   How it should be: https://github.com/checkstyle/sonar-checkstyle/blob/faefbf4354e4daca979d3ce4944a3457e93d7dc8/travis.sh#L18 To look like: https://sonarcloud.io/dashboard?id=checkstyle_sonar-checkstyle","closed","miscellaneous,","romani","2019-12-30T23:26:06Z","2020-01-04T01:39:41Z"
"","7317","Travis and CircleCI have problems to use execute should_job_run","file .ci/common.sh contains  `should_job_run` that suppose to skip CI is changes are done only in config files of different CIs.  but there some problems with Travis and CircleCI, so it was disabled: cirlceci - https://github.com/checkstyle/checkstyle/commit/fa88baf0853d23b46230d8ff89114d91eed28f32 travis - https://github.com/checkstyle/checkstyle/commit/3314038bdf36732c815eab08373998fc4009c227  commit messages reference PRs where such problem was detected.   diff detection should be rewritten to use `merge-base` - https://roman-ivanov.blogspot.com/2019/11/how-to-list-all-changed-files-between.html We should use TRAVIS environemnt variable to get PREV commit, all other CIs should not do this and do just diff on branch:HEAD and merge-base.","open","CI,","romani","2019-12-05T21:41:50Z","2020-08-30T07:27:24Z"
"","7154","Issue #5747: Examples for UnnecessaryParenthesesCheck added","Examples for UnnecessaryParenthesesCheck added. Fix #5747","closed","","shashvat-kedia","2019-10-05T11:51:58Z","2019-10-07T22:33:34Z"
"","7239","Truth vs. AssertJ and Hamcrest","Even we agreed to start writing code in harmcrest style. There are better options: AssertJ Truth  https://dzone.com/articles/hamcrest-vs-assertj-assertion-frameworks-which-one https://truth.dev/comparison.html  I like compact report of diff from Truth. Let's discuss, what should be our preferred way library of writing tests.","closed","","romani","2019-11-04T04:57:29Z","2019-12-26T17:12:47Z"
"","7172","Issue #7161: ENUM_DEF support added for RightCurlyCheck","ENUM_DEF support added in RightCurlyCheck. Fix #7161.  Regression Report:  https://sd1998.github.io/checkstyle-regression/Fix-7161/index.html  Base config: https://sd1998.github.io/checkstyle-regression/Fix-7161/base_config.xml  Patch config: https://sd1998.github.io/checkstyle-regression/Fix-7161/patch_config.xml  Regression Repo: https://github.com/sd1998/checkstyle-regression/tree/master/Fix-7161","closed","","shashvat-kedia","2019-10-07T16:27:42Z","2020-01-08T19:46:25Z"
"","7082","OuterTypeNumber violation is not suppressed with @SuppressWarnings annotation.","EDITED:  $ javac Puzzle.java package-info.java ```java @SuppressWarnings({""checkstyle:outertypenumber"",""checkstyle:outertypenumbercheck""})  package javapuzzles;   public class Puzzle extends Superb {   final byte x = 1;   final Byte y = 2;    @Override   public String toString() {     return x + "" : "" + y;   }    public static void main(String... args) {     new Puzzle();   } }  class Superb {   // clang-format off   {     System.out.println(this);   }   // clang-format on } ```` package-info.java ```java @SuppressWarnings({""checkstyle:outertypenumber""}) package javapuzzles; ```  Compiler output:   Puzzles warning: [options] bootstrap class path not set in conjunction with -source 10 Puzzles/javapuzzles/Puzzle.java:1: error: package annotations should be in file package-info.java @SuppressWarnings({""checkstyle:outertypenumber""}) ^  Puzzles/javapuzzles/package-info.java:1: error: package javapuzzles has already been annotated @SuppressWarnings({""checkstyle:outertypenumber""}) ^ 2 errors 1 warnings    cat config.xml  ```xml                                             ```   $ java checkstyle-8.24-all.jar  -o output.txt -c config.xml Puzzle.java package-info.java        ---------------  Describe what you expect in detail.  The checkstyle warning is expected to be suppressed in the checkstyle output. It is if placed at the package level in the class source. However, it will not compile if the package has a package-info.java file.  You'd expect the suppression to be enforced across the package for all files if placed in the package-info.java file. That does not happen.  The suppression generated using the -g option is:  ```xml        ``` The name in the xpath file differs from the Rule name. That is the case for all rules listed in the suppressions xpath xml.","closed","","Fernal73","2019-09-20T15:04:56Z","2019-10-07T08:19:13Z"
"","7327","Issue template: request for link to Check","Each time I read issue, and I have to open documentation to make decision on approval. It would help user to review documentation before reporting issue and for us to quickly read documentation.","closed","","romani","2019-12-06T20:09:10Z","2019-12-08T15:08:32Z"
"","7705","CI should validate checkstyle violations in satelite projects","during release process we update version of checkstyle in satelites projects https://github.com/checkstyle/checkstyle/wiki/How-to-make-a-release#update-for-released-version-reference  Example of failure: https://travis-ci.org/checkstyle/contribution/jobs/656696130#L323  it is not good to have such problems right after release. It is better to place this projects to our CI and force it to be fixed during PR.  in CI build we should try to substitute checkstyle version to SNAPSHOT and update link to report to file path to latest xml","closed","miscellaneous,","romani","2020-02-29T16:55:12Z","2020-03-04T17:37:03Z"
"","7898","doc: fix typo in config_whitespace.xml","doc: fix typo in config_whitespace.xml","closed","","HuGanghui","2020-03-19T03:54:14Z","2020-03-20T15:57:22Z"
"","7546","Extend IT tests to able to load few modules from configs","discussed in https://github.com/checkstyle/checkstyle/pull/7542#discussion_r378190853  we need to extend AbstractGoogleModuleTestSupport to allow load few modules from config file.  In referenced PR we need to load together for each test: ```                             ```  **Attention**: `id` property in Filter is occupied for business logic meaning, so load of specific Filter might be problematic. It might require update in Filters to make `id` be same as in Check - just identifier.","closed","google style,","romani","2020-02-12T11:26:35Z","2022-05-18T05:43:33Z"
"","7494","minor: add missing test case to SuperCloneCheckTest","Discovered [here](https://github.com/checkstyle/checkstyle/pull/7489#discussion_r368164607)  JFYI: the Pitest can not appy `BooleanFalseReturnValsMutator` to code like `return a > b`. After extracting a local variable, ```java final boolean result = a > b; return result; ```  the mutator `BooleanFalseReturnValsMutator` is able to add the mutation and the missing coverage is detected.  This PR adds the missing case.","closed","","pbludov","2020-01-18T10:38:34Z","2020-01-20T21:42:26Z"
"","7308","minor: fix indentation in pom.xml for forbiddenapis plugin","detected while adding new plugin to pom.xml our pom is huge so I used collapse for all plugins tags in Sublime","closed","","romani","2019-12-04T22:45:47Z","2019-12-04T23:58:01Z"
"","7488","LocalizedMessage should accept message argument in string only","Detected by IDEA inspection and Sonar Inspection `Make ""args"" transient or serializable.` https://sonarcloud.io/project/issues?id=org.checkstyle%3Acheckstyle&issues=AW9t2w2MYD2QG1pPXIUJ&open=AW9t2w2MYD2QG1pPXIUJ  Code: https://github.com/checkstyle/checkstyle/blob/2f9f8c620eaa953a0d5822c17f59fd396f09c2ad/src/main/java/com/puppycrawl/tools/checkstyle/api/LocalizedMessage.java#L84-L89  We did not change it as it is API class, so it should be done separately and clear consideration of breaking affects.  Expected: change `Object[]` to `String[]` to simply do string concatenation without any thoughts on special format/serialization of particular type. If some localization is required, it should be done by module/Check that report such violation.","open","breaking compatibility,","romani","2020-01-17T18:19:39Z","2020-01-25T15:00:35Z"
"","7477","config: bump sonar-maven-plugin to 3.7.0.1746","detected by https://travis-ci.org/checkstyle/checkstyle/jobs/637603836#L1140  and dependabot do not see such version bump ability, even I manually asked it to ""Bump now"" at https://app.dependabot.com/accounts/checkstyle  so our shell hack is still useful :)","closed","","romani","2020-01-16T04:16:22Z","2020-01-16T04:52:41Z"
"","7811","upadate doc of AvoidDoubleBraceInitialization to make example compilable","detected at https://github.com/checkstyle/sonar-checkstyle/pull/287  Each new `ArrayList` i smissing braces: `new ArrayList()` will be correct.  Please recheck that examples are compile-able by javac.","closed","gsoc first issue,","romani","2020-03-09T13:33:47Z","2020-04-21T08:17:35Z"
"","7996","LineLength is ignored in codeship config","detected at https://github.com/checkstyle/checkstyle/pull/7938/files#r399871740  code like: ```  codeship-steps.yml  @@ -7,4 +7,5 @@     #-  command: ./.ci/travis/travis.sh site     #-  command: ./.ci/travis/travis.sh nondex     -  command: ls -la     -  command: .ci/run-link-check-plugin.sh     -  command: SKIP_FILES="".github|appveyor.yml|circle.yml|distelli-manifest.yml|fast-forward-merge.sh|LICENSE|LICENSE.apache20|README.md|release.sh|RIGHTS.antlr|shippable.yml|wercker.yml""     -  command: if [[ $(git diff --name-only HEAD HEAD~1 | grep -vE ""$SKIP_FILES"" | cat | wc -c) > 0 ]]; then .ci/run-link-check-plugin.sh; fi ```  does not trigger violation.","closed","miscellaneous,","romani","2020-03-30T00:09:28Z","2020-04-05T22:30:03Z"
"","7885","pitest: problem with coverage in SuppressWarningsHolder.java.isSuppressedAfterEventStart","detected at https://github.com/checkstyle/checkstyle/pull/7836#issuecomment-599329678  ```     private static boolean isSuppressedAfterEventStart(int line, int column, Entry entry) {         return entry.getFirstLine() < line             || entry.getFirstLine() == line             && (column == 0 || entry.getFirstColumn()","closed","miscellaneous,","romani","2020-03-17T19:17:54Z","2020-03-18T14:47:17Z"
"","7225","upgrade to pmd 6.18.0","details: https://github.com/checkstyle/checkstyle/pull/7214  Huge amount of false positives violations (You have 588 PMD violations) from  https://pmd.github.io/latest/pmd_rules_java_codestyle.html#unnecessaryfullyqualifiedname Rule should be disabled.  There are even more false positives: ``` [INFO] --- maven-pmd-plugin:3.12.0:check (default-cli) @ checkstyle --- [INFO] PMD Failure: com.puppycrawl.tools.checkstyle.PropertyCacheFile:220 Rule:UnusedPrivateMethod Priority:3 Avoid unused private methods such as 'getHashCodeBasedOnObjectContent(Serializable)'.. [INFO] PMD Failure: com.puppycrawl.tools.checkstyle.filters.CsvFilterElement:71 Rule:UnusedPrivateMethod Priority:3 Avoid unused private methods such as 'addFilter(IntFilterElement)'.. [INFO] PMD Failure: com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest:150 Rule:UnusedPrivateMethod Priority:3 Avoid unused private methods such as 'verifyWarns(Configuration,String,String...)'.. [INFO] PMD Failure: com.puppycrawl.tools.checkstyle.filters.SuppressWarningsFilterTest:128 Rule:UnusedPrivateMethod Priority:3 Avoid unused private methods such as 'verifySuppressed(Configuration,String...)'.. [INFO] PMD Failure: com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest:313 Rule:UnusedPrivateMethod Priority:3 Avoid unused private methods such as 'verifySuppressed(Configuration,String...)'.. [INFO] PMD Failure: com.puppycrawl.tools.checkstyle.filters.SuppressWithPlainTextCommentFilterTest:726 Rule:UnusedPrivateMethod Priority:3 Avoid unused private methods such as 'verifySuppressed(String,String,Configuration...)'.. [INFO] PMD Failure: com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest:266 Rule:UnusedPrivateMethod Priority:3 Avoid unused private methods such as 'verifySuppressed(Configuration,String...)'.. ``` Rule https://pmd.github.io/latest/pmd_rules_java_bestpractices.html#unusedprivatemethod should be excluded, too much false positives.  ----  warnings that appeared after upgrade will be addressed in #7229","closed","miscellaneous,","romani","2019-10-23T06:55:37Z","2019-10-27T21:33:36Z"
"","7926","[Indentation] Reports incorrect indentation","Detailed Description is provided by @ksclarke .  Check documentation: https://checkstyle.org/config_misc.html#Indentation  ```  $ cat Test.java  //package info.freelibrary.vertx.s3;  import java.util.function.Consumer;  public class Test {      public void testMethod() {         test(c1 -> {             System.out.println(""c1"");         }, c2 -> {             System.out.println(""c2"");         });     }      private void test(final Consumer aC1, final Consumer aC2) {         // just an example     } } ``` Checkstyle config file: ``` $ cat checkstyle.xml                                 ``` Running Checkstyle audit: ``` $ RUN_LOCALE=""-Duser.language=en -Duser.country=US"" $ java $RUN_LOCALE -jar checkstyle-8.33-all.jar -c checkstyle.xml /Test.java Starting audit... [WARN] Test.java:12: 'block' child has incorrect indentation level 12, expected level should be 16. [Indentation] [WARN] Test.java:13: 'block rcurly' has incorrect indentation level 8, expected level should be 12. [Indentation] Audit done. ``` My expectation is that this should pass the audit with no warnings. The second function passed to the method shouldn't be indented any further than the first one.","closed","indentation,","hornta","2020-03-21T02:22:21Z","2020-10-04T16:12:03Z"
"","7484","Is there any migration guide for each new version?","Currently we have to modify our checkstyle-configuration-xml after each(?) update of the checkstyle plugin.  Sometimes we have errors in the error-log because the xml is invalid and sometime checks are not executed because they have to be configured in additional tags or attributes.  Here are some examples: LineLength was moved from TreeWalker to Checker. New(?) Checks MissingJavadocMethod, MissingJavadocType, MissingJavadocPackage have to be added to configuration. In JavadocMethod allowMissingThrowsTags changed to validateThrows. NonEmptyAtclauseDescription has to added to ensure that @param-Tags have a non empty description","closed","","AlBundy33","2020-01-16T13:26:28Z","2020-01-17T17:02:12Z"
"","7846","Update doc on description of package annotation","Currently the description of this check says  ![pacakge](https://user-images.githubusercontent.com/24209192/76676691-5c054280-65c6-11ea-9c7a-18dbc3fedc34.png)  We can see there's a reference to section [§7.4.1](https://docs.oracle.com/javase/specs/jls/se11/html/jls-7.html#jls-7.4) of the Java Language Specification.  A close look to that JLS section reveals this: > The manner in which this restriction is enforced must, of necessity, vary from implementation to implementation...  Well, from https://github.com/checkstyle/checkstyle/pull/7829#discussion_r392405817, we know that at least for SE8 the placement of package annotations is enforced at compile time. There was no violation before SE8, so usage of Check is reasonable only till SE8. With SE8 and above it is all controlled by compiler.  The documentation should reflect that. If possible, ideally, we would want the documentation to clearly specify which are the implementations that do not enforce the placement of package annotations at compile time, so the user knows if check is useful for him or not.","closed","miscellaneous,","wilcoln","2020-03-14T06:36:42Z","2020-04-03T10:01:18Z"
"","7452","OBJBLOCK token support in RightCurlyCheck","Currently RightCurly accepts a lot less tokens (15 tokens) than LeftCurly (20 tokens). It is unclear if this is just a mistake or if there is some underlying reason. This issue aims at adding support for `OBJBLOCK` token in RightCurlyCheck.  Solving this issue will help solve Issue #3547.","open","approved,","shashvat-kedia","2020-01-09T05:47:05Z","2021-04-05T00:49:04Z"
"","7161","ENUM_DEF token support in RightCurlyCheck","Currently RightCurly accepts a lot less tokens (13 tokens) than LeftCurly ([20 tokens](https://checkstyle.sourceforge.io/config_blocks.html#LeftCurly_Properties)). It is unclear if this is just a mistake or if there is some underlying reason. This issue aims at adding support for `ENUM_DEF` token in RightCurlyCheck.  Solving this issue will help solve Issue #3547.","closed","new feature,","shashvat-kedia","2019-10-06T12:19:03Z","2020-01-08T19:47:17Z"
"","7175","INTERFACE_DEF token support in RightCurlyCheck","Currently RightCurly accepts a lot less tokens (13 tokens) than LeftCurly (20 tokens). It is unclear if this is just a mistake or if there is some underlying reason. This issue aims at adding support for `INTERFACE_DEF` token in RightCurlyCheck.  Solving this issue will help solve Issue #3547.","closed","new feature,","shashvat-kedia","2019-10-08T10:03:25Z","2020-06-02T07:47:29Z"
"","7174","Put in doc reason why ENUM_CONSTANT_DEF and LAMBDA tokens are not supported in RightCurlyCheck","Currently RightCurly accepts a lot less tokens (13 tokens) than LeftCurly (20 tokens). It is unclear if this is just a mistake or if there is some underlying reason.   After discussion at https://github.com/checkstyle/checkstyle/pull/7453#issuecomment-572725018 for cases like: ``` public enum Scope {       PROTOTYPE {           @Override           void doSomethig() {               doSomethig2();           }       }, // in ""alone"" mode this become weird to put "","" to separate line !!! ``` This issue aims to add in documentation reason why  `ENUM_CONSTANT_DEF` token (#7519) and `LAMBDA` (#5948) token will never be added to RightCurly.  Solving this issue will help solve Issue #3547.","closed","miscellaneous,","shashvat-kedia","2019-10-08T10:01:44Z","2020-01-29T22:23:31Z"
"","7041","ANNOTATION_DEF token support in RightCurlyCheck","Currently [RightCurly](https://checkstyle.sourceforge.io/config_blocks.html#RightCurly) accepts a lot less tokens (13 tokens) than [LeftCurly](https://checkstyle.sourceforge.io/config_blocks.html#LeftCurly) (20 tokens). It is unclear if this is just a mistake or if there is some underlying reason. This issue aims at adding support for `ANNOTATION_DEF` token in `RightCurlyCheck`.   Solving this issue will help solve Issue #3547.  ```` $ cat TestClass.java public @interface TestAnnotation {           int someValue();} // expected violation  $ cat TestConfig.xml                            $ java -jar checkstyle-8.24-all.jar -c TestConfig.xml TestClass.java Starting audit... Audit done. ````  Expected a violation for the right curly brace or a way to enable violation on the token.","closed","new feature,","shashvat-kedia","2019-09-04T12:04:10Z","2019-12-28T14:51:54Z"
"","7338","minor: fix broken links","Current report: https://checkstyle.org/linkcheck.html  No changes in the code. No changes in the docs.  Only URI fixes for HTTP 301, 302, 403 and 404. Also, obsolete suppressions for linkcheck have been removed.  New linkcheck report: https://pbludov.github.io/site/linkcheck.html  ### Not fixed: * `File` type property of `Checker`, see https://pbludov.github.io/site/config.html#Checker_Properties The link to https://pbludov.github.io/site/property_types.html#file is invalid, there is no such type as `File`. * Links to `.dtd` files are marked as invalid, but they to exist * Links to **non-public** fields and methods are invalid on javadoc side, but they works fine within IDE.  These errors are complicated and cannot be fixed as part of a ""minor"" update. I will start new issues for them.","closed","","pbludov","2019-12-08T11:17:56Z","2019-12-09T04:37:02Z"
"","7304","CI: verify-no-exception-configs should actually check contribution PR to append the same Check","continuation of original implementation limitations of #7296 were raised during review as better to have too - https://github.com/checkstyle/checkstyle/pull/7296#discussion_r353453138  Right now verify-no-exception-configs just validate that some pull to `contribution` repo is present. verify-no-exception-configs should actually check contribution PR to append the same Check","open","CI,","romani","2019-12-03T22:57:03Z","2019-12-03T23:04:05Z"
"","7058","config: suppress pitest new version detection","continuation of https://github.com/checkstyle/checkstyle/pull/7051","closed","","romani","2019-09-13T13:04:24Z","2019-09-13T15:09:48Z"
"","7322","Add sprint-integrations to no-error test of werker","command `./gradlew clean check --parallel -x test -PcheckstyleVersion=${CS_POM_VERSION}`  diff - https://github.com/romani/checkstyle/commit/159c5dd123299ea1f737e94d5bd09ab5cbc7eb44  full log: ``` ./.ci/wercker.sh no-error-spring-integration CS_version: 8.28-SNAPSHOT Cloning into 'spring-integration'... remote: Enumerating objects: 594, done. remote: Counting objects: 100% (594/594), done. remote: Compressing objects: 100% (295/295), done. remote: Total 274708 (delta 105), reused 514 (delta 80), pack-reused 274114 Receiving objects: 100% (274708/274708), 53.53 MiB | 2.12 MiB/s, done. Resolving deltas: 100% (127834/127834), done. Checking connectivity... done. Downloading https://services.gradle.org/distributions/gradle-6.0-bin.zip .........10%.........20%.........30%.........40%.........50%.........60%.........70%.........80%.........90%.........100%  Welcome to Gradle 6.0!  Here are the highlights of this release:  - Substantial improvements in dependency management, including    - Publishing Gradle Module Metadata in addition to pom.xml    - Advanced control of transitive versions    - Support for optional features and dependencies    - Rules to tweak published metadata  - Support for Java 13  - Faster incremental Java and Groovy compilation  - New Zinc compiler for Scala  - VS2019 support  - Support for Gradle Enterprise plugin 3.0  For more details see https://docs.gradle.org/6.0/release-notes.html  Starting a Gradle Daemon (subsequent builds will be faster) > Task :spring-integration-test-support:checkstyleMain FAILED > Task :spring-integration-file:checkstyleMain FAILED > Task :spring-integration-feed:checkstyleMain FAILED > Task :spring-integration-core:checkstyleMain FAILED > Task :spring-integration-event:checkstyleMain FAILED  FAILURE: Build completed with 5 failures.  1: Task failed with an exception. ----------- * What went wrong: Execution failed for task ':spring-integration-test-support:checkstyleMain'. > Could not resolve all files for configuration ':spring-integration-test-support:checkstyle'.    > Could not find com.puppycrawl.tools:checkstyle:8.28-SNAPSHOT.      Searched in the following locations:        - https://repo.spring.io/libs-milestone/com/puppycrawl/tools/checkstyle/8.28-SNAPSHOT/maven-metadata.xml        - https://repo.spring.io/libs-milestone/com/puppycrawl/tools/checkstyle/8.28-SNAPSHOT/checkstyle-8.28-SNAPSHOT.pom        - https://repo.spring.io/libs-snapshot/com/puppycrawl/tools/checkstyle/8.28-SNAPSHOT/maven-metadata.xml        - https://repo.spring.io/libs-snapshot/com/puppycrawl/tools/checkstyle/8.28-SNAPSHOT/checkstyle-8.28-SNAPSHOT.pom        - https://oss.jfrog.org/artifactory/libs-snapshot/com/puppycrawl/tools/checkstyle/8.28-SNAPSHOT/maven-metadata.xml        - https://oss.jfrog.org/artifactory/libs-snapshot/com/puppycrawl/tools/checkstyle/8.28-SNAPSHOT/checkstyle-8.28-SNAPSHOT.pom      Required by:          project :spring-integration-test-support  * Try: Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights. ==============================================================================  2: Task failed with an exception. ----------- * What went wrong: Execution failed for task ':spring-integration-file:checkstyleMain'. > Could not resolve all files for configuration ':spring-integration-file:checkstyle'.    > Could not find com.puppycrawl.tools:checkstyle:8.28-SNAPSHOT.      Searched in the following locations:        - https://oss.jfrog.org/artifactory/libs-snapshot/com/puppycrawl/tools/checkstyle/8.28-SNAPSHOT/maven-metadata.xml        - https://oss.jfrog.org/artifactory/libs-snapshot/com/puppycrawl/tools/checkstyle/8.28-SNAPSHOT/checkstyle-8.28-SNAPSHOT.pom      Required by:          project :spring-integration-file  * Try: Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights. ==============================================================================  3: Task failed with an exception. ----------- * What went wrong: Execution failed for task ':spring-integration-feed:checkstyleMain'. > Could not resolve all files for configuration ':spring-integration-feed:checkstyle'.    > Could not find com.puppycrawl.tools:checkstyle:8.28-SNAPSHOT.      Searched in the following locations:        - https://oss.jfrog.org/artifactory/libs-snapshot/com/puppycrawl/tools/checkstyle/8.28-SNAPSHOT/maven-metadata.xml        - https://oss.jfrog.org/artifactory/libs-snapshot/com/puppycrawl/tools/checkstyle/8.28-SNAPSHOT/checkstyle-8.28-SNAPSHOT.pom      Required by:          project :spring-integration-feed  * Try: Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights. ==============================================================================  4: Task failed with an exception. ----------- * What went wrong: Execution failed for task ':spring-integration-core:checkstyleMain'. > Could not resolve all files for configuration ':spring-integration-core:checkstyle'.    > Could not find com.puppycrawl.tools:checkstyle:8.28-SNAPSHOT.      Searched in the following locations:        - https://repo.spring.io/libs-snapshot/com/puppycrawl/tools/checkstyle/8.28-SNAPSHOT/maven-metadata.xml        - https://repo.spring.io/libs-snapshot/com/puppycrawl/tools/checkstyle/8.28-SNAPSHOT/checkstyle-8.28-SNAPSHOT.pom        - https://oss.jfrog.org/artifactory/libs-snapshot/com/puppycrawl/tools/checkstyle/8.28-SNAPSHOT/maven-metadata.xml        - https://oss.jfrog.org/artifactory/libs-snapshot/com/puppycrawl/tools/checkstyle/8.28-SNAPSHOT/checkstyle-8.28-SNAPSHOT.pom      Required by:          project :spring-integration-core  * Try: Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights. ==============================================================================  5: Task failed with an exception. ----------- * What went wrong: Execution failed for task ':spring-integration-event:checkstyleMain'. > Could not resolve all files for configuration ':spring-integration-event:checkstyle'.    > Could not find com.puppycrawl.tools:checkstyle:8.28-SNAPSHOT.      Searched in the following locations:        - https://oss.jfrog.org/artifactory/libs-snapshot/com/puppycrawl/tools/checkstyle/8.28-SNAPSHOT/maven-metadata.xml        - https://oss.jfrog.org/artifactory/libs-snapshot/com/puppycrawl/tools/checkstyle/8.28-SNAPSHOT/checkstyle-8.28-SNAPSHOT.pom      Required by:          project :spring-integration-event  * Try: Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights. ==============================================================================  * Get more help at https://help.gradle.org  Deprecated Gradle features were used in this build, making it incompatible with Gradle 7.0. Use '--warning-mode all' to show the individual deprecation warnings. See https://docs.gradle.org/6.0/userguide/command_line_interface.html#sec:command_line_warnings  BUILD FAILED in 2m 30s 167 actionable tasks: 131 executed, 36 up-to-date  ```","closed","CI,","romani","2019-12-06T17:07:33Z","2019-12-07T15:23:52Z"
"","7533","minor: enforce space after before comment text (#7388)","code cleanup for #7388","closed","","romani","2020-02-04T06:51:24Z","2020-11-07T15:59:34Z"
"","8000","Issue #7743: Update AbstractChecks to log DetailAST - MethodCount","Closes #7743: Update AbstractChecks to log DetailAST - MethodCount Diff report: https://shashwat70.github.io/diff1/","closed","","shashwatj07","2020-03-30T16:36:54Z","2020-04-08T09:44:08Z"
"","7956","Issue #7730: Update AbstractChecks to log DetailAST - EmptyLineSeparator","Closes #7730: Update AbstractChecks to log DetailAST - EmptyLineSeparator Diff report: https://shashwat70.github.io/diff/","closed","awaiting changes,","shashwatj07","2020-03-24T20:11:24Z","2020-10-11T04:33:34Z"
"","7906","Issue #7691: ClassFanOutComplexity doc update","Closes #7691   Site: https://shashwat70.github.io/site/config_metrics.html#ClassFanOutComplexity   Default config (Good): ``` C:\Users\Shashwat\Documents>cat config.xml                   C:\Users\Shashwat\Documents>cat Test.java public class InputClassComplexity {   Set set = new HashSet(); // Set, HashSet ignored due to default excludedClasses property   Map map = new HashMap(); // Map, HashMap ignored due to default excludedClasses property   public Date date = new Date(); // Counted, 1   public Time time = new Time(); // Counted, 2   public Place place = new Place(); // Counted, 3 }  C:\Users\Shashwat\Documents>java -jar checkstyle-8.29-all.jar -c config.xml Test.java Starting audit... Audit done. ```  Default config (Violating): ``` C:\Users\Shashwat\Documents>cat config.xml                   C:\Users\Shashwat\Documents>cat Test.java public class InputClassComplexity {   Set set = new HashSet(); // Set, HashSet ignored due to default excludedClasses property   Map map = new HashMap(); // Map, HashMap ignored due to default excludedClasses property   public Date date = new Date(); // Counted, 1   public Time time = new Time(); // Counted, 2   A01 a01;   A02 a02;   A03 a03;   A04 a04;   A05 a05;   A06 a06;   A07 a07;   A08 a08;   A09 a09;   A10 a10;   A11 a11;   A12 a12;   A13 a13;   A14 a14;   A15 a15;   A16 a16;   A17 a17;   A18 a18;   public Place place = new Place(); // violation, total is 21 }  C:\Users\Shashwat\Documents>java -jar checkstyle-8.29-all.jar -c config.xml Test.java Starting audit... [ERROR] C:\Users\Shashwat\Documents\Test.java:1:1: Class Fan-Out Complexity is 21 (max allowed is 20). [ClassFanOutComplexity] Audit done. Checkstyle ends with 1 errors. ```  max property config (Good): ``` C:\Users\Shashwat\Documents>cat config.xml                       C:\Users\Shashwat\Documents>cat Test.java public class InputClassComplexity {   Set set = new HashSet(); // Set, HashSet ignored due to default excludedClasses property   Map map = new HashMap(); // Map, HashMap ignored due to default excludedClasses property   public Date date = new Date(); // Counted, 1   public Time time = new Time(); // Counted, 2 }  C:\Users\Shashwat\Documents>java -jar checkstyle-8.29-all.jar -c config.xml Test.java Starting audit... Audit done. ```  max property config (Violating): ``` C:\Users\Shashwat\Documents>cat config.xml                       C:\Users\Shashwat\Documents>cat Test.java public class InputClassComplexity {   Set set = new HashSet(); // Set, HashSet ignored due to default excludedClasses property   Map map = new HashMap(); // Map, HashMap ignored due to default excludedClasses property   public Date date = new Date(); // Counted, 1   public Time time = new Time(); // Counted, 2   public Place place = new Place(); // violation, total is 3 }  C:\Users\Shashwat\Documents>java -jar checkstyle-8.29-all.jar -c config.xml Test.java Starting audit... [ERROR] C:\Users\Shashwat\Documents\Test.java:1:1: Class Fan-Out Complexity is 3 (max allowed is 2). [ClassFanOutComplexity] Audit done. Checkstyle ends with 1 errors. ```  excludedClasses property config (Good): ``` C:\Users\Shashwat\Documents>cat config.xml                       C:\Users\Shashwat\Documents>cat Test.java public class InputClassComplexity {   public Set set = new HashSet(); // Counted, 1   public Map map = new HashMap(); // Counted, 2   public Date date = new Date(); // Counted, 3   public Time time = new Time(); // Counted, 4   A01 a01;   A02 a02;   A03 a03;   A04 a04;   A05 a05;   A06 a06;   A07 a07;   A08 a08;   A09 a09;   A10 a10;   A11 a11;   A12 a12;   A13 a13;   A14 a14;   A15 a15;   A16 a16;   public Place place = new Place(); // Ignored }  C:\Users\Shashwat\Documents>java -jar checkstyle-8.29-all.jar -c config.xml Test.java Starting audit... Audit done. ```  excludedClasses property config (Violating): ``` C:\Users\Shashwat\Documents>cat config.xml                       C:\Users\Shashwat\Documents>cat Test.java public class InputClassComplexity {   public Set set = new HashSet(); // Counted, 1   public Map map = new HashMap(); // Counted, 2   public Date date = new Date(); // Counted, 3   public Time time = new Time(); // Counted, 4   A01 a01;   A02 a02;   A03 a03;   A04 a04;   A05 a05;   A06 a06;   A07 a07;   A08 a08;   A09 a09;   A10 a10;   A11 a11;   A12 a12;   A13 a13;   A14 a14;   A15 a15;   A16 a16;   public Space _space = new Space(); // violation, total is 21 }  C:\Users\Shashwat\Documents>java -jar checkstyle-8.29-all.jar -c config.xml Test.java Starting audit... [ERROR] C:\Users\Shashwat\Documents\Test.java:1:1: Class Fan-Out Complexity is 21 (max allowed is 20). [ClassFanOutComplexity] Audit done. Checkstyle ends with 1 errors. ```  excludedClassesRegexps property config (Good): ``` C:\Users\Shashwat\Documents>cat config.xml                      C:\Users\Shashwat\Documents>cat Test.java public class InputClassComplexity {   Set set = new HashSet(); // Set, HashSet ignored due to default excludedClasses property   Map map = new HashMap(); // Map, HashMap ignored due to default excludedClasses property   public Date date = new Date(); // Counted, 1   public Time time = new Time(); // Counted, 2   A01 a01;   A02 a02;   A03 a03;   A04 a04;   A05 a05;   A06 a06;   A07 a07;   A08 a08;   A09 a09;   A10 a10;   A11 a11;   A12 a12;   A13 a13;   A14 a14;   A15 a15;   A16 a16;   A17 a17;   A18 a18;   BufferedReader br; // Ignored } C:\Users\Shashwat\Documents>java -jar checkstyle-8.29-all.jar -c config.xml Test.java Starting audit... Audit done. ```  excludedClassesRegexps property config (Violating): ``` C:\Users\Shashwat\Documents>cat config.xml                      C:\Users\Shashwat\Documents>cat Test.java public class InputClassComplexity {   Set set = new HashSet(); // Set, HashSet ignored due to default excludedClasses property   Map map = new HashMap(); // Map, HashMap ignored due to default excludedClasses property   public Date date = new Date(); // Counted, 1   public Time time = new Time(); // Counted, 2   A01 a01;   A02 a02;   A03 a03;   A04 a04;   A05 a05;   A06 a06;   A07 a07;   A08 a08;   A09 a09;   A10 a10;   A11 a11;   A12 a12;   A13 a13;   A14 a14;   A15 a15;   A16 a16;   A17 a17;   A18 a18;   File file; // violation, total is 21 } C:\Users\Shashwat\Documents>java -jar checkstyle-8.29-all.jar -c config.xml Test.java Starting audit... [ERROR] C:\Users\Shashwat\Documents\Test.java:1:1: Class Fan-Out Complexity is 21 (max allowed is 20). [ClassFanOutComplexity] Audit done. Checkstyle ends with 1 errors. ```  excludedPackages property config (Good): ``` C:\Users\Shashwat\Documents>cat config.xml                      C:\Users\Shashwat\Documents>cat Test.java import java.io.BufferedReader;  public class InputClassComplexity {   Set set = new HashSet(); // Set, HashSet ignored due to default excludedClasses property   Map map = new HashMap(); // Map, HashMap ignored due to default excludedClasses property   public Date date = new Date(); // Counted, 1   public Time time = new Time(); // Counted, 2   A01 a01;   A02 a02;   A03 a03;   A04 a04;   A05 a05;   A06 a06;   A07 a07;   A08 a08;   A09 a09;   A10 a10;   A11 a11;   A12 a12;   A13 a13;   A14 a14;   A15 a15;   A16 a16;   A17 a17;   A18 a18;   BufferedReader br; // Ignored } C:\Users\Shashwat\Documents>java -jar checkstyle-8.29-all.jar -c config.xml Test.java Starting audit... Audit done. ```  excludedPackages property config (Violating): ``` C:\Users\Shashwat\Documents>cat config.xml                      C:\Users\Shashwat\Documents>cat Test.java  import java.util.StringTokenizer;  public class InputClassComplexity {   Set set = new HashSet(); // Set, HashSet ignored due to default excludedClasses property   Map map = new HashMap(); // Map, HashMap ignored due to default excludedClasses property   public Date date = new Date(); // Counted, 1   public Time time = new Time(); // Counted, 2   A01 a01;   A02 a02;   A03 a03;   A04 a04;   A05 a05;   A06 a06;   A07 a07;   A08 a08;   A09 a09;   A10 a10;   A11 a11;   A12 a12;   A13 a13;   A14 a14;   A15 a15;   A16 a16;   A17 a17;   A18 a18;   StringTokenizer st; // violation, total is 21 } C:\Users\Shashwat\Documents>java -jar checkstyle-8.29-all.jar -c config.xml Test.java Starting audit... [ERROR] C:\Users\Shashwat\Documents\Test.java:3:1: Class Fan-Out Complexity is 21 (max allowed is 20). [ClassFanOutComplexity] Audit done. Checkstyle ends with 1 errors. ```  Other explanatory example: ``` C:\Users\Shashwat\Documents>cat config.xml                      C:\Users\Shashwat\Documents>cat Test.java package a.b;  import a.b.Bar; import a.b.c.Baz;  public class Foo {   public Bar bar; // Will be ignored, located inside ignored a.b package   public Baz baz; // Will not be ignored, located inside a.b.c package   public Data data; // Will not be ignored, same file    class Data {     public Foo foo; // Will not be ignored, same file   } } C:\Users\Shashwat\Documents>java -jar checkstyle-8.29-all.jar -c config.xml Test.java Starting audit... Audit done. ```","closed","","shashwatj07","2020-03-19T13:47:50Z","2020-04-29T20:22:15Z"
"","7933","Issue #7690: ClassDataAbstractionCoupling doc update","Closes #7690  : update doc for ClassDataAbstractionCoupling  Site: https://shashwat70.github.io/site/config_metrics.html#ClassDataAbstractionCoupling  Default config (Good): ``` C:\Users\Shashwat\Documents>cat config.xml                  C:\Users\Shashwat\Documents>cat Test.java class InputClassCoupling {     Set set = new HashSet(); // HashSet ignored due to default excludedClasses property     Map map = new HashMap(); // HashMap ignored due to default excludedClasses property     Date date = new Date(); // Counted, 1     Time time = new Time(); // Counted, 2     Place place = new Place(); // Counted, 3   } C:\Users\Shashwat\Documents>java -jar checkstyle-8.29-all.jar -c config.xml Test.java Starting audit... Audit done. ```  Default config (Violating): ``` C:\Users\Shashwat\Documents>cat config.xml                  C:\Users\Shashwat\Documents>cat Test.java class InputClassCoupling {     Set set = new HashSet(); // HashSet ignored due to default excludedClasses property     Map map = new HashMap(); // HashMap ignored due to default excludedClasses property     Date date = new Date(); // Counted, 1     Time time = new Time(); // Counted, 2     A1 a1=new A1();     A2 a2=new A2();     A3 a3=new A3();     A4 a4=new A4();     A5 a5=new A5();     Place place = new Place(); // violation, total is 8   } C:\Users\Shashwat\Documents>java -jar checkstyle-8.29-all.jar -c config.xml Test.java Starting audit... [ERROR] C:\Users\Shashwat\Documents\Test.java:1:1: Class Data Abstraction Coupling is 8 (max allowed is 7) classes [A1, A2, A3, A4, A5, Date, Place, Time]. [ClassDataAbstractionCoupling] Audit done. Checkstyle ends with 1 errors. ```  max property config (Good): ``` C:\Users\Shashwat\Documents>cat config.xml                            C:\Users\Shashwat\Documents>cat Test.java class InputClassCoupling {     Set set = new HashSet(); // HashSet ignored due to default excludedClasses property     Map map = new HashMap(); // HashMap ignored due to default excludedClasses property     Date date = new Date(); // Counted, 1     Time time = new Time(); // Counted, 2   }  C:\Users\Shashwat\Documents>java -jar checkstyle-8.29-all.jar -c config.xml Test.java Starting audit... Audit done. ```  max property config (Violating): ``` C:\Users\Shashwat\Documents>cat config.xml                            C:\Users\Shashwat\Documents>cat Test.java class InputClassCoupling {     Set set = new HashSet(); // HashSet ignored due to default excludedClasses property     Map map = new HashMap(); // HashMap ignored due to default excludedClasses property     Date date = new Date(); // Counted, 1     Time time = new Time(); // Counted, 2     Place place = new Place(); // violation, total is 3   } C:\Users\Shashwat\Documents>java -jar checkstyle-8.29-all.jar -c config.xml Test.java Starting audit... [ERROR] C:\Users\Shashwat\Documents\Test.java:1:1: Class Data Abstraction Coupling is 3 (max allowed is 2) classes [Date, Place, Time]. [ClassDataAbstractionCoupling] Audit done. Checkstyle ends with 1 errors. ```  excludedClasses property config (Good): ``` C:\Users\Shashwat\Documents>cat config.xml                            C:\Users\Shashwat\Documents>cat Test.java class InputClassCoupling {     Set set = new HashSet(); // Ignored     Map map = new HashMap(); // Ignored     Date date = new Date(); // Counted, 1     Time time = new Time(); // Counted, 2     A1 a1=new A1();     A2 a2=new A2();     A3 a3=new A3();     A4 a4=new A4();     A5 a5=new A5();     Place place = new Place(); // Ignored   } C:\Users\Shashwat\Documents>java -jar checkstyle-8.29-all.jar -c config.xml Test.java Starting audit... Audit done. ```  excludedClasses property config (Violating): ``` C:\Users\Shashwat\Documents>cat config.xml                            C:\Users\Shashwat\Documents>cat Test.java class InputClassCoupling {     Set set = new HashSet(); // Ignored     Map map = new HashMap(); // Ignored     Date date = new Date(); // Counted, 1     Time time = new Time(); // Counted, 2     A1 a1=new A1();     A2 a2=new A2();     A3 a3=new A3();     A4 a4=new A4();     A5 a5=new A5();     Space space = new Space(); // violation, total is 8   }  C:\Users\Shashwat\Documents>java -jar checkstyle-8.29-all.jar -c config.xml Test.java Starting audit... [ERROR] C:\Users\Shashwat\Documents\Test.java:1:1: Class Data Abstraction Coupling is 8 (max allowed is 7) classes [A1, A2, A3, A4, A5, Date, Space, Time]. [ClassDataAbstractionCoupling] Audit done. Checkstyle ends with 1 errors. ```  excludedClassesRegexps property config (Good): ``` C:\Users\Shashwat\Documents>cat config.xml                            C:\Users\Shashwat\Documents>cat Test.java class InputClassCoupling {     Set set = new HashSet(); // HashSet ignored due to default excludedClasses property     Map map = new HashMap(); // HashMap ignored due to default excludedClasses property     Date date = new Date(); // Counted, 1     Time time = new Time(); // Counted, 2     A1 a1=new A1();     A2 a2=new A2();     A3 a3=new A3();     A4 a4=new A4();     A5 a5=new A5();     BufferedReader br = new BufferedReader(); // Ignored   } C:\Users\Shashwat\Documents>java -jar checkstyle-8.29-all.jar -c config.xml Test.java Starting audit... Audit done. ```  excludedClassesRegexps property config (Violating): ``` C:\Users\Shashwat\Documents>cat config.xml                            C:\Users\Shashwat\Documents>cat Test.java class InputClassCoupling {     Set set = new HashSet(); // HashSet ignored due to default excludedClasses property     Map map = new HashMap(); // HashMap ignored due to default excludedClasses property     Date date = new Date(); // Counted, 1     Time time = new Time(); // Counted, 2     A1 a1=new A1();     A2 a2=new A2();     A3 a3=new A3();     A4 a4=new A4();     A5 a5=new A5();     File file = new File(); // violation, total is 8   } C:\Users\Shashwat\Documents>java -jar checkstyle-8.29-all.jar -c config.xml Test.java Starting audit... [ERROR] C:\Users\Shashwat\Documents\Test.java:1:1: Class Data Abstraction Coupling is 8 (max allowed is 7) classes [A1, A2, A3, A4, A5, Date, File, Time]. [ClassDataAbstractionCoupling] Audit done. Checkstyle ends with 1 errors. ```  excludedPackages property config (Good): ``` C:\Users\Shashwat\Documents>cat config.xml                            C:\Users\Shashwat\Documents>cat Test.java import java.io.BufferedReader;  class InputClassCoupling {   Set set = new HashSet(); // HashSet ignored due to default excludedClasses property   Map map = new HashMap(); // HashMap ignored due to default excludedClasses property   Date date = new Date(); // Counted, 1   Time time = new Time(); // Counted, 2   A1 a1=new A1();   A2 a2=new A2();   A3 a3=new A3();   A4 a4=new A4();   A5 a5=new A5();   BufferedReader br = new BufferedReader(); // Ignored }  C:\Users\Shashwat\Documents>java -jar checkstyle-8.29-all.jar -c config.xml Test.java Starting audit... Audit done. ```  excludedPackages property config (Violating): ``` C:\Users\Shashwat\Documents>cat config.xml                            C:\Users\Shashwat\Documents>cat Test.java import java.util.StringTokenizer;  class InputClassCoupling {   Set set = new HashSet(); // HashSet ignored due to default excludedClasses property   Map map = new HashMap(); // HashMap ignored due to default excludedClasses property   Date date = new Date(); // Counted, 1   Time time = new Time(); // Counted, 2   A1 a1=new A1();   A2 a2=new A2();   A3 a3=new A3();   A4 a4=new A4();   A5 a5=new A5();   StringTokenizer st = new StringTokenizer(); // violation, total is 8 } C:\Users\Shashwat\Documents>java -jar checkstyle-8.29-all.jar -c config.xml Test.java Starting audit... [ERROR] C:\Users\Shashwat\Documents\Test.java:3:1: Class Data Abstraction Coupling is 8 (max allowed is 7) classes [A1, A2, A3, A4, A5, Date, StringTokenizer, Time]. [ClassDataAbstractionCoupling] Audit done. Checkstyle ends with 1 errors. ```  Other explanatory example: ``` C:\Users\Shashwat\Documents>cat config.xml                            C:\Users\Shashwat\Documents>cat Test.java package a.b;  import a.b.Bar; import a.b.c.Baz;  class Foo {   Bar bar; // Will be ignored, located inside ignored a.b package   Baz baz; // Will not be ignored, located inside a.b.c package   Data data; // Will not be ignored, same file    class Data {     Foo foo; // Will not be ignored, same file   } } C:\Users\Shashwat\Documents>java -jar checkstyle-8.29-all.jar -c config.xml Test.java Starting audit... Audit done. ```","closed","","shashwatj07","2020-03-21T19:28:45Z","2020-08-11T03:43:14Z"
"","7988","Issue #5624: Google Style Should Enforce Spaces after Commas","Closes #5624: Google Style Should Enforce Spaces after Commas Diff report: https://shashwat70.github.io/diff2/index.html","closed","","shashwatj07","2020-03-29T15:31:34Z","2020-04-29T20:23:41Z"
"","7204","Should checkstyleMain in gradle depend on classes task?","classes task would involve compileJava.   This sounds unncessary because checkstyle is only examing the source codes?   Please confirm..","closed","","willamette","2019-10-17T07:54:56Z","2019-10-17T15:08:35Z"
"","7766","Update AbstractChecks to log DetailAST - VariableDeclarationUsageDistance","Child of https://github.com/checkstyle/checkstyle/issues/5777  This issue specifically focuses on VariableDeclarationUsageDistance.","closed","gsoc second issue,","rnveach","2020-03-01T16:39:21Z","2020-06-04T13:58:56Z"
"","7765","Update AbstractChecks to log DetailAST - UnnecessaryParentheses","Child of https://github.com/checkstyle/checkstyle/issues/5777  This issue specifically focuses on UnnecessaryParentheses.","closed","gsoc second issue,","rnveach","2020-03-01T16:38:44Z","2020-06-02T14:10:59Z"
"","7764","Update AbstractChecks to log DetailAST - UncommentedMain","Child of https://github.com/checkstyle/checkstyle/issues/5777  This issue specifically focuses on UncommentedMain.","closed","gsoc second issue,","rnveach","2020-03-01T16:37:48Z","2020-03-20T12:26:06Z"
"","7763","Update AbstractChecks to log DetailAST - TrailingComment","Child of https://github.com/checkstyle/checkstyle/issues/5777  This issue specifically focuses on TrailingComment.","closed","approved,","rnveach","2020-03-01T16:37:07Z","2020-12-02T16:06:16Z"
"","7762","Update AbstractChecks to log DetailAST - TodoComment","Child of https://github.com/checkstyle/checkstyle/issues/5777  This issue specifically focuses on TodoComment.  **ATTENTION**: by fix of this issue Check is changing location of violation from precise line with patched pattern to line where comment is started. Single line comments will not be affected but violation is moved to begin of multiline comment. [Reason](https://github.com/checkstyle/checkstyle/issues/7762#issuecomment-637591754).","closed","gsoc second issue,","rnveach","2020-03-01T16:36:19Z","2020-06-03T13:43:40Z"
"","7761","Update AbstractChecks to log DetailAST - SuppressWarningsHolder","Child of https://github.com/checkstyle/checkstyle/issues/5777  This issue specifically focuses on SuppressWarningsHolder.","closed","gsoc second issue,","rnveach","2020-03-01T16:35:43Z","2020-03-14T11:40:22Z"
"","7760","Explain reason why RegexpSinglelineJava can not be supported by Xpath","Child of https://github.com/checkstyle/checkstyle/issues/5777  This issue specifically focuses on RegexpSinglelineJava.","closed","gsoc second issue,","rnveach","2020-03-01T16:34:10Z","2020-04-21T14:02:51Z"
"","7758","Update AbstractChecks to log DetailAST - PackageDeclaration","Child of https://github.com/checkstyle/checkstyle/issues/5777  This issue specifically focuses on PackageDeclaration.","closed","gsoc second issue,","rnveach","2020-03-01T16:32:26Z","2020-04-19T12:27:01Z"
"","7757","Update AbstractChecks to log DetailAST - PackageAnnotation","Child of https://github.com/checkstyle/checkstyle/issues/5777  This issue specifically focuses on PackageAnnotation.","closed","gsoc second issue,","rnveach","2020-03-01T16:31:43Z","2020-03-18T13:00:22Z"
"","7756","Update AbstractChecks to log DetailAST - OverloadMethodsDeclarationOrder","Child of https://github.com/checkstyle/checkstyle/issues/5777  This issue specifically focuses on OverloadMethodsDeclarationOrder.","closed","gsoc second issue,","rnveach","2020-03-01T16:31:00Z","2020-04-15T01:15:11Z"
"","7755","Update AbstractChecks to log DetailAST - OuterTypeFilename","Child of https://github.com/checkstyle/checkstyle/issues/5777  This issue specifically focuses on OuterTypeFilename.","closed","gsoc second issue,","rnveach","2020-03-01T16:30:18Z","2020-03-15T11:39:08Z"
"","7754","Update AbstractChecks to log DetailAST - OneTopLevelClass","Child of https://github.com/checkstyle/checkstyle/issues/5777  This issue specifically focuses on OneTopLevelClass.","closed","gsoc second issue,","rnveach","2020-03-01T16:29:39Z","2020-03-18T13:00:53Z"
"","7753","Update AbstractChecks to log DetailAST - NoLineWrap","Child of https://github.com/checkstyle/checkstyle/issues/5777  This issue specifically focuses on NoLineWrap.","closed","gsoc second issue,","rnveach","2020-03-01T16:27:33Z","2020-03-17T15:14:34Z"
"","7752","Update AbstractChecks to log DetailAST - NoFinalizer","Child of https://github.com/checkstyle/checkstyle/issues/5777  This issue specifically focuses on NoFinalizer.","closed","gsoc second issue,","rnveach","2020-03-01T16:26:32Z","2020-03-18T13:01:03Z"
"","7751","Update AbstractChecks to log DetailAST - NoClone","Child of https://github.com/checkstyle/checkstyle/issues/5777  This issue specifically focuses on NoClone.","closed","gsoc second issue,","rnveach","2020-03-01T16:25:27Z","2020-03-18T13:01:16Z"
"","7750","Update AbstractChecks to log DetailAST - NeedBraces","Child of https://github.com/checkstyle/checkstyle/issues/5777  This issue specifically focuses on NeedBraces.","closed","gsoc second issue,","rnveach","2020-03-01T16:24:22Z","2020-03-23T01:46:32Z"
"","7749","Update AbstractChecks to log DetailAST - MissingSwitchDefault","Child of https://github.com/checkstyle/checkstyle/issues/5777  This issue specifically focuses on MissingSwitchDefault.","closed","gsoc second issue,","rnveach","2020-03-01T16:23:04Z","2020-03-18T12:35:02Z"
"","7748","Update AbstractChecks to log DetailAST - MissingOverride","Child of https://github.com/checkstyle/checkstyle/issues/5777  This issue specifically focuses on MissingOverride.","closed","gsoc second issue,","rnveach","2020-03-01T16:20:47Z","2020-03-13T14:48:15Z"
"","7747","Update AbstractChecks to log DetailAST - MissingJavadocType","Child of https://github.com/checkstyle/checkstyle/issues/5777  This issue specifically focuses on MissingJavadocType.","closed","gsoc second issue,","rnveach","2020-03-01T16:19:44Z","2020-06-03T15:44:40Z"
"","7746","Update AbstractChecks to log DetailAST - MissingJavadocPackage","Child of https://github.com/checkstyle/checkstyle/issues/5777  This issue specifically focuses on MissingJavadocPackage.","closed","gsoc second issue,","rnveach","2020-03-01T16:19:00Z","2020-03-24T01:27:21Z"
"","7745","Update AbstractChecks to log DetailAST - MissingJavadocMethod","Child of https://github.com/checkstyle/checkstyle/issues/5777  This issue specifically focuses on MissingJavadocMethod.","closed","gsoc second issue,","rnveach","2020-03-01T16:18:04Z","2020-04-13T11:05:10Z"
"","7744","Update AbstractChecks to log DetailAST - MissingCtor","Child of https://github.com/checkstyle/checkstyle/issues/5777  This issue specifically focuses on MissingCtor.","closed","gsoc second issue,","rnveach","2020-03-01T16:17:14Z","2020-03-18T12:28:50Z"
"","7743","Update AbstractChecks to log DetailAST - MethodCount","Child of https://github.com/checkstyle/checkstyle/issues/5777  This issue specifically focuses on MethodCount.","closed","gsoc second issue,","rnveach","2020-03-01T16:16:31Z","2020-04-08T09:44:30Z"
"","7742","Update AbstractChecks to log DetailAST - LambdaParameterName","Child of https://github.com/checkstyle/checkstyle/issues/5777  This issue specifically focuses on LambdaParameterName.","closed","gsoc second issue,","rnveach","2020-03-01T16:15:39Z","2020-03-26T00:55:18Z"
"","7741","Update AbstractChecks to log DetailAST - JavadocType","Child of https://github.com/checkstyle/checkstyle/issues/5777  This issue specifically focuses on JavadocType.","closed","gsoc second issue,","rnveach","2020-03-01T16:14:39Z","2020-04-18T14:54:23Z"
"","7740","Update AbstractChecks to log DetailAST - JavadocStyle","Child of https://github.com/checkstyle/checkstyle/issues/5777  This issue specifically focuses on JavadocStyle.","closed","gsoc second issue,","rnveach","2020-03-01T16:11:07Z","2020-03-19T14:46:58Z"
"","7739","Update AbstractChecks to log DetailAST - JavadocMethod","Child of https://github.com/checkstyle/checkstyle/issues/5777  This issue specifically focuses on JavadocMethod.","closed","gsoc second issue,","rnveach","2020-03-01T16:10:10Z","2020-06-09T14:39:42Z"
"","7738","Update AbstractChecks to log DetailAST - JavadocContentLocation","Child of https://github.com/checkstyle/checkstyle/issues/5777  This issue specifically focuses on JavadocContentLocation.","closed","gsoc second issue,","rnveach","2020-03-01T16:09:16Z","2020-03-30T10:13:57Z"
"","7737","Update AbstractChecks to log DetailAST - InvalidJavadocPosition","Child of https://github.com/checkstyle/checkstyle/issues/5777  This issue specifically focuses on InvalidJavadocPosition.","closed","gsoc second issue,","rnveach","2020-03-01T16:08:19Z","2020-03-23T11:59:05Z"
"","7736","Update AbstractChecks to log DetailAST - InterfaceMemberImpliedModifier","Child of https://github.com/checkstyle/checkstyle/issues/5777  This issue specifically focuses on InterfaceMemberImpliedModifier.","closed","gsoc second issue,","rnveach","2020-03-01T16:07:26Z","2020-04-25T21:42:10Z"
"","7735","Update AbstractChecks to log DetailAST - InterfaceIsType","Child of https://github.com/checkstyle/checkstyle/issues/5777  This issue specifically focuses on InterfaceIsType.","closed","gsoc second issue,","rnveach","2020-03-01T16:06:18Z","2020-04-08T10:54:27Z"
"","7734","Update AbstractChecks to log DetailAST - Indentation","Child of https://github.com/checkstyle/checkstyle/issues/5777  This issue specifically focuses on Indentation.","closed","gsoc second issue,","rnveach","2020-03-01T16:04:45Z","2020-06-24T14:14:29Z"
"","7733","Update AbstractChecks to log DetailAST - ImportOrder","Child of https://github.com/checkstyle/checkstyle/issues/5777  This issue specifically focuses on ImportOrder.","closed","gsoc second issue,","rnveach","2020-03-01T16:03:53Z","2020-03-19T19:31:12Z"
"","7732","Update AbstractChecks to log DetailAST - IllegalCatch","Child of https://github.com/checkstyle/checkstyle/issues/5777  This issue specifically focuses on IllegalCatch.","closed","gsoc second issue,","rnveach","2020-03-01T16:03:03Z","2020-03-23T12:14:09Z"
"","7731","Update AbstractChecks to log DetailAST - FinalClass","Child of https://github.com/checkstyle/checkstyle/issues/5777  This issue specifically focuses on FinalClass.","closed","gsoc second issue,","rnveach","2020-03-01T16:01:52Z","2020-03-18T12:45:17Z"
"","7730","Update AbstractChecks to log DetailAST - EmptyLineSeparator","Child of https://github.com/checkstyle/checkstyle/issues/5777  This issue specifically focuses on EmptyLineSeparator.","closed","gsoc second issue,","rnveach","2020-03-01T16:00:36Z","2020-06-09T05:48:05Z"
"","7729","Update AbstractChecks to log DetailAST - EmptyCatchBlock","Child of https://github.com/checkstyle/checkstyle/issues/5777  This issue specifically focuses on EmptyCatchBlock.","closed","gsoc second issue,","rnveach","2020-03-01T15:59:45Z","2020-03-13T13:38:20Z"
"","7728","Update AbstractChecks to log DetailAST - CustomImportOrder","Child of https://github.com/checkstyle/checkstyle/issues/5777  This issue specifically focuses on CustomImportOrder.","closed","gsoc second issue,","rnveach","2020-03-01T15:58:54Z","2020-05-17T07:32:50Z"
"","7727","Update AbstractChecks to log DetailAST - CommentsIndentation","Child of https://github.com/checkstyle/checkstyle/issues/5777  This issue specifically focuses on CommentsIndentation.","closed","gsoc second issue,","rnveach","2020-03-01T15:57:20Z","2020-04-28T19:07:06Z"
"","7726","Update AbstractChecks to log DetailAST - AvoidStaticImport","Child of https://github.com/checkstyle/checkstyle/issues/5777  This issue specifically focuses on AvoidStaticImport .","closed","gsoc second issue,","rnveach","2020-03-01T15:55:32Z","2020-03-18T12:23:35Z"
"","7725","Update AbstractChecks to log DetailAST - AvoidStarImport","Child of https://github.com/checkstyle/checkstyle/issues/5777  This issue specifically focuses on AvoidStarImport.","closed","gsoc second issue,","rnveach","2020-03-01T15:54:48Z","2020-03-19T19:30:57Z"
"","7724","Update AbstractChecks to log DetailAST - AvoidEscapedUnicodeCharacters","Child of https://github.com/checkstyle/checkstyle/issues/5777  This issue specifically focuses on AvoidEscapedUnicodeCharacters.","closed","gsoc second issue,","rnveach","2020-03-01T15:53:41Z","2020-04-24T17:32:23Z"
"","7723","Update AbstractChecks to log DetailAST - ArrayTrailingComma","Child of https://github.com/checkstyle/checkstyle/issues/5777  This issue specifically focuses on ArrayTrailingComma.","closed","gsoc second issue,","rnveach","2020-03-01T15:52:08Z","2020-03-13T12:58:16Z"
"","7722","Update AbstractChecks to log DetailAST - AnnotationUseStyle","Child of https://github.com/checkstyle/checkstyle/issues/5777  This issue specifically focuses on AnnotationUseStyle.","closed","gsoc second issue,","rnveach","2020-03-01T15:51:10Z","2020-04-01T16:39:12Z"
"","7721","Update AbstractChecks to log DetailAST - AnnotationOnSameLine","Child of https://github.com/checkstyle/checkstyle/issues/5777  This issue specifically focuses on AnnotationOnSameLine.","closed","gsoc second issue,","rnveach","2020-03-01T15:50:11Z","2020-03-28T15:53:53Z"
"","7768","Update AbstractChecks to log DetailAST - AnnotationLocation","Child of https://github.com/checkstyle/checkstyle/issues/5777  This issue specifically focuses on AnnotationLocation .","closed","gsoc second issue,","rnveach","2020-03-01T16:40:21Z","2020-03-16T16:50:43Z"
"","7759","Explain reason why Regexp can not be supported by Xpath","Child of https://github.com/checkstyle/checkstyle/issues/5777  This issue specifically focuses on [Regexp](https://checkstyle.org/config_regexp.html#Regexp).","closed","gsoc second issue,","rnveach","2020-03-01T16:33:28Z","2020-04-21T14:02:01Z"
"","7801","Resolve Pitest Issues - AvoidStaticImportCheck","Child issue of https://github.com/checkstyle/checkstyle/issues/7797 ,  This issue specifically focuses on the line https://github.com/checkstyle/checkstyle/blob/abf829f542023e089c741c55f73098cae52dcb12/.ci/pitest.sh#L76","closed","gsoc third issue,","rnveach","2020-03-08T18:42:41Z","2020-03-16T09:45:53Z"
"","7800","Resolve Pitest Issues - AvoidStarImportCheck (2)","Child issue of https://github.com/checkstyle/checkstyle/issues/7797 ,  This issue specifically focuses on the line https://github.com/checkstyle/checkstyle/blob/abf829f542023e089c741c55f73098cae52dcb12/.ci/pitest.sh#L75","closed","gsoc third issue,","rnveach","2020-03-08T18:41:30Z","2020-03-15T11:56:02Z"
"","7799","Resolve Pitest Issues - AvoidStarImportCheck (1)","Child issue of https://github.com/checkstyle/checkstyle/issues/7797 ,  This issue specifically focuses on the line https://github.com/checkstyle/checkstyle/blob/abf829f542023e089c741c55f73098cae52dcb12/.ci/pitest.sh#L74","closed","gsoc third issue,","rnveach","2020-03-08T18:40:48Z","2020-03-16T02:41:21Z"
"","7921","Resolve Pitest Issues - UnusedImportsCheck","Child issue of https://github.com/checkstyle/checkstyle/issues/7797 ,  https://github.com/checkstyle/checkstyle/blob/f9131f9536c71d963c83aab1550b7a0371aa9ff5/.ci/pitest.sh#L91","closed","gsoc third issue,","rnveach","2020-03-20T22:40:09Z","2020-05-17T22:47:22Z"
"","7920","Resolve Pitest Issues - RedundantImportCheck","Child issue of https://github.com/checkstyle/checkstyle/issues/7797 ,  https://github.com/checkstyle/checkstyle/blob/f9131f9536c71d963c83aab1550b7a0371aa9ff5/.ci/pitest.sh#L90","closed","gsoc third issue,","rnveach","2020-03-20T22:39:07Z","2020-03-26T07:04:43Z"
"","7983","Resolve Pitest Issues - RegexpCheck (2)","Child issue of https://github.com/checkstyle/checkstyle/issues/7797 ,  https://github.com/checkstyle/checkstyle/blob/f9131f9536c71d963c83aab1550b7a0371aa9ff5/.ci/pitest.sh#L53","closed","gsoc third issue,","rnveach","2020-03-28T16:07:11Z","2020-10-12T23:53:53Z"
"","7982","Resolve Pitest Issues - RegexpCheck (1)","Child issue of https://github.com/checkstyle/checkstyle/issues/7797 ,  https://github.com/checkstyle/checkstyle/blob/f9131f9536c71d963c83aab1550b7a0371aa9ff5/.ci/pitest.sh#L52","closed","gsoc third issue,","rnveach","2020-03-28T16:06:45Z","2020-04-04T10:24:05Z"
"","7981","Resolve Pitest Issues - DetectorOptions","Child issue of https://github.com/checkstyle/checkstyle/issues/7797 ,  https://github.com/checkstyle/checkstyle/blob/f9131f9536c71d963c83aab1550b7a0371aa9ff5/.ci/pitest.sh#L51","closed","gsoc third issue,","rnveach","2020-03-28T16:05:52Z","2020-04-01T08:21:26Z"
"","7980","Resolve Pitest Issues - JavadocMethodCheck (8)","Child issue of https://github.com/checkstyle/checkstyle/issues/7797 ,  https://github.com/checkstyle/checkstyle/blob/f9131f9536c71d963c83aab1550b7a0371aa9ff5/.ci/pitest.sh#L189","closed","gsoc third issue,","rnveach","2020-03-28T16:03:15Z","2020-05-19T13:27:10Z"
"","7979","Resolve Pitest Issues - JavadocMethodCheck (7)","Child issue of https://github.com/checkstyle/checkstyle/issues/7797 ,  https://github.com/checkstyle/checkstyle/blob/f9131f9536c71d963c83aab1550b7a0371aa9ff5/.ci/pitest.sh#L188","closed","gsoc third issue,","rnveach","2020-03-28T16:02:28Z","2020-04-26T15:21:10Z"
"","7978","Resolve Pitest Issues - JavadocMethodCheck (6)","Child issue of https://github.com/checkstyle/checkstyle/issues/7797 ,  https://github.com/checkstyle/checkstyle/blob/f9131f9536c71d963c83aab1550b7a0371aa9ff5/.ci/pitest.sh#L187","closed","gsoc third issue,","rnveach","2020-03-28T16:01:57Z","2020-04-04T10:17:01Z"
"","7977","Resolve Pitest Issues - JavadocMethodCheck (5)","Child issue of https://github.com/checkstyle/checkstyle/issues/7797 ,  https://github.com/checkstyle/checkstyle/blob/f9131f9536c71d963c83aab1550b7a0371aa9ff5/.ci/pitest.sh#L186","closed","gsoc third issue,","rnveach","2020-03-28T16:01:16Z","2020-05-19T14:03:37Z"
"","7925","Resolve Pitest Issues - JavadocMethodCheck (4)","Child issue of https://github.com/checkstyle/checkstyle/issues/7797 ,  https://github.com/checkstyle/checkstyle/blob/f9131f9536c71d963c83aab1550b7a0371aa9ff5/.ci/pitest.sh#L185","closed","gsoc third issue,","rnveach","2020-03-20T22:54:29Z","2020-05-19T13:28:22Z"
"","7924","Resolve Pitest Issues - JavadocMethodCheck (3)","Child issue of https://github.com/checkstyle/checkstyle/issues/7797 ,  https://github.com/checkstyle/checkstyle/blob/f9131f9536c71d963c83aab1550b7a0371aa9ff5/.ci/pitest.sh#L184","closed","gsoc third issue,","rnveach","2020-03-20T22:53:42Z","2020-05-19T13:28:07Z"
"","7923","Resolve Pitest Issues - JavadocMethodCheck (2)","Child issue of https://github.com/checkstyle/checkstyle/issues/7797 ,  https://github.com/checkstyle/checkstyle/blob/f9131f9536c71d963c83aab1550b7a0371aa9ff5/.ci/pitest.sh#L183","closed","gsoc third issue,","rnveach","2020-03-20T22:53:04Z","2020-05-19T13:27:56Z"
"","7922","Resolve Pitest Issues - JavadocMethodCheck (1)","Child issue of https://github.com/checkstyle/checkstyle/issues/7797 ,  https://github.com/checkstyle/checkstyle/blob/f9131f9536c71d963c83aab1550b7a0371aa9ff5/.ci/pitest.sh#L182","closed","gsoc third issue,","rnveach","2020-03-20T22:42:44Z","2020-04-16T15:11:15Z"
"","7878","Resolve Pitest Issues - ImportOrderCheck (7)","Child issue of https://github.com/checkstyle/checkstyle/issues/7797 ,  https://github.com/checkstyle/checkstyle/blob/abf829f542023e089c741c55f73098cae52dcb12/.ci/pitest.sh#L92","closed","gsoc third issue,","rnveach","2020-03-16T23:04:35Z","2021-02-11T09:50:17Z"
"","7877","Resolve Pitest Issues - ImportOrderCheck (6)","Child issue of https://github.com/checkstyle/checkstyle/issues/7797 ,  https://github.com/checkstyle/checkstyle/blob/abf829f542023e089c741c55f73098cae52dcb12/.ci/pitest.sh#L91","closed","gsoc third issue,","rnveach","2020-03-16T23:03:55Z","2021-02-21T08:05:30Z"
"","7876","Resolve Pitest Issues - ImportOrderCheck (5)","Child issue of https://github.com/checkstyle/checkstyle/issues/7797 ,  https://github.com/checkstyle/checkstyle/blob/abf829f542023e089c741c55f73098cae52dcb12/.ci/pitest.sh#L90","closed","gsoc third issue,","rnveach","2020-03-16T23:03:24Z","2020-05-30T12:09:05Z"
"","7875","Resolve Pitest Issues - ImportOrderCheck (4)","Child issue of https://github.com/checkstyle/checkstyle/issues/7797 ,  https://github.com/checkstyle/checkstyle/blob/abf829f542023e089c741c55f73098cae52dcb12/.ci/pitest.sh#L89","closed","miscellaneous,","rnveach","2020-03-16T23:02:44Z","2020-12-21T15:53:52Z"
"","7874","Resolve Pitest Issues - ImportOrderCheck (3)","Child issue of https://github.com/checkstyle/checkstyle/issues/7797 ,  https://github.com/checkstyle/checkstyle/blob/abf829f542023e089c741c55f73098cae52dcb12/.ci/pitest.sh#L88","closed","gsoc third issue,","rnveach","2020-03-16T23:01:52Z","2020-04-02T09:32:53Z"
"","7873","Resolve Pitest Issues - ImportOrderCheck (2)","Child issue of https://github.com/checkstyle/checkstyle/issues/7797 ,  https://github.com/checkstyle/checkstyle/blob/abf829f542023e089c741c55f73098cae52dcb12/.ci/pitest.sh#L87","closed","gsoc third issue,","rnveach","2020-03-16T23:01:17Z","2020-05-17T03:19:45Z"
"","7872","Resolve Pitest Issues - ImportOrderCheck (1)","Child issue of https://github.com/checkstyle/checkstyle/issues/7797 ,  https://github.com/checkstyle/checkstyle/blob/abf829f542023e089c741c55f73098cae52dcb12/.ci/pitest.sh#L86","closed","gsoc third issue,","rnveach","2020-03-16T23:00:35Z","2020-09-05T07:08:27Z"
"","7856","Resolve Pitest Issues - IllegalImportCheck (3)","Child issue of https://github.com/checkstyle/checkstyle/issues/7797 ,  https://github.com/checkstyle/checkstyle/blob/abf829f542023e089c741c55f73098cae52dcb12/.ci/pitest.sh#L84","closed","approved,","rnveach","2020-03-15T16:14:39Z","2020-12-17T13:48:05Z"
"","7855","Resolve Pitest Issues - IllegalImportCheck (2)","Child issue of https://github.com/checkstyle/checkstyle/issues/7797 ,  https://github.com/checkstyle/checkstyle/blob/abf829f542023e089c741c55f73098cae52dcb12/.ci/pitest.sh#L83","closed","gsoc third issue,","rnveach","2020-03-15T16:13:56Z","2020-03-28T17:09:14Z"
"","7854","Resolve Pitest Issues - IllegalImportCheck (1)","Child issue of https://github.com/checkstyle/checkstyle/issues/7797 ,  https://github.com/checkstyle/checkstyle/blob/abf829f542023e089c741c55f73098cae52dcb12/.ci/pitest.sh#L82","closed","gsoc third issue,","rnveach","2020-03-15T16:12:49Z","2020-03-23T06:57:45Z"
"","7806","Resolve Pitest Issues - CustomImportOrderCheck (5)","Child issue of https://github.com/checkstyle/checkstyle/issues/7797 ,  https://github.com/checkstyle/checkstyle/blob/abf829f542023e089c741c55f73098cae52dcb12/.ci/pitest.sh#L81","closed","gsoc third issue,","rnveach","2020-03-08T18:47:08Z","2020-03-12T19:03:32Z"
"","7805","Resolve Pitest Issues - CustomImportOrderCheck (4)","Child issue of https://github.com/checkstyle/checkstyle/issues/7797 ,  https://github.com/checkstyle/checkstyle/blob/abf829f542023e089c741c55f73098cae52dcb12/.ci/pitest.sh#L80","closed","gsoc third issue,","rnveach","2020-03-08T18:46:25Z","2020-03-20T11:50:39Z"
"","7804","Resolve Pitest Issues - CustomImportOrderCheck (3)","Child issue of https://github.com/checkstyle/checkstyle/issues/7797 ,  https://github.com/checkstyle/checkstyle/blob/abf829f542023e089c741c55f73098cae52dcb12/.ci/pitest.sh#L79","closed","gsoc third issue,","rnveach","2020-03-08T18:46:02Z","2020-05-17T03:27:32Z"
"","7803","Resolve Pitest Issues - CustomImportOrderCheck (2)","Child issue of https://github.com/checkstyle/checkstyle/issues/7797 ,  https://github.com/checkstyle/checkstyle/blob/abf829f542023e089c741c55f73098cae52dcb12/.ci/pitest.sh#L78","closed","gsoc third issue,","rnveach","2020-03-08T18:44:56Z","2020-03-20T11:50:14Z"
"","7802","Resolve Pitest Issues - CustomImportOrderCheck (1)","Child issue of https://github.com/checkstyle/checkstyle/issues/7797 ,  https://github.com/checkstyle/checkstyle/blob/abf829f542023e089c741c55f73098cae52dcb12/.ci/pitest.sh#L77","closed","gsoc third issue,","rnveach","2020-03-08T18:43:54Z","2020-03-12T19:03:14Z"
"","7902","Issue #7877: Fix for ImprtOrderCheck(6)","checkstyle#7877: Fix for ImprtOrderCheck(6)","closed","awaiting response,","yajna-pandith","2020-03-19T07:48:52Z","2020-08-19T14:10:35Z"
"","7033","Tests fail on OpenJDK 12 due to 'Failed to find the ""modifiers"" field in method setInternalState.'","Checkstyle build by `mvn install` fails on OpenJDK 12 due to  ``` java.lang.RuntimeException: Internal error: Failed to find the ""modifiers"" field in method setInternalState.  	at org.powermock.reflect.internal.WhiteboxImpl.sedModifiersToField(WhiteboxImpl.java:2356) 	at org.powermock.reflect.internal.WhiteboxImpl.removeFinalModifierIfPresent(WhiteboxImpl.java:2320) 	at org.powermock.reflect.internal.WhiteboxImpl.setField(WhiteboxImpl.java:2306) 	at org.powermock.reflect.internal.WhiteboxImpl.setInternalState(WhiteboxImpl.java:304) 	at org.powermock.reflect.Whitebox.setInternalState(Whitebox.java:174) 	at com.puppycrawl.tools.checkstyle.api.FileContentsTest.testGetJavadocBefore(FileContentsTest.java:240) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.base/java.lang.reflect.Method.invoke(Method.java:567) 	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) 	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) 	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) 	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) 	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) 	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) 	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) 	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) 	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) 	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) 	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) 	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) 	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.base/java.lang.reflect.Method.invoke(Method.java:567) 	at com.intellij.rt.execution.application.AppMainV2.main(AppMainV2.java:131) Caused by: java.lang.NoSuchFieldException: modifiers 	at java.base/java.lang.Class.getDeclaredField(Class.java:2416) 	at org.powermock.reflect.internal.WhiteboxImpl.sedModifiersToField(WhiteboxImpl.java:2350) 	... 32 more ```  I propose exposing `FileContents.javadocComments` with a package-protected getter which is used instead of the Powermock's `Whitebox.setInternalState`.  I think @rnveach already did some research on this in https://github.com/powermock/powermock/issues/939. I however am convinced that sacrificing the hidden field for easier tests is the way to go.  The tests are currently excluded which is not ideal because OpenJDK 12 is GA.  I can open a PR for that.","closed","miscellaneous,","krichter722","2019-08-30T16:02:38Z","2019-11-10T18:51:04Z"
"","7449","New Rule request: Forbidden API calls","Check documentation: no such check yet, I checked.  ```  /var/tmp $ cat config.xml","closed","","bmarwell","2020-01-08T20:39:19Z","2020-01-09T22:16:05Z"
"","7769","TranslationCheck: add option to deactivate check for default resource file","Check documentation: https://checkstyle.sourceforge.io/config_misc.html#Translation  ``` /var/tmp$ cat config.xml              /var/tmp$ cat messages_de.properties test=Test  /var/tmp$ cat messages_en.properties test=TestEN  /var/tmp$ RUN_LOCALE=""-Duser.language=en -Duser.country=US""  /var/tmp$ java $RUN_LOCALE -jar checkstyle-8.30-all.jar -d -c config.xml \    messages_de.properties messages_en.properties  Starting audit... [ERROR] /var/tmp:1: Properties file 'messages.properties' is missing. [Translation] Audit done. Checkstyle ends with 1 errors.  ```  Running checkstyle with this configuration fails, as there is no 'messages.properties' file in the project. What I expect: An option to turn of the check for the default properties file and make this test pass.  -----------------  We have two resource files: messages_de.properties and messages_en.properties. We do not have a default resource file (messages.properties), we always fall back to '_en' in our code.  TranslationCheck is one of the most useful checks for us as it ensures that our .properties files are consistent. However, we currently can't use it as it will always fail because we are missing a default resource file.  I would like an additional configuration option along the lines of ""disableDefaultResourceFileCheck"" which defaults to 'false' and if set to 'true' will skip the test for a default resource file.  I know that there are probably not a lot of users with this usecase. That's why I will create a pull request if this issue is approved.","closed","","Benschio","2020-03-02T09:54:52Z","2020-07-14T07:43:40Z"
"","7400","`UnusedImports` can't detect unused `import java.util.*;`","Check documentation: https://checkstyle.sourceforge.io/config_imports.html#UnusedImports  ``` /var/tmp $ javac Main.java  /var/tmp $ cat config.xml                              /var/tmp $ cat YOUR_FILE.java import java.util.*;  public class Main { }  /var/tmp $ RUN_LOCALE=""-Duser.language=en -Duser.country=US"" /var/tmp $ java $RUN_LOCALE -jar checkstyle-X.XX-all.jar -c config.xml Main.java Starting audit... Audit done. ```  ---------------  Unused `java.util.*` imports should be detected by `UnusedImports` but they're not. I understand checkstyle is working on source-code-level so can't scan a package, but `java.util.*` is not a problem IMHO.  --------------","open","","blindpirate","2019-12-26T14:58:40Z","2019-12-27T04:02:07Z"
"","7410","SAXParseException with CustomImportOrder in config","Check documentation: https://checkstyle.sourceforge.io/config_imports.html#CustomImportOrder  ``` /var/tmp $ javac YOUR_FILE.java **Not applicable since issue is related to config parsing**  /var/tmp $ cat config.xml `xml                                                                                                                          `  /var/tmp $ cat YOUR_FILE.java **Not applicable since issue is related to config parsing**  /var/tmp $ RUN_LOCALE=""-Duser.language=en -Duser.country=US"" /var/tmp $ java $RUN_LOCALE -jar checkstyle-X.XX-all.jar -c config.xml YOUR_FILE.java **Not applicable since config fails to parse** ```  After reading the documentation for the CustomImportOrder check I wanted to use it in my configuration. However adding the above snippet (copied from the google_check.xml) the configuration fails to parse. With the following error:  ``` [INFO] [ERROR] Failed to execute goal org.apache.maven.plugins:maven-checkstyle-plugin:3.1.0:check (validate) on project oss-module-project: Failed during checkstyle execution: Failed during checkstyle configuration: unable to parse configuration stream - The value of attribute ""value"" associated with an element type ""property"" must not contain the '","closed","","pgerhard","2019-12-28T20:47:57Z","2019-12-28T22:46:08Z"
"","7522","Exception when using SuppressWarningsHolder with @SuppressWarnings as an annotation property (e.g. in Lombok)","Check documentation: https://checkstyle.sourceforge.io/config_annotation.html#SuppressWarningsHolder  ``` $ curl -s https://repo1.maven.org/maven2/org/projectlombok/lombok/1.18.10/lombok-1.18.10.jar -O  $ javac -cp lombok-1.18.10.jar Test.java  $ cat Test.java  import lombok.Getter;  import java.lang.annotation.ElementType; import java.lang.annotation.Retention; import java.lang.annotation.RetentionPolicy; import java.lang.annotation.Target; import java.util.List;  public class Test {     @Getter(onMethod_ = @SuppressWarnings(""unchecked"")) // This causes the exception     private final List problematicProperty = List.of();      @Getter(onMethod_ = @Deprecated(forRemoval = true)) // No problems with this one     private final List workingProperty = List.of();      @CustomAnnotation(@SuppressWarnings(""unchecked"")) // This also causes the exception     private List nonLombokProblematicField;      @Retention(RetentionPolicy.RUNTIME)     @Target(ElementType.FIELD)     public @interface CustomAnnotation {         SuppressWarnings value();     } }  $ cat config.xml                               $ java -Duser.language=en -Duser.country=US -jar checkstyle-8.29-all.jar -c config.xml Test.java Starting audit... com.puppycrawl.tools.checkstyle.api.CheckstyleException: Exception was thrown while processing Test.java 	at com.puppycrawl.tools.checkstyle.Checker.processFiles(Checker.java:304) 	at com.puppycrawl.tools.checkstyle.Checker.process(Checker.java:216) 	at com.puppycrawl.tools.checkstyle.Main.runCheckstyle(Main.java:400) 	at com.puppycrawl.tools.checkstyle.Main.runCli(Main.java:324) 	at com.puppycrawl.tools.checkstyle.Main.execute(Main.java:187) 	at com.puppycrawl.tools.checkstyle.Main.main(Main.java:124) Caused by: java.lang.IllegalArgumentException: Unexpected container AST: ANNOTATION_MEMBER_VALUE_PAIR[6x12] 	at com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder.getAnnotationTarget(SuppressWarningsHolder.java:406) 	at com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder.visitToken(SuppressWarningsHolder.java:296) 	at com.puppycrawl.tools.checkstyle.TreeWalker.notifyVisit(TreeWalker.java:342) 	at com.puppycrawl.tools.checkstyle.TreeWalker.processIter(TreeWalker.java:449) 	at com.puppycrawl.tools.checkstyle.TreeWalker.walk(TreeWalker.java:283) 	at com.puppycrawl.tools.checkstyle.TreeWalker.processFiltered(TreeWalker.java:161) 	at com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck.process(AbstractFileSetCheck.java:85) 	at com.puppycrawl.tools.checkstyle.Checker.processFile(Checker.java:329) 	at com.puppycrawl.tools.checkstyle.Checker.processFiles(Checker.java:291) 	... 5 more Checkstyle ends with 1 errors. ```  ---------------  When using Lombok's `@Getter(onMethod_ = @SuppressWarnings(""unchecked""))` approach to suppress warnings on a generated getter, Checkstyle will throw an exception when `SuppressWarningsHolder` is specified in the config.  No exception is thrown if `SuppressWarningsHolder` is not configured, or for other types of annotations specified in `onMethod_`.  Note that this problem is actually more general than just a Lombok issue.  This error occurs anywhere the `@SuppressWarnings` annotation is used as the value for an annotation property.  I included an example of this in my test class.  I would expect Checkstyle to not error in this situation.  It should ignore `@SuppressWarnings` annotations that are not actually annotating program elements, but that are instead properties for other annotations.  The above example was performed against Java 11.","closed","high demand,","mjustin","2020-01-30T22:09:37Z","2020-03-11T13:41:43Z"
"","7470","SuppressionCommentFilter being ignored","Check documentation: https://checkstyle.org/config_xxxxxx.html#NameOfAffectedCheck  ``` /var/tmp $ javac YOUR_FILE.java #[[MAKE SURE THERE IS NO OUTPUT]]  /var/tmp $ cat config.xml                                                                                                                                                                                                                 /var/tmp $ cat YOUR_FILE.java package testing; public class Testing {     private static final String qwertyuioplkjhgfdsazxcvbnmqwertyuioplkjhgfdsazxcvbnmqwertyuioplkjhgfdsazxcvbnmqwertyuioplkjhgfdsazxcvbnmqwertyuioplkjhgfdsazxcvbnm = """";     //CHECKSTYLE:OFF     private static final String mnbvcdrtyuiuytrewqasdesxcvghbnmkoiuyhmnbvcdrtyuiuytrewqasdesxcvghbnmkoiuyhmnbvcdrtyuiuytrewqasdesxcvghbnmkoiuyhmnbvcdrtyuiuytrewqa = """";     //CHECKSTYLE:ON }  /var/tmp $ RUN_LOCALE=""-Duser.language=en -Duser.country=US"" /var/tmp $ java $RUN_LOCALE -jar checkstyle-X.XX-all.jar -c config.xml YOUR_FILE.java [INFO] --- maven-checkstyle-plugin:3.1.0:check (checkstyle-check) @ testing --- [INFO] Starting audit... [ERROR] TESTING/src/main/java/testing/Testing.java:3: Line is longer than 120 characters (found 168). [LineLength] [ERROR] TESTING/src/main/java/testing/Testing.java:5: Line is longer than 120 characters (found 168). [LineLength] Audit done. ```  ---------------  Describe what you expect in detail.  I've got some auto generated code with is longer than 120 characters, luckly it's nested within; //------------------------- AUTOGENERATED START ------------------------- //-------------------------- AUTOGENERATED END --------------------------  But checkstyle is still reporting issues, so I tried just using CHECKSTYLE:OFF and CHECKSTYLE:ON. The file Testing.java I'm aware 2 lines are longer than 120 characters but using SuppressionCommentFilter I'm only expecting 1 error to be reported, line 3 which is not withing the comment filter block.  I've tried moving the module elements but I get nesting errors.  My issue is how can I turn all checkstyle checking for a given block, that is surrounded by comment tags?  --------------  Still not clear ??? see example - https://checkstyle.org/report_issue.html#How_to_report_a_bug.3F  ATTENTION: FAILURE TO FOLLOW THE ABOVE TEMPLATE WILL RESULT IN THE ISSUE BEING CLOSED.","closed","","nhojpatrick","2020-01-13T19:13:22Z","2020-01-13T19:54:04Z"
"","7503","Standard google_checks.xml throws error: ""ENUM_DEF"" Not Found","Check documentation: https://checkstyle.org/config_xxxxxx.html#NameOfAffectedCheck  # Compile?  ```bash /var/tmp $ javac YOUR_FILE.java ```  ## OUTPUT  No output  # Config  ```bash /var/tmp $ cat config.xml ```  ## OUTPUT  Using stock google_checks.xml config  # File ```bash /var/tmp $ cat YOUR_FILE.java ``` ## OUTPUT ```java public class Test {   int wrongIndent = 0; } ```  # Checkstyle  ```bash Tome-of-Ancient-Secrets:resources trevorradcliffe$ RUN_LOCALE=""-Duser.language=en -Duser.country=US"" Tome-of-Ancient-Secrets:resources trevorradcliffe$ java $RUN_LOCALE -jar ~/Downloads/checkstyle-8.28-all.jar -c $SRC/checkstyle/src/main/resources/google_checks.xml Test.java ```  ## OUTPUT  ```bash com.puppycrawl.tools.checkstyle.api.CheckstyleException: cannot initialize module TreeWalker - Token ""ENUM_DEF"" was not found in Acceptable tokens list in check com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck 	at com.puppycrawl.tools.checkstyle.Checker.setupChild(Checker.java:473) 	at com.puppycrawl.tools.checkstyle.api.AutomaticBean.configure(AutomaticBean.java:198) 	at com.puppycrawl.tools.checkstyle.Main.runCheckstyle(Main.java:396) 	at com.puppycrawl.tools.checkstyle.Main.runCli(Main.java:324) 	at com.puppycrawl.tools.checkstyle.Main.execute(Main.java:187) 	at com.puppycrawl.tools.checkstyle.Main.main(Main.java:124) Caused by: com.puppycrawl.tools.checkstyle.api.CheckstyleException: Token ""ENUM_DEF"" was not found in Acceptable tokens list in check com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck 	at com.puppycrawl.tools.checkstyle.TreeWalker.registerCheck(TreeWalker.java:228) 	at com.puppycrawl.tools.checkstyle.TreeWalker.setupChild(TreeWalker.java:140) 	at com.puppycrawl.tools.checkstyle.api.AutomaticBean.configure(AutomaticBean.java:198) 	at com.puppycrawl.tools.checkstyle.Checker.setupChild(Checker.java:468) 	... 5 more Checkstyle ends with 1 errors. ```  ---------------  # What Do I Expect  There to be no error when running with a stock config provided in the checkstyle repo","closed","","t-rad679","2020-01-22T14:10:56Z","2020-02-05T15:15:42Z"
"","7543","WhitespaceAround: violation on empty initializer","Check documentation: https://checkstyle.org/config_whitespace.html#WhitespaceAround Google style: https://checkstyle.org/styleguides/google-java-style-20180523/javaguide.html#s4.1.3-braces-empty-blocks  empty initializes are not covered by style ... as it is not well used pattern.   >  Alternatively, it may be closed immediately after it is opened, with no characters or line break in between ({}), unless it is part of a multi-block statement (one that directly contains multiple blocks: if/else or try/catch/finally)  If we strictly read this, then empty initializes should be allowed. BUT what is reason of empty initializers ? they have no expression block (where side effect cuold happen). As for me it is same as extra `;` , no-sense, so it is ok to have violation on it.     ``` $ cat config.xml                                                                                                                                         $ cat Test1.java public class Test1 {    private Test1() {} //ok    {} // violation, should it be ok?    static {} // violation, should it be ok?    final class BrrrTests extends Object {} // ok    void method6(int a) {     {}; // violation, should it be ok?   }    void method7(int a) {} //ok    class TestClass4 {} //ok    enum Test {} //ok    interface Interface {} //ok    @interface ClassPreamble { } //ok, should be violation, as there is space    void method2(java.util.HashSet set) {     java.util.Map map2 = new java.util.LinkedHashMap() {{         put(""Hello"", ""World"");       }}; //ok      if (set.isEmpty()) {       while (true) {} //ok     }     if (!set.isEmpty()) {       do {} while (true); //ok     } else {       for (int i = 0; i < 10; i++) {} //ok     }   }    void method8(int a) {     java.util.Map map3 = new java.util.LinkedHashMap() {{         put(""Hello"", ""World"");       }        {} // violation, should it be ok?        };     try {      } catch (Exception ex) {} // violation   } }  @interface TesterAnnotation {} //ok  $ java -jar /var/tmp/checkstyle-8.29-all.jar -c config.xml Test1.java  Starting audit... [ERROR] /var/tmp/Test1.java:5:3: WhitespaceAround: '{' is not followed by whitespace.  Empty blocks may only be represented as {} when not part of a multi-block  statement (4.1.3) [WhitespaceAround] [ERROR] /var/tmp/Test1.java:5:4: WhitespaceAround: '}' is not preceded with  whitespace. [WhitespaceAround] [ERROR] /var/tmp/Test1.java:7:10: WhitespaceAround: '{' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block  statement (4.1.3) [WhitespaceAround] [ERROR] /var/tmp/Test1.java:7:11: WhitespaceAround: '}' is not preceded with  whitespace. [WhitespaceAround] [ERROR] /var/tmp/Test1.java:12:5: WhitespaceAround: '{' is not followed by  whitespace. Empty blocks may only be represented as {} when not part of a multi-block  statement (4.1.3) [WhitespaceAround] [ERROR] /var/tmp/Test1.java:12:6: WhitespaceAround: '}' is not preceded with whitespace. [WhitespaceAround] [ERROR] /var/tmp/Test1.java:45:7: WhitespaceAround: '{' is not followed by  whitespace. Empty blocks may only be represented as {} when not part of a multi-block  statement (4.1.3) [WhitespaceAround] [ERROR] /var/tmp/Test1.java:45:8: WhitespaceAround: '}' is not preceded with  whitespace. [WhitespaceAround] [ERROR] /var/tmp/Test1.java:50:28: WhitespaceAround: '{' is not followed by  whitespace. Empty blocks may only be represented as {} when not part of a multi-block  statement (4.1.3) [WhitespaceAround] [ERROR] /var/tmp/Test1.java:50:29: WhitespaceAround: '}' is not preceded with  whitespace. [WhitespaceAround] Audit done. Checkstyle ends with 10 errors. ```  Expected: no violations for google config. New property should be created to `allowEmptyInitializer`.","open","","romani","2020-02-11T14:24:57Z","2020-03-15T14:15:33Z"
"","7460","LineLengthCheck cannot be suppressed with SuppressWithNearbyCommentFilter in checkstyle 8.24+","Check documentation: https://checkstyle.org/config_sizes.html#LineLength  ``` /var/tmp $ javac Test.java  /var/tmp $ cat config.xml ``` ```xml                                                                                     ``` ```bash /var/tmp $ cat Test.java ``` ```java class Test {     // CHECKSTYLE:IGNORE LineLength FOR NEXT LINE     public static final String TEXT = ""THIS IS A TOOOOOOOOOOOOOOOOOOOOOOOOOOO LONG LINE""; } ``` ```bash /var/tmp $ RUN_LOCALE=""-Duser.language=en -Duser.country=US"" /var/tmp $ java $RUN_LOCALE -jar checkstyle-8.28-all.jar -c config.xml Test.java Starting audit... [ERROR] /var/tmp/Test.java:3: Line is longer than 80 characters (found 89). [LineLength] Audit done. Checkstyle ends with 1 errors. ```  --------------- Since the checkstyle [8.24](https://checkstyle.sourceforge.io/releasenotes.html#Release_8.24) LineLength checks cannot be declared below the TreeWalker module anymore. As a side effect a `SuppressWithNearbyCommentFilter` declared within the TreeWalker module cannot be used anymore to suppress LineLength violations. Using the `SuppressWithNearbyCommentFilter` outside the TreeWalker module also doesn't work.  How can I change the checkstyle config to achieve the same behaviour as in checkstyle 8.23 or lower with the given example?  --------------","closed","","sebthom","2020-01-10T20:32:28Z","2020-01-11T13:37:26Z"
"","7535","JavadocParagraph now emits errors for comments that are ignored by javadoc","Check documentation: https://checkstyle.org/config_javadoc.html#JavadocParagraph  ``` /var/tmp $ javac InputJavadocParagraphInvalidLocation.java  /var/tmp $ cat config.xml                  /var/tmp $ cat InputJavadocParagraphInvalidLocation.java /**  * This is a comment in the header of the file.  * It might be something like a copyright notice.  *  * It doesn't conform to Javadoc specs and isn't expected to.  * Javadoc will ignore it anyway.  */  package com.puppycrawl.tools.checkstyle.checks.javadoc.javadocparagraph;  /**  * Some Javadoc.  *  * This is incorrectly formatted and should generate an error.  */ class InputJavadocParagraphInvalidLocation { }   /var/tmp $ RUN_LOCALE=""-Duser.language=en -Duser.country=US"" /var/tmp $ java $RUN_LOCALE -jar  checkstyle-8.29-all.jar -c TestConfig.xml \  src/test/resources/com/puppycrawl/tools/checkstyle/checks/javadoc/javadocparagraph/InputJavadocParagraphInvalidLocation.java Starting audit... [ERROR] .../InputJavadocParagraphInvalidLocation.java:3: Empty line should be followed by  tag on the next line. [JavadocParagraph] [ERROR] .../InputJavadocParagraphInvalidLocation.java:12: Empty line should be followed by  tag on the next line. [JavadocParagraph] Audit done. Checkstyle ends with 2 errors. ```  ---------------  Expected (previous) behavior: first error on line 3 not emitted, second error on line 12 is valid.  In earlier versions of checkstyle, some comments that start with javadoc-like `/**` were ignored by certain checks. I believe this changed in https://github.com/checkstyle/checkstyle/issues/6516 in order to catch more invalid javadoc comments, but had the side effect of also causing JavadocParagraphCheck to cover more comments, even if javadoc would ignore them anyway. In a project using JavadocParagraphCheck but not InvalidJavadocPosition, this causes checkstyle to emit new errors. The case I ran into specifically was the use of `/**` to start copyright header comments, where there was no concern about javadoc validity since it wouldn't be processed by javadoc anyway.  Since projects that want the functionality can use InvalidJavadocPosition to catch the location issue, which would then have them either make it non-javadoc or move it to a valid location (at which point JavadocParagraphCheck *should* kick in), I think the check for whether a comment is a javadoc could be refined to be false in these cases. Specifically, for javadoc comments above `package`, they are really only valid in package-info.java files, which shouldn't contain any content other than the javadoc, annotations, and package name.","closed","","ewencp","2020-02-05T22:28:46Z","2020-02-07T14:41:47Z"
"","7380","JavadocMethod: missed throws tag for throw in method body","Check documentation: https://checkstyle.org/config_javadoc.html#JavadocMethod  ``` $ javac Test.java   $ cat config.xml                                    $ cat Test.java  public class Test {     /**      * Creates a new Test.      * @param properties the underlying properties to use for      *     property resolution.      */     public Test(String properties) {         if (properties == null) {             throw new IllegalArgumentException(""cannot pass null"");         }     } }  $ java -jar checkstyle-8.27-all.jar -c config.xml Test.java  Starting audit... Audit done. ```  ---------------  as `allowUndeclaredRTE` and `allowMissingThrowsTags` are `false` by default. Expected: `Expected @throws tag for 'IllegalArgumentException'. [JavadocMethod]`  ----  **Side effect after implementation is done:** ATTENTION: Checkstyle does not have information about hierarchy of exception types so usage of base class is considered as separate exception type. As workaround you need to specify both types in javadoc (parent and exact type). Please see documentation of Check for more details.","closed","approved,","romani","2019-12-14T14:53:44Z","2019-12-28T00:17:14Z"
"","7554","CustomImportOrder: impossible to configure it for Eclipse auto-import","Check documentation: https://checkstyle.org/config_imports.html#CustomImportOrder  Eclipse (2019-12) auto-organizes the following imports as follow: ```java import static spark.Spark.halt;  import java.io.IOException; import java.nio.charset.StandardCharsets; import java.util.Optional; import java.util.function.Supplier;  import javax.servlet.http.HttpServletResponse;  import org.slf4j.Logger; import org.slf4j.LoggerFactory;  import com.fasterxml.jackson.databind.ObjectMapper;  import spark.Request; ```  I configured checkstyle as follow: ```xml                  ```  But checkstyle 8.29 complains with: ``` Extra separation in import group before 'javax.servlet.http.HttpServletResponse' ```  There was no problem in the past with checkstyle 8.23 and 8.25 for example.","closed","","victornoel","2020-02-17T17:28:58Z","2020-02-17T17:38:35Z"
"","7537","separateLineBetweenGroups property has no effect","Check documentation: https://checkstyle.org/config_imports.html#CustomImportOrder  ``` /var/tmp $ javac App.java  /var/tmp $ cat config.xml                                       /var/tmp $ cat App.java package com.demo.example;  import java.util.HashMap; import java.util.Map;  import org.springframework.boot.autoconfigure.mail.MailProperties;  public class App  {  }  /var/tmp $ RUN_LOCALE=""-Duser.language=en -Duser.country=US"" /var/tmp $ java $RUN_LOCALE -jar checkstyle-8.29-all.jar -c config.xml App.java Starting audit... [ERROR] App.java:6: Extra separation in import group before 'org.springframework.boot.autoconfigure.mail.MailProperties' [CustomImportOrder] Audit done. Checkstyle ends with 1 errors. ```  ---------------  Since separateLineBetweenGroups is true I did not expect any errors. Version 8.29 does not seem to respect the property separateLineBetweenGroups, Version 8.27 does not report any errors.  Version 8.27 output:  ``` java $RUN_LOCALE -jar checkstyle-8.27-all.jar -c checkstyle.xml App.java Starting audit... Audit done. ```  --------------","closed","","thomasturrell","2020-02-06T15:37:40Z","2020-02-07T02:51:48Z"
"","7848","SuppressWarningsHolder should not report violations","Check documentation: https://checkstyle.org/config_annotation.html#SuppressWarningsHolder  ``` $ cat config.xml                  $ cat SuppressionXpathRegressionSuppressWarningsHolderOne.java  package org.checkstyle.suppressionxpathfilter.suppresswarningsholder;  public class SuppressionXpathRegressionSuppressWarningsHolderOne {     public static class MyResource implements AutoCloseable {         @Override         public void close() throws Exception { }     }      public static void main(String[] args) throws Exception {         try (@SuppressWarnings(""all"") final MyResource r = new MyResource()) { } // warn         try (@MyAnnotation(""all"") final MyResource resource = new MyResource()) { }     } } @interface MyAnnotation {     String[] value(); }  $ java -jar /var/tmp/checkstyle-8.29-all.jar -c config.xml \      SuppressionXpathRegressionSuppressWarningsHolderOne.java  Starting audit... [ERROR] /var/tmp/SuppressionXpathRegressionSuppressWarningsHolderOne.java:10:  Invalid target for @SuppressWarnings. [SuppressWarningsHolder] Audit done. Checkstyle ends with 1 errors. ```  ------------------------  SuppressWarningsHolder should support annotations in all possible places, fact that we probably can not distinguish what violation to suppress is bug of our implementation and should have github issue BUT not a violation in code.  issue is detected at https://github.com/checkstyle/checkstyle/pull/7841#issuecomment-599008226 problem is already covered by UT - https://github.com/checkstyle/checkstyle/blob/master/src/it/resources/org/checkstyle/suppressionxpathfilter/suppresswarningsholder/SuppressionXpathRegressionSuppressWarningsHolderOne.java","closed","approved,","romani","2020-03-14T13:53:10Z","2020-04-19T16:02:12Z"
"","7534","NPE in MissingDeprecatedCheck","Check documentation: https://checkstyle.org/config_annotation.html#MissingDeprecated  ``` /var/tmp $ javac Test.java /var/tmp $ cat config.xml                                /var/tmp $ cat Test.java /**  * Wrong header  */ // test  package pkg;   /**  * @deprecated do not use  */ @Deprecated public class Test { }  /var/tmp $ RUN_LOCALE=""-Duser.language=en -Duser.country=US"" /var/tmp $ java $RUN_LOCALE -jar checkstyle-8.29-all.jar -c config.xml Test.java Starting audit... com.puppycrawl.tools.checkstyle.api.CheckstyleException: Exception was thrown while processing Test.java 	at com.puppycrawl.tools.checkstyle.Checker.processFiles(Checker.java:304) 	at com.puppycrawl.tools.checkstyle.Checker.process(Checker.java:216) 	at com.puppycrawl.tools.checkstyle.Main.runCheckstyle(Main.java:400) 	at com.puppycrawl.tools.checkstyle.Main.runCli(Main.java:324) 	at com.puppycrawl.tools.checkstyle.Main.execute(Main.java:187) 	at com.puppycrawl.tools.checkstyle.Main.main(Main.java:124) Caused by: java.lang.NullPointerException 	at com.puppycrawl.tools.checkstyle.utils.AnnotationUtil.findFirstAnnotation(AnnotationUtil.java:220) 	at com.puppycrawl.tools.checkstyle.utils.AnnotationUtil.getAnnotation(AnnotationUtil.java:194) 	at com.puppycrawl.tools.checkstyle.utils.AnnotationUtil.containsAnnotation(AnnotationUtil.java:70) 	at com.puppycrawl.tools.checkstyle.checks.annotation.MissingDeprecatedCheck.visitJavadocToken(MissingDeprecatedCheck.java:136) 	at com.puppycrawl.tools.checkstyle.checks.javadoc.AbstractJavadocCheck.walk(AbstractJavadocCheck.java:352) 	at com.puppycrawl.tools.checkstyle.checks.javadoc.AbstractJavadocCheck.processTree(AbstractJavadocCheck.java:337) 	at com.puppycrawl.tools.checkstyle.checks.javadoc.AbstractJavadocCheck.visitToken(AbstractJavadocCheck.java:304) 	at com.puppycrawl.tools.checkstyle.TreeWalker.notifyVisit(TreeWalker.java:342) 	at com.puppycrawl.tools.checkstyle.TreeWalker.processIter(TreeWalker.java:449) 	at com.puppycrawl.tools.checkstyle.TreeWalker.walk(TreeWalker.java:283) 	at com.puppycrawl.tools.checkstyle.TreeWalker.processFiltered(TreeWalker.java:165) 	at com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck.process(AbstractFileSetCheck.java:85) 	at com.puppycrawl.tools.checkstyle.Checker.processFile(Checker.java:329) 	at com.puppycrawl.tools.checkstyle.Checker.processFiles(Checker.java:291) 	... 5 more Checkstyle ends with 1 errors.  ```  ---------------  There should be no null pointer exception, even though there are two formal comments at the top level of the class.  To avoid the NPE, I can change the first formal comment into a normal comment or remove the single line comment. Both changes make the NPE go away.  **Attention:** Update https://github.com/checkstyle/contribution/blob/master/checkstyle-tester/projects-to-test-on.properties#L19 to use latest version of pmd","closed","high demand,","adangel","2020-02-04T19:15:27Z","2020-03-09T13:17:41Z"
"","7386","[Documentation] Regexp cannot be suppressed except by file passing the check or regex based suppression filter.","Check documentation:  https://checkstyle.sourceforge.io/config_regexp.html#Regexp   /var/tmp $ javac NoDot.java   /var/tmp $ cat config.xml ```xml                                                            ``` /var/tmp $ cat NoDot.java ```java // CHECKSTYLE:OFF @SuppressWarnings({""try"",                    ""checkstyle:magicnumber"",                    ""checkstyle:packagedeclaration"",                    ""checkstyle:hideutilityclassconstructor"",                    ""checkstyle:nowhitespacebefore"",                    ""checkstyle:emptyblock"",                    ""checkstyle:regexp"",                    ""checkstyle:javadocpackage"",                    ""PMD.NoPackage"",                    ""PMD.SignatureDeclareThrowsException"",                    ""PMD.UseUtilityClass""}) class NoDot {   public static void main(String[] args) throws Exception {     try (         AutoCloseable o = new Throwable(             ((char)13) + ""Hello world"", null, true, false) {         } ::printStackTrace) {     }   } } ```  /var/tmp $ RUN_LOCALE=""-Duser.language=en -Duser.country=US"" /var/tmp $ java $RUN_LOCALE -jar checkstyle-8.27-all.jar -c config.xml NoDot.java     **Describe what you expect in detail.**  The default Regexp check expects at least one empty line. If a java source file has no empty lines, the check flags an error as expected. That is not the issue. This check, however, can never be suppressed in any way. Keep in mind that running a formatter will rid the file of empty lines , not within the method or class body. Does this need to be documented? No Xpath suppressions can be generated either.   Note: I'd add the Checkstyle error output but unfortunately my configuration still throws the error as per this issue: https://github.com/checkstyle/checkstyle/issues/7298","open","","Fernal73","2019-12-17T14:52:46Z","2019-12-25T05:52:58Z"
"","7526","dependency: bump sevntu-checks from 1.37.0 to 1.37.1","Bumps sevntu-checks from 1.37.0 to 1.37.1.   [![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=com.github.sevntu-checkstyle:sevntu-checks&package-manager=maven&previous-version=1.37.0&new-version=1.37.1)](https://dependabot.com/compatibility-score.html?dependency-name=com.github.sevntu-checkstyle:sevntu-checks&package-manager=maven&previous-version=1.37.0&new-version=1.37.1)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in the `.dependabot/config.yml` file in this repo: - Update frequency - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2020-02-01T02:56:19Z","2020-02-01T05:00:28Z"
"","7439","dependency: bump sevntu-checks from 1.36.0 to 1.37.0","Bumps sevntu-checks from 1.36.0 to 1.37.0.   [![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=com.github.sevntu-checkstyle:sevntu-checks&package-manager=maven&previous-version=1.36.0&new-version=1.37.0)](https://dependabot.com/compatibility-score.html?dependency-name=com.github.sevntu-checkstyle:sevntu-checks&package-manager=maven&previous-version=1.36.0&new-version=1.37.0)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in the `.dependabot/config.yml` file in this repo: - Update frequency - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2020-01-03T06:46:49Z","2020-01-04T17:46:37Z"
"","7273","Bump sevntu-checks from 1.35.0 to 1.36.0","Bumps sevntu-checks from 1.35.0 to 1.36.0.  [![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=com.github.sevntu-checkstyle:sevntu-checks&package-manager=maven&previous-version=1.35.0&new-version=1.36.0)](https://dependabot.com/compatibility-score.html?dependency-name=com.github.sevntu-checkstyle:sevntu-checks&package-manager=maven&previous-version=1.35.0&new-version=1.36.0)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language - `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language - `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language - `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in your Dependabot [dashboard](https://app.dependabot.com): - Update frequency (including time of day and day of week) - Pull request limits (per update run and/or open at any time) - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2019-11-20T06:48:39Z","2019-11-20T13:32:02Z"
"","7879","dependency: bump Saxon-HE from 9.9.1-7 to 10.0","Bumps Saxon-HE from 9.9.1-7 to 10.0.   [![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=net.sf.saxon:Saxon-HE&package-manager=maven&previous-version=9.9.1-7&new-version=10.0)](https://dependabot.com/compatibility-score/?dependency-name=net.sf.saxon:Saxon-HE&package-manager=maven&previous-version=9.9.1-7&new-version=10.0)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in the `.dependabot/config.yml` file in this repo: - Update frequency - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2020-03-17T06:40:32Z","2020-09-06T22:22:09Z"
"","7787","dependency: bump Saxon-HE from 9.9.1-6 to 9.9.1-7","Bumps Saxon-HE from 9.9.1-6 to 9.9.1-7.   [![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=net.sf.saxon:Saxon-HE&package-manager=maven&previous-version=9.9.1-6&new-version=9.9.1-7)](https://dependabot.com/compatibility-score/?dependency-name=net.sf.saxon:Saxon-HE&package-manager=maven&previous-version=9.9.1-6&new-version=9.9.1-7)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in the `.dependabot/config.yml` file in this repo: - Update frequency - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2020-03-06T06:44:16Z","2020-03-08T01:43:16Z"
"","7349","build(deps): bump Saxon-HE from 9.9.1-5 to 9.9.1-6","Bumps Saxon-HE from 9.9.1-5 to 9.9.1-6.  [![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=net.sf.saxon:Saxon-HE&package-manager=maven&previous-version=9.9.1-5&new-version=9.9.1-6)](https://dependabot.com/compatibility-score.html?dependency-name=net.sf.saxon:Saxon-HE&package-manager=maven&previous-version=9.9.1-5&new-version=9.9.1-6)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language - `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language - `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language - `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in your Dependabot [dashboard](https://app.dependabot.com): - Update frequency (including time of day and day of week) - Pull request limits (per update run and/or open at any time) - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2019-12-09T06:46:32Z","2019-12-09T22:16:20Z"
"","7861","dependency: bump org.eclipse.jgit from 5.7.0.202003090808-r to 5.7.0.202003110725-r","Bumps org.eclipse.jgit from 5.7.0.202003090808-r to 5.7.0.202003110725-r.   [![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=org.eclipse.jgit:org.eclipse.jgit&package-manager=maven&previous-version=5.7.0.202003090808-r&new-version=5.7.0.202003110725-r)](https://dependabot.com/compatibility-score/?dependency-name=org.eclipse.jgit:org.eclipse.jgit&package-manager=maven&previous-version=5.7.0.202003090808-r&new-version=5.7.0.202003110725-r)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in the `.dependabot/config.yml` file in this repo: - Update frequency - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2020-03-16T06:58:03Z","2020-03-16T14:47:44Z"
"","7824","dependency: bump org.eclipse.jgit from 5.6.1.202002131546-r to 5.7.0.202003090808-r","Bumps org.eclipse.jgit from 5.6.1.202002131546-r to 5.7.0.202003090808-r.   [![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=org.eclipse.jgit:org.eclipse.jgit&package-manager=maven&previous-version=5.6.1.202002131546-r&new-version=5.7.0.202003090808-r)](https://dependabot.com/compatibility-score/?dependency-name=org.eclipse.jgit:org.eclipse.jgit&package-manager=maven&previous-version=5.6.1.202002131546-r&new-version=5.7.0.202003090808-r)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in the `.dependabot/config.yml` file in this repo: - Update frequency - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2020-03-11T06:39:05Z","2020-03-11T16:04:26Z"
"","7555","dependency: bump org.eclipse.jgit from 5.6.0.201912101111-r to 5.6.1.202002131546-r","Bumps org.eclipse.jgit from 5.6.0.201912101111-r to 5.6.1.202002131546-r.   [![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=org.eclipse.jgit:org.eclipse.jgit&package-manager=maven&previous-version=5.6.0.201912101111-r&new-version=5.6.1.202002131546-r)](https://dependabot.com/compatibility-score/?dependency-name=org.eclipse.jgit:org.eclipse.jgit&package-manager=maven&previous-version=5.6.0.201912101111-r&new-version=5.6.1.202002131546-r)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in the `.dependabot/config.yml` file in this repo: - Update frequency - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2020-02-18T06:43:05Z","2020-02-18T14:39:28Z"
"","7369","dependency: bump org.eclipse.jgit from 5.5.1.201910021850-r to 5.6.0.201912101111-r","Bumps org.eclipse.jgit from 5.5.1.201910021850-r to 5.6.0.201912101111-r.  [![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=org.eclipse.jgit:org.eclipse.jgit&package-manager=maven&previous-version=5.5.1.201910021850-r&new-version=5.6.0.201912101111-r)](https://dependabot.com/compatibility-score.html?dependency-name=org.eclipse.jgit:org.eclipse.jgit&package-manager=maven&previous-version=5.5.1.201910021850-r&new-version=5.6.0.201912101111-r)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in the `.dependabot/config.yml` file in this repo: - Update frequency - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2019-12-11T20:48:15Z","2019-12-12T16:37:45Z"
"","7389","dependency: bump org.eclipse.jdt.annotation from 2.2.300 to 2.2.400","Bumps org.eclipse.jdt.annotation from 2.2.300 to 2.2.400.   [![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=org.eclipse.jdt:org.eclipse.jdt.annotation&package-manager=maven&previous-version=2.2.300&new-version=2.2.400)](https://dependabot.com/compatibility-score.html?dependency-name=org.eclipse.jdt:org.eclipse.jdt.annotation&package-manager=maven&previous-version=2.2.300&new-version=2.2.400)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in the `.dependabot/config.yml` file in this repo: - Update frequency - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2019-12-19T06:47:47Z","2019-12-19T21:58:15Z"
"","7221","Bump org.eclipse.jdt.annotation from 2.1.0 to 2.2.300","Bumps org.eclipse.jdt.annotation from 2.1.0 to 2.2.300.  [![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=org.eclipse.jdt:org.eclipse.jdt.annotation&package-manager=maven&previous-version=2.1.0&new-version=2.2.300)](https://dependabot.com/compatibility-score.html?dependency-name=org.eclipse.jdt:org.eclipse.jdt.annotation&package-manager=maven&previous-version=2.1.0&new-version=2.2.300)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---  **Note:** This repo was added to Dependabot recently, so you'll receive a maximum of 5 PRs for your first few update runs. Once an update run creates fewer than 5 PRs we'll remove that limit.  You can always request more updates by clicking `Bump now` in your [Dependabot dashboard](https://app.dependabot.com).   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language - `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language - `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language - `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in your Dependabot [dashboard](https://app.dependabot.com): - Update frequency (including time of day and day of week) - Pull request limits (per update run and/or open at any time) - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2019-10-22T07:05:12Z","2019-10-23T15:50:23Z"
"","7217","Bump maven-release-plugin from 2.1 to 2.5.3","Bumps maven-release-plugin from 2.1 to 2.5.3.  [![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=org.apache.maven.plugins:maven-release-plugin&package-manager=maven&previous-version=2.1&new-version=2.5.3)](https://dependabot.com/compatibility-score.html?dependency-name=org.apache.maven.plugins:maven-release-plugin&package-manager=maven&previous-version=2.1&new-version=2.5.3)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---  **Note:** This repo was added to Dependabot recently, so you'll receive a maximum of 5 PRs for your first few update runs. Once an update run creates fewer than 5 PRs we'll remove that limit.  You can always request more updates by clicking `Bump now` in your [Dependabot dashboard](https://app.dependabot.com).   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language - `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language - `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language - `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in your Dependabot [dashboard](https://app.dependabot.com): - Update frequency (including time of day and day of week) - Pull request limits (per update run and/or open at any time) - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2019-10-21T21:02:27Z","2019-10-25T01:29:27Z"
"","8003","dependency: bump powermock.version from 2.0.6 to 2.0.7","Bumps `powermock.version` from 2.0.6 to 2.0.7. Updates `powermock-api-mockito2` from 2.0.6 to 2.0.7  Commits  fb140f1 2.0.7 release (previous 2.0.6) + release notes updated by CI build 844 27501ac [ci maven-central-release] Fix missing stackmap frames (#1043) See full diff in compare view     Updates `powermock-module-junit4` from 2.0.6 to 2.0.7  Commits  fb140f1 2.0.7 release (previous 2.0.6) + release notes updated by CI build 844 27501ac [ci maven-central-release] Fix missing stackmap frames (#1043) See full diff in compare view      Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in the `.dependabot/config.yml` file in this repo: - Update frequency - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2020-03-31T06:52:55Z","2020-04-05T06:54:20Z"
"","7945","dependency: bump powermock.version from 2.0.5 to 2.0.6","Bumps `powermock.version` from 2.0.5 to 2.0.6. Updates `powermock-api-mockito2` from 2.0.5 to 2.0.6  Commits  aa3328c 2.0.6 release (previous 2.0.5) + release notes updated by CI build 836 dda30da [ci maven-central-release] Upgrade to Javassist 3.27.0-GA (#1041) See full diff in compare view     Updates `powermock-module-junit4` from 2.0.5 to 2.0.6  Commits  aa3328c 2.0.6 release (previous 2.0.5) + release notes updated by CI build 836 dda30da [ci maven-central-release] Upgrade to Javassist 3.27.0-GA (#1041) See full diff in compare view      Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in the `.dependabot/config.yml` file in this repo: - Update frequency - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2020-03-23T07:09:58Z","2020-03-24T01:05:31Z"
"","7508","dependency: bump powermock.version from 2.0.4 to 2.0.5","Bumps `powermock.version` from 2.0.4 to 2.0.5. Updates `powermock-api-mockito2` from 2.0.4 to 2.0.5  Commits  0d243c7 2.0.5 release (previous 2.0.4) + release notes updated by CI build 833 c7406c4 [ci maven-central-release] Use Unsafe to set final static fields, support JDK12+ bd92bcc Handle primivite data types fc092c5 Use Unsafe to set final fields, support JDK12+ 38e5dc6 Merge pull request #1025 from eolivelli/fix/local-build 7af5b37 Enable local build in IDE without setting ENV See full diff in compare view     Updates `powermock-module-junit4` from 2.0.4 to 2.0.5  Commits  0d243c7 2.0.5 release (previous 2.0.4) + release notes updated by CI build 833 c7406c4 [ci maven-central-release] Use Unsafe to set final static fields, support JDK12+ bd92bcc Handle primivite data types fc092c5 Use Unsafe to set final fields, support JDK12+ 38e5dc6 Merge pull request #1025 from eolivelli/fix/local-build 7af5b37 Enable local build in IDE without setting ENV See full diff in compare view      Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in the `.dependabot/config.yml` file in this repo: - Update frequency - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2020-01-27T06:54:55Z","2020-01-27T14:38:05Z"
"","7215","Bump powermock.version from 2.0.2 to 2.0.4","Bumps `powermock.version` from 2.0.2 to 2.0.4.  Updates `powermock-api-mockito2` from 2.0.2 to 2.0.4  Commits  - [`be2370c`](https://github.com/powermock/powermock/commit/be2370c10aa36aae9655f20a82e6f8aab3121a0c) 2.0.4 release (previous 2.0.2) + release notes updated by CI build 827 - [`7520cde`](https://github.com/powermock/powermock/commit/7520cde8846e648ad9fa14bd45c1b01f9ca2d29c) [ci maven-central-release] Fix build - [`9f15b3e`](https://github.com/powermock/powermock/commit/9f15b3e61f6b440d2698675835dfc1bc83689062) [ci maven-central-release] Fix Whitebox.getAllInstanceFields returning static... - [`3eb2192`](https://github.com/powermock/powermock/commit/3eb219272868a3273ccb8ba5aab6839013d8f933) [ci maven-central-release] Fix changing final fields on Java 12 ([#1010](https://github-redirect.dependabot.com/powermock/powermock/issues/1010)) - [`62b495c`](https://github.com/powermock/powermock/commit/62b495cc92f130e8a75c5130f2e9b53d8be3ccf5) Fixes [#685](https://github-redirect.dependabot.com/powermock/powermock/issues/685) : Add new method display name pattern for providing compatibility ... - [`37904cd`](https://github.com/powermock/powermock/commit/37904cda43869b31d373309cc278fad97152ff91) fix Static mocking broken for Mockito >= 2.26.1 ([#997](https://github-redirect.dependabot.com/powermock/powermock/issues/997)) - [`ad8ccad`](https://github.com/powermock/powermock/commit/ad8ccad804263117a97a1f6363d2a6b99bc80b64) Fixed some typos - [`e8cd680`](https://github.com/powermock/powermock/commit/e8cd68026c284c6a7efe66959809eeebd8d1f9ad) Fix links to issues - [`e8da809`](https://github.com/powermock/powermock/commit/e8da809c49ae46cc2430dd2960d79b15df0584c5) Add news about new release - See full diff in [compare view](https://github.com/powermock/powermock/compare/powermock-2.0.2...powermock-2.0.4)    Updates `powermock-module-junit4` from 2.0.2 to 2.0.4  Commits  - [`be2370c`](https://github.com/powermock/powermock/commit/be2370c10aa36aae9655f20a82e6f8aab3121a0c) 2.0.4 release (previous 2.0.2) + release notes updated by CI build 827 - [`7520cde`](https://github.com/powermock/powermock/commit/7520cde8846e648ad9fa14bd45c1b01f9ca2d29c) [ci maven-central-release] Fix build - [`9f15b3e`](https://github.com/powermock/powermock/commit/9f15b3e61f6b440d2698675835dfc1bc83689062) [ci maven-central-release] Fix Whitebox.getAllInstanceFields returning static... - [`3eb2192`](https://github.com/powermock/powermock/commit/3eb219272868a3273ccb8ba5aab6839013d8f933) [ci maven-central-release] Fix changing final fields on Java 12 ([#1010](https://github-redirect.dependabot.com/powermock/powermock/issues/1010)) - [`62b495c`](https://github.com/powermock/powermock/commit/62b495cc92f130e8a75c5130f2e9b53d8be3ccf5) Fixes [#685](https://github-redirect.dependabot.com/powermock/powermock/issues/685) : Add new method display name pattern for providing compatibility ... - [`37904cd`](https://github.com/powermock/powermock/commit/37904cda43869b31d373309cc278fad97152ff91) fix Static mocking broken for Mockito >= 2.26.1 ([#997](https://github-redirect.dependabot.com/powermock/powermock/issues/997)) - [`ad8ccad`](https://github.com/powermock/powermock/commit/ad8ccad804263117a97a1f6363d2a6b99bc80b64) Fixed some typos - [`e8cd680`](https://github.com/powermock/powermock/commit/e8cd68026c284c6a7efe66959809eeebd8d1f9ad) Fix links to issues - [`e8da809`](https://github.com/powermock/powermock/commit/e8da809c49ae46cc2430dd2960d79b15df0584c5) Add news about new release - See full diff in [compare view](https://github.com/powermock/powermock/compare/powermock-2.0.2...powermock-2.0.4)    Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---  **Note:** This repo was added to Dependabot recently, so you'll receive a maximum of 5 PRs for your first few update runs. Once an update run creates fewer than 5 PRs we'll remove that limit.  You can always request more updates by clicking `Bump now` in your [Dependabot dashboard](https://app.dependabot.com).   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language - `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language - `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language - `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in your Dependabot [dashboard](https://app.dependabot.com): - Update frequency (including time of day and day of week) - Pull request limits (per update run and/or open at any time) - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2019-10-21T21:01:48Z","2019-10-23T15:14:20Z"
"","7839","dependency: bump pmd.version from 6.21.0 to 6.22.0","Bumps `pmd.version` from 6.21.0 to 6.22.0. Updates `pmd-java` from 6.21.0 to 6.22.0  Release notes Sourced from pmd-java's releases.  PMD 6.22.0 (12-March-2020) 12-March-2020 - 6.22.0 The PMD team is pleased to announce PMD 6.22.0. This is a minor release. Table Of Contents  New and noteworthy  Java 14 Support Updated PMD Designer Apex Suppressions Improved CPD support for C# XPath Rules New Rules   Fixed Issues API Changes  Deprecated APIs  Internal API For removal In ASTs (https://github.com/pmd/pmd/blob/HEAD/JSP) In ASTs (https://github.com/pmd/pmd/blob/HEAD/Velocity)   PLSQL AST   External Contributions  New and noteworthy Java 14 Support This release of PMD brings support for Java 14. PMD can parse Switch Expressions, which have been promoted to be a standard language feature of Java. PMD also parses Text Blocks as String literals, which is still a preview language feature in Java 14. The new Pattern Matching for instanceof can be used as well as Records. Note: The Text Blocks, Pattern Matching for instanceof and Records are all preview language features of OpenJDK 14 and are not enabled by default. In order to analyze a project with PMD that uses these language features, you'll need to enable it via the environment variable PMD_JAVA_OPTS and select the new language version 14-preview: export PMD_JAVA_OPTS=--enable-preview ./run.sh pmd -language java -version 14-preview ...  Note: Support for the extended break statement introduced in Java 12 as a preview language feature has been removed from PMD with this version. The version ""12-preview"" is no longer available.  ... (truncated)    Commits  eb93aae [maven-release-plugin] prepare release pmd_releases/6.22.0 1c09ce1 Prepare pmd release 6.22.0 0d0c701 [doc] Mention xpath rules deprecation in release notes 5839868 Merge branch 'pr-2303' abf0e18 [ci] Use pmd.build-tools.version 6 b29f01b [ci] be more explicit about the used maven repositories e8581d4 Merge branch 'pr-2343' 653c0df [doc] Update release notes, refs #2343 037856b [test] Add missing ""."" for version numbers in test cases 1deb84e Merge branch 'pr-2344' Additional commits viewable in compare view     Updates `pmd-core` from 6.21.0 to 6.22.0  Release notes Sourced from pmd-core's releases.  PMD 6.22.0 (12-March-2020) 12-March-2020 - 6.22.0 The PMD team is pleased to announce PMD 6.22.0. This is a minor release. Table Of Contents  New and noteworthy  Java 14 Support Updated PMD Designer Apex Suppressions Improved CPD support for C# XPath Rules New Rules   Fixed Issues API Changes  Deprecated APIs  Internal API For removal In ASTs (https://github.com/pmd/pmd/blob/HEAD/JSP) In ASTs (https://github.com/pmd/pmd/blob/HEAD/Velocity)   PLSQL AST   External Contributions  New and noteworthy Java 14 Support This release of PMD brings support for Java 14. PMD can parse Switch Expressions, which have been promoted to be a standard language feature of Java. PMD also parses Text Blocks as String literals, which is still a preview language feature in Java 14. The new Pattern Matching for instanceof can be used as well as Records. Note: The Text Blocks, Pattern Matching for instanceof and Records are all preview language features of OpenJDK 14 and are not enabled by default. In order to analyze a project with PMD that uses these language features, you'll need to enable it via the environment variable PMD_JAVA_OPTS and select the new language version 14-preview: export PMD_JAVA_OPTS=--enable-preview ./run.sh pmd -language java -version 14-preview ...  Note: Support for the extended break statement introduced in Java 12 as a preview language feature has been removed from PMD with this version. The version ""12-preview"" is no longer available.  ... (truncated)    Commits  eb93aae [maven-release-plugin] prepare release pmd_releases/6.22.0 1c09ce1 Prepare pmd release 6.22.0 0d0c701 [doc] Mention xpath rules deprecation in release notes 5839868 Merge branch 'pr-2303' abf0e18 [ci] Use pmd.build-tools.version 6 b29f01b [ci] be more explicit about the used maven repositories e8581d4 Merge branch 'pr-2343' 653c0df [doc] Update release notes, refs #2343 037856b [test] Add missing ""."" for version numbers in test cases 1deb84e Merge branch 'pr-2344' Additional commits viewable in compare view     Updates `pmd-javascript` from 6.21.0 to 6.22.0  Release notes Sourced from pmd-javascript's releases.  PMD 6.22.0 (12-March-2020) 12-March-2020 - 6.22.0 The PMD team is pleased to announce PMD 6.22.0. This is a minor release. Table Of Contents  New and noteworthy  Java 14 Support Updated PMD Designer Apex Suppressions Improved CPD support for C# XPath Rules New Rules   Fixed Issues API Changes  Deprecated APIs  Internal API For removal In ASTs (https://github.com/pmd/pmd/blob/HEAD/JSP) In ASTs (https://github.com/pmd/pmd/blob/HEAD/Velocity)   PLSQL AST   External Contributions  New and noteworthy Java 14 Support This release of PMD brings support for Java 14. PMD can parse Switch Expressions, which have been promoted to be a standard language feature of Java. PMD also parses Text Blocks as String literals, which is still a preview language feature in Java 14. The new Pattern Matching for instanceof can be used as well as Records. Note: The Text Blocks, Pattern Matching for instanceof and Records are all preview language features of OpenJDK 14 and are not enabled by default. In order to analyze a project with PMD that uses these language features, you'll need to enable it via the environment variable PMD_JAVA_OPTS and select the new language version 14-preview: export PMD_JAVA_OPTS=--enable-preview ./run.sh pmd -language java -version 14-preview ...  Note: Support for the extended break statement introduced in Java 12 as a preview language feature has been removed from PMD with this version. The version ""12-preview"" is no longer available.  ... (truncated)    Commits  eb93aae [maven-release-plugin] prepare release pmd_releases/6.22.0 1c09ce1 Prepare pmd release 6.22.0 0d0c701 [doc] Mention xpath rules deprecation in release notes 5839868 Merge branch 'pr-2303' abf0e18 [ci] Use pmd.build-tools.version 6 b29f01b [ci] be more explicit about the used maven repositories e8581d4 Merge branch 'pr-2343' 653c0df [doc] Update release notes, refs #2343 037856b [test] Add missing ""."" for version numbers in test cases 1deb84e Merge branch 'pr-2344' Additional commits viewable in compare view     Updates `pmd-jsp` from 6.21.0 to 6.22.0  Release notes Sourced from pmd-jsp's releases.  PMD 6.22.0 (12-March-2020) 12-March-2020 - 6.22.0 The PMD team is pleased to announce PMD 6.22.0. This is a minor release. Table Of Contents  New and noteworthy  Java 14 Support Updated PMD Designer Apex Suppressions Improved CPD support for C# XPath Rules New Rules   Fixed Issues API Changes  Deprecated APIs  Internal API For removal In ASTs (https://github.com/pmd/pmd/blob/HEAD/JSP) In ASTs (https://github.com/pmd/pmd/blob/HEAD/Velocity)   PLSQL AST   External Contributions  New and noteworthy Java 14 Support This release of PMD brings support for Java 14. PMD can parse Switch Expressions, which have been promoted to be a standard language feature of Java. PMD also parses Text Blocks as String literals, which is still a preview language feature in Java 14. The new Pattern Matching for instanceof can be used as well as Records. Note: The Text Blocks, Pattern Matching for instanceof and Records are all preview language features of OpenJDK 14 and are not enabled by default. In order to analyze a project with PMD that uses these language features, you'll need to enable it via the environment variable PMD_JAVA_OPTS and select the new language version 14-preview: export PMD_JAVA_OPTS=--enable-preview ./run.sh pmd -language java -version 14-preview ...  Note: Support for the extended break statement introduced in Java 12 as a preview language feature has been removed from PMD with this version. The version ""12-preview"" is no longer available.  ... (truncated)    Commits  eb93aae [maven-release-plugin] prepare release pmd_releases/6.22.0 1c09ce1 Prepare pmd release 6.22.0 0d0c701 [doc] Mention xpath rules deprecation in release notes 5839868 Merge branch 'pr-2303' abf0e18 [ci] Use pmd.build-tools.version 6 b29f01b [ci] be more explicit about the used maven repositories e8581d4 Merge branch 'pr-2343' 653c0df [doc] Update release notes, refs #2343 037856b [test] Add missing ""."" for version numbers in test cases 1deb84e Merge branch 'pr-2344' Additional commits viewable in compare view      Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in the `.dependabot/config.yml` file in this repo: - Update frequency - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2020-03-13T06:37:02Z","2020-04-05T07:50:32Z"
"","7507","dependency: bump pmd.version from 6.20.0 to 6.21.0","Bumps `pmd.version` from 6.20.0 to 6.21.0. Updates `pmd-java` from 6.20.0 to 6.21.0  Release notes Sourced from pmd-java's releases.  PMD 6.21.0 (24-January-2020) 24-January-2020 - 6.21.0 The PMD team is pleased to announce PMD 6.21.0. This is a minor release. Table Of Contents  New and noteworthy  Modelica support Simple XML dump of AST Updated Apex Support CPD XML format Modified Rules   Fixed Issues API Changes  Deprecated APIs  Internal API For removal     External Contributions  New and noteworthy Modelica support Thanks to Anatoly Trosinenko PMD supports now a new language: Modelica is a language to model complex physical systems. Both PMD and CPD are supported and there are already 3 rules available. The PMD Designer supports syntax highlighting for Modelica. While the language implementation is quite complete, Modelica support is considered experimental for now. This is to allow us to change the rule API (e.g. the AST classes) slightly and improve the implementation based on your feedback. Simple XML dump of AST We added a experimental feature to dump the AST of a source file into XML. The XML format is of course PMD specific and language dependent. That XML file can be used to execute (XPath) queries against without PMD. It can also be used as a textual visualization of the AST if you don't want to use the Designer. This feature is experimental and might change or even be removed in the future, if it is not useful. A short description how to use it is available under Creating XML dump of the AST. Any feedback about it, especially about your use cases, is highly appreciated. Updated Apex Support  ... (truncated)    Commits  a28e9e2 [maven-release-plugin] prepare release pmd_releases/6.21.0 8f80212 Prepare pmd release 6.21.0 024fd7b Merge branch 'pr-2244' 5feca7f Exclude generated AST*.java files from internalization a35bb37 Merge branch 'pr-2245' 35bb524 [apex][java] *MetricsProvider are @InternalApi d0a6844 Fix neg test case 153f9da Fix tests f52373c checkstyle a5be896 Fix Language::getVersions duplicating aliased versions Additional commits viewable in compare view     Updates `pmd-core` from 6.20.0 to 6.21.0  Release notes Sourced from pmd-core's releases.  PMD 6.21.0 (24-January-2020) 24-January-2020 - 6.21.0 The PMD team is pleased to announce PMD 6.21.0. This is a minor release. Table Of Contents  New and noteworthy  Modelica support Simple XML dump of AST Updated Apex Support CPD XML format Modified Rules   Fixed Issues API Changes  Deprecated APIs  Internal API For removal     External Contributions  New and noteworthy Modelica support Thanks to Anatoly Trosinenko PMD supports now a new language: Modelica is a language to model complex physical systems. Both PMD and CPD are supported and there are already 3 rules available. The PMD Designer supports syntax highlighting for Modelica. While the language implementation is quite complete, Modelica support is considered experimental for now. This is to allow us to change the rule API (e.g. the AST classes) slightly and improve the implementation based on your feedback. Simple XML dump of AST We added a experimental feature to dump the AST of a source file into XML. The XML format is of course PMD specific and language dependent. That XML file can be used to execute (XPath) queries against without PMD. It can also be used as a textual visualization of the AST if you don't want to use the Designer. This feature is experimental and might change or even be removed in the future, if it is not useful. A short description how to use it is available under Creating XML dump of the AST. Any feedback about it, especially about your use cases, is highly appreciated. Updated Apex Support  ... (truncated)    Commits  a28e9e2 [maven-release-plugin] prepare release pmd_releases/6.21.0 8f80212 Prepare pmd release 6.21.0 024fd7b Merge branch 'pr-2244' 5feca7f Exclude generated AST*.java files from internalization a35bb37 Merge branch 'pr-2245' 35bb524 [apex][java] *MetricsProvider are @InternalApi d0a6844 Fix neg test case 153f9da Fix tests f52373c checkstyle a5be896 Fix Language::getVersions duplicating aliased versions Additional commits viewable in compare view     Updates `pmd-javascript` from 6.20.0 to 6.21.0  Release notes Sourced from pmd-javascript's releases.  PMD 6.21.0 (24-January-2020) 24-January-2020 - 6.21.0 The PMD team is pleased to announce PMD 6.21.0. This is a minor release. Table Of Contents  New and noteworthy  Modelica support Simple XML dump of AST Updated Apex Support CPD XML format Modified Rules   Fixed Issues API Changes  Deprecated APIs  Internal API For removal     External Contributions  New and noteworthy Modelica support Thanks to Anatoly Trosinenko PMD supports now a new language: Modelica is a language to model complex physical systems. Both PMD and CPD are supported and there are already 3 rules available. The PMD Designer supports syntax highlighting for Modelica. While the language implementation is quite complete, Modelica support is considered experimental for now. This is to allow us to change the rule API (e.g. the AST classes) slightly and improve the implementation based on your feedback. Simple XML dump of AST We added a experimental feature to dump the AST of a source file into XML. The XML format is of course PMD specific and language dependent. That XML file can be used to execute (XPath) queries against without PMD. It can also be used as a textual visualization of the AST if you don't want to use the Designer. This feature is experimental and might change or even be removed in the future, if it is not useful. A short description how to use it is available under Creating XML dump of the AST. Any feedback about it, especially about your use cases, is highly appreciated. Updated Apex Support  ... (truncated)    Commits  a28e9e2 [maven-release-plugin] prepare release pmd_releases/6.21.0 8f80212 Prepare pmd release 6.21.0 024fd7b Merge branch 'pr-2244' 5feca7f Exclude generated AST*.java files from internalization a35bb37 Merge branch 'pr-2245' 35bb524 [apex][java] *MetricsProvider are @InternalApi d0a6844 Fix neg test case 153f9da Fix tests f52373c checkstyle a5be896 Fix Language::getVersions duplicating aliased versions Additional commits viewable in compare view     Updates `pmd-jsp` from 6.20.0 to 6.21.0  Release notes Sourced from pmd-jsp's releases.  PMD 6.21.0 (24-January-2020) 24-January-2020 - 6.21.0 The PMD team is pleased to announce PMD 6.21.0. This is a minor release. Table Of Contents  New and noteworthy  Modelica support Simple XML dump of AST Updated Apex Support CPD XML format Modified Rules   Fixed Issues API Changes  Deprecated APIs  Internal API For removal     External Contributions  New and noteworthy Modelica support Thanks to Anatoly Trosinenko PMD supports now a new language: Modelica is a language to model complex physical systems. Both PMD and CPD are supported and there are already 3 rules available. The PMD Designer supports syntax highlighting for Modelica. While the language implementation is quite complete, Modelica support is considered experimental for now. This is to allow us to change the rule API (e.g. the AST classes) slightly and improve the implementation based on your feedback. Simple XML dump of AST We added a experimental feature to dump the AST of a source file into XML. The XML format is of course PMD specific and language dependent. That XML file can be used to execute (XPath) queries against without PMD. It can also be used as a textual visualization of the AST if you don't want to use the Designer. This feature is experimental and might change or even be removed in the future, if it is not useful. A short description how to use it is available under Creating XML dump of the AST. Any feedback about it, especially about your use cases, is highly appreciated. Updated Apex Support  ... (truncated)    Commits  a28e9e2 [maven-release-plugin] prepare release pmd_releases/6.21.0 8f80212 Prepare pmd release 6.21.0 024fd7b Merge branch 'pr-2244' 5feca7f Exclude generated AST*.java files from internalization a35bb37 Merge branch 'pr-2245' 35bb524 [apex][java] *MetricsProvider are @InternalApi d0a6844 Fix neg test case 153f9da Fix tests f52373c checkstyle a5be896 Fix Language::getVersions duplicating aliased versions Additional commits viewable in compare view      Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in the `.dependabot/config.yml` file in this repo: - Update frequency - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2020-01-27T06:54:42Z","2020-01-27T16:46:18Z"
"","7295","Bump pmd.version from 6.19.0 to 6.20.0","Bumps `pmd.version` from 6.19.0 to 6.20.0.  Updates `pmd-java` from 6.19.0 to 6.20.0  Release notes  *Sourced from [pmd-java's releases](https://github.com/pmd/pmd/releases).*  > ## PMD 6.20.0 (29-November-2019) >  > ## 29-November-2019 - 6.20.0 >  > The PMD team is pleased to announce PMD 6.20.0. >  > This is a minor release. >  > ### Table Of Contents >  > * [Fixed Issues](https://github.com/pmd/pmd/blob/HEAD/#fixed-issues) > * [External Contributions](https://github.com/pmd/pmd/blob/HEAD/#external-contributions) >  > ### Fixed Issues >  > *   apex >     *   [#2092](https://github-redirect.dependabot.com/pmd/pmd/issues/2092): \[apex] ApexLexer logs visible when Apex is the selected language upon starting the designer >     *   [#2136](https://github-redirect.dependabot.com/pmd/pmd/issues/2136): \[apex] Provide access to underlying query of SoqlExpression > *   core >     *   [#2002](https://github-redirect.dependabot.com/pmd/pmd/issues/2002): \[doc] Issue with http://pmdapplied.com/ linking to a gambling Web site >     *   [#2062](https://github-redirect.dependabot.com/pmd/pmd/issues/2062): \[core] Shortnames parameter does not work with Ant >     *   [#2090](https://github-redirect.dependabot.com/pmd/pmd/issues/2090): \[ci] Release notes and draft releases >     *   [#2096](https://github-redirect.dependabot.com/pmd/pmd/issues/2096): \[core] Referencing category errorprone.xml produces deprecation warnings for InvalidSlf4jMessageFormat > *   java >     *   [#1861](https://github-redirect.dependabot.com/pmd/pmd/issues/1861): \[java] Be more lenient with version numbers >     *   [#2105](https://github-redirect.dependabot.com/pmd/pmd/issues/2105): \[java] Wrong name for inner classes in violations > *   java-bestpractices >     *   [#2016](https://github-redirect.dependabot.com/pmd/pmd/issues/2016): \[java] UnusedImports: False positive if wildcard is used and only static methods > *   java-codestyle >     *   [#1362](https://github-redirect.dependabot.com/pmd/pmd/issues/1362): \[java] LinguisticNaming flags Predicates with boolean-style names >     *   [#2029](https://github-redirect.dependabot.com/pmd/pmd/issues/2029): \[java] UnnecessaryFullyQualifiedName false-positive for non-static nested classes >     *   [#2098](https://github-redirect.dependabot.com/pmd/pmd/issues/2098): \[java] UnnecessaryFullyQualifiedName: regression / false positive > *   java-design >     *   [#2075](https://github-redirect.dependabot.com/pmd/pmd/issues/2075): \[java] ImmutableField false positive with inner class >     *   [#2125](https://github-redirect.dependabot.com/pmd/pmd/issues/2125): \[java] ImmutableField: False positive when variable is updated in conditional loop > *   java-errorprone >     *   [#2102](https://github-redirect.dependabot.com/pmd/pmd/issues/2102): \[java] False positive MissingStaticMethodInNonInstantiatableClass when inheritors are instantiable >  > ### External Contributions >  > *   [#2088](https://github-redirect.dependabot.com/pmd/pmd/pull/2088): \[java] Add more version shortcuts for older java - [Henning Schmiedehausen](https://github.com/hgschmie) > *   [#2089](https://github-redirect.dependabot.com/pmd/pmd/pull/2089): \[core] Minor unrelated improvements to code - [Gonzalo Exequiel Ibars Ingman](https://github.com/gibarsin) > *   [#2091](https://github-redirect.dependabot.com/pmd/pmd/pull/2091): \[core] Fix pmd warnings (IdenticalCatchCases) - [Gonzalo Exequiel Ibars Ingman](https://github.com/gibarsin) > *   [#2106](https://github-redirect.dependabot.com/pmd/pmd/pull/2106): \[java] Wrong name for inner classes - [Andi Pabst](https://github.com/andipabst) > *   [#2121](https://github-redirect.dependabot.com/pmd/pmd/pull/2121): \[java] Predicates treated like booleans - [Ozan Gulle](https://github.com/ozangulle)   Commits  - [`78da370`](https://github.com/pmd/pmd/commit/78da370fb88afd7abe4bfbeb091bb4fcc71ab655) [maven-release-plugin] prepare release pmd_releases/6.20.0 - [`d3340c7`](https://github.com/pmd/pmd/commit/d3340c71eb1f16e9a14b355e38bc8a5988f67489) Prepare pmd release 6.20.0 - [`c5d79a0`](https://github.com/pmd/pmd/commit/c5d79a0db4e4987efc2c6bb839d70ebdf6537c65) Merge branch 'pr-2138' - [`19f507f`](https://github.com/pmd/pmd/commit/19f507fc0108acc7da13ff31f86ef9db9474ce82) Merge branch 'pr-2137' - [`15fc638`](https://github.com/pmd/pmd/commit/15fc638241e9afa43d6d7b22efd2f542fd29c160) Merge branch 'pr-2126' - [`3a27910`](https://github.com/pmd/pmd/commit/3a2791007ea1fb83b2b38c12ef4ca0ffa25939bb) Fix checkstyle - [`a85638a`](https://github.com/pmd/pmd/commit/a85638a0e0ce4ef04bf9d4362ad167388c1868d4) [java] Preserve possible type of the target reference for method invocations - [`cdf11ed`](https://github.com/pmd/pmd/commit/cdf11ed0fa456ef8ced119cfad01d7768543b44c) [apex] Provide access to underlying query of SoqlExpression - [`226fa8e`](https://github.com/pmd/pmd/commit/226fa8e06109a4feca490f9e581a6ab7210af3be) [ci] Fix missing shell functions - [`f7778d0`](https://github.com/pmd/pmd/commit/f7778d06b5920e1d9d64b95a599e10c65b464130) [ci] Not setting up gpg under Windows - Additional commits viewable in [compare view](https://github.com/pmd/pmd/compare/pmd_releases/6.19.0...pmd_releases/6.20.0)    Updates `pmd-core` from 6.19.0 to 6.20.0  Release notes  *Sourced from [pmd-core's releases](https://github.com/pmd/pmd/releases).*  > ## PMD 6.20.0 (29-November-2019) >  > ## 29-November-2019 - 6.20.0 >  > The PMD team is pleased to announce PMD 6.20.0. >  > This is a minor release. >  > ### Table Of Contents >  > * [Fixed Issues](https://github.com/pmd/pmd/blob/HEAD/#fixed-issues) > * [External Contributions](https://github.com/pmd/pmd/blob/HEAD/#external-contributions) >  > ### Fixed Issues >  > *   apex >     *   [#2092](https://github-redirect.dependabot.com/pmd/pmd/issues/2092): \[apex] ApexLexer logs visible when Apex is the selected language upon starting the designer >     *   [#2136](https://github-redirect.dependabot.com/pmd/pmd/issues/2136): \[apex] Provide access to underlying query of SoqlExpression > *   core >     *   [#2002](https://github-redirect.dependabot.com/pmd/pmd/issues/2002): \[doc] Issue with http://pmdapplied.com/ linking to a gambling Web site >     *   [#2062](https://github-redirect.dependabot.com/pmd/pmd/issues/2062): \[core] Shortnames parameter does not work with Ant >     *   [#2090](https://github-redirect.dependabot.com/pmd/pmd/issues/2090): \[ci] Release notes and draft releases >     *   [#2096](https://github-redirect.dependabot.com/pmd/pmd/issues/2096): \[core] Referencing category errorprone.xml produces deprecation warnings for InvalidSlf4jMessageFormat > *   java >     *   [#1861](https://github-redirect.dependabot.com/pmd/pmd/issues/1861): \[java] Be more lenient with version numbers >     *   [#2105](https://github-redirect.dependabot.com/pmd/pmd/issues/2105): \[java] Wrong name for inner classes in violations > *   java-bestpractices >     *   [#2016](https://github-redirect.dependabot.com/pmd/pmd/issues/2016): \[java] UnusedImports: False positive if wildcard is used and only static methods > *   java-codestyle >     *   [#1362](https://github-redirect.dependabot.com/pmd/pmd/issues/1362): \[java] LinguisticNaming flags Predicates with boolean-style names >     *   [#2029](https://github-redirect.dependabot.com/pmd/pmd/issues/2029): \[java] UnnecessaryFullyQualifiedName false-positive for non-static nested classes >     *   [#2098](https://github-redirect.dependabot.com/pmd/pmd/issues/2098): \[java] UnnecessaryFullyQualifiedName: regression / false positive > *   java-design >     *   [#2075](https://github-redirect.dependabot.com/pmd/pmd/issues/2075): \[java] ImmutableField false positive with inner class >     *   [#2125](https://github-redirect.dependabot.com/pmd/pmd/issues/2125): \[java] ImmutableField: False positive when variable is updated in conditional loop > *   java-errorprone >     *   [#2102](https://github-redirect.dependabot.com/pmd/pmd/issues/2102): \[java] False positive MissingStaticMethodInNonInstantiatableClass when inheritors are instantiable >  > ### External Contributions >  > *   [#2088](https://github-redirect.dependabot.com/pmd/pmd/pull/2088): \[java] Add more version shortcuts for older java - [Henning Schmiedehausen](https://github.com/hgschmie) > *   [#2089](https://github-redirect.dependabot.com/pmd/pmd/pull/2089): \[core] Minor unrelated improvements to code - [Gonzalo Exequiel Ibars Ingman](https://github.com/gibarsin) > *   [#2091](https://github-redirect.dependabot.com/pmd/pmd/pull/2091): \[core] Fix pmd warnings (IdenticalCatchCases) - [Gonzalo Exequiel Ibars Ingman](https://github.com/gibarsin) > *   [#2106](https://github-redirect.dependabot.com/pmd/pmd/pull/2106): \[java] Wrong name for inner classes - [Andi Pabst](https://github.com/andipabst) > *   [#2121](https://github-redirect.dependabot.com/pmd/pmd/pull/2121): \[java] Predicates treated like booleans - [Ozan Gulle](https://github.com/ozangulle)   Commits  - [`78da370`](https://github.com/pmd/pmd/commit/78da370fb88afd7abe4bfbeb091bb4fcc71ab655) [maven-release-plugin] prepare release pmd_releases/6.20.0 - [`d3340c7`](https://github.com/pmd/pmd/commit/d3340c71eb1f16e9a14b355e38bc8a5988f67489) Prepare pmd release 6.20.0 - [`c5d79a0`](https://github.com/pmd/pmd/commit/c5d79a0db4e4987efc2c6bb839d70ebdf6537c65) Merge branch 'pr-2138' - [`19f507f`](https://github.com/pmd/pmd/commit/19f507fc0108acc7da13ff31f86ef9db9474ce82) Merge branch 'pr-2137' - [`15fc638`](https://github.com/pmd/pmd/commit/15fc638241e9afa43d6d7b22efd2f542fd29c160) Merge branch 'pr-2126' - [`3a27910`](https://github.com/pmd/pmd/commit/3a2791007ea1fb83b2b38c12ef4ca0ffa25939bb) Fix checkstyle - [`a85638a`](https://github.com/pmd/pmd/commit/a85638a0e0ce4ef04bf9d4362ad167388c1868d4) [java] Preserve possible type of the target reference for method invocations - [`cdf11ed`](https://github.com/pmd/pmd/commit/cdf11ed0fa456ef8ced119cfad01d7768543b44c) [apex] Provide access to underlying query of SoqlExpression - [`226fa8e`](https://github.com/pmd/pmd/commit/226fa8e06109a4feca490f9e581a6ab7210af3be) [ci] Fix missing shell functions - [`f7778d0`](https://github.com/pmd/pmd/commit/f7778d06b5920e1d9d64b95a599e10c65b464130) [ci] Not setting up gpg under Windows - Additional commits viewable in [compare view](https://github.com/pmd/pmd/compare/pmd_releases/6.19.0...pmd_releases/6.20.0)    Updates `pmd-javascript` from 6.19.0 to 6.20.0  Release notes  *Sourced from [pmd-javascript's releases](https://github.com/pmd/pmd/releases).*  > ## PMD 6.20.0 (29-November-2019) >  > ## 29-November-2019 - 6.20.0 >  > The PMD team is pleased to announce PMD 6.20.0. >  > This is a minor release. >  > ### Table Of Contents >  > * [Fixed Issues](https://github.com/pmd/pmd/blob/HEAD/#fixed-issues) > * [External Contributions](https://github.com/pmd/pmd/blob/HEAD/#external-contributions) >  > ### Fixed Issues >  > *   apex >     *   [#2092](https://github-redirect.dependabot.com/pmd/pmd/issues/2092): \[apex] ApexLexer logs visible when Apex is the selected language upon starting the designer >     *   [#2136](https://github-redirect.dependabot.com/pmd/pmd/issues/2136): \[apex] Provide access to underlying query of SoqlExpression > *   core >     *   [#2002](https://github-redirect.dependabot.com/pmd/pmd/issues/2002): \[doc] Issue with http://pmdapplied.com/ linking to a gambling Web site >     *   [#2062](https://github-redirect.dependabot.com/pmd/pmd/issues/2062): \[core] Shortnames parameter does not work with Ant >     *   [#2090](https://github-redirect.dependabot.com/pmd/pmd/issues/2090): \[ci] Release notes and draft releases >     *   [#2096](https://github-redirect.dependabot.com/pmd/pmd/issues/2096): \[core] Referencing category errorprone.xml produces deprecation warnings for InvalidSlf4jMessageFormat > *   java >     *   [#1861](https://github-redirect.dependabot.com/pmd/pmd/issues/1861): \[java] Be more lenient with version numbers >     *   [#2105](https://github-redirect.dependabot.com/pmd/pmd/issues/2105): \[java] Wrong name for inner classes in violations > *   java-bestpractices >     *   [#2016](https://github-redirect.dependabot.com/pmd/pmd/issues/2016): \[java] UnusedImports: False positive if wildcard is used and only static methods > *   java-codestyle >     *   [#1362](https://github-redirect.dependabot.com/pmd/pmd/issues/1362): \[java] LinguisticNaming flags Predicates with boolean-style names >     *   [#2029](https://github-redirect.dependabot.com/pmd/pmd/issues/2029): \[java] UnnecessaryFullyQualifiedName false-positive for non-static nested classes >     *   [#2098](https://github-redirect.dependabot.com/pmd/pmd/issues/2098): \[java] UnnecessaryFullyQualifiedName: regression / false positive > *   java-design >     *   [#2075](https://github-redirect.dependabot.com/pmd/pmd/issues/2075): \[java] ImmutableField false positive with inner class >     *   [#2125](https://github-redirect.dependabot.com/pmd/pmd/issues/2125): \[java] ImmutableField: False positive when variable is updated in conditional loop > *   java-errorprone >     *   [#2102](https://github-redirect.dependabot.com/pmd/pmd/issues/2102): \[java] False positive MissingStaticMethodInNonInstantiatableClass when inheritors are instantiable >  > ### External Contributions >  > *   [#2088](https://github-redirect.dependabot.com/pmd/pmd/pull/2088): \[java] Add more version shortcuts for older java - [Henning Schmiedehausen](https://github.com/hgschmie) > *   [#2089](https://github-redirect.dependabot.com/pmd/pmd/pull/2089): \[core] Minor unrelated improvements to code - [Gonzalo Exequiel Ibars Ingman](https://github.com/gibarsin) > *   [#2091](https://github-redirect.dependabot.com/pmd/pmd/pull/2091): \[core] Fix pmd warnings (IdenticalCatchCases) - [Gonzalo Exequiel Ibars Ingman](https://github.com/gibarsin) > *   [#2106](https://github-redirect.dependabot.com/pmd/pmd/pull/2106): \[java] Wrong name for inner classes - [Andi Pabst](https://github.com/andipabst) > *   [#2121](https://github-redirect.dependabot.com/pmd/pmd/pull/2121): \[java] Predicates treated like booleans - [Ozan Gulle](https://github.com/ozangulle)   Commits  - [`78da370`](https://github.com/pmd/pmd/commit/78da370fb88afd7abe4bfbeb091bb4fcc71ab655) [maven-release-plugin] prepare release pmd_releases/6.20.0 - [`d3340c7`](https://github.com/pmd/pmd/commit/d3340c71eb1f16e9a14b355e38bc8a5988f67489) Prepare pmd release 6.20.0 - [`c5d79a0`](https://github.com/pmd/pmd/commit/c5d79a0db4e4987efc2c6bb839d70ebdf6537c65) Merge branch 'pr-2138' - [`19f507f`](https://github.com/pmd/pmd/commit/19f507fc0108acc7da13ff31f86ef9db9474ce82) Merge branch 'pr-2137' - [`15fc638`](https://github.com/pmd/pmd/commit/15fc638241e9afa43d6d7b22efd2f542fd29c160) Merge branch 'pr-2126' - [`3a27910`](https://github.com/pmd/pmd/commit/3a2791007ea1fb83b2b38c12ef4ca0ffa25939bb) Fix checkstyle - [`a85638a`](https://github.com/pmd/pmd/commit/a85638a0e0ce4ef04bf9d4362ad167388c1868d4) [java] Preserve possible type of the target reference for method invocations - [`cdf11ed`](https://github.com/pmd/pmd/commit/cdf11ed0fa456ef8ced119cfad01d7768543b44c) [apex] Provide access to underlying query of SoqlExpression - [`226fa8e`](https://github.com/pmd/pmd/commit/226fa8e06109a4feca490f9e581a6ab7210af3be) [ci] Fix missing shell functions - [`f7778d0`](https://github.com/pmd/pmd/commit/f7778d06b5920e1d9d64b95a599e10c65b464130) [ci] Not setting up gpg under Windows - Additional commits viewable in [compare view](https://github.com/pmd/pmd/compare/pmd_releases/6.19.0...pmd_releases/6.20.0)    Updates `pmd-jsp` from 6.19.0 to 6.20.0  Release notes  *Sourced from [pmd-jsp's releases](https://github.com/pmd/pmd/releases).*  > ## PMD 6.20.0 (29-November-2019) >  > ## 29-November-2019 - 6.20.0 >  > The PMD team is pleased to announce PMD 6.20.0. >  > This is a minor release. >  > ### Table Of Contents >  > * [Fixed Issues](https://github.com/pmd/pmd/blob/HEAD/#fixed-issues) > * [External Contributions](https://github.com/pmd/pmd/blob/HEAD/#external-contributions) >  > ### Fixed Issues >  > *   apex >     *   [#2092](https://github-redirect.dependabot.com/pmd/pmd/issues/2092): \[apex] ApexLexer logs visible when Apex is the selected language upon starting the designer >     *   [#2136](https://github-redirect.dependabot.com/pmd/pmd/issues/2136): \[apex] Provide access to underlying query of SoqlExpression > *   core >     *   [#2002](https://github-redirect.dependabot.com/pmd/pmd/issues/2002): \[doc] Issue with http://pmdapplied.com/ linking to a gambling Web site >     *   [#2062](https://github-redirect.dependabot.com/pmd/pmd/issues/2062): \[core] Shortnames parameter does not work with Ant >     *   [#2090](https://github-redirect.dependabot.com/pmd/pmd/issues/2090): \[ci] Release notes and draft releases >     *   [#2096](https://github-redirect.dependabot.com/pmd/pmd/issues/2096): \[core] Referencing category errorprone.xml produces deprecation warnings for InvalidSlf4jMessageFormat > *   java >     *   [#1861](https://github-redirect.dependabot.com/pmd/pmd/issues/1861): \[java] Be more lenient with version numbers >     *   [#2105](https://github-redirect.dependabot.com/pmd/pmd/issues/2105): \[java] Wrong name for inner classes in violations > *   java-bestpractices >     *   [#2016](https://github-redirect.dependabot.com/pmd/pmd/issues/2016): \[java] UnusedImports: False positive if wildcard is used and only static methods > *   java-codestyle >     *   [#1362](https://github-redirect.dependabot.com/pmd/pmd/issues/1362): \[java] LinguisticNaming flags Predicates with boolean-style names >     *   [#2029](https://github-redirect.dependabot.com/pmd/pmd/issues/2029): \[java] UnnecessaryFullyQualifiedName false-positive for non-static nested classes >     *   [#2098](https://github-redirect.dependabot.com/pmd/pmd/issues/2098): \[java] UnnecessaryFullyQualifiedName: regression / false positive > *   java-design >     *   [#2075](https://github-redirect.dependabot.com/pmd/pmd/issues/2075): \[java] ImmutableField false positive with inner class >     *   [#2125](https://github-redirect.dependabot.com/pmd/pmd/issues/2125): \[java] ImmutableField: False positive when variable is updated in conditional loop > *   java-errorprone >     *   [#2102](https://github-redirect.dependabot.com/pmd/pmd/issues/2102): \[java] False positive MissingStaticMethodInNonInstantiatableClass when inheritors are instantiable >  > ### External Contributions >  > *   [#2088](https://github-redirect.dependabot.com/pmd/pmd/pull/2088): \[java] Add more version shortcuts for older java - [Henning Schmiedehausen](https://github.com/hgschmie) > *   [#2089](https://github-redirect.dependabot.com/pmd/pmd/pull/2089): \[core] Minor unrelated improvements to code - [Gonzalo Exequiel Ibars Ingman](https://github.com/gibarsin) > *   [#2091](https://github-redirect.dependabot.com/pmd/pmd/pull/2091): \[core] Fix pmd warnings (IdenticalCatchCases) - [Gonzalo Exequiel Ibars Ingman](https://github.com/gibarsin) > *   [#2106](https://github-redirect.dependabot.com/pmd/pmd/pull/2106): \[java] Wrong name for inner classes - [Andi Pabst](https://github.com/andipabst) > *   [#2121](https://github-redirect.dependabot.com/pmd/pmd/pull/2121): \[java] Predicates treated like booleans - [Ozan Gulle](https://github.com/ozangulle)   Commits  - [`78da370`](https://github.com/pmd/pmd/commit/78da370fb88afd7abe4bfbeb091bb4fcc71ab655) [maven-release-plugin] prepare release pmd_releases/6.20.0 - [`d3340c7`](https://github.com/pmd/pmd/commit/d3340c71eb1f16e9a14b355e38bc8a5988f67489) Prepare pmd release 6.20.0 - [`c5d79a0`](https://github.com/pmd/pmd/commit/c5d79a0db4e4987efc2c6bb839d70ebdf6537c65) Merge branch 'pr-2138' - [`19f507f`](https://github.com/pmd/pmd/commit/19f507fc0108acc7da13ff31f86ef9db9474ce82) Merge branch 'pr-2137' - [`15fc638`](https://github.com/pmd/pmd/commit/15fc638241e9afa43d6d7b22efd2f542fd29c160) Merge branch 'pr-2126' - [`3a27910`](https://github.com/pmd/pmd/commit/3a2791007ea1fb83b2b38c12ef4ca0ffa25939bb) Fix checkstyle - [`a85638a`](https://github.com/pmd/pmd/commit/a85638a0e0ce4ef04bf9d4362ad167388c1868d4) [java] Preserve possible type of the target reference for method invocations - [`cdf11ed`](https://github.com/pmd/pmd/commit/cdf11ed0fa456ef8ced119cfad01d7768543b44c) [apex] Provide access to underlying query of SoqlExpression - [`226fa8e`](https://github.com/pmd/pmd/commit/226fa8e06109a4feca490f9e581a6ab7210af3be) [ci] Fix missing shell functions - [`f7778d0`](https://github.com/pmd/pmd/commit/f7778d06b5920e1d9d64b95a599e10c65b464130) [ci] Not setting up gpg under Windows - Additional commits viewable in [compare view](https://github.com/pmd/pmd/compare/pmd_releases/6.19.0...pmd_releases/6.20.0)    Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language - `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language - `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language - `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in your Dependabot [dashboard](https://app.dependabot.com): - Update frequency (including time of day and day of week) - Pull request limits (per update run and/or open at any time) - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2019-12-02T06:48:00Z","2019-12-02T13:11:57Z"
"","7243","Bump pmd.version from 6.18.0 to 6.19.0","Bumps `pmd.version` from 6.18.0 to 6.19.0.  Updates `pmd-java` from 6.18.0 to 6.19.0  Release notes  *Sourced from [pmd-java's releases](https://github.com/pmd/pmd/releases).*  > ## PMD 6.19.0 (31-October-2019) >  > ## 31-October-2019 - 6.19.0 >  > The PMD team is pleased to announce PMD 6.19.0. >  > This is a minor release. >  > ### Table Of Contents >  > * [New and noteworthy](https://github.com/pmd/pmd/blob/HEAD/#new-and-noteworthy) >     * [Updated PMD Designer](https://github.com/pmd/pmd/blob/HEAD/#updated-pmd-designer) >     * [Java Metrics](https://github.com/pmd/pmd/blob/HEAD/#java-metrics) >     * [Modified Rules](https://github.com/pmd/pmd/blob/HEAD/#modified-rules) >     * [Renamed Rules](https://github.com/pmd/pmd/blob/HEAD/#renamed-rules) > * [Fixed Issues](https://github.com/pmd/pmd/blob/HEAD/#fixed-issues) > * [API Changes](https://github.com/pmd/pmd/blob/HEAD/#api-changes) >     * [Deprecated APIs](https://github.com/pmd/pmd/blob/HEAD/#deprecated-apis) >         * [For removal](https://github.com/pmd/pmd/blob/HEAD/#for-removal) >         * [Internal APIs](https://github.com/pmd/pmd/blob/HEAD/#internal-apis) > * [External Contributions](https://github.com/pmd/pmd/blob/HEAD/#external-contributions) >  > ### New and noteworthy >  > #### Updated PMD Designer >  > This PMD release ships a new version of the pmd-designer. > For the changes, see [PMD Designer Changelog](https://github.com/pmd/pmd-designer/releases/tag/6.19.0). >  > #### Java Metrics >  > *   The new metric ""Class Fan Out Complexity"" has been added. See >     [Java Metrics Documentation](https://github.com/pmd/pmd/blob/HEAD/pmd_java_metrics_index.html#class-fan-out-complexity-class_fan_out) for details. >  >  > #### Modified Rules >  > *   The Java rules [`InvalidLogMessageFormat`](https://pmd.github.io/pmd-6.19.0/pmd_rules_java_errorprone.html#invalidlogmessageformat) and [`MoreThanOneLogger`](https://pmd.github.io/pmd-6.19.0/pmd_rules_java_errorprone.html#morethanonelogger) >     (`java-errorprone`) now both support [Log4j2](https://logging.apache.org/log4j/2.x/). Note that the >     rule ""InvalidSlf4jMessageFormat"" has been renamed to ""InvalidLogMessageFormat"" to reflect the fact, that it now >     supports more than slf4j. >  > *   The Java rule [`LawOfDemeter`](https://pmd.github.io/pmd-6.19.0/pmd_rules_java_design.html#lawofdemeter) (`java-design`) ignores now also Builders, that are >     not assigned to a local variable, but just directly used within a method call chain. The method, that creates >     the builder needs to end with ""Builder"", e.g. `newBuilder()` or `initBuilder()` works. This change >     fixes a couple of false positives. >  > *   The Java rule [`DataflowAnomalyAnalysis`](https://pmd.github.io/pmd-6.19.0/pmd_rules_java_errorprone.html#dataflowanomalyanalysis) (`java-errorprone`) doesn't check for >     UR anomalies (undefined and then referenced) anymore. These checks were all false-positives, since actual >     UR occurrences would lead to compile errors. > ... (truncated)   Commits  - [`2881b6f`](https://github.com/pmd/pmd/commit/2881b6f585ce5aa2838163c3880bf3ec21e2e5a5) [maven-release-plugin] prepare release pmd_releases/6.19.0 - [`433f8c0`](https://github.com/pmd/pmd/commit/433f8c06a24e299a323d7d83532a78ccd7b6fff3) Prepare pmd release 6.19.0 - [`73e48ed`](https://github.com/pmd/pmd/commit/73e48edaaa6a4a0d600877ae6d0c8211595ed3cd) Merge branch 'pr-2054' - [`39e07f6`](https://github.com/pmd/pmd/commit/39e07f6fbcb537de9169a75a1930a073dbed1cd3) Merge branch 'pr-2084' - [`79fa9d2`](https://github.com/pmd/pmd/commit/79fa9d21373d7add434e3f46cb4d867e1d1ac9d9) Merge branch 'pr-2083' - [`6e92282`](https://github.com/pmd/pmd/commit/6e92282e2447f3dcc928c7ee158085e9dce40af9) Merge branch 'pr-2086' - [`34455b3`](https://github.com/pmd/pmd/commit/34455b3051ca7b4d42f76fabd7d168d8047ab96a) Merge branch 'pr-2066' - [`fc8f9b1`](https://github.com/pmd/pmd/commit/fc8f9b1c6efcdbcc85bd46801f21205c57fbfa67) [doc] Clarify note about deprecated rules when referencing a complete ruleset - [`fda81bd`](https://github.com/pmd/pmd/commit/fda81bd7bc0e35a7e94ae3533ff4ae001b5a3ee9) [core] Don't enable deprecated rules if whole ruleset is imported - [`f9d7b08`](https://github.com/pmd/pmd/commit/f9d7b0891b5b12d528b3a6e720423b40145dc289) Merge branch 'pr-2027' - Additional commits viewable in [compare view](https://github.com/pmd/pmd/compare/pmd_releases/6.18.0...pmd_releases/6.19.0)    Updates `pmd-core` from 6.18.0 to 6.19.0  Release notes  *Sourced from [pmd-core's releases](https://github.com/pmd/pmd/releases).*  > ## PMD 6.19.0 (31-October-2019) >  > ## 31-October-2019 - 6.19.0 >  > The PMD team is pleased to announce PMD 6.19.0. >  > This is a minor release. >  > ### Table Of Contents >  > * [New and noteworthy](https://github.com/pmd/pmd/blob/HEAD/#new-and-noteworthy) >     * [Updated PMD Designer](https://github.com/pmd/pmd/blob/HEAD/#updated-pmd-designer) >     * [Java Metrics](https://github.com/pmd/pmd/blob/HEAD/#java-metrics) >     * [Modified Rules](https://github.com/pmd/pmd/blob/HEAD/#modified-rules) >     * [Renamed Rules](https://github.com/pmd/pmd/blob/HEAD/#renamed-rules) > * [Fixed Issues](https://github.com/pmd/pmd/blob/HEAD/#fixed-issues) > * [API Changes](https://github.com/pmd/pmd/blob/HEAD/#api-changes) >     * [Deprecated APIs](https://github.com/pmd/pmd/blob/HEAD/#deprecated-apis) >         * [For removal](https://github.com/pmd/pmd/blob/HEAD/#for-removal) >         * [Internal APIs](https://github.com/pmd/pmd/blob/HEAD/#internal-apis) > * [External Contributions](https://github.com/pmd/pmd/blob/HEAD/#external-contributions) >  > ### New and noteworthy >  > #### Updated PMD Designer >  > This PMD release ships a new version of the pmd-designer. > For the changes, see [PMD Designer Changelog](https://github.com/pmd/pmd-designer/releases/tag/6.19.0). >  > #### Java Metrics >  > *   The new metric ""Class Fan Out Complexity"" has been added. See >     [Java Metrics Documentation](https://github.com/pmd/pmd/blob/HEAD/pmd_java_metrics_index.html#class-fan-out-complexity-class_fan_out) for details. >  >  > #### Modified Rules >  > *   The Java rules [`InvalidLogMessageFormat`](https://pmd.github.io/pmd-6.19.0/pmd_rules_java_errorprone.html#invalidlogmessageformat) and [`MoreThanOneLogger`](https://pmd.github.io/pmd-6.19.0/pmd_rules_java_errorprone.html#morethanonelogger) >     (`java-errorprone`) now both support [Log4j2](https://logging.apache.org/log4j/2.x/). Note that the >     rule ""InvalidSlf4jMessageFormat"" has been renamed to ""InvalidLogMessageFormat"" to reflect the fact, that it now >     supports more than slf4j. >  > *   The Java rule [`LawOfDemeter`](https://pmd.github.io/pmd-6.19.0/pmd_rules_java_design.html#lawofdemeter) (`java-design`) ignores now also Builders, that are >     not assigned to a local variable, but just directly used within a method call chain. The method, that creates >     the builder needs to end with ""Builder"", e.g. `newBuilder()` or `initBuilder()` works. This change >     fixes a couple of false positives. >  > *   The Java rule [`DataflowAnomalyAnalysis`](https://pmd.github.io/pmd-6.19.0/pmd_rules_java_errorprone.html#dataflowanomalyanalysis) (`java-errorprone`) doesn't check for >     UR anomalies (undefined and then referenced) anymore. These checks were all false-positives, since actual >     UR occurrences would lead to compile errors. > ... (truncated)   Commits  - [`2881b6f`](https://github.com/pmd/pmd/commit/2881b6f585ce5aa2838163c3880bf3ec21e2e5a5) [maven-release-plugin] prepare release pmd_releases/6.19.0 - [`433f8c0`](https://github.com/pmd/pmd/commit/433f8c06a24e299a323d7d83532a78ccd7b6fff3) Prepare pmd release 6.19.0 - [`73e48ed`](https://github.com/pmd/pmd/commit/73e48edaaa6a4a0d600877ae6d0c8211595ed3cd) Merge branch 'pr-2054' - [`39e07f6`](https://github.com/pmd/pmd/commit/39e07f6fbcb537de9169a75a1930a073dbed1cd3) Merge branch 'pr-2084' - [`79fa9d2`](https://github.com/pmd/pmd/commit/79fa9d21373d7add434e3f46cb4d867e1d1ac9d9) Merge branch 'pr-2083' - [`6e92282`](https://github.com/pmd/pmd/commit/6e92282e2447f3dcc928c7ee158085e9dce40af9) Merge branch 'pr-2086' - [`34455b3`](https://github.com/pmd/pmd/commit/34455b3051ca7b4d42f76fabd7d168d8047ab96a) Merge branch 'pr-2066' - [`fc8f9b1`](https://github.com/pmd/pmd/commit/fc8f9b1c6efcdbcc85bd46801f21205c57fbfa67) [doc] Clarify note about deprecated rules when referencing a complete ruleset - [`fda81bd`](https://github.com/pmd/pmd/commit/fda81bd7bc0e35a7e94ae3533ff4ae001b5a3ee9) [core] Don't enable deprecated rules if whole ruleset is imported - [`f9d7b08`](https://github.com/pmd/pmd/commit/f9d7b0891b5b12d528b3a6e720423b40145dc289) Merge branch 'pr-2027' - Additional commits viewable in [compare view](https://github.com/pmd/pmd/compare/pmd_releases/6.18.0...pmd_releases/6.19.0)    Updates `pmd-javascript` from 6.18.0 to 6.19.0  Release notes  *Sourced from [pmd-javascript's releases](https://github.com/pmd/pmd/releases).*  > ## PMD 6.19.0 (31-October-2019) >  > ## 31-October-2019 - 6.19.0 >  > The PMD team is pleased to announce PMD 6.19.0. >  > This is a minor release. >  > ### Table Of Contents >  > * [New and noteworthy](https://github.com/pmd/pmd/blob/HEAD/#new-and-noteworthy) >     * [Updated PMD Designer](https://github.com/pmd/pmd/blob/HEAD/#updated-pmd-designer) >     * [Java Metrics](https://github.com/pmd/pmd/blob/HEAD/#java-metrics) >     * [Modified Rules](https://github.com/pmd/pmd/blob/HEAD/#modified-rules) >     * [Renamed Rules](https://github.com/pmd/pmd/blob/HEAD/#renamed-rules) > * [Fixed Issues](https://github.com/pmd/pmd/blob/HEAD/#fixed-issues) > * [API Changes](https://github.com/pmd/pmd/blob/HEAD/#api-changes) >     * [Deprecated APIs](https://github.com/pmd/pmd/blob/HEAD/#deprecated-apis) >         * [For removal](https://github.com/pmd/pmd/blob/HEAD/#for-removal) >         * [Internal APIs](https://github.com/pmd/pmd/blob/HEAD/#internal-apis) > * [External Contributions](https://github.com/pmd/pmd/blob/HEAD/#external-contributions) >  > ### New and noteworthy >  > #### Updated PMD Designer >  > This PMD release ships a new version of the pmd-designer. > For the changes, see [PMD Designer Changelog](https://github.com/pmd/pmd-designer/releases/tag/6.19.0). >  > #### Java Metrics >  > *   The new metric ""Class Fan Out Complexity"" has been added. See >     [Java Metrics Documentation](https://github.com/pmd/pmd/blob/HEAD/pmd_java_metrics_index.html#class-fan-out-complexity-class_fan_out) for details. >  >  > #### Modified Rules >  > *   The Java rules [`InvalidLogMessageFormat`](https://pmd.github.io/pmd-6.19.0/pmd_rules_java_errorprone.html#invalidlogmessageformat) and [`MoreThanOneLogger`](https://pmd.github.io/pmd-6.19.0/pmd_rules_java_errorprone.html#morethanonelogger) >     (`java-errorprone`) now both support [Log4j2](https://logging.apache.org/log4j/2.x/). Note that the >     rule ""InvalidSlf4jMessageFormat"" has been renamed to ""InvalidLogMessageFormat"" to reflect the fact, that it now >     supports more than slf4j. >  > *   The Java rule [`LawOfDemeter`](https://pmd.github.io/pmd-6.19.0/pmd_rules_java_design.html#lawofdemeter) (`java-design`) ignores now also Builders, that are >     not assigned to a local variable, but just directly used within a method call chain. The method, that creates >     the builder needs to end with ""Builder"", e.g. `newBuilder()` or `initBuilder()` works. This change >     fixes a couple of false positives. >  > *   The Java rule [`DataflowAnomalyAnalysis`](https://pmd.github.io/pmd-6.19.0/pmd_rules_java_errorprone.html#dataflowanomalyanalysis) (`java-errorprone`) doesn't check for >     UR anomalies (undefined and then referenced) anymore. These checks were all false-positives, since actual >     UR occurrences would lead to compile errors. > ... (truncated)   Commits  - [`2881b6f`](https://github.com/pmd/pmd/commit/2881b6f585ce5aa2838163c3880bf3ec21e2e5a5) [maven-release-plugin] prepare release pmd_releases/6.19.0 - [`433f8c0`](https://github.com/pmd/pmd/commit/433f8c06a24e299a323d7d83532a78ccd7b6fff3) Prepare pmd release 6.19.0 - [`73e48ed`](https://github.com/pmd/pmd/commit/73e48edaaa6a4a0d600877ae6d0c8211595ed3cd) Merge branch 'pr-2054' - [`39e07f6`](https://github.com/pmd/pmd/commit/39e07f6fbcb537de9169a75a1930a073dbed1cd3) Merge branch 'pr-2084' - [`79fa9d2`](https://github.com/pmd/pmd/commit/79fa9d21373d7add434e3f46cb4d867e1d1ac9d9) Merge branch 'pr-2083' - [`6e92282`](https://github.com/pmd/pmd/commit/6e92282e2447f3dcc928c7ee158085e9dce40af9) Merge branch 'pr-2086' - [`34455b3`](https://github.com/pmd/pmd/commit/34455b3051ca7b4d42f76fabd7d168d8047ab96a) Merge branch 'pr-2066' - [`fc8f9b1`](https://github.com/pmd/pmd/commit/fc8f9b1c6efcdbcc85bd46801f21205c57fbfa67) [doc] Clarify note about deprecated rules when referencing a complete ruleset - [`fda81bd`](https://github.com/pmd/pmd/commit/fda81bd7bc0e35a7e94ae3533ff4ae001b5a3ee9) [core] Don't enable deprecated rules if whole ruleset is imported - [`f9d7b08`](https://github.com/pmd/pmd/commit/f9d7b0891b5b12d528b3a6e720423b40145dc289) Merge branch 'pr-2027' - Additional commits viewable in [compare view](https://github.com/pmd/pmd/compare/pmd_releases/6.18.0...pmd_releases/6.19.0)    Updates `pmd-jsp` from 6.18.0 to 6.19.0  Release notes  *Sourced from [pmd-jsp's releases](https://github.com/pmd/pmd/releases).*  > ## PMD 6.19.0 (31-October-2019) >  > ## 31-October-2019 - 6.19.0 >  > The PMD team is pleased to announce PMD 6.19.0. >  > This is a minor release. >  > ### Table Of Contents >  > * [New and noteworthy](https://github.com/pmd/pmd/blob/HEAD/#new-and-noteworthy) >     * [Updated PMD Designer](https://github.com/pmd/pmd/blob/HEAD/#updated-pmd-designer) >     * [Java Metrics](https://github.com/pmd/pmd/blob/HEAD/#java-metrics) >     * [Modified Rules](https://github.com/pmd/pmd/blob/HEAD/#modified-rules) >     * [Renamed Rules](https://github.com/pmd/pmd/blob/HEAD/#renamed-rules) > * [Fixed Issues](https://github.com/pmd/pmd/blob/HEAD/#fixed-issues) > * [API Changes](https://github.com/pmd/pmd/blob/HEAD/#api-changes) >     * [Deprecated APIs](https://github.com/pmd/pmd/blob/HEAD/#deprecated-apis) >         * [For removal](https://github.com/pmd/pmd/blob/HEAD/#for-removal) >         * [Internal APIs](https://github.com/pmd/pmd/blob/HEAD/#internal-apis) > * [External Contributions](https://github.com/pmd/pmd/blob/HEAD/#external-contributions) >  > ### New and noteworthy >  > #### Updated PMD Designer >  > This PMD release ships a new version of the pmd-designer. > For the changes, see [PMD Designer Changelog](https://github.com/pmd/pmd-designer/releases/tag/6.19.0). >  > #### Java Metrics >  > *   The new metric ""Class Fan Out Complexity"" has been added. See >     [Java Metrics Documentation](https://github.com/pmd/pmd/blob/HEAD/pmd_java_metrics_index.html#class-fan-out-complexity-class_fan_out) for details. >  >  > #### Modified Rules >  > *   The Java rules [`InvalidLogMessageFormat`](https://pmd.github.io/pmd-6.19.0/pmd_rules_java_errorprone.html#invalidlogmessageformat) and [`MoreThanOneLogger`](https://pmd.github.io/pmd-6.19.0/pmd_rules_java_errorprone.html#morethanonelogger) >     (`java-errorprone`) now both support [Log4j2](https://logging.apache.org/log4j/2.x/). Note that the >     rule ""InvalidSlf4jMessageFormat"" has been renamed to ""InvalidLogMessageFormat"" to reflect the fact, that it now >     supports more than slf4j. >  > *   The Java rule [`LawOfDemeter`](https://pmd.github.io/pmd-6.19.0/pmd_rules_java_design.html#lawofdemeter) (`java-design`) ignores now also Builders, that are >     not assigned to a local variable, but just directly used within a method call chain. The method, that creates >     the builder needs to end with ""Builder"", e.g. `newBuilder()` or `initBuilder()` works. This change >     fixes a couple of false positives. >  > *   The Java rule [`DataflowAnomalyAnalysis`](https://pmd.github.io/pmd-6.19.0/pmd_rules_java_errorprone.html#dataflowanomalyanalysis) (`java-errorprone`) doesn't check for >     UR anomalies (undefined and then referenced) anymore. These checks were all false-positives, since actual >     UR occurrences would lead to compile errors. > ... (truncated)   Commits  - [`2881b6f`](https://github.com/pmd/pmd/commit/2881b6f585ce5aa2838163c3880bf3ec21e2e5a5) [maven-release-plugin] prepare release pmd_releases/6.19.0 - [`433f8c0`](https://github.com/pmd/pmd/commit/433f8c06a24e299a323d7d83532a78ccd7b6fff3) Prepare pmd release 6.19.0 - [`73e48ed`](https://github.com/pmd/pmd/commit/73e48edaaa6a4a0d600877ae6d0c8211595ed3cd) Merge branch 'pr-2054' - [`39e07f6`](https://github.com/pmd/pmd/commit/39e07f6fbcb537de9169a75a1930a073dbed1cd3) Merge branch 'pr-2084' - [`79fa9d2`](https://github.com/pmd/pmd/commit/79fa9d21373d7add434e3f46cb4d867e1d1ac9d9) Merge branch 'pr-2083' - [`6e92282`](https://github.com/pmd/pmd/commit/6e92282e2447f3dcc928c7ee158085e9dce40af9) Merge branch 'pr-2086' - [`34455b3`](https://github.com/pmd/pmd/commit/34455b3051ca7b4d42f76fabd7d168d8047ab96a) Merge branch 'pr-2066' - [`fc8f9b1`](https://github.com/pmd/pmd/commit/fc8f9b1c6efcdbcc85bd46801f21205c57fbfa67) [doc] Clarify note about deprecated rules when referencing a complete ruleset - [`fda81bd`](https://github.com/pmd/pmd/commit/fda81bd7bc0e35a7e94ae3533ff4ae001b5a3ee9) [core] Don't enable deprecated rules if whole ruleset is imported - [`f9d7b08`](https://github.com/pmd/pmd/commit/f9d7b0891b5b12d528b3a6e720423b40145dc289) Merge branch 'pr-2027' - Additional commits viewable in [compare view](https://github.com/pmd/pmd/compare/pmd_releases/6.18.0...pmd_releases/6.19.0)    Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language - `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language - `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language - `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in your Dependabot [dashboard](https://app.dependabot.com): - Update frequency (including time of day and day of week) - Pull request limits (per update run and/or open at any time) - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2019-11-04T13:26:47Z","2019-11-05T02:33:59Z"
"","7214","Bump pmd.version from 6.17.0 to 6.18.0","Bumps `pmd.version` from 6.17.0 to 6.18.0.  Updates `pmd-java` from 6.17.0 to 6.18.0  Release notes  *Sourced from [pmd-java's releases](https://github.com/pmd/pmd/releases).*  > ## PMD 6.18.0 (15-September-2019) >  > ## 15-September-2019 - 6.18.0 >  > The PMD team is pleased to announce PMD 6.18.0. >  > This is a minor release. >  > ### Table Of Contents >  > * [New and noteworthy](https://github.com/pmd/pmd/blob/HEAD/#new-and-noteworthy) >     * [Java 13 Support](https://github.com/pmd/pmd/blob/HEAD/#java-13-support) >     * [Full support for Scala](https://github.com/pmd/pmd/blob/HEAD/#full-support-for-scala) >     * [New rule designer documentation](https://github.com/pmd/pmd/blob/HEAD/#new-rule-designer-documentation) >     * [New rules](https://github.com/pmd/pmd/blob/HEAD/#new-rules) >     * [Modified Rules](https://github.com/pmd/pmd/blob/HEAD/#modified-rules) > * [Fixed Issues](https://github.com/pmd/pmd/blob/HEAD/#fixed-issues) > * [API Changes](https://github.com/pmd/pmd/blob/HEAD/#api-changes) >     * [Changes to Renderer](https://github.com/pmd/pmd/blob/HEAD/#changes-to-renderer) >     * [Deprecated APIs](https://github.com/pmd/pmd/blob/HEAD/#deprecated-apis) >         * [For removal](https://github.com/pmd/pmd/blob/HEAD/#for-removal) >         * [Internal APIs](https://github.com/pmd/pmd/blob/HEAD/#internal-apis) > * [External Contributions](https://github.com/pmd/pmd/blob/HEAD/#external-contributions) >  > ### New and noteworthy >  > #### Java 13 Support >  > This release of PMD brings support for Java 13. PMD can parse [Switch Expressions](http://openjdk.java.net/jeps/354) > with the new `yield` statement and resolve the type of such an expression. >  > PMD also parses [Text Blocks](http://openjdk.java.net/jeps/355) as String literals. >  > Note: The Switch Expressions and Text Blocks are a preview language feature of OpenJDK 13 > and are not enabled by default. In order to > analyze a project with PMD that uses these language features, you'll need to enable it via the environment > variable `PMD_JAVA_OPTS` and select the new language version `13-preview`: >  >     export PMD_JAVA_OPTS=--enable-preview >     ./run.sh pmd -language java -version 13-preview ... >  > Note: Support for the extended break statement introduced in Java 12 as a preview language feature > will be removed with the next PMD version 6.19.0. >  > #### Full support for Scala >  > Thanks to [Chris Smith](https://github.com/tophersmith) PMD now fully supports Scala. Now rules for analyzing Scala > code can be developed in addition to the Copy-Paste-Detection (CPD) functionality. There are no rules yet, so > contributions are welcome. >  > ... (truncated)   Commits  - [`3f42cca`](https://github.com/pmd/pmd/commit/3f42cca200334b6c4d762573b7c99e0a18b41b3c) [maven-release-plugin] prepare release pmd_releases/6.18.0 - [`be90279`](https://github.com/pmd/pmd/commit/be90279d83bc6b38222ef88eeb281fe70e303d9b) Prepare pmd release 6.18.0 - [`4672ccf`](https://github.com/pmd/pmd/commit/4672ccf2e3916f615063995b0c09e026a89ef5de) Update generated rule documentation - [`8f3abf9`](https://github.com/pmd/pmd/commit/8f3abf93497d31d36874d1401bbe4ae054663c3a) Merge branch 'pr-2015' - [`6d8f7c1`](https://github.com/pmd/pmd/commit/6d8f7c12df77bc707e4c815dace3d3d9f34f9165) Update release notes, refs [#2015](https://github-redirect.dependabot.com/pmd/pmd/issues/2015), #fixes [#1227](https://github-redirect.dependabot.com/pmd/pmd/issues/1227) - [`eeb147e`](https://github.com/pmd/pmd/commit/eeb147e59485a2dc9fa35c87e45157f7c519b56b) formatting - [`73006a4`](https://github.com/pmd/pmd/commit/73006a420eb72af5aae43b23901be881318a9b96) Update doc for unused formal parameter - [`e0b0e63`](https://github.com/pmd/pmd/commit/e0b0e6330de0616b9452ff6d3f115f3c7fba9f7d) [core] XPath 1.0: filter out list attributes - [`9eaffbd`](https://github.com/pmd/pmd/commit/9eaffbd3e6123b5cae78a3ec8d6be9a5f421dc6a) Update generated rule documentation - [`8821434`](https://github.com/pmd/pmd/commit/882143460462d1954bfd6bd57b20f8f24dcaf192) Merge branch 'pr-1943' - Additional commits viewable in [compare view](https://github.com/pmd/pmd/compare/pmd_releases/6.17.0...pmd_releases/6.18.0)    Updates `pmd-core` from 6.17.0 to 6.18.0  Release notes  *Sourced from [pmd-core's releases](https://github.com/pmd/pmd/releases).*  > ## PMD 6.18.0 (15-September-2019) >  > ## 15-September-2019 - 6.18.0 >  > The PMD team is pleased to announce PMD 6.18.0. >  > This is a minor release. >  > ### Table Of Contents >  > * [New and noteworthy](https://github.com/pmd/pmd/blob/HEAD/#new-and-noteworthy) >     * [Java 13 Support](https://github.com/pmd/pmd/blob/HEAD/#java-13-support) >     * [Full support for Scala](https://github.com/pmd/pmd/blob/HEAD/#full-support-for-scala) >     * [New rule designer documentation](https://github.com/pmd/pmd/blob/HEAD/#new-rule-designer-documentation) >     * [New rules](https://github.com/pmd/pmd/blob/HEAD/#new-rules) >     * [Modified Rules](https://github.com/pmd/pmd/blob/HEAD/#modified-rules) > * [Fixed Issues](https://github.com/pmd/pmd/blob/HEAD/#fixed-issues) > * [API Changes](https://github.com/pmd/pmd/blob/HEAD/#api-changes) >     * [Changes to Renderer](https://github.com/pmd/pmd/blob/HEAD/#changes-to-renderer) >     * [Deprecated APIs](https://github.com/pmd/pmd/blob/HEAD/#deprecated-apis) >         * [For removal](https://github.com/pmd/pmd/blob/HEAD/#for-removal) >         * [Internal APIs](https://github.com/pmd/pmd/blob/HEAD/#internal-apis) > * [External Contributions](https://github.com/pmd/pmd/blob/HEAD/#external-contributions) >  > ### New and noteworthy >  > #### Java 13 Support >  > This release of PMD brings support for Java 13. PMD can parse [Switch Expressions](http://openjdk.java.net/jeps/354) > with the new `yield` statement and resolve the type of such an expression. >  > PMD also parses [Text Blocks](http://openjdk.java.net/jeps/355) as String literals. >  > Note: The Switch Expressions and Text Blocks are a preview language feature of OpenJDK 13 > and are not enabled by default. In order to > analyze a project with PMD that uses these language features, you'll need to enable it via the environment > variable `PMD_JAVA_OPTS` and select the new language version `13-preview`: >  >     export PMD_JAVA_OPTS=--enable-preview >     ./run.sh pmd -language java -version 13-preview ... >  > Note: Support for the extended break statement introduced in Java 12 as a preview language feature > will be removed with the next PMD version 6.19.0. >  > #### Full support for Scala >  > Thanks to [Chris Smith](https://github.com/tophersmith) PMD now fully supports Scala. Now rules for analyzing Scala > code can be developed in addition to the Copy-Paste-Detection (CPD) functionality. There are no rules yet, so > contributions are welcome. >  > ... (truncated)   Commits  - [`3f42cca`](https://github.com/pmd/pmd/commit/3f42cca200334b6c4d762573b7c99e0a18b41b3c) [maven-release-plugin] prepare release pmd_releases/6.18.0 - [`be90279`](https://github.com/pmd/pmd/commit/be90279d83bc6b38222ef88eeb281fe70e303d9b) Prepare pmd release 6.18.0 - [`4672ccf`](https://github.com/pmd/pmd/commit/4672ccf2e3916f615063995b0c09e026a89ef5de) Update generated rule documentation - [`8f3abf9`](https://github.com/pmd/pmd/commit/8f3abf93497d31d36874d1401bbe4ae054663c3a) Merge branch 'pr-2015' - [`6d8f7c1`](https://github.com/pmd/pmd/commit/6d8f7c12df77bc707e4c815dace3d3d9f34f9165) Update release notes, refs [#2015](https://github-redirect.dependabot.com/pmd/pmd/issues/2015), #fixes [#1227](https://github-redirect.dependabot.com/pmd/pmd/issues/1227) - [`eeb147e`](https://github.com/pmd/pmd/commit/eeb147e59485a2dc9fa35c87e45157f7c519b56b) formatting - [`73006a4`](https://github.com/pmd/pmd/commit/73006a420eb72af5aae43b23901be881318a9b96) Update doc for unused formal parameter - [`e0b0e63`](https://github.com/pmd/pmd/commit/e0b0e6330de0616b9452ff6d3f115f3c7fba9f7d) [core] XPath 1.0: filter out list attributes - [`9eaffbd`](https://github.com/pmd/pmd/commit/9eaffbd3e6123b5cae78a3ec8d6be9a5f421dc6a) Update generated rule documentation - [`8821434`](https://github.com/pmd/pmd/commit/882143460462d1954bfd6bd57b20f8f24dcaf192) Merge branch 'pr-1943' - Additional commits viewable in [compare view](https://github.com/pmd/pmd/compare/pmd_releases/6.17.0...pmd_releases/6.18.0)    Updates `pmd-javascript` from 6.17.0 to 6.18.0  Release notes  *Sourced from [pmd-javascript's releases](https://github.com/pmd/pmd/releases).*  > ## PMD 6.18.0 (15-September-2019) >  > ## 15-September-2019 - 6.18.0 >  > The PMD team is pleased to announce PMD 6.18.0. >  > This is a minor release. >  > ### Table Of Contents >  > * [New and noteworthy](https://github.com/pmd/pmd/blob/HEAD/#new-and-noteworthy) >     * [Java 13 Support](https://github.com/pmd/pmd/blob/HEAD/#java-13-support) >     * [Full support for Scala](https://github.com/pmd/pmd/blob/HEAD/#full-support-for-scala) >     * [New rule designer documentation](https://github.com/pmd/pmd/blob/HEAD/#new-rule-designer-documentation) >     * [New rules](https://github.com/pmd/pmd/blob/HEAD/#new-rules) >     * [Modified Rules](https://github.com/pmd/pmd/blob/HEAD/#modified-rules) > * [Fixed Issues](https://github.com/pmd/pmd/blob/HEAD/#fixed-issues) > * [API Changes](https://github.com/pmd/pmd/blob/HEAD/#api-changes) >     * [Changes to Renderer](https://github.com/pmd/pmd/blob/HEAD/#changes-to-renderer) >     * [Deprecated APIs](https://github.com/pmd/pmd/blob/HEAD/#deprecated-apis) >         * [For removal](https://github.com/pmd/pmd/blob/HEAD/#for-removal) >         * [Internal APIs](https://github.com/pmd/pmd/blob/HEAD/#internal-apis) > * [External Contributions](https://github.com/pmd/pmd/blob/HEAD/#external-contributions) >  > ### New and noteworthy >  > #### Java 13 Support >  > This release of PMD brings support for Java 13. PMD can parse [Switch Expressions](http://openjdk.java.net/jeps/354) > with the new `yield` statement and resolve the type of such an expression. >  > PMD also parses [Text Blocks](http://openjdk.java.net/jeps/355) as String literals. >  > Note: The Switch Expressions and Text Blocks are a preview language feature of OpenJDK 13 > and are not enabled by default. In order to > analyze a project with PMD that uses these language features, you'll need to enable it via the environment > variable `PMD_JAVA_OPTS` and select the new language version `13-preview`: >  >     export PMD_JAVA_OPTS=--enable-preview >     ./run.sh pmd -language java -version 13-preview ... >  > Note: Support for the extended break statement introduced in Java 12 as a preview language feature > will be removed with the next PMD version 6.19.0. >  > #### Full support for Scala >  > Thanks to [Chris Smith](https://github.com/tophersmith) PMD now fully supports Scala. Now rules for analyzing Scala > code can be developed in addition to the Copy-Paste-Detection (CPD) functionality. There are no rules yet, so > contributions are welcome. >  > ... (truncated)   Commits  - [`3f42cca`](https://github.com/pmd/pmd/commit/3f42cca200334b6c4d762573b7c99e0a18b41b3c) [maven-release-plugin] prepare release pmd_releases/6.18.0 - [`be90279`](https://github.com/pmd/pmd/commit/be90279d83bc6b38222ef88eeb281fe70e303d9b) Prepare pmd release 6.18.0 - [`4672ccf`](https://github.com/pmd/pmd/commit/4672ccf2e3916f615063995b0c09e026a89ef5de) Update generated rule documentation - [`8f3abf9`](https://github.com/pmd/pmd/commit/8f3abf93497d31d36874d1401bbe4ae054663c3a) Merge branch 'pr-2015' - [`6d8f7c1`](https://github.com/pmd/pmd/commit/6d8f7c12df77bc707e4c815dace3d3d9f34f9165) Update release notes, refs [#2015](https://github-redirect.dependabot.com/pmd/pmd/issues/2015), #fixes [#1227](https://github-redirect.dependabot.com/pmd/pmd/issues/1227) - [`eeb147e`](https://github.com/pmd/pmd/commit/eeb147e59485a2dc9fa35c87e45157f7c519b56b) formatting - [`73006a4`](https://github.com/pmd/pmd/commit/73006a420eb72af5aae43b23901be881318a9b96) Update doc for unused formal parameter - [`e0b0e63`](https://github.com/pmd/pmd/commit/e0b0e6330de0616b9452ff6d3f115f3c7fba9f7d) [core] XPath 1.0: filter out list attributes - [`9eaffbd`](https://github.com/pmd/pmd/commit/9eaffbd3e6123b5cae78a3ec8d6be9a5f421dc6a) Update generated rule documentation - [`8821434`](https://github.com/pmd/pmd/commit/882143460462d1954bfd6bd57b20f8f24dcaf192) Merge branch 'pr-1943' - Additional commits viewable in [compare view](https://github.com/pmd/pmd/compare/pmd_releases/6.17.0...pmd_releases/6.18.0)    Updates `pmd-jsp` from 6.17.0 to 6.18.0  Release notes  *Sourced from [pmd-jsp's releases](https://github.com/pmd/pmd/releases).*  > ## PMD 6.18.0 (15-September-2019) >  > ## 15-September-2019 - 6.18.0 >  > The PMD team is pleased to announce PMD 6.18.0. >  > This is a minor release. >  > ### Table Of Contents >  > * [New and noteworthy](https://github.com/pmd/pmd/blob/HEAD/#new-and-noteworthy) >     * [Java 13 Support](https://github.com/pmd/pmd/blob/HEAD/#java-13-support) >     * [Full support for Scala](https://github.com/pmd/pmd/blob/HEAD/#full-support-for-scala) >     * [New rule designer documentation](https://github.com/pmd/pmd/blob/HEAD/#new-rule-designer-documentation) >     * [New rules](https://github.com/pmd/pmd/blob/HEAD/#new-rules) >     * [Modified Rules](https://github.com/pmd/pmd/blob/HEAD/#modified-rules) > * [Fixed Issues](https://github.com/pmd/pmd/blob/HEAD/#fixed-issues) > * [API Changes](https://github.com/pmd/pmd/blob/HEAD/#api-changes) >     * [Changes to Renderer](https://github.com/pmd/pmd/blob/HEAD/#changes-to-renderer) >     * [Deprecated APIs](https://github.com/pmd/pmd/blob/HEAD/#deprecated-apis) >         * [For removal](https://github.com/pmd/pmd/blob/HEAD/#for-removal) >         * [Internal APIs](https://github.com/pmd/pmd/blob/HEAD/#internal-apis) > * [External Contributions](https://github.com/pmd/pmd/blob/HEAD/#external-contributions) >  > ### New and noteworthy >  > #### Java 13 Support >  > This release of PMD brings support for Java 13. PMD can parse [Switch Expressions](http://openjdk.java.net/jeps/354) > with the new `yield` statement and resolve the type of such an expression. >  > PMD also parses [Text Blocks](http://openjdk.java.net/jeps/355) as String literals. >  > Note: The Switch Expressions and Text Blocks are a preview language feature of OpenJDK 13 > and are not enabled by default. In order to > analyze a project with PMD that uses these language features, you'll need to enable it via the environment > variable `PMD_JAVA_OPTS` and select the new language version `13-preview`: >  >     export PMD_JAVA_OPTS=--enable-preview >     ./run.sh pmd -language java -version 13-preview ... >  > Note: Support for the extended break statement introduced in Java 12 as a preview language feature > will be removed with the next PMD version 6.19.0. >  > #### Full support for Scala >  > Thanks to [Chris Smith](https://github.com/tophersmith) PMD now fully supports Scala. Now rules for analyzing Scala > code can be developed in addition to the Copy-Paste-Detection (CPD) functionality. There are no rules yet, so > contributions are welcome. >  > ... (truncated)   Commits  - [`3f42cca`](https://github.com/pmd/pmd/commit/3f42cca200334b6c4d762573b7c99e0a18b41b3c) [maven-release-plugin] prepare release pmd_releases/6.18.0 - [`be90279`](https://github.com/pmd/pmd/commit/be90279d83bc6b38222ef88eeb281fe70e303d9b) Prepare pmd release 6.18.0 - [`4672ccf`](https://github.com/pmd/pmd/commit/4672ccf2e3916f615063995b0c09e026a89ef5de) Update generated rule documentation - [`8f3abf9`](https://github.com/pmd/pmd/commit/8f3abf93497d31d36874d1401bbe4ae054663c3a) Merge branch 'pr-2015' - [`6d8f7c1`](https://github.com/pmd/pmd/commit/6d8f7c12df77bc707e4c815dace3d3d9f34f9165) Update release notes, refs [#2015](https://github-redirect.dependabot.com/pmd/pmd/issues/2015), #fixes [#1227](https://github-redirect.dependabot.com/pmd/pmd/issues/1227) - [`eeb147e`](https://github.com/pmd/pmd/commit/eeb147e59485a2dc9fa35c87e45157f7c519b56b) formatting - [`73006a4`](https://github.com/pmd/pmd/commit/73006a420eb72af5aae43b23901be881318a9b96) Update doc for unused formal parameter - [`e0b0e63`](https://github.com/pmd/pmd/commit/e0b0e6330de0616b9452ff6d3f115f3c7fba9f7d) [core] XPath 1.0: filter out list attributes - [`9eaffbd`](https://github.com/pmd/pmd/commit/9eaffbd3e6123b5cae78a3ec8d6be9a5f421dc6a) Update generated rule documentation - [`8821434`](https://github.com/pmd/pmd/commit/882143460462d1954bfd6bd57b20f8f24dcaf192) Merge branch 'pr-1943' - Additional commits viewable in [compare view](https://github.com/pmd/pmd/compare/pmd_releases/6.17.0...pmd_releases/6.18.0)    Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---  **Note:** This repo was added to Dependabot recently, so you'll receive a maximum of 5 PRs for your first few update runs. Once an update run creates fewer than 5 PRs we'll remove that limit.  You can always request more updates by clicking `Bump now` in your [Dependabot dashboard](https://app.dependabot.com).   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language - `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language - `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language - `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in your Dependabot [dashboard](https://app.dependabot.com): - Update frequency (including time of day and day of week) - Pull request limits (per update run and/or open at any time) - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2019-10-21T21:01:38Z","2019-10-23T07:07:54Z"
"","7944","dependency: bump junit.version from 5.6.0 to 5.6.1","Bumps `junit.version` from 5.6.0 to 5.6.1. Updates `junit-jupiter-api` from 5.6.0 to 5.6.1  Release notes Sourced from junit-jupiter-api's releases.  JUnit 5.6.1 = Platform 1.6.1 + Jupiter 5.6.1 + Vintage 5.6.1 See Release Notes.    Commits  0214614 Release 5.6.1 10ff918 Preserve original resource order f0f2fd5 Polish release notes for 5.6.1 9b12896 Finalize release notes for 5.6.1 60c94f2 Require junit-bom to be published for tooling tests 8bb577a Append SNAPSHOT classifier to version 828cdb3 Prune duplicate elements in resources edcbd81 Don't cache URL connection when loading junit-platform.properties contents 0dcbc71 Update Javadoc for TestInstancePreDestroyCallback regarding scope e5985c0 Invoke TestInstancePreDestroyCallbacks in reverse registration order Additional commits viewable in compare view     Updates `junit-jupiter-engine` from 5.6.0 to 5.6.1  Release notes Sourced from junit-jupiter-engine's releases.  JUnit 5.6.1 = Platform 1.6.1 + Jupiter 5.6.1 + Vintage 5.6.1 See Release Notes.    Commits  0214614 Release 5.6.1 10ff918 Preserve original resource order f0f2fd5 Polish release notes for 5.6.1 9b12896 Finalize release notes for 5.6.1 60c94f2 Require junit-bom to be published for tooling tests 8bb577a Append SNAPSHOT classifier to version 828cdb3 Prune duplicate elements in resources edcbd81 Don't cache URL connection when loading junit-platform.properties contents 0dcbc71 Update Javadoc for TestInstancePreDestroyCallback regarding scope e5985c0 Invoke TestInstancePreDestroyCallbacks in reverse registration order Additional commits viewable in compare view     Updates `junit-vintage-engine` from 5.6.0 to 5.6.1  Release notes Sourced from junit-vintage-engine's releases.  JUnit 5.6.1 = Platform 1.6.1 + Jupiter 5.6.1 + Vintage 5.6.1 See Release Notes.    Commits  0214614 Release 5.6.1 10ff918 Preserve original resource order f0f2fd5 Polish release notes for 5.6.1 9b12896 Finalize release notes for 5.6.1 60c94f2 Require junit-bom to be published for tooling tests 8bb577a Append SNAPSHOT classifier to version 828cdb3 Prune duplicate elements in resources edcbd81 Don't cache URL connection when loading junit-platform.properties contents 0dcbc71 Update Javadoc for TestInstancePreDestroyCallback regarding scope e5985c0 Invoke TestInstancePreDestroyCallbacks in reverse registration order Additional commits viewable in compare view      Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in the `.dependabot/config.yml` file in this repo: - Update frequency - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2020-03-23T07:09:45Z","2020-03-23T22:25:52Z"
"","7499","dependency: bump junit.version from 5.5.2 to 5.6.0","Bumps `junit.version` from 5.5.2 to 5.6.0. Updates `junit-jupiter-api` from 5.5.2 to 5.6.0  Release notes Sourced from junit-jupiter-api's releases.  JUnit 5.6.0 = Platform 1.6.0 + Jupiter 5.6.0 + Vintage 5.6.0 See Release Notes. JUnit 5.6.0-RC1 = Platform 1.6.0-RC1 + Jupiter 5.6.0-RC1 + Vintage 5.6.0-RC1 See Release Notes. JUnit 5.6.0-M1 = Platform 1.6.0-M1 + Jupiter 5.6.0-M1 + Vintage 5.6.0-M1 See Release Notes.    Commits  fdd2ef3 Release 5.6 ffa104e Add assertIterableEquals overflow fix df10b04 Simplify code 51491b9 Add test for interlocked recursive structures 09fa8e3 Use Objects.equals() 530bb44 Fix stack overflow error in assertIterableEquals 12ee207 Add modular Javadoc to 5.6.0 release notes bce7c73 Merge 5.6 GA release notes 2ae687d Use relative link to user guide of matching version 3495806 Track module descriptors as inputs Additional commits viewable in compare view     Updates `junit-jupiter-engine` from 5.5.2 to 5.6.0  Release notes Sourced from junit-jupiter-engine's releases.  JUnit 5.6.0 = Platform 1.6.0 + Jupiter 5.6.0 + Vintage 5.6.0 See Release Notes. JUnit 5.6.0-RC1 = Platform 1.6.0-RC1 + Jupiter 5.6.0-RC1 + Vintage 5.6.0-RC1 See Release Notes. JUnit 5.6.0-M1 = Platform 1.6.0-M1 + Jupiter 5.6.0-M1 + Vintage 5.6.0-M1 See Release Notes.    Commits  fdd2ef3 Release 5.6 ffa104e Add assertIterableEquals overflow fix df10b04 Simplify code 51491b9 Add test for interlocked recursive structures 09fa8e3 Use Objects.equals() 530bb44 Fix stack overflow error in assertIterableEquals 12ee207 Add modular Javadoc to 5.6.0 release notes bce7c73 Merge 5.6 GA release notes 2ae687d Use relative link to user guide of matching version 3495806 Track module descriptors as inputs Additional commits viewable in compare view     Updates `junit-vintage-engine` from 5.5.2 to 5.6.0  Release notes Sourced from junit-vintage-engine's releases.  JUnit 5.6.0 = Platform 1.6.0 + Jupiter 5.6.0 + Vintage 5.6.0 See Release Notes. JUnit 5.6.0-RC1 = Platform 1.6.0-RC1 + Jupiter 5.6.0-RC1 + Vintage 5.6.0-RC1 See Release Notes. JUnit 5.6.0-M1 = Platform 1.6.0-M1 + Jupiter 5.6.0-M1 + Vintage 5.6.0-M1 See Release Notes.    Commits  fdd2ef3 Release 5.6 ffa104e Add assertIterableEquals overflow fix df10b04 Simplify code 51491b9 Add test for interlocked recursive structures 09fa8e3 Use Objects.equals() 530bb44 Fix stack overflow error in assertIterableEquals 12ee207 Add modular Javadoc to 5.6.0 release notes bce7c73 Merge 5.6 GA release notes 2ae687d Use relative link to user guide of matching version 3495806 Track module descriptors as inputs Additional commits viewable in compare view      Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in the `.dependabot/config.yml` file in this repo: - Update frequency - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2020-01-21T06:46:59Z","2020-01-21T12:20:01Z"
"","7497","dependency: bump antlr4.version from 4.7.2 to 4.8-1","Bumps `antlr4.version` from 4.7.2 to 4.8-1. Updates `antlr4-runtime` from 4.7.2 to 4.8-1  Commits  See full diff in compare view     Updates `antlr4-maven-plugin` from 4.7.2 to 4.8-1  Commits  See full diff in compare view      Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in the `.dependabot/config.yml` file in this repo: - Update frequency - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2020-01-20T06:58:10Z","2020-01-20T13:06:55Z"
"","7474","dependency: bump truth from 1.0 to 1.0.1","Bumps [truth](https://github.com/google/truth) from 1.0 to 1.0.1.  Release notes Sourced from truth's releases.  1.0.1  Changed failure messages to identify trailing whitespace in failed string comparisons. (7a58a45b) Moved gwt-user to test scope. (51bbbf42) Fixed handling of proto maps with keys equal to the key type's default value. (8ebfe2ab) Worked around what seems to be a classloading bug in old versions of some vendors' Android runtimes. (02c5e79925d455331377f3e6640cc450aecf6774)     Commits  See full diff in compare view      [![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=com.google.truth:truth&package-manager=maven&previous-version=1.0&new-version=1.0.1)](https://dependabot.com/compatibility-score.html?dependency-name=com.google.truth:truth&package-manager=maven&previous-version=1.0&new-version=1.0.1)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in the `.dependabot/config.yml` file in this repo: - Update frequency - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2020-01-15T06:54:31Z","2020-01-15T11:40:52Z"
"","7860","dependency: bump spotbugs-maven-plugin from 3.1.12.2 to 4.0.0","Bumps [spotbugs-maven-plugin](https://github.com/spotbugs/spotbugs-maven-plugin) from 3.1.12.2 to 4.0.0.  Commits  3ec226c [maven-release-plugin] prepare release spotbugs-maven-plugin-4.0.0 fbb6e35 Merge pull request #191 from hazendaz/spotbugs e0d8383 [cleanup] More formatting / html 5 8700eea Merge pull request #190 from hazendaz/spotbugs 487afd6 [html] Cleanup html5 issues f6666dd [ci] Formatting bc78edc [ci] Add note on releasing 4.0 932024b [secure] More https instead of http and correct some redirects / bad pages 5d2032c [secure] Use https license everywhere instead of http a79d15d [html] Update deprecated <a> link 'name' to 'id' Additional commits viewable in compare view      [![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=com.github.spotbugs:spotbugs-maven-plugin&package-manager=maven&previous-version=3.1.12.2&new-version=4.0.0)](https://dependabot.com/compatibility-score/?dependency-name=com.github.spotbugs:spotbugs-maven-plugin&package-manager=maven&previous-version=3.1.12.2&new-version=4.0.0)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in the `.dependabot/config.yml` file in this repo: - Update frequency - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2020-03-16T06:57:45Z","2020-03-16T14:51:36Z"
"","7385","dependency: bump slf4j-simple from 1.7.29 to 1.7.30","Bumps [slf4j-simple](https://github.com/qos-ch/slf4j) from 1.7.29 to 1.7.30.  Commits  - [`0b97c41`](https://github.com/qos-ch/slf4j/commit/0b97c416e42a184ff9728877b461c616187c58f7) move to 1.7.30 - [`c6c7a98`](https://github.com/qos-ch/slf4j/commit/c6c7a98a7ee1e71382348ae3e41ff7818dfafd65) fix SLF4J-469 - See full diff in [compare view](https://github.com/qos-ch/slf4j/compare/v_1.7.29...v_1.7.30)    [![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=org.slf4j:slf4j-simple&package-manager=maven&previous-version=1.7.29&new-version=1.7.30)](https://dependabot.com/compatibility-score.html?dependency-name=org.slf4j:slf4j-simple&package-manager=maven&previous-version=1.7.29&new-version=1.7.30)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in the `.dependabot/config.yml` file in this repo: - Update frequency - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2019-12-17T06:44:36Z","2019-12-17T17:54:16Z"
"","7242","Bump slf4j-simple from 1.7.28 to 1.7.29","Bumps [slf4j-simple](https://github.com/qos-ch/slf4j) from 1.7.28 to 1.7.29.  Commits  - See full diff in [compare view](https://github.com/qos-ch/slf4j/commits)    [![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=org.slf4j:slf4j-simple&package-manager=maven&previous-version=1.7.28&new-version=1.7.29)](https://dependabot.com/compatibility-score.html?dependency-name=org.slf4j:slf4j-simple&package-manager=maven&previous-version=1.7.28&new-version=1.7.29)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language - `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language - `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language - `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in your Dependabot [dashboard](https://app.dependabot.com): - Update frequency (including time of day and day of week) - Pull request limits (per update run and/or open at any time) - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2019-11-04T13:25:36Z","2019-11-05T02:33:38Z"
"","7560","dependency: bump pitest-maven from 1.4.9 to 1.5.0","Bumps [pitest-maven](https://github.com/hcoles/pitest) from 1.4.9 to 1.5.0.  Release notes Sourced from pitest-maven's releases.  1.5.0  #556 - Do not mutate enum constructors #726 - Ensure static initializer coverage is recorded #734/#735/#736 - Replace legacy interfaces with Java API (thanks @AlexElin)  Existing history files should be deleted when upgrading to this build. 1.4.11 #683 - Filter try-with-resources before filtering inlined code (thanks @Vampire) #686 - Do not print the class name twice for unsplittable test units (thanks @Vampire) #672 - Do not include the current directory to the minion class path (thanks @Vampire) #692 - Add property='skipPitest' to skip attribute inn maven plugin (thanks @cjgwhite) #697 - TestNG 7.0.0 compatibility (thanks @kris-scheibe) #666 - UOI4 reports mutated field name (thanks @LaurentTho3) #716 - Bump asm to 7.3.1 #710 - Use the new mutator set by default Note, that #710 introduces a behaviour change to pitest, changing the mutators that are used by default. 1.4.10 #534 Smaller blocks for more precise test targeting (thanks @jon-bell) #664 Fix A0D2 map key (thanks @Vampire) #656 Escape characters in init methods for html report (thanks @Vampire) #404 Filter junk mutations to compiler generated Objects.requireNonNull calls When upgrading all history files should be deleted or incorrect results may be generated.    Commits  2a2e877 [maven-release-plugin] prepare release 1.5.0 8acb304 Merge pull request #736 from AlexElin/replace_join fba0165 remove unused import 18e587b replace StringUtil.join with java.lang.String.join a33da63 Merge pull request #735 from AlexElin/replace_isEqualTo 70c70b3 replace Prelude.java.isEqualTo with java.util.function.Producer.isEqual. be8342e Merge pull request #734 from AlexElin/replace_SideEffect1 30526af replace SideEffect1 with java.util.function.Consumer. 5e6eedc Merge pull request #733 from AlexElin/replace_Preconditions 8402956 replace Preconditions.checkNotNull with Objects.requireNonNull from Java Stan... Additional commits viewable in compare view      [![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=org.pitest:pitest-maven&package-manager=maven&previous-version=1.4.9&new-version=1.5.0)](https://dependabot.com/compatibility-score/?dependency-name=org.pitest:pitest-maven&package-manager=maven&previous-version=1.4.9&new-version=1.5.0)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in the `.dependabot/config.yml` file in this repo: - Update frequency - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2020-02-20T06:47:34Z","2020-02-20T13:49:31Z"
"","7218","Bump pitest-maven from 1.4.9 to 1.4.10","Bumps [pitest-maven](https://github.com/hcoles/pitest) from 1.4.9 to 1.4.10.  Release notes  *Sourced from [pitest-maven's releases](https://github.com/hcoles/pitest/releases).*  > ## 1.4.10 > [#534](https://github-redirect.dependabot.com/hcoles/pitest/issues/534) Smaller blocks for more precise test targeting (thanks [@​jon-bell](https://github.com/jon-bell))  > [#664](https://github-redirect.dependabot.com/hcoles/pitest/issues/664) Fix A0D2 map key (thanks [@​Vampire](https://github.com/Vampire))  > [#656](https://github-redirect.dependabot.com/hcoles/pitest/issues/656) Escape characters in init methods for html report (thanks [@​Vampire](https://github.com/Vampire))  > [#404](https://github-redirect.dependabot.com/hcoles/pitest/issues/404) Filter junk mutations to compiler generated Objects.requireNonNull calls >  > When upgrading all history files should be deleted or incorrect results may be generated.   Commits  - [`7b85de2`](https://github.com/hcoles/pitest/commit/7b85de21ad82b18b7f0c1b4affc439fa902a5ace) [maven-release-plugin] prepare release pitest-parent-1.4.10 - [`720fa05`](https://github.com/hcoles/pitest/commit/720fa05572d34665b86d6321177017d0c9da4431) Merge pull request [#664](https://github-redirect.dependabot.com/hcoles/pitest/issues/664) from Vampire/fix-aod-map-keys - [`15dd050`](https://github.com/hcoles/pitest/commit/15dd050b36ffbdf14920bb85120e0b53ed0feea9) Merge pull request [#645](https://github-redirect.dependabot.com/hcoles/pitest/issues/645) from Vampire/remove-dangling-javadoc-comments - [`28e130e`](https://github.com/hcoles/pitest/commit/28e130e534096ec268315d96f402616e53c6beb3) Fix Mutator map key for AOD2 - [`a875f45`](https://github.com/hcoles/pitest/commit/a875f4546ead23904fad39e7740e1ee0c61df3a0) Replace dangling JavaDoc comments by block comments - [`1686e0d`](https://github.com/hcoles/pitest/commit/1686e0d8ff74a2d92d81cce6072ffe06a34f53fc) Remove empty dangling JavaDoc comments - [`c7e36f4`](https://github.com/hcoles/pitest/commit/c7e36f44e694051db0657132ec6b0ffe1de26735) [#648](https://github-redirect.dependabot.com/hcoles/pitest/issues/648) order feature descriptions by name - [`9efe91f`](https://github.com/hcoles/pitest/commit/9efe91f130bd392a8bd1836ab7565b55a415bae5) Merge pull request [#656](https://github-redirect.dependabot.com/hcoles/pitest/issues/656) from Vampire/fix-invalid-html - [`fd3de31`](https://github.com/hcoles/pitest/commit/fd3de31dec0ef5df631c69bd05d83eb68d7f42da) Filter junk mutations in compiler generated calls to Objects.requireNonNull f... - [`ce14688`](https://github.com/hcoles/pitest/commit/ce14688439369734c859eec8c2a76ac648b9fe83) Merge pull request [#646](https://github-redirect.dependabot.com/hcoles/pitest/issues/646) from Vampire/decribe-to-describe - Additional commits viewable in [compare view](https://github.com/hcoles/pitest/compare/pitest-parent-1.4.9...pitest-parent-1.4.10)    [![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=org.pitest:pitest-maven&package-manager=maven&previous-version=1.4.9&new-version=1.4.10)](https://dependabot.com/compatibility-score.html?dependency-name=org.pitest:pitest-maven&package-manager=maven&previous-version=1.4.9&new-version=1.4.10)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---  **Note:** This repo was added to Dependabot recently, so you'll receive a maximum of 5 PRs for your first few update runs. Once an update run creates fewer than 5 PRs we'll remove that limit.  You can always request more updates by clicking `Bump now` in your [Dependabot dashboard](https://app.dependabot.com).   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language - `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language - `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language - `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in your Dependabot [dashboard](https://app.dependabot.com): - Update frequency (including time of day and day of week) - Pull request limits (per update run and/or open at any time) - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2019-10-21T21:02:50Z","2019-10-23T06:43:22Z"
"","7524","dependency: bump pitest-junit5-plugin from 0.10 to 0.12","Bumps [pitest-junit5-plugin](https://github.com/pitest/pitest-junit5-plugin) from 0.10 to 0.12.  Commits  fa849a6 [maven-release-plugin] prepare release pitest-junit5-plugin-0.12 e7810b6 Adds missing dependencies for release plugin f2bf1c1 Merge pull request #33 from khmarbaise/issue-31 0fd0dbf Updated maven plugins a640db1 Updated jacoco to version 0.8.5 6127812 Updated maven-scm-provider-gitexe to version 1.11.2 cd75652 Updated junit jupiter to version 5.6.0 c3208ad Updated assertj to version 3.14.0 29d11a9 Updated pitest to version 1.4.11 7899f07 Updated cucumber to version 5.0.0 Additional commits viewable in compare view      [![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=org.pitest:pitest-junit5-plugin&package-manager=maven&previous-version=0.10&new-version=0.12)](https://dependabot.com/compatibility-score.html?dependency-name=org.pitest:pitest-junit5-plugin&package-manager=maven&previous-version=0.10&new-version=0.12)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in the `.dependabot/config.yml` file in this repo: - Update frequency - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2020-01-31T06:52:05Z","2020-01-31T18:32:51Z"
"","7393","dependency: bump pitest-junit5-plugin from 0.10 to 0.11","Bumps [pitest-junit5-plugin](https://github.com/pitest/pitest-junit5-plugin) from 0.10 to 0.11.  Commits  b7d4752 [maven-release-plugin] prepare release pitest-junit5-plugin-0.11 00ced69 Merge pull request #43 from nicerloop/non-method-based 9c11a2f Add cucumber test 142154b Support non method based tests 47e529e Revert ""Support non method based tests, for example with cucumber"" 29a33af Support non method based tests, for example with cucumber 6291d11 Merge pull request #42 from mitchellirvin/patch-1 a4e03dd Correcting Gradle Quickstart in Readme 0dc556c [maven-release-plugin] prepare for next development iteration See full diff in compare view      [![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=org.pitest:pitest-junit5-plugin&package-manager=maven&previous-version=0.10&new-version=0.11)](https://dependabot.com/compatibility-score.html?dependency-name=org.pitest:pitest-junit5-plugin&package-manager=maven&previous-version=0.10&new-version=0.11)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in the `.dependabot/config.yml` file in this repo: - Update frequency - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2019-12-23T06:53:30Z","2019-12-24T17:21:37Z"
"","7545","dependency: bump picocli from 4.1.4 to 4.2.0","Bumps [picocli](https://github.com/remkop/picocli) from 4.1.4 to 4.2.0.  Release notes Sourced from picocli's releases.  Picocli 4.2.0  Picocli 4.2.0 The picocli community is pleased to announce picocli 4.2.0. This release adds support for Repeatable Subcommands: when a command is marked as @Command(subcommandsRepeatable = true) it becomes possible to specify that command's subcommands multiple times on the command line. The picocli-codegen module can now generate AsciiDoc documentation for picocli-based applications. AsciiDoc is a lightweight markup language that can easily can be converted to unix man pages, HTML and PDF with the wonderful asciidoctor tool. From this release, subcommands are not instantiated until they are matched on the command line. This should improve the startup time for applications with subcommands that do a lot of initialization when they are instantiated. Autocompletion improvements: from this release the generated bash completions scripts support completing positional parameters, and are implemented without the use of associative arrays (so they should work on MacOS or other systems that use older versions of bash). Additionally there are now automated tests using Expect to verify that the generated completion scripts work as expected. GraalVM configuration generation improvement: added --factory option to ReflectionConfigGenerator, ResourceConfigGenerator and DynamicProxyConfigGenerator. This makes it possible to generate configurations for command classes without a default no-arg constructor. From this release it is possible to inject the CommandSpec into a IVersionProvider, making it easier to write version provider implementations that are reusable across multiple commands or even applications. Similarly, from this release it is possible to inject the parent command object into mixins via a @ParentCommand-annotated field. This release adds programmatic API to allow the long options column to grow larger than 20 characters in the usage help message via the CommandLine::setLongOptionsMaxWidth and UsageMessageSpec::longOptionsMaxWidth methods. Finally, it is now possible let the usage help show that @-files are supported by listing a @<filename> entry above the list of positional parameters in the usage help. This is the sixty-seventh public release. Picocli follows semantic versioning.  Table of Contents  New and noteworthy  Generate AsciiDoc Documentation for Your Application Repeatable Subcommands Inject CommandSpec into a IVersionProvider Subcommands are now lazily instantiated Mixins with @ParentCommand-annotated fields Showing @filename in usage help Configurable long options column width   Fixed issues Deprecations Potential breaking changes   New and Noteworthy  Generate AsciiDoc Documentation for Your Application (convertable to unix man pages, HTML and PDF) This release adds a new class picocli.codegen.docgen.manpage.ManPageGenerator to the picocli-codegen module that generates AsciiDoc documentation for picocli-based applications using the manpage doctype and manpage document structure. The generated AsciiDoc files can be converted to HTML, PDF and unix man pages with the asciidoctor tool. The picocli-codegen README has more details.  Repeatable Subcommands From picocli 4.2, it is possible to specify that a command's subcommands can be specified multiple times by marking it with @Command(subcommandsRepeatable = true).  ... (truncated)    Changelog Sourced from picocli's changelog.   Picocli 4.2.0 The picocli community is pleased to announce picocli 4.2.0. This release adds support for Repeatable Subcommands: when a command is marked as @Command(subcommandsRepeatable = true) it becomes possible to specify that command's subcommands multiple times on the command line. The picocli-codegen module can now generate AsciiDoc documentation for picocli-based applications. AsciiDoc is a lightweight markup language that can easily can be converted to unix man pages, HTML and PDF with the wonderful asciidoctor tool. From this release, subcommands are not instantiated until they are matched on the command line. This should improve the startup time for applications with subcommands that do a lot of initialization when they are instantiated. Autocompletion improvements: from this release the generated bash completions scripts support completing positional parameters, and are implemented without the use of associative arrays (so they should work on MacOS or other systems that use older versions of bash). Additionally there are now automated tests using Expect to verify that the generated completion scripts work as expected. GraalVM configuration generation improvement: added --factory option to ReflectionConfigGenerator, ResourceConfigGenerator and DynamicProxyConfigGenerator. This makes it possible to generate configurations for command classes without a default no-arg constructor. From this release it is possible to inject the CommandSpec into a IVersionProvider, making it easier to write version provider implementations that are reusable across multiple commands or even applications. Similarly, from this release it is possible to inject the parent command object into mixins via a @ParentCommand-annotated field. This release adds programmatic API to allow the long options column to grow larger than 20 characters in the usage help message via the CommandLine::setLongOptionsMaxWidth and UsageMessageSpec::longOptionsMaxWidth methods. Finally, it is now possible let the usage help show that @-files are supported by listing a @<filename> entry above the list of positional parameters in the usage help. This is the sixty-seventh public release. Picocli follows semantic versioning.  Table of Contents  New and noteworthy  Generate AsciiDoc Documentation for Your Application Repeatable Subcommands Inject CommandSpec into a IVersionProvider Subcommands are now lazily instantiated Mixins with @ParentCommand-annotated fields Showing @filename in usage help Configurable long options column width   Fixed issues Deprecations Potential breaking changes   New and Noteworthy  Generate AsciiDoc Documentation for Your Application (convertable to unix man pages, HTML and PDF) This release adds a new class picocli.codegen.docgen.manpage.ManPageGenerator to the picocli-codegen module that generates AsciiDoc documentation for picocli-based applications using the manpage doctype and manpage document structure. The generated AsciiDoc files can be converted to HTML, PDF and unix man pages with the asciidoctor tool. The picocli-codegen README has more details.  Repeatable Subcommands From picocli 4.2, it is possible to specify that a command's subcommands can be specified multiple times by marking it with @Command(subcommandsRepeatable = true).  ... (truncated)    Commits  13b637f Release picocli version 4.2.0 da100a3 #299#459 change internal output dir for generated man pages 1ec5fb7 #299#459 gen-manpage improvements: add Exit Codes section to usage help; ... 9038b71 #299#459 gen-manpage improvements: add Exit Codes section to usage help; ... b4b844f Update README.adoc 40bb7e9 #299#459 update examples and picocli-codegen README 3274eb1 #946 Update release notes for Adding --exit option to picocli codegen uti... 270a052 #299#459 use picocli release version in sample ""generate man pages"" Maven... 8359c27 #299#459 use latest asciidoctor-maven-plugin in sample ""generate man page... 7dc92af #946 fixed missing import in added --exit option Additional commits viewable in compare view      [![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=info.picocli:picocli&package-manager=maven&previous-version=4.1.4&new-version=4.2.0)](https://dependabot.com/compatibility-score/?dependency-name=info.picocli:picocli&package-manager=maven&previous-version=4.1.4&new-version=4.2.0)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in the `.dependabot/config.yml` file in this repo: - Update frequency - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2020-02-12T06:44:50Z","2020-02-12T15:20:24Z"
"","7394","dependency: bump picocli from 4.1.2 to 4.1.4","Bumps [picocli](https://github.com/remkop/picocli) from 4.1.2 to 4.1.4.  Release notes Sourced from picocli's releases.  Picocli 4.1.4  Picocli 4.1.4 The picocli community is pleased to announce picocli 4.1.4. This release contains a bugfix for GraalVM users, and minor documentation enhancements. This release fixes a bug in the picocli-codegen annotation processor that generates an incorrect reflect-config.json file with invalid entries for inner classes of commands in the unnamed package, that are unnecessarily prefixed with a dot. This makes the GraalVM native-image generator fail with an error like ""Class .Outer$Inner not found"". This is the sixty-sixth public release. Picocli follows semantic versioning.  Table of Contents  New and noteworthy Fixed issues Deprecations Potential breaking changes   New and Noteworthy  Fixed issues #903 Bugfix: picocli-codegen generates invalid reflect-config.json for classes in unnamed package. #902 DOC: replace deprecated CommandLine.invoke() function. Thanks to Andreas Deininger for the pull request.  Deprecations No features were deprecated in this release.  Potential breaking changes This release has no breaking changes. Picocli 4.1.3  Picocli 4.1.3 The picocli community is pleased to announce picocli 4.1.3. This release contains a bugfix for GraalVM users. This release fixes a bug in the picocli-codegen annotation processor that generates an incorrect reflect-config.json file with duplicate entries for inner classes of a command, one with the standard class name and one with the canonical class name. This makes the GraalVM native-image generator fail with an error like ""Class Outer.Inner not found"". This is the sixty-fifth public release. Picocli follows semantic versioning.  Table of Contents  New and noteworthy Fixed issues Deprecations Potential breaking changes   ... (truncated)    Changelog Sourced from picocli's changelog.   Picocli 4.1.4 The picocli community is pleased to announce picocli 4.1.4. This release contains a bugfix for GraalVM users, and minor documentation enhancements. This release fixes a bug in the picocli-codegen annotation processor that generates an incorrect reflect-config.json file with invalid entries for inner classes of commands in the unnamed package, that are unnecessarily prefixed with a dot. This makes the GraalVM native-image generator fail with an error like ""Class .Outer$Inner not found"". This is the sixty-sixth public release. Picocli follows semantic versioning.  Table of Contents  New and noteworthy Fixed issues Deprecations Potential breaking changes   New and Noteworthy  Fixed issues #903 Bugfix: picocli-codegen generates invalid reflect-config.json for classes in unnamed package. #902 DOC: replace deprecated CommandLine.invoke() function. Thanks to Andreas Deininger for the pull request.  Deprecations No features were deprecated in this release.  Potential breaking changes This release has no breaking changes.  Picocli 4.1.3 The picocli community is pleased to announce picocli 4.1.3. This release contains a bugfix for GraalVM users. This release fixes a bug in the picocli-codegen annotation processor that generates an incorrect reflect-config.json file with duplicate entries for inner classes of a command, one with the standard class name and one with the canonical class name. This makes the GraalVM native-image generator fail with an error like ""Class Outer.Inner not found"". This is the sixty-fifth public release. Picocli follows semantic versioning.  Table of Contents  New and noteworthy Fixed issues Deprecations   ... (truncated)    Commits  06ab3de Release picocli version 4.1.4 1486c9b #902 DOC: update release notes cf03015 #903 picocli-codegen generates invalid reflect-config.json for classes in... 7f05f1a Manual: replace deprecated CommandLine.invoke() function 72bed89 Prepare for next development cycle 1337071 Release picocli version 4.1.3 577baf6 #901 Bugfix: picocli-codegen generated invalid reflect-config.json for in... 98f7a63 DOC update README to add link to Simple Java Mail d8a4042 DOC English missing vcruntime140.dll dialog 721515a DOC Use strikethrough markup for links to older documentation Additional commits viewable in compare view      [![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=info.picocli:picocli&package-manager=maven&previous-version=4.1.2&new-version=4.1.4)](https://dependabot.com/compatibility-score.html?dependency-name=info.picocli:picocli&package-manager=maven&previous-version=4.1.2&new-version=4.1.4)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in the `.dependabot/config.yml` file in this repo: - Update frequency - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2019-12-23T06:54:15Z","2019-12-24T01:03:58Z"
"","7350","build(deps): bump picocli from 4.1.1 to 4.1.2","Bumps [picocli](https://github.com/remkop/picocli) from 4.1.1 to 4.1.2.  Release notes  *Sourced from [picocli's releases](https://github.com/remkop/picocli/releases).*  > ## Picocli 4.1.2 > #  Picocli 4.1.2 > The picocli community is pleased to announce picocli 4.1.2. >  > This release contains bugfixes, improvements, and documentation enhancements.  >  > This version of picocli requires JLine 3.13.2 or higher and adds a `PicocliCommands` class that provides command descriptions that can be displayed in the terminal status bar via the new JLine `TailTipWidgets` functionality. >  > The built-in `picocli.AutoComplete.GenerateCompletion` (`generate-completion`) subcommand now omits validation of mandatory options in the parent command. >  > ""Hidden"" subcommands and options are no longer shown as suggestions in unmatched argument usage help or autocompletion scripts. >  > From picocli 4.1.2, all options in an exclusive group are automatically considered required, even if they are not marked as `required = true` in the annotations. Applications using older versions of picocli should mark all options in exclusive groups as required. >  >  >  >   > This is the sixty-fourth public release. > Picocli follows [semantic versioning](http://semver.org/). >  > ## Thanks to the Community  >  > Special thanks to [mattirn](https://github.com/mattirn) and to [Andreas Deininger](https://github.com/deining) for the pull requests and feedback! >  >  > ##  Table of Contents > * [New and noteworthy]([#4](https://github-redirect.dependabot.com/remkop/picocli/issues/4).1.2-new) > * [Fixed issues]([#4](https://github-redirect.dependabot.com/remkop/picocli/issues/4).1.2-fixes) > * [Deprecations]([#4](https://github-redirect.dependabot.com/remkop/picocli/issues/4).1.2-deprecated) > * [Potential breaking changes]([#4](https://github-redirect.dependabot.com/remkop/picocli/issues/4).1.2-breaking-changes) >  > ##  New and Noteworthy >  > ###  JLine3 > JLine has had some interesting improvements in its 3.12 release.  >  > This version of picocli requires JLine 3.13.2 or higher and adds a `PicocliCommands` class that provides command descriptions that can be displayed in the terminal status bar via the new JLine `TailTipWidgets` functionality. >  > See the `picocli-shell-jline3` [README](https://github.com/remkop/picocli/tree/master/picocli-shell-jline3) for details. >  > ###  Completion > The built-in `picocli.AutoComplete.GenerateCompletion` (`generate-completion`) subcommand now omits validation of mandatory options in the parent command. >  > Also, ""hidden"" subcommands and options are no longer shown as suggestions in unmatched argument usage help or autocompletion scripts. >  >  > ##  Fixed issues > [#888](https://github-redirect.dependabot.com/remkop/picocli/issues/888) (API) Added new `PicocliCommands` class to `picocli-shell-jline3` module; bumped `JLine` to 3.13.2. Thanks to [mattirn](https://github.com/mattirn) for the pull request. > [#884](https://github-redirect.dependabot.com/remkop/picocli/issues/884) (Bugfix) Built-in `picocli.AutoComplete.GenerateCompletion` (`generate-completion`) subcommand now omits validation of mandatory options in the parent command. Thanks to [Andreas Deininger](https://github.com/deining) for raising this. > [#887](https://github-redirect.dependabot.com/remkop/picocli/issues/887) (Bugfix) ""Hidden"" subcommands and options are no longer shown as suggestions in unmatched argument usage help or autocompletion scripts. Thanks to [Andreas Deininger](https://github.com/deining) for raising this. > ... (truncated)   Changelog  *Sourced from [picocli's changelog](https://github.com/remkop/picocli/blob/master/RELEASE-NOTES.md).*  > #  Picocli 4.1.2 > The picocli community is pleased to announce picocli 4.1.2. >  > This release contains bugfixes, improvements, and documentation enhancements.  >  > This version of picocli requires JLine 3.13.2 or higher and adds a `PicocliCommands` class that provides command descriptions that can be displayed in the terminal status bar via the new JLine `TailTipWidgets` functionality. >  > The built-in `picocli.AutoComplete.GenerateCompletion` (`generate-completion`) subcommand now omits validation of mandatory options in the parent command. >  > ""Hidden"" subcommands and options are no longer shown as suggestions in unmatched argument usage help or autocompletion scripts. >  > From picocli 4.1.2, all options in an exclusive group are automatically considered required, even if they are not marked as `required = true` in the annotations. Applications using older versions of picocli should mark all options in exclusive groups as required. >  >  >  >   > This is the sixty-fourth public release. > Picocli follows [semantic versioning](http://semver.org/). >  > ##  Table of Contents > * [New and noteworthy]([#4](https://github-redirect.dependabot.com/remkop/picocli/issues/4).1.2-new) > * [Fixed issues]([#4](https://github-redirect.dependabot.com/remkop/picocli/issues/4).1.2-fixes) > * [Deprecations]([#4](https://github-redirect.dependabot.com/remkop/picocli/issues/4).1.2-deprecated) > * [Potential breaking changes]([#4](https://github-redirect.dependabot.com/remkop/picocli/issues/4).1.2-breaking-changes) >  > ##  New and Noteworthy >  > ###  JLine3 > JLine has had some interesting improvements in its 3.12 release.  >  > This version of picocli requires JLine 3.13.2 or higher and adds a `PicocliCommands` class that provides command descriptions that can be displayed in the terminal status bar via the new JLine `TailTipWidgets` functionality. >  > See the `picocli-shell-jline3` [README](https://github.com/remkop/picocli/tree/master/picocli-shell-jline3) for details. >  > ###  Completion > The built-in `picocli.AutoComplete.GenerateCompletion` (`generate-completion`) subcommand now omits validation of mandatory options in the parent command. >  > Also, ""hidden"" subcommands and options are no longer shown as suggestions in unmatched argument usage help or autocompletion scripts. >  >  > ##  Fixed issues > [#888](https://github-redirect.dependabot.com/remkop/picocli/issues/888) (API) Added new `PicocliCommands` class to `picocli-shell-jline3` module; bumped `JLine` to 3.13.2. Thanks to [mattirn](https://github.com/mattirn) for the pull request. > [#884](https://github-redirect.dependabot.com/remkop/picocli/issues/884) (Bugfix) Built-in `picocli.AutoComplete.GenerateCompletion` (`generate-completion`) subcommand now omits validation of mandatory options in the parent command. Thanks to [Andreas Deininger](https://github.com/deining) for raising this. > [#887](https://github-redirect.dependabot.com/remkop/picocli/issues/887) (Bugfix) ""Hidden"" subcommands and options are no longer shown as suggestions in unmatched argument usage help or autocompletion scripts. Thanks to [Andreas Deininger](https://github.com/deining) for raising this. > [#871](https://github-redirect.dependabot.com/remkop/picocli/issues/871) (Bugfix) All options in an exclusive group are now automatically considered `required`, to prevent unexpected results when mixing required and non-required options in exclusive ArgGroups. Thanks to [W Scott Johnson](https://github.com/wjohnson5) for raising this. > [#883](https://github-redirect.dependabot.com/remkop/picocli/issues/883) (DOC) Update of Quick Guide. Thanks to [Andreas Deininger](https://github.com/deining) for the pull request. > [#889](https://github-redirect.dependabot.com/remkop/picocli/issues/889)[#885](https://github-redirect.dependabot.com/remkop/picocli/issues/885) (DOC) Update of Picocli Programmatic API documentation. Thanks to [Andreas Deininger](https://github.com/deining) for the pull request. > [#891](https://github-redirect.dependabot.com/remkop/picocli/issues/891) (DOC) Fixed broken links in README. Thanks to [Andreas Deininger](https://github.com/deining) for the pull request. > [#892](https://github-redirect.dependabot.com/remkop/picocli/issues/892) (DOC) Minor improvements to example app in `picocli-shell-jline3`. >  > ... (truncated)   Commits  - [`8a92085`](https://github.com/remkop/picocli/commit/8a92085f013e1aab548dc9abb1e8cb12b0d23a8c) Release picocli version 4.1.2 - [`4ead377`](https://github.com/remkop/picocli/commit/4ead3770158efa513cbc5125a752a267041e328b) [#871](https://github-redirect.dependabot.com/remkop/picocli/issues/871) additional tests and DOC change for non-exclusive groups - [`79ec413`](https://github.com/remkop/picocli/commit/79ec413204b6db995f77414d2c4360480a6fdc5e) [#871](https://github-redirect.dependabot.com/remkop/picocli/issues/871) All options in an exclusive group are now automatically considered `re... - [`ccffdd6`](https://github.com/remkop/picocli/commit/ccffdd6e3469bdc5aee478888e9633d2519e4b31) (DOC) update downloads for Nov 2019 - [`77218bf`](https://github.com/remkop/picocli/commit/77218bf39cdbc65d0ff09f822221f0b5fd70583f) (DOC) add downloads for Nov 2019 image - [`a1ac513`](https://github.com/remkop/picocli/commit/a1ac513c2960a906b6b46b311366b8352c120813) [#887](https://github-redirect.dependabot.com/remkop/picocli/issues/887) ""Hidden"" subcommands and options should not be shown as suggestions in... - [`5a55d64`](https://github.com/remkop/picocli/commit/5a55d640b5bfa55f3daf6e3d0555d651984c380e) [#887](https://github-redirect.dependabot.com/remkop/picocli/issues/887) do not suggest hidden options and subcommands in auto-completion scripts - [`e98318e`](https://github.com/remkop/picocli/commit/e98318e45861158207276aac8957b9f3cf1cfca5) [#887](https://github-redirect.dependabot.com/remkop/picocli/issues/887) Added failing tests for hidden options and subcommands still shown as ... - [`f174412`](https://github.com/remkop/picocli/commit/f174412d0b08d6fd32e1e03ffa291a4507234cb5) [#894](https://github-redirect.dependabot.com/remkop/picocli/issues/894) Initial commit for simple test framework for testing JVM and native CL... - [`0a7e8b2`](https://github.com/remkop/picocli/commit/0a7e8b23a206dd7fe287a2ab1716939798c778d1) Minor improvements and corrections to groovy examples - Additional commits viewable in [compare view](https://github.com/remkop/picocli/compare/v4.1.1...v4.1.2)    [![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=info.picocli:picocli&package-manager=maven&previous-version=4.1.1&new-version=4.1.2)](https://dependabot.com/compatibility-score.html?dependency-name=info.picocli:picocli&package-manager=maven&previous-version=4.1.1&new-version=4.1.2)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language - `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language - `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language - `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in your Dependabot [dashboard](https://app.dependabot.com): - Update frequency (including time of day and day of week) - Pull request limits (per update run and/or open at any time) - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2019-12-09T06:48:09Z","2019-12-09T22:55:41Z"
"","7286","Bump picocli from 4.0.4 to 4.1.1","Bumps [picocli](https://github.com/remkop/picocli) from 4.0.4 to 4.1.1.  Release notes  *Sourced from [picocli's releases](https://github.com/remkop/picocli/releases).*  > ## Picocli 4.1.1 > #  Picocli 4.1.1 > The picocli community is pleased to announce picocli 4.1.1. >  > This release contains bugfixes, and documentation enhancements.  >  > The new `picocli.AutoComplete.GenerateCompletion` reusable subcommand did not flush the generated script to the `System.out` stream, making it unusable. This has been fixed. >   > This is the sixty-third public release. > Picocli follows [semantic versioning](http://semver.org/). >  > ##  Table of Contents > * [New and noteworthy]([#4](https://github-redirect.dependabot.com/remkop/picocli/issues/4).1.1-new) > * [Fixed issues]([#4](https://github-redirect.dependabot.com/remkop/picocli/issues/4).1.1-fixes) > * [Deprecations]([#4](https://github-redirect.dependabot.com/remkop/picocli/issues/4).1.1-deprecated) > * [Potential breaking changes]([#4](https://github-redirect.dependabot.com/remkop/picocli/issues/4).1.1-breaking-changes) >  > ##  New and Noteworthy >  >  >  > ##  Fixed issues > [#880](https://github-redirect.dependabot.com/remkop/picocli/issues/880) (Bugfix) Built-in `picocli.AutoComplete.GenerateCompletion` (`generate-completion`) subcommand does not flush, resulting in no output. Thanks to [Andreas Deininger](https://github.com/deining) for raising this. > [#875](https://github-redirect.dependabot.com/remkop/picocli/issues/875) (DOC) Fix broken internal links in RELEASE-NOTES for 4.1. Thanks to [Andreas Deininger](https://github.com/deining) for raising this. > [#881](https://github-redirect.dependabot.com/remkop/picocli/issues/881) (DOC) Update of Quick Guide to the latest `execute` API. Thanks to [Andreas Deininger](https://github.com/deining) for the pull request. > [#874](https://github-redirect.dependabot.com/remkop/picocli/issues/874) (DOC) Fix Javadoc issues. Thanks to [Andreas Deininger](https://github.com/deining) for the pull request. >     >  > ##  Deprecations > No features were deprecated in this release. >  > ##  Potential breaking changes > This release has no breaking changes. >  > ## Picocli 4.1.0 > #  Picocli 4.1.0 > The picocli community is pleased to announce picocli 4.1.0. >  > This release contains bugfixes, and enhancements.  >  > The library now provides functionality that previously required custom code: >  > [PropertiesDefaultProvider]([#4](https://github-redirect.dependabot.com/remkop/picocli/issues/4).1.0-propertiesdefaultprovider) - this release includes a built-in default provider allows end users to maintain their own default values for options and positional parameters, which may override the defaults that are hard-coded in the application. >  > [AutoComplete.GenerateCompletion]([#4](https://github-redirect.dependabot.com/remkop/picocli/issues/4).1.0-completion) - this release includes a built-in `generate-completion` subcommand that end users can use to easily install Bash/ZSH completion for your application. >  > [Help API improvements]([#4](https://github-redirect.dependabot.com/remkop/picocli/issues/4).1.0-helpapi) make it even easier to add custom sections to the usage help message. >  > This release also includes various bug fixes for [ArgGroups]([#4](https://github-redirect.dependabot.com/remkop/picocli/issues/4).1.0-arggroups), which were first introduced in picocli 4.0, and are still maturing. >   > ... (truncated)   Changelog  *Sourced from [picocli's changelog](https://github.com/remkop/picocli/blob/master/RELEASE-NOTES.md).*  > #  Picocli 4.1.1 > The picocli community is pleased to announce picocli 4.1.1. >  > This release contains bugfixes, and documentation enhancements.  >  >  >   > This is the sixty-third public release. > Picocli follows [semantic versioning](http://semver.org/). >  > ##  Table of Contents > * [New and noteworthy]([#4](https://github-redirect.dependabot.com/remkop/picocli/issues/4).1.1-new) > * [Fixed issues]([#4](https://github-redirect.dependabot.com/remkop/picocli/issues/4).1.1-fixes) > * [Deprecations]([#4](https://github-redirect.dependabot.com/remkop/picocli/issues/4).1.1-deprecated) > * [Potential breaking changes]([#4](https://github-redirect.dependabot.com/remkop/picocli/issues/4).1.1-breaking-changes) >  > ##  New and Noteworthy >  >  >  > ##  Fixed issues > [#880](https://github-redirect.dependabot.com/remkop/picocli/issues/880) (Bugfix) Built-in `picocli.AutoComplete.GenerateCompletion` (`generate-completion`) subcommand does not flush, resulting in no output. Thanks to [Andreas Deininger](https://github.com/deining) for raising this. > [#875](https://github-redirect.dependabot.com/remkop/picocli/issues/875) (DOC) Fix broken internal links in RELEASE-NOTES for 4.1. Thanks to [Andreas Deininger](https://github.com/deining) for raising this. > [#881](https://github-redirect.dependabot.com/remkop/picocli/issues/881) (DOC) Update of Quick Guide to the latest `execute` API. Thanks to [Andreas Deininger](https://github.com/deining) for the pull request. > [#874](https://github-redirect.dependabot.com/remkop/picocli/issues/874) (DOC) Fix Javadoc issues. Thanks to [Andreas Deininger](https://github.com/deining) for the pull request. >     >  > ##  Deprecations > No features were deprecated in this release. >  > ##  Potential breaking changes > This release has no breaking changes. >  >  >  > #  Picocli 4.1.0 > The picocli community is pleased to announce picocli 4.1.0. >  > This release contains bugfixes, and enhancements.  >  > The library now provides functionality that previously required custom code: >  > [PropertiesDefaultProvider]([#4](https://github-redirect.dependabot.com/remkop/picocli/issues/4).1.0-propertiesdefaultprovider) - this release includes a built-in default provider allows end users to maintain their own default values for options and positional parameters, which may override the defaults that are hard-coded in the application. >  > [AutoComplete.GenerateCompletion]([#4](https://github-redirect.dependabot.com/remkop/picocli/issues/4).1.0-completion) - this release includes a built-in `generate-completion` subcommand that end users can use to easily install Bash/ZSH completion for your application. >  > [Help API improvements]([#4](https://github-redirect.dependabot.com/remkop/picocli/issues/4).1.0-helpapi) make it even easier to add custom sections to the usage help message. >  > This release also includes various bug fixes for [ArgGroups]([#4](https://github-redirect.dependabot.com/remkop/picocli/issues/4).1.0-arggroups), which were first introduced in picocli 4.0, and are still maturing. >   > ... (truncated)   Commits  - [`f914fdb`](https://github.com/remkop/picocli/commit/f914fdb2e6bb5caef4893dff673ccc68ed4e4685) Release picocli version 4.1.1 - [`83ac724`](https://github.com/remkop/picocli/commit/83ac7248c74606f31c836ee01f3a0c8df12dbe65) [#880](https://github-redirect.dependabot.com/remkop/picocli/issues/880) Fix bug where built-in `picocli.AutoComplete.GenerateCompletion` (`gen... - [`ed942bf`](https://github.com/remkop/picocli/commit/ed942bf355cec569a5c0312429f8259f1605b98f) Quick guide: update to latest execute API introduced with picocli 4.0 - [`b774ffd`](https://github.com/remkop/picocli/commit/b774ffd07b9569799a9e6121490bb14c4c29a035) Bump to latest versions of asciidoctor toolchain - [`853f2c7`](https://github.com/remkop/picocli/commit/853f2c723f5f4a683e835d479f01ae88df0f80cf) [#876](https://github-redirect.dependabot.com/remkop/picocli/issues/876) Added failing test for PropertiesDefaultProvider with static ArgGroup ... - [`21dee20`](https://github.com/remkop/picocli/commit/21dee20d2b88b2fc8ccecc7f49916c5616bc4808) [#875](https://github-redirect.dependabot.com/remkop/picocli/issues/875) Add section for next release to RELEASE-NOTES. - [`03bc0b6`](https://github.com/remkop/picocli/commit/03bc0b6f281c4b06f7e5b4e88bb87072ea07caa7) [#875](https://github-redirect.dependabot.com/remkop/picocli/issues/875) Fix broken internal links in RELEASE-NOTES. - [`5931c2b`](https://github.com/remkop/picocli/commit/5931c2b421abd713c2f367c29350b4d8c7b0a47c) Fixing javadoc errors - [`11ced2b`](https://github.com/remkop/picocli/commit/11ced2b4f12ea8b9e7f77cdf3d566577ab06bb96) * PropertiesDefaultProvider: fix javadoc - [`27cf983`](https://github.com/remkop/picocli/commit/27cf983369c1e1b4c9f226592d5168f67e56696a) Prepare for next development cycle - Additional commits viewable in [compare view](https://github.com/remkop/picocli/compare/v4.0.4...v4.1.1)    [![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=info.picocli:picocli&package-manager=maven&previous-version=4.0.4&new-version=4.1.1)](https://dependabot.com/compatibility-score.html?dependency-name=info.picocli:picocli&package-manager=maven&previous-version=4.0.4&new-version=4.1.1)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language - `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language - `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language - `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in your Dependabot [dashboard](https://app.dependabot.com): - Update frequency (including time of day and day of week) - Pull request limits (per update run and/or open at any time) - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2019-11-27T06:47:23Z","2019-11-28T19:58:30Z"
"","7283","Bump picocli from 4.0.4 to 4.1.0","Bumps [picocli](https://github.com/remkop/picocli) from 4.0.4 to 4.1.0.  Release notes  *Sourced from [picocli's releases](https://github.com/remkop/picocli/releases).*  > ## Picocli 4.1.0 > #  Picocli 4.1.0 > The picocli community is pleased to announce picocli 4.1.0. >  > This release contains bugfixes, and enhancements.  >  > The library now provides functionality that previously required custom code: >  > [PropertiesDefaultProvider]([#4](https://github-redirect.dependabot.com/remkop/picocli/issues/4).1.0-propertiesdefaultprovider) - this release includes a built-in default provider allows end users to maintain their own default values for options and positional parameters, which may override the defaults that are hard-coded in the application. >  > [AutoComplete.GenerateCompletion]([#4](https://github-redirect.dependabot.com/remkop/picocli/issues/4).1.0-completion) - this release includes a built-in `generate-completion` subcommand that end users can use to easily install Bash/ZSH completion for your application. >  > [Help API improvements]([#4](https://github-redirect.dependabot.com/remkop/picocli/issues/4).1.0-helpapi) make it even easier to add custom sections to the usage help message. >  > This release also includes various bug fixes for [ArgGroups]([#4](https://github-redirect.dependabot.com/remkop/picocli/issues/4).1.0-arggroups), which were first introduced in picocli 4.0, and are still maturing. >   > This is the sixty-second public release. > Picocli follows [semantic versioning](http://semver.org/). >  > ##  Table of Contents > * [New and noteworthy]([#4](https://github-redirect.dependabot.com/remkop/picocli/issues/4).1.0-new) > * [Fixed issues]([#4](https://github-redirect.dependabot.com/remkop/picocli/issues/4).1.0-fixes) > * [Deprecations]([#4](https://github-redirect.dependabot.com/remkop/picocli/issues/4).1.0-deprecated) > * [Potential breaking changes]([#4](https://github-redirect.dependabot.com/remkop/picocli/issues/4).1.0-breaking-changes) >  > ##  New and Noteworthy >  >  > ###   PropertiesDefaultProvider > From picocli 4.1, applications can use the built-in `PropertiesDefaultProvider` implementation that loads default values from a properties file. >  > By default, this implementation tries to find a properties file named `.${COMMAND-NAME}.properties` in the user home directory, where `${COMMAND-NAME}` is the name of the command. If a command has aliases in addition to its name, these aliases are also used to try to find the properties file. For example: >  > ```java > import picocli.CommandLine.PropertiesDefaultProvider; > // ... > @Command(name = ""git"", defaultValueProvider = PropertiesDefaultProvider.class) > class Git { } > ``` >  > The above will try to load default values from `new File(System.getProperty(""user.home""), "".git.properties"")`. > The location of the properties file can also be controlled with system property `""picocli.defaults.${COMMAND-NAME}.path""` (`""picocli.defaults.git.path""` in this example), in which case the value of the property must be the path to the file containing the default values. >  > The location of the properties file may also be specified programmatically. For example: >  > ```java > CommandLine cmd = new CommandLine(new MyCommand()); > File defaultsFile = new File(""path/to/config/mycommand.properties""); > cmd.setDefaultValueProvider(new PropertiesDefaultProvider(defaultsFile)); > cmd.execute(args); > ... (truncated)   Changelog  *Sourced from [picocli's changelog](https://github.com/remkop/picocli/blob/master/RELEASE-NOTES.md).*  > #  Picocli 4.1.0 > The picocli community is pleased to announce picocli 4.1.0. >  > This release contains bugfixes, and enhancements.  >  > The library now provides functionality that previously required custom code: >  > [PropertiesDefaultProvider]([#4](https://github-redirect.dependabot.com/remkop/picocli/issues/4).1.0-propertiesdefaultprovider) - this release includes a built-in default provider allows end users to maintain their own default values for options and positional parameters, which may override the defaults that are hard-coded in the application. >  > [AutoComplete.GenerateCompletion]([#4](https://github-redirect.dependabot.com/remkop/picocli/issues/4).1.0-completion) - this release includes a built-in `generate-completion` subcommand that end users can use to easily install Bash/ZSH completion for your application. >  > [Help API improvements]([#4](https://github-redirect.dependabot.com/remkop/picocli/issues/4).1.0-helpapi) make it even easier to add custom sections to the usage help message. >  > This release also includes various bug fixes for [ArgGroups]([#4](https://github-redirect.dependabot.com/remkop/picocli/issues/4).1.0-arggroups), which were first introduced in picocli 4.0, and are still maturing. >   > This is the sixty-second public release. > Picocli follows [semantic versioning](http://semver.org/). >  > ##  Table of Contents > * [New and noteworthy]([#4](https://github-redirect.dependabot.com/remkop/picocli/issues/4).1.0-new) > * [Fixed issues]([#4](https://github-redirect.dependabot.com/remkop/picocli/issues/4).1.0-fixes) > * [Deprecations]([#4](https://github-redirect.dependabot.com/remkop/picocli/issues/4).1.0-deprecated) > * [Potential breaking changes]([#4](https://github-redirect.dependabot.com/remkop/picocli/issues/4).1.0-breaking-changes) >  > ##  New and Noteworthy >  >  > ###   PropertiesDefaultProvider > From picocli 4.1, applications can use the built-in `PropertiesDefaultProvider` implementation that loads default values from a properties file. >  > By default, this implementation tries to find a properties file named `.${COMMAND-NAME}.properties` in the user home directory, where `${COMMAND-NAME}` is the name of the command. If a command has aliases in addition to its name, these aliases are also used to try to find the properties file. For example: >  > ```java > import picocli.CommandLine.PropertiesDefaultProvider; > // ... > [@​Command](https://github.com/Command)(name = ""git"", defaultValueProvider = PropertiesDefaultProvider.class) > class Git { } > ``` >  > The above will try to load default values from `new File(System.getProperty(""user.home""), "".git.properties"")`. > The location of the properties file can also be controlled with system property `""picocli.defaults.${COMMAND-NAME}.path""` (`""picocli.defaults.git.path""` in this example), in which case the value of the property must be the path to the file containing the default values. >  > The location of the properties file may also be specified programmatically. For example: >  > ```java > CommandLine cmd = new CommandLine(new MyCommand()); > File defaultsFile = new File(""path/to/config/mycommand.properties""); > cmd.setDefaultValueProvider(new PropertiesDefaultProvider(defaultsFile)); > cmd.execute(args); > ``` > ... (truncated)   Commits  - [`6389c43`](https://github.com/remkop/picocli/commit/6389c434e55b62401b2d5281c4f5cfed8c3309dd) Release picocli version 4.1.0 - [`a92e794`](https://github.com/remkop/picocli/commit/a92e7943c0f05b2e58ccb93420075f60c2772db5) [#809](https://github-redirect.dependabot.com/remkop/picocli/issues/809) Add documentation for `generate-completion` subcommand; small bugfix t... - [`93a8c91`](https://github.com/remkop/picocli/commit/93a8c91c46b703aea8e06d8358953260723f6ffa) [#809](https://github-redirect.dependabot.com/remkop/picocli/issues/809) Add test for `generate-completion` subcommand - [`78d485d`](https://github.com/remkop/picocli/commit/78d485d3a00a30a46da763730494d564f26629e1) [#809](https://github-redirect.dependabot.com/remkop/picocli/issues/809) Add built-in `generate-completion` subcommand that generates a complet... - [`84bbc41`](https://github.com/remkop/picocli/commit/84bbc419475726dc22bfd0a8efc8b9fe525b8da5) [#772](https://github-redirect.dependabot.com/remkop/picocli/issues/772) Generated completion script should enable bash completion in zsh - [`e65530c`](https://github.com/remkop/picocli/commit/e65530c9399757080a58f01a6cdb9eaff041ad30) [#846](https://github-redirect.dependabot.com/remkop/picocli/issues/846) Allow value `tty` for system property `picocli.ansi` - [`da35ad3`](https://github.com/remkop/picocli/commit/da35ad32d3c9e48c29fca29b9359662eb40731c8) [#865](https://github-redirect.dependabot.com/remkop/picocli/issues/865) Added test for custom tabular help sections - [`38febd5`](https://github.com/remkop/picocli/commit/38febd55568e31f9fbd7997f45065c5db95164cb) [#865](https://github-redirect.dependabot.com/remkop/picocli/issues/865) Add example to RELEASE-NOTES - [`e976299`](https://github.com/remkop/picocli/commit/e976299345df49316e1f141eafa00af4a02cbe84) [#868](https://github-redirect.dependabot.com/remkop/picocli/issues/868) Added documentation for `PropertiesDefaultProvider` - [`d559d8d`](https://github.com/remkop/picocli/commit/d559d8d262494513bc5f0fe6011b4cf3cd7d177a) [#868](https://github-redirect.dependabot.com/remkop/picocli/issues/868) Add built-in default value provider implementation `PropertiesDefaultP... - Additional commits viewable in [compare view](https://github.com/remkop/picocli/compare/v4.0.4...v4.1.0)    [![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=info.picocli:picocli&package-manager=maven&previous-version=4.0.4&new-version=4.1.0)](https://dependabot.com/compatibility-score.html?dependency-name=info.picocli:picocli&package-manager=maven&previous-version=4.0.4&new-version=4.1.0)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language - `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language - `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language - `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in your Dependabot [dashboard](https://app.dependabot.com): - Update frequency (including time of day and day of week) - Pull request limits (per update run and/or open at any time) - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2019-11-25T06:58:17Z","2019-11-27T06:47:39Z"
"","7216","Bump maven-surefire-report-plugin from 2.21.0 to 2.22.2","Bumps [maven-surefire-report-plugin](https://github.com/apache/maven-surefire) from 2.21.0 to 2.22.2.  Commits  - [`d96b95c`](https://github.com/apache/maven-surefire/commit/d96b95c4bda73c4a93506db38b9ca76b4d7b5743) [maven-release-plugin] prepare release surefire-2.22.2 - [`4a2aafc`](https://github.com/apache/maven-surefire/commit/4a2aafc516dd6e1db54548cedd0645ddeccc1dc2) Remove Travis file - [`7b9ec3f`](https://github.com/apache/maven-surefire/commit/7b9ec3fe7805ee6718b8efa41984127e0ceb17b1) Remove JUnit SNAPSHOT argument from IT - [`18b4078`](https://github.com/apache/maven-surefire/commit/18b4078de24a0cd69eb51cad4e793d4e51b26743) [SUREFIRE-1614] JUnit Runner that writes to System.out corrupts Surefire's ST... - [`af417b8`](https://github.com/apache/maven-surefire/commit/af417b88d59624165be6273a641c4848b8d5c09a) prepare for next development iteration - [`c23c8b9`](https://github.com/apache/maven-surefire/commit/c23c8b94d5fe8320051f38420f22083736a4b8a4) [maven-release-plugin] prepare release surefire-2.22.1_vote-1 - [`5376261`](https://github.com/apache/maven-surefire/commit/537626138008c6cfaea15938ca7322741a3cecb8) [SUREFIRE-1564] Can't override platform version through project/plugin depend... - [`242c0e8`](https://github.com/apache/maven-surefire/commit/242c0e8a70be5a2a839ab00062c645f0d7b81137) [SUREFIRE-1564] Can't override platform version through project/plugin depend... - [`25fadfc`](https://github.com/apache/maven-surefire/commit/25fadfca1c9aeaf2fd0a2c209484800dcaea4024) CheckTestNgSuiteXmlIT should not be ignored - [`57fbb16`](https://github.com/apache/maven-surefire/commit/57fbb166ac59c829dedacf9fddbf9f109149b2b2) [SUREFIRE-1532] MIME type for javascript is now officially application/javasc... - Additional commits viewable in [compare view](https://github.com/apache/maven-surefire/compare/surefire-2.21.0...surefire-2.22.2)    [![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=org.apache.maven.plugins:maven-surefire-report-plugin&package-manager=maven&previous-version=2.21.0&new-version=2.22.2)](https://dependabot.com/compatibility-score.html?dependency-name=org.apache.maven.plugins:maven-surefire-report-plugin&package-manager=maven&previous-version=2.21.0&new-version=2.22.2)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---  **Note:** This repo was added to Dependabot recently, so you'll receive a maximum of 5 PRs for your first few update runs. Once an update run creates fewer than 5 PRs we'll remove that limit.  You can always request more updates by clicking `Bump now` in your [Dependabot dashboard](https://app.dependabot.com).   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language - `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language - `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language - `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in your Dependabot [dashboard](https://app.dependabot.com): - Update frequency (including time of day and day of week) - Pull request limits (per update run and/or open at any time) - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2019-10-21T21:02:07Z","2019-10-23T15:14:20Z"
"","7823","dependency: bump maven-site-plugin from 3.8.2 to 3.9.0","Bumps [maven-site-plugin](https://github.com/apache/maven-site-plugin) from 3.8.2 to 3.9.0.  Commits  e802657 [maven-release-plugin] prepare release maven-site-plugin-3.9.0 b2edd6f [MSITE-852] remove Struts dependencies with Doxia Site Renderer to 1.9.2 bd23136 [MSITE-853] upgrade Doxia to 1.9.1 daa2cf2 [MSITE-855] make build Reproducible 58658d8 [MSITE-853] prepare ITs to check DOXIA-597 and DOXIA-571 fixes ae9c132 MSITE-851 avoid IT failure with old JDK 7 caused by plexus-utils upgrade 4034f73 MSITE-851 fixed IT: jar internal timestamp cause variable local ts 27d65b1 remove plugins versions override 89fd158 upgraded Jetty 19be00a MSITE-851 make output jars reproducible like m-source-p Additional commits viewable in compare view      [![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=org.apache.maven.plugins:maven-site-plugin&package-manager=maven&previous-version=3.8.2&new-version=3.9.0)](https://dependabot.com/compatibility-score/?dependency-name=org.apache.maven.plugins:maven-site-plugin&package-manager=maven&previous-version=3.8.2&new-version=3.9.0)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in the `.dependabot/config.yml` file in this repo: - Update frequency - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2020-03-11T06:38:40Z","2020-06-25T06:48:46Z"
"","7547","dependency: bump maven-shade-plugin from 3.2.1 to 3.2.2","Bumps [maven-shade-plugin](https://github.com/apache/maven-shade-plugin) from 3.2.1 to 3.2.2.  Commits  5894a4d [maven-release-plugin] prepare release maven-shade-plugin-3.2.2 354aa79 Merge remote-tracking branch 'remotes/origin/MSHADE-349' 0aa56da [MSHADE-350] Enable ManifestResourceTransformer to rewrite the manifest with ... 799e02a [MSHADE-298] Groovy extension module transformer looking in incorrect META-IN... aba5b7c [MSHADE-319] Group output into included and excluded artifacts to easily iden... 038d807 [MSHADE-223] restructure/refactor test a110bf1 [MSHADE-349] - Upgrade to org.ow2.asm:asm:7.3.1 be330db - Endless processing with promoteTransitiveDependencies 52c476a [MSHADE-346] Introduce mock repository manager for testing 85509b1 [MSHADE-339] use ""test-jar"" type with its default classifier Additional commits viewable in compare view      [![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=org.apache.maven.plugins:maven-shade-plugin&package-manager=maven&previous-version=3.2.1&new-version=3.2.2)](https://dependabot.com/compatibility-score/?dependency-name=org.apache.maven.plugins:maven-shade-plugin&package-manager=maven&previous-version=3.2.1&new-version=3.2.2)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in the `.dependabot/config.yml` file in this repo: - Update frequency - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2020-02-13T06:44:18Z","2020-02-13T16:14:04Z"
"","7219","Bump maven-project-info-reports-plugin from 2.9 to 3.0.0","Bumps [maven-project-info-reports-plugin](https://github.com/apache/maven-project-info-reports-plugin) from 2.9 to 3.0.0.  Commits  - [`d418a6e`](https://github.com/apache/maven-project-info-reports-plugin/commit/d418a6ea55e0626a27824e24c0a206a50b5fc632) [maven-release-plugin] prepare release maven-project-info-reports-plugin-3.0.0 - [`26e65d3`](https://github.com/apache/maven-project-info-reports-plugin/commit/26e65d36437040bed6a7e9a655c3857bec0a8842) [MPIR-368] Upgrade to Java 7 - [`ecdd722`](https://github.com/apache/maven-project-info-reports-plugin/commit/ecdd72249300f64331b89bcd11ad3cdd253cf223) [MPIR-372] Remove fields duplicating parent class members - [`b8e7175`](https://github.com/apache/maven-project-info-reports-plugin/commit/b8e717557e66adec3bc22813794d8295bfb453fc) [MPIR-370] Upgrade transitive BCEL to 6.2 to avoid org.apache.bcel.classfile.... - [`83f6acb`](https://github.com/apache/maven-project-info-reports-plugin/commit/83f6acb3b1e7793451d4cb938490dcd13f7e0227) [MPIR-323] Align Mojo class names, goals and output names - [`ce8eb56`](https://github.com/apache/maven-project-info-reports-plugin/commit/ce8eb56f7c6a88902d0dca5275a7c73e3ee805b4) [MPIR-363] Upgrade dependencies to latest versions - [`6935b3d`](https://github.com/apache/maven-project-info-reports-plugin/commit/6935b3dd70c1c81c46906b1104b862f2db810da8) [INFRA-16467] move components documentation out of CMS space - [`8b5dc3a`](https://github.com/apache/maven-project-info-reports-plugin/commit/8b5dc3a2058499b4dd883f8035b1a76c9d9451a3) [MPIR-362] Dependency Management report doesn't exclude system scoped depende... - [`0967586`](https://github.com/apache/maven-project-info-reports-plugin/commit/096758647f31799572203b50d015b6c882d5f3e7) [MNGSITE-328] use sha1 checksum instead of md5 - [`4387113`](https://github.com/apache/maven-project-info-reports-plugin/commit/43871130bff656b5afbfe3d90a558114df7ac9ed) [MPIR-369] Drop Commons Lang for System builtins - Additional commits viewable in [compare view](https://github.com/apache/maven-project-info-reports-plugin/compare/maven-project-info-reports-plugin-2.9...maven-project-info-reports-plugin-3.0.0)    [![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=org.apache.maven.plugins:maven-project-info-reports-plugin&package-manager=maven&previous-version=2.9&new-version=3.0.0)](https://dependabot.com/compatibility-score.html?dependency-name=org.apache.maven.plugins:maven-project-info-reports-plugin&package-manager=maven&previous-version=2.9&new-version=3.0.0)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---  **Note:** This repo was added to Dependabot recently, so you'll receive a maximum of 5 PRs for your first few update runs. Once an update run creates fewer than 5 PRs we'll remove that limit.  You can always request more updates by clicking `Bump now` in your [Dependabot dashboard](https://app.dependabot.com).   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language - `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language - `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language - `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in your Dependabot [dashboard](https://app.dependabot.com): - Update frequency (including time of day and day of week) - Pull request limits (per update run and/or open at any time) - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2019-10-22T07:04:01Z","2019-10-23T15:15:21Z"
"","7532","dependency: bump maven-pmd-plugin from 3.12.0 to 3.13.0","Bumps [maven-pmd-plugin](https://github.com/apache/maven-pmd-plugin) from 3.12.0 to 3.13.0.  Commits  63feb99 [maven-release-plugin] prepare release maven-pmd-plugin-3.13.0 13bc3fe [MPMD-291] - Upgrade to PMD 6.21.0 5e42898 [MPMD-296] - Copy ruleset files into a subdirectory of target b46470f [MPMD-289] - check: unable to find pmd.xml 11634cc [MPMD-241] - Document the version relationship between plugin and pmd 3bf0e2b [MPMD-225] - Create report even if no warnings have been found by default 10f4eda [MPMD-295] - Maven PMD Plugin fails on Java 13: Unsupported targetJdk value '13' 07e59b2 (doc) Update references to PMD documentation cecaefb Next m-pmd-p version is 3.13.0-SNAPSHOT d642cd9 [MPMD-293] - Fix integration test builds on jenkins Additional commits viewable in compare view      [![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=org.apache.maven.plugins:maven-pmd-plugin&package-manager=maven&previous-version=3.12.0&new-version=3.13.0)](https://dependabot.com/compatibility-score.html?dependency-name=org.apache.maven.plugins:maven-pmd-plugin&package-manager=maven&previous-version=3.12.0&new-version=3.13.0)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in the `.dependabot/config.yml` file in this repo: - Update frequency - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2020-02-04T06:45:55Z","2020-02-05T16:25:45Z"
"","7222","Bump maven-jxr-plugin from 2.5 to 3.0.0","Bumps [maven-jxr-plugin](https://github.com/apache/maven-jxr) from 2.5 to 3.0.0.  Commits  - [`224c62f`](https://github.com/apache/maven-jxr/commit/224c62f3d0098042fb0a9d228434082e249c4c5b) [maven-release-plugin] prepare release jxr-3.0.0 - [`fab5a0e`](https://github.com/apache/maven-jxr/commit/fab5a0e432a1385047b76b1747e4d8d219abe341) [maven-release-plugin] rollback the release of jxr-3.0.0 - [`8193d4b`](https://github.com/apache/maven-jxr/commit/8193d4b51ad4960ffd12ece836c314f92e88cdf6) [maven-release-plugin] prepare release jxr-3.0.0 - [`3b2d15f`](https://github.com/apache/maven-jxr/commit/3b2d15f72933327c02d9c24b68e5162bcbfd494a) Update parent to 33 - [`f521208`](https://github.com/apache/maven-jxr/commit/f521208c01e2a07dd287ca54c0b294627edfb7a5) Revert ""[maven-release-plugin] prepare release jxr-3.0.0"" - [`aaf1f73`](https://github.com/apache/maven-jxr/commit/aaf1f73f78f8d827db07feef285945ec382083ee) [maven-release-plugin] prepare for next development iteration - [`5661707`](https://github.com/apache/maven-jxr/commit/5661707f12afd0308c2ae7789705d4cec357b130) [maven-release-plugin] prepare release jxr-3.0.0 - [`1eb6203`](https://github.com/apache/maven-jxr/commit/1eb62036cc525e395555520aa2fe9e54b36d40bc) Fix Javadoc - [`ef8bb96`](https://github.com/apache/maven-jxr/commit/ef8bb961770801742ed63cfdd4df7c04662a7fa3) [JXR-140] Proper URL handling - [`fb8790d`](https://github.com/apache/maven-jxr/commit/fb8790d53e86c2acd601e41398ae4bb8e38443d4) [JXR-110] Use equivalent css/images of javadoc - Additional commits viewable in [compare view](https://github.com/apache/maven-jxr/compare/jxr-2.5...jxr-3.0.0)    [![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=org.apache.maven.plugins:maven-jxr-plugin&package-manager=maven&previous-version=2.5&new-version=3.0.0)](https://dependabot.com/compatibility-score.html?dependency-name=org.apache.maven.plugins:maven-jxr-plugin&package-manager=maven&previous-version=2.5&new-version=3.0.0)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---  **Note:** This repo was added to Dependabot recently, so you'll receive a maximum of 5 PRs for your first few update runs. Once an update run creates fewer than 5 PRs we'll remove that limit.  You can always request more updates by clicking `Bump now` in your [Dependabot dashboard](https://app.dependabot.com).   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language - `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language - `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language - `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in your Dependabot [dashboard](https://app.dependabot.com): - Update frequency (including time of day and day of week) - Pull request limits (per update run and/or open at any time) - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2019-10-22T07:06:15Z","2019-10-23T15:50:46Z"
"","7862","dependency: bump maven-javadoc-plugin from 3.1.1 to 3.2.0","Bumps [maven-javadoc-plugin](https://github.com/apache/maven-javadoc-plugin) from 3.1.1 to 3.2.0.  Commits  d3b77d6 [maven-release-plugin] prepare release maven-javadoc-plugin-3.2.0 41bc516 back to 3.2.0-SNAPSHOT 819cf1e [maven-release-plugin] prepare for next development iteration 45f4b3e [maven-release-plugin] prepare release maven-javadoc-plugin-3.2.0 d772fce MJAVADOC-610 Add IT test for multirelease jar 37d0ef5 [MJAVADOC-638] upgrade Doxia Sitetools to 1.9.2 to remove dependency on Strut... 528ce30 [MJAVADOC-639] Switch to Oracle OpenJDK 11 compatible jar, see MJAVADOC-610 405b16d [MJAVADOC-639] include requires static from external dependencies for all mod... aaa2007 [MJAVADOC-637] make build Reproducible 7bfa76d [MJAVADOC-636] exclude some modules from aggregated javadoc Additional commits viewable in compare view      [![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=org.apache.maven.plugins:maven-javadoc-plugin&package-manager=maven&previous-version=3.1.1&new-version=3.2.0)](https://dependabot.com/compatibility-score/?dependency-name=org.apache.maven.plugins:maven-javadoc-plugin&package-manager=maven&previous-version=3.1.1&new-version=3.2.0)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in the `.dependabot/config.yml` file in this repo: - Update frequency - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2020-03-16T06:58:46Z","2020-03-16T14:48:23Z"
"","7241","Bump maven-jar-plugin from 3.1.2 to 3.2.0","Bumps [maven-jar-plugin](https://github.com/apache/maven-jar-plugin) from 3.1.2 to 3.2.0.  Commits  - [`d91fff8`](https://github.com/apache/maven-jar-plugin/commit/d91fff882f19b0ba9ba90aceca53447cada824ab) [maven-release-plugin] prepare release maven-jar-plugin-3.2.0 - [`64c5e65`](https://github.com/apache/maven-jar-plugin/commit/64c5e6530b4712cd95501fffb2de6bb1a202cd89) MJAR-263 make output jars reproducible like m-source-p - [`80f58a8`](https://github.com/apache/maven-jar-plugin/commit/80f58a84aacff6e671f5a601d62a3a3800b507dc) [maven-release-plugin] prepare for next development iteration - See full diff in [compare view](https://github.com/apache/maven-jar-plugin/compare/maven-jar-plugin-3.1.2...maven-jar-plugin-3.2.0)    [![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=org.apache.maven.plugins:maven-jar-plugin&package-manager=maven&previous-version=3.1.2&new-version=3.2.0)](https://dependabot.com/compatibility-score.html?dependency-name=org.apache.maven.plugins:maven-jar-plugin&package-manager=maven&previous-version=3.1.2&new-version=3.2.0)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language - `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language - `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language - `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in your Dependabot [dashboard](https://app.dependabot.com): - Update frequency (including time of day and day of week) - Pull request limits (per update run and/or open at any time) - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2019-11-04T13:25:10Z","2019-11-05T02:33:17Z"
"","7284","Bump maven-enforcer-plugin from 3.0.0-M2 to 3.0.0-M3","Bumps [maven-enforcer-plugin](https://github.com/apache/maven-enforcer) from 3.0.0-M2 to 3.0.0-M3.  Commits  - [`edc174b`](https://github.com/apache/maven-enforcer/commit/edc174b9ce8fc45974343d075a75fcb23981bd91) [maven-release-plugin] prepare release enforcer-3.0.0-M3 - [`8e5cbfc`](https://github.com/apache/maven-enforcer/commit/8e5cbfc1772921a96d27e93821548151da2664c6) Revert ""[maven-release-plugin] prepare release enforcer-3.0.0-M3"" - [`b81e6b7`](https://github.com/apache/maven-enforcer/commit/b81e6b7cb79c5f181672f6d8f032fd677511c003) [maven-release-plugin] prepare release enforcer-3.0.0-M3 - [`e3f8f95`](https://github.com/apache/maven-enforcer/commit/e3f8f95444cdd6dfcb53bfbcb14542e4b1435add) Revert ""[maven-release-plugin] prepare release enforcer-3.0.0-M3"" - [`047c939`](https://github.com/apache/maven-enforcer/commit/047c9394cc81feb80c65a87af464a2d77901d769) Revert ""[maven-release-plugin] prepare for next development iteration"" - [`ac3f6e2`](https://github.com/apache/maven-enforcer/commit/ac3f6e28effc6f8b8ea1fca3b9d11c8af3233d80) [maven-release-plugin] prepare for next development iteration - [`793b8e5`](https://github.com/apache/maven-enforcer/commit/793b8e5509214af5cce64132c27135f2b01c49a2) [maven-release-plugin] prepare release enforcer-3.0.0-M3 - [`75d30f5`](https://github.com/apache/maven-enforcer/commit/75d30f55a176eacb4d4336d2c62ecf2b9960bd36) [MENFORCER-345] - Upgrade maven-resolver to 1.4.1 - [`fc825f2`](https://github.com/apache/maven-enforcer/commit/fc825f2f5b26806302f50b22a6752ef9fc310285) [MENFORCER-344] - Upgrade commons-lang3 to 3.8.1 - [`49c6a41`](https://github.com/apache/maven-enforcer/commit/49c6a4191240a888d50706e7598327741279fe35) [MENFORCER-343] - Upgrade maven-commons-artifact-filters to 3.1.0 - Additional commits viewable in [compare view](https://github.com/apache/maven-enforcer/compare/enforcer-3.0.0-M2...enforcer-3.0.0-M3)    [![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=org.apache.maven.plugins:maven-enforcer-plugin&package-manager=maven&previous-version=3.0.0-M2&new-version=3.0.0-M3)](https://dependabot.com/compatibility-score.html?dependency-name=org.apache.maven.plugins:maven-enforcer-plugin&package-manager=maven&previous-version=3.0.0-M2&new-version=3.0.0-M3)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language - `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language - `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language - `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in your Dependabot [dashboard](https://app.dependabot.com): - Update frequency (including time of day and day of week) - Pull request limits (per update run and/or open at any time) - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2019-11-25T06:58:43Z","2019-11-28T19:58:13Z"
"","7835","dependency: bump maven-dependency-plugin from 3.1.1 to 3.1.2","Bumps [maven-dependency-plugin](https://github.com/apache/maven-dependency-plugin) from 3.1.1 to 3.1.2.  Commits  4571c88 [maven-release-plugin] prepare release maven-dependency-plugin-3.1.2 0bc716b Fixed JavaDoc issue. ed46fa5 Revert ""[maven-release-plugin] prepare release maven-dependency-plugin-3.1.2"" 6403b91 Revert ""[maven-release-plugin] prepare for next development iteration"" 0d199ca [maven-release-plugin] prepare for next development iteration e3db8f3 [maven-release-plugin] prepare release maven-dependency-plugin-3.1.2 db1cb20 Merge pull request #32 from apache/update 6e16af8 revert maven-artifact-transfer 2284376 Merge pull request #4 from grimsa/patch-1 d3cf760 update dependencies Additional commits viewable in compare view      [![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=org.apache.maven.plugins:maven-dependency-plugin&package-manager=maven&previous-version=3.1.1&new-version=3.1.2)](https://dependabot.com/compatibility-score/?dependency-name=org.apache.maven.plugins:maven-dependency-plugin&package-manager=maven&previous-version=3.1.1&new-version=3.1.2)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in the `.dependabot/config.yml` file in this repo: - Update frequency - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2020-03-12T06:43:11Z","2020-03-12T14:24:13Z"
"","7551","dependency: bump maven-checkstyle-plugin from 3.1.0 to 3.1.1","Bumps [maven-checkstyle-plugin](https://github.com/apache/maven-checkstyle-plugin) from 3.1.0 to 3.1.1.  Commits  104b560 [maven-release-plugin] prepare release maven-checkstyle-plugin-3.1.1 eb47fac added reproducible build output timestamp property bc0785d [MCHECKSTYLE-391] Update parent to 34 de614e3 [MCHECKSTYLE-389] Partial revert of MCHECKSTYLE-365 severity change back to '... c427a30 [MCHECKSTYLE-390] Upgrade to checkstyle 8.29 e1e2f28 MCHECKSTYLE-384 Bump checkstyle to 8.28 f0b96ab [MCHECKSTYLE-388] Upgrade dependencies eae07f9 [MCHECKSTYLE-381] make call to checker.setClassLoader() optional. 26848dc Merge pull request #12 from srdo/MCHECKSTYLE-371 2485ea7 Merge pull request #20 from elharo/patch-1 Additional commits viewable in compare view      [![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=org.apache.maven.plugins:maven-checkstyle-plugin&package-manager=maven&previous-version=3.1.0&new-version=3.1.1)](https://dependabot.com/compatibility-score/?dependency-name=org.apache.maven.plugins:maven-checkstyle-plugin&package-manager=maven&previous-version=3.1.0&new-version=3.1.1)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in the `.dependabot/config.yml` file in this repo: - Update frequency - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2020-02-17T07:00:55Z","2020-02-22T13:16:28Z"
"","7240","Bump maven-assembly-plugin from 3.1.1 to 3.2.0","Bumps [maven-assembly-plugin](https://github.com/apache/maven-assembly-plugin) from 3.1.1 to 3.2.0.  Commits  - [`8c09ea0`](https://github.com/apache/maven-assembly-plugin/commit/8c09ea04e385857fcc7c76e5b65c624eeb00da24) [maven-release-plugin] prepare release maven-assembly-plugin-3.2.0 - [`d5e0184`](https://github.com/apache/maven-assembly-plugin/commit/d5e01847897324ba5fa2f7bfa9e025ef2f1444ed) MASSEMBLY-921 make archives reproducible, reusing m-source-p PoC - [`283e7c3`](https://github.com/apache/maven-assembly-plugin/commit/283e7c38da69cb28b9c4da26e81e6f7ae0268836) [MASSEMBLY-915] - Remove integration-test-archetype - [`1a36f70`](https://github.com/apache/maven-assembly-plugin/commit/1a36f70abb6e98f94edfa674c19d09503a355e88) [MASSEMBLY-914] - Add GitHub Informations - [`35f5a00`](https://github.com/apache/maven-assembly-plugin/commit/35f5a000e9232bb335f80c09633c6ed1ed14b891) [MASSEMBLY-912] - Upgrade maven-common-artifact-filters 3.1.0 - [`943f668`](https://github.com/apache/maven-assembly-plugin/commit/943f668d4326a2ef174bcf6ce86ec347aff3487d) [MASSEMBLY-911] - Upgrade maven-artifact-transfer 0.11.0 - [`088dff6`](https://github.com/apache/maven-assembly-plugin/commit/088dff66dff1e2641b472a09b363b509701036a3) [MASSEMBLY-913] - Upgrade commons-compress/commons-io for Maven Invoker Plugin - [`f0fa09a`](https://github.com/apache/maven-assembly-plugin/commit/f0fa09a0e7609c7577cebfdf1486613a907984c0) [MASSEMBLY-910] - Upgrade plexus-utils 3.2.0 - [`0cf75e9`](https://github.com/apache/maven-assembly-plugin/commit/0cf75e908b69bb5f19f8895267883558d0da6b09) [MASSEMBLY-909] - Upgrade Maven Archiver 3.4.0 - [`9293ae8`](https://github.com/apache/maven-assembly-plugin/commit/9293ae87f8998f99261c2df516656661916973db) [MASSEMBLY-871] Descriptor ref ""bin"" causes error messages in the build log o... - Additional commits viewable in [compare view](https://github.com/apache/maven-assembly-plugin/compare/maven-assembly-plugin-3.1.1...maven-assembly-plugin-3.2.0)    [![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=org.apache.maven.plugins:maven-assembly-plugin&package-manager=maven&previous-version=3.1.1&new-version=3.2.0)](https://dependabot.com/compatibility-score.html?dependency-name=org.apache.maven.plugins:maven-assembly-plugin&package-manager=maven&previous-version=3.1.1&new-version=3.2.0)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language - `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language - `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language - `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in your Dependabot [dashboard](https://app.dependabot.com): - Update frequency (including time of day and day of week) - Pull request limits (per update run and/or open at any time) - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2019-11-04T13:23:07Z","2019-11-05T02:33:05Z"
"","7998","dependency: bump junit-pioneer from 0.5.4 to 0.5.5","Bumps [junit-pioneer](https://github.com/junit-pioneer/junit-pioneer) from 0.5.4 to 0.5.5.  Release notes Sourced from junit-pioneer's releases.  v0.5.5 Release notes were automatically generated by Shipkit 0.5.5  2020-03-29 - 5 commits by Simon Schrottner (3), Mihály Verhás (1), Nicolai Parlog (1) - published to  Update builds to run with JDK 14 [(#196)](junit-pioneer/junit-pioneer#196) Updating Gradle to 6.3 and building against JDK 14 [(#195)](junit-pioneer/junit-pioneer#195) Github actions [(#185)](junit-pioneer/junit-pioneer#185) AsciiDoc documentation of the @ReportEntry extension [(#183)](junit-pioneer/junit-pioneer#183) Add declarative annotation for test authors to add test metadata for report entries [(#134)](junit-pioneer/junit-pioneer#134)     Changelog Sourced from junit-pioneer's changelog.  0.5.5  2020-03-29 - 5 commits by Simon Schrottner (3), Mihály Verhás (1), Nicolai Parlog (1) - published to  Update builds to run with JDK 14 [(#196)](junit-pioneer/junit-pioneer#196) Updating Gradle to 6.3 and building against JDK 14 [(#195)](junit-pioneer/junit-pioneer#195) Github actions [(#185)](junit-pioneer/junit-pioneer#185) AsciiDoc documentation of the @ReportEntry extension [(#183)](junit-pioneer/junit-pioneer#183) Add declarative annotation for test authors to add test metadata for report entries [(#134)](junit-pioneer/junit-pioneer#134)     Commits  22f2571 0.5.5 release (previous 0.5.4) + release notes updated [ci skip] ccfe193 Update Gradle to 6.3 and build against JDK 14 4f3647f Start moving to Github Actions 46fe56e Add @ReportEntry for declarative TestReporter entries 595298c Update ToC links to JUnit 5 section in CONTRIBUTING.md e0c1c83 Finish reformatting by removing all `//@formatter:off` See full diff in compare view      [![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=org.junit-pioneer:junit-pioneer&package-manager=maven&previous-version=0.5.4&new-version=0.5.5)](https://dependabot.com/compatibility-score/?dependency-name=org.junit-pioneer:junit-pioneer&package-manager=maven&previous-version=0.5.4&new-version=0.5.5)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in the `.dependabot/config.yml` file in this repo: - Update frequency - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2020-03-30T07:09:57Z","2020-03-30T18:49:06Z"
"","7557","dependency: bump junit-pioneer from 0.5.3 to 0.5.4","Bumps [junit-pioneer](https://github.com/junit-pioneer/junit-pioneer) from 0.5.3 to 0.5.4.  Release notes Sourced from junit-pioneer's releases.  v0.5.4 Release notes were automatically generated by Shipkit 0.5.4  2020-02-18 - 1 commit by Nicolai Parlog - published to  Improve Code Formatting [(#169)](junit-pioneer/junit-pioneer#169) Improve Code Formatting [(#130)](junit-pioneer/junit-pioneer#130)     Changelog Sourced from junit-pioneer's changelog.  0.5.4  2020-02-18 - 1 commit by Nicolai Parlog - published to  Improve Code Formatting [(#169)](junit-pioneer/junit-pioneer#169) Improve Code Formatting [(#130)](junit-pioneer/junit-pioneer#130)     Commits  e3e6eb8 0.5.4 release (previous 0.5.3) + release notes updated [ci skip] c8a82b2 Improve Code Formatting/Formatter See full diff in compare view      [![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=org.junit-pioneer:junit-pioneer&package-manager=maven&previous-version=0.5.3&new-version=0.5.4)](https://dependabot.com/compatibility-score/?dependency-name=org.junit-pioneer:junit-pioneer&package-manager=maven&previous-version=0.5.3&new-version=0.5.4)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in the `.dependabot/config.yml` file in this repo: - Update frequency - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2020-02-19T06:45:29Z","2020-02-19T13:29:46Z"
"","7516","dependency: bump junit-pioneer from 0.5.2 to 0.5.3","Bumps [junit-pioneer](https://github.com/junit-pioneer/junit-pioneer) from 0.5.2 to 0.5.3.  Release notes Sourced from junit-pioneer's releases.  v0.5.3 Release notes were automatically generated by Shipkit 0.5.3  2020-01-28 - 3 commits by Nicolai Parlog (2), Matthias (1) - published to  Always use AssertJ assertions [(#168)](junit-pioneer/junit-pioneer#168) Add handled exception as cause to final AssertionError [(#166)](junit-pioneer/junit-pioneer#166) Should we always use AssertJ assertions? [(#165)](junit-pioneer/junit-pioneer#165) Show exception stacktrace on the last failed test iteration  [(#160)](junit-pioneer/junit-pioneer#160)     Changelog Sourced from junit-pioneer's changelog.  0.5.3  2020-01-28 - 3 commits by Nicolai Parlog (2), Matthias (1) - published to  Always use AssertJ assertions [(#168)](junit-pioneer/junit-pioneer#168) Add handled exception as cause to final AssertionError [(#166)](junit-pioneer/junit-pioneer#166) Should we always use AssertJ assertions? [(#165)](junit-pioneer/junit-pioneer#165) Show exception stacktrace on the last failed test iteration  [(#160)](junit-pioneer/junit-pioneer#160)     Commits  bc8c078 0.5.3 release (previous 0.5.2) + release notes updated [ci skip] bb9b7e0 Add last exception to AssertionError of failed @RepeatFailedTest 7731e23 Always use AssertJ assertions 2377b70 Add trailing slashes to doc nav URLs See full diff in compare view      [![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=org.junit-pioneer:junit-pioneer&package-manager=maven&previous-version=0.5.2&new-version=0.5.3)](https://dependabot.com/compatibility-score.html?dependency-name=org.junit-pioneer:junit-pioneer&package-manager=maven&previous-version=0.5.2&new-version=0.5.3)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in the `.dependabot/config.yml` file in this repo: - Update frequency - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2020-01-29T06:46:16Z","2020-01-29T17:31:33Z"
"","7502","dependency: bump junit-pioneer from 0.5.1 to 0.5.2","Bumps [junit-pioneer](https://github.com/junit-pioneer/junit-pioneer) from 0.5.1 to 0.5.2.  Release notes Sourced from junit-pioneer's releases.  v0.5.2 Release notes were automatically generated by Shipkit 0.5.2  2020-01-21 - 2 commits by Daniel Kraus (1), Ignat Simonenko (1) - published to  Fix distinct set collector [(#162)](junit-pioneer/junit-pioneer#162) Fix the issue with default locale extension for nested classes [(#161)](junit-pioneer/junit-pioneer#161) DefaultLocale does not work with @Nested [(#146)](junit-pioneer/junit-pioneer#146)     Changelog Sourced from junit-pioneer's changelog.  0.5.2  2020-01-21 - 2 commits by Daniel Kraus (1), Ignat Simonenko (1) - published to  Fix distinct set collector [(#162)](junit-pioneer/junit-pioneer#162) Fix the issue with default locale extension for nested classes [(#161)](junit-pioneer/junit-pioneer#161) DefaultLocale does not work with @Nested [(#146)](junit-pioneer/junit-pioneer#146)     Commits  5250cb9 0.5.2 release (previous 0.5.1) + release notes updated [ci skip] 158cc4e Fix distinct set collector ffb7a5d Fix the issue with default locale extension for nested classes (#161) See full diff in compare view      [![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=org.junit-pioneer:junit-pioneer&package-manager=maven&previous-version=0.5.1&new-version=0.5.2)](https://dependabot.com/compatibility-score.html?dependency-name=org.junit-pioneer:junit-pioneer&package-manager=maven&previous-version=0.5.1&new-version=0.5.2)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in the `.dependabot/config.yml` file in this repo: - Update frequency - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2020-01-22T06:50:08Z","2020-01-22T09:23:04Z"
"","7454","dependency: bump junit-pioneer from 0.5.0 to 0.5.1","Bumps [junit-pioneer](https://github.com/junit-pioneer/junit-pioneer) from 0.5.0 to 0.5.1.  Release notes Sourced from junit-pioneer's releases.  v0.5.1 Release notes were automatically generated by Shipkit 0.5.1  2020-01-08 - 1 commit by Daniel Kraus - published to  No pull requests referenced in commit messages.     Changelog Sourced from junit-pioneer's changelog.  0.5.1  2020-01-08 - 1 commit by Daniel Kraus - published to  No pull requests referenced in commit messages.     Commits  9846c86 0.5.1 release (previous 0.5.0) + release notes updated [ci skip] 64fca93 Make container of system property annotations public See full diff in compare view      [![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=org.junit-pioneer:junit-pioneer&package-manager=maven&previous-version=0.5.0&new-version=0.5.1)](https://dependabot.com/compatibility-score.html?dependency-name=org.junit-pioneer:junit-pioneer&package-manager=maven&previous-version=0.5.0&new-version=0.5.1)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in the `.dependabot/config.yml` file in this repo: - Update frequency - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2020-01-09T06:49:01Z","2020-01-09T15:07:06Z"
"","7447","dependency: bump junit-pioneer from 0.4.2 to 0.5.0","Bumps [junit-pioneer](https://github.com/junit-pioneer/junit-pioneer) from 0.4.2 to 0.5.0.  Release notes Sourced from junit-pioneer's releases.  v0.5.0 Release notes were automatically generated by Shipkit 0.5.0  2020-01-07 - 7 commits by Nicolai Parlog (5), Allon Murienik (1), Daniel Kraus (1) - published to  Simplify and align search for annotations [(#156)](junit-pioneer/junit-pioneer#156) Simplify and align search for annotations [(#155)](junit-pioneer/junit-pioneer#155) Introduce system property extension [(#133)](junit-pioneer/junit-pioneer#133) System property extension [(#129)](junit-pioneer/junit-pioneer#129) Add a RangeSource annotation for junit-jupiter-params [(#44)](junit-pioneer/junit-pioneer#44)     Changelog Sourced from junit-pioneer's changelog.  0.5.0  2020-01-07 - 7 commits by Nicolai Parlog (5), Allon Murienik (1), Daniel Kraus (1) - published to  Simplify and align search for annotations [(#156)](junit-pioneer/junit-pioneer#156) Simplify and align search for annotations [(#155)](junit-pioneer/junit-pioneer#155) Introduce system property extension [(#133)](junit-pioneer/junit-pioneer#133) System property extension [(#129)](junit-pioneer/junit-pioneer#129) Add a RangeSource annotation for junit-jupiter-params [(#44)](junit-pioneer/junit-pioneer#44)     Commits  17a4b9c 0.5.0 release (previous 0.4.2) + release notes updated [ci skip] 4abad51 Prepare release of 0.5 db29765 Rename utils to Utils and add distinctToSet 8b61d50 Use tabs in documentation examples bcce084 Simplify and align search for annotations 8f85cc8 Add range argument sources 9d49259 Implement @ClearSystemProperty and @SetSystemProperty 7910b5d Update Copyrights to 2020 See full diff in compare view      [![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=org.junit-pioneer:junit-pioneer&package-manager=maven&previous-version=0.4.2&new-version=0.5.0)](https://dependabot.com/compatibility-score.html?dependency-name=org.junit-pioneer:junit-pioneer&package-manager=maven&previous-version=0.4.2&new-version=0.5.0)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in the `.dependabot/config.yml` file in this repo: - Update frequency - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2020-01-08T06:46:52Z","2020-01-08T21:51:19Z"
"","7402","dependency: bump guava from 28.1-jre to 28.2-jre","Bumps [guava](https://github.com/google/guava) from 28.1-jre to 28.2-jre.  Commits  See full diff in compare view      [![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=com.google.guava:guava&package-manager=maven&previous-version=28.1-jre&new-version=28.2-jre)](https://dependabot.com/compatibility-score.html?dependency-name=com.google.guava:guava&package-manager=maven&previous-version=28.1-jre&new-version=28.2-jre)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in the `.dependabot/config.yml` file in this repo: - Update frequency - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2019-12-27T06:46:58Z","2019-12-30T21:06:18Z"
"","7220","Bump forbiddenapis from 2.6 to 2.7","Bumps [forbiddenapis](https://github.com/policeman-tools/forbidden-apis) from 2.6 to 2.7.  Commits  - [`9adb2d2`](https://github.com/policeman-tools/forbidden-apis/commit/9adb2d2c086a4003f9d974417aaf9ef3da347c0b) Release 2.7 - [`7a34a68`](https://github.com/policeman-tools/forbidden-apis/commit/7a34a687607f195200a066e82a972a10f8a3df04) add InputStream#skip(long) because it is flaky ([#150](https://github-redirect.dependabot.com/policeman-tools/forbidden-apis/issues/150)) - [`c8d7daf`](https://github.com/policeman-tools/forbidden-apis/commit/c8d7daf8b3bd7d0c2202acd37e8eda4ac3554f8f) Update Groovy to latest bugfix release - [`1b5a1ec`](https://github.com/policeman-tools/forbidden-apis/commit/1b5a1ec294b45288e72adb2e1d6d1c49c58bd4e4) Small improvement to only scan the /modules folder and not everything in earl... - [`3bf31a3`](https://github.com/policeman-tools/forbidden-apis/commit/3bf31a3b32b5ebdd1ef6c46e5fe5d164094cc898) Add support for Java 12 and 13; fix reading deprecated signatures for Java 13... - [`493a323`](https://github.com/policeman-tools/forbidden-apis/commit/493a3235a1c579af63c2020adc450a1f9ff0d36d) Update to ASM 7.2 for full Java 13 compatibility and 14-ea compatibility - [`f497a61`](https://github.com/policeman-tools/forbidden-apis/commit/f497a61ca979a9a953a8a8ca312f3c11c2b3f4d7) Use preview beta/release of ASM 7.2 to support Java 13 and Java 14-ea class v... - [`db77ab3`](https://github.com/policeman-tools/forbidden-apis/commit/db77ab319f28ca13a4eb49eb30c7fc7f1d115898) Added constructor signatures to java.io.FileReader and java.io.FileWriter sin... - [`df5f00c`](https://github.com/policeman-tools/forbidden-apis/commit/df5f00c6bb779875ec6bae967f7cec96670b27d9) Update ASM to 7.1 - [`4f32666`](https://github.com/policeman-tools/forbidden-apis/commit/4f32666be938501016e0c181fea9e61fe9a5a6a6) Fix Maven Central access for commons-io test - Additional commits viewable in [compare view](https://github.com/policeman-tools/forbidden-apis/compare/2.6...2.7)    [![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=de.thetaphi:forbiddenapis&package-manager=maven&previous-version=2.6&new-version=2.7)](https://dependabot.com/compatibility-score.html?dependency-name=de.thetaphi:forbiddenapis&package-manager=maven&previous-version=2.6&new-version=2.7)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---  **Note:** This repo was added to Dependabot recently, so you'll receive a maximum of 5 PRs for your first few update runs. Once an update run creates fewer than 5 PRs we'll remove that limit.  You can always request more updates by clicking `Bump now` in your [Dependabot dashboard](https://app.dependabot.com).   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language - `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language - `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language - `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in your Dependabot [dashboard](https://app.dependabot.com): - Update frequency (including time of day and day of week) - Pull request limits (per update run and/or open at any time) - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2019-10-22T07:04:48Z","2019-10-23T15:50:02Z"
"","7859","dependency: bump equalsverifier from 3.1.12 to 3.1.13","Bumps [equalsverifier](https://github.com/jqno/equalsverifier) from 3.1.12 to 3.1.13.  Changelog Sourced from equalsverifier's changelog.  [3.1.13] - 2020-03-14  Added prefab values for java.util.OptionalDouble, java.util.OptionalInt, java.util.OptionalLong, java.util.EventObject, java.awt.Font, javax.swing.tree.DefaultMutableTreeNode and java.beans.PropertyChangeSupport. (Issue 286)     Commits  a1858df [maven-release-plugin] prepare release equalsverifier-3.1.13 585e8eb Version bump 08ac7d9 Merge branch 'issue-286' af21692 Updates CHANGELOG 83df3ee #286 Adds prefab value for PropetyChangeSupport cddcc69 #286 Adds prefab values for various Java API types 6fd09f7 Merge pull request #284 from jqno/dependabot/maven/org.apache.maven.plugins-m... a8d7ad4 Bump maven-checkstyle-plugin from 3.1.0 to 3.1.1 a62142c Merge pull request #283 from jqno/dependabot/maven/org.apache.maven.plugins-m... 0c7d96f Merge pull request #282 from jqno/dependabot/maven/org.pitest-pitest-maven-1.5.0 Additional commits viewable in compare view      [![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=nl.jqno.equalsverifier:equalsverifier&package-manager=maven&previous-version=3.1.12&new-version=3.1.13)](https://dependabot.com/compatibility-score/?dependency-name=nl.jqno.equalsverifier:equalsverifier&package-manager=maven&previous-version=3.1.12&new-version=3.1.13)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in the `.dependabot/config.yml` file in this repo: - Update frequency - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2020-03-16T06:57:15Z","2020-03-16T14:48:55Z"
"","7511","dependency: bump equalsverifier from 3.1.11 to 3.1.12","Bumps [equalsverifier](https://github.com/jqno/equalsverifier) from 3.1.11 to 3.1.12.  Changelog Sourced from equalsverifier's changelog.  [3.1.12] - 2020-01-27 Fixed  Added prefab values for java.util.Currency. (Issue 268; thanks sullis!)     Commits  5cf0542 [maven-release-plugin] prepare release equalsverifier-3.1.12 4b61ca7 Version bump 9789a0a Updates changelog 3b5846e Merge pull request #268 from sullis/support-java-util-Currency 9869556 support java.util.Currency 0741a01 Merge pull request #265 from jqno/dependabot/maven/com.puppycrawl.tools-check... a559f90 Merge pull request #264 from jqno/dependabot/maven/com.google.guava-guava-28.... 897a2e4 Merge pull request #266 from jqno/dependabot/maven/org.slf4j-slf4j-api-1.7.30 65c9e73 Merge pull request #263 from jqno/dependabot/maven/org.slf4j-slf4j-simple-1.7.30 dd0e93e Bump slf4j-api from 1.7.29 to 1.7.30 Additional commits viewable in compare view      [![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=nl.jqno.equalsverifier:equalsverifier&package-manager=maven&previous-version=3.1.11&new-version=3.1.12)](https://dependabot.com/compatibility-score.html?dependency-name=nl.jqno.equalsverifier:equalsverifier&package-manager=maven&previous-version=3.1.11&new-version=3.1.12)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in the `.dependabot/config.yml` file in this repo: - Update frequency - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2020-01-28T06:49:17Z","2020-01-28T08:33:53Z"
"","7403","dependency: bump equalsverifier from 3.1.10 to 3.1.11","Bumps [equalsverifier](https://github.com/jqno/equalsverifier) from 3.1.10 to 3.1.11.  Changelog Sourced from equalsverifier's changelog.  [3.1.11] - 2019-12-26 Changed  Error message now shows fully qualified class name. (Issue 261; thanks sullis!)  Fixed  Updated Byte-Buddy to support Java 14 EA.      Commits  076749b [maven-release-plugin] prepare release equalsverifier-3.1.11 c9d2551 Updates changelog f818231 Updates dependency 3a775d9 Updates changelog 121ed6c Merge pull request #261 from sullis/EqualsVerifierApi-fully-qualified-class-name bbcca74 use fully qualified class name in error message ecab8ba Merge pull request #260 from sullis/bytebuddy-1.10.6 65385a1 bytebuddy 1.10.6 075f13f Merge pull request #257 from jqno/dependabot/maven/com.puppycrawl.tools-check... bfbdbf1 Bump checkstyle from 8.26 to 8.27 Additional commits viewable in compare view      [![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=nl.jqno.equalsverifier:equalsverifier&package-manager=maven&previous-version=3.1.10&new-version=3.1.11)](https://dependabot.com/compatibility-score.html?dependency-name=nl.jqno.equalsverifier:equalsverifier&package-manager=maven&previous-version=3.1.10&new-version=3.1.11)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in the `.dependabot/config.yml` file in this repo: - Update frequency - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2019-12-27T06:47:22Z","2019-12-27T12:22:57Z"
"","7825","dependency: bump build-helper-maven-plugin from 3.0.0 to 3.1.0","Bumps [build-helper-maven-plugin](https://github.com/mojohaus/build-helper-maven-plugin) from 3.0.0 to 3.1.0.  Release notes Sourced from build-helper-maven-plugin's releases.  build-helper-maven-plugin-3.1.0 Changelog: https://github.com/mojohaus/build-helper-maven-plugin/issues?q=is%3Aissue+milestone%3A3.1.0+is%3Aclosed    Commits  7c17db0 [maven-release-plugin] prepare release build-helper-maven-plugin-3.1.0 097b622 Merge pull request #90 from mojohaus/feature/update-parent-pom 6bac2bf update to mojo-parent 50 2f4a9e4 Merge pull request #89 from mojohaus/issue/80 310534c Merge pull request #88 from mojohaus/issue/81 82bbcb1 Merge pull request #87 from mojohaus/issue/86 fe15394 #80 fix NPE when no qualifier is present ccbfb61 Fix issue #81 920636f #81 add integration test to execute released-version goal 8cff477 #86 use triple slash to get file protocol working in URLs on windows Additional commits viewable in compare view      [![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=org.codehaus.mojo:build-helper-maven-plugin&package-manager=maven&previous-version=3.0.0&new-version=3.1.0)](https://dependabot.com/compatibility-score/?dependency-name=org.codehaus.mojo:build-helper-maven-plugin&package-manager=maven&previous-version=3.0.0&new-version=3.1.0)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme  Additionally, you can set the following in the `.dependabot/config.yml` file in this repo: - Update frequency - Out-of-range updates (receive only lockfile updates, if desired) - Security updates (receive only security updates, if desired)","closed","dependencies,","dependabot-preview[bot]","2020-03-11T06:39:30Z","2020-03-11T21:11:32Z"
"","7267","javadoc build problem on openjdk11","build problem https://travis-ci.org/checkstyle/checkstyle/jobs/612891727  Idea generated docs: ![image](https://user-images.githubusercontent.com/812984/68999913-5730bc00-087c-11ea-9eb7-fed611601f7b.png)  log from local: ``` $ mvn -e site -Dlinkcheck.skip=true ... [INFO] Generating ""Javadoc"" report       --- maven-javadoc-plugin:3.1.1:javadoc [INFO]  .... Generating /home/rivanov/java/github/romani/checkstyle/target/site/apidocs/overview-summary.html... Generating /home/rivanov/java/github/romani/checkstyle/target/site/apidocs/help-doc.html... Note: Custom tags that could override future standard tags:  @noinspection. To avoid potential overrides, use at least one period character (.) in custom tag names. Note: Custom tags that were not seen:  @noinspection 2 errors [INFO] ------------------------------------------------------------------------ [INFO] BUILD FAILURE [INFO] ------------------------------------------------------------------------ [INFO] Total time:  02:25 min [INFO] Finished at: 2019-11-16T14:14:25-08:00 [INFO] ------------------------------------------------------------------------ [ERROR] Failed to execute goal org.apache.maven.plugins:maven-site-plugin:3.8.2:site (default-site) on project checkstyle: Error generating maven-javadoc-plugin:3.1.1:javadoc report:  [ERROR] Exit code: 1 - /home/rivanov/java/github/romani/checkstyle/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheck.java:100: error: invalid entity 。 [ERROR]  *   <property name=""period"" value=""。""/> [ERROR]                                        ^ [ERROR] /home/rivanov/java/github/romani/checkstyle/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheck.java:114: error: invalid entity 。 [ERROR]  *   * This is valid java doc。 [ERROR]                              ^ [ERROR]  [ERROR] Command line was: /opt/jvm/openjdk-11-28/bin/javadoc @options @packages [ERROR]  [ERROR] Refer to the generated Javadoc files in '/home/rivanov/java/github/romani/checkstyle/target/site/apidocs' dir. [ERROR] -> [Help 1] org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.maven.plugins:maven-site-plugin:3.8.2:site (default-site) on project checkstyle: Error generating maven-javadoc-plugin:3.1.1:javadoc report     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:215)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:156)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:148)     at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)     at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)     at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:56)     at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)     at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:305)     at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:192)     at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:105)     at org.apache.maven.cli.MavenCli.execute (MavenCli.java:956)     at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:288)     at org.apache.maven.cli.MavenCli.main (MavenCli.java:192)     at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)     at jdk.internal.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)     at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke (Method.java:566)     at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:282)     at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:225)     at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:406)     at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:347) Caused by: org.apache.maven.plugin.MojoExecutionException: Error generating maven-javadoc-plugin:3.1.1:javadoc report     at org.apache.maven.plugins.site.render.SiteMojo.execute (SiteMojo.java:155)     at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo (DefaultBuildPluginManager.java:137)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:210)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:156)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:148)     at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)     at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)     at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:56)     at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)     at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:305)     at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:192)     at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:105)     at org.apache.maven.cli.MavenCli.execute (MavenCli.java:956)     at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:288)     at org.apache.maven.cli.MavenCli.main (MavenCli.java:192)     at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)     at jdk.internal.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)     at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke (Method.java:566)     at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:282)     at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:225)     at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:406)     at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:347) Caused by: org.apache.maven.reporting.MavenReportException:  Exit code: 1 - /home/rivanov/java/github/romani/checkstyle/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheck.java:100: error: invalid entity 。  *   <property name=""period"" value=""。""/>                                        ^ /home/rivanov/java/github/romani/checkstyle/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheck.java:114: error: invalid entity 。  *   * This is valid java doc。                              ^  Command line was: /opt/jvm/openjdk-11-28/bin/javadoc @options @packages  Refer to the generated Javadoc files in '/home/rivanov/java/github/romani/checkstyle/target/site/apidocs' dir.      at org.apache.maven.plugins.javadoc.AbstractJavadocMojo.executeJavadocCommandLine (AbstractJavadocMojo.java:5763)     at org.apache.maven.plugins.javadoc.AbstractJavadocMojo.executeReport (AbstractJavadocMojo.java:2152)     at org.apache.maven.plugins.javadoc.JavadocReport.generate (JavadocReport.java:134)     at org.apache.maven.plugins.site.render.ReportDocumentRenderer.renderDocument (ReportDocumentRenderer.java:276)     at org.apache.maven.doxia.siterenderer.DefaultSiteRenderer.render (DefaultSiteRenderer.java:349)     at org.apache.maven.plugins.site.render.SiteMojo.renderLocale (SiteMojo.java:198)     at org.apache.maven.plugins.site.render.SiteMojo.execute (SiteMojo.java:147)     at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo (DefaultBuildPluginManager.java:137)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:210)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:156)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:148)     at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)     at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)     at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:56)     at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)     at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:305)     at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:192)     at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:105)     at org.apache.maven.cli.MavenCli.execute (MavenCli.java:956)     at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:288)     at org.apache.maven.cli.MavenCli.main (MavenCli.java:192)     at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)     at jdk.internal.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)     at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke (Method.java:566)     at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:282)     at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:225)     at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:406)     at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:347) [ERROR]  [ERROR] Re-run Maven using the -X switch to enable full debug logging. [ERROR]  [ERROR] For more information about the errors and possible solutions, please read the following articles: [ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException  ```  Second build problem https://travis-ci.org/checkstyle/checkstyle/jobs/612891700#L547 : ``` ----------  1. ERROR in /home/travis/build/checkstyle/checkstyle/src/main/java/com /puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheck.java (at line 71) 	*    * {@inheritDoc} 	         ^^^^^^^^^^ ```","closed","miscellaneous,","romani","2019-11-16T22:19:03Z","2019-11-17T01:22:42Z"
"","7330","Appveyor is not failing even build is failed","build - https://ci.appveyor.com/project/Checkstyle/checkstyle/builds/29376511/job/c6gy7exdcedw6a87 of https://github.com/checkstyle/checkstyle/pull/7328  in logs we see that build is failed, but final status is green. Looks like exit code is not populated to from appveyor.bat to appveyor, probably cause dby recent refactoring when appveyor.bat was created.  logs: ``` [INFO] Error stacktraces are turned on. [INFO] Scanning for projects... [INFO] Inspecting build with total of 1 modules... [INFO] Installing Nexus Staging features: [INFO]   ... total of 1 executions of maven-deploy-plugin replaced with nexus-staging-maven-plugin [INFO]                                                                          [INFO] ------------------------------------------------------------------------ [INFO] Building checkstyle 8.28-SNAPSHOT [INFO] ------------------------------------------------------------------------ [INFO] ------------------------------------------------------------------------ [INFO] BUILD FAILURE [INFO] ------------------------------------------------------------------------ [INFO] Total time: 0.875 s [INFO] Finished at: 2019-12-06T23:57:35+00:00 [INFO] Final Memory: 14M/138M [INFO] ------------------------------------------------------------------------ [ERROR] Unknown lifecycle phase ""verify111"". You must specify a valid lifecycle phase  or a goal in the format : or : [:]:. Available lifecycle phases are: validate, initialize,  generate-sources, process-sources, generate-resources, process-resources,  compile, process-classes, generate-test-sources, process-test-sources,  generate-test-resources, process-test-resources, test-compile, process-test-classes,  test, prepare-package, package, pre-integration-test, integration-test,  post-integration-test, verify, install, deploy, pre-clean, clean, post-clean, pre-site,  site, post-site, site-deploy. -> [Help 1] org.apache.maven.lifecycle.LifecyclePhaseNotFoundException: Unknown lifecycle phase  ""verify111"". You must specify a valid lifecycle phase or a goal in the format  : or : [:]:. Available lifecycle phases are: validate, initialize,  generate-sources, process-sources, generate-resources, process-resources,  compile, process-classes, generate-test-sources, process-test-sources,  generate-test-resources, process-test-resources, test-compile, process-test-classes,  test, prepare-package, package, pre-integration-test, integration-test,  post-integration-test, verify, install, deploy, pre-clean, clean, post-clean, pre-site,  site, post-site, site-deploy. 	at org.apache.maven.lifecycle.internal.DefaultLifecycleExecutionPlanCalculator.calculateLifecycleMappings(DefaultLifecycleExecutionPlanCalculator.java:228) 	at org.apache.maven.lifecycle.internal.DefaultLifecycleExecutionPlanCalculator.calculateMojoExecutions(DefaultLifecycleExecutionPlanCalculator.java:199) 	at org.apache.maven.lifecycle.internal.DefaultLifecycleExecutionPlanCalculator.calculateExecutionPlan(DefaultLifecycleExecutionPlanCalculator.java:118) 	at org.apache.maven.lifecycle.internal.DefaultLifecycleExecutionPlanCalculator.calculateExecutionPlan(DefaultLifecycleExecutionPlanCalculator.java:135) 	at org.apache.maven.lifecycle.internal.builder.BuilderCommon.resolveBuildPlan(BuilderCommon.java:97) 	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:109) 	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80) 	at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51) 	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:120) 	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:355) 	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:155) 	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:584) 	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:216) 	at org.apache.maven.cli.MavenCli.main(MavenCli.java:160) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289) 	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229) 	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415) 	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356) [ERROR]  [ERROR] Re-run Maven using the -X switch to enable full debug logging. [ERROR]  [ERROR] For more information about the errors and possible solutions, please read the following articles: [ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/LifecyclePhaseNotFoundException echo ""Size of caches (bytes):"" Size of caches (bytes): Get-ChildItem -Recurse 'C:\maven\apache-maven-3.2.5' | Measure-Object -Property Length -Sum Count    : 83 Average  :  Sum      : 9420555 Maximum  :  Minimum  :  Property : Length Get-ChildItem -Recurse 'C:\Users\appveyor\.m2' | Measure-Object -Property Length -Sum Count    : 5087 Average  :  Sum      : 218489990 Maximum  :  Minimum  :  Property : Length Discovering tests...OK Build success ```","closed","CI,","romani","2019-12-07T00:03:05Z","2019-12-07T19:08:20Z"
"","7198","Issue #7119: fix no expected violations for empty line within import group","BLOCKED BY #7197  What has been done:  1. Issue #7119 was fixed. 2. Slightly changed behavior about how to detect empty lines. Now take comments between imports or import groups into account.  Note: merge https://github.com/checkstyle/checkstyle/pull/7197 (for #6680) before this one.","closed","","gmshake","2019-10-15T01:57:56Z","2019-12-11T06:03:11Z"
"","7962","minor: Optimize method distance in checkstyle.api.LocalizedMessage","Before Optimization: https://wilcoln.github.io/com.pupppycrawl.tools.checkstyle.api/before.LocalizedMessage.java.html  After Optimization: https://wilcoln.github.io/com.pupppycrawl.tools.checkstyle.api/after.LocalizedMessage.java.html  Optimization was made manually and with respect to the currently hardcoded criteria defined in the method-distance repository.","closed","","wilcoln","2020-03-25T18:41:40Z","2020-04-18T20:05:13Z"
"","7961","minor: Optimize method distance in checkstyle.api.FullIdent","Before Optimization: https://wilcoln.github.io/com.pupppycrawl.tools.checkstyle.api/before.FullIdent.java.html  After Optimization: https://wilcoln.github.io/com.pupppycrawl.tools.checkstyle.api/after.FullIdent.java.html  Optimization was made manually and with respect to the currently hardcoded criteria defined in the method-distance repository.","closed","","wilcoln","2020-03-25T18:33:11Z","2020-04-19T01:43:45Z"
"","7960","minor: Optimize method distance in checkstyle.api.FileText","Before Optimization: https://wilcoln.github.io/com.pupppycrawl.tools.checkstyle.api/before.FileText.java.html  After Optimization: https://wilcoln.github.io/com.pupppycrawl.tools.checkstyle.api/optimal.FileText.java.html  Submited Optimization: https://wilcoln.github.io/com.pupppycrawl.tools.checkstyle.api/after.FileText.java.html  Optimization was made manually and with respect to the currently hardcoded criteria defined in the method-distance repository.  @romani  I'll take this opportunity to suggest that some users might want constructors to be the first methods defined in class .Thus, it might be relevant to count penalty for every constructor defined below a non-constructor method.  Currently, there is no such criterion defined in the method-distance repo, this is why, in this case, first method of optimal reordering isn't a constructor.  I figured out that this might not be what we want for checkstyle, so I submitted a reordering for which constructors are at the top.  What do you think?","closed","","wilcoln","2020-03-25T18:18:01Z","2020-04-19T01:41:38Z"
"","7958","minor: Optimize method distance in checkstyle.api.FileContents","Before Optimization: https://wilcoln.github.io/com.pupppycrawl.tools.checkstyle.api/before.FileContents.java.html  After Optimization:  https://wilcoln.github.io/com.pupppycrawl.tools.checkstyle.api/after.FileContents.java.html  Optimization was made manually and with respect to the currently hardcoded criteria defined in the method-distance repository.","closed","","wilcoln","2020-03-25T17:29:32Z","2020-04-19T01:54:03Z"
"","7963","minor: Optimize method distance in checkstyle.api.AbstractFileSetCheck","Before Optimization: https://wilcoln.github.io/com.pupppycrawl.tools.checkstyle.api/before.AbstractFileSetCheck.java.html  After Optimization: https://wilcoln.github.io/com.pupppycrawl.tools.checkstyle.api/after.AbstractFileSetCheck.java.html  Optimization was made manually and with respect to the currently hardcoded criteria defined in the method-distance repository.   A more optimal reordering would be possible, (by permutating `processFiltered` with `process`) But, currently there is an active checkstyle check `CustomDeclarationOrder` and doesn't allow that reordering. (mvn verify fails)","closed","","wilcoln","2020-03-25T21:46:11Z","2020-03-25T22:08:02Z"
"","7964","minor: Optimize method distance in checkstyle.api.AbstractCheck","Before Optimization: https://wilcoln.github.io/com.pupppycrawl.tools.checkstyle.api/before.AbstractCheck.java.html  After Optimization: https://wilcoln.github.io/com.pupppycrawl.tools.checkstyle.api/after.AbstractCheck.java.html  Optimization was made manually and with respect to the currently hardcoded criteria defined in the method-distance repository.","closed","","wilcoln","2020-03-25T22:21:25Z","2020-04-18T21:07:27Z"
"","7437","config: add .ci/bump-license-year-in-all-projects.sh","based on mess of today in CI with year bump .... https://github.com/checkstyle/checkstyle/pull/7433 https://github.com/checkstyle/checkstyle/pull/7434  from https://github.com/checkstyle/checkstyle/wiki/How-to-make-a-release#before-starting  ones merged, wiki should be updated. such file should be copied to all other repositories (or use some wrapper with wget/curl of such script and execution of it)  Probably updates like this are not required for review/CI so we cn make script that clone all dependent repositories and make changes in them and push. So some maintainer will launch one script and it will do all required updates.","closed","","romani","2020-01-03T00:57:30Z","2020-01-04T00:29:58Z"
"","7892","Improve clean up of .ci-temp directory","based on discussion at https://github.com/checkstyle/checkstyle/pull/7870#discussion_r393923576 and https://github.com/checkstyle/checkstyle/pull/7778#discussion_r391285990  We need to improve clean up in the .ci-temp directory after ci scripts run, and should also specify if a directory wasn't able to be removed.   Also, we should use a bash function to make for a cleaner script, and make clear our intention to remove all files, including protected ones.","closed","miscellaneous,","nick-mancuso","2020-03-18T04:04:15Z","2020-05-28T14:07:46Z"
"","7466","doc: extend Indentation Check explanation of line wrap","based on discussion at https://github.com/checkstyle/checkstyle/pull/7238#discussion_r360711145  It is not very concise doc, but good step forward to unblock #7238 .  I did simple `// violation` on purpose to not bother user with too much details like `// indent:8 ; expected: > 4; ok, because 8 > 4` extra time.  ![image](https://user-images.githubusercontent.com/812984/72634896-6f6e9700-3910-11ea-812c-36edcf7e6b23.png)","closed","","romani","2020-01-12T15:29:16Z","2020-11-07T15:59:40Z"
"","7519","new check: RightCurlyOfListItems","based on discussion at #7174 to address cases like: ``` public enum Scope {       PROTOTYPE {           @Override           void doSomethig() {               doSomethig2();           }       }, // in ""alone"" mode this become weird to put "","" to separate line !!! ```  Looks like it is named as ""list"" in specification - https://docs.oracle.com/javase/specs/jls/se9/html/jls-8.html#jls-8.9.1  Check should match modes of RightCurly module, but ignore possible "","" in between. supported token for now: `ENUM_CONSTANT_DEF`","open","","romani","2020-01-29T19:04:03Z","2020-01-29T22:27:40Z"
"","7299","Remove build for old non-LTS releases","based on @romani  https://github.com/checkstyle/checkstyle/issues/7281#issuecomment-560948039  Appveyor currently lasts 40-65 minutes. And has no ability to cancel the build. By removing the build for JDK 9 and JDK 10 we can reduce the build time by one third.  It is enough to build for all active LTS releases (8 and 11) and for  the newest one (13 as today). There is no reason to check the build for releases that are no longer supported by the vendor.","closed","CI,","pbludov","2019-12-03T07:15:04Z","2019-12-26T17:11:36Z"
"","7541","new Check: RightCurlyAloneOrEmpty","based on #6807  This Check is required to avoid inlined suppression and replace `RightCurlyAlone` Check instance completely in google_checks.xml .  new Check with possible name as RightCurlyAloneOrEmpty should be separate from RightCurly but can copy any functionality it needs and cover singe case, ones implemented it should replace existing RightCurly instance in google config.   ITs of new Check should use `InputRightCurlyAloneOrEmptyNoViolations.java`","open","google style,","romani","2020-02-09T02:13:50Z","2022-03-01T13:30:32Z"
"","7021","create tests in MainTest.java to cover execution over some Input for sun and google configs","base on incident https://github.com/checkstyle/checkstyle/issues/2116#issuecomment-524727108  We just need to have MainTest to run validation with sun_checks.xml and google_checks.xml over some input (with not that much violation), to make sure that configs are loadable/executable.","closed","miscellaneous,","romani","2019-08-26T06:14:14Z","2019-08-27T00:25:53Z"
"","7370","config: add dependabot badge to README to ease access to it","base on actions at  https://github.com/checkstyle/checkstyle/pull/7369","closed","","romani","2019-12-11T21:25:04Z","2019-12-12T16:37:56Z"
"","7965","Issue #3151: multiple variable declaration tree doesn't look natural","Attempts to fix Issue #3151: multiple variable declaration tree doesn't look natural","closed","incomplete,","nick-mancuso","2020-03-26T02:18:47Z","2020-08-26T20:34:55Z"
"","7518","Change line number comparisons to use common isOnSameLine method","At the moment there is several methods for checking that 2 ASTs are on same line, e.g. https://github.com/checkstyle/checkstyle/blob/master/src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/NeedBracesCheck.java#L295 https://github.com/checkstyle/checkstyle/blob/master/src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/AbstractExpressionHandler.java#L188  And many occurrences of line number comparison, e.g. https://github.com/checkstyle/checkstyle/blob/master/src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheck.java#L310 https://github.com/checkstyle/checkstyle/blob/master/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MultipleVariableDeclarationsCheck.java#L108 and others.  So this should be extracted to some common util class and all occurrences replaced with new method.","closed","miscellaneous,","strkkk","2020-01-29T16:09:50Z","2020-02-07T02:59:20Z"
"","7388","New MissingWhitespaceAfterDoubleSlashCheck","As per https://github.com/checkstyle/checkstyle/issues/7183 which was approved by @romani,  but for single-line comments **in javadocs**.  Although spaces after slashes are optional in the comments, their absence makes the documentation difficult to read. It is the de facto standard to put at least one whitespace after the leading two slashes like so:  `// comment`  and it is style violation to omit the space like so:  `//comment`  This convention is implied in Section 3.7 ""Comments"" of the [Java Language Specification](https://docs.oracle.com/javase/specs/jls/se13/html/jls-3.html#jls-3.7):  >    3.7. Comments >  > There are two kinds of comments: >  >     /* text */ >  >     A traditional comment: all the text from the ASCII characters /* to the ASCII characters */ is ignored (as in C and C++). >  >     // text >  >     An end-of-line comment: all the text from the ASCII characters // to the end of the line is ignored (as in C++).  It appears to be *de rigueur* in Java itself, for example in http://hg.openjdk.java.net/jdk7u/jdk7u6/jdk/file/8c2c5d63a17e/src/share/classes/java/lang/String.java   ``` /var/tmp $ javac TestClass.java  public class TestClass {     //no whitespace after double slash here. } ```  **Expected violation:** TestClass.java:2:5 Missing a whitespace after the leading double slash.   **Workaround** till better solution is: https://github.com/romani/checkstyle/commit/08ccec1684d5d4b0e9c2c378de4b2e6abfe3402a#diff-6e886340e5a2ff9bd26e48165c70663dR604","closed","","ticehix128","2019-12-18T17:42:01Z","2020-04-19T15:49:06Z"
"","7234","config: remove custom rule CheckstyleCustomShortVariable","as it is covered by LocalVariableName (related to #7229)","closed","","romani","2019-10-29T13:02:45Z","2019-11-03T02:31:08Z"
"","7951","doc: update IndentationCheck note for SuppressionXpathFilter","As for now Indentationcheck support for XpathSuppression is not supported till the [Issue #7734 ](https://github.com/checkstyle/checkstyle/issues/7734) is resolved. PR is made in support of following comment https://github.com/checkstyle/checkstyle/issues/7734#issuecomment-602221021 Updated site screenshot : ![Screenshot_2020-03-24 checkstyle – Filters](https://user-images.githubusercontent.com/48255244/77433596-90b69c80-6e05-11ea-82d2-9c154f81e4cf.png)","closed","","Abhishek-kumar09","2020-03-24T09:45:21Z","2020-04-02T15:08:21Z"
"","7382","Generation of xpath suppression file does not close file","Appveyor fails as it impossible to delete a folder with an open file on windows.  https://ci.appveyor.com/project/Checkstyle/checkstyle/builds/29462765/job/bclpf6jrt0yj3hgn#L3085  ``` [ERROR] testGenerateXpathSuppressionOptionCustomOutput{Capturable}   Time elapsed: 0 s","closed","approved,","pbludov","2019-12-14T22:56:54Z","2019-12-26T17:12:02Z"
"","7039","Issue #7041: ANNOTATION_DEF support added in RightCurlyCheck","ANNOTATION_DEF support added in RightCurlyCheck. Fix #7041.  Regression: https://sd1998.github.io/checkstyle-regression/Fix-7041/","closed","","shashvat-kedia","2019-09-03T16:56:06Z","2019-12-28T14:51:19Z"
"","7183","New JavadocMissingWhitespaceAfterAsteriskCheck","Although spaces after asterisks are optional in the Javadoc comments, their absence makes the documentation difficult to read. It is the de facto standard to put at least one whitespace after the leading asterisk. ``` /var/tmp $ javac TestClass.java /**  *no whitespace after asterisk here.  */ public class TestClass { } ``` Expected violation: `TestClass.java:2:5 Missing a whitespace after the leading asterisk.`","closed","new module,","pbludov","2019-10-10T20:11:26Z","2020-04-03T13:08:45Z"
"","7414","MissingDeprecated check fails to parse JavaDoc tags","After updating from CheckStyle 8.18 to 8.27, the `MissingDeprecated` check gives false errors caused by failed JavaDoc parsing. A few examples are: ![afbeelding](https://user-images.githubusercontent.com/9693840/71552811-edbbd580-2a03-11ea-8a9f-a2c599f94742.png) ![afbeelding](https://user-images.githubusercontent.com/9693840/71552828-3a071580-2a04-11ea-92d3-10b611c3121c.png) ![afbeelding](https://user-images.githubusercontent.com/9693840/71552837-628f0f80-2a04-11ea-942e-ea0ff5d6c339.png)  When running `maven-checkstyle-plugin:3.1.0`, the feedback for these errors is (removed file paths): ``` [INFO] --- maven-checkstyle-plugin:3.1.0:check (checkstyle) @ JavaLoader --- [INFO] Starting audit... [ERROR] ...: Javadoc comment at column 24 has parse error. Details: no viable alternative at input '' while parsing HTML_ELEMENT [MissingDeprecated] [ERROR] ...: Javadoc comment at column 0 has parse error. Details: no viable alternative at input '\t *' while parsing JAVADOC_TAG [MissingDeprecated] [ERROR] ...: Javadoc comment at column 10 has parse error. Details: no viable alternative at input '{' while parsing JAVADOC_TAG [MissingDeprecated] Audit done. ```  The `MissingDeprecated` check is added under the `TreeWalker` module as: ``  My expectation is that the `MissingDeprecated` check does not fail to parse JavaDocs, or that it at least parses all JavaDocs it used to parse in CheckStyle version 8.18.  --------------- EDIT: Here's an example in the given issue report format.  Documentation: https://checkstyle.org/config_annotation.html#MissingDeprecated  ``` javac MyClass.java  cat checkstyle.xml                                          cat MyClass.java public class MyClass {          /**          * @author           */         public void test() {         }          /**          * @return          * @throws Exception When bla.          */         public String test2() {                 return null;         }          /**          * Some description.          * @see {@link #test3()}.          */         public void test3() {         } }  java -Duser.language=en -Duser.country=US -jar checkstyle-8.27-all.jar -c checkstyle.xml MyClass.java Starting audit... [ERROR] C:\...\MyClass.java:5: Javadoc comment at column 24 has parse error. Details: no viable alternative at input '' while parsing HTML_ELEMENT [MissingDeprecated] [ERROR] C:\...\MyClass.java:12: Javadoc comment at column 0 has parse error. Details: no viable alternative at input '\t *' while parsing JAVADOC_TAG [MissingDeprecated] [ERROR] C:\...\MyClass.java:20: Javadoc comment at column 10 has parse error. Details: no viable alternative at input '{' while parsing JAVADOC_TAG [MissingDeprecated] Audit done. Checkstyle ends with 3 errors. ```","closed","","Pieter12345","2019-12-29T05:40:25Z","2019-12-29T22:22:11Z"
"","7408","config: move releasenotes builder to .ci-temp","after release notes generation on local  there bunch of changed files in checksryle git repo: ``` $ git status  Untracked files:   (use ""git add ..."" to include in what will be committed)  	checkstyle/ 	contribution/ 	gplus.txt 	mailing_list.txt 	rss.txt 	twitter.txt 	xdoc.xml ```  we have special folder for ci temp files - `.ci-temp`","closed","","romani","2019-12-28T00:41:28Z","2019-12-28T14:32:28Z"
"","7421","config: update wercker to use upstream orekit and xwiki (#7329)","after release activity for already closed #7329 upstream repositories are migrated to 8.28.","closed","","romani","2019-12-30T15:29:04Z","2019-12-30T19:00:56Z"
"","7364","Issue #7278: introduce a new message for the violation within import …","Address #7278  Regression report: https://gmshake.github.io/checkstyle_contribution/checkstyle-tester/diff_pr_7364/","closed","","gmshake","2019-12-11T07:24:56Z","2019-12-13T19:47:42Z"
"","7366","Issue #7119: fix no expected violations for empty line within import …","Address #7119  Regression report: https://gmshake.github.io/checkstyle_contribution/checkstyle-tester/diff_pr_7366_2/ https://gmshake.github.io/checkstyle_contribution/checkstyle-tester/diff_pr_7366_3_guava_google_style/ https://gmshake.github.io/checkstyle_contribution/checkstyle-tester/diff_pr_7366_4_google_style/","closed","","gmshake","2019-12-11T09:02:42Z","2019-12-28T16:30:14Z"
"","7212","Issue #6743: fixed unused param not reported when missing description","Added one regexp to check params without docs and test from issue #6743, fixed failed tests, removed unused code.  Checkstyle tester diff report for this branch available here https://tirex.github.io/checkstyle/diff/","closed","","Tirex","2019-10-20T10:21:16Z","2019-11-04T03:12:19Z"
"","7914","add spoon project to no-exception testing","add spoon project to no-exception testing  discussed at  https://github.com/checkstyle/checkstyle/issues/6064#issuecomment-601704892  it is already at https://github.com/checkstyle/contribution/commit/50dcd17d41ba25fc7682816b57c9c4fa6cca0063  we need to activate it wercker config/sh script. probably at https://github.com/checkstyle/checkstyle/blob/master/.ci/wercker.sh#L305 , so we will do two projects in same CI item","closed","CI,","romani","2020-03-20T13:58:10Z","2020-03-23T06:47:37Z"
"","7368","Make powermock tests compatible with JDK17+","A spin-off for https://github.com/checkstyle/checkstyle/issues/6916  Currently, this issue is blocked by https://github.com/powermock/powermock/issues/830 and  https://github.com/junit-team/junit5/issues/201  Once done,  some Junit4 dependencies should be removed from pom.xml, including:  - [ ] junit-vintage-engine - [ ] system-rules - [ ] powermock-module-junit4  UPD: It is not possible to keep them. All Powermock tests should be rewritten.","closed","miscellaneous,","pbludov","2019-12-11T09:47:11Z","2021-12-21T03:32:00Z"
"","7453","Issue #7174: ENUM_CONSTANT_DEF token support for RightCurlyCheck","`ENUM_CONSTANT_DEF` support added in RightCurlyCheck. Fix #7174.  Regression Report: https://sd1998.github.io/checkstyle-regression/Fix-7174/index.html  Base config: https://sd1998.github.io/checkstyle-regression/Fix-7174/base_config.xml  Patch config: https://sd1998.github.io/checkstyle-regression/Fix-7174/patch_config.xml  Regression Repo: https://github.com/sd1998/checkstyle-regression/tree/master/Fix-7174","closed","awaiting changes,","shashvat-kedia","2020-01-09T05:55:20Z","2020-01-26T13:08:12Z"
"","7999","java 14 pattern Matching for instanceof not supported","```java if (x instanceof Integer i) {      } ``` Error: `antlr.MismatchedTokenException: expecting RPAREN, found 'i'`","closed","","jflefebvre06","2020-03-30T07:48:22Z","2020-03-30T08:28:57Z"
"","7066","RequireThisCheck: no violation produced when field is concatenated with String","```` $ cat TestClass.java public class TestClass {     private String id;      public String method() {         return """" + id;     } }  $ cat TestConfig.xml                            $ java -jar checkstyle-8.24-all.jar -c TestConfig.xml TestClass.java Starting audit... Audit done. ````  I am expecting a violation on the return statement since `id` doesn't have `this.` in front of it.  If the string concatenation is removed, a violation shows up.  ```` $ cat TestClass.java public class TestClass {     private String id;      public String method() {         return id;     } }  $ java -jar checkstyle-8.24-all.jar -c TestConfig.xml TestClass.java Starting audit... [ERROR] TestClass.java:5:16: Reference to instance variable 'id' needs ""this."". [RequireThis] Audit done. Checkstyle ends with 1 errors. ````","closed","approved,","rnveach","2019-09-15T21:11:14Z","2019-11-04T13:59:47Z"
"","7430","InvalidJavadocPosition: false positive when comment is between javadoc and package","```` $ cat TestClass.java /** 1. **/ /** 2. **/ // abc package a;   $ cat TestConfig.xml                        $ java -jar checkstyle-8.28-all.jar -c TestConfig.xml TestClass.java Starting audit... [ERROR] TestClass.java:1:1: Javadoc comment is placed in the wrong location. [InvalidJavadocPosition] [ERROR] TestClass.java:2:1: Javadoc comment is placed in the wrong location. [InvalidJavadocPosition] Audit done. Checkstyle ends with 2 errors. ````  Violation on line 1 is valid. There should be no error on line 2.  Javadoc tool seems to always choose the javadoc closest to the target. This is why 2 is valid and 1 isn't.","closed","approved,","rnveach","2019-12-31T18:29:22Z","2020-01-04T20:09:54Z"
"","7553","SuperClone - can it ignore uncallable (abstract) clone() methods?","``` javac Main.java.java (empty) ```  cat checkstyle.xml ```                 ```  /var/tmp $ cat Main.java ``` package com.company;  // located in a an external library (jar) abstract class TreeFilter {     protected abstract TreeFilter clone(); }  class MyFilter extends TreeFilter {      @Override     public MyFilter clone() {         //super.clone(); // commented on purpose; uncomenting fixes Checkstyle warning but makes code uncompilable         return this;     } }  public class Main {      public static void main(String[] args) {     } }  ```  Checkstyle 8.29 (invoked by IntelliJ IDEA CheckStyle 5.35.5 plugin)  **Obtained** ``` Method 'clone' should call 'super.clone'. (11:21) [SuperClone] ```  --------------- **Expected** ``` (no warnings) ``` Describe what you expect in detail.  Abstract class `TreeFilter` (existing in a separate jar file) contains abstract method _clone()_: `protected abstract TreeFilter clone();` My class named `MyFilter` extends `TreeFilter` and overrides _clone()_ method. Checkstyle tells me to invoke _clone()_ method from super class (TreeFilter). However it is impossible because _clone()_ method in a super class is abstract (uncallable).  I would like to ask - is it possible to ignore abstract methods in super class by SuperClone rule?  --------------","closed","","zielint0","2020-02-17T14:19:55Z","2020-02-25T10:06:25Z"
"","7258","Checkstyle not working since yesterday's update (8.26)","``` /var/tmp $ javac YOUR_FILE.java #[[PLACE YOUR OUTPUT HERE]]  /var/tmp $ cat config.xml #[[PLACE YOUR OUTPUT HERE]]  /var/tmp $ cat YOUR_FILE.java #[[PLACE YOU OUTPUT HERE]]  /var/tmp $ RUN_LOCALE=""-Duser.language=en -Duser.country=US"" /var/tmp $ java $RUN_LOCALE -jar checkstyle-X.XX-all.jar -c config.xml YOUR_FILE.java #[[PLACE YOUR OUTPUT HERE]] ```  --------------- Getting this error:   com.puppycrawl.tools.checkstyle.api.CheckstyleException: cannot initialize module TreeWalker - TreeWalker is not allowed as a parent of LineLength Please review 'Parent Module' section for this Check in web documentation if Check is standard. 	at com.puppycrawl.tools.checkstyle.Checker.setupChild(Checker.java:472) 	at com.puppycrawl.tools.checkstyle.api.AutomaticBean.configure(AutomaticBean.java:198) 	at net.sf.eclipsecs.core.builder.CheckerFactory.createCheckerInternal(CheckerFactory.java:255) 	at net.sf.eclipsecs.core.builder.CheckerFactory.createChecker(CheckerFactory.java:127) 	at net.sf.eclipsecs.core.builder.Auditor.runAudit(Auditor.java:140) 	at net.sf.eclipsecs.core.builder.CheckstyleBuilder.handleBuildSelection(CheckstyleBuilder.java:307) 	at net.sf.eclipsecs.core.builder.CheckstyleBuilder.build(CheckstyleBuilder.java:173) 	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:833) 	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45) 	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:220) 	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:263) 	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:316) 	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45) 	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:319) 	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:371) 	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:392) 	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:154) 	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:244) 	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63) Caused by: com.puppycrawl.tools.checkstyle.api.CheckstyleException: TreeWalker is not allowed as a parent of LineLength Please review 'Parent Module' section for this Check in web documentation if Check is standard. 	at com.puppycrawl.tools.checkstyle.TreeWalker.setupChild(TreeWalker.java:147) 	at com.puppycrawl.tools.checkstyle.api.AutomaticBean.configure(AutomaticBean.java:198) 	at com.puppycrawl.tools.checkstyle.Checker.setupChild(Checker.java:467) 	... 18 more   --------------  Still not clear ??? see example - https://checkstyle.org/report_issue.html#How_to_report_a_bug  ATTENTION: FAILURE TO FOLLOW THE ABOVE TEMPLATE WILL RESULT IN THE ISSUE BEING CLOSED.","closed","","tslinardo","2019-11-16T00:02:00Z","2020-04-24T13:15:11Z"
"","7029","returnCount","``` /var/tmp $ javac YOUR_FILE.java #[[PLACE YOUR OUTPUT HERE]]  /var/tmp $ cat config.xml #[[PLACE YOUR OUTPUT HERE]]  /var/tmp $ cat YOUR_FILE.java #[[PLACE YOU OUTPUT HERE]]  /var/tmp $ RUN_LOCALE=""-Duser.language=en -Duser.country=US"" /var/tmp $ java $RUN_LOCALE -jar checkstyle-X.XX-all.jar -c config.xml YOUR_FILE.java #[[PLACE YOUR OUTPUT HERE]] ```  ---------------  Describe what you expect in detail.  --------------  Still not clear ??? see example - https://checkstyle.org/report_issue.html#How_to_report_a_bug  ATTENTION: FAILURE TO FOLLOW THE ABOVE TEMPLATE WILL RESULT IN THE ISSUE BEING CLOSED.","closed","","SessionBest","2019-08-29T08:28:14Z","2019-08-29T08:28:22Z"
"","7464","Token ""ENUM_DEF"" was not found in Acceptable tokens list in check","``` /var/tmp $ javac okhttp3/FakeProxySelector.java /var/tmp  ```  ``` /var/tmp $ cat ~/Projects/okhttp/checkstyle.xml // same as latest Google style. ```  https://github.com/checkstyle/checkstyle/blob/95defdd68df471f69b0749474c3b5b7a5e76b4f9/src/main/resources/google_checks.xml  ``` /var/tmp $ cat okhttp3/FakeProxySelector.java /*  * Copyright (C) 2009 The Android Open Source Project  *  * Licensed under the Apache License, Version 2.0 (the ""License"");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an ""AS IS"" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */ package okhttp3;  import java.io.IOException; import java.net.Proxy; import java.net.ProxySelector; import java.net.SocketAddress; import java.net.URI; import java.util.ArrayList; import java.util.Collections; import java.util.List;  public final class FakeProxySelector extends ProxySelector {   public final List proxies = new ArrayList();    public FakeProxySelector addProxy(Proxy proxy) {     proxies.add(proxy);     return this;   }    @Override public List select(URI uri) {     // Don't handle 'socket' schemes, which the RI's Socket class may request (for SOCKS).     return uri.getScheme().equals(""http"") || uri.getScheme().equals(""https"") ? proxies         : Collections.singletonList(Proxy.NO_PROXY);   }    @Override public void connectFailed(URI uri, SocketAddress sa, IOException ioe) {   } } ```  ``` /var/tmp $ RUN_LOCALE=""-Duser.language=en -Duser.country=US"" /var/tmp $ java $RUN_LOCALE -jar  ~/Downloads/checkstyle-8.28-all.jar  -c ~/Projects/okhttp/checkstyle.xml okhttp3/FakeProxySelector.java com.puppycrawl.tools.checkstyle.api.CheckstyleException: cannot initialize module TreeWalker - Token ""ENUM_DEF"" was not found in Acceptable tokens list in check com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck 	at com.puppycrawl.tools.checkstyle.Checker.setupChild(Checker.java:473) 	at com.puppycrawl.tools.checkstyle.api.AutomaticBean.configure(AutomaticBean.java:198) 	at com.puppycrawl.tools.checkstyle.Main.runCheckstyle(Main.java:396) 	at com.puppycrawl.tools.checkstyle.Main.runCli(Main.java:324) 	at com.puppycrawl.tools.checkstyle.Main.execute(Main.java:187) 	at com.puppycrawl.tools.checkstyle.Main.main(Main.java:124) Caused by: com.puppycrawl.tools.checkstyle.api.CheckstyleException: Token ""ENUM_DEF"" was not found in Acceptable tokens list in check com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck 	at com.puppycrawl.tools.checkstyle.TreeWalker.registerCheck(TreeWalker.java:228) 	at com.puppycrawl.tools.checkstyle.TreeWalker.setupChild(TreeWalker.java:140) 	at com.puppycrawl.tools.checkstyle.api.AutomaticBean.configure(AutomaticBean.java:198) 	at com.puppycrawl.tools.checkstyle.Checker.setupChild(Checker.java:468) 	... 5 more Checkstyle ends with 1 errors. ```","closed","","swankjesse","2020-01-12T02:56:16Z","2020-01-22T14:11:17Z"
"","7119","CustomImportOrder: no expected violations for empty line within import group","``` /var/tmp $ javac CustomImportOrder2.java ```  ``` /var/tmp $ cat config.xml ``` ```xml                              ```  ``` /var/tmp $ cat CustomImportOrder2.java ``` ```java package com.example;  import java.util.Arrays; import java.util.HashMap;  import java.util.LinkedList; // should warn import java.util.List;  class CustomImportOrder2 { } ```  ``` /var/tmp $ RUN_LOCALE=""-Duser.language=en -Duser.country=US"" /var/tmp $ java $RUN_LOCALE -jar checkstyle-8.24-all.jar \        -c config.xml CustomImportOrder2.java Starting audit... Audit done. ```  ---------------  The line commented with 'should warn' should trigger violations. because in Google style there is clear definition that no blank lines should be between imports in same group - https://checkstyle.org/styleguides/google-java-style-20180523/javaguide.html#s3.3.3-import-ordering-and-spacing  > If there are both static and non-static imports, a single blank line separates the two blocks. There are no other blank lines between import statements.","closed","approved,","gmshake","2019-09-29T11:24:33Z","2019-12-28T15:30:48Z"
"","7236","Indentation does not honor basicOffset in java conditional","``` /var/tmp $ cat config.xml ...                                                        ...  /var/tmp $ cat YOUR_FILE.java ... 3038        case PUT: 3039          if (request.hasCondition()) { 3040            metricsRegionServer.updateCheckAndPut(after - before); 3041          } else { 3042            metricsRegionServer.updatePut( 3043                region == null ? null : region.getRegionInfo().getTable(),after - before); 3044          } ...  /var/tmp $ RUN_LOCALE=""-Duser.language=en -Duser.country=US"" /var/tmp $ java $RUN_LOCALE -jar checkstyle-X.XX-all.jar -c config.xml YOUR_FILE.java ... ./hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RSRpcServices.java:3040:            metricsRegionServer.updateCheckAndPut(after - before);: 'if' child has incorrect indentation level 12, expected level should be 14. [Indentation] ./hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RSRpcServices.java:3042:            metricsRegionServer.updatePut(: 'else' child has incorrect indentation level 12, expected level should be 14. [Indentation] ... ```  ---------------  Apologies for not following the template exactly. This is a snippet from a [Pull Request](https://builds.apache.org/job/HBase-PreCommit-GitHub-PR/job/PR-775/1/artifact/out/diff-checkstyle-hbase-server.txt) over on [Apache HBase](https://github.com/apache/hbase).  Our configuration for `basicOffset=2` appears to not be honored within the conditional block. I would expect these 2-space indentation levels to be accepted by the checker. We're running an older version of checkstyle (8.11) but I've reproduced the bug all the way up through 8.23 using the [checkstyle-idea plugin](https://github.com/jshiell/checkstyle-idea). Our configuration is not accepted by checkstyle 8.24 or later, something we'll investigate separately.  --------------","closed","indentation,","ndimiduk","2019-10-30T18:23:41Z","2019-11-29T23:42:38Z"
"","7306","RequireThis false positive on method reference","``` /var/tmp $ cat config.xml                   	      /var/tmp $ cat RequireThisRegression.java import java.util.ArrayList; import java.util.List;  public class RequireThisRegression {      List add = new ArrayList();      void someMethod() {         List test = new ArrayList();         test.forEach(this.add::add);     }  }  /var/tmp $ java -jar checkstyle-8.27-all.jar -c config.xml RequireThisRegression.java Starting audit... [ERROR] /var/tmp/RequireThisRegression.java:10:32: Reference to instance variable 'add' needs ""this."". [RequireThis] Audit done. Checkstyle ends with 1 errors. ```  The point is if we disable `validateOnlyOverlapping` and have a property with the same name as some method we would like to use via method reference, the `RequireThis` check fails requesting a `this.` prefix for that method name instead of understanding that this one is a method reference. Works well with the previous `8.26` version.  Thanks","closed","approved,","artembilan","2019-12-04T19:02:01Z","2019-12-26T17:10:45Z"
"","7290","Add support for enhanced instanceof","``` $ cat TestClass.java public class TestClass {  {  	Object o = """"; 	if (o instanceof String s) { // jep 305 		System.out.println(s.toLowerCase()); 	}  } }  /var/tmp $ java  -jar checkstyle-8.20-all.jar -t TestClass.java com.puppycrawl.tools.checkstyle.api.CheckstyleException: IllegalStateException  occurred while parsing file TestClass.java Caused by: TestClass.java:4:26: expecting RPAREN, found 's' ``` Link to [JEP](https://openjdk.java.net/jeps/305) It is for java 14  https://docs.oracle.com/en/java/javase/14/docs/specs/patterns-instanceof-jls.html#jls-6.3.1  -------  UPDATE: here is copy of discussion that explain why selected final variant of AST.  [telegram-discussion.txt](https://github.com/checkstyle/checkstyle/files/4891267/telegram-discussion.txt)","closed","new feature,","strkkk","2019-11-29T07:11:00Z","2020-07-11T14:29:56Z"
"","7237","New check: AvoidEmptySuperConstructorCall","``` $ cat Test.java class Test { 	 	Test() { 		super(); // violation 		System.out.println(""hello""); 	}        Test(Object anyArg) { 		super(); // violation 	}        Test(Object anyArg, Object b) { 		super(1); // no violation 	}         class Nested {             Nested() {                super(); // violation             }         }  	 }  class Test2 extends java.util.ArrayList {     Test2() {         super(); // violation      }     Test2(Object anyArg) {         super(new HashSet()); // no violation      } }  $ cat config.xml                      ```  Violation at line with violation comment  Update from sevntu test cases: ``` public class InputUselessSuperCtorCallCheck1 {     public InputUselessSuperCtorCallCheck1()     {         super(); // violation     } } ```  ``` public class InputUselessSuperCtorCallCheck3 {     public InputUselessSuperCtorCallCheck3()     {         super(); // violation     }          public InputUselessSuperCtorCallCheck3(int i)     {         super(); // violation     } } ```  ``` public class InputUselessSuperCtorCallCheck4 extends java.lang.Object {     public class Inner     {         public Inner()         {             super(); // violation         }     } } ```  ``` public class InputUselessSuperCtorCallCheck5 {     private static class Base     {         public Base(int i)         {                      }     }          private static class Derived extends Base     {         public Derived()         {             super(2); // no violation         }     } } ```  ``` public class InputUselessSuperCtorCallCheck6 extends java.lang.Object {     public InputUselessSuperCtorCallCheck6() {         super(); // violation     } } ```  ``` public class InputUselessSuperCtorCallCheck7 {     class Base     {         public Base() {}                  public Base(int i) { }     }          class DerivedOne extends Base     {         public DerivedOne() {             super(); // violation         }                  public DerivedOne(int i) {             super(i);         }     }          class DerivedTwo extends Base     {         public DerivedTwo() {             super(); // violation         }                  protected DerivedTwo(int i) {             super(i);         }     } } ```","closed","","strkkk","2019-10-31T14:28:24Z","2019-12-11T03:07:17Z"
"","7443","CustomImportOrder doesn't handle groups correctly","``` $ cat config.xml                                                                                          $ cat TestClass.java import com.another.Hello;  import org.test.MyOrg;  $ RUN_LOCALE=""-Duser.language=en -Duser.country=US"" $ java $RUN_LOCALE -jar checkstyle-8.28-all.jar -c config.xml TestClass.java Starting audit... [ERROR] /home/daniel/git/checkstyle-test/TestClass.java:3: Extra separation in import group before 'org.test.MyOrg' [CustomImportOrder] Audit done. Checkstyle ends with 1 errors. ```  --------------- After upgrading to 8.28, the above configuration gives the error:  ``` [ERROR] /home/daniel/git/checkstyle-test/TestClass.java:3: Extra separation in import group before 'org.test.MyOrg' [CustomImportOrder] ``` The same configuration works when running checkstyle-8.27-all.jar. It seems that Checkstyle thinks the imports com.another.Hello and org.test.MyOrg is part of the same import group, which seems odd.  Possibly related to #7119  --------------","closed","","dannil","2020-01-04T14:45:22Z","2020-01-04T18:24:47Z"
"","7940","Errors parsing new Java-14 switch statements/expressions","[NI.txt](https://github.com/checkstyle/checkstyle/files/4365163/NI.txt) Name of affected check:  Not Applicable -- issue is with parsing Java-14.  ------------------------ Example code builds under Java-14 ------------------------  [redacted]$ cat __javac.sh #!/bin/bash ###########  JAVAC=""${DJAVA_HOME}/bin/javac -Xlint -Xmaxerrs 1000""  echo echo =========================== echo doing javac: $(${JAVAC} --version) echo =========================== find . -type f -name '*java' | xargs ${JAVAC}   [redacted]$ ls -1 SwitchTest.java __checkstyle.sh __javac.sh  [redacted]$ ./__javac.sh  =========================== doing javac: javac 14 ===========================  [redacted]$ ls -1 SwitchTest.class SwitchTest.java __checkstyle.sh __javac.sh   ------------------------ Here is code -- containing examples of new Java-14 switch statements ------------------------  [redacted]$ cat SwitchTest.java public final class SwitchTest {    private SwitchTest()    {       // Not allowed    }     static private void howManyS(int k)    {       switch (k)       {          case 1  -> System.out.println(""one"");          case 2  -> System.out.println(""two"");          default -> System.out.println(""many"");       }    }     static void howManyE(int k)    {       System.out.println(          switch (k)          {             case  1 -> ""one"";             case  2 -> ""two"";             default -> ""many"";          }       );    }     static void howManyY(int k)    {       System.out.println(          switch (k)          {             case  1 -> ""one"";             case  2 -> ""two"";             default ->                 {                   System.out.println(""yield case"");                   yield ""many"";                }          }       );    }     public static void main(String[] args)    {       howManyS(1);       howManyS(2);       howManyS(3);        howManyE(1);       howManyE(2);       howManyE(3);        howManyY(1);       howManyY(2);       howManyY(3);    } }  ------------------------ Here is checkstyle 8.30 output, using the default google configuration file ------------------------   [redacted]$ cat __checkstyle.sh  #!/bin/bash ###########  XCK=""${DJAVACMD} -classpath ${CHECKSTYLE_JAR} com.puppycrawl.tools.checkstyle.Main -c /google_checks.xml""  echo echo =========================== echo doing checkstyle: $(${XCK} --version) echo =========================== find . -type f -name '*java' | xargs ${XCK} ""$@"" echo  [redacted]$ ./__checkstyle.sh   =========================== doing checkstyle: Checkstyle version: 8.30 =========================== Starting audit... com.puppycrawl.tools.checkstyle.api.CheckstyleException: Exception was thrown while processing ./SwitchTest.java 	at com.puppycrawl.tools.checkstyle.Checker.processFiles(Checker.java:304) 	at com.puppycrawl.tools.checkstyle.Checker.process(Checker.java:216) 	at com.puppycrawl.tools.checkstyle.Main.runCheckstyle(Main.java:400) 	at com.puppycrawl.tools.checkstyle.Main.runCli(Main.java:324) 	at com.puppycrawl.tools.checkstyle.Main.execute(Main.java:187) 	at com.puppycrawl.tools.checkstyle.Main.main(Main.java:124) Caused by: com.puppycrawl.tools.checkstyle.api.CheckstyleException: IllegalStateException occurred while parsing file /home/[redacted]/./SwitchTest.java. 	at com.puppycrawl.tools.checkstyle.JavaParser.parse(JavaParser.java:105) 	at com.puppycrawl.tools.checkstyle.TreeWalker.processFiltered(TreeWalker.java:159) 	at com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck.process(AbstractFileSetCheck.java:85) 	at com.puppycrawl.tools.checkstyle.Checker.processFile(Checker.java:329) 	at com.puppycrawl.tools.checkstyle.Checker.processFiles(Checker.java:291) 	... 5 more Caused by: java.lang.IllegalStateException: /home/[redacted]/./SwitchTest.java:12:15: unexpected token: 1 	at com.puppycrawl.tools.checkstyle.JavaParser$1.reportError(JavaParser.java:93) 	at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.typeDefinition(GeneratedJavaRecognizer.java:411) 	at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.compilationUnit(GeneratedJavaRecognizer.java:202) 	at com.puppycrawl.tools.checkstyle.JavaParser.parse(JavaParser.java:99) 	... 9 more Caused by: /home/[redacted]/./SwitchTest.java:12:15: unexpected token: 1 	at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.expression(GeneratedJavaRecognizer.java:4923) 	at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.aCase(GeneratedJavaRecognizer.java:6205) 	at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.casesGroup(GeneratedJavaRecognizer.java:5760) 	at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.traditionalStatement(GeneratedJavaRecognizer.java:5463) 	at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.statement(GeneratedJavaRecognizer.java:4397) 	at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.compoundStatement(GeneratedJavaRecognizer.java:4063) 	at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.field(GeneratedJavaRecognizer.java:3453) 	at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.classBlock(GeneratedJavaRecognizer.java:2643) 	at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.classDefinition(GeneratedJavaRecognizer.java:634) 	at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.typeDefinitionInternal(GeneratedJavaRecognizer.java:556) 	at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.typeDefinition(GeneratedJavaRecognizer.java:389) 	... 11 more Checkstyle ends with 1 errors.","closed","","eant60","2020-03-22T12:04:34Z","2020-03-31T07:30:33Z"
"","7170","Fix JitCI build","[JitCI(jitpack)](https://jitci.com) build fails with error ``` 4605.	[ERROR]   LocalizedMessageTest.testCountryIsValid:74 Invalid country 4606.	Expected: a collection containing """" 4607.	     but: was ""AD"", was ""AE"", .... , was ""ZW"" ``` This is a regression of #7129 Jitci build environment doesn't have a locale configured, that's why. It is strange, but it is legal. The tests should be aware of this.","closed","CI,","pbludov","2019-10-07T05:56:07Z","2019-10-27T22:35:25Z"
"","7301","Fix Issues left from mobile design","@romani according to your [comment](https://github.com/checkstyle/checkstyle/issues/7083#issuecomment-559892918), here is the issue to the remaining minors. I'll take a look at it.  > non blocking regressions (can be fixed in separate PRs): extra line wrapping after small images  ![image](https://user-images.githubusercontent.com/812984/69891951-5143cd80-12b5-11ea-9b74-20278b7c90d3.png) >  extra space (if we try to make rendering awesome, but really ... not a problem): ![image](https://user-images.githubusercontent.com/812984/69891985-aaabfc80-12b5-11ea-96e8-83bfe4b9ffe7.png)","closed","miscellaneous,","jo2","2019-12-03T10:39:41Z","2019-12-10T20:20:55Z"
"","7146","LineLength checker provides incorrect line length","/var/tmp $ javac MyClass.java ```java  public class MyClass {  	private String lineLengthTest = ""This is a 120 line length test -------------------------------------------------"";  } ```  /var/tmp $ cat config.xml ```xml     	  	 		 		 	   ``` ```bash /var/tmp $ RUN_LOCALE=""-Duser.language=en -Duser.country=US"" /var/tmp $ java $RUN_LOCALE -jar checkstyle-8.25-all.jar -c config.xml MyClass.java /var/tmp $ java -jar checkstyle-8.25-all.jar -c config.xml MyClass.java   Starting audit... [ERROR] /var/tmp/MyClass.java:3: Line is longer than 121 characters (found 123). [LineLength] Audit done. Checkstyle ends with 1 errors. ```  ---------------  The actual line length is 120 whereas checkstyle reports 123 and reports a false positive error.  Since LineLength was moved out of the TreeWalker I experience this. Works fine with version 8.23.  It's blocking me from upgrading as it impacts tons of project files.  --------------","closed","","gdinant","2019-10-03T06:31:07Z","2019-10-03T06:48:23Z"
"","7035","Issue #7033: Avoid Whitebox.setInternalState which is no longer supported in OpenJDK 12","- expose `FileContents.javadocComments` through package-protected getter in order to make code testable - remove `MainFrameModelPowerTest.testOpenFileWithUnknownParseMode` because it tests a language construct - simplify overly complex `TokenUtilTest.testTokenValueIncorrect2`  close #7033","closed","","krichter722","2019-08-30T17:32:25Z","2022-01-10T23:22:52Z"
"","7517","Can we have an xsd for the checkstyle configuration xml file ?","**Use Case :**  I'm planning to introduce custom checks for multiple users, in which each project owner can define their own set of checks. I also have a set of default set of checks that needs to run for every project. During the run time of Checkstyle, I want to merge the project specific checks and the default checks. Having a XSD can help me validate if the merged XML configuration file is formed correctly or not. Since some of the checks go inside of the Checker module and many checks go inside the TreeWalker module, we need to correctly place the checks, so that the run doesn't fail at all after creating a wrong merged XML.  **Question :** Is there any XSD available for validating ? Or may be an API within Checkstyle which can do the merge ? I've seen the DTD that is present, but that doesn't help in completely validating the entire configuration file.","open","discussion ongoing,","debashisdeb","2020-01-29T09:25:19Z","2020-11-14T18:44:29Z"
"","7910","Update doc for FinalClass","**Update doc for FinalClass #7609** Adding two examples to config_design.xml for FinalClass   Example 1:   sachin@sachin-Inspiron-5559:~/Desktop/java_programs$ javac Test.java sachin@sachin-Inspiron-5559:~/Desktop/java_programs$ java Test OK sachin@sachin-Inspiron-5559:~/Desktop/java_programs$ cat Test.java class Parent{ Parent(){ }} class Test { public static void main(String args[]){ Parent s = new Parent(); System.out.println(""OK""); }}//OK   Example 2: sachin@sachin-Inspiron-5559:~/Desktop/java_programs$ javac Test.java Test.java:6: error: Parent() has private access in Parent Parent s = new Parent();            ^ 1 error sachin@sachin-Inspiron-5559:~/Desktop/java_programs$ cat Test.java class Parent{ private Parent(){ }} class Test { public static void main(String args[]){ Parent s = new Parent(); System.out.println(""violation""); }}// violation, error: Parent() has private access in Parent sachin@sachin-Inspiron-5559:~/Desktop/java_programs$   i am beginner to this system , if i made any mistakes please guide me.","closed","awaiting changes,","maheshkulkarni17","2020-03-19T21:18:20Z","2020-11-09T00:31:48Z"
"","7435","Is there a parser tool which shows the token tree?","**Simple question:** Is there some tool where I can paste a code block and see how it parses into a tree of checkstyle tokens?  This would help a lot when trying to create custom Xpath filters or add the right tokens as properties to some checks.  **Example: [[source]](https://checkstyle.sourceforge.io/apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ANNOTATION)**  ```java @MyAnnotation(someField1 = ""Hello"", someField2 = @SomeOtherAnnotation) ```  would parse as:  ``` +--ANNOTATION      |      +--AT (@)      +--IDENT (MyAnnotation)      +--LPAREN (()      +--ANNOTATION_MEMBER_VALUE_PAIR          |          +--IDENT (someField1)          +--ASSIGN (=)          +--ANNOTATION              |              +--AT (@)              +--IDENT (SomeOtherAnnotation)      +--ANNOTATION_MEMBER_VALUE_PAIR          |          +--IDENT (someField2)          +--ASSIGN (=)          +--STRING_LITERAL (""Hello"")      +--RPAREN ()) ```  By the way, there is a mistake in that example: `someField1` and `someField2` values are swapped in the parser output.","closed","","anddero","2020-01-02T09:13:07Z","2020-01-02T16:29:21Z"
"","7807","Issue #7638: Update doc for EqualsHashCode","**Issue #7638** EqualsHashCode Check Doc Updation. ![up](https://user-images.githubusercontent.com/38028330/76461293-a4c1cd80-6405-11ea-86f4-0ffd270ef944.png)  **Output of Example:**  ``` kaustubh@dxtk:~$ cat Test.xml                         kaustubh@dxtk:~$ cat Test.java public static class Example1 {     public int hashCode() {         // code     }     public boolean equals(String o) { // violation, overloaded implementation of 'equals'         // code     } } public static class Example2 {     public boolean equals(Object o) { // violation, no 'hashCode'         // code     }     public boolean equals(String o) {         // code     } } public static class Example3 {     public int hashCode() {         // code     }     public boolean equals(Object o) { // OK         // code     }     public boolean equals(String o) {         // code     } } public static class Example4 {     public int hashCode() {         // code     }     public boolean equals(java.lang.Object o) { // OK         // code    } } public static class Example5 {     public static int hashCode(int i) {         // code     }     public boolean equals(Object o) { // violation, overloaded implementation of 'hashCode'         // code     } } public static class Example6 {     public int hashCode() { // violation, overloaded implementation of 'equals'         // code     }     public static boolean equals(Object o, Object o2) {         // code     } }   kaustubh@dxtk:~$ java -jar checkstyle-8.30-all.jar -c Test.xml Test.java Starting audit... [ERROR] /home/kaustubh/Test.java:2:5: Definition of 'hashCode()' without corresponding definition of 'equals()'. [EqualsHashCode] [ERROR] /home/kaustubh/Test.java:11:5: Definition of 'equals()' without corresponding definition of 'hashCode()'. [EqualsHashCode] [ERROR] /home/kaustubh/Test.java:44:5: Definition of 'equals()' without corresponding definition of 'hashCode()'. [EqualsHashCode] [ERROR] /home/kaustubh/Test.java:50:5: Definition of 'hashCode()' without corresponding definition of 'equals()'. [EqualsHashCode] Audit done. Checkstyle ends with 4 errors. ``` @strkkk Please review my pull request and suggest necessary changes. I have taken these examples from [https://github.com/checkstyle/checkstyle/blob/master/src/test/resources/com/puppycrawl/tools/checkstyle/checks/coding/equalshashcode/InputEqualsHashCodeEqualsParameter.java](url)","closed","","DXTkastb","2020-03-08T23:06:19Z","2020-03-12T12:57:21Z"
"","7202","Add support summary Javadoc tag in SummaryJavadoc","$ javac TestClass.java (no output)  $ cat TestConfig.xml ```                        ```  $ cat TestClass.java ``` package test;  /**    * {@summary New JDK10 tag summary here}  */ public interface TestClass { } ```  $ javadoc TestClass.java ``` Loading source file TestClass.java... Constructing Javadoc information... Standard Doclet version 11.0.4 Building tree for all the packages and classes... Generating ./test/TestClass.html... Generating ./test/package-summary.html... Generating ./test/package-tree.html... Generating ./constant-values.html... Building index for all the packages and classes... Generating ./overview-tree.html... Generating ./index-all.html... Building index for all classes... Generating ./allclasses-index.html... Generating ./allpackages-index.html... Generating ./deprecated-list.html... Building index for all classes... Generating ./allclasses.html... Generating ./allclasses.html... Generating ./index.html... Generating ./help-doc.html... ```  $ RUN_LOCALE=""-Duser.language=en -Duser.country=US"" $ java $RUN_LOCALE -jar checkstyle-8.25-all.jar -c TestConfig.xml TestClass.java ``` Starting audit... [ERROR] /home/pbludov/src/tmp/TestClass.java:3: Summary javadoc is missing. [SummaryJavadoc] Audit done. Checkstyle ends with 1 errors. ```  Expected no errors here. JDK 10 introduces a Javadoc tag `{@summary}`: https://dzone.com/articles/jdk-10s-summary-javadoc-tag  _Originally posted by @romani in https://github.com/checkstyle/checkstyle/pull/7046#issuecomment-541274735_  --------  Code with new style and old style for summary.  ``` $ java -version openjdk version ""11"" 2018-09-25 OpenJDK Runtime Environment 18.9 (build 11+28) OpenJDK 64-Bit Server VM 18.9 (build 11+28, mixed mode)  $ cat Test.java   public class Test { /**  * {@summary first sentence is normally the summary.  * Use of html tags:  * {@throws error}  *   * Item one.  * Item two.  * }  */     public void foo() {       a=b;     } /**  * first sentence is normally the summary.  * Use of html tags:  *   * Item one.  * Item two.  *   */     public void foo2() {       a=b;     } }  $ javadoc Test.java Loading source file Test.java... Constructing Javadoc information... Standard Doclet vers .......  ```  ![image](https://user-images.githubusercontent.com/812984/111923246-6ff64680-8a5b-11eb-9473-43c7996a02f1.png)  Seems whole, `{@summary }` Inline tag can be can put inside paragraph HTML tag. Whole `{@summary }` is our target of validation as it placed whole to summary description of method.","closed","new feature,","pbludov","2019-10-15T19:24:41Z","2021-05-14T04:05:56Z"
"","7681","ISSUE #7669 : Update doc for MultipleVariableDeclarations","#7669","closed","awaiting changes,","ghost","2020-02-27T13:24:29Z","2020-09-07T08:54:01Z"
"","7942","Issue #7565: update doc for AbstractClassName","#7565  **Website Look** ![Screenshot from 2020-04-15 21-09-16](https://user-images.githubusercontent.com/42895397/79357644-f0641b80-7f5d-11ea-9dc6-47847df2d79d.png) ![Screenshot from 2020-04-15 21-09-21](https://user-images.githubusercontent.com/42895397/79357656-f35f0c00-7f5d-11ea-806a-b987910f823c.png)    **Non Default Config**  pk@pk:~/Desktop/check$ cat config.xml  ```                                               ```  pk@pk:~/Desktop/check$ cat Test.java ```  abstract class GeneratorFirstClass{} abstract class SecondClass{} class GeneratorThirdClass{} class FourthClass{}  ``` pk@pk:~/Desktop/check$ java -jar checkstyle-8.30-all.jar -c config.xml Test.java Starting audit... [ERROR] /home/pk/Desktop/check/Test.java:2:1: Name 'SecondClass' must match pattern '^Generator.+$'. [AbstractClassName] [ERROR] /home/pk/Desktop/check/Test.java:3:1: Class 'GeneratorThirdClass' must be declared as 'abstract'. [AbstractClassName] Audit done. Checkstyle ends with 2 errors.   pk@pk:~/Desktop/check$ cat config.xml  ```                                               ``` pk@pk:~/Desktop/check$ cat Test.java ``` abstract class AbstractFirstClass{} abstract class SecondClass{} class AbstractThirdClass{} class FourthClass{} ``` pk@pk:~/Desktop/check$ java -jar checkstyle-8.30-all.jar -c config.xml Test.java Starting audit... [ERROR] /home/pk/Desktop/check/Test.java:2:1: Name 'SecondClass' must match pattern '^Abstract.+$'. [AbstractClassName] Audit done. Checkstyle ends with 1 errors.  pk@pk:~/Desktop/check$ cat config.xml ```                                               ``` pk@pk:~/Desktop/check$ cat Test.java ``` abstract class AbstractFirstClass{} abstract class SecondClass{} class AbstractThirdClass{} class FourthClass{} ``` pk@pk:~/Desktop/check$ java -jar checkstyle-8.30-all.jar -c config.xml Test.java Starting audit... [ERROR] /home/pk/Desktop/check/Test.java:3:1: Class 'AbstractThirdClass' must be declared as 'abstract'. [AbstractClassName] Audit done. Checkstyle ends with 1 errors.   **Default Config**  pk@pk:~/Desktop/check$ cat config.xml ```                                  ``` pk@pk:~/Desktop/check$ cat Test.java ``` abstract class AbstractFirstClass{} abstract class SecondClass{} class AbstractThirdClass{} class FourthClass{} ``` pk@pk:~/Desktop/check$ java -jar checkstyle-8.30-all.jar -c config.xml Test.java Starting audit... [ERROR] /home/pk/Desktop/check/Test.java:2:1: Name 'SecondClass' must match pattern '^Abstract.+$'. [AbstractClassName] [ERROR] /home/pk/Desktop/check/Test.java:3:1: Class 'AbstractThirdClass' must be declared as 'abstract'. [AbstractClassName] Audit done. Checkstyle ends with 2 errors.","closed","","pkpale","2020-03-22T16:54:35Z","2020-05-28T14:15:24Z"
"","7857","Issue #7565: Added config examples for AbstractClassName","#7565  ![Screenshot from 2020-03-16 00-26-30](https://user-images.githubusercontent.com/42895397/76708553-a3521700-671d-11ea-8a00-3507f3539f52.png)","closed","","pkpale","2020-03-15T19:02:56Z","2020-03-15T19:06:35Z"
"","7858","Issue #7565: Added config examples for AbstractClassName","#7565   Website Look: ![Screenshot from 2020-03-20 22-55-18](https://user-images.githubusercontent.com/42895397/77189850-3e703580-6afe-11ea-95b2-363eddd4dbfc.png) ![Screenshot from 2020-03-20 22-55-23](https://user-images.githubusercontent.com/42895397/77189888-4cbe5180-6afe-11ea-9c69-9cade6e23b65.png)   **Default Config Example** pk@pk:~/Desktop/check$ cat config.xml  ```                          ``` pk@pk:~/Desktop/check$ cat Test.java ```  abstract class AbstractFirstClass{} abstract class SecondClass{} class AbstractThirdClass{} class FourthClass{}  ``` pk@pk:~/Desktop/check$ java -jar checkstyle-8.30-all.jar -c config.xml Test.java Starting audit... [ERROR] /home/pk/Desktop/check/Test.java:2:1: Name 'SecondClass' must match pattern '^Abstract.+$'. [AbstractClassName] [ERROR] /home/pk/Desktop/check/Test.java:3:1: Class 'AbstractThirdClass' must be declared as 'abstract'. [AbstractClassName] Audit done. Checkstyle ends with 2 errors.  **Non-Default Config Examples**  pk@pk:~/Desktop/check$ cat config.xml  ```                                               ```  pk@pk:~/Desktop/check$ cat Test.java ```  abstract class AbsFirstClass{} abstract class SecondClass{} class AbstThirdClass{} class FourthClass{}  ``` pk@pk:~/Desktop/check$ java -jar checkstyle-8.30-all.jar -c config.xml Test.java Starting audit... [ERROR] /home/pk/Desktop/check/Test.java:1:1: Name 'AbsFirstClass' must match pattern '^Abst.+$'. [AbstractClassName] [ERROR] /home/pk/Desktop/check/Test.java:2:1: Name 'SecondClass' must match pattern '^Abst.+$'. [AbstractClassName] [ERROR] /home/pk/Desktop/check/Test.java:3:1: Class 'AbstThirdClass' must be declared as 'abstract'. [AbstractClassName]  pk@pk:~/Desktop/check$ cat config.xml  ```                                                ``` pk@pk:~/Desktop/check$ cat Test.java ``` abstract class AbstractFirstClass{} abstract class SecondClass{} class AbstractThirdClass{} class FourthClass{}  ``` pk@pk:~/Desktop/check$ java -jar checkstyle-8.30-all.jar -c config.xml Test.java Starting audit... [ERROR] /home/pk/Desktop/check/Test.java:2:1: Name 'SecondClass' must match pattern '^Abstract.+$'. [AbstractClassName] Audit done. Checkstyle ends with 1 errors.  Audit done. Checkstyle ends with 3 errors.  pk@pk:~/Desktop/check$ cat config.xml ```                                                ``` pk@pk:~/Desktop/check$ cat Test.java ``` abstract class AbstractFirstClass{} abstract class SecondClass{} class AbstractThirdClass{} class FourthClass{}  ``` pk@pk:~/Desktop/check$ java -jar checkstyle-8.30-all.jar -c config.xml Test.java Starting audit... [ERROR] /home/pk/Desktop/check/Test.java:3:1: Class 'AbstractThirdClass' must be declared as 'abstract'. [AbstractClassName] Audit done. Checkstyle ends with 1 errors.","closed","","pkpale","2020-03-15T19:11:18Z","2020-03-22T12:22:09Z"
"","7529","Issue #7518: refactor line comparison","#7518","closed","","strkkk","2020-02-03T03:26:56Z","2020-02-07T02:58:12Z"
"","7397","doc: add info about -b cli option to documentation","#7396","closed","","strkkk","2019-12-24T10:21:26Z","2021-01-29T11:42:07Z"
"","7387","Issue #7363: add AvoidNoArgumentSuperConstructorCallCheck","#7363  Contrib PR - https://github.com/checkstyle/contribution/pull/425  ~Report https://strkkk.github.io/checkstyle/7363/index.html~ Updated report https://strkkk.github.io/checkstyle/7363_2/index.html Report for spring integration https://strkkk.github.io/checkstyle/7363_3/index.html","closed","","strkkk","2019-12-17T15:46:04Z","2020-06-25T11:50:41Z"
"","7328","Issue #7330: Appveyor is not failing even build is failed","#7330  testing of appveyor ability to fail build   detected at https://github.com/checkstyle/checkstyle/pull/7193#issuecomment-541426258","closed","","romani","2019-12-06T22:17:10Z","2019-12-07T17:36:59Z"
"","7315","Issue #7306: fix RequireThis for method reference","#7306  Report https://strkkk.github.io/checkstyle/7306/index.html  Report for spring-integration https://strkkk.github.io/checkstyle/7306_2/index.html","closed","","strkkk","2019-12-05T08:37:35Z","2021-01-29T11:42:06Z"
"","7266","Issue #7267: fix for eclipse and openjdk error in documentation caused by some previous commit","#7267   fix for https://travis-ci.org/checkstyle/checkstyle/jobs/612891700#L547  ![image](https://user-images.githubusercontent.com/812984/68999741-eee0db00-0879-11ea-9201-6d0a31b64a76.png)  ![image](https://user-images.githubusercontent.com/812984/69000070-ca3b3200-087e-11ea-8381-05e4e7cfd4e8.png)","closed","","romani","2019-11-16T22:02:49Z","2019-11-17T01:21:11Z"
"","7279","Issue #7117: fix package info javadoc check","#7117  report #2 https://strkkk.github.io/checkstyle/7117_2/index.html","closed","","strkkk","2019-11-22T11:36:40Z","2019-12-04T05:32:38Z"
"","7285","Issue #7103: add multiline strings parsing","#7103 add support for multiline strings  Not sure what kind of report is necessary for such change","closed","","strkkk","2019-11-25T09:43:56Z","2021-01-29T11:43:45Z"
"","7227","Issue #7077: correct docs for UnnecessarySemicolonAfterTypeMemberDeclaration","#7077","closed","","strkkk","2019-10-25T13:27:15Z","2021-01-29T11:42:02Z"
"","7076","Issue #7075: appveyor.bat is changed right after clone of repo of github","#7075","closed","","romani","2019-09-19T13:04:29Z","2019-09-20T12:59:09Z"
"","7069","Issue #7066: correct RequireThis for expression cases","#7066   Report: https://strkkk.github.io/7066_2/index.html","closed","","strkkk","2019-09-16T15:59:21Z","2021-01-29T11:41:25Z"
"","7034","Issue #7040: spotbugs is not executed in build process","#7040  Add exclusions to spotbugs-exclude.xml for Files.newInputStream which can be ignored  I don't know why this doesn't fail on CI, but it blocks usage of `mvn clean install` locally. The messages don't reveal any issues and can be ignored.","closed","","krichter722","2019-08-30T17:17:30Z","2019-09-30T13:02:42Z"
"","7037","Issue #7032: skip test if file cannot be set to not-readable","#7032 quick fix to skip test if `setReadable(false)` returns false.","closed","","strkkk","2019-09-02T08:12:56Z","2021-01-29T11:41:29Z"
"","7090","Issue #7023: include all commits for CI checks between head and master","#7023","closed","","rnveach","2019-09-22T21:20:57Z","2019-09-27T01:13:45Z"
"","7022","Issue #7021: add test to run sun_checks.xml","#7021  there are bunch of executions with ""/google_checks.xml"" so I think it is ok to skip it.","closed","","romani","2019-08-26T15:09:29Z","2019-08-26T22:57:15Z"
"","7013","Issue #7012: fix Japanese translation","#7012  This pull request fixes Japanese translation (contains tweak for consistency).","closed","","shirayuki","2019-08-24T05:27:28Z","2019-08-24T13:17:08Z"
"","7025","Issue #6660: add xpath evaluation to cli","#6660","closed","","strkkk","2019-08-28T08:52:40Z","2021-01-29T11:41:27Z"
"","7093","config: after fix of #6558 appveyor should test changes in .gitattributes file","#6558","closed","","romani","2019-09-23T05:26:33Z","2019-09-24T14:56:19Z"
"","7457","Issue #6480: Add AvoidDoubleBraceInitializationCheck","#6480 Added check  Report: https://strkkk.github.io/checkstyle/6480/index.html Config PR: https://github.com/checkstyle/contribution/pull/443","closed","","strkkk","2020-01-10T13:44:26Z","2021-01-29T11:43:48Z"
"","7536","Issue #6104: fix GenericWhitespaceCheck for ctor calls","#6104   Report https://strkkk.github.io/checkstyle/6104/index.html Report after update https://strkkk.github.io/checkstyle/6104_2/index.html","closed","","strkkk","2020-02-06T02:46:51Z","2020-02-11T18:38:14Z"
"","7550","Issue #5832: add javadoc and xdoc example for LambdaParameterName","#5832","closed","","0blivious","2020-02-16T10:44:39Z","2020-02-18T12:02:30Z"
"","7539","Issue #5832: add javadoc and xdoc Example for ParameterName","#5832","closed","","0blivious","2020-02-08T07:07:21Z","2020-02-10T13:11:39Z"
"","7530","Issue #5832: add javadoc and xdoc Example for StaticVariableName","#5832","closed","","0blivious","2020-02-03T13:58:46Z","2020-02-07T13:04:58Z"
"","7525","Issue #5832: Add javadoc and xdoc Example for TypeName","#5832","closed","","0blivious","2020-01-31T15:39:39Z","2020-02-02T15:54:02Z"
"","7169","Issue #5060: activate eclipse's rawTypeReference and uncheckedTypeOperation","#5060","closed","","romani","2019-10-06T22:09:08Z","2019-10-07T01:49:08Z"
"","7251","Issue #4763: fix empty statement for comment under package","#4763   Old report [with regression false positive] https://strkkk.github.io/checkstyle/4763/index.html  New report [without false positive] https://strkkk.github.io/checkstyle/4763_2/index.html","closed","","strkkk","2019-11-12T16:40:17Z","2019-12-20T18:32:03Z"
"","7500","Issue #4074: fix overlap between lf and crlf at file end","#4074  Report https://strkkk.github.io/checkstyle/4074/index.html Report v2 https://strkkk.github.io/checkstyle/4074_2/index.html","closed","","strkkk","2020-01-21T15:41:39Z","2020-01-30T23:49:34Z"
"","7975","Issue #7623: Update doc for NoLineWrap","#### Fixes #7623 ![1](https://user-images.githubusercontent.com/43749360/77826774-6a5f6c80-7137-11ea-8e49-0545edddb5c1.PNG) ![2](https://user-images.githubusercontent.com/43749360/77826775-6b909980-7137-11ea-9bc4-a8300d06fe25.PNG)   Default examples:  ``` $ cat config.xml                  $ cat test.java  package com.puppycrawl.tools.checkstyle. //violation 	checks.whitespace;  import java.lang.Object; // OK import java.lang. // violation 	Integer;  import static java.math. // violation 	BigInteger.TEN;  $ java -jar checkstyle-8.30-all.jar -c config.xml test.java  Starting audit... [ERROR] /home/shrey/Desktop/CheckstyleJar/test.java:1: package statement should not be line-wrapped. [NoLineWrap] [ERROR] /home/shrey/Desktop/CheckstyleJar/test.java:5: import statement should not be line-wrapped. [NoLineWrap] [ERROR] /home/shrey/Desktop/CheckstyleJar/test.java:8: import statement should not be line-wrapped. [NoLineWrap] Audit done. Checkstyle ends with 3 errors. ```  ``` $ cat test2.java  package com.puppycrawl.tools.checkstyle.checks.coding; // OK  import java.lang. // violation 	Boolean;  import static java.math.BigInteger.ONE; // OK   $ java -jar checkstyle-8.30-all.jar -c config.xml test2.java   Starting audit... [ERROR] /home/shrey/Desktop/CheckstyleJar/test2.java:3: import statement should not be line-wrapped. [NoLineWrap] Audit done. Checkstyle ends with 1 errors. ```  Non-default example for just import statements: ``` $ cat config2.xml                 	         s  $ cat test3.java  package com.puppycrawl. // OK 	tools.checkstyle.checks;  import java.io.*; // OK import java.lang. // violation 	Boolean;  import static java.math. // OK 	BigInteger.ZERO;  $ java -jar checkstyle-8.30-all.jar -c config2.xml test3.java  Starting audit... [ERROR] /home/shrey/Desktop/CheckstyleJar/test3.java:5: import statement should not be line-wrapped. [NoLineWrap] Audit done. Checkstyle ends with 1 errors.  ```  Non-default example for class, method and constructor definitions: ``` $ cat config3.xml                              $ cat test4.java  public class // violation, class definiton not wrapped in a single line   Foo {    public Foo() { // OK   }    public static void // violation, method definition not wrapped in a single line     doSomething() {   } }  public class Bar { // OK    public // violation, constructor definition not wrapped in a single line     Bar() {   }    public int fun() { // OK   } }  $ java -jar checkstyle-8.30-all.jar-c config3.xml test4.java  Starting audit... [ERROR] /home/shrey/Desktop/CheckstyleJar/test4.java:1: CLASS_DEF statement should not be line-wrapped. [NoLineWrap] [ERROR] /home/shrey/Desktop/CheckstyleJar/test4.java:7: METHOD_DEF statement should not be line-wrapped. [NoLineWrap] [ERROR] /home/shrey/Desktop/CheckstyleJar/test4.java:14: CTOR_DEF statement should not be line-wrapped. [NoLineWrap] Audit done. Checkstyle ends with 3 errors. ```","closed","","sulkykookie","2020-03-28T08:56:46Z","2020-03-30T09:51:01Z"
"","7714","Issue: #7697 update doc for RegexpSingleline","#### Description This fixes #7697  ![Screenshot from 2020-03-29 20-59-39](https://user-images.githubusercontent.com/35211477/77853159-4a47b000-7200-11ea-9fcd-475f12a42520.png) ![2](https://user-images.githubusercontent.com/35211477/77253136-7d2cf980-6c7e-11ea-9210-3888a4b360ba.png) ![3](https://user-images.githubusercontent.com/35211477/77253138-7f8f5380-6c7e-11ea-8cc6-5de00918fd9c.png)    #### Output of default example: ``` $ cat config.xml                                                    $ cat MyClass.java class MyClass {     void myFunction() {         try{             doSomething();         } catch (Exception e) {             System.exit(1); // OK, as only there is only one occurrence.         }      }     void doSomething() {}; }  $ java -jar checkstyle-8.29-all.jar -c config.xml MyClass.java Starting audit... Audit done.  $ cat MyClass.java   class MyClass {     void myFunction() {         try {             doSomething();             System.exit(0);         } catch (Exception e) {             System.exit(1); // violation, as there are more than one occurrence.         }     }     void doSomething(){}; }  $ java -jar .\checkstyle-8.31-SNAPSHOT-all.jar -c .\config.xml .\MyClass.java    Starting audit...    [ERROR] F:\FY\gosc\checkstyle\MyClass.java:7: Line matches the illegal pattern 'System.exit\('.     [RegexpSingleline]    Audit done.    Checkstyle ends with 1 errors.   ```  #### Output of default example: ``` $ cat config.xml                                                     $ cat MyClass.java /** * This file is copyrighted under CC. // Ok, as the file contains a copyright statement. */ class MyClass {  }  $ java -jar checkstyle-8.29-all.jar -c config.xml MyClass.java Starting audit... Audit done.  $ cat MyClass.java /** // violation, as the file doesn't contain a copyright statement. * MyClass as a configuration example. */ class MyClass {  }  java -jar checkstyle-8.29-all.jar -c config.xml MyClass.java Starting audit... [ERROR] MyClass.java:1: File does not contain at least 1 matches for pattern 'This file is copyrighted'. [RegexpSingleline] Audit done. Checkstyle ends with 1 errors.   ``` #### Output of example: ``` $ cat config.xml                                                                                        $ cat mysql.sql /*  AP 2.0 License. // Ok, Check ignores the case of the term. */ CREATE DATABASE MyDB;     $ java -jar checkstyle-8.29-all.jar -c config.xml mysql.sql Starting audit... Audit done.  $ cat mysql.sql /* // violation, file doesn't contain the term.  Example sql file. */ CREATE DATABASE MyDB;  $ java -jar checkstyle-8.29-all.jar -c config.xml  mysql.sql Starting audit... [ERROR] F:\FY\gosc\checkstyle\mysql.sql:1: File must contain at least one occurrence of license term [RegexpSingleline] Audit done. Checkstyle ends with 1 errors.   ```   ## Goal Add code examples for RegexpSingleline doc","closed","","malinthar","2020-03-01T08:25:54Z","2020-03-29T22:49:36Z"
"","7900","Issue #7732: Update AbstractChecks to log DetailAST - IllegalCatch","### Fixes #7732   The check already reports violation on DetailAST node: https://github.com/checkstyle/checkstyle/blob/34615b4a3c8f8826fb6961ed9a35449e73c16a2f/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java#L187  **Diff File:** https://sulkykookie.github.io/illegalCatch/","closed","","sulkykookie","2020-03-19T05:45:06Z","2020-03-20T15:04:33Z"
"","7822","Issue #7629: Update doc for SingleSpaceSeparator","### Fixes #7629  ![Example](https://user-images.githubusercontent.com/43749360/76639980-21bf8500-6575-11ea-9222-c50d0f421eeb.PNG)   ### Output of Default example: ``` $ cat config.xml                      $ cat test.java public class test {     int foo()   { // violation, 3 whitespaces         return  1; // violation, 2 whitespaces     }     int fun1() { // OK, 1 whitespace         return 3; // OK, 1 whitespace     }     void  fun2() {} // violation, 2 whitespaces }  $ java -jar checkstyle-8.30-all.jar -c config.xml test.java Starting audit... [ERROR] C:\Users\Shrey\Desktop\PR1\test.java:2:17: Use a single space to separate non-whitespace characters. [SingleSpaceSeparator] [ERROR] C:\Users\Shrey\Desktop\PR1\test.java:3:17: Use a single space to separate non-whitespace characters. [SingleSpaceSeparator] [ERROR] C:\Users\Shrey\Desktop\PR1\test.java:8:11: Use a single space to separate non-whitespace characters. [SingleSpaceSeparator] Audit done. Checkstyle ends with 3 errors. ```  ### Output of non-default example: ``` $ cat config2.xml                               $ cat test2.java public class test2 {     void fun1() {}  // violation, 2 whitespaces before the comment starts     void fun2() { return; }  /* violation here, 2 whitespaces before the comment starts */      /* violation, 2 whitespaces after the comment ends */  int a;      String s; /* OK, 1 whitespace */      /**      * This is a Javadoc comment      */  int b; // violation, 2 whitespaces after the javadoc comment ends      float f1; // OK, 1 whitespace      /**      * OK, 1 white space after the doc comment ends      */ float f2;  $ java -jar checkstyle-8.30-all.jar -c config2.xml test2.java Starting audit... [ERROR] C:\Users\Shrey\Desktop\PR1\test2.java:2:21: Use a single space to separate non-whitespace characters. [SingleSpaceSeparator] [ERROR] C:\Users\Shrey\Desktop\PR1\test2.java:3:30: Use a single space to separate non-whitespace characters. [SingleSpaceSeparator] [ERROR] C:\Users\Shrey\Desktop\PR1\test2.java:5:60: Use a single space to separate non-whitespace characters. [SingleSpaceSeparator] [ERROR] C:\Users\Shrey\Desktop\PR1\test2.java:11:10: Use a single space to separate non-whitespace characters. [SingleSpaceSeparator] Audit done. Checkstyle ends with 4 errors. ```","closed","","sulkykookie","2020-03-11T06:33:50Z","2020-03-14T06:24:27Z"
"","7819","Issue #7629: Update doc for SingleSpaceSeparator","### Fixes #7629  ![Example](https://user-images.githubusercontent.com/43749360/76381821-9c718000-637c-11ea-88ac-e88b9fea4eb5.PNG)   ### Output of default example: ``` $ cat config.xml                      $ cat test.java public class test {     int foo()   { //Violation, 3 whitespaces         return 1+2  ; } //Violation, 2 whitespaces     void fun1() { //OK         return ; } //OK     void  fun2() {} //Violation, 2 whitespaces }  $ java -jar checkstyle-8.30-all.jar -c config.xml test.java Starting audit... [ERROR] C:\Users\Shrey\Desktop\test.java:2:17: Use a single space to separate non-whitespace characters. [SingleSpaceSeparator] [ERROR] C:\Users\Shrey\Desktop\test.java:3:21: Use a single space to separate non-whitespace characters. [SingleSpaceSeparator] [ERROR] C:\Users\Shrey\Desktop\test.java:6:11: Use a single space to separate non-whitespace characters. [SingleSpaceSeparator] Audit done. Checkstyle ends with 3 errors. ```  ### Output of non-default example: ``` $ cat config2.xml                               $ cat test2.java public class test2 {     int foo()   { //Violation, 3 whitespaces         return 1+2  ; } //Violation, 2 whitespaces     void fun1() {    //Violation, 4 whitespaces         return ; } //OK     void  fun2() {} //Violation, 2 whitespaces     void fun3() {  /*Violation here, 2 whitespaces     OK here*/ return; }     /*Violation, 2 white spaces*/  int a; }  $ java -jar checkstyle-8.30-all.jar -c config2.xml test2.java Starting audit... [ERROR] C:\Users\Shrey\Desktop\test2.java:2:17: Use a single space to separate non-whitespace characters. [SingleSpaceSeparator] [ERROR] C:\Users\Shrey\Desktop\test2.java:3:21: Use a single space to separate non-whitespace characters. [SingleSpaceSeparator] [ERROR] C:\Users\Shrey\Desktop\test2.java:4:22: Use a single space to separate non-whitespace characters. [SingleSpaceSeparator] [ERROR] C:\Users\Shrey\Desktop\test2.java:6:11: Use a single space to separate non-whitespace characters. [SingleSpaceSeparator] [ERROR] C:\Users\Shrey\Desktop\test2.java:7:20: Use a single space to separate non-whitespace characters. [SingleSpaceSeparator] [ERROR] C:\Users\Shrey\Desktop\test2.java:9:36: Use a single space to separate non-whitespace characters. [SingleSpaceSeparator] Audit done. Checkstyle ends with 6 errors. ```","closed","","sulkykookie","2020-03-10T15:54:40Z","2020-03-11T06:19:36Z"
"","7818","Issue #7629: Update doc for SingleSpaceSeparator","### Fix for issue #7629 ![Example](https://user-images.githubusercontent.com/43749360/76315207-4100ad00-62fe-11ea-993c-baab0380be3a.png)  ### Output of default example: ``` $ cat config.xml                      $ cat test.java public class test {      int foo()   { //Violation, 3 whitespaces         return 1+2  ; } //Violation, 2 whitespaces      void fun1() { //OK         return ; } //OK      void  fun2() {} //Violation, 2 whitespaces  }  $ java -jar checkstyle-8.30-all.jar -c config.xml test.java Starting audit... [ERROR] C:\Users\Shrey\Desktop\test.java:2:17: Use a single space to separate non-whitespace characters. [SingleSpaceSeparator] [ERROR] C:\Users\Shrey\Desktop\test.java:3:21: Use a single space to separate non-whitespace characters. [SingleSpaceSeparator] [ERROR] C:\Users\Shrey\Desktop\test.java:6:11: Use a single space to separate non-whitespace characters. [SingleSpaceSeparator] Audit done. Checkstyle ends with 3 errors. ``` ### Output of non-default example: ``` $ cat config2.xml                               $ cat test2.java public class test {      int foo()   { //Violation, 3 whitespaces         return 1+2  ; } //Violation, 2 whitespaces      void fun1() {    //Violation, 4 whitespaces         return ; } //OK      void  fun2() {} //Violation, 2 whitespaces      void fun3() {  /*Violation here, 2 whitespaces     OK here*/ return; }      /*Violation, 2 white spaces*/  int a;  }  $ java -jar checkstyle-8.30-all.jar -c config2.xml test2.java Starting audit... [ERROR] C:\Users\Shrey\Desktop\test2.java:3:17: Use a single space to separate non-whitespace characters. [SingleSpaceSeparator] [ERROR] C:\Users\Shrey\Desktop\test2.java:4:21: Use a single space to separate non-whitespace characters. [SingleSpaceSeparator] [ERROR] C:\Users\Shrey\Desktop\test2.java:6:22: Use a single space to separate non-whitespace characters. [SingleSpaceSeparator] [ERROR] C:\Users\Shrey\Desktop\test2.java:9:11: Use a single space to separate non-whitespace characters. [SingleSpaceSeparator] [ERROR] C:\Users\Shrey\Desktop\test2.java:11:20: Use a single space to separate non-whitespace characters. [SingleSpaceSeparator] [ERROR] C:\Users\Shrey\Desktop\test2.java:14:36: Use a single space to separate non-whitespace characters. [SingleSpaceSeparator] Audit done. Checkstyle ends with 6 errors. ```","closed","","sulkykookie","2020-03-10T13:14:01Z","2020-03-10T14:44:30Z"
"","7432","Suppression by custom annotations in Java","## Feature Request  ### Short description  Instead of adding a `@SuppressWarnings` annotation, a possibility to suppress the warning using a custom annotation specified in the configuration file.  ### Long description  There are already several checks (e.g. `JavadocMethod`) which can be suppressed by using a certain annotation if listed in the module's property `allowedAnnotations`.  There are also several checks (e.g. `ParameterNumber`) that *do not* have this type of suppression possibility. *For example, it could be helpful in Spring projects to suppress the parameter number warning in case of an `@Autowired` annotated constructor, because Spring beans tend to have many dependencies.*  How about generalizing the `allowedAnnotations` concept to allow user defined annotation-suppression lists for *any* check?  ## Current Behavior  To suppress `ParameterNumber` checks on an `@Autowired` annotated constructor, you would currently do:  ```java @SuppressWarnings(""checkstyle:ParameterNumber"") @Autowired public BankHandler() { } ```  for every such constructor of the entire project.  ## Expected Behavior  Avoid having to pollute all bean constructors with the `@SuppressWarnings` annotation by specifying a block such as the following in your Checkstyle config:  ```xml        ```  where `value` is a String Set in a format of comma separated attribute=value entries. The attribute is the fully qualified name of the Check and value is its alias as an annotation. *Basically, an extension to [SuppressWarningsHolder](https://checkstyle.sourceforge.io/config_annotation.html#SuppressWarningsHolder), where you can have a custom annotation in addition to custom `@SuppressWarnings` arguments.*","closed","","anddero","2020-01-01T20:12:47Z","2020-01-02T20:04:50Z"
"","7718","Issue #7661: Update doc for SuperClone","# Resolve #7661  ![example](https://user-images.githubusercontent.com/24209192/76157024-8d33cd80-6103-11ea-9fa6-85c51cd36b21.png)     ## Ouput of default example $ cat config.xml ```xml               		 	  ``` $ cat Test.java  ```java class A {   public Object clone() { // OK   return super.clone();  } }  class B { private int b;   public B clone() { // violation, does not call super.clone()   B other = new B();   other.b = -1;   return other;  } }  class C {   public C clone() {  // OK   return (C) super.clone();  } } ``` $ java -jar checkstyle-8.29-all.jar -c config.xml Test.java ``` Starting audit... [ERROR] /var/tmp/Test.java:11:11: Method 'clone' should call 'super.clone'. [SuperClone] Audit done. Checkstyle ends with 1 errors. ```  ## Ouput of non-default example This check doesn't provide any configurable property.","closed","","wilcoln","2020-03-01T12:48:53Z","2020-03-14T07:16:13Z"
"","7720","Issue #7658: Update doc for SimplifyBooleanExpression","# Resolve #7658 ![example](https://user-images.githubusercontent.com/24209192/76171899-8bfcb200-6190-11ea-8c72-b1b1a509a9cd.png)   ## Ouput of default example ``` $ cat config.xml               		 	   $ cat Test.java  public class Test {  	public void bar() {  		boolean a, b; 		Foo c, d, e;  		if (!false) {}; // violation, can be simplfied to true  		if (a == true) {}; // violation, can be simplified to a 		if (a == b) {}; // OK 		if (a == false) {}; // violation, can be simplfied to !a 		if (!(a != true)) {}; // violation, can be simplified to a  		e = (a || b) ? c : d; // OK 		e = (a || false) ? c : d; // violation, can be simplified to a 		e = (a && b) ? c : d; // OK  	}  }  $ java -jar checkstyle-8.29-all.jar -c config.xml Test.java Starting audit... [ERROR] /var/tmp/Test.java:8:6: Expression can be simplified. [SimplifyBooleanExpression] [ERROR] /var/tmp/Test.java:10:8: Expression can be simplified. [SimplifyBooleanExpression] [ERROR] /var/tmp/Test.java:12:8: Expression can be simplified. [SimplifyBooleanExpression] [ERROR] /var/tmp/Test.java:13:10: Expression can be simplified. [SimplifyBooleanExpression] [ERROR] /var/tmp/Test.java:16:10: Expression can be simplified. [SimplifyBooleanExpression] Audit done. Checkstyle ends with 5 errors. ```  ## Ouput of non-default example This check doesn't provide any configurable property.","closed","","wilcoln","2020-03-01T15:05:38Z","2020-03-14T07:15:31Z"
"","7702","Issue #7698: update doc for RegexpSinglelineJava","# Fix for issue #7698 ![examples](https://user-images.githubusercontent.com/24209192/75604692-ade49d80-5adb-11ea-80fd-741c614869cd.png)   **Ouput of default example:** ``` $ cat config.xml               	                                                                                                                 $ cat Test.java  public class Test {  	public void main(){ 		System.out.println(""""); // OK 		System.out. 			println(""""); // OK		 		/* System.out.println */ // OK 	} }  $ java -jar checkstyle-8.29-all.jar -c config.xml Test.java Starting audit... Audit done. ``` **Ouput of non-default example:** ``` $ cat config.xml                          		 		 	          $ cat Test.java  public class Test {  	public void main(){ 		System.out.println(""""); // violation, the illegal pattern is matched on a single line 		System.out. 			println(""""); // OK		 		/* System.out.println */ // OK, comments are ignored 	} }  $ java -jar checkstyle-8.29-all.jar -c config.xml Test.java Starting audit... [ERROR] /var/tmp/Test.java:4: Line matches the illegal pattern 'System\.out\.println'. [RegexpSinglelineJava] Audit done. Checkstyle ends with 1 errors. ```","closed","","wilcoln","2020-02-29T09:09:17Z","2020-03-01T21:02:57Z"
"","7716","Issue #7670: Update doc for NoClone","# Fix for issue #7670  ![example](https://user-images.githubusercontent.com/24209192/75625501-0f316d00-5bbf-11ea-96d1-f9f84aa3c634.png)   ## Ouput of default example ``` $ cat config.xml               		 	   $ cat Test.java  public class Test {    public Object clone() {return null;} // violation, overrides the clone method    public Test clone() {return null;} // violation, overrides the clone method    public static Test clone(Object o) {return null;} // OK    public static Object clone(Test o) {return null;} // OK  }  $ java -jar checkstyle-8.29-all.jar -c config.xml Test.java Starting audit... [ERROR] /var/tmp/Test.java:3: Avoid using clone method. [NoClone] [ERROR] /var/tmp/Test.java:5: Avoid using clone method. [NoClone] Audit done. Checkstyle ends with 2 errors. ```  ## Ouput of non-default example This check doesn't provide any configurable property.","closed","","wilcoln","2020-03-01T11:16:42Z","2020-03-07T16:26:56Z"
"","7719","Issue #7659: Update doc for SimplifyBooleanReturn","# Fix for issue #7659   ![example](https://user-images.githubusercontent.com/24209192/76006141-56479700-5f0c-11ea-8340-fd8192633c56.png)   ## Ouput of default example ``` $ cat config.xml               		 	   $ cat Test.java  public class Test {   private boolean cond;  private Foo a;  private Foo b;    public boolean check1() {   if (cond) { // violation, can be simplified     return true;   }   else {     return false;   }  }   // Ok, simplified version of check1()  public boolean check2() {   return cond;  }   // violations, can be simplified  public boolean check3() {   if (cond == true) { // can be simplified to ""if (cond)""     return false;   }   else {     return true; // can be simplified to ""return !cond""   }  }   // Ok, can be simplified but doesn't return a Boolean  public Foo choose1() {   if (cond) {     return a;   }   else {     return b;   }  }   // Ok, simplified version of choose1()  public Foo choose2()  {   return cond ? a: b;  }  }  $ java -jar checkstyle-8.29-all.jar -c config.xml Test.java Starting audit... [ERROR] /var/tmp/Test.java:9:3: Conditional logic can be removed. [SimplifyBooleanReturn] [ERROR] /var/tmp/Test.java:24:3: Conditional logic can be removed. [SimplifyBooleanReturn] Audit done. Checkstyle ends with 2 errors.  ```  ## Ouput of non-default example This check doesn't provide any configurable property.","closed","","wilcoln","2020-03-01T13:45:30Z","2020-03-07T16:26:43Z"
"","7717","Issue #2410: JavadocStyleCheck: need to support VAR html tag","""var"" has already been added as an allowed tag: https://github.com/checkstyle/checkstyle/blob/12c6e69fe7de3d462f5ca117dc4a6f0ba51a1d7c/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java#L209-L218  I've tested it on the latest release: ``` D:\checkstyletest>type config.xml                           D:\checkstyletest>type test\Test.java  /**  * First sentence.  *   * this is a valid tag  * this is also a valid tag  * this is not a valid tag  *   */ public class Test {}  D:\checkstyletest>java -jar -Duser.language=en -Duser.country=US checkstyle-8.30-all.jar -c config.xml test\Test.java  Starting audit... [ERROR] D:\checkstyletest\test\Test.java:6:32: Extra HTML tag found:  [JavadocStyle] Audit done. ``` The docs (javadoc and xdoc) seems to be the only thing left to do. Unless I'm missing something out, this looks like a very simple change to resolve #2410.","closed","","wltan","2020-03-01T12:15:33Z","2020-05-04T04:17:17Z"
"","7158","minor: reference jitpack as option to build artifacts","![image](https://user-images.githubusercontent.com/812984/66262099-c3ed6c80-e78e-11e9-8c05-a652c6765a04.png)","closed","","romani","2019-10-05T23:40:09Z","2019-10-07T06:09:50Z"
"","7838","hardcoded","","closed","","HuGanghui","2020-03-12T17:09:16Z","2020-03-12T17:09:40Z"
"","7782","Issue #7650 Update doc","","closed","","Jalend15","2020-03-04T12:38:57Z","2020-03-05T20:13:16Z"
"","7679","Issue #7605: Add examples for SingleLineJavadoc","","closed","awaiting changes,","ritvij14","2020-02-27T04:24:25Z","2020-03-15T16:01:00Z"
"","7527","config: update senvtu to 1.37.1","","closed","","romani","2020-02-01T03:19:43Z","2020-08-16T01:16:56Z"
"","7514","minor: fix grammar and typos in German localization","","closed","","Bananeweizen","2020-01-28T21:27:31Z","2020-01-29T07:10:19Z"
"","7438","config: bump sevntu to 1.37.0","","closed","","romani","2020-01-03T06:36:44Z","2020-08-16T01:16:56Z"
"","7434","minor: fix headers in various files not controlled by CI","","closed","","rnveach","2020-01-02T00:41:28Z","2020-01-02T19:37:56Z"
"","7277","config: disable Mac JDK11+ until #7276","","closed","","rnveach","2019-11-22T01:56:03Z","2019-11-23T02:28:16Z"
"","7271","config: bump sevntu to 1.36.0","","closed","","romani","2019-11-19T13:34:07Z","2019-11-22T01:44:50Z"
"","7191","config: test jdk12","","closed","","romani","2019-10-13T00:07:58Z","2019-10-13T15:04:37Z"
"","7067","config: revert changes for #2116","","closed","","romani","2019-09-15T23:15:10Z","2019-09-16T01:49:12Z"
"","7048","minor: test","","closed","","romani","2019-09-12T01:01:40Z","2019-09-13T01:00:28Z"