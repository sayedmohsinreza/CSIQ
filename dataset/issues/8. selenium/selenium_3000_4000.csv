"#","No","Issue Title","Issue Details","State","Labels","User name","created","Updated"
"","7501","不知道WebDriverWait是否有起作用","💬 Questions and Help  C# selenium 新手 不知道這樣寫的WebDriverWait運行時有沒有起作用，判斷在60秒內若有找到CssSelector("".col-md-5"")這個元素，才往下繼續執行;若超過60秒沒找到則TimeOut  For questions or help please see:  `namespace SFA.Shared`  `{     class IWebElement     {         public static WebDriverWait wait = new WebDriverWait(webDriver, TimeSpan.FromSeconds(60));     } ` `classTOverseaCustomerForm {    public TOverseaCustomerForm()      {       Shared.IWebElement.wait.Until(driver => driver.FindElement(By.CssSelector("".col-md-5"")));      } } `","closed","","Lee-Jin-Yi","2019-08-19T08:02:44Z","2019-09-18T09:09:35Z"
"","7754","* Make one enable to Fetch Domain - there is an issue with Disable on…","… Browser level  * remove Dead imports * Handle broken Pattern (we are accepting all now wildcard) * Small indentation handling  Thanks to : @dratler  for help and thanks for #Intuit supporting this commit #Intuit #IntuitGED #IntuitGED2019  related to issue #6667     - [ X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-java,","NoamGoren","2019-11-07T14:10:26Z","2020-12-22T23:28:05Z"
"","7764","GridTNG: Secure ZeroMQ","ZeroMQ connections should be secured","closed","C-grid,","adamgoucher","2019-11-10T02:47:08Z","2021-09-05T10:20:34Z"
"","7504","Fix mouse move offsets in Java tests","With PR #7473 clarified that Action.moveToElement uses offset relative to center instead of top-left, updating Java tests to match the change.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","JohnChen0","2019-08-19T16:46:52Z","2019-09-03T20:24:50Z"
"","7728","Chromedriver 78: cannot set selection and send keys in contenteditable","With Chromedriver 2.41.0 there was a bug that would not let you put focus on an element inside of a contenteditable element so that when you wanted to set the selection somewhere inside of a contenteditable element and and then send some keys there, you would first set the selection using a JavaScript helper function and then use sendkeys to the contenteditable element and the keys would affect the selected content.  In Chromedriver 78 the bug has been fixed. Now one can send keys directly to an element that is inside of a contenteditable element. However, one can now no longer use sendkeys to affect selected content as the selection is being reset to the end of the element when sendkeys is used. So for example, if I have this structure [] = selection:  ``` 12[MY SELECTION]34 ```  In 2.41.0 you could send the backspace key to the div, and it would delete the selection, giving you this, | = caret:  ``` 12|34 ```  In Chromedriover 78, if you send the keys to the ``, it puts the caret at the end of the `` and deletes the number 4. If you send the keys to the ``, it will put the selection at the end of it and delete the 3.  Is there anyway to keep the selection and let the backspace affect that?","closed","","johanneswilm","2019-10-30T19:20:56Z","2019-11-30T20:09:43Z"
"","6882","[JS] Fix: HttpClient: Cannot read property 'forEach' of undefined","While using `HttpClient` to make post request using `send` function without any headers in httpRequest object was giving error `Cannot read property 'forEach' of undefined`  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6882)","closed","","Darth-koder007","2019-01-25T07:28:01Z","2019-01-31T17:32:08Z"
"","7076","Webdriver3.14 hits Firewall where as in lower version of Webdriver, traffic goes via proxy","While troubleshooting on Webdriver we found that while running a webdriver3.14 few traffic hits proxy and one of its traffic hits a Firewall where as in lower version of Webdriver, it does not hit firewall and all its traffic goes via proxy properly. As lower version works well with proxy so new version should also have an option to use proxy for its connections  When i have tried running selenium code on browserstack server with older version of webdriver then it works fine but when tried running with latest version of webdriver3.141 then it throws an exception shown below :   Unexpected error. System.Net.WebException: Unable to connect to the remote server ---> System.Net.Sockets.SocketException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond 207.254.8.3:80    at System.Net.Sockets.Socket.DoConnect(EndPoint endPointSnapshot, SocketAddress socketAddress)    at System.Net.ServicePoint.ConnectSocketInternal(Boolean connectFailure, Socket s4, Socket s6, Socket& socket, IPAddress& address, ConnectSocketState state, IAsyncResult asyncResult, Exception& exception)    --- End of inner exception stack trace ---    at System.Net.HttpWebRequest.GetRequestStream(TransportContext& context)    at System.Net.HttpWebRequest.GetRequestStream()    at OpenQA.Selenium.Remote.HttpCommandExecutor.MakeHttpRequest(HttpRequestInfo requestInfo)    at OpenQA.Selenium.Remote.HttpCommandExecutor.Execute(Command commandToExecute)    at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)   Please help me with this issue in order to run our script on browserstack.","closed","","kniranjan4333","2019-04-01T09:58:59Z","2019-08-14T17:09:37Z"
"","6937","Attempt UTF-8 encoding in logger formatter","While running specs with Capybara and Selenium I've been experiencing a stream of `log writing failed. ""\xC2"" from ASCII-8BIT to UTF-8` errors; not sure of all the context, but adding this encoding to the formatter seems to be a fix--any reason not to add this to the formatter?     - [X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6937)","closed","C-rb,","GabrielMahan","2019-02-14T18:39:05Z","2019-05-03T02:11:04Z"
"","6966","Not able to execute Java Script on IE11 (Selenium)","While executing the JAVA script  ((JavascriptExecutor) this.webDriver).executeScript(""arguments[0].focus();"", this.webElement); on IE 11 i am getting following error.  Error executing JavaScript Build info: version: '3.12.0',","closed","R-awaiting answer,","RoheetKamble","2019-02-25T11:22:08Z","2019-08-14T07:09:46Z"
"","7799","Click event on button on IFrame could not work and gives no error for selenium 3.141.59 on Chrome driver 78.0.3904.105","While clicking on button in IFrame of custom application tab on SalesForce.com portal, Selenium click event on Button or any selectable object i.e. dropdown object could not be fired. As well, no error was thrown for this failure event.  When tried with method .sendKeys(Keys.Enter) then that object either button or selectable objects, could be worked.  I'm using Java-selenium version 3.141.59 and Chrome driver version 78.0.3904.105","closed","","mitul494","2019-11-20T07:08:41Z","2019-12-20T08:56:44Z"
"","7837","Chrome browser not opening when the mac is locked","Whenever the mac is locked, I find that the chrome browser automation is paused, and when unlocked it resumes. How to resolve this?","closed","","sasasa42","2019-12-03T10:01:19Z","2020-01-03T12:45:13Z"
"","7771","include accessibility id in FindBy","When you are using a cross platform mobile framework like react native, we usually need to declare two ID's, one for Android and another for IOS. With this changes, we can use just the **accessibility Id** in both.  > Example: ``` @AndroidFindBy(accessibility =""Login_phone"") @iOSXCUITFindBy(xpath =""//*[@name='Login_phone']/preceding-sibling::*[1]/*[2]"") private MobileElement FIELD_PHONE; ``` _AndroidFindBy and iOSXCUITFindBy from Appium._  > With the changes: ``` @FindBy(accessibility =""Login_phone"") private MobileElement FIELD_PHONE; ``` _FindBy from Selenium._  This will provide a much clean code and make it easier to automate tests.       - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-java,","JulianaPRibeiro","2019-11-11T20:16:11Z","2021-01-26T15:46:20Z"
"","7746","Enable READ retries for remote connection pool","When using keep-alive connections for the remote connection it can sometimes occur that the connection is interrupted.  Simply reconnecting seems to be a sufficient measure to continue the test without any apparent negative consequences.  The documented behavior of the retries parameter is that it only retries for idempotent HTTP verbs, so I believe this may be a reasonable approach.    - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","haskellpointersauce","2019-11-05T14:58:23Z","2019-11-06T15:01:25Z"
"","7511","Use the proxy protocol when a webdriver proxy is configured","When the http protocol is different between the remote selenium server and the webdriver proxy, an EPROTO error is encountered.  See #7509 for more information and a reproductible test case.  Could you help me to test this case correctly? It seems that changing the protocol from http to https in httpserver.js break the tests in `http_test.js`. Should i create a https version of `Server` and use it in a test?  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-nodejs,","theredfish","2019-08-21T14:57:21Z","2019-09-10T16:45:03Z"
"","6887","Not able to click on button for file upload when using Safari 12 on mac OSX 10.12 or 10.13","When input type=file is specified for any control then Safari webdriver is not working with it. Error thrown input type file is not supported ,please use sendKeys instead. ## To Reproduce  HTML  code for page:   Detailed steps to reproduce the behavior: I am automating use case of file upload for Safari ,I need to only  click on Browse button of webpage using Selenium (file selection from file dialogue will be done  by apple script later) Below are steps for the issue I am facing Please refer the attached html code (SampleWebpage)  for controls and ids mentioned in steps.  1.If you provide id of selectedFile1 which   in selenium python script, then it throws error saying ""Error thrown input type file is not supported ,please use sendKeys instead."" 2.So I added next control (browsebutton1) in webpage which uses onclick action and click on previous control (selectedFile1). In both the cases I am not able to click on button ,I tried xpath ,id . This webpage automation works fine for Chromedriver using the same approch but failing for Safari.  Python script that I am using as below:      __browser_name = BrowserName.SAFARI     __browser_obj = BrowserOperation(__browser_name)     __browser_obj.open_browser()     url_list = [Url.STATIC_MULTIPLE_FILES_UPLOAD_URL_RS3]     __tab_obj = __browser_obj.get_tab()     __tab_obj.load_url(Url.STATIC_MULTIPLE_FILES_UPLOAD_URL_RS3)     __element_obj = __tab_obj.get_element()     id1=""browsebutton1""     xpath1='//input[@id=""browsebutton1""]'     __element_obj.click_on_element(id=id1)   ## Environment  OS: mac OSX 10.12.6 Browser: Safari 12.0.2 ,12.0.3 Browser version: 12.0.2 ,12.0.3 Selenium version:3.4.3 Python :2.7 Selenium Grid version (if applicable):","closed","R-awaiting answer,","parshudhole","2019-01-27T16:53:27Z","2019-08-14T22:09:37Z"
"","7449","System proxy does not support method setNoProxy","When I using system proxy and set no proxy, it throws exception. proxy.setProxyType(ProxyType.SYSTEM); proxy.setNoProxy(noProxiesOn);   And I check the source code, find that setNoProxy  is for MANUAL proxy only. Is there any reason and can we add set no proxy for other type of proxy(system proxy and pac proxy)    public Proxy setNoProxy(String noProxy) { verifyProxyTypeCompatibility(ProxyType.MANUAL); this.proxyType = ProxyType.MANUAL; this.noProxy = noProxy; return this; }","closed","","leoforever","2019-07-30T05:50:45Z","2019-08-30T04:09:34Z"
"","7664","selenium.common.exceptions.WebDriverException: Message: unknown error: failed to wait for extension background page to load: chrome-extension://cdmdfdgjgkdpjaagnhnianiklfiojfch/_generated_background_page.html","When I use selenium to start chrome in win10 environment, it will load chrome plugin. chromeOptions = webdriver.ChromeOptions() chromeOptions.add_argument('--headless')   Everything is normal, but with this sentence, I will report an error. I have been looking for a long time and I don’t know what went wrong.","closed","R-awaiting answer,","fengzifrank","2019-10-08T15:48:31Z","2020-04-18T22:16:54Z"
"","7154","autoreload  of cryptography.hazmat.bindings on profile created with profile manager","When i run this code: ``` fp =webdriver.FirefoxProfile(r'C:\Users\Guest\AppData\Roaming\Mozilla\Firefox\Profiles\3mzqjk97.profileDouble')  driver = webdriver.Firefox(fp) driver.get(url) ```  I get this message: ``` [autoreload of cryptography.hazmat.bindings.openssl.binding failed: Traceback (most recent call last):   File ""C:\Users\Guest\Anaconda3newFolder\envs\googleadsEnv\lib\site-packages\IPython\extensions\autoreload.py"", line 244, in check     superreload(m, reload, self.old_objects)   File ""C:\Users\Guest\Anaconda3newFolder\envs\googleadsEnv\lib\site-packages\IPython\extensions\autoreload.py"", line 378, in superreload     module = reload(module)   File ""C:\Users\Guest\Anaconda3newFolder\envs\googleadsEnv\lib\imp.py"", line 314, in reload     return importlib.reload(module)   File ""C:\Users\Guest\Anaconda3newFolder\envs\googleadsEnv\lib\importlib\__init__.py"", line 169, in reload     _bootstrap._exec(spec, module)   File """", line 630, in _exec   File """", line 728, in exec_module   File """", line 219, in _call_with_frames_removed   File ""C:\Users\Guest\Anaconda3newFolder\envs\googleadsEnv\lib\site-packages\cryptography\hazmat\bindings\openssl\binding.py"", line 188, in      _verify_package_version(cryptography.__version__)   File ""C:\Users\Guest\Anaconda3newFolder\envs\googleadsEnv\lib\site-packages\cryptography\hazmat\bindings\openssl\binding.py"", line 175, in _verify_package_version     so_package_version = ffi.string(lib.CRYPTOGRAPHY_PACKAGE_VERSION) AttributeError: cffi library '_openssl' has no function, constant or global variable named 'CRYPTOGRAPHY_PACKAGE_VERSION' ] [autoreload of cryptography.hazmat.backends.openssl.backend failed: Traceback (most recent call last):   File ""C:\Users\Guest\Anaconda3newFolder\envs\googleadsEnv\lib\site-packages\IPython\extensions\autoreload.py"", line 244, in check     superreload(m, reload, self.old_objects)   File ""C:\Users\Guest\Anaconda3newFolder\envs\googleadsEnv\lib\site-packages\IPython\extensions\autoreload.py"", line 378, in superreload     module = reload(module)   File ""C:\Users\Guest\Anaconda3newFolder\envs\googleadsEnv\lib\imp.py"", line 314, in reload     return importlib.reload(module)   File ""C:\Users\Guest\Anaconda3newFolder\envs\googleadsEnv\lib\importlib\__init__.py"", line 169, in reload     _bootstrap._exec(spec, module)   File """", line 630, in _exec   File """", line 728, in exec_module   File """", line 219, in _call_with_frames_removed   File ""C:\Users\Guest\Anaconda3newFolder\envs\googleadsEnv\lib\site-packages\cryptography\hazmat\backends\openssl\backend.py"", line 2419, in      backend = Backend()   File ""C:\Users\Guest\Anaconda3newFolder\envs\googleadsEnv\lib\site-packages\cryptography\hazmat\backends\openssl\backend.py"", line 119, in __init__     self.activate_osrandom_engine()   File ""C:\Users\Guest\Anaconda3newFolder\envs\googleadsEnv\lib\site-packages\cryptography\hazmat\backends\openssl\backend.py"", line 160, in activate_osrandom_engine     if self._lib.Cryptography_HAS_ENGINE: AttributeError: module 'lib' has no attribute 'Cryptography_HAS_ENGINE' ] ``` The website has a user/password entry, but this message appears before the driver loads, and then it doesn't use my stored values for these entries.","closed","","jramirezpr","2019-04-29T18:10:03Z","2019-08-14T12:09:51Z"
"","7391","Error message for Jenkins build: The driver is not executable: /var/lib/jenkins/workspace/smoke_job/src/test/resources/chromedriver/chromedriver.exe","When I am running from eclipse every test is running fine having set the path like this      public static final String RELATIV_PATH = ""/src/test/resources/chromedriver/chromedriver.exe"";     public static final String ABSOLUTE_PATH = System.getProperty(""user.dir"")+ RELATIV_PATH;	 @BeforeTest public void setUp() { 		System.setProperty(""webdriver.chrome.driver"", ABSOLUTE_PATH); 	} but when I am building it from Jenkins every test has the same err that the chromedriver.exe can not be executed, what is the workaround for this ?  Regards,","closed","","ailabogasieru85","2019-07-15T15:48:42Z","2019-08-14T18:09:34Z"
"","7758","mobileEmulation doesn't work as it should","When defining a mobile device, such as iPhone X, the site does not function as if it were on a mobile device.  It only works if I activate the ""Toggle device toolbar"" button: https://i.stack.imgur.com/Up2rI.png  What should I do?  OS: macOS Catalina 10.15.1 Browser: Chrome Browser version: 78.0.3904.97 Browser Driver version: 78.0.3904.70 Language Bindings version: PHP 7.3.10 Selenium Grid version (if applicable): 4.0.0-alpha-2","closed","","alissonlinneker","2019-11-08T03:53:51Z","2019-12-17T14:29:50Z"
"","7084","Selenium Grid doesn't pass chromeOptions through to browser when Capabilities are provided programmatically AND the Selenium Grid Node has a config file.","When chromeOptions are set via the Selenium-Webdriver API, the browser receives the argument and handles it accordingly.  However when the Selenium Grid Node is started with the -nodeConfig argument, these chromeOptions (being passed the same way) are being ignored.  **Driver Initialization**      let driver = new Builder();      driver = driver.usingServer(this.seleniumAddress);      var chromeOptions = new Chrome.Options();     chromeOptions.addArguments('--start-maximized');     chromeOptions.setChromeBinaryPath(this.browserBinaryPath);      driver = await driver.setChromeOptions(chromeOptions);      driver = await driver.forBrowser(this.browserName, this.browserVersion).build();   **SeleniumNodeConfig.json**      {       ""capabilities"": [     	{           ""browserName"": ""chrome"",           ""version"": """",           ""platform"": ""WINDOWS"",           ""maxInstances"": 1         },         {           ""browserName"": ""firefox"",           ""version"": """",           ""platform"": ""WINDOWS"",           ""maxInstances"": 1         },         {           ""browserName"": ""internet explorer"",           ""version"": ""11"",           ""platform"": ""WINDOWS"",           ""maxInstances"": 1         }       ]     }  **Starting Selenium Node**      java -jar \selenium-server-standalone-3.141.5.jar -role node -hub %hubURL% -nodeConfig SeleniumNodeConfig.json   If I start the node without the NodeConfig file, the browser starts maximized, as it should, and I see this in my terminal output:      18:08:17.330 INFO [ActiveSessionFactory.apply] - Capabilities are: {       ""browserName"": ""chrome"",       ""chromeOptions"": {         ""args"": [           ""--start-maximized""         ],         ""binary"": ""C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe""       }     }   But when I add the node config back in, it restricts the browser instances to 1 as it should, but not longer will start maximized.  I've tried adding   	  ""chromeOptions"": { 		""args"": [""--start-maximized""] 	  }  and  	  ""goog:chromeOptions"": { 		""args"": [""--start-maximized""] 	  }  to my `SeleniumNodeConfig.json` file, but those don't even show up in the terminal when the node starts the session.   ### Environment  OS: Selenium Hub on Linux, Node on Windows 7 Browser: Chrome Browser version: 73.0.3683.86 Browser Driver version: 2.46.628402 Selenium Grid version (if applicable): 3.141.5","closed","C-remote,","stephenkuhn214","2019-04-03T22:13:48Z","2021-09-05T08:12:25Z"
"","7132","I'm getting ""Chrome version must be between 70 and 73 ""","What should I do?   /home/travis/.rvm/gems/ruby-2.6.2/gems/selenium-webdriver-3.141.5926/lib/selenium/webdriver/remote/response.rb:72:in `assert_ok': session not created: Chrome version must be between 70 and 73 (Selenium::WebDriver::Error::SessionNotCreatedError)","closed","","oystersauce8","2019-04-24T05:26:26Z","2019-08-14T08:10:03Z"
"","7796","unable to use standalone Firefox profile with Ruby bindings","What I am trying to accomplish is to create a Firefox Profile with two non-default aspects: a personal certificate installed (the ""cert9.db"" file in the Profile), and the preference ""security.default_personal_cert"" set to ""Select Automatically"" (the ""prefs.js"" file in the Profile). Having created this Profile in MacOS, I want have a different Firefox instance running in a docker-selenium container on a Linux machine use this Profile.   According to the geckodriver documentation http://firefox-source-docs.mozilla.org/testing/geckodriver/Profiles.htmlCustom profiles can be provided to Firefox two different ways: 1. by appending --profile /some/location to the args capability, which will instruct geckodriver to use the profile in-place; 2. or by setting the profile capability to a Base64-encoded ZIP of the profile directory.  If this document is in fact true, I would prefer to do that second one. I have not been able to do that myself, nor have I found any evidence that anyone has done this in Ruby since approximately 2016. There is some evidence that other languages have done this, although evidence after the advent of marionette and geckodriver circa 2016 is sparse.   Examples are using watir, but I traced all the errors to the selenium bindings. This is what I understand about launching Firefox with Profiles with watir currently (watir 6.16.5, selenium-webdriver 3.142.6): we can choose among existing profiles by doing  `@browser = Watir::Browser.new :firefox, marionette: true,  profile: ""demoprofile""` where ""demoprofile"" has been created in advance. Note that `@browser = Watir::Browser.new :firefox, marionette: true,  profile: ""bogus""` yields an error ""unable to find profile: ""bogus""""  `@browser = Watir::Browser.new :firefox, marionette: true, profile: ""/full/path/to/ifkw017g.default-release.zip.b64""` yields the same error ""unable to find profile: ""full/path/to/ifkw017g.default-release.zip.b64""""  I've traced this error to here: https://github.com/SeleniumHQ/selenium/blob/2fd646c5d788b0f1002b969649d8e2fc24cebd03/rb/lib/selenium/webdriver/firefox/profile.rb#L48  `@browser = Watir::Browser.new :firefox, marionette: true, args: [""-profile"", ""/full/path/to/ifkw017g.default-release.zip.b64""]` gets us a running browser but the arg is ignored  After that, I edited the Firefox profiles.ini file directly to read  [Profile0] Name=default-release IsRelative=0 Path=/path/to/ifkw017g.default-release.zip.b64  This yields the error ""Not a directory..."" I have traced this error to the procedure somewhere near here in profile-helper.rb which is interestingly marked ""#TODO: must be a better way"" https://github.com/SeleniumHQ/selenium/blob/2fd646c5d788b0f1002b969649d8e2fc24cebd03/rb/lib/selenium/webdriver/common/profile_helper.rb#L55  I have been unable to discover any other place in the Ruby bindings for Firefox where Profiles are addressed. I may have missed something though.  A ""Zipper"" function exists but it is not clear how we could use this in Watir. https://github.com/SeleniumHQ/selenium/blob/2abd80f236d1a7459ef638e96af8c4efd86b4abd/rb/lib/selenium/webdriver/common/zipper.rb It does seem to have been used historically:  https://github.com/SeleniumHQ/selenium/issues/2933. Colleagues on the watir Slack channel who tried to use it with Selenium ended up with one of the `::Browser.new` errors noted above.  I don't see any other approaches using `Watir::Browser.new` that allow reading in a .zip.b64 Profile. If it is possible, I'm hoping someone will know how to do it. If it's not possible, I'm hoping that it can be implemented. It is a useful feature if it can be made to work.  And while the following approach is not optimal because it does not use the .zip.b64 file for the Profile, I can get Firefox to address a copy of a good profile correctly if I edit the default (and only the default) profiles.ini file to point to a directory where I have copied the profile contents:  [Profile0] Name=default-release IsRelative=0 Path=/path/to/copy/of/profile/directory  But this still does not get me a Firefox running my profile in a docker-selenium container. The documentation for docker-selenium suggests that while using a custom standalone Profile is possible, there is a current related bug in geckodriver that may or may not have a workaround: https://github.com/SeleniumHQ/docker-selenium/wiki/How-to-use-a-Firefox-custom-profile Even if we could work around the geckodriver bug, the docker-selenium issue report above requires `""firefoxOptions.addArguments(""-profile"", ""/tmp/firefox_profiles/hcqx24zh.selenium"");""` and we've demonstrated that there is no way to point `Watir::Browser.new` to an actual directory and have Firefox use it.   The only straightforward answer I have found is to build a localized custom docker-selenium image with the OS-specific Firefox Profile changes in place, but this is both inconvenient and also abandons features that worked circa 2016. I'm tracking progress on that here: https://github.com/elgalu/docker-selenium/issues/344  To summarize, here are the points where I found problems trying to make this work:  1. Geckodriver should document exactly what it will accept for a Profile, especially with changes since Firefox version 67. 2. The Ruby Selenium bindings should provide a mechanism to supply modern Profile arrangements to geckodriver. 3. Watir (which I use) should wrap the Selenium bindings properly with Watir::Browser.new 4. docker-selenium should implement a way to access a Firefox profile on the local filesystem for the Ruby bindings to use. 5. Related projects like Zalenium and the elgalu docker-selenium fork (which I use) should pick up the changes to docker-selenium.   I have not filed issues with other projects yet. I am hoping for constructive comments here before I do that.","closed","D-firefox,","chrismcmahon","2019-11-19T16:27:42Z","2019-12-20T06:54:30Z"
"","7243","kubernetes hub integration","We're using selenium inside kubernetes and its working pretty well. It would be nice though, if the hub itself was aware of kuberntes and could spin up / down deployments as load increaded/decreased.","closed","C-grid,","kfox1111","2019-05-28T22:24:52Z","2021-09-05T08:19:13Z"
"","7843","Clicks not going through because page is not ready or fully loaded yet","We updated the driver from 2.41 to 78 and it seems like right after you have told the driver to navigate to a page some things don't work like: * Using the Actions API with moveToElement and hover/click it does not hover/click on the element, it seems like it hovers it, but the click is not received by the browser. * element.sendKeys does not enter text on an  field  We use ExpectedConditions.waitForElementToBeClickable, but this does not seem to work. Adding some sleep just before the click seems to work, but seems like a dirty solution.   Also it no longer seems to wait for iframes to be loaded?","closed","","jeffrey-planon","2019-12-04T12:31:08Z","2020-01-03T15:56:38Z"
"","7761","Expose Server components over JMX","We have the `ManagedService` annotation that used to be used expose the old selenium server via JMX. We should make the new server equally manageable.","closed","C-java,","shs96c","2019-11-08T22:19:23Z","2021-09-05T08:27:50Z"
"","7227","selenium web-driver, scroll the element into view not working","We are using ruby + watir-webdriver for our UI automation.  Ruby Version - ruby 2.0.0p648 (2015-12-16) [i386-mingw32]  Selenium webdriver - 3.4.0  watir-scroll - 1.2.0  watir-webdriver - 0.9.0 Selenium web-driver - 3.4.0 gem installed  Firefox - 60ESR    Previous behaviour: Previously it worked fine with firefox 52ESR and selenium webdriver 3.3.0  Browser Capabilities:  profile = Selenium::WebDriver::Firefox::Profile.new     profile.secure_ssl = true     capabilities = Selenium::WebDriver::Remote::Capabilities.firefox(acceptInsecureCerts: true) @browser = Watir::Browser.new @browserType, :profile => profile, :desired_capabilities => capabilities  Problematic code:  @browser.div(:text=>child_element).wd.location_once_scrolled_into_view wd.location_once_scrolled_into_view - piece of code not working    Error:  Selenium::WebDriver::Error::WebDriverError:   Element  is not reachable by keyboard","closed","","jlnbalaji","2019-05-23T10:20:50Z","2019-08-14T10:09:45Z"
"","7742","WebDriverError: invalid argument: can't kill an exited process","We are getting intermittent test failures ( [0] E/launcher - WebDriverError: invalid argument: can't kill an exited process     at WebDriverError (/usr/lib/node_modules/protractor/node_modules/selenium-webdriver/lib/error.js:27:5)     at Object.throwDecodedError (/usr/lib/node_modules/protractor/node_modules/selenium-webdriver/lib/error.js:514:15)     at parseHttpResponse (/usr/lib/node_modules/protractor/node_modules/selenium-webdriver/lib/http.js:519:13)     at doSend.then.response (/usr/lib/node_modules/protractor/node_modules/selenium-webdriver/lib/http.js:441:30)     at process._tickCallback (internal/process/next_tick.js:109:7) From: Task: WebDriver.createSession()     at Function.createSession (/usr/lib/node_modules/protractor/node_modules/selenium-webdriver/lib/webdriver.js:769:24)     at Function.createSession (/usr/lib/node_modules/protractor/node_modules/selenium-webdriver/firefox/index.js:521:41)     at Direct.getNewDriver (/usr/lib/node_modules/protractor/built/driverProviders/direct.js:105:33)     at Runner.createBrowser (/usr/lib/node_modules/protractor/built/runner.js:195:43)     at q.then.then (/usr/lib/node_modules/protractor/built/runner.js:339:29)     at _fulfilled (/usr/lib/node_modules/protractor/node_modules/q/q.js:834:54)     at self.promiseDispatch.done (/usr/lib/node_modules/protractor/node_modules/q/q.js:863:30)     at Promise.promise.promiseDispatch (/usr/lib/node_modules/protractor/node_modules/q/q.js:796:13)     at /usr/lib/node_modules/protractor/node_modules/q/q.js:556:49     at runSingle (/usr/lib/node_modules/protractor/node_modules/q/q.js:137:13)   Here are the versions  which looks compatible with each other according to https://firefox-source-docs.mozilla.org/testing/geckodriver/Support.html ## Environment  [console]# webdriver-manager status [1:00:11] status selenium standalone version available: 3.141.59 [last] [1:00:11] I/status  chromedriver version available: 78.0.3904.70 [last] [1:00:11] I/status geckodriver version available: v0.26.0 [last] [1:00:11] I/status android-sdk is not present [1:00:11] I/status  appium is not present [console]:~# firefox --version Mozilla Firefox 66.0  ## Environment  OS:   Ubuntu 14.04 Browser:   Firefox  Browser version: 66.0.3 Browser Driver version:   GeckoDriver 0.26.0 Language Bindings version: Javascript selenium standalone version: 3.141.59 [last]","closed","C-nodejs,","isakemal","2019-11-05T01:37:42Z","2021-09-05T10:20:31Z"
"","7737","Rejuvenate log levels","We appreciate your previous feedback and it's very helpful! Here's a reissue of SeleniumHQ#7170 with a new version of our tool. It takes a long time, sorry for waiting. The tool made many fewer transformations, however, there were a few that we removed that you did not agree with in the original PR. Again, we'd appreciate any feedback and are willing to make further changes if you wish to incorporate our PR into your project.  Settings --- We have several analysis settings. We can vary these settings and rerun if you desire. The settings we are using in this pull request are:  Treat CONFIG levels as a category and not a traditional level, i.e., our tool ignores these log levels. Never lower the logging level of logging statements within catch blocks. Never lower the logging level of logging statements within if statements. Never lower the logging level of logging statements containing certain (important) keywords. Never raise the logging level of logging statements without particular keywords in their messages. Avoid log wrapping by disregarding logging statements contained in if statements mentioning log levels. The greatest number of commits from HEAD evaluated: 1000. The head at the time of analysis was: a49fb60   - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-java,","yiming-tang-cs","2019-11-01T17:43:36Z","2020-02-18T17:36:18Z"
"","7376","[rb] remove unnecessary code from Firefox::Profile class","Ways that Mozilla supports customizing these things are a little varied.  To point to an existing profile: ``` {""args"": [""-profile"", ""/path/to/your/profile""]} ``` To only specify prefs: ``` {""prefs"": {""foo"": ""bar""}} ``` To only specify extensions, we have an endpoint: ``` /session/{session id}/addon/install ``` (I requested that we be able to add extensions independently as part of options without needing an endpoint, but haven't seen progress: https://github.com/mozilla/geckodriver/issues/1476)  So the only way to set certificates at all, or extensions before initialization is with profile: ``` {""profile"": Base64_ENCODED_ZIP} ```  `Firefox::Profile` should only need to generate a default profile and allow for 1. Custom certificates 2. Adding Extensions 3. Specifying preferences (actually, I'm not certain if `profile` will override `prefs` or if they merge?)  So... This PR. 1. Pulls out the extra prefs we were adding for legacy driver 2. Removes legacy driver preferences from class  I'm not sure the best way to go about testing this in an automated fashion. I think someone needs to sit down with extensions and preferences and certificates to make sure everything does what we expect for all the different methods outlined above, and I'm not currently volunteering for that. :)","closed","D-firefox,","titusfortner","2019-07-08T22:34:07Z","2019-08-13T13:43:40Z"
"","6885","[internal build bug] gendocs.js doesn't work right if user has node_modules in parent directory","Very minor issue, feel free to close if you don't care.  The script `javascript/node/gendocs.js` runs `npm install` in a specific place and expects the `node_modules` directory to get installed there.  However, the way `npm install` works, if there isn't a package.json in the place where it's run (or a node_modules directory), npm will [walk up the ancestry tree](https://docs.npmjs.com/files/folders#more-information) in the local filesystem, looking for a node_modules directory or package.json. If the user happens to have a node_modules in one of these places, that means the script gendocs.js will fail— it will install js-dossier somewhere strange, and won't be able to find it afterward.  I am not sure what the best fix is. Creating an artificial, empty node_modules directory would work, but doesn't seem ""right"".","closed","C-nodejs,","n-rook","2019-01-25T23:26:59Z","2019-08-14T16:09:39Z"
"","7452","use gradle","use gradle or maven","closed","","deeprobin","2019-07-30T09:11:25Z","2019-08-29T14:09:35Z"
"","7379","[issue-7350] Updating Jetty version (9.4.19.v20190610)","Updating Jetty version to 9.4.19.v20190610, based on issue #7350 and the underlying security issue.     - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","mmerrell","2019-07-09T04:57:45Z","2019-07-11T18:36:55Z"
"","7018","Added EventFiringWebElement to the isinstance check in the move_to me…","Updated The isinstance check to look for WebElement or EventFiringWebElement. This will fix cases where the move_to() method in ActionChains will throw AttributeErrors when using EventFiringWebDriver.  Fixes #6604       - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/7018)","closed","C-py,","kmcgon","2019-03-10T16:31:09Z","2020-06-04T18:44:52Z"
"","7414","Updating okhttp3 library to 4.0.1","Updated okhttp3 to v4.0.1 Updated okio to v2.2.2 Added new dep: kotlin-stdlib v 1.3.41  I added the kotlin lib to the /third_party/java path, but if this keeps up we might consider a /third_party/kotlin path. I'm content to leave it like it is as long as it uses the jvm, but let me know if this should change now.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","mmerrell","2019-07-20T21:31:30Z","2019-08-05T15:04:27Z"
"","7725","Possible issue with Chromedriver 78, Selenium can not find web element of embeded PDF opened in Chrome","Until my google Chrome wasn't updated to version 78 my test automation scripts worked fine. So I am not able anymore to find WebElement with id='plugin' in PDF opened in browser using Selenium WebDriver and Java:  ```","closed","","MilosRadovic304","2019-10-30T09:47:10Z","2019-11-30T20:09:46Z"
"","6991","IE sendKeys file selection not found sometimes","Unfortunately the repro involves a lot of retries with our testing framework  SendKeys triggers the opening of the file selection dialog. I assume when the system is a bit slower it doesn't find the ""Alternate Modal Top Most"" window (the seems the 2 threads involved here have a race condition).  ""Alternate Modal Top Most"" windows is only tried to find once, which means when the windows isn't there in the beginning it won't find it even with the retries on the UIA.  I'll follow up with a fix  OS: Windows 10 1809 Browser: IE Browser Driver version: IEDriver 3.141.10 Language Bindings version: Java 3.141.159","closed","","reinsch82","2019-03-04T13:03:48Z","2019-08-14T20:09:57Z"
"","7589","Issue invoking edge browser 17763 using selenium server 3.5 and above","Unfortunately i have issue mentioned in ticket https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/21072833/ but i cant quiet reopen ticket. So i thought ill open new one as the resolution didn’t work for me.  I have win10 and edge browser version 17763. My automation framework used custom location for MicrosoftWebdriver.exe and so i copied the same from it’s location C:\Windows\SysWOW64 .  I tried different selenium server versions from 3.5.3 , 3.11, 3.14 and so on All of which say same error as below. The error slightly varies with 3.14.  With 3.5.3 and 3.11 , 3.12 error is: 2019-09-18 10:14:21.220:INFO:osjshC.ROOT:qtp1101288798-12: org.openqa.selenium.remote.server.WebDriverServlet-26be92ad: Initialising WebDriverServlet 10:14:21.267 INFO - Found handler: org.openqa.selenium.remote.server.commandhandler.Status@7dff184 10:14:21.283 INFO - /status: Executing GET on /status (handler: Status) 10:14:21.361 INFO - Binding default provider to: org.openqa.selenium.chrome.ChromeDriverService 10:14:21.361 INFO - Found handler: org.openqa.selenium.remote.server.BeginSession@56c1172 10:14:21.361 INFO - /session: Executing POST on /session (handler: BeginSession) 10:14:21.392 INFO - Capabilities are: Capabilities {proxy={}, acceptSslCerts=true, browserName=MicrosoftEdge, javascriptEnabled=true, platformName=ANY, version=, platform=ANY, } 10:14:21.392 INFO - Capabilities {proxy={}, acceptSslCerts=true, browserName=MicrosoftEdge, javascriptEnabled=true, platformName=ANY, version=, platform=ANY, } matched class org.openqa.selenium.remote.server.ServicedSession$Factory (provider: org.openqa.selenium.edge.EdgeDriverService) 10:14:21.392 INFO - Capabilities {proxy={}, acceptSslCerts=true, browserName=MicrosoftEdge, javascriptEnabled=true, platformName=ANY, version=, platform=ANY, } matched class org.openqa.selenium.remote.server.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) [10:14:21.502] - Listening on http://127.0.0.1:12978/ [10:14:21.502] - Listening on http://[::1]:12978/ [10:14:22.470] - Invalid capabilities  With 3.14: 10:27:59.783 INFO [ActiveSessionFactory.apply] - Capabilities are: { ""acceptSslCerts"": true, ""browserName"": ""MicrosoftEdge"", ""javascriptEnabled"": true, ""proxy"": { }, ""version"": “” } 10:29:31.397 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.edge.EdgeDriverService) [10:29:31.507] - Listening on http://127.0.0.1:3986/ [10:29:31.507] - Listening on http://[::1]:3986/ [10:29:32.382] - Invalid capabilities 10:29:32.397 INFO [ServicedSession$Factory.apply] - The specified arguments passed to the command are invalid. Build info: version: '3.141.59’, revision: 'e82be7d358’, time: ‘2018-11-14T08:25:53’ System info: host: 'DESKTOP-I4FJPQS’, ip: '10.96.199.60’, os.name: 'Windows 10’, os.arch: 'amd64’, os.version: '10.0’, java.version: ‘1.8.0_161’ Driver info: driver.version: unknown remote stacktrace: org.openqa.selenium.InvalidArgumentException: The specified arguments passed to the command are invalid. Build info: version: '3.141.59’, revision: 'e82be7d358’, time: '2018-11-14T08:25:5  Also in the end it says: The following JSON wire protocol command endpoint is not allowed when server is running in W3C mode.","closed","D-edge,","srinidhi158","2019-09-22T17:07:17Z","2021-09-05T08:31:29Z"
"","6940","Issue running Microsoft Edge drivers in parallel","Unable to work with parallel browsers by using Microsoft Edge. Parallel test execution works fine with chrome and Internet Explorer. I'm using TestNg xml file to run tests in parallel.  Exception Message:  org.openqa.selenium.WebDriverException: Unable to parse remote response: Unknown error  	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:115) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:131) 	at org.openqa.selenium.edge.EdgeDriver.(EdgeDriver.java:141) 	at org.openqa.selenium.edge.EdgeDriver.(EdgeDriver.java:96) 	at com.configurations.BrowserConfiguration.microsoftEdgeDriverConfiguration(BrowserConfiguration.java:89) 	at com.configurations.BrowserConfiguration.getBrowserDriver(BrowserConfiguration.java:47) 	at com.testCases.InitialBaseTest.initializeDriver(InitialBaseTest.java:31) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.base/java.lang.reflect.Method.invoke(Method.java:566) 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80) 	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564) 	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213) 	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138) 	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:175) 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:107) 	at org.testng.TestRunner.privateRun(TestRunner.java:767) 	at org.testng.TestRunner.run(TestRunner.java:617) 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334) 	at org.testng.SuiteRunner.access$000(SuiteRunner.java:37) 	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:368) 	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64) 	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) 	at java.base/java.lang.Thread.run(Thread.java:834) Caused by: org.openqa.selenium.json.JsonException: Unable to determine type from: U. Last 1 characters read: U Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03' System info: host: 'my computer', ip: '192.168.1.107', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.2' Driver info: driver.version: EdgeDriver 	at org.openqa.selenium.json.JsonInput.peek(JsonInput.java:122) 	at org.openqa.selenium.json.JsonTypeCoercer.lambda$null$6(JsonTypeCoercer.java:140) 	at org.openqa.selenium.json.JsonTypeCoercer.coerce(JsonTypeCoercer.java:126) 	at org.openqa.selenium.json.Json.toType(Json.java:69) 	at org.openqa.selenium.json.Json.toType(Json.java:55) 	at org.openqa.selenium.json.Json.toType(Json.java:50) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:112) 	... 31 more  Steps to reproduce:  Create a testNg xml file for parallel execution and run it.  Environment Details: Windows 10 - 64 bit Browser - Microsoft Edge 17.17134 Microsoft driver - Version: 6.17134 Selenium Version - 3.141.59","closed","","msnagra","2019-02-15T14:39:16Z","2019-08-14T21:10:02Z"
"","7469","Chrome InitSession ERROR invalid argument: 'firstMatch' must contain at least one entry","Unable to create chrome session with Chrome v76 and selenium v3.5.3, getting **ERROR invalid argument: 'firstMatch' must contain at least one entryERROR invalid argument: 'firstMatch' must contain at least one entry** The 'firstMatch' is empty.  We are getting error with below code:    ```     DesiredCapabilities caps = new DesiredCapabilities();         caps.setPlatform(Platform.ANY);         ChromeOptions options = new ChromeOptions();         options.addArguments(""--start-maximized"");         caps.setCapability(ChromeOptions.CAPABILITY, options);        driver = new ChromeDriver(caps); ```  Error:  ``` Starting ChromeDriver 76.0.3809.68 (420c9498db8ce8fcd190a954d51297672c1515d5-refs/branch-heads/3809@{#864}) on port 7818 Only local connections are allowed. Please protect ports used by ChromeDriver and related test frameworks to prevent access by malicious code. Exception in thread ""main"" org.openqa.selenium.InvalidArgumentException: invalid argument: 'firstMatch' must contain at least one entry Build info: version: '3.5.3', revision: 'a88d25fe6b', time: '2017-08-29T12:42:44.417Z' System info: host: 'xxxxx', ip: 'xxxxx', os.name: 'Windows Server 2016', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_192' Driver info: driver.version: ChromeDriver remote stacktrace: Backtrace: 	Ordinal0 [0x00C87C93+1473683] 	Ordinal0 [0x00C0ADB1+961969] 	Ordinal0 [0x00B942E3+475875] 	Ordinal0 [0x00B48A06+166406] 	Ordinal0 [0x00B48DFA+167418] 	Ordinal0 [0x00B48D1D+167197] 	Ordinal0 [0x00B4742B+160811] 	Ordinal0 [0x00B30AE6+68326] 	Ordinal0 [0x00B31BF0+72688] 	Ordinal0 [0x00B31B89+72585] 	Ordinal0 [0x00C24B77+1067895] 	GetHandleVerifier [0x00D26875+506677] 	GetHandleVerifier [0x00D26610+506064] 	GetHandleVerifier [0x00D2D1B8+533624] 	GetHandleVerifier [0x00D2704A+508682] 	Ordinal0 [0x00C1C266+1032806] 	Ordinal0 [0x00C1C0DF+1032415] 	Ordinal0 [0x00C26A8B+1075851] 	Ordinal0 [0x00C26BF3+1076211] 	Ordinal0 [0x00C25BA5+1072037] 	BaseThreadInitThunk [0x755562C4+36] 	RtlSubscribeWnfStateChangeNotification [0x77DE1F69+1081] 	RtlSubscribeWnfStateChangeNotification [0x77DE1F34+1028]  	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source) 	at java.lang.reflect.Constructor.newInstance(Unknown Source) 	at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$new$0(W3CHandshakeResponse.java:57) 	at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$getResponseFunction$2(W3CHandshakeResponse.java:104) 	at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$24(ProtocolHandshake.java:359) 	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source) 	at java.util.Spliterators$ArraySpliterator.tryAdvance(Unknown Source) 	at java.util.stream.ReferencePipeline.forEachWithCancel(Unknown Source) 	at java.util.stream.AbstractPipeline.copyIntoWithCancel(Unknown Source) 	at java.util.stream.AbstractPipeline.copyInto(Unknown Source) 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source) 	at java.util.stream.FindOps$FindOp.evaluateSequential(Unknown Source) 	at java.util.stream.AbstractPipeline.evaluate(Unknown Source) 	at java.util.stream.ReferencePipeline.findFirst(Unknown Source) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:362) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:136) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:142) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:82) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:646) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:255) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:237) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:138) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:178) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:146) ```  ChromeDriver logs-  ``` [1565052738.114][INFO]: Starting ChromeDriver 76.0.3809.68 (420c9498db8ce8fcd190a954d51297672c1515d5-refs/branch-heads/3809@{#864}) [1565052738.114][INFO]: Please protect ports used by ChromeDriver and related test frameworks to prevent access by malicious code. [1565052739.230][INFO]: [204043e3bc8e2cb05f8db44dcf269a1c] COMMAND InitSession {    ""capabilities"": {       ""alwaysMatch"": {        },       ""desiredCapabilities"": {          ""chromeOptions"": {             ""args"": [ ""--start-maximized"" ],             ""extensions"": [  ]          },          ""platform"": ""ANY""       },       ""firstMatch"": [  ],       ""requiredCapabilities"": {        }    },    ""desiredCapabilities"": {       ""chromeOptions"": {          ""args"": [ ""--start-maximized"" ],          ""extensions"": [  ]       },       ""platform"": ""ANY""    },    ""requiredCapabilities"": {     } } [1565052739.241][INFO]: [204043e3bc8e2cb05f8db44dcf269a1c] RESPONSE InitSession ERROR invalid argument: 'firstMatch' must contain at least one entry [1565052739.241][DEBUG]: Log type 'driver' lost 1 entries on destruction ```  ## Environment  OS: Windows Browser: Chrome Browser version: v 76.0.3809.87 Browser Driver version: ChromeDriver v76.0.3809.68 Language Bindings version: Java v3.5.3  Could you please look into it.","closed","","meenalmenghani","2019-08-06T01:40:20Z","2019-09-05T09:09:34Z"
"","7288","Access is denied: 'OpenQA.Selenium.Remote.DesiredCapabilities'. -> AppiumOptions.ctor()","To solve the port leaking issue https://github.com/SeleniumHQ/selenium/issues/4162, I upgrade the selenium to v4.0.0a1 and use AppiumOptions. However, it always reports 'Access is denied' error.  The driver setup is like this: ``` var options = new AppiumOptions(); options.AddAdditionalOption(""platformName"", ""iOS""); options.AddAdditionalOption(""deviceName"", ""iPhone X""); ``` Any solution on that?","closed","","jackwangchs","2019-06-13T12:18:43Z","2019-08-14T08:09:57Z"
"","6989","[rb] rename WebDriver::Options class to WebDriver::Manage","to disambiguate from using Options class to create Capabilities  I'd like to use `WebDriver::Options` or `WebDriver::W3COptions` as a parent class for `Chrome::Options`, etc, similar to how Java/C# do it. Even if we don't go that route ""Options"" is confusing now that we are using them for Browsers.   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6989)","closed","C-rb,","titusfortner","2019-03-03T21:43:57Z","2019-04-15T23:01:10Z"
"","7358","Update LoggingPrefs in C# to be compatible with ChromeDriver 75+ (#7335)","This will be needed to start fixing #7335. I'm still experiencing some problems, but I can't work out if that's just because of my local configuration  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","MatthewSteeples","2019-07-04T19:15:31Z","2019-07-09T09:11:57Z"
"","6868","Update our HttpClient to support streaming","This will allow us to avoid having to hold the entire request in memory when acting as a proxy.","closed","I-enhancement,","shs96c","2019-01-21T12:55:19Z","2019-08-14T09:09:34Z"
"","6965","[rb] move driver responsibilities into Service class","This tightens up what is allowed in the driver initialization:  Instead of this: ``` opts = {driver_path: '/path/to/driver', port: '1234', driver_opts: {log_path: '/path/to/log', verbose: true}} Selenium::WebDriver.for :chrome, opts ```  You now do this: ``` opts = {path: '/path/to/driver', port: '1234', args: ['--log_path=/path/to/log', '--verbose']} service = Selenium::WebDriver::Service.chrome(opts) Selenium::WebDriver.for :chrome, service: service ```  1. `driver_opts` is deprecated and we require users to be explicit about `args` as an `Array` of `String` including the `--` 2. This code paves the way for removing all of the logic in all of the subclasses 3. Subclasses are kept as `@api private` because it might make sense to remove them entirely when we stop supporting deprecations   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6965)","closed","C-rb,","titusfortner","2019-02-25T01:28:09Z","2020-07-12T23:39:48Z"
"","7283","Selenium test exported as JUnit test *.jar file acts differently on Mozilla Firefox","This question is pretty straightforward... When I created my test in Selenium IDE, I was able to automate the web browser to the point where I click on a link and the zip file automatically downloads. Mozilla Firefox is also set to download zip files automatically.   However, when I export the selenium IDE to java (JUnit) and create a *.jar file from that exported test and run from the command line, everything works as expected until the file is clicked. The browser then asks where I would like to save or what application I would like to open with. How is this possible when the default is set to auto download zip files? Has anybody ever seen a similar problem?  Thanks!","closed","","ojake13","2019-06-12T12:49:18Z","2019-08-14T08:10:02Z"
"","6943","remove --disable-gpu option for headless Chrome","This PR removes the `--disable-gpu` option when invoking Chrome in headless mode on Windows.  Disabling GPU acceleration was a temporary workaround for crashes on Windows when running in headless mode.  GPU acceleration works in recent versions of Chrome, and there is no longer a need to disable it.  It is removed from all client bindings (and associated tests) that were sending it:  * Java  * JS  * Ruby  * Python ----   - [X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6943)","closed","","cgoldberg","2019-02-17T23:10:40Z","2019-02-18T15:12:39Z"
"","7225","[Grid] Change Session Termination log message from info to warning","This PR changes a Grid log message from `info` to `warning`. I encountered this error when a session failed to be created, but I wasn't properly alerted of the issue because the log level was at info.  The code comment indicates ""should not happen,"" so if it does happen it would be ideal to be given a warning log.  Not sure if this code is used in Se4, but figured I'd open this in case it is.  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","dylanlive","2019-05-21T21:46:04Z","2019-05-23T14:01:48Z"
"","7760","Add support for creating and removing virtual authenticators","This patch adds support for the Virtual Authenticators WebDriver API, allowing developers to write E2E tests that exercise the WebAuthn API. At the moment, the API is only supported on Chrome 79 onwards.  Fixes #7753  - [ X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla) -- Google already has a CLA on file with Selenium.","closed","C-java,","nsatragno","2019-11-08T20:47:54Z","2019-12-12T00:38:21Z"
"","7714","c# selenium navigate().gotourl timing out when authentication box appears","This issue has been raised several times but I'm yet to find a resolution or a way forward. Basically, since moving from Windows 7 to Windows 10 and IE 11, I'm encountering the following when executing Driver.Navigate().GoToUrl(""URL HERE""):  ""Timed out waiting for page to load.""     at OpenQA.Selenium.Remote.RemoteWebDriver.UnpackAndThrowOnError(Response errorResponse)    at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)    at OpenQA.Selenium.Remote.RemoteWebDriver.set_Url(String value)    at OpenQA.Selenium.Remote.RemoteNavigator.GoToUrl(String url)    at TM10.PUB.StepDefinitions.PubSteps.NavigateToSite() in {LOCAL PATH TO SOLUTION FILE HERE}:line 37    at TM10.PUB.StepDefinitions.PubSteps.GivenIAmOnThePublicationHomePage() in {LOCAL PATH TO SOLUTION FILE HERE}:line 31    at lambda_method(Closure , IContextManager )  The following issues suggest that Selenium and IE no longer support automation of the security authentication dialogue box (login prompt where a username and password is entered) although the timeout is actually occurring within the Driver.Navigate().GoToUrl(""URL HERE"") command. We use AutoIt to execute against the login window but the script is failing before that.  https://github.com/SeleniumHQ/selenium/issues/6098 https://github.com/SeleniumHQ/selenium/issues/5932 https://github.com/SeleniumHQ/selenium/issues/5278  Basically, we need a proven way around this as a number of our sites which we have existing automated tests for require a user to login and having the facility to handle this is required.  For info, when we go back to using a Windows 7 machine with IE 10, the tests all work fine.","closed","I-stale,","CelDraTechSolutions","2019-10-25T11:26:08Z","2021-12-03T00:06:45Z"
"","7846","fix serialization methods","This is the same PR as #7115 but applied to the 3.x branch This will actually help with code I'm writing for Sauce right now.   Any objections to merging it for 3.x? Unit Tests are all passing","closed","C-rb,","titusfortner","2019-12-05T23:13:13Z","2020-07-12T23:26:19Z"
"","7444","selenium.common.exceptions.WebDriverException: Message: invalid argument: can't kill an exited process #94","This is the code:   ``` from selenium.webdriver import Firefox from selenium.webdriver.firefox.options import Options import time import sys class HB:     def __init__(self):         print(""loading browser"")         opts = Options()         opts.headless = True         self.browser = Firefox(options=opts) ```      These are the versions of everything: ```  pip3 freeze selenium==3.141.0 firefox -v Mozilla Firefox 68.0.1 /geckodriver --version geckodriver 0.24.0 ( 2019-01-28) lsb_release -a No LSB modules are available. Distributor ID:	Ubuntu Description:	Ubuntu 16.04.3 LTS Release:	16.04 Codename:	xenial ``` Full error:  ```  Traceback (most recent call last):   File ""/home/juan/telegram_homebanking/venv/lib/python3.5/site-packages/telegram/ext/dispatcher.py"", line 279, in process_update     handler.handle_update(update, self)   File ""/home/juan/telegram_homebanking/venv/lib/python3.5/site-packages/telegram/ext/messagehandler.py"", line 169, in handle_update     return self.callback(dispatcher.bot, update, **optional_args)   File ""bot.py"", line 29, in echo     hb = HB()   File ""/home/juan/telegram_homebanking/hb.py"", line 11, in __init__     self.browser = Firefox(options=opts)   File ""/home/juan/telegram_homebanking/venv/lib/python3.5/site-packages/selenium/webdriver/firefox/webdriver.py"", line 174, in __init__     keep_alive=True)   File ""/home/juan/telegram_homebanking/venv/lib/python3.5/site-packages/selenium/webdriver/remote/webdriver.py"", line 157, in __init__     self.start_session(capabilities, browser_profile)   File ""/home/juan/telegram_homebanking/venv/lib/python3.5/site-packages/selenium/webdriver/remote/webdriver.py"", line 252, in start_session     response = self.execute(Command.NEW_SESSION, parameters)   File ""/home/juan/telegram_homebanking/venv/lib/python3.5/site-packages/selenium/webdriver/remote/webdriver.py"", line 321, in execute     self.error_handler.check_response(response)   File ""/home/juan/telegram_homebanking/venv/lib/python3.5/site-packages/selenium/webdriver/remote/errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.WebDriverException: Message: invalid argument: can't kill an exited process  ```","closed","C-py,","juancrescente","2019-07-28T23:00:53Z","2021-09-05T08:12:23Z"
"","7608","GPG signing of maven artefacts","This is required by Maven Central to allow us to perform a release.","closed","C-build,","shs96c","2019-09-27T08:41:58Z","2019-12-13T09:07:40Z"
"","7426","Updated drivers in folder driver c# nugetPackage","This is not an issue at all. Is more a suggestion.   I'm a developer that uses a lot this library in Mac and Windows in C#. It would be nice to have al the drivers in a same folder when downloading the NuGet package from the NuGet Packager Manage Tool in Visual Studio. It would be better than looking for any driver on internet.  Hope this works. Nice Library!!!!!","closed","","ChuchoPV","2019-07-23T15:13:57Z","2019-08-22T17:09:34Z"
"","7400","Fix Ruby spec execution","This is in response to #7264, since we decided that PR is not the right way to do it.   I think we decided on: move the non-browser-specific tests out of the browser-specific test files.  So if the ""chrome only"" tests pass when using Firefox for instance, they should be moved to unit tests or into a common spec file of some kind.","closed","C-rb,","titusfortner","2019-07-16T20:41:38Z","2021-09-05T08:25:05Z"
"","7026","Windows Auth Box - GoTo URL Never Completes","This is an odd one I need some help with. We have an automation project for an internal application that has a windows auth box when you hit the site. originally they were passing in the user/pass intp the url string but we started to notice some tests failing that seemed to be tied to permissions.  I wanted to setup AutoIT and see if this fixed the issue we were seeing but I ran into a new problem. The url we go to is an internal ip:port. When I goto the url, ex. 12.34.56.78:1111 the browser (chrome) opens but then fails with:      OpenQA.Selenium.WebDriverException: 'The HTTP request to the remote WebDriver server for URL http://localhost:7233/session/be85ee0483da9772b136488bed19c43b/url timed out after 180 seconds.'  It appears that webdriver is waiting for something to complete and I can't get to the next step.  The web page is fully loaded with the auth box staring at me.   I have tried the below but each one loads the page and then throws the error.          _webDriver.Navigate().GoToUrl(url);     _webDriver.Url = url;  I also tried using a URI.  I am running latest Selenium and ChromeDriver v72. I also tried using 2.46. Could this be a selenium bug or maybe some internal security settings interfering?","closed","","xDazedx","2019-03-13T14:57:09Z","2019-08-14T18:09:50Z"
"","7373","OkHttp - upgrade to v4.0.1.","This is a subtle bug that's not going to affect everyone. If a Maven project using 'selenium-java' (etc) has another dependency on OkHttp (explicit or transitive) and that dep is at v4.0.0 then Maven's rules are that it will construct classpaths using the latest of all the alternatives.  That means that selenium-java's Drivers are going to use v4 of OkHttp when they were compiled against v3.11.0 (and all manifests implicate that one). There's trickery to downgrade OkHttp in use which will probably work (I will report back), but versions of deps in OSS pieces should attempt to keep up with maintainers releases. **So can we upgrade OkHttp's dependency**?  Stack trace, for the benefit of others:  ``` java.lang.NoSuchFieldError: Companion 	at okhttp3.internal.Util.(Util.kt:69) 	at okhttp3.internal.connection.RealConnectionPool.(RealConnectionPool.kt:261) 	at okhttp3.ConnectionPool.(ConnectionPool.kt:37) 	at okhttp3.ConnectionPool.(ConnectionPool.kt:39) 	at org.openqa.selenium.remote.internal.OkHttpClient$Factory.(OkHttpClient.java:116) 	at org.openqa.selenium.remote.http.HttpClient$Factory.createDefault(HttpClient.java:66) 	at org.openqa.selenium.remote.HttpCommandExecutor.(HttpCommandExecutor.java:47) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:181) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:168) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:157) ```  Yes yes, OkHttp3 is the strict name of the OSS piece, and it's at v4.0.0 :-O","closed","C-java,","paul-hammant","2019-07-08T18:01:25Z","2019-08-21T20:09:33Z"
"","7110","[rb] create a Common Options class to handle w3c specific capabilities","This implementation has more tidying (including more specs). The idea is to be able to initialize a driver and specify browser specific things without needing to use Capabilities class at all (which most other bindings allow)  Let's compare what Ruby has to what other bindings have...  Java wants users to only use Options classes for browsers (and `MutableCapabilities` class for custom things like `sauce:options`). They implement this by subclassing Options classes 4 levels deep below Capabilities class, and everything gets handled that way.  Python is a little different in that you can use a `set_capability` method to add whatever you want, and then when the driver initializes it only allows through things that match w3c or have a colon in the keyword.  1. Pulls out the common w3c things into a `Common::Options` class 2. Everything implements `#as_json` for nested serialization, and I updated all the places where `#as_json` wasn't using `String` keys 3. I added explicit support for everything specified in Firefox & Chrome documentation. 4. I deprecated anything that can (and should) be used by standard Ruby accessors instead of extra methods. I can undo that, but this is literally the whole point of having `attr_accessor` when you don't have any additional logic attached. 5. The things that need additional parsing are now handled in both the constructor and the defined method 6. Some of the additional validations broke specs that allowed random/invalid Strings to be passed in, so that had to get tidied 7. I added an `@custom` which is essentially just taking everything that isn't explicitly defined in either the browser class or the superclass (w3c). This is my initial pass at supporting things like `sauce:options` without having to build the capabilities Hash/JSON from scratch (which we have to do now) 8. This also allows us to specify `browserName` inside the options class directly 9. Rubocop is failing for Chrome Options code because of complexity, I think we'll need to implement it similarly to how IE is currently implemented to fix it. 10. With this we can pretty much immediately get rid of all of the private `create_capabilities` code in the driver initialization (essentially the thing that makes working with Remote sessions more of a pain than it should be)  There's definitely more tidying, but this passes the current specs and I want to get some agreement on what of this we want to push forward with for me to keep working on it.  This is also something I can get help with from any Rubyists at the workshop tomorrow if I can get additional direction/buy-in.   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/7110)","closed","C-rb,","titusfortner","2019-04-16T15:21:31Z","2020-07-12T23:35:38Z"
"","7698","Add python_requires to help pip","This helps pip install the most recent release for the Python version the user is running. That means there will always still be a release available for them to use, just it won't be receiving updates (like CPython 2.7 itself, soon).  It will make dropping Python 2.7 (and other versions) smoother.  https://packaging.python.org/guides/distributing-packages-using-setuptools/#python-requires  https://github.com/SeleniumHQ/selenium/issues/7462#issuecomment-544460641   - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","hugovk","2019-10-21T11:30:42Z","2019-10-21T16:15:14Z"
"","7848","selenium crashes because of IPv6?","This function fails for `'localhost', 34005`: https://github.com/SeleniumHQ/selenium/blob/master/py/selenium/webdriver/common/utils.py#L46  this line: `socket.getaddrinfo(host, None)` returns: ```python [(, , 6, '', (10, b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00')), (, , 17, '', (10, b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00')), (, , 0, '', (10, b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00')), (, , 6, '', ('127.0.0.1', 0)), (, , 17, '', ('127.0.0.1', 0)), (, , 0, '', ('127.0.0.1', 0))] ```  in this line: `for family, _, _, _, sockaddr in addrinfos:` sockaddr becomes: `(10, b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00')`  And that `10` is goes to `is_connectable(port, sockaddr[0])` and then everything crashes with: ``` (Pdb) is_connectable(port, sockaddr[0]) *** TypeError: getaddrinfo() argument 1 must be string or None ```  I'm not using IPv6, but I guess there is a support for it in Linux","closed","","kamikaze","2019-12-06T04:06:19Z","2021-09-05T08:10:35Z"
"","7446","fix: DeprecationWarning of base64.encodestring()","This fixes the following error: ``` env/lib/python3.5/site-packages/selenium/webdriver/remote/webelement.py:695: DeprecationWarning: encodestring() is a deprecated alias, use encodebytes() ```       - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-py,","mxschmitt","2019-07-29T10:12:24Z","2019-11-25T09:09:44Z"
"","7612","[rb] Loosen dependency on childprocess in ruby gemspec.","This fixes #7586 so that users of selenium-webdriver can upgrade the childprocess gem and also Rake.  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-rb,","connorshea","2019-09-28T04:03:34Z","2019-10-03T16:32:36Z"
"","6939","[py] Update driver initialisation to use service and option objects","This deprecates all the other variables in the initialization simplifying the code in the future to look like ""driver = webdriver.(service, options)"" or use the default of ""driver = webdriver.()""  - [ ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6939)","closed","","xxf0912","2019-02-15T07:38:54Z","2019-07-17T11:52:41Z"
"","7119","Fix undefined method encoded for String","This change is [](https://reviewable.io/reviews/seleniumhq/selenium/7119)","closed","C-rb,","zlyaksa","2019-04-19T05:31:07Z","2019-04-24T06:04:25Z"
"","7565","4.0 alpha 3 (or proper release) timing?","There's a bug, 7390, that has been fixed in code in which the dev @jimevans  said will be in alpha 3. Is there any idea when this will happen? I've been waiting a while now and figured I'd see if there are any plans yet. Please let me know. Thanks.","closed","","chriscapaci","2019-09-13T15:15:17Z","2019-09-13T18:40:17Z"
"","7635","Error in API frontpage","There is an error in the main usage example offered at https://seleniumhq.github.io/selenium/docs/api/javascript/index.html  ```javascript const {Builder, By, Key, until} = require('selenium-webdriver');  (async function example() {   let driver = await new Builder().forBrowser('firefox').build();   try {     await driver.get('http://www.google.com/ncr');     await driver.findElement(By.name('q'));.sendKeys('webdriver', Key.RETURN);     await driver.wait(until.titleIs('webdriver - Google Search'), 1000);   } finally {     await driver.quit();   } })(); ```  There is a semicolon in the middle of the findElement line.  ```javascript     await driver.findElement(By.name('q'));.sendKeys('webdriver', Key.RETURN); ```","closed","help wanted,","cefn","2019-10-02T06:44:29Z","2022-01-26T00:09:50Z"
"","6994","[py] Raise error for unsupported method","The Selenium wire protocol does not define a ""set window rect"" method [1]. Although similar behavior can be achieved by composing available methods, doing so could lead to observable differences with WebDriver (for instance, depending on the order the methods are invoked) and cause issues when migrating.  Immediately raise an exception if the `set_window_rect` method is invoked for a browser which uses the Selenium wire protocol. Extend the method's documentation to include a recommendation on how to update call sites in a forward-compatible way.  [1] https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6994)","closed","C-py,","jugglinmike","2019-03-04T18:09:04Z","2019-04-17T12:30:18Z"
"","6897","Raspberry pi 3 drive = webdriver.Firefox() exeption connection","The problem occurs when the object instance is made ``` from selenium import webdriver browser = webdriver.Firefox() ```  in this part it displays a browser window and the following error appears  ``` Traceback (most recent call last):   File """", line 1, in    File ""/opt/folder/lib/python3.5/site-packages/selenium/webdriver/firefox/webdriver.py"", line 174, in __init__     keep_alive=True)   File ""/opt/folder/lib/python3.5/site-packages/selenium/webdriver/remote/webdriver.py"", line 157, in __init__     self.start_session(capabilities, browser_profile)   File ""/opt/folder/lib/python3.5/site-packages/selenium/webdriver/remote/webdriver.py"", line 252, in start_session     response = self.execute(Command.NEW_SESSION, parameters)   File ""/opt/folder/lib/python3.5/site-packages/selenium/webdriver/remote/webdriver.py"", line 321, in execute     self.error_handler.check_response(response)   File ""/opt/folder/lib/python3.5/site-packages/selenium/webdriver/remote/errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.WebDriverException: Message: connection refused ```  OS:  Distributor ID: Raspbian Description:    Raspbian GNU/Linux 9.6 (stretch) Release:        9.6 Codename:       stretch Architecture:Linux raspberrypi 4.14.50-v7+ #1122 SMP Tue Jun 19 12:26:26 BST 2018 armv7l GNU/Linux Browser: Mozilla Firefox Browser version: 52.9.0 Browser Driver version: geckodriver 0.19.1 Language Bindings version: Python 3.5.3  virtualenv: 16.1.0 Selenium Grid version (if applicable): selenium  3.141.0","closed","R-awaiting answer,","hitokiri","2019-01-29T21:31:55Z","2019-08-14T18:09:44Z"
"","7145","Selenium downloading 4.0.0-alpha-1 as dependency","The POM file for several Selenium libraries specifies version as ""[3.1.0,4.0.0)"". When downloading these dependencies, several of them come as 4.0.0-alpha-1 jar files. This mainly seems to be happening with Selenium-Support, Selenium-API, and Selenium-Remote-Driver.   I believe this is because ""4.0.0-alpha-1"" is technically less than ""4.0.0"".  Can the alpha builds be renamed in order for them to not be downloaded as dependencies?   Update: This seems to be mostly a problem for those that have older 3.x versions of Selenium defined in their project. Setting the project dependency to be ""3.141.59"" seems to keep Selenium at that version and not download any Alpha builds.","closed","","camerenisonfire","2019-04-26T19:06:56Z","2019-08-14T12:09:58Z"
"","7230","[rb] Add missing verifications in the test.","The option is set in this test, but  it was not confirmed. I added the verifying code.  Test passes have been verified with [Travis CI results](https://travis-ci.org/RustyNail/selenium/builds/536619774).       - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","RustyNail","2019-05-24T05:57:48Z","2019-05-27T08:01:10Z"
"","7427","Node.js npm package does not have lib/test anymore","The node.js npm package used to have the `lib/test` folder which contains code for a web server and web pages for testing. I use it for testing in a project that depends on the node.js npm package.  However It does not exist anymore in the current version 4.0.0-alpha.4. I'm just wondering if it's removed by intention or by accident so i can plan what i do.  ## Last working Selenium version  Worked up to version:  4.0.0-alpha.1  Stopped working in version:  4.0.0-alpha.3","closed","C-nodejs,","oddui","2019-07-23T23:23:58Z","2019-12-22T01:46:14Z"
"","6995","Update remote_connection.py with new Cast commands","The new Cast commands are added here: https://chromium-review.googlesource.com/c/chromium/src/+/1401270  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6995)","closed","C-py,","cliffordcheng","2019-03-04T19:47:50Z","2019-07-17T22:45:17Z"
"","7185","Test against latest Ruby (`2.6`)","The motivation behind this change is that we'd like to test selenium against the latest Ruby. `2.4` is now quite old and in a security maintenance phase. More people will upgrade their Ruby to newer versions. So I thought testing against the latest Ruby only makes sense.  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/7185)","closed","","okuramasafumi","2019-05-08T03:37:50Z","2019-05-16T14:49:03Z"
"","7420","npm versions behind","The latest (stable) version available in npm is 3.6.0.  I am interested in using this change from 2 years ago: https://github.com/SeleniumHQ/selenium/commit/bac9cdf9731f6d466db2ca1b6edf9ffe0d284a3d","closed","C-nodejs,","pauldraper","2019-07-22T23:19:40Z","2021-09-05T08:25:10Z"
"","7191","Selenium actions class for key board actions are not working using node js","The keyboard actions are not working in selenium node js using actions class. Tried in different ways like below , but nothing is working out:  1. await driver.actions({bridge: true}).sendKeys(Key.ENTER).perform() 2. await driver.actions({bridge: true}).sendKeys(Keys.ENTER).perform() 3. await driver.actions({bridge: true}).sendKeys(Keys.ENTER).build().perform() 4. await driver.actions({bridge: true}).sendKeys(Key.ENTER).build().perform() 5. await driver.actions().sendKeys(Keys.ENTER).build().perform() 6. await driver.actions().sendKeys(Key.ENTER).build().perform() 7. await driver.actions().sendKeys(Key.ENTER).perform() 8. await driver.actions().sendKeys(Keys.ENTER).perform()  Another syntax for hover is working well which is :  const element = await driver.findElement(By.xpath(myxpath))) await driver.actions({ bridge: true }).move({ duration: 5000, origin: element }).perform()  Your help is much appreciated","closed","C-nodejs,","9LPittu","2019-05-09T12:58:51Z","2022-01-26T00:09:47Z"
"","6976","InternetExplorerDriver crashing on sendKeys to file selection control (sometimes) (with dumps)","The IE driver crashes sometimes (we can repro this in a rather complicated environment within a few hours)  But the good news is we have a dump here and we could provide more: https://at.cloud.fabasoft.com/folio/public/2o5ysh2mp1fyk3uuto3owqdk8h  ## Environment  OS: Windows 10 1809 Browser: IE Browser version:  Browser Driver version: InternetExplorerDriver 3.141.5 Language Bindings version: Java 3.141.159","closed","","reinsch82","2019-02-27T12:48:05Z","2019-08-14T20:10:04Z"
"","7779","Grid UI","The Grid needs a UI of some sort to allow people to control it remotely. This should not rely on JMX.","closed","selenium-4,","shs96c","2019-11-13T07:50:45Z","2021-09-05T08:37:25Z"
"","7531","Allow passing of additional options to the Java Modules","The generated modules need to ""open"" to (at least) the JSON package so that we can use the `fromJson` and `toJson` methods. Without this, all heck opens up. In addition, the `FindsBy*` classes are internal, and they should be made available to other classes until we find a way to replace them.","closed","C-java,","shs96c","2019-08-30T14:07:41Z","2021-09-05T09:44:01Z"
"","7668","added a missing flag for EventBusConfig.java","The flag for events.implementation was not actually implemented but was referenced.     - [ X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","adamgoucher","2019-10-09T15:56:06Z","2019-10-11T14:49:53Z"
"","7395","Catch the NoSuchElementException if the element is not present in DOM","The driver.findElement(locator) method can produce a NoSuchElementException which is currently not handled by the visibilityOfElementLocated method. The proposed change also catches the NoSuchElementException if the element is not present in DOM thrown by findElement(locator) and return null in method visibilityOfElementLocated.  If there is no argument against returning null for the visibilityOfElementLocated method in case the element with locator is not present in the DOM this take care of the unhandled NoSuchElementException that might occur because of timing problems.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-java,","focbenz","2019-07-16T12:30:30Z","2020-06-17T12:49:39Z"
"","7419","Travis CI: dist: xenial is now the default and sudo is deprecated","The default Travis distro is now xenial and the __sudo:__ tags is now deprecated because the sudo is _always_ available and there is no way to turn it off.       - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","cclauss","2019-07-22T18:53:14Z","2019-09-16T04:28:30Z"
"","7856","Grid: secure 0mq","The default 0mq event bus should be able to be secured via configuration.","closed","selenium-4,","adamgoucher","2019-12-08T21:20:41Z","2021-09-05T08:33:55Z"
"","6924","Remove unsafe concurrent access of GridNodeConfiguration.DEFAULT_CONFIG_FROM_JSON","The code before this fix concurrently accessed the capabilities in GridNodeConfiguration.DEFAULT_CONFIG_FROM_JSON.  Because its capabilities (AbstractCapabilities) uses a TreeMap, which isn't concurrent-safe, it would regularly deadlock grids of 20 nodes or more in either GridNodeConfiguration::new or GridNodeConfiguration::fixUpCapabilities.  This fix does two things: 1. Allows deep copies of NodeJsonConfiguration, so that a config can be copied and both instances can be accessed in parallel without issue 2. Limits access to the default config to a synchronized block that gives out deep copies of the original instance  This fix is meant to address concerns raised in https://github.com/SeleniumHQ/selenium/issues/6918.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6924)","closed","","gsfraley","2019-02-11T14:51:15Z","2019-02-25T13:12:54Z"
"","7394","Correct contentEditable code in Clear atom","The clear atom would previously leave a single whitespace when clearing contenteditable elements due to a limitation in firefox. This CL makes it so that the whitespace is only left for firefox browsers.  Additionally, contenteditable elements previously did not unfocus after clearing which does not follow the W3C spec for [clearing elements](https://w3c.github.io/webdriver/#element-clear). This changelist adds unfocusing code to run after a contenteditable element is cleared.  Lastly, additional blur events would fire if the element to be cleared had both a value and was contenteditable (eg a text input element with a starting value and had its contenteditable attribute set to true). This changelist corrects this by appending the contentEditable clause to the end of the if-else chain.   - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","julianrkung","2019-07-15T21:30:49Z","2019-09-20T20:47:34Z"
"","7778","Generate CDP domains as part of the build","The CDP changes frequently, but is based on a JSON file. Other languages (such as C# in the selenium project :) ) generate the sources automatically. The same should happen in the java tree.","closed","C-build,","shs96c","2019-11-12T18:06:00Z","2019-12-13T09:07:43Z"
"","7609","Generate javadocs","The bazel builds should allow a javadoc jar to be generated.","closed","C-build,","shs96c","2019-09-27T08:42:03Z","2021-09-05T09:44:01Z"
"","7603","Fix testShouldNotScrollIfAlreadyScrolledAndElementIsInView","testShouldNotScrollIfAlreadyScrolledAndElementIsInView does not work correctly. While clikcing button1, a spec-compliant implementation should scroll the page just enough to bring button1 into view, while button2 remains out of view, thus clicking button2 whould cause scroll again. Reversing the order of the clicks to fix this.       - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","JohnChen0","2019-09-26T05:00:17Z","2019-09-29T17:42:54Z"
"","6952","Target dropdown in Chrome Extension","Target dropdown in Chrome Extension always goes downwards, and always gets cropped, and you can't click xpath:position  Potential solutions? a) How to make the dropdown always go upwards instead? b) How to make the default target always be xpath:position instead of id?     reason: my pages always change id every time you reload the page.","closed","","nzhome","2019-02-20T02:50:46Z","2019-08-14T21:09:56Z"
"","7285","Enrich Target GCD","Summary : Enrich DevTools Target API according to Google documentation  Features: 1. add all Target methods 2. adopt DevTools with API Spec 3. Add all Objects 4. Add More tests for all events 5. Add copyright to all Classes        - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","dratler","2019-06-12T19:45:37Z","2019-06-20T10:39:41Z"
"","7561","Exception in thread ""main"" org.openqa.selenium.WebDriverException: unknown error: failed to write automation extension zip","Starting ChromeDriver 77.0.3865.40 (f484704e052e0b556f8030b65b953dce96503217-refs/branch-heads/3865@{#442}) on port 29734 Only local connections are allowed. Please protect ports used by ChromeDriver and related test frameworks to prevent access by malicious code. Exception in thread ""main"" org.openqa.selenium.WebDriverException: unknown error: failed to write automation extension zip Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:48' System info: host: 'JWS-L-1115', ip: '192.168.1.115', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '12.0.2' Driver info: driver.version: ChromeDriver remote stacktrace: Backtrace: 	Ordinal0 [0x00CFEB13+1501971] 	Ordinal0 [0x00C7F6D1+980689] 	Ordinal0 [0x00C0765F+489055] 	Ordinal0 [0x00B9E0E6+57574] 	Ordinal0 [0x00B9B933+47411] 	Ordinal0 [0x00BB9800+169984] 	Ordinal0 [0x00BB942D+169005] 	Ordinal0 [0x00BB78EB+162027] 	Ordinal0 [0x00BA0AC7+68295] 	Ordinal0 [0x00BA1B40+72512] 	Ordinal0 [0x00BA1AD9+72409] 	Ordinal0 [0x00C98F37+1085239] 	GetHandleVerifier [0x00D9D7ED+503293] 	GetHandleVerifier [0x00D9D580+502672] 	GetHandleVerifier [0x00DA46AC+531644] 	GetHandleVerifier [0x00D9DFFA+505354] 	Ordinal0 [0x00C90606+1050118] 	Ordinal0 [0x00C9047F+1049727] 	Ordinal0 [0x00C9AF9B+1093531] 	Ordinal0 [0x00C9B103+1093891] 	Ordinal0 [0x00C9A095+1089685] 	BaseThreadInitThunk [0x75B10179+25] 	RtlGetAppContainerNamedObjectPath [0x77CC662D+237] 	RtlGetAppContainerNamedObjectPath [0x77CC65FD+189]  	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500) 	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481) 	at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62) 	at org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30) 	at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126) 	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) 	at java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958) 	at java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127) 	at java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502) 	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488) 	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) 	at java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150) 	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) 	at java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:131) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:181) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:168) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:157) 	at testModules.TestChrome.main(TestChrome.java:19)","closed","R-awaiting answer,","ghost","2019-09-13T09:42:19Z","2019-10-24T06:23:38Z"
"","7673","7672 fix NPE in RemoteWebElement","sometimes webdriver can return null in methods `isSelected`, `isDisplayed`, `isEnabled`. We need to handle them properly instead of throwing NullPointerException.  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","asolntsev","2019-10-10T19:57:37Z","2019-10-11T04:17:04Z"
"","7710","[java] Set mouse button in W3C codec","Some old-style mouse commands can optional specify a button ID, but this ID is ignored when the commands are converted into W3C actions by the codec, and right clicks become left clicks. This commit fixes that. It fixes RemoteMouse.contextClick, and also resolves issue #7393.       - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-java,","JohnChen0","2019-10-24T00:55:58Z","2019-11-01T20:12:45Z"
"","7029","where the output gets stored when building a jar for selenium using ./go selenium-server-standalone.","So I have cloned the selenium directory and make the build for jar using command ./go selenium-server-standalone .. It got build but I am wandering where the output is stored. I read in the documentation that using ./go command gives a toplevel ""build"" directory and the output is stored in it. But in my case, no build directory is generated. But yes one ""buck-out"" directory is generated and I can find a jar output in the path /gen/java/server/src/org/openqa/grid/selenium/selenium.jar. So is it the correct output?","closed","","pankajsethi93","2019-03-14T09:20:13Z","2019-08-14T19:09:52Z"
"","7537","fix: typo in async execute error text","Simple change to fix a typographic error (`asyncrhonous` => 'asynchronous`) in the timeout error returned in asynchronous execute.  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","imurchie","2019-09-04T19:36:23Z","2019-09-05T11:58:41Z"
"","7839","Add: Add support to get property of referenced web element","Signed-off-by: Sri Harsha     **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","C-nodejs,","harsha509","2019-12-03T15:17:10Z","2019-12-03T18:41:20Z"
"","7791","Modify: Typo error in dom.js","Signed-off-by: Sri Harsha        - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","harsha509","2019-11-15T12:49:58Z","2019-11-15T19:15:26Z"
"","7768","Modify: Spell error","Signed-off-by: Sri Harsha        - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","harsha509","2019-11-11T04:58:11Z","2019-11-12T00:27:32Z"
"","7495","Nodejs. Set isW3C to true condition.","Set ```isW3C``` to ```true``` condition in legacy responses for reading ```W3C_COMMAND_MAP```  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","ArtemDordovskyi","2019-08-15T11:36:48Z","2019-08-16T10:58:27Z"
"","6880","Using SeleniumSessionId is not working with firefox","seleniumSessionId is not working for firefox [62.0.3 (64-bit) ""protractor"": ""~5.4.1"" ""webdriver-manager"": ""^12.0.6"",  Chromedriver_2.45 geckodriver-v0.23.0  my conf,js file has the following information in it and I have tried with marionette equal to true and false.  `exports.config = {   framework: 'jasmine',    seleniumAddress: 'http://127.0.0.1:4444/wd/hub',   seleniumSessionId: 'be0739d9-f1dc-4088-b0df-d2f62de011af',    capabilities: { browserName: 'firefox', marionette: true },`  The following error is thrown during execution: `C:\svt-web-client\projects\client-ng\node_modules\.bin>protractor C:\svt-web-client\projects\client-ng\protractor.e2e.atf.conf.js --grep ""C763889_OMNI_33968_2"" [13:05:16] I/launcher - Running 1 instances of WebDriver [13:05:16] I/attachSession - Using the selenium server at http://127.0.0.1:4444/wd/hub [13:05:16] I/attachSession - Using session id - be0739d9-f1dc-4088-b0df-d2f62de011af [13:05:16] E/launcher - GET /session/be0739d9-f1dc-4088-b0df-d2f62de011af did not match a known command Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53' System info: host: 'WIN-73R0N5SIS5K', ip: '10.0.111.195', os.name: 'Windows Server 2008 R2', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_191' Driver info: driver.version: unknown [13:05:16] E/launcher - UnsupportedOperationError: GET /session/be0739d9-f1dc-4088-b0df-d2f62de011af did not match a known command Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53' System info: host: 'WIN-73R0N5SIS5K', ip: '10.0.111.195', os.name: 'Windows Server 2008 R2', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_191' Driver info: driver.version: unknown     at Object.checkLegacyResponse (C:\svt-web-client\projects\client-ng\node_modules\selenium-webdriver\lib\error.js:546:15)     at parseHttpResponse (C:\svt-web-client\projects\client-ng\node_modules\selenium-webdriver\lib\http.js:509:13)     at doSend.then.response (C:\svt-web-client\projects\client-ng\node_modules\selenium-webdriver\lib\http.js:441:30)     at process._tickCallback (internal/process/next_tick.js:68:7) From: Task: WebDriver.attachToSession()     at Function.attachToSession (C:\svt-web-client\projects\client-ng\node_modules\selenium-webdriver\lib\webdriver.js:695:24)     at AttachSession.getNewDriver (C:\svt-web-client\projects\client-ng\node_modules\protractor\built\driverProviders\attachSession.js:37:58)     at Runner.createBrowser (C:\svt-web-client\projects\client-ng\node_modules\protractor\built\runner.js:195:43)     at q.then.then (C:\svt-web-client\projects\client-ng\node_modules\protractor\built\runner.js:339:29)     at _fulfilled (C:\svt-web-client\projects\client-ng\node_modules\protractor\node_modules\q\q.js:834:54)     at C:\svt-web-client\projects\client-ng\node_modules\protractor\node_modules\q\q.js:863:30     at Promise.promise.promiseDispatch (C:\svt-web-client\projects\client-ng\node_modules\protractor\node_modules\q\q.js:796:13)     at C:\svt-web-client\projects\client-ng\node_modules\protractor\node_modules\q\q.js:556:49     at runSingle (C:\svt-web-client\projects\client-ng\node_modules\protractor\node_modules\q\q.js:137:13)     at flush (C:\svt-web-client\projects\client-ng\node_modules\protractor\node_modules\q\q.js:125:13) [13:05:16] E/launcher - Process exited with error code 199`  When using the webDriver it looks like /sessions returns the firefox session but attempting to get the single firefox session is where failing occurs","closed","","tfaron","2019-01-24T18:14:53Z","2019-08-14T22:09:38Z"
"","7273","[rb] Restore logs support through get_log command on W3C bridge","Selenium::WebDriver::Logs tries to use this and fails, because the get_log command was only added to the OSS bridge, not the W3C bridge:  ``` NoMethodError:        undefined method `log' for #      # /.../webdriver/common/logs.rb:32:in `get' ```  However, this seems to work fine when added to the W3C bridge, so this adds the support back in.  ---  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","lfittl","2019-06-09T04:54:50Z","2019-06-10T17:52:31Z"
"","6973","Selenium webdriver does not work on already opened browser.","Selenium webdriver does not work on already opened browser.","closed","","subrato29","2019-02-27T02:11:51Z","2019-08-14T21:09:38Z"
"","6984","internet explorer loading","Selenium Version: 3.11.0 Browser: IE11 Win10  ### Behavior ------- ie11 long loaded and doesn't show the content of the page.  ` nightwatch_1             |   ✔ And the freshly graph ""http://aksw.org/aksw.org-chrome/"" from file ""aksw-firefox.ttl"" nightwatch_1             | ERROR: Unable to locate element: ""#ecc-component-graphlist--contextmenu"" using: css selector nightwatch_1             |     at Object.client.importDMGraph (/opt/nightwatch/utility/utility.js:189:10) nightwatch_1             |     at client.openUrl.executeIfElementExists (/opt/nightwatch/step_definitions/common.js:402:25) nightwatch_1             |     at Object. (/opt/nightwatch/utility/utility.js:33:24) nightwatch_1             |     at endReadableNT (_stream_readable.js:1056:12) nightwatch_1             |     at _combinedTickCallback (internal/process/next_tick.js:138:11) nightwatch_1             |     at process._tickCallback (internal/process/next_tick.js:180:9) nightwatch_1             | ERROR: Unable to locate element: ""[data-test-id=""ecc-component-graphlist--contextmenu_add""]"" using: css selector nightwatch_1             |     at Object.client.importDMGraph (/opt/nightwatch/utility/utility.js:192:10) nightwatch_1             |     at client.openUrl.executeIfElementExists (/opt/nightwatch/step_definitions/common.js:402:25) nightwatch_1             |     at Object. (/opt/nightwatch/utility/utility.js:33:24) nightwatch_1             |     at endReadableNT (_stream_readable.js:1056:12) nightwatch_1             |     at _combinedTickCallback (internal/process/next_tick.js:138:11) nightwatch_1             |     at process._tickCallback (internal/process/next_tick.js:180:9) nightwatch_1             | Error: Creating screenshot was not successful. Response was: nightwatch_1             | { status: -1, nightwatch_1             |   value: nightwatch_1             |    { message: 'Unable to convert: Error 404: Not Found\nNot Found\nBuild info: version: \'3.11.0\', revision: \'e59cfb3\', time: \'2018-03-11T20:33:15.31Z\'\nSystem info: host: \'WIN10-TEST\', ip: \'192.168.177.120\', os.name: \'Windows 10\', os.arch: \'x86\', os.version: \'10.0\', java.version: \'1.8.0_171\'\nDriver info: driver.version: unknown', nightwatch_1             |      error: 'unknown error' }, nightwatch_1             |   errorStatus: 13, nightwatch_1             |   error: 'An unknown server-side error occurred while processing the command.' } nightwatch_1             |     at Object.protocol.screenshot (/opt/nightwatch/node_modules/nightwatch-cucumber/lib/nightwatch-api.js:133:18) nightwatch_1             |     at HttpRequest. (/opt/nightwatch/node_modules/nightwatch/lib/index.js:366:18) nightwatch_1             |     at emitTwo (events.js:126:13) nightwatch_1             |     at HttpRequest.emit (events.js:214:7) nightwatch_1             |     at HttpRequest. (/opt/nightwatch/node_modules/nightwatch/lib/index.js:393:15) nightwatch_1             |     at emitThree (events.js:136:13) nightwatch_1             |     at HttpRequest.emit (events.js:217:7) nightwatch_1             |     at IncomingMessage. (/opt/nightwatch/node_modules/nightwatch/lib/http/request.js:172:16) nightwatch_1             |     at emitNone (events.js:111:20) nightwatch_1             |     at IncomingMessage.emit (events.js:208:7) nightwatch_1             |     at endReadableNT (_stream_readable.js:1056:12) nightwatch_1             |     at _combinedTickCallback (internal/process/next_tick.js:138:11) nightwatch_1             |     at process._tickCallback (internal/process/next_tick.js:180:9) `","closed","","Skhoshhal","2019-03-01T10:33:24Z","2019-08-14T21:09:34Z"
"","7801","Unable to switch to child window---Missing parameter name exception in JAVA code in Internet Explorer11","Selenium server used is:selenium-server-standalone-3.141.59  I have a switchtochildwindow() function which finds the child window handle and tried to switch to it.But although the window is there its unable to switch giving exception missing parameter name. I have tried print the strings corresponding the child window and parent window and they are different and are found while iterating through the loop but switch is not happening: exception displayed is ""Unable to switch to Child Window Details: org.openqa.sel enium.WebDriv erException: Missing parameter name Function code in JAVA is as below: public String SwitchToChildWindow(String object, String data) { try {      String MainWindow = driver.getWindowHandle();     System.out.println(driver.getTitle());     System.out.println(MainWindow);     Set s1 = driver.getWindowHandles();     Iterator i1 = s1.iterator();     while (i1.hasNext()) {         String ChildWindow = i1.next();         System.out.println(ChildWindow);         System.out.println(driver.getTitle());          if (!MainWindow.equalsIgnoreCase(ChildWindow)) {             System.out.println(driver.getTitle());             // Switching to Child window             driver.switchTo().window(ChildWindow);             System.out.println(driver.getTitle());              this.Report(ResultStatus.PASS, ""Switched to Child Window"",                     ""Switched to Child Window"", null);         }     }  } catch (Exception e) {     this.Report(ResultStatus.FAIL, ""Unable to switch to Child Window"",             ""Unable to switch to Child Window"", e.toString()); } Exception is as follows: Unable to switch to Child Window Details: org.openqa.sel enium.WebDriv erException: Missing parameter: name Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11- 14T08:25:53' System info: host: 'ST- XXXXXXXXX', ip: '10.79.111.209' , os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_221' Driver info: driver.version: unknown Command duration or","closed","","Abhinaykrs","2019-11-21T13:52:11Z","2020-01-05T21:57:12Z"
"","7800","Unable to switch to child window---Missing parameter name exception in JAVA code in Internet Explorer11","Selenium server used is:selenium-server-standalone-3.141.59   I have a switchtochildwindow() function which finds the child window handle and tried to switch to it.But although the window is there its unable to switch giving exception missing parameter name. I have tried print the strings corresponding the child window and parent window and they are different and are found while iterating through the loop but switch is not happening: exception displayed is ""Unable to switch to Child Window Details: org.openqa.sel enium.WebDriv erException: Missing parameter name Function code in JAVA is as below: public String SwitchToChildWindow(String object, String data) {     try {          String MainWindow = driver.getWindowHandle();         System.out.println(driver.getTitle());         System.out.println(MainWindow);         Set s1 = driver.getWindowHandles();         Iterator i1 = s1.iterator();         while (i1.hasNext()) {             String ChildWindow = i1.next();             System.out.println(ChildWindow);             System.out.println(driver.getTitle());              if (!MainWindow.equalsIgnoreCase(ChildWindow)) {                 System.out.println(driver.getTitle());                 // Switching to Child window                 driver.switchTo().window(ChildWindow);                 System.out.println(driver.getTitle());                  this.Report(ResultStatus.PASS, ""Switched to Child Window"",                         ""Switched to Child Window"", null);             }         }      } catch (Exception e) {         this.Report(ResultStatus.FAIL, ""Unable to switch to Child Window"",                 ""Unable to switch to Child Window"", e.toString());     } Exception is as follows: Unable to switch to Child Window Details: org.openqa.sel enium.WebDriv erException: Missing parameter: name Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11- 14T08:25:53' System info: host: 'ST- XXXXXXXXX', ip: '10.79.111.209' , os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_221' Driver info: driver.version: unknown Command duration or","closed","","Abhinaykrs","2019-11-21T13:46:55Z","2019-12-21T15:41:58Z"
"","7193","PHP Fatal error:  Uncaught PHPUnit_Extensions_Selenium2TestCase_WebDriverException: unknown error: Chrome failed to start: exited abnormally","Selenium Error in Chrome Browser        PHPUnit 6.5.14 by Sebastian Bergmann and contributors.  Runtime:       PHP 7.1.26 Configuration: /var/www/james/dev/tests/functional/phpunit.xml  PHP Fatal error:  Uncaught PHPUnit_Extensions_Selenium2TestCase_WebDriverException: unknown error: Chrome failed to start: exited abnormally   (unknown error: DevToolsActivePort file doesn't exist)   (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)   (Driver info: chromedriver=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}),platform=Linux 3.10.0-957.5.1.el7.x86_64 x86_64) (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 57 milliseconds Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53' System info: host: 'local-james.com', ip: '192.168.0.220', os.name: 'Linux', os.arch: 'amd64', os.version: '3.10.0-957.5.1.el7.x86_64', java.version: '1.8.0_191' Driver info: driver.version: unknown in /var/www/james/dev/tests/functional/vendor/phpunit/phpunit-selenium/PHPUnit/Extensions/Selenium2TestCase/Driver.php:165 Stack trace: #0 /var/w in /var/www/james/dev/tests/functional/vendor/phpunit/phpunit-selenium/PHPUnit/Extensions/Selenium2TestCase/Driver.php on line 165","closed","","dkflrnen","2019-05-10T00:16:01Z","2019-08-14T11:09:43Z"
"","7261","Selenium while dragAndDrop drag element to physical cursor","Selenium - 3.141.59 Java  While execution of dragAndDrop method, source element is moving not to target element, but to physical cursor.  Tried following:      public static void dragAndDrop(WebDriver driver, WebElement src, WebElement target) {         Actions builder = new Actions(driver);              builder.moveToElement(target).build().perform();              Action dragAndDrop = builder.clickAndHold(src)                 .moveToElement(target)                 .release(target)                 .build();         dragAndDrop.perform();     }  And following:      public static void dragAndDrop(WebDriver driver, WebElement src, WebElement target) {         Actions builder = new Actions(driver);         builder.dragAndDrop(src, target).build().perform();     }  But these solutions don't work. How to solve this issue?","closed","R-awaiting answer,","arturmkr","2019-06-05T10:34:23Z","2019-08-22T18:09:34Z"
"","7292","SelectElement with xpath not working","Selecting an element with xpath returns an IWebElement then SelectElement returns an error ""the path is not of a legal form"". Exist and Enabled works correctly. SelectElement select = new SelectElement(_driver.FindElements(By.XPath(""xpath-string""))[0]);","closed","R-awaiting answer,","kbourro","2019-06-14T14:00:40Z","2019-08-14T20:09:34Z"
"","7291","Element.Displayed return ""the path is not of a legal form""","Selecting an element with xpath returns an IWebElement then element.Displayed returns an error ""the path is not of a legal form"". Exist and Enabled works correctly.","closed","R-awaiting answer,","kbourro","2019-06-14T12:46:22Z","2019-08-14T20:09:35Z"
"","7660","W3CRemoteDriverTest.shouldPreferMarionette fails on Travis","See https://travis-ci.com/SeleniumHQ/selenium/jobs/242572677  It passes for me on Windows 10 and MacOS Mojave locally","closed","C-java,","barancev","2019-10-07T08:28:46Z","2021-09-05T08:21:43Z"
"","7404","Validate proper functioning of Firefox Profiles","Ruby has updated the Profile code (https://github.com/SeleniumHQ/selenium/pull/7376) in preparation for 4.0. Ensuring the proper working order of this code will require manual evaluation in addition to unit testing. This shouldn't be too complicated. @kapoorlakshya volunteered to look at it, but I'm creating this issue to make sure it doesn't fall by the wayside.","closed","C-rb,","titusfortner","2019-07-17T21:37:28Z","2021-09-05T08:19:10Z"
"","6907","Allow childprocess 1.0 dependency of ruby selenium-webdriver?","Ruby gem selenium-webdriver has a dependency on `'childprocess', ['~> 0.5']`  https://github.com/SeleniumHQ/selenium/blob/d7674b0c2ffff75787e94aef13e4ceab04252a86/rb/selenium-webdriver.gemspec#L33  The childprocess gem had a [1.0 release](https://rubygems.org/gems/childprocess/versions/1.0.0) a couple days ago. That is not allowed by the selenium-webdriver dependency specification.   Should it be?","closed","C-rb,","jrochkind","2019-02-01T14:26:58Z","2019-08-14T21:09:49Z"
"","7378","[rb] support w3c values in options class","Right now, using multiple custom configurations with Ruby is difficult.  Examples here: https://gist.github.com/titusfortner/d40a030551be98000912f159c639c14c  This takes the current code one step further. When serializing an Options class instance,  1. Process known w3c capabilities 2. Process any capabilities passed in with a `:` in them (as required by spec for w3c compliant add-ons.  3. Process everything else as a browser-specific option.   If you want to keep doing it the way you are doing it, you can, but I like having the option of doing everything in one class. This makes it much easier to pull in capabilities from a yaml, which is my preference.  I couldn't figure out a better way to reference the browser name and access it everywhere I needed, but this works.","closed","C-rb,","titusfortner","2019-07-09T00:06:56Z","2020-07-12T23:30:16Z"
"","7814","Enable Nodes to be configured via command line and settings file","Right now, it's only possible to configure the Node instances to use Docker or to automatically detect drivers. This should be configurable. It would be nice if the key information from the original `nodeConfig.json` files could be used, but we can also explore other options.","closed","C-java,","shs96c","2019-11-26T09:44:11Z","2021-09-05T09:43:55Z"
"","7430","[py] Remove 'resolve_ip' option from RemoteConnection","Resolving the IP within Selenium is never necessary; This is always the wrong thing to do when dealing with HTTPS connections, as no certificates are issued for IP-addresses.  This is a conflict-free update of PR #3515.  Fixes #1729 Fixes #2509       - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","GQAssurance","2019-07-24T20:05:38Z","2019-07-27T07:56:47Z"
"","7526","Resolve WebDriverWait deprecation warnings","Resolve WebDriverWait deprecation warnings.  The Duration constructors are preferred.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","joshbruning","2019-08-28T19:04:49Z","2019-08-31T19:28:33Z"
"","7406","[PY] Implement logical expected conditions in Python","Replicates the functionality of Java's AND / OR / NOT expected conditions. Because of reserved word constraints in Python, these are named:  OR:  `any_of(*expected_condition)` AND: `all_of(*expected_condition)` NOT: `none_of(*expected_condition)`  Each function takes an unlimited number of expected_conditions as arguments.  Implements #7121       - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-py,","GQAssurance","2019-07-18T23:50:20Z","2019-08-28T20:39:53Z"
"","7448","Fix Java test case testChordControlCutAndPaste","Replacing sendKeys(Keys.CONTROL + ...) with keyDown(Keys.CONTROL), to ensure the CONTROL key remains pressed.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","JohnChen0","2019-07-29T22:05:58Z","2019-08-01T20:22:51Z"
"","7447","Fix ChromeOptionsFunctionalTest.canSetAcceptInsecureCerts","Replace OSS ACCEPT_SSL_CERTS capability with W3C ACCEPT_INSECURE_CERTS.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","JohnChen0","2019-07-29T20:40:59Z","2019-08-01T20:24:54Z"
"","7433","Remove an indent from the reset_actions docstring","Remove redundant docstring indent.","closed","","myslak71","2019-07-25T20:00:33Z","2019-07-26T13:01:09Z"
"","7682","Remove uncalled code (base generator amongst others)","Remove / tag / move code in files.rb - Most of this can be deleted or moved once another PR is merged in       - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","luke-hill","2019-10-14T13:04:19Z","2019-11-01T09:02:16Z"
"","7156","Setup right browserName for iOS mobile web testing","Register appium server with selenium grid by using nodeconfig is causing some trouble for iOS mobile web testing. In node configuration json, deviceName is used to filled in browserName field. Check this link: http://appium.io/docs/en/advanced-concepts/grid/#grid-node-configuration-example-json-file . After capability matcher is validated and real session is established between selenium hub and appium server, deviceName could not be recognized by appium server. After this fix, iOS mobile web testing could be run properly on Selenium Hub + Appium Server Node. It's fully tested.       - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/7156)","closed","R-awaiting answer,","kevinwee0712","2019-04-30T02:51:18Z","2019-05-05T19:33:02Z"
"","7662","GridTNG: All communication over HTTPS","Provided the user can configure it. No self-signed certs.","closed","C-grid,","shs96c","2019-10-08T13:19:38Z","2020-01-07T22:57:12Z"
"","7464","node/selenium-webdriver/firefox.js: accept zip webextensions","Prior to this commit, the node.js firefox driver prevented loading webextensions the name of which did not end in '.xpi'. This was not very ergonomic as web-ext, the webextension-building tool created by Mozilla , produces files the name of which ends in '.zip' by default.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-nodejs,","glacambre","2019-08-04T12:42:04Z","2020-03-04T15:25:58Z"
"","7640","Updating python bindings to use ms:edgeOptions for msedgedriver","Previously, the bindings use goog:chromeOptions to request additional browser specific capabilities to msedgedriver. This change updates it to use ms:edgeOptions.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","D-edge,","stanleyhon","2019-10-03T00:09:15Z","2019-10-15T19:47:06Z"
"","7599","Create WebElementWait","Preperation for ExpectedConditions. Next step is to modify expectedConditions, ISearchContext will be used instead of the IWebDriver so that we can also wait for an element condition inside an element. This comes in handy when using the pageObjects pattern.    - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-dotnet,","vethman","2019-09-25T11:53:57Z","2020-12-22T23:32:07Z"
"","7491","Not able to execute test cases after updating chrome to v76.","Please take a look at [this](https://stackoverflow.com/questions/57457310/i-got-error-like-script-returns-unexpected-result-while-running-selenium-test-ca?noredirect=1#comment101399557_57457310) and help me with it.","closed","","viveksingh1992","2019-08-13T06:23:32Z","2019-09-12T09:09:35Z"
"","7052","Chrome download path set issue","Please refer to this:  https://bugs.chromium.org/p/chromedriver/issues/detail?id=2810#c2  Selenium version 6.3.0 is working, but not 6.141.59.  I am unable to set chrome download path using latest 6.141.59.  Please suggest. Thanks,","closed","R-awaiting answer,","omkarnathsingh","2019-03-22T08:24:41Z","2019-08-14T17:10:05Z"
"","7210","headless chrome download file java","please help with solution for [https://stackoverflow.com/questions/56150874/remote-run-selenium-test-cases-for-download-file-test-using-chrome/56151484#56151484]","closed","","amishad02","2019-05-15T19:55:18Z","2019-08-14T10:09:56Z"
"","7234","Dedendency OkHttp library over 3.14.0","Please could clarify version OkHTTP impact in webriver I figure out that in my project where is user version over 3.14.0     testImplementation ""com.squareup.okhttp3:okhttp:3.14.0"" //version This is important to webdriwer version     testImplementation ""com.squareup.okhttp3:logging-interceptor:3.14.0""     testImplementation(""org.seleniumhq.selenium:selenium-java:3.141.59"")   Looks like needing special OkHttp version in the project. please, could You advise? Tested on the simplest code like an open page to avoid other mistakes  Appeared error with driver inner requests: Here is a stack trace  Using geckodriver 0.24.0 (since Mozilla Firefox 67 is installed in your machine) Exporting webdriver.gecko.driver as /Users/viachaslau_balashevi/.m2/repository/webdriver/geckodriver/macos/0.24.0/geckodriver  ``` java.lang.NoSuchFieldError: Companion 	at okhttp3.internal.http.HttpHeaders.(HttpHeaders.kt:36) 	at okhttp3.internal.http1.Http1ExchangeCodec.reportedContentLength(Http1ExchangeCodec.kt:128) 	at okhttp3.internal.connection.Exchange.openResponseBody(Exchange.kt:124) 	at okhttp3.internal.http.CallServerInterceptor.intercept(CallServerInterceptor.kt:112) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:117) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:90) 	at org.openqa.selenium.remote.internal.OkHttpClient$Factory$1.lambda$createClient$1(OkHttpClient.java:152) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:117) 	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:38) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:117) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:90) 	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:84) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:117) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:90) 	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:84) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:117) 	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:71) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:117) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:90) 	at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.kt:184) 	at okhttp3.RealCall.execute(RealCall.kt:67) 	at org.openqa.selenium.remote.internal.OkHttpClient.execute(OkHttpClient.java:103) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:105) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:131) 	at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:147) 	at com.codeborne.selenide.webdriver.FirefoxDriverFactory.createFirefoxDriver(FirefoxDriverFactory.java:31) 	at com.codeborne.selenide.webdriver.FirefoxDriverFactory.create(FirefoxDriverFactory.java:26) 	at com.codeborne.selenide.webdriver.WebDriverFactory.lambda$createWebDriver$1(WebDriverFactory.java:55) 	at java.util.Optional.map(Optional.java:215) 	at com.codeborne.selenide.webdriver.WebDriverFactory.createWebDriver(WebDriverFactory.java:55) 	at com.codeborne.selenide.drivercommands.CreateDriverCommand.createDriver(CreateDriverCommand.java:38) 	at com.codeborne.selenide.drivercommands.LazyDriver.createDriver(LazyDriver.java:93) 	at com.codeborne.selenide.drivercommands.LazyDriver.getAndCheckWebDriver(LazyDriver.java:87) 	at com.codeborne.selenide.SelenideDriver.getAndCheckWebDriver(SelenideDriver.java:143) 	at com.codeborne.selenide.drivercommands.Navigator.navigateTo(Navigator.java:61) 	at com.codeborne.selenide.drivercommands.Navigator.open(Navigator.java:24) 	at com.codeborne.selenide.SelenideDriver.open(SelenideDriver.java:59) 	at com.codeborne.selenide.Selenide.open(Selenide.java:39) 	at WebdriverJunit.openChrome(WebdriverJunit.java:17) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:628) 	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:117) 	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:184) 	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) 	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:180) 	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:127) 	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135) 	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125) 	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123) 	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80) 	at java.util.ArrayList.forEach(ArrayList.java:1257) 	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139) 	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125) 	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123) 	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80) 	at java.util.ArrayList.forEach(ArrayList.java:1257) 	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139) 	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125) 	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123) 	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80) 	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32) 	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) 	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51) 	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:229) 	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:197) 	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:211) 	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:191) 	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128) 	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:69) 	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) 	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) 	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ```","closed","","VatslauX","2019-05-25T22:10:04Z","2019-08-14T10:09:39Z"
"","7518","Selenium WebDriverWait.until(invisiblityOfAllElements) returns timeout on NoSuchElementException","Please check my question asked on [stackoverflow](https://stackoverflow.com/questions/57488223/selenium-webdriverwait-untilinvisiblityofallelements-returns-timeout-on-nosuch) ## 🐛 Bug Report  When using `WebdriverWait.until(invisibilityOfAllElements(ArrayOfElements))` And the elements are being located by Pagefactory Pattern ``` @FindBy(css="".className"") WebElement element; ``` the `isInvisible` method only catches `StaleElementException`, but in case of element located by `@FindBy` locator, the element holds ProxyElement and the actual element is looked up only when the element is referenced, and the element is referenced in `isInvisible` method by checking `!element.isDisplayed()` condition, whick causes timeout exception even though element is not present.  ## To Reproduce  1. Have an element located by `@FindBy` Locator ``` @FindBy(css="".className"") WebElement element; ``` 2. Check `invisibilityOFElement`  ``` void fun(){ WebDriver driver = new ChromeDriver(); try{     new WebDriverWait(driver, Duration.ofSeconds(5)).until(ExpectedConditions.invisibilityOf(element));     } catch(TimeoutException ex){     } } ```   ## Expected behavior  The `invisibilityOfElement` should not throw `TimeoutException` when element is not found, instead like `StaleElementException` is caught, `NoSuchElementException` should be caught and timeout should not occur  ## Environment  OS: Windows 10 Browser: Chrome Browser version: 76.0.3809.100 Browser Driver version: ChromeDriver: 76.0.3809.68 Language Bindings version: Java, Selenium Webdriver","closed","C-java,","r-sniper","2019-08-27T07:58:28Z","2020-05-05T21:24:44Z"
"","7553","Does IE proxy support sslProxy","platform:windows7 selenium version:3.141.59 IE version:10.0.9200.17457  code example: public WebDriver createWebDriver(ProxyIp proxyIp, String userAgent) throws FileNotFoundException {         File file = ResourceUtils.getFile(""classpath:iedriverServer_Win32_3.141.59/IEDriverServer.exe"");         System.setProperty(""webdriver.ie.driver"", file.getPath());         InternetExplorerOptions ieOptions = new InternetExplorerOptions();         Proxy proxy = new Proxy();         //proxy.setProxyType(Proxy.ProxyType.MANUAL);         //proxy.setAutodetect(false);         proxy.setHttpProxy(proxyIp.getIp() + "":"" + proxyIp.getPort());         proxy.setSslProxy(proxyIp.getIp() + "":"" + proxyIp.getPort());         proxy.setFtpProxy(proxyIp.getIp() + "":"" + proxyIp.getPort());         ieOptions.setProxy(proxy);         //ieOptions.setCapability(InternetExplorerDriver.IE_ENSURE_CLEAN_SESSION, true);         ieOptions.setCapability(InternetExplorerDriver.INTRODUCE_FLAKINESS_BY_IGNORING_SECURITY_DOMAINS, true);         ieOptions.setCapability(InternetExplorerDriver.INITIAL_BROWSER_URL, """");         return new InternetExplorerDriver(ieOptions);     }","closed","","kunwong90","2019-09-11T09:52:20Z","2019-10-11T11:09:36Z"
"","7094","Switching between windows is not working","package Window_handle;  import java.util.Set; import java.util.concurrent.TimeUnit;  import java.util.Iterator;  import org.openqa.selenium.By; import org.openqa.selenium.WebDriver; import org.openqa.selenium.chrome.ChromeDriver; import org.openqa.selenium.firefox.FirefoxDriver;   public class handle_class {  	public static void main(String[] args) throws InterruptedException  { 		// TODO Auto-generated method stub 		 		System.setProperty(""webdriver.chrome.driver"", ""D:\\Driver\\chromedriver_win32\\chromedriver.exe""); 		 	      WebDriver driver1 = new ChromeDriver(); 		  		 driver1.get(""https://accounts.google.com/ServiceLogin/signinchooser?continue=https%3A%2F%2Fmail.google.com%2Fmail%2F&service=mail<mpl=default&flowName=GlifWebSignIn&flowEntry=ServiceLogin"");         driver1.findElement(By.xpath(""//*[text ()='Create account']"")).click();        driver1.findElement(By.xpath(""//*[text()='For myself']"")).click(); 	 	 	driver1.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS); 	 	 	String parent_window = driver1.getWindowHandle(); 	 	 	System.out.println(""Before switching title is ="" +driver1.getTitle() ); 	 	Set  s1 = driver1.getWindowHandles(); 	 	 	Iterator i1 = s1.iterator(); 	 	 	while(i1.hasNext()) 	{ 		String child_window = i1.next(); 		 		if(!parent_window.equals(child_window)) 		 		 		{ 			 			driver1.switchTo().window(child_window); 			 			Thread.sleep(10000); 			 			System.out.println(""After swithcing title is"" + driver1.getTitle()); 			 			driver1.close(); 		} 		 	} 	 	driver1.switchTo().window(parent_window); 	 	System.out.println(driver1.getTitle()); 	 	 		 	}  }  I am writing the above code in selenium to switch the gmail page to create account but while loop is not executed.  Please help me","closed","","gajiya","2019-04-10T09:16:23Z","2019-08-14T16:09:46Z"
"","7818","Error in selenium webdriver","package newdemo;   import org.openqa.selenium.chrome.ChromeDriver; import org.openqa.selenium.By; import org.openqa.selenium.WebDriver;  public class demo {  	public static void main(String[] args) throws InterruptedException { 		// TODO Auto-generated method stub 		 		 		 System.setProperty(""WebDriver.chrome.driver"", "" F:\\Driver\\chromeDriver.exe""); WebDriver driver  = new ChromeDriver(); String url = (""https://www.airbnb.co.in/""); driver.get(url); driver.findElement(By.className(""Sign up"")).click(); driver.wait(2000); driver.navigate().forward(); driver.findElement(By.linkText(""/signup_login?&sm=2"")).click(); driver.navigate().forward(); driver.findElement(By.id(""email-signup-email"")).sendKeys(""demo@gmail.com""); driver.wait(1000); driver.findElement(By.id(""email-signup-user[first_name]"")).sendKeys(""Tester""); driver.navigate().forward(); driver.findElement(By.id(""email-signup-user[last_name]"")).sendKeys(""Tester""); driver.navigate().refresh(); driver.findElement(By.className(""_14fdu48d"")).sendKeys(""demo@1234""); driver.navigate().forward(); //driver.findElement(By.name(""user[birthday_month]"")).sendKeys(arg0); driver.getCurrentUrl(); System.out.print(""Hello"");  	  	}  }","closed","","ajaynetqom","2019-11-27T12:37:14Z","2019-12-27T20:53:27Z"
"","7552","Shadow DOM Support in Chrome WebDriver for testability of Google Polymer Web Components","Our application is built with Google Polymer 0.5 Web Components. In most of the pages, we are having Shadow DOMs. Multi-level Shadow DOMs are also available in many pages. Depth of the Shadow DOM is from 5 to 8 levels. Now we are trying to set up end-to-end automation testing for this Google Polymer application. We are using the latest version of Selenium Chrome Webdriver (Chrome browser / webdriver version 76.0 as on Sept 11th 2019) to automatically test the Google Polymer web pages. But Selenium Chrome Webdriver is unable to simulate mouse click events especially on the web elements that are residing within multi-level nested Shadow DOMs. Selenium Chrome Webdriver is able to simulate mouse click events on web elements that are residing in the Shadow DOM with a depth of 1 or 2 levels. But further down the level (For instance :- web element residing in 5th level Shadow DOM), Selenium Chrome Webdriver is able to locate the elements but unable to trigger simulated mouse click events on the web elements available within multi-level nested Shadow DOMs. While attempting to trigger simulated mouse click events on web elements residing within multi-level nested Shadow DOMs, ""Move Target Out Of Bounds"" exception is thrown at run time. This exception is usually thrown when the specific element is out of browser view port. But this element (which is a Google Polymer ""core-icon"" component) is in the browser view port and also clearly viewable in the page. Googling confirmed that Shadow DOM support is not provided by Selenium Chrome Webdriver. Workaround specified in some of the forums ""document.querySelector('selector').shadowRoot"" did not work as expected, as this Google Polymer panel (which contains the ""core-icon"" component) is dynamically injected at run time. So executing ""document.querySelector('panelSelector').shadowRoot.querySelector('coreIconPanel')"" in Chrome browser console is returning null. Since this became a major showstopper in setting up our end-to-end automation testing, please provide details on when the Shadow DOM Support will be added in Chrome Webdriver for the testability of Google Polymer Web Components. So far we have tried the following tools / combinations and this issue is occurring in all the combinations 1) Selenium 2) TestNG + Selenium 3) Robot + Selenium 4) Protractor + Selenium","closed","","ReactRedux","2019-09-11T04:57:58Z","2019-10-16T17:09:41Z"
"","7113","html runner -htmlSuite ""*browser""","OS:Win10 1703 browser:IE 11  version:11.1387.15063.0  What can i set browser   i want use IE but it error java -Dwebdriver.gecko.driver=C:\Circulationindustry\IEDriverServer.exe -jar C:\Circulationindustry\selenium-html-runner-3.141.59.jar -htmlSuite ""*iexplore"" ""web address""  ""C:\Circulation industry\A8\Suite1.html"" ""C:\Circulationindustry\A8""  error: Test of browser failed: *iexplore java.lang.IllegalStateException: The path to the driver executable must be set by the webdriver.ie.driver system property; for more information, see https://github.com/SeleniumHQ/selenium/wiki/InternetExplorerDriver. The latest version can be downloaded from http://selenium-release.storage.googleapis.com/index.html         at com.google.common.base.Preconditions.checkState(Preconditions.java:847)         at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:134)         at org.openqa.selenium.ie.InternetExplorerDriverService.access$000(InternetExplorerDriverService.java:35)         at org.openqa.selenium.ie.InternetExplorerDriverService$Builder.findDefaultExecutable(InternetExplorerDriverService.java:175)         at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:355)         at org.openqa.selenium.ie.InternetExplorerDriver.setupService(InternetExplorerDriver.java:281)         at org.openqa.selenium.ie.InternetExplorerDriver.(InternetExplorerDriver.java:211)         at org.openqa.selenium.ie.InternetExplorerDriver.(InternetExplorerDriver.java:150)         at org.openqa.selenium.server.htmlrunner.HTMLLauncher.createDriver(HTMLLauncher.java:303)         at org.openqa.selenium.server.htmlrunner.HTMLLauncher.runHTMLSuite(HTMLLauncher.java:106)         at org.openqa.selenium.server.htmlrunner.HTMLLauncher.mainInt(HTMLLauncher.java:253)         at org.openqa.selenium.server.htmlrunner.HTMLLauncher.main(HTMLLauncher.java:281)","closed","","TWIMMENSE","2019-04-18T01:44:05Z","2019-08-14T13:10:01Z"
"","6860","Selenium Click is not working with IE11 on Windows Server 2016 using VsTest V2 azure-pipelines-tasks","OS: Windows server 2016  Selenium version 3.141 Selenium.WebDriver.IEDriver 3.141.5  Browser: IE 11 11.2125.14393.0  When running Visual Studio Test task on IE the test does not click on elements. it doesn't even throw an error the test continues until it fails at an assert. currently the tests are passing on Chrome but not in IE. I have looked at similar issues and followed the steps to fix and issue consists.   here are the logs  2019-01-16 18:57:00.634 - [Debug] - WaitForReady finished after 1110.4763 ms 2019-01-16 18:57:00.634 - [Debug] - Waiting 55 ms after action 2019-01-16 18:57:00.884 - [Info] - [LoginPage] Recursively Finding By.Tag: body 2019-01-16 18:57:00.884 - [Debug] - [LoginPage] 	XPATH: .//body 2019-01-16 18:57:00.962 - [Info] - [LoginPage] 	SUCCESS after 71 ms 2019-01-16 18:57:00.962 - [Info] - [LoginPage] Recursively Finding By.Class: login 2019-01-16 18:57:00.962 - [Debug] - [LoginPage] 	XPATH: .//body//section[contains(@class, 'login')] 2019-01-16 18:57:01.056 - [Info] - [LoginPage] 	SUCCESS after 91 ms 2019-01-16 18:57:01.056 - [Info] - [LoginPage] Recursively Finding By.Tag: form 2019-01-16 18:57:01.056 - [Debug] - [LoginPage] 	XPATH: .//body//section[contains(@class, 'login')]//form 2019-01-16 18:57:01.134 - [Info] - [LoginPage] 	SUCCESS after 74 ms 2019-01-16 18:57:01.134 - [Info] - [LoginPage] Finding By.Class: btn-primary 2019-01-16 18:57:01.134 - [Debug] - [LoginPage] 	XPATH: .//body//section[contains(@class, 'login')]//form//button[contains(@class, 'btn-primary')] 2019-01-16 18:57:01.213 - [Info] - [LoginPage] 	SUCCESS after 75 ms 2019-01-16 18:57:01.213 - [Error] - exists: True 2019-01-16 18:57:01.213 - [Error] - url: https://website.com/Login?ReturnUrl=%2F 2019-01-16 18:57:01.229 - [Info] - [LoginPage] Recursively Finding By.Tag: body 2019-01-16 18:57:01.229 - [Debug] - [LoginPage] 	XPATH: .//body 2019-01-16 18:57:01.291 - [Info] - [LoginPage] 	SUCCESS after 60 ms 2019-01-16 18:57:01.291 - [Info] - [LoginPage] Recursively Finding By.Class: login 2019-01-16 18:57:01.291 - [Debug] - [LoginPage] 	XPATH: .//body//section[contains(@class, 'login')] 2019-01-16 18:57:01.385 - [Info] - [LoginPage] 	SUCCESS after 91 ms 2019-01-16 18:57:01.385 - [Info] - [LoginPage] Recursively Finding By.Tag: form 2019-01-16 18:57:01.385 - [Debug] - [LoginPage] 	XPATH: .//body//section[contains(@class, 'login')]//form 2019-01-16 18:57:01.463 - [Info] - [LoginPage] 	SUCCESS after 74 ms 2019-01-16 18:57:01.463 - [Info] - [LoginPage] Finding By.Class: btn-primary 2019-01-16 18:57:01.463 - [Debug] - [LoginPage] 	XPATH: .//body//section[contains(@class, 'login')]//form//button[contains(@class, 'btn-primary')] 2019-01-16 18:57:01.541 - [Info] - [LoginPage] 	SUCCESS after 75 ms 2019-01-16 18:57:01.541 - [Info] - [LoginPage] [Attempt #1] Performing click on By.Class: btn-primary 2019-01-16 18:57:03.028 - [Debug] - WaitForReady finished after 1109.4187 ms 2019-01-16 18:57:03.028 - [Debug] - Waiting 55 ms after action 2019-01-16 18:57:03.106 - [Error] - url2: https://website.com/Login?ReturnUrl=%2F 2019-01-16 18:57:03.122 - [Info] - [EULAPage] Finding By.Id: EulaAcceptButton 2019-01-16 18:57:03.122 - [Debug] - [EULAPage] 	XPATH: .//*[@id = 'EulaAcceptButton'] 2019-01-16 18:57:17.701 - [Info] - [EULAPage] 	FAILED after 14576 ms  it never clicks on btn-primary and the test continues. to make sure its not clicking i logged the url before and after click and the url never changes. again this is working in chrome but not in IE 11","closed","R-awaiting answer,","jeditony91","2019-01-17T00:20:40Z","2019-08-14T07:09:55Z"
"","7724","Keys.Chord is not Working to launch incognito window for current instance","OS: windows 10 Selenium Version: 3.141.59, IntelliJ 2018.2.5 Browser: Chrome Browser Version: Version 78.0.3904.70 (64bit) Chromedriver Version: 78.0.3904.70  Expected Behavior Key.chord(Keys.CONTROl, Keys.SHIFT,""N"") should launch incognito window for current running chrome instance I tried with webelement.sendkeys(Keys.chord(Keys.CONTROL,Keys.SHIFT,""N"")) and also tried with Actions actions = new Actions(driver); actions.sendKeys(Keys.chord(Keys.CONTROL, Keys.SHIFT, ""N"")).build().perform();  Actual Behavior it does nothing, no error in log Same happening for both Chrome and Firefox  Steps to reproduce: System.setProperty(""webdriver.chrome.driver"", ""./src/main/resources/chromedriver.exe""); Webdriver driver = new ChromeDriver(); driver.get(""https://www.google.com/""); driver.findElement(By.xpath(""//body"")).sendKeys(Keys.chord(Keys.CONTROL,Keys.SHIFT,""N""));","closed","D-chrome,","VijayVarmaKethe","2019-10-30T08:30:14Z","2021-09-05T09:44:12Z"
"","7184","StaleElementReference exception even after waiting for sufficient amount of time","OS: Windows 10 Browser: Chrome Browser version: 74  Though element is present and even after waiting for 60 secs , element is not able to found and throwing staleelement reference exception.  The weird part is the same script is working well with java +selenium solution , the element is able to found successfully and click , but the same element could not be found and click","closed","","9LPittu","2019-05-07T18:30:59Z","2019-08-14T11:09:50Z"
"","7031","Selenium Web Driver not working with java.net.useSystemProxies","OS: Windows  Browser: Chrome Browser version: 73.0.3683.75 Browser Driver version: Chromdriver2.46 Selenium version (if applicable): 3.141  I try with below java code at that time getting time out error all time  I am working with proxy environment  it's seems that doesn't working with  System.setProperty(""java.net.useSystemProxies"", ""true"");  import org.openqa.selenium.WebDriver; import org.openqa.selenium.chrome.ChromeDriver; import org.openqa.selenium.chrome.ChromeOptions; import org.openqa.selenium.remote.CapabilityType; import org.openqa.selenium.remote.DesiredCapabilities;  public class ChromeDriver1 {  	public static void main(String[] args) { 	System.setProperty(""java.net.useSystemProxies"", ""true""); 		 		System.setProperty(""webdriver.chrome.driver"", ""driver Path\\chromedriver.exe""); 		ChromeOptions options = new ChromeOptions(); 		DesiredCapabilities capabilities = new DesiredCapabilities (); 		capabilities.setCapability(CapabilityType.ACCEPT_SSL_CERTS, true);                 options.merge(capabilities); 		WebDriver driver= new ChromeDriver(options);  		driver.get(""http://www.google.com"");  		driver.manage().window().maximize(); 		driver.quit(); 		  		} }    Error:- Starting ChromeDriver 2.46.628402 (536cd7adbad73a3783fdc2cab92ab2ba7ec361e1) on port 19131 Only local connections are allowed. Please protect ports used by ChromeDriver and related test frameworks to prevent access by malicious code. Exception in thread ""main"" org.openqa.selenium.WebDriverException: Timed out waiting for driver server to start. Build info: version: '3.8.1', revision: '6e95a6684b', time: '2017-12-01T19:05:32.194Z' System info: host: 'CIPL-6PC77', ip: '192.168.100.55', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_73' Driver info: driver.version: ChromeDriver 	at org.openqa.selenium.remote.service.DriverService.waitUntilAvailable(DriverService.java:192) 	at org.openqa.selenium.remote.service.DriverService.start(DriverService.java:178) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:79) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:219) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:142) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:181) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:168) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:157) 	at ChromeDriver1.main(ChromeDriver1.java:27) Caused by: org.openqa.selenium.net.UrlChecker$TimeoutException: Timed out waiting for [http://localhost:19131/status] to be available after 20107 ms 	at org.openqa.selenium.net.UrlChecker.waitUntilAvailable(UrlChecker.java:100) 	at org.openqa.selenium.remote.service.DriverService.waitUntilAvailable(DriverService.java:187) 	... 9 more Caused by: java.util.concurrent.TimeoutException 	at java.util.concurrent.FutureTask.get(FutureTask.java:205) 	at com.google.common.util.concurrent.SimpleTimeLimiter.callWithTimeout(SimpleTimeLimiter.java:147) 	at org.openqa.selenium.net.UrlChecker.waitUntilAvailable(UrlChecker.java:75) 	... 10 more","closed","","HardiPatel1501","2019-03-14T13:23:31Z","2019-08-14T18:09:53Z"
"","7499","Selenium Standalone Server: deviceName capability is not considering when create appium node","OS: Mac OS 10.13.6 Selenium Server version: 3.141.59  **Description:** 1. Selenium Server is UP 2. Appium started for a few devices as nodes(--nodeconfig provided) Each .json has different 'deviceName' capability(e.g. ""phone1"", 'phone2' ....Nodes are connected to selenium server 3. Create WebDriver instance( url - selenium server URL, deviceName - one of existed node deviceName  **Actual result:** Selenium Server send request to one of connected devices not considered provided deviceName capability  Expected result: Selenium Server send request to node with provided deviceName capability","closed","C-grid,","beregeyko","2019-08-16T14:24:18Z","2021-09-05T10:20:22Z"
"","7167","Error Starting IEDriver on Windows Server 2016","OS: Windows Server 2016 Selenium Version: selenium-java-3.4.0 for java (using maven) Browser: IE 11.2670.14393.0 driver: IEDriverServer 3.4.0 64bit   All the browsers run fine on Windows 7, however for IE, the driver does not start up on Windows Server 2016, i have tried disabling the Protection Mode as well.  Any idea if there is anything additional i need to do to get it working for Windows Server 2016","closed","","BrownCowOnSteroid","2019-05-03T16:32:03Z","2019-08-14T12:09:35Z"
"","7386","Edge WebDriverException: Cannot start the driver service on http://localhost:65401","OS: Windows 10 Selenium Version: .net Selenium.WebDriver package 3.12.0  MicrosoftWebDriver: Microsoft Edge 40.15063.674.0 | Microsoft EdgeHTML 15.15063  Browser: Microsoft Edge  Browser Version: Microsoft Edge 40.15063.674.0  Language: C#  Expected Behavior - Create a webDriver instance for Microsoft Edge.  Actual Behavior - OpenQA.Selenium.WebDriverException: OpenQA.Selenium.WebDriverException: Cannot start the driver service on http://localhost:65401/  Steps to reproduce - // path to MicrosoftWebDriver in system path.  //Microsoft webdriver path have set in System Env variables                 ser = EdgeDriverService.CreateDefaultService();                 EdgeDriver driver = new EdgeDriver(ser);                 return driver;   // second attempt: WebDriver = new EdgeDriver(); return driver;  Both have exactly the same results.","closed","D-edge,","Elangopalakrishnan","2019-07-11T15:22:59Z","2021-09-05T08:34:52Z"
"","7183","HTTP TRACE method activated Versions 3.5.0, 3.9.1 3.7.1","OS: any Selenium stand alone jar version: 3.5.0, 3.9.1, 3.7.1 Browser: any  Expected Behavior - HTTP TRACE method disabled  Actual Behavior - HTTP TRACE method activated on Selenium Hub port  Actual Behavior - HTTP TRACE method activated on Selenium Hub port  Steps to reproduce - curl  -X TRACE http://localhost:4444/  TRACE / HTTP/1.1 200 OK User-Agent: curl/7.56.1 Accept: */*  /etc/httpd/conf/httpd.conf  file contains ""TraceEnable off"" Trace is disabled on the server itself on port 80.","closed","","ctrast","2019-05-07T16:35:06Z","2019-08-14T10:10:03Z"
"","7470","Launch cannot control browser access to web page, may appear, not every time","OS :	Microsoft Windows Server 2016 Datacenter language: Python 3.7.3  browser: chrome ChromeDriver:76.0.3809.68  selenium: 3.141.0  Launching chrome browser successfully, selenium controls chrome access to the page without responding, manually entering the page to access no problem","closed","","2720851545","2019-08-06T06:15:42Z","2019-09-05T09:09:37Z"
"","7730","在IE浏览器下出现Element is no longer valid 错误","org.openqa.selenium.StaleElementReferenceException: Element is no longer valid (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 31 milliseconds For documentation on this error, please visit: http://seleniumhq.org/exceptions/stale_element_reference.html Build info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46' System info: host: 'Admin-PC', ip: '10.93.14.50', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_151' Driver info: org.openqa.selenium.ie.InternetExplorerDriver Capabilities [{browserAttachTimeout=0, enablePersistentHover=true, ie.forceCreateProcessApi=false, ie.usePerProcessProxy=false, ignoreZoomSetting=false, handlesAlerts=true, version=10, platform=WINDOWS, nativeEvents=true, ie.ensureCleanSession=false, elementScrollBehavior=0, ie.browserCommandLineSwitches=, requireWindowFocus=false, browserName=internet explorer, initialBrowserUrl=http://localhost:27704/, takesScreenshot=true, javascriptEnabled=true, ignoreProtectedModeSettings=true, enableElementCacheCleanup=true, cssSelectorsEnabled=true, unexpectedAlertBehaviour=dismiss}] Session ID: 7ca9014a-3aa7-4e9c-9ecf-89423bd8d474 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) 	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206) 	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678) 	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:327) 	at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:85)   通过findElement(By.xpath(""//*[text()='张三']""))操作click事件；有时候会是正常运行，但是大部分是失败！！！求解答！！！","closed","","Timor-LOL","2019-10-31T07:05:57Z","2019-11-30T20:09:37Z"
"","7629","Use org.mockito.ArgumentMatchers instead of Mockito","org.mockito.Mockito#any is inherited from org.mockito.ArgumentMatchers. Use ArgumentMatchers directly to no longer rely on the inheritance chain. A future version of Mockito will remove this inheritance chain.       - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla) (Google CLA)","closed","","TimvdLippe","2019-10-01T16:29:48Z","2019-10-02T11:19:58Z"
"","7266","[dotnet] Optimize Actions.MoveToElement method by removing needless operations","Optimize `Actions.MoveToElement(IWebElement toElement, int offsetX, int offsetY, MoveToElementOffsetOrigin offsetOrigin)` method by removing needless operations.       - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-dotnet,","YevgeniyShunevych","2019-06-06T08:40:36Z","2019-10-04T18:55:40Z"
"","7008","C# - OpenQA.Selenium.WebDriverException : for chromedriver.exe (nuget pkg version 2.46.0)","OpenQA.Selenium.WebDriverException :  A exception with a null response was thrown sending an HTTP request to the remote WebDriver server for URL http://localhost:49730/session/c097260d15be5935b9842a216fa2903d/element. The status of the exception was UnknownError, and the message was: Only one usage of each socket address (protocol/network address/port) is normally permitted  I am getting above error while executing scripts in parallel in xunit. FYI - I have .net core 2.2 xunit automation project and I am using Selenium.WebDriver.ChromeDriver 2.46.0 nuget pkg version. I also have chrome Version 72.0.3626 on my automation machine.  Can someone please assist me? Please let me know if you require more info.  OS: Windows NT 10.0 Browser: Chrome Browser version: Chrome 72.0.3626.121 Browser Driver version: ChromeDriver.exe 2.46.0 Language Bindings version: C# nuget package version - Selenium.WebDriver 3.141.0","closed","","sanjaykulkarni04","2019-03-07T13:59:37Z","2019-08-14T18:09:51Z"
"","7327","Fix random permission problems when trying to obtain a free port","On Windows 10, about every 100th request to obtain a free port fails with EACCESS error. This small change fixed the issue.  I did not write a new tests for this issue. Do you have a test strategy for infrequent problems?  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-nodejs,","adymorz","2019-06-25T08:54:00Z","2019-10-04T08:21:20Z"
"","7070","account for scenarios where /proc/version is inaccessible","On Samsung Linux on Dex and a number of other containers, the file `/proc/version` cannot be accessed, even with sudo privileges. This results in an error that prevents `rails server` from even starting. Since the failure of this command means we are not in a Microsoft environment, but a sandboxed mobile or container based one, return false if an error accessing the file occurs.       - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/7070)","closed","C-rb,","dmvt","2019-03-29T15:34:37Z","2019-11-20T21:29:48Z"
"","7284","Portprober.js must respect excludedportrange on windows","On my windows 10 machine with docker installed the logic implemented in findWindowsPortRange() in portprober.js often chooses a port that is actually excluded. This causes the following error:  ``` Error: listen EACCES: permission denied 0.0.0.0:49719     at Server.setupListenHandle [as _listen2] (net.js:1241:19)     at listenInCluster (net.js:1306:12)     at Server.listen (net.js:1394:7)     at Promise (C:\Users\Stefa\Source\Javascript\js-framework-benchmark\webdriver-ts\node_modules\selenium-webdriver\net\portprober.js:159:12)     at new Promise ()     at isFree (C:\Users\Stefa\Source\Javascript\js-framework-benchmark\webdriver-ts\node_modules\selenium-webdriver\net\portprober.js:150:10)     at Object.findFreePort (C:\Users\Stefa\Source\Javascript\js-framework-benchmark\webdriver-ts\node_modules\selenium-webdriver\net\portprober.js:176:15)     at processTicksAndRejections (internal/process/task_queues.js:86:5)   code: 'EACCES',   errno: 'EACCES',   syscall: 'listen',   address: '0.0.0.0',   port: 49719 } ```  Portprober.js just checks for the dynamic port range: ```netsh int ipv4 show dynamicport tcp  Protokoll tcp Dynamischer Portbereich --------------------------------- Startport      : 49152 Anzahl von Ports : 16384 ```  But hyperv has some reserved ports that can be listed with the following command:  `netsh interface ipv4 show excludedportrange protocol=tcp`. This prints on my machine: ``` Startport      Endport ----------    --------       5357        5357       5426        5426      49711       49810      49811       49910      50000       50059     *      50060       50159      50160       50259      50260       50359      50590       50689 ``` Port 49719 falls within the third range.  ## Environment  OS: Windows 10 with hyperv Browser: Chrome Browser version: 75.0 Browser Driver version: chromedriver 75.0.0 Language Bindings version: Javascript selenium-webdriver 4.0.0-alpha.1","closed","OS-windows,","krausest","2019-06-12T14:49:55Z","2021-09-05T08:25:10Z"
"","6996","Upgrade OkHttp to 3.13.1, and Okio to 1.17.2","Okio version is based on the maven dependency of OkHttp  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6996)","closed","","asashour","2019-03-05T10:39:49Z","2019-04-15T08:06:15Z"
"","7832","Implement w3c parameters for options class","Ok, after 2 years of trying to figure out how to do this, I think this is the right way to go. This replaces #7378, and hopefully addresses all the concerns raised there. I added a bunch of specs to master that represent current behavior, so it should be easy to see what this does.  **Problem statement:** 1. Many users are confused as to what goes into ""options"" and what goes into ""capabilities"" parameters right now. As such, it is very common that users just generate their own Hash from scratch, which has no protection against invalid parameters. Java & .NET both use their Options class to set all w3c and browser specific values, without making a distinction between them. 2. There is currently no easy way to support 3rd party extension capabilities  **Features of this PR:** 1. All functionality that exists currently is maintained in this release, just with deprecations.  2. `:desired_capabilities` and `:options` parameters are deprecated in favor of using `:capabilities` parameter with an Array ``` # old: driver = Selenium::WebDriver.for :chrome, {desired_capabilities: caps, options: opts} # new: driver = Selenium::WebDriver.for :chrome, {capabilities: [caps, opts]} ```  3. `Capabilities` instances will continue to be supported, and will be the only way for a user to hard code everything from a Hash.  4. `Hash` instance will not be supported directly in the capabilities array, it would need to get put into Capabilities class first ``` # old: driver = Selenium::WebDriver.for :chrome, {desired_capabilities: hash_of_options} # new: driver = Selenium::WebDriver.for :chrome, {desired_capabilities: Remote::Capabilities.new(hash_of_options)} ```  5. `Options` classes now can handle w3c values as well as browser specific values. Because we know exactly what is allowed by w3c, we can assume that anything not in the spec belongs in the browser specific options, which would allow users to take advantage of new browser specific features without the bindings having to explicitly support them. It will be the recommended way going forward to correctly build valid w3c capabilities.  6. Because `:capabilities` takes an Array, the Ruby bindings can now directly support extension capabilities by third parties or test libraries so long as the class instance being passed in responds to `#as_json`  7. There is no logic for how to deal with people passing in multiple objects with different key/values, so people can still do dumb things here, but they are already doing some of that with Hashes currently  8. So the non-deprecated allowed values for initializing a Driver include: `:service`, `:capabilities`, `:url`, `:http_client`, and that's it. Nice and simple and concerns finally all separated out.  9. In a very Ruby fashion, this code provides multiple ways of doing things, but the new approach to `Options` should be much easier to maintain going forward than `Capabilities` is right now.","closed","C-rb,","titusfortner","2019-12-02T02:57:51Z","2020-07-14T16:08:20Z"
"","7307","deprecate parameters getting passed into the driver directly","Note that this is for adding deprecations to latest 3.x code (and PR is to that branch, not master) so we can delete it all in 4.x  Essentially looking to get rid of things getting passed directly into driver initialization that belong in the Options or Capabilities classes.","closed","C-rb,","titusfortner","2019-06-19T20:33:12Z","2020-07-12T23:32:52Z"
"","7384","IJavaScriptExecutor.ExecuteScript args","Not sure if bug or feature.  I have class _IWebElementExtended_ implementing _IWebElement_ interface, when i want to use it as argument for _IJavaScriptExecutor.ExecuteScript_ it throws **""Argument is of an illegal type ....IWebElementExtended ...""**   i think i see where is the catch - method _private static object ConvertObjectToJavaScriptObject(object arg)_ expect _IWrapsElement_ or _IWebElementReference_ (to make list complete also not relevant _IEnumerable_ or _IDictionary_) so if _IWebElementExtended_ also implements _IWrapsElement_ then no exceptions is thrown - so Remarks part of _IJavaScriptExecutor.ExecuteScript_ isn't correct imho  > Arguments must be a number (which will be converted to a System.Int64), a System.Boolean, > a System.String or a **OpenQA.Selenium.IWebElement**. An exception will be thrown > if the arguments do not meet these criteria. The arguments will be made available > to the JavaScript via the ""arguments"" magic variable, as if the function were > called via ""Function.apply"" ) >   C# + Selenium 3.141","closed","C-dotnet,","mshot","2019-07-10T19:56:21Z","2022-06-19T00:12:03Z"
"","6956","[node] Adding support for opening a new window.","Node implementation for opening a new window.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6956)","closed","","corevo","2019-02-20T15:04:01Z","2022-06-09T07:44:22Z"
"","7811","IE - Browser launched URL not loading","No error message in the console. The browser remains open until manually stop the execution. Protractor Version: 5.4.2 Webdriver-manager version: 12.1.6 Node version: 10.13.0 I have tried the below IE driver versions: IEDriverServer3.150.1, IEDriverServer3.150.0, IEDriverServer3.141.59 Selenium server version: 3.141.59  Kindly help me.","closed","","krthknan","2019-11-25T10:00:14Z","2019-12-26T03:45:07Z"
"","7108","driver.find_elements_by_xpath() get list of data how display all in python","my_url = 'https://techolution.app.param.ai/jobs/'  uclient = ureq(my_url) page_html = uclient.read() uclient.close()  page_soup = soup(page_html,""html.parser"") driver = webdriver.Firefox() driver.get(my_url) results = driver.find_elements_by_xpath('//*[@id=""joblist""]')  for result in results: print(result.text)  hear i got all the information in a list like the below  Engineering Big Data Intern Internship · Hyderabad · 0 - 2 Years 7 days ago Consulting Senior Cloud Specialist Full-time · Singapore · 5 - 10 Years 11 days ago Information Technology Cloud Native Developer Full-time · Hyderabad · 2 - 5 Years 12 days ago  how i store the data according to the date of posting(Most old first) as a DataFrame in CSV.","closed","","jasartp","2019-04-16T14:28:34Z","2019-08-14T15:09:34Z"
"","7109","driver.find_elements_by_xpath() get list of data how display all in python","my_url = 'https://techolution.app.param.ai/jobs/'  uclient = ureq(my_url) page_html = uclient.read() uclient.close()   page_soup = soup(page_html,""html.parser"") driver = webdriver.Firefox()    driver.get(my_url) results  = driver.find_elements_by_xpath('//*[@id=""joblist""]')  for result in results:     print(result.text)  then i got list of data's like below  Engineering Big Data Intern Internship · Hyderabad · 0 - 2 Years 7 days ago Consulting Senior Cloud Specialist Full-time · Singapore · 5 - 10 Years 11 days ago Information Technology Cloud Native Developer Full-time · Hyderabad · 2 - 5 Years 12 days ago  how i store the data according to the date of posting(Most old first) as a DataFrame in CSV","closed","","jasartp","2019-04-16T14:38:39Z","2019-08-14T14:10:03Z"
"","7678","selenium  node runtime error:Actions is not a constructor","my script like this: ``` javascript  const {     Builder,     By,     Key,     until,     Actions } = require('selenium-webdriver');          /*just test */         await driver.switchTo().frame(0)         var action = new Actions(driver);         await action.mouseDown(driver.findElement(By.xpath(""//*[@id='loginButton']"")))             .mouseUp()             .perform() ``` when I run this script , terminal show me error: `(node:9640) UnhandledPromiseRejectionWarning: TypeError: Actions is not a constructor`  ![image](https://user-images.githubusercontent.com/3068492/66697345-4cc45500-ed07-11e9-9b17-c730c5cf57ae.png)  ![image](https://user-images.githubusercontent.com/3068492/66697380-a462c080-ed07-11e9-8a54-93e6bf22403c.png)   I can found the js module file in the module  path.","closed","C-nodejs,","Frederic-Zhou","2019-10-12T07:46:39Z","2021-09-05T08:34:52Z"
"","7578","SafariDriver does not support pageLoadTimeout","My previously working Browserstack tests have started failing. The Browserstack team report the cause is this unresolved issue:  https://github.com/seleniumhq/selenium-google-code-issue-archive/issues/6015  Any update?","closed","","anthonygreen","2019-09-18T16:37:17Z","2019-10-19T19:23:35Z"
"","7086","ChromeDriver crashes in Windows","My code reads ChromeDriver from Project level yet; the chrome halfway through the suite it tries to pick driver from the C:\\ or local folder and crashes.  Here chrome is starting from local folder rather Project folder. I did point the chrome location in my project folder using System.getProperty(""user.dir"") in Java.  `System.setProperty(""webdriver.chrome.driver"", System.getProperty(""user.dir"") + ""//Drivers//chromedriver.exe"");                 ChromeOptions options = new ChromeOptions();                 options.setPageLoadStrategy(PageLoadStrategy.NORMAL);                 options.setExperimentalOption(""useAutomationExtension"", false);                 options.addArguments(""--disable-web-security"", ""--headless"",""enable-automation"",""--disable-gpu"",                         ""--test-type"",""--disable-browser-side-navigation"",""--disable-infobars"",""--disable-hang-monitor"", ""--incognito"",""start-maximized"",""--disable-dev-shm-usage"",""--no-sandbox"",""--ignore-certificate-errors"");                 DesiredCapabilities capabilities = new DesiredCapabilities();                 capabilities.setCapability(ChromeOptions.CAPABILITY, options);                 driver = new ChromeDriver(options);`      > C:\Program Files (x86)\Google\Chrome\Application\chrome.exe   > os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_25'  ![ChromeCrash](https://user-images.githubusercontent.com/43443475/55571004-430fc400-56ca-11e9-9ef3-09de59709e73.PNG)","closed","","skAutomation12","2019-04-04T16:13:52Z","2019-08-14T16:09:57Z"
"","7633","Update EdgeOptions constructor to use new ms:edgeOptions capability name","msedgedriver has been updated to accept ms:edgeOptions instead of goog:chromeOptions in the capabilities. This change updates the .NET bindings to reflect this too.  followup changes to other languages to come.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","D-edge,","stanleyhon","2019-10-01T22:51:38Z","2019-12-19T19:31:15Z"
"","7645","Updating EdgeOptions to allow specifying BrowserName.","msedgedriver allows driving of edge based targets such as [WebViews](https://docs.microsoft.com/en-us/microsoft-edge/hosting/webview2). msedgedriver expects the browserName capability to be provided differently in order to differentiate between driving edge or an edge-based webview.  This change updates the EdgeOptions construction to allow specifying the browserName capability, allowing overriding of ""MicrosoftEdge"" to whatever the user desires.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","D-edge,","stanleyhon","2019-10-03T21:41:06Z","2020-01-11T00:10:21Z"
"","7650","Adding customizable browser_name capability to microsoftedge","msedgedriver allows driving of edge based targets such as [WebViews](https://docs.microsoft.com/en-us/microsoft-edge/hosting/webview2). msedgedriver expects the browserName capability to be provided differently in order to differentiate between driving edge or an edge-based webview.  This change updates the edge variant of `Options` to allow specifying the browserName capability, This overrides what is requested to msedgedriver.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","D-edge,","stanleyhon","2019-10-04T21:34:07Z","2019-10-15T13:22:33Z"
"","7592","Firefox -MoveTargetOutOfBoundsException","MoveTargetOutOfBoundsException is occurring in more recent times when used in Drag and drop scenario. This exception started to observed first with vertical movement and slowly with horizontal drag and drop actions too. Wanted someone to look into. Error description:- MoveTargetOutOfBoundsException: Message: (1428, 545) is out of bounds of viewport width (1152) and height (847). Also checked to make sure browser window is maximized, Firefox version 69.0, OS tested on : Mac OS 10.14.5 and Linux. This was absolutely working fine without issue. No upgrades have been done to the environment.  ## To Reproduce =========  1) Open firefox latest version on Linux or Mac OSX( tested on 10.14.x) version 2) Open AUT, browser maximized 3) Using RFSelenium library trying to move an element  horizontally or vertically with keyword Dragdrop by offset  $locator xoffset  yoffset 4) Get MoveTargetOutOfBoundsException with outbounds viewport width xxx and height xxx    Behaviour is see: Error i see:MoveTargetOutOfBoundsException: Message: (1428, 545) is out of bounds of viewport width (1152) and height (847)   ## Environment Mac OSX 10.14.x, Linux CentOS 7.6.1810 AWS EC2 Env: Robot Framework 3.1.2 ,Python 3.7.1 on linux,Selenium 3.14.0,","closed","R-awaiting answer,","umarambh","2019-09-23T16:02:05Z","2020-04-18T22:17:00Z"
"","7591","MoveTargetOutOfBoundsException on Firefox","MoveTargetOutOfBoundsException is occurring in more recent times when used in Drag and drop scenario. This exception started to observed first with vertical movement and slowly with horizontal drag and drop actions too. Wanted someone to look into. Error description:- MoveTargetOutOfBoundsException: Message: (1428, 545) is out of bounds of viewport width (1152) and height (847). Also checked to make sure browser window is maximized, Firefox version 69.0, OS tested on : Mac OS 10.14.5 and Linux.","closed","","umarambh","2019-09-23T15:28:35Z","2019-10-23T16:23:38Z"
"","7810","Update locators.js","Modify: updated jsdoc for object return    **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","harsha509","2019-11-25T07:51:41Z","2019-11-29T13:15:40Z"
"","7743","Missing a dependencies on the Netty client so -Dwebdriver.http.factor…","Missing a dependencies on the Netty client so -Dwebdriver.http.factory=netty would just lead to tears. (And a class not found exception.)    - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","adamgoucher","2019-11-05T02:17:45Z","2019-11-05T12:56:04Z"
"","7715","add method on WebDriver::Element to print the element to console","minimal formatting applied. Usefull for debugging.  I found this super usefull if you have a `WebDriver::Element` annd want to actually look at the html of this element during debugging (inside the console or `irb`). The formatting is minimal at the moment but could be improved. I just wanted to push this to see what you guys think of it and if it adds value.   I signed the ""SFC Individual Contributor License Agreement"".  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-rb,","dcts","2019-10-25T15:27:13Z","2019-11-20T21:21:57Z"
"","6988","3.141.0 Encoding problem","Meta - ProgramLanguage: Python 3.7.1 OS: MacOS Mojave Selenium Version: 3.141.0 IDE: VScode 1.31.1 Browser: Chrome Browser Version: 72.0.3626.119  Expected Behavior - driver.page_source return the correct encoding ""utf-8"", but get ""gbk"". It is possible that the server side did not set the response header. ![image](https://user-images.githubusercontent.com/37615298/53700569-ca99b700-3e2e-11e9-92cd-468901cd3cca.png)   Actual Behavior - ![image](https://user-images.githubusercontent.com/37615298/53700592-eef59380-3e2e-11e9-927b-57f1d3c4eb2c.png)  Please check up the encoding, and fix driver.page_source method to read the response data properly.  Maybe Useful - ![image](https://user-images.githubusercontent.com/37615298/53700602-016fcd00-3e2f-11e9-8e37-b937e95771fe.png) ![image](https://user-images.githubusercontent.com/37615298/53700606-0896db00-3e2f-11e9-947f-74a7c96efbe4.png)","closed","R-awaiting answer,","Tyrone-Zhao","2019-03-03T19:40:11Z","2019-08-14T20:10:00Z"
"","6971","meri marzi","meri marzi  - [ ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6971)","closed","","Manju26feb","2019-02-26T12:08:03Z","2019-02-26T12:15:17Z"
"","7308","[rb] remove unnecessary methods","Main issue here is that any given capabilities/options should do the same thing locally that it does remotely, so we need to remove unnecessary processing that doesn't happen in Remote class.  `Remote::Bridge#create_capabilities` merges options & capabilities, so there is no need to do it in any of these classes. https://github.com/SeleniumHQ/selenium/blob/master/rb/lib/selenium/webdriver/remote/bridge.rb#L65  3 of the items I removed in `Chrome::Driver#create_capabilities` need to be deprecated in 3.x before we just remove them, which I proposed in #7307","closed","C-rb,","titusfortner","2019-06-19T20:56:37Z","2020-07-12T23:32:37Z"
"","7428","Linux selenium simulation Ctrl+V operation picture","Linux selenium simulation Ctrl+V operation, the text can be successful, the picture can not be successful, the windows are normal, what may be the reason","closed","","jxlining","2019-07-24T12:05:04Z","2019-08-23T13:09:34Z"
"","7254","Wait for element doesnot works on Safari Browser","Latest Version Safari browser on Mac OS Selenium version used: 3.4  Steps to Repro:  Write script to click on element or Wait for element   Expected Result : Script should click on element Actual result : No such element exception occurs  Note; This is not specific to any website. I see this pattern on any website. But when i run the same script o Chrome or Firefox it is okay. Also for now in our scirpts we are using thread.sleep to get rid of these failures","closed","","musthafam","2019-06-02T08:03:21Z","2019-08-14T09:09:52Z"
"","7806","java.lang.NoClassDefFoundError: org/apache/http/auth/Credentials","Last working Selenium version  Worked up to version: Not exactly known but it works for the previous releases  Stopped working in version: 3.141.59 All the required libraries for maven, Selenium are installed   ## Expected behavior  It should open the chrome browser and go to the provided URL   ## Console logs are here  `java.lang.NoClassDefFoundError: com/google/gson/JsonParseException 	at org.openqa.selenium.remote.http.JsonHttpCommandCodec.(JsonHttpCommandCodec.java:63) 	at org.openqa.selenium.remote.HttpCommandExecutor.(HttpCommandExecutor.java:85) 	at org.openqa.selenium.remote.HttpCommandExecutor.(HttpCommandExecutor.java:70) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.(DriverCommandExecutor.java:62) 	at org.openqa.selenium.chrome.ChromeDriverCommandExecutor.(ChromeDriverCommandExecutor.java:40) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:170) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:159) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:116) 	at test_demo.demo_test1.App1.test(App1.java:21) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) 	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) 	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) 	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) 	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) 	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) 	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) 	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) 	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:89) 	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:41) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:541) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:763) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:463) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:209) Caused by: java.lang.ClassNotFoundException: com.google.gson.JsonParseException 	at java.net.URLClassLoader.findClass(URLClassLoader.java:382) 	at java.lang.ClassLoader.loadClass(ClassLoader.java:424) 	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349) 	at java.lang.ClassLoader.loadClass(ClassLoader.java:357) 	... 32 more`  ## Environment  OS: Windows 10 Browser: Chrome Browser version: Version 78.0.3904.97 (Official Build) (64-bit) Browser Driver version: Chromedriver 78.0.3904.105 Language Bindings version: Java 1.8 Selenium Grid version (if applicable): 3.141.59","closed","","cankush625","2019-11-22T11:19:44Z","2019-12-22T14:03:28Z"
"","7072","[py] turn on keep-alive by default for remote connections","Java & .NET have this turned on by default. We're looking to do this in Ruby #7065   Based on a sample suite run against Sauce Labs with SSL, keep-alive improved performance ~30%. There shouldn't be a downside to turning this on.   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/7072)","closed","C-py,","titusfortner","2019-03-29T17:07:51Z","2020-07-12T23:37:40Z"
"","7652","Add async support to IWait","IWait and subsequently DefaultWait expose only IWait.Until as the retry action. Within this, there is a Thread.Sleep call which blocks execution of the thread. This pull request adds an additional method to IWait and DefaultWait called UntilAsync, which is an async implementation of Until. This allows returning a Task to the caller that the caller can await instead of blocking thread execution.  Tests are primarily duplicates of what existed for DefaultWait.Until to maintain parity of behavior between the sync and async methods.  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-dotnet,","MetaY","2019-10-05T04:01:41Z","2019-11-22T03:09:21Z"
"","6982","fix crash in IEDriverServer","it seems IUIAutomationElement can return with success despite not returning an Array   issue: https://github.com/SeleniumHQ/selenium/issues/6976  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6982)","closed","","reinsch82","2019-03-01T08:03:00Z","2019-03-01T18:40:34Z"
"","7092","unable to receive message from renderer","It is very strange the ""unable to receiver message from render"" error occurs when executing testcase  chrome version: 73.0.3683.103 chrome driver version: 73.0.3683.68 selenium standalone version:  3.141.59 os: windows server 2012 R2  ![image](https://user-images.githubusercontent.com/17002975/55789108-3a652680-5aec-11e9-9422-583fc73a497c.png)","closed","","wck821829906","2019-04-09T09:28:08Z","2019-08-14T16:09:50Z"
"","6903","[Java client] Is it acceptable that getCapabilities may return null?","It is possible, that RemoteWebDriver's `getCapabilities` method returns `null` before `createSession` is called. I would like to make sure this is the expected behaviour or probably a typo in the source where `this` prefix is missing. The affected line of code can be found here: https://github.com/SeleniumHQ/selenium/blob/80186eefefb21987bae6152016f91464c9eb864d/java/client/src/org/openqa/selenium/remote/RemoteWebDriver.java#L152","closed","","mykola-mokhnach","2019-01-31T07:00:32Z","2019-08-14T22:09:51Z"
"","6881","Remove org.openqa.selenium.internal.WrapsElement","It is not uncommon to unwrap an element in remote grid environments. For example, when `org.openqa.selenium.support.events.EventFiringWebDriver.EventFiringWebElement` wraps a `org.openqa.selenium.remote.RemoteWebElement` and the test needs to set a `org.openqa.selenium.remote.LocalFileDetector` on the `RemoteWebElement`.  Example: ``` public void fileInput(String cssSelector, String absolutePath) {    WebElement fileElement = this.driver().findElement(By.cssSelector(cssSelector));    if (fileElement instanceof WrapsElement) {      fileElement= ((WrapsElement)fileElement).getWrappedElement();    }   if (fileElement instanceof RemoteWebElement)   {     LocalFileDetector detector = new LocalFileDetector();     File f = detector.getLocalFile(absolutePath);     ((RemoteWebElement)fileElement).setFileDetector(detector);     path = f.getAbsolutePath();   }   fileElement.sendKeys(path); } ``` Starting with Selenium 3.141.59, this code breaks since the package name changed for `WrapsElement` from `org.openqa.selenium.internal` to `org.openqa.selenium`. The interface `org.openqa.selenium.internal.WrapsElement` was left in the code base, and thus, existing imports are happy.  Consider removing `org.openqa.selenium.internal.WrapsElement` to avoid confusion.","closed","C-java,","joshlandin","2019-01-24T21:07:37Z","2019-08-14T23:09:34Z"
"","6980","Adding a fix to send proper Content-Type header for Hub resources.","Issue: The resource handler servlet for Hub was not adding proper Content-Type headers to the response.  Fix: Added the correct Content-Type header in response for css, js and images.  **I verify that I have signed the Contributor License Agreement**  Fixes #6961     --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6980)","closed","","virenv","2019-02-28T17:51:31Z","2019-03-10T14:16:25Z"
"","7705","FluentWait changes WebDriverWait().until(ExpectedCondition...) fails with java.lang.NoSuchMethodError","Issue is closed: https://github.com/SeleniumHQ/selenium/issues/3606  It's still reproducible on latest Selenium 4.x.x  using Guava 28.x.x   Can anyone know how to fix this ? I would be happy to provide more info but not sure whether we will like to start a new bug or re-open the old issue. Either way people are seeking solution, please let me know.   Thanks","closed","R-awaiting answer,","americausa999","2019-10-22T22:41:12Z","2020-04-18T22:16:45Z"
"","7356","Alert is closed when UnhandledAlertException is thrown","Issue Description: ChromeDriver version: 75.0.3770.90 Chrome version: 75.0.3770.100 Selenium version: 3.141.0 Language: C# OS: Windows 7  When an alert is displayed on the page (e.g. ""Are you sure you wish to leave this page?""), and any interaction with the driver is made without switching to the alert before hand. When the UnhandledAlertException is thrown, the alert is closed. In our scenario we have some code within a try-catch that we wish to execute regardless of whether an alert is displayed or not. When the alert is displayed the UnhandledAlertException will be thrown and we will catch it and handle the alert appropriately. We can no longer do this as when the UnhandledAlertException is thrown, the alert is now closed.  **Note: This was NOT an issue with the following:** ChromeDriver version: 74 Chrome version: 74 Selenium version: 3.4.0 Language: C# OS: Windows 7  **Note: This is also an existing issue with the IEDriver and Geckodriver.**  **Steps to reproduce:** - Instantiate the driver. - Navigate to ""https://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_prompt"". - Click the ""Try it"" button. An alert will be displayed. - Excecute the following line of code: string a = driver.Title;  Observed behaviour: Alert is closed when UnhandledAlertException is thrown.  Expected behaviour: Alert is not closed when UnhandledAlertException is thrown.","closed","","kwilson-93","2019-07-03T15:29:50Z","2019-08-14T06:09:58Z"
"","7259","Specify LogPath variable in C#","Is it possible to provide a way to specify LogPath in FirefoxDriverService class with dotnet bindings? I have a VM running tests using Selenium WebDriver and it crashes frequently. Without enabling these logs, it's not possible to dig deeper. I notice that this log_path is available in Python language bindings but not dotnet.      ```C#     var service = FirefoxDriverService.CreateDefaultService     (Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location));     service.LogPath = ""C:\geckodriver.log"";","closed","C-dotnet,","rj-max","2019-06-04T14:38:27Z","2022-03-13T00:09:56Z"
"","7663","Grid: Verify incoming node registrations","Include a key or certificate in the registration request that needs to be verified.","closed","C-grid,","shs96c","2019-10-08T13:19:43Z","2021-09-05T09:44:00Z"
"","7517","Windows npm installation should used chromedriver.cmd instead of chromedriver.exe","In the source code below, you can see that if the platform is windows you use chromedriver.exe by default, but after having npm package of google chrome driver, we may have chromedriver.cmd as an installed package, so maybe we can use this one as well. By changing it the program works as it should, but thought that you may need to check it as well. https://github.com/SeleniumHQ/selenium/blob/master/javascript/node/selenium-webdriver/chrome.js#L152","closed","I-stale,","fghamsary","2019-08-26T21:32:00Z","2021-12-04T00:06:42Z"
"","7171","Fix for building selenium project","In case the user is trying to build the entire project using `./go build` or trying to build the standalone-server. The builds were failing with the below exception :  BUILD FAILED: The rule //java/client/test/org/openqa/selenium/remote:common-tests could not be found.  This was caused because the tasks in the Rakefile were still referring to ""common-tests"" task instead of the new ""small-tests""       - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/7171)","closed","","rookieInTraining","2019-05-04T04:52:50Z","2019-05-04T15:32:53Z"
"","7443","First cut of README, but still some work to be done","Improvements to the README: basic bazel info, some example commands    - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","mmerrell","2019-07-28T22:48:13Z","2020-08-27T14:58:51Z"
"","7166","Unable to start selenium grid properly within java code","Im trying to start selenium grid programmatically but i have and issue dont know exactly how to solve it,  im running appium test using page object model and appium server start programmatically in two sessions for two android devices and its working properly when i open selenium grid from terminal using the common code ""java -jar selenium-server-standalone-3.141.59.jar -role hub ""  but now i want to start also selenium grid within my script so once its initiated appium server it will detect the localhost and register the node config files ,perform the test and after test is finished appium server will stop then selenium grid session will be terminated as well  **this is my code for the baseSetup Class** . also im wondering why i have to set config for selenium grid? can i start it in default configuration like if ""java -jar selenium-server-standalone-3.141.59.jar -role hub "" since already node config are loaded with the appium server  `public class BaseSetup extends GridHub  {      protected static AndroidDriver driver = null;     protected AppiumDriverLocalService service;     public WebDriverWait wait;     private ThreadLocalDriver threadLocalDriver = new ThreadLocalDriver();     @Parameters({""deviceName"",""platformVersion"",""udid"",""URL_"",""Sport"",""deviceId"",""sysPort"",""bootStrap"",""wdaPort"",""path""})     @BeforeMethod(alwaysRun = true)     public void setUp (String deviceName, String platformVersion, String udid, String URL_, String Sport, String deviceId, String sysPort, String bootStrap, String wdaPort, String path) throws Exception {          System.out.println(""Driver Is Initiated"");         DesiredCapabilities dc = new DesiredCapabilities();          // Mobile setup         dc.setCapability(MobileCapabilityType.DEVICE_NAME, deviceName);         dc.setCapability(MobileCapabilityType.PLATFORM_NAME, ""Android"");         dc.setCapability(MobileCapabilityType.PLATFORM_VERSION, platformVersion);         dc.setCapability(AndroidMobileCapabilityType.SYSTEM_PORT, sysPort);         dc.setCapability(""appium:unlockType"", ""password"");         dc.setCapability(""appium:unlockKey"", ""@sdsd""); //        dc.setCapability(MobileCapabilityType.UDID,udid_); //        dc.setCapability(MobileCapabilityType.AUTOMATION_NAME, ""uiautomator2""); // Make the test fail after first tear down //        dc.setCapability(""appium:uiautomator2ServerInstallTimeout"", ""8000"");           // Application setup         dc.setCapability(AndroidMobileCapabilityType.APP_PACKAGE, ""xx"");         dc.setCapability(AndroidMobileCapabilityType.APP_ACTIVITY, ""xx"");         dc.setCapability(AndroidMobileCapabilityType.AUTO_GRANT_PERMISSIONS,""true"");         dc.setCapability(MobileCapabilityType.CLEAR_SYSTEM_FILES, true);           // Driver configuration //    int port = Integer.parseInt(Sport); //need when use function .using      service = AppiumDriverLocalService             .buildService(new AppiumServiceBuilder()                     .usingDriverExecutable(new File(""/usr/local/bin/node""))                     .withAppiumJS(new File(""/Applications/Appium.app/Contents/Resources/app/node_modules/appium/build/lib/main.js""))                     .withArgument(Arg.ADDRESS,URL_)                     .withArgument(Arg.PORT,Sport)                     .withArgument(Arg.CALLBACKPORT,Sport)                     .withArgument(Arg.WDALOCALPORT,wdaPort)                     .withArgument(Arg.BootstrapPort,bootStrap)                     .withArgument(Arg.NODECONFIG,path)                     .withArgument(Arg.SESSIONOVERRIDE));      service.start();                 Thread.sleep(7000); // Needed for appium server to wait for selenium grid to register the node         driver = new AndroidDriver (new URL(""http://localhost:4444/wd/hub""), dc); Thread.sleep(5000); //        threadLocalDriver.setTLDriver(new AndroidDriver(new URL(""http://""+URL_+"":""+Sport+""/wd/hub""),dc)); //        threadLocalDriver.setTLDriver(new AndroidDriver(new URL(""http://localhost:4444/wd/hub""),dc)); //        driver = threadLocalDriver.getTLDriver(); //        wait = new WebDriverWait(driver, 10);     }      @AfterMethod     public void tearDown(){         if (driver != null)         driver.quit();         System.out.println(""Driver quit"");      }  } ` **this is my GridHUB class** `package Configuration;  import org.openqa.grid.common.GridRole; import org.openqa.grid.common.RegistrationRequest; import org.openqa.grid.internal.utils.GridHubConfiguration; import org.openqa.grid.internal.utils.SelfRegisteringRemote; import org.openqa.grid.selenium.proxy.DefaultRemoteProxy; import org.openqa.grid.web.Hub; import org.openqa.selenium.chrome.ChromeOptions; import org.openqa.selenium.remote.DesiredCapabilities; import org.openqa.selenium.server.SeleniumServer; import org.testng.annotations.BeforeClass; import org.testng.annotations.BeforeMethod; import org.testng.annotations.BeforeSuite; import org.testng.annotations.Parameters;  import java.net.URL; import java.util.HashMap; import java.util.Map;  public class GridHub  {      @BeforeClass     @Parameters({""deviceName"",""platformVersion"",""udid"",""URL_"",""Sport"",""deviceId"",""sysPort"",""bootStrap"",""wdaPort"",""path""})     public static void main(String deviceName, String platformVersion, String udid, String URL_, String Sport, String deviceId, String sysPort, String bootStrap, String wdaPort, String path) throws Exception {         String strIP = ""localhost"";          GridHubConfiguration config = new GridHubConfiguration();         config.setTimeout(30000000);         config.setPort(4444);         config.setHost(strIP);          Hub hub = new Hub(config);         hub.start();         RegistrationRequest req = new RegistrationRequest();         req.setRole(GridRole.NODE);         Map nodeConfiguration = new HashMap(); //        nodeConfiguration.put(RegistrationRequest.PROXY_CLASS, DefaultRemoteProxy.class.getName());         nodeConfiguration.put(RegistrationRequest.CLEAN_UP_CYCLE,2000);         nodeConfiguration.put(RegistrationRequest.TIME_OUT,30000);         nodeConfiguration.put(RegistrationRequest.PROXY_CLASS, ""org.openqa.grid.selenium.proxy.DefaultRemoteProxy"");         nodeConfiguration.put(RegistrationRequest.SELENIUM_PROTOCOL,""seleniumProtocol"");         nodeConfiguration.put(RegistrationRequest.MAX_SESSION, 1);         nodeConfiguration.put(RegistrationRequest.AUTO_REGISTER, true);         nodeConfiguration.put(RegistrationRequest.REGISTER_CYCLE, 5000);         nodeConfiguration.put(RegistrationRequest.HUB_PORT, 4444);         nodeConfiguration.put(RegistrationRequest.HUB_HOST,URL_);         nodeConfiguration.put(""remoteHost"", ""http://"" + URL_ + "":""+Sport);         nodeConfiguration.put(""url"", ""http://"" + URL_ + "":""+Sport);         nodeConfiguration.put(""role"", ""node"");         nodeConfiguration.put(""hub"", ""http://localhost:4444/grid/register"");           URL remoteURL = new URL(""http://"" + URL_ + "":""+Sport);         nodeConfiguration.put(RegistrationRequest.REMOTE_HOST, remoteURL.toExternalForm());          req.setConfiguration(nodeConfiguration);                  ChromeOptions capabilities2 =  new ChromeOptions() ;         capabilities2.setCapability(""deviceName"", deviceName);         capabilities2.setCapability(""browserName"", deviceName);         capabilities2.setCapability(""deviceId"", deviceId);         capabilities2.setCapability(""platform"", ""Android"");         capabilities2.setCapability(""version"", platformVersion);         capabilities2.setCapability(""maxInstances"", 1);         capabilities2.setCapability(""ensureCleanSession"", ""true"");         req.addDesiredCapability(DesiredCapabilities.chrome());         SelfRegisteringRemote remote = new SelfRegisteringRemote(req);         remote.setRemoteServer(new SeleniumServer(req.getConfiguration()));         remote.startRemoteServer();         remote.startRegistrationProcess();         Thread.currentThread().join();     } } `   **the console error message :**  ` java.net.BindException: Selenium is already running on port 4444. Or some other service is.  	at org.openqa.selenium.server.SeleniumServer.start(SeleniumServer.java:509) 	at org.openqa.selenium.server.SeleniumServer.boot(SeleniumServer.java:321) 	at org.openqa.grid.internal.utils.SelfRegisteringRemote.startRemoteServer(SelfRegisteringRemote.java:102) 	at Configuration.GridHub.main(GridHub.java:69) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124) 	at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59) 	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458) 	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222) 	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142) 	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:168) 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105) 	at org.testng.TestRunner.privateRun(TestRunner.java:648) 	at org.testng.TestRunner.run(TestRunner.java:505) 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:455) 	at org.testng.SuiteRunner.access$000(SuiteRunner.java:40) 	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489) 	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52) 	at java.util.concurrent.FutureTask.run(FutureTask.java:266) 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) 	at java.lang.Thread.run(Thread.java:745) `  `May 03, 2019 2:59:10 PM org.openqa.selenium.remote.DesiredCapabilities chrome INFO: Using `new ChromeOptions()` is preferred to `DesiredCapabilities.chrome()` 14:59:10.723 INFO - Using `new ChromeOptions()` is preferred to `DesiredCapabilities.chrome()` 14:59:10.726 INFO - Using `new EdgeOptions()` is preferred to `DesiredCapabilities.edge()` 14:59:10.726 INFO - Using `new OperaOptions()` is preferred to `DesiredCapabilities.operaBlink()` 14:59:10.726 INFO - Using `new SafariOptions()` is preferred to `DesiredCapabilities.safari()` 14:59:10.730 INFO - Using `new FirefoxOptions()` is preferred to `DesiredCapabilities.firefox()` 14:59:10.742 INFO - Using `new FirefoxOptions()` is preferred to `DesiredCapabilities.firefox()` 14:59:10.769 INFO - Driver provider org.openqa.selenium.ie.InternetExplorerDriver registration is skipped: registration capabilities Capabilities {browserName: internet explorer, ensureCleanSession: true, platform: WINDOWS, version: } does not match the current platform MAC 14:59:10.769 INFO - Driver provider org.openqa.selenium.edge.EdgeDriver registration is skipped: registration capabilities Capabilities {browserName: MicrosoftEdge, platform: WINDOWS, version: } does not match the current platform MAC 14:59:10.770 INFO - Driver class not found: com.opera.core.systems.OperaDriver 14:59:10.770 INFO - Driver provider com.opera.core.systems.OperaDriver is not registered 14:59:10.775 INFO - Driver class not found: org.openqa.selenium.htmlunit.HtmlUnitDriver 14:59:10.775 INFO - Driver provider org.openqa.selenium.htmlunit.HtmlUnitDriver is not registered ` **one of the nodeconfig file** `{   ""capabilities"":       [           {       ""deviceName"": ""SM_N9208"",       ""browserName"": ""SM_N9208"",       ""deviceId"": ""192.168.1.9:5556"",       ""platform"": ""Android"",       ""version"": ""7.0"",       ""maxInstances"": 1               }           ],   ""configuration"":   {     ""cleanUpCycle"": 2000,     ""timeout"": 30000,     ""browserTimeout"": 180,     ""proxy"": ""org.openqa.grid.selenium.proxy.DefaultRemoteProxy"",     ""url"": ""http://localhost:4956/wd/hub"",     ""hubProtocol"": ""http"",     ""maxSession"": 1,     ""register"": true,     ""registerCycle"": 5000,     ""hubPort"": 4444,     ""hubHost"": ""localhost""   } } ` TestNG file  `                                                                                                                                                                                                                     ` **Appium Console log**  `Test ignored. Driver Is Initiated [HTTP] --> GET /wd/hub/status [HTTP] {} [debug] [GENERIC] Calling AppiumDriver.getStatus() with args: [] [debug] [GENERIC] Responding to client with driver.getStatus() result: {""build"":{""version"":""1.12.1""}} [HTTP]  GET /wd/hub/status [HTTP] --> GET /wd/hub/status [HTTP] {} [HTTP] {} [debug] [GENERIC] Calling AppiumDriver.getStatus() with args: [] [debug] [GENERIC] Calling AppiumDriver.getStatus() with args: [] [debug] [GENERIC] Responding to client with driver.getStatus() result: {""build"":{""version"":""1.12.1""}} [debug] [GENERIC] Responding to client with driver.getStatus() result: {""build"":{""version"":""1.12.1""}} [HTTP]","closed","","amrsa1","2019-05-03T13:09:39Z","2019-08-14T12:09:39Z"
"","7332","[infra] Changes to display TravisCI badge in transition to travis-ci.com.","If visiting https://travis-ci.org/SeleniumHQ/selenium, the following message will be displayed.  ``` This repository was recently migrated to travis-ci.com and is now read-only. To view your current builds, please click here. ```  By changing from https://travis-ci.org to https://travis-ci.com, we have confirmed that you can still get a link to Travis CI's badge display and build list.   ----  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","RustyNail","2019-06-26T13:45:44Z","2019-06-27T03:22:26Z"
"","7716","Wrong Chrome Version Uploaded","If i download latest chromedriver version 78.0.3904.70 for linux i.e chromedriver_linux64.zip the link https://chromedriver.storage.googleapis.com/index.html?path=78.0.3904.70/ and checks its version after downloading chromedriver --versionme --version It shows ChromeDriver 76.0.3809.68 (420c9498db8ce8fcd190a954d51297672c1515d5-refs/branch-heads/3809@{#864})  76.0.3809.68 is older version uploaded to 78.0.3904.70 for linux.","closed","","saybinem","2019-10-26T11:14:33Z","2019-11-25T12:08:31Z"
"","7555","org.openqa.selenium.NoSuchWindowException: Unable to get browser in IE11","IE browser is loading with the URL https://www.google.com when I am trying to get the title of webpage I am facing this issue as mentioned below. I have restrictions to manually disable the protected mode settings in Security tab of IE browser. I have tried adding it through capabilities but of no use :(   Please let me know if any one has the resolution to the issue. As it is working fine in Chrome and Firefox browsers.   [RemoteTestNG] detected TestNG version 6.14.3 Started InternetExplorerDriver server (32-bit) 3.4.0.0 Listening on port 36551 Only local connections are allowed Sep 11, 2019 6:27:21 PM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: OSS FAILED: TestIE org.openqa.selenium.NoSuchWindowException: Unable to get browser (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 14 milliseconds Build info: version: '3.4.0', revision: 'unknown', time: 'unknown' System info: host: 'VDI-DD-E6864', ip: '10.4.172.151', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_191' Driver info: org.openqa.selenium.ie.InternetExplorerDriver Capabilities [{se:ieOptions={browserAttachTimeout=0.0, ie.enableFullPageScreenshot=true, enablePersistentHover=true, ie.forceCreateProcessApi=false, ie.forceShellWindowsApi=false, ignoreZoomSetting=false, ie.fileUploadDialogTimeout=3000.0, ie.useLegacyFileUploadDialogHandling=false, nativeEvents=true, ie.ensureCleanSession=false, elementScrollBehavior=0.0, ie.browserCommandLineSwitches=, requireWindowFocus=false, initialBrowserUrl=http://localhost:36551/, ignoreProtectedModeSettings=false, enableElementCacheCleanup=true}, browserName=internet explorer, pageLoadStrategy=normal, javascriptEnabled=true, version=11, platform=WINDOWS, unexpectedAlertBehaviour=dismiss}] Session ID: cc984abe-1aca-4dae-a964-0ce742939fc1 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source) 	at java.lang.reflect.Constructor.newInstance(Unknown Source) 	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:215) 	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:167) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:671) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:694) 	at org.openqa.selenium.remote.RemoteWebDriver.getTitle(RemoteWebDriver.java:368) 	at DemoPckg.TestDemo.TestIE(TestDemo.java:17) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) 	at java.lang.reflect.Method.invoke(Unknown Source) 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124) 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:583) 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719) 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989) 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125) 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109) 	at org.testng.TestRunner.privateRun(TestRunner.java:648) 	at org.testng.TestRunner.run(TestRunner.java:505) 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:455) 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450) 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415) 	at org.testng.SuiteRunner.run(SuiteRunner.java:364) 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84) 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208) 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1137) 	at org.testng.TestNG.runSuites(TestNG.java:1049) 	at org.testng.TestNG.run(TestNG.java:1017) 	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114) 	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251) 	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)   ===============================================     Default test     Tests run: 1, Failures: 1, Skips: 0 ===============================================   =============================================== Default suite Total tests run: 1, Failures: 1, Skips: 0 ===============================================","closed","","santu11454","2019-09-11T13:10:22Z","2019-10-30T16:45:10Z"
"","7543","[#Possible bug] Selenium Firefox not using preferences","I've posted this problem around and have gotten no fixes, users suggested it may be an issue with selenium.  I've been trying to use the preferences to download files without having to click OK , using the SaveToDisk functon. My code is below:      fprofile = webdriver.FirefoxProfile()     fprofile.set_preference(""browser.download.folderList"", 2)     fprofile.set_preference(""browser.download.manager.showWhenStarting"", False)     fprofile.set_preference(""browser.download.dir"", 'C:/Downloads/backups')       fprofile.set_preference(""browser.helperApps.neverAsk.saveToDisk"", ""attachment/x-tar"" + "",text/plain"")       options = Options()      (hash)options.add_argument('--headless')      driver = webdriver.Firefox(firefox_profile=fprofile, options=options)""  Headless is to be used once working, hence why it's commented out. (actual hash caused large)  Windows 10; Python 3.7; Pycharm if it matters","closed","R-awaiting answer,","Mozza7","2019-09-06T09:21:36Z","2019-11-07T14:07:48Z"
"","7696","How to switch to poped window that has confirm.","I've asked it on stackoverflow too.  https://stackoverflow.com/questions/58479143/how-to-switch-handle-to-popped-window-that-has-confirm-window  summary. 1) root.html click link  2) popup.html is opened and confirm window is opened at the same time  3) I need to accept confirm window but I can't switch to popped window.  root.html ```html            root window      function orderpay() {     var type = ""popup"";     document.orderpay.poptype.value = type;     paypop = window.open(""about:blank"", ""orderpay"", ""width=620,height=550, scrollbars=yes"").focus();     document.orderpay.submit();   }          ::popup window open::    ```  popup.html ```html            popup window    function showConfirm(){   confirm(""could you close me?"");   alert(""this is alert window."");  }   hello world   ```  test code ```kotlin class ConfirmWindowTest {     fun ifHasAlertClickOk(driver: WebDriver) {         try {             val alert = driver.switchTo().alert()             alert.accept()             sleep(1)         } catch (e: Exception) {             //e.printStackTrace()         }     }      @Test     fun closeConfirm() {         var driver: WebDriver         driver = ChromeDriver()         driver.get(""file:///{your file location}/root.html"")          //when this link click, popup.html will be opened         driver.findElements(By.tagName(""a"")).first().click()          //store root window handel         val root = driver.windowHandle          try {             val handles = driver.windowHandles.filter { it != root }.toList()             println(root)             println(handles)             handles.forEach {                 //I want to switch popup window and close confirm and alert but it doesn't work.                 driver.switchTo().window(it)                  ifHasAlertClickOk(driver)                  ifHasAlertClickOk(driver)                  println(""ok it works"")             }         } catch (e: Exception) {             e.printStackTrace()         } finally {             driver.switchTo().window(root)         }     } } ```","closed","","LeeMH","2019-10-21T06:23:30Z","2019-12-01T21:11:49Z"
"","7431","Node.js: Error reading broker pipe: The pipe has been ended","I'm writing a program to read what people types in Google Search, but error occured: `const {Builder, By, Key, until} = require('selenium-webdriver');`   `(async function example() {`  ` let driver = await new Builder().forBrowser('chrome').build();`   `try {     await driver.get('http://www.google.co.id/');     await driver.getTitle(); 	await driver.wait(driver.getTitle().then(function(title){console.log(title)}));     // await driver.findElement(By.name('q')).sendKeys('webdriver', Key.RETURN);     // await driver.wait(until.titleIs('webdriver - Google Search'), 10000);   }    catch(err){   	//    	console.log(err);   }   finally {     await driver.quit();   } })();`  and this error occured when i set timeout on wait() equal to or above 10000: ![image](https://user-images.githubusercontent.com/49324622/61853675-ad9d7780-aee6-11e9-8da9-2e5515b8970e.png) chrome can be opened, but it closes before typing on search box and results that error on my console. Any suggestions?","closed","","jonathanrsmjtk","2019-07-25T07:16:01Z","2019-08-24T16:09:34Z"
"","7319","geckodriver: JavascriptException: ReferenceError: a is not defined","I'm using selenium-java  to test some script into firefox. Env     selenium version:3.141.59     gecko version:0.24.0     firefox version:67.0.3     JDK:1.8     System : Win10 1809  here is the code :      System.setProperty(GeckoDriverService.GECKO_DRIVER_EXE_PROPERTY,""D:\\ProgramFiles\\Selenium\\geckodriver.exe"");     RemoteWebDriver driver = new FirefoxDriver();     driver.navigateTo(""https://www.baidu.com"");     driver.executeScript(""var a = 2;"", """");     driver.executeScript(""console.log(a*arguments[0])"", 5);  I expect this code to return the correct result : show '10' in firefox console , but selenium throw a JavascriptException: ReferenceError: a is not defined  I know firefox has a Marionette module after google this problem.  I do some changes like this:      FirefoxOptions options = new FirefoxOptions();     options.setLegacy(true);     driver = new FirefoxDriver(options);   Then , I get a org.openqa.selenium.WebDriverException: Timed out waiting 45 seconds for Firefox to start.  What can I do to solve this ""executeScript"" problem?   Here are twice logs : 1、within setLegacy:      1561342023188	mozrunner::runner	INFO	Running command: ""C:\\Program Files\\Mozilla Firefox\\firefox.exe"" ""-marionette"" ""-foreground"" ""-no-remote"" ""-profile"" ""C:\\Users\\**\\AppData\\Local\\Temp\\rust_mozprofile.NbGMaZlnbLo0""     JavaScript error: efl1ymfbwxv.cfg, line 2: ReferenceError: Components is not defined     1561342023796	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons     1561342023797	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/     1561342023797	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*     1561342027312	Marionette	INFO	Listening on port 6610     1561342027520	Marionette	WARN	TLS certificate errors will be ignored for this session     Jun 24, 2019 10:07:07 AM org.openqa.selenium.remote.ProtocolHandshake createSession     INFO: Detected dialect: W3C     Key:acceptInsecureCerts	Value:true     Key:browserName	Value:firefox     Key:browserVersion	Value:67.0.3     Key:javascriptEnabled	Value:true     Key:moz:accessibilityChecks	Value:false     Key:moz:buildID	Value:20190618025334     Key:moz:geckodriverVersion	Value:0.24.0     Key:moz:headless	Value:false     Key:moz:processID	Value:4216     Key:moz:profile	Value:C:\Users\**\AppData\Local\Temp\rust_mozprofile.NbGMaZlnbLo0     Key:moz:shutdownTimeout	Value:60000     Key:moz:useNonSpecCompliantPointerOrigin	Value:false     Key:moz:webdriverClick	Value:true     Key:pageLoadStrategy	Value:normal     Key:platform	Value:WINDOWS     Key:platformName	Value:WINDOWS     Key:platformVersion	Value:10.0     Key:rotatable	Value:false     Key:setWindowRect	Value:true     Key:strictFileInteractability	Value:false     Key:timeouts	Value:{implicit=0, pageLoad=300000, script=30000}     Key:unhandledPromptBehavior	Value:dismiss and notify     org.openqa.selenium.JavascriptException: ReferenceError: a is not defined     Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:48'     System info: host: 'DESKTOP-I03FV10', ip: '10.2.20.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_102'     Driver info: org.openqa.selenium.firefox.FirefoxDriver     Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 67.0.3, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20190618025334, moz:geckodriverVersion: 0.24.0, moz:headless: false, moz:processID: 4216, moz:profile: C:\Users\**\AppData..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, platformVersion: 10.0, rotatable: false, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}     Session ID: 1c7d0780-6eb9-42f7-83c3-69d33b233c3c         at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)         at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)         at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)         at java.lang.reflect.Constructor.newInstance(Unknown Source)         at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)         at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)         at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)         at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)         at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)         at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)         at org.openqa.selenium.remote.RemoteWebDriver.executeScript(RemoteWebDriver.java:489)         at com.jiuqi.rpa.web.test.FireFoxInjectScriptTest.main(FireFoxInjectScriptTest.java:19)  2、after setLegacy(true):      org.openqa.selenium.WebDriverException: Timed out waiting 45 seconds for Firefox to start.     Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:48'     System info: host: 'DESKTOP-I03FV10', ip: '10.2.20.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_102'     Driver info: driver.version: FirefoxDriver         at org.openqa.selenium.firefox.XpiDriverService.waitUntilAvailable(XpiDriverService.java:247)         at org.openqa.selenium.firefox.XpiDriverService.start(XpiDriverService.java:159)         at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:79)         at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)         at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)         at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:131)         at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:147)         at com.jiqui.rpa.lib.browser.WebBrowserLibary.open(WebBrowserLibary.java:81)         at com.jiuqi.rpa.web.test.FireFoxInjectScriptTest.main(FireFoxInjectScriptTest.java:12)     Caused by: org.openqa.selenium.net.UrlChecker$TimeoutException: Timed out waiting for [http://localhost:42482/hub/status] to be available after 45005 ms         at org.openqa.selenium.net.UrlChecker.waitUntilAvailable(UrlChecker.java:100)         at org.openqa.selenium.firefox.XpiDriverService.waitUntilAvailable(XpiDriverService.java:245)         ... 8 more     Caused by: java.util.concurrent.TimeoutException         at java.util.concurrent.FutureTask.get(Unknown Source)         at com.google.common.util.concurrent.SimpleTimeLimiter.callWithTimeout(SimpleTimeLimiter.java:156)         at org.openqa.selenium.net.UrlChecker.waitUntilAvailable(UrlChecker.java:75)         ... 9 more","closed","","Snowfish1994","2019-06-24T02:43:56Z","2019-08-14T07:09:49Z"
"","7068","Keep getting ""Failed to navigate to .... This usually means that a call to the COM method IWebBrowser2::Navigate2() failed.""","I'm using IE11 on Window Server 2012 r2. IEDriver version is 3.141.5 I did  setup per https://support.leapwork.com/hc/en-us/articles/115001195111-Configuration-required-for-running-tests-on-Internet-Explorer-IE- I'm keep getting ""Failed to navigate to .... This usually means that a call to the COM method IWebBrowser2::Navigate2() failed.""","closed","D-IE,","etoperman","2019-03-28T17:59:23Z","2019-08-14T11:09:34Z"
"","7368","Cookies duplication","I'm using Chrome Driver on a .NET application,  I create a new instance of ChromeDriver and adding a set of cookies to it.  During the session I get many ""Set-Cookie"" headers responses from the server.  When the server responds with a ""Set-Cookie"" most of the cookies just update their value as expected, but there are few cookies (always the same) that being duplicated with new values instead of updating the old value. How can I handle this situation?","closed","","ArnoldCell","2019-07-08T12:34:15Z","2019-08-14T06:09:48Z"
"","7789","Unable to navigate to url using chrome driver 78.0.3904.11 or 78.0.3904.70","I'm unable to navigate and take screenshots.  Chrome driver: 78.0.3904.11 and 78.0.3904.70 Chrome version: 78.0.3904.97   ChromeOptions options = new ChromeOptions();                 options.AddArguments(""window-size=1920x1080"");                 options.AddArguments(""headless"");                 options.AddArgument(""no-sandbox"");                 IWebDriver driver = new ChromeDriver(options);  driver.Navigate().GoToUrl(""https://www.google.com"");  Fails with ErrorType.FailToNavigate. It was working before not sure what's wrong now. Running this on windows 10 and windows server 2019. Fails both places.  Exception details: invalid argument   (Session info: chrome=78.0.3904.97)     at OpenQA.Selenium.Remote.RemoteWebDriver.UnpackAndThrowOnError(Response errorResponse)    at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)    at OpenQA.Selenium.Remote.RemoteWebDriver.set_Url(String value)    at OpenQA.Selenium.Remote.RemoteNavigator.GoToUrl(String url)","closed","R-awaiting answer,","kiranbhaga","2019-11-14T18:23:22Z","2020-01-25T22:59:10Z"
"","7581","Selenium Node[Windows server 2016] behind Reverse Proxy","I'm trying to use Selenium grid in open shift. I have created the nodes and hub in separate pods. I have exposed the hub service via a openshift route so that i can access the hub outside of the container. Now the challenge is to add a windows server outside of the containers to connect to the hub. I did manage to connect a windows 10 machine without issues[configured reverse proxy in IIS to rewrite the request for openshift route.]. Howver, for the windows server 2016, I was only able to get the status ""The node is registered to the hub and ready to use"" but after that the /grid/console spins forever only to throw 502/504 error. however i can still create the session for the chrome and firefox nodes which is running in openshift pods.    logs from the node: C:\Users\admin-sunilk\Desktop\grid>Title ""!!!DO NOT CLOSE!!! - This is a selenium node""  C:\Users\admin-sunilk\Desktop\grid>java -Dwebdriver.ie.driver=IEDriverServer.exe -Dwebdriver.chrome.driver=chromedriver.exe -jar selenium-server-standalone-3.141.59.jar -port 5555 -role node -hub http://localhost:80/grid/register/ -browser ""browserName=internet explorer,version=11,platform=WINDOWS,maxInstances=5"" -browser ""browserName=chrome,version=76.0,platform=WINDOWS,maxInstances=5"" 07:43:44.453 INFO [GridLauncherV3.parse] - Selenium server version: 3.141.59, revision: e82be7d358 07:43:44.531 INFO [GridLauncherV3.lambda$buildLaunchers$7] - Launching a Selenium Grid node on port 5555 2019-09-20 07:43:44.703:INFO::main: Logging initialized @478ms to org.seleniumhq.jetty9.util.log.StdErrLog 07:43:44.890 INFO [WebDriverServlet.] - Initialising WebDriverServlet 07:43:45.031 INFO [SeleniumServer.boot] - Selenium Server is up and running on port 5555 07:43:45.031 INFO [GridLauncherV3.lambda$buildLaunchers$7] - Selenium Grid node is up and ready to register to the hub 07:43:45.078 INFO [SelfRegisteringRemote$1.run] - Starting auto registration thread. Will try to register every 5000 ms. 07:43:45.343 INFO [SelfRegisteringRemote.registerToHub] - Registering the node to the hub: http://localhost:80/grid/register 07:43:45.359 INFO [SelfRegisteringRemote.registerToHub] - The node is registered to the hub and ready to use   logs from the hub:  05:36:26.645 INFO [DefaultGridRegistry.add] - Registered a node http://2.253.229.162:5555 --   | 05:40:51.088 INFO [DefaultRemoteProxy.onEvent] - Marking the node http://2.253.229.162:5555  as down: cannot reach the node for 2 tries   | 05:43:03.311 INFO [DefaultRemoteProxy.onEvent] - Unregistering the node http://2.253.229.162:5555  because it's been down for 132224 milliseconds   | 05:43:03.311 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://2.253.229.162:5555  Note: i have allowed the java via firewall as well. Still no luck. if i disconnect the node and once the session is flushed from the hub, the url /grid/console is working as usual.","closed","","sunilkarthy89","2019-09-20T05:47:54Z","2019-10-20T07:23:38Z"
"","7627","Status code 64 : Running Selenium without GUI","I'm trying to run Selenium in `Headless mode` in a Linux machine without GUI. The problem is that I'm getting a WebDriverException and I can't find anywhere what the `status code 64` means.  Does anyone know where to find the status code definitions ?  Code :  ```python from pyvirtualdisplay import Display from selenium import webdriver  display = Display(visible=0, size=(1024, 768)) display.start()  path = '/home/workspace/geckodriver' driver = webdriver.Firefox(executable_path=path, service_args=['--verbose', '--log-path=/tmp/firefox.log'])   # website testing functionality:  driver.get('https://python.org')  print(driver.title) ``` Error :  `WebDriverException: Message: Service /home/workspace/geckodriver unexpectedly exited. Status code was: 64`","closed","","ortizbje","2019-10-01T15:04:23Z","2019-10-31T17:07:42Z"
"","7563","Net::ReadTimeout: Net::ReadTimeout with #","I'm getting this exception very often when the server is pretty loaded:  ``` Net::ReadTimeout: Net::ReadTimeout with # 	/usr/lib/ruby/2.6.0/net/protocol.rb:217:in `rbuf_fill' 	/usr/lib/ruby/2.6.0/net/protocol.rb:191:in `readuntil' 	/usr/lib/ruby/2.6.0/net/protocol.rb:201:in `readline' 	/usr/lib/ruby/2.6.0/net/http/response.rb:40:in `read_status_line' 	/usr/lib/ruby/2.6.0/net/http/response.rb:29:in `read_new' 	/usr/lib/ruby/2.6.0/net/http.rb:1509:in `block in transport_request' 	/usr/lib/ruby/2.6.0/net/http.rb:1506:in `catch' 	/usr/lib/ruby/2.6.0/net/http.rb:1506:in `transport_request' 	/usr/lib/ruby/2.6.0/net/http.rb:1479:in `request' 	/var/lib/gems/2.6.0/gems/selenium-webdriver-3.142.3/lib/selenium/webdriver/remote/http/default.rb:129:in `response_for' 	/var/lib/gems/2.6.0/gems/selenium-webdriver-3.142.3/lib/selenium/webdriver/remote/http/default.rb:82:in `request' 	/var/lib/gems/2.6.0/gems/selenium-webdriver-3.142.3/lib/selenium/webdriver/remote/http/common.rb:64:in `call' 	/var/lib/gems/2.6.0/gems/selenium-webdriver-3.142.3/lib/selenium/webdriver/remote/bridge.rb:167:in `execute' 	/var/lib/gems/2.6.0/gems/selenium-webdriver-3.142.3/lib/selenium/webdriver/remote/w3c/bridge.rb:567:in `execute' 	/var/lib/gems/2.6.0/gems/selenium-webdriver-3.142.3/lib/selenium/webdriver/remote/w3c/bridge.rb:59:in `get' 	/var/lib/gems/2.6.0/gems/selenium-webdriver-3.142.3/lib/selenium/webdriver/common/navigation.rb:32:in `to' ```  It seems that it would make sense to catch `Net::ReadTimeout` and retry, just like you are catching similar exceptions, in `http/default.rb`.","closed","C-rb,","yegor256","2019-09-13T12:41:13Z","2020-01-07T14:30:18Z"
"","7168","Returning blank page on a specific website.","I'm getting a blank page when I try to open shops.coles.com.au.   When I try to open coles.com.au it works, but if I try to visit the subdomain it shows a blank page. Also, if I open websites like google.com it works.  An example when it returns a blank page:   >  > from selenium import webdriver > driver = webdriver.Firefox() > driver.get(https://shop.coles.com.au/a/a-national/everything/browse)  However this page is shown correctly: https://coles.com.au  ## Environment  OS: Linux Debian 9 Browser: Chrome, Firefox Browser version: Mozilla Firefox 60.6.1, Google Chrome 72.0.3626.119  Browser Driver version: ChromeDriver 73.0.3683.68 , GeckoDriver v0.24.0 Language Bindings version: python","closed","","nzaitseva","2019-05-03T21:07:24Z","2019-08-14T11:09:58Z"
"","7120","#dig method","I'm getting `.rvm/gems/ruby-2.4.5/gems/selenium-webdriver-3.141.5926/lib/selenium/webdriver/firefox/driver.rb:42:in 'dig': Selenium::WebDriver::Remote::Capabilities does not have #dig method (TypeError)` and have to replace `opts.dig(:desired_capabilities, :marionette)` with `opts[:desired_capabilities][:marionette]`","closed","C-rb,","sashamd","2019-04-19T17:06:28Z","2019-08-14T13:09:42Z"
"","7679","Connect to opened Chrome instance","I want to implement an auto log-in functionality and want to take advantage of the saved passwords in my default Chrome profile so that I don't need to supply passwords in plain-text. So I want to launch a Selenium driver with the default profile while also having another regular Chrome instance opened under the same profile for my usual browsing. Is there a way to achieve this?  I tried to set `user-data-dir=~/Library/Application Support/Google/Chrome/` for `webdriver.Chrome`, but I got the following error:  ``` selenium.common.exceptions.InvalidArgumentException: Message: invalid argument: user data directory is already in use, please specify a unique value for --user-data-dir argument, or don't use --user-data-dir ```  I guess it's because I already have an open Chrome instance with the same profile, but I need that for my usual browsing. I also tried starting my usual browsing instance on cmdline with `--remote-debugging-port={port}`, and connect from Selenium adding  ``` chrome_options.add_experimental_option(""debuggerAddress"", f""127.0.0.1:{port}"") ```  But I got the error  ``` selenium.common.exceptions.InvalidArgumentException: Message: invalid argument   (Session info: chrome=77.0.3865.120) ```","closed","","ZhaofengWu","2019-10-12T20:31:36Z","2019-11-30T19:09:38Z"
"","7311","HTML5 Drag and Drop issue with IE11.","I want to drag and drop and element and I have written below code. It is working for all the other browsers except IE11.  Here are the 2 methods are tried and none of them are working.  Action Class ``` Actions act = new Actions(driver);  act.dragAndDrop(sourceElement,targetElement).build().perform(); ``` Robot Class ``` Robot robot = new Robot();		   robot.mouseMove(sourceElement.getRect().getX(), sourceElement.getRect().getY()); robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);  Thread.sleep(4000); robot.mouseMove(targetElement.getRect().getX(), targetElement.getRect().getY()); robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK); ```  Is there any other way I can simulate drag and drop in IE11?","closed","D-IE,","cnparmar","2019-06-20T09:30:22Z","2019-10-03T21:09:39Z"
"","7809","Odd behavior noticed during UI tests with Selenium","I want to ask you about the odd behavior I noticed when running multiple tests, using Visual studio, Selenium web-driver and Chrome browser.  I have all the tests written as follows:  1. sign in to the web app 2. go to desired page 3. take action on this page 4. sign out of the web app  In the older version of the browser and web-driver I started multiple tests, if one of the tests failed on the desired page (test was logged in app), after the time has passed then test was terminated and web app has been automatically redirected to the login page. Another test, in order, could be logged in and continued.  But now, with the current version of the browser and web-driver, if one of the tests failed on the desired page, the test will remain logged in the app, and another test cannot be signed in, because the web app was not redirected to the login page.  Have you noticed the same behavior? What can I do about it, how to fix it?  Thank you in advance for your ideas and assistance.  Chrome 78.0.3904.108 Selenium WebDriver 3.141.0 ChromeDriver 78.0.3904.105","closed","","mariankral","2019-11-23T18:25:54Z","2019-12-23T20:47:43Z"
"","7325","Chromeprofiling works only in the second instance","I use the following code to load my chrome with default extensions.               System.setProperty(""webdriver.chrome.driver"", projectPath +""/driver/chromedriver.exe""); 		ChromeOptions options = new ChromeOptions(); 		options.addArguments(""user-data-dir=C:\\Users\\ssreenivasan\\AppData\\Local\\Google\\Chrome\\User Data""); 			options.addArguments(""--start-maximized""); 			options.addArguments(""disable-infobars""); 			DesiredCapabilities capabilities = DesiredCapabilities.chrome(); 			capabilities.setCapability(ChromeOptions.CAPABILITY, options); 			 driver=new ChromeDriver(capabilities); 		}  My first instance loads with extensions, but the website doesn't open. Keeping the first instance open, when I run the code second time, everything works perfectly(load chrome with extensions and code works). how to resolve that?  ## 💬 Questions and Help  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","xlco1","2019-06-24T17:47:25Z","2019-08-14T07:09:47Z"
"","7720","UnexpectedAlertPresentException: Alert Text: None","i use python3.6 + selenium 3.141.0  the android app has a webview base vue.js: 1. there is a button: ` prompt` 2. there is a div to show content: `` when i click the button, the android app will append div node to  through javascript. it will pop up div player at the top, and like this: ```              prompt                                                                          somecontent               `  now i click the button using selenium, and want to get the div node under  using driver.find_element_by_css_selector.  but it does not work, it shows:  `File ""D:\Miniconda3\envs\mypy36\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 598, in find_element_by_css_selector return self.find_element(by=By.CSS_SELECTOR, value=css_selector) File ""D:\Miniconda3\envs\mypy36\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 978, in find_element 'value': value})['value'] File ""D:\Miniconda3\envs\mypy36\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 321, in execute self.error_handler.check_response(response) File ""D:\Miniconda3\envs\mypy36\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 241, in check_response raise exception_class(message, screen, stacktrace, alert_text) selenium.common.exceptions.UnexpectedAlertPresentException: Alert Text: None Message: unexpected alert open (Session info: webview=) (Driver info: chromedriver=2.13.307647 (5a7d0541ebc58e69994a6fb2ed930f45261f3c29),platform=Windows NT 6.1 SP1 x86_64)`  what i have tried: 1. alert = driver.switch_to.alert when alert.accept() or alert.dismiss(), it shows  `unhandled inspector error: {""code"":-32603,""message"":""No JavaScript dialog to handle""} ` 2. when driver.switch_to.active_element or driver.switch_to.default_content(), it still shows `UnexpectedAlertPresentException: Alert Text: None`  3. WebDriverWait. i tried `WebDriverWait(driver,60000).until(EC.visibility_of_element_located((By.XPATH,'//div[@class=""container""]/div[@class=""content""]')))`, but it still shows `UnexpectedAlertPresentException: Alert Text: None`. and the wait time is more less than 60000.  4. if i click the button and let the div popup layer show, and then i can get what i want through driver.find_element_by_css_selector  it seems the popup div layer block the webdriver.  i donot know what to do.","closed","R-awaiting answer,","zhizunbao84","2019-10-29T12:46:20Z","2019-12-01T21:11:46Z"
"","7826","Multiple FindsBy don't work for block elements","I use C#, Selenium.WebDriver and Selenium.Support v3.141.0  I faced an issue related to using multiple FindsBy attributes.   I use PageFactory not only for pages but for block elements as well.  Page   ``` public class Page {         //base element for block element         [FindsBy(How = How.CssSelector, Using = "".popup.login"")]         protected IWebElement LoginPopupElement;         //block element         public LoginPopup LoginPopup => new LoginPopup(LoginPopupElement);         //constructor        public Page()         {             _driver = BrowserManager.ActiveBrowser();             RetryingElementLocator retryingElementLocator = new RetryingElementLocator(_driver, TimeSpan.FromSeconds(1));             PageFactory.InitElements(this, retryingElementLocator);         } ... ``` Block Element ```     public class LoginPopup     {          [FindsBy(How = How.CssSelector, Using = "".popupLogin"")]          [FindsBy(How = How.CssSelector, Using = ""#loginButton"")]         private IWebElement LoginButton { get; set; }          public LoginPopup(IWebElement element)         {             RetryingElementLocator retryingElementLocator = new RetryingElementLocator(_parentElement, TimeSpan.FromSeconds(1));             PageFactory.InitElements(this, retryingElementLocator);         } ``` **I expect that LoginButton will be found by second FindsBy conditions (css selector - #loginButton), but I see exception that WebDriver cannot found element because it use just first locator for searching.**  ``` Message: System.Reflection.TargetInvocationException : Exception has been thrown by the target of an invocation.   ----> OpenQA.Selenium.NoSuchElementException : no such element: Unable to locate element: {""method"":""css selector"",""selector"":"".popupLogin""}   (Session info: chrome=78.0.3904.97) ```  ``` Result StackTrace:	 at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)    at System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)    at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)    at OpenQA.Selenium.Support.PageObjects.WebDriverObjectProxy.InvokeMethod(IMethodCallMessage msg, Object representedValue)    at System.Runtime.Remoting.Proxies.RealProxy.PrivateInvoke(MessageData& msgData, Int32 type)    at OpenQA.Selenium.ISearchContext.FindElement(By by)    at OpenQA.Selenium.Support.PageObjects.RetryingElementLocator.LocateElement(IEnumerable`1 bys)    at OpenQA.Selenium.Support.PageObjects.WebElementProxy.get_Element()    at OpenQA.Selenium.Support.PageObjects.WebElementProxy.Invoke(IMessage msg)    at System.Runtime.Remoting.Proxies.RealProxy.PrivateInvoke(MessageData& msgData, Int32 type)    at OpenQA.Selenium.IWebElement.get_Text() ```  **Workaround:** I started to use list of WebElements  ```         [FindsBy(How = How.CssSelector, Using = "".popupLogin"")]          [FindsBy(How = How.CssSelector, Using = ""#loginButton"")]         private IList LoginButton; ``` and get first element of this list  `LoginButton[0].Text`","closed","","Seploid","2019-11-28T20:02:14Z","2020-01-04T22:45:33Z"
"","7218","[Firefox] OpenQA.Selenium.WebDriverException : The HTTP request to the remote WebDriver server for URL timed out","I tried to execute my code by using remote driver and environment is  > Selenium version 3.141 > Firefox 66.0.5 > Gecko driver 0.24  **Initialize Firefox Driver:** ``` FirefoxProfile firefoxProfile = new FirefoxProfile(""C:\Profiles\Firefox_TravelOPB""); JavaScriptError.AddExtension(firefoxProfile); firefoxProfile.SetPreference(""general.useragent.override"", GetUserAgent()); firefoxProfile.Clean(); firefoxProfile.DeleteAfterUse = true;  FirefoxOptions firefoxOption = new FirefoxOptions(); firefoxOption.Profile = firefoxProfile; firefoxOption.Proxy =  GetProxy();  driver = new RemoteWebDriver(new Uri(""http://127.0.0.1:4444/wd/hub""), firefoxOption); ```  **GetProxy function is below:**  ``` private Proxy GetProxy() {  string proxyText = Settings.Instance.GetBrowserProxy();  Proxy proxy = new Proxy {    HttpProxy = proxyText,    SslProxy = proxyText,    FtpProxy = proxyText,    SocksProxy = proxyText };  string noproxyText = Settings.Instance.GetBrowserNoProxy(); string browserName = Settings.Instance.GetBrowser().ToLower(); proxy.NoProxy = ""localhost, 127.0.0.1"" + (string.IsNullOrWhiteSpace(noproxyText) ? string.Empty : "", "" + noproxyText); return proxy; } ```  **But I found error message as a following:**  ``` OpenQA.Selenium.WebDriverException : The HTTP request to the remote WebDriver server for URL http://127.0.0.1:4444/wd/hub/session timed out after 60 seconds.   ----> System.Net.WebException : The operation has timed out    at OpenQA.Selenium.Remote.HttpCommandExecutor.MakeHttpRequest(HttpRequestInfo requestInfo)    at OpenQA.Selenium.Remote.HttpCommandExecutor.Execute(Command commandToExecute)    at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary 2 parameters)    at OpenQA.Selenium.Remote.RemoteWebDriver.StartSession(ICapabilities desiredCapabilities)    at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(ICommandExecutor commandExecutor, ICapabilities desiredCapabilities)    at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(Uri remoteAddress, ICapabilities desiredCapabilities) ```  **_Could you please suggest any solution to fix it?_**","closed","","meanthadar-p","2019-05-17T07:28:26Z","2019-08-14T10:09:48Z"
"","6959","Ask","I tried selenium on android for forgetting reason whatever it was create backup files or something in /tmp and my device storage losted why? `` https://youtu.be/SClyNqZRhgs ``","closed","","ulist","2019-02-21T20:41:16Z","2019-08-14T21:09:48Z"
"","7820","[rb] convert Bridge modules to subclasses","I think this simplifies things now that we've moved to the Drivers being subclassed. Is there any reason why we would want these Bridges to get extended as modules on `Remote::Bridge`?","closed","C-rb,","titusfortner","2019-11-28T02:24:56Z","2020-07-12T23:29:51Z"
"","6925","Fix typos in select.py","I spotted typo's in the documentation, traced back to the docstrings in this file.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6925)","closed","","dannystaple","2019-02-11T16:30:18Z","2019-02-11T20:37:31Z"
"","7242","Better JavaScript API Documentation","I spend 2 days trying to get this to work in a Docker container and finally figured things out.  [Under `Using the Builder API` section]( https://seleniumhq.github.io/selenium/docs/api/javascript/), it would be nice if you explained how to add chrome options. I also did not realized that addArguments was immutable, returning a new options reference. I only discovered this with `strace` and seeing that the arguments weren't passed through to the google-chrome command.  ```js var webdriver = require('selenium-webdriver'); var chrome = require('selenium-webdriver/chrome'); var browser = new webdriver.Builder()   .forBrowser('chrome')   .setChromeOptions(new chrome.Options().headless().addArguments(/* ... */))   .build() ```","closed","","ccorcos","2019-05-28T17:45:54Z","2019-08-14T09:10:03Z"
"","7593","WebDriverWait throwing null pointer exception with ChromeDriver v.77.0.3865.40","I recently updated chrome driver to use the latest release version 77.0.3865.40. I noticed that all my waits have started to throw a null pointer exception the second it runs this line:   	    wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(""header"")));  I did a bit of debugging and found that it specifically won't work for ExpectedConditions.visibilityOfElementLocated and a few other methods in the ExpectedConditions class. The only method that seemed to work was  ExpectedConditions.presenceOfElementLocated but I need to be able to check to see if that element is visible to the user and not just present in the markup.   Here's the code:   	public static void main(String args[]) { 		 		System.setProperty(""webdriver.chrome.driver"", ""C:\\Users\\bdqin\\Downloads\\chromedriver_win32_77_0_3865_40\\chromedriver.exe""); 		 		WebDriver driver = new ChromeDriver(); 		 		WebDriverWait wait = new WebDriverWait(driver, 20);  		driver.get(""https://my-site.com/""); 		 	       driver.manage().deleteAllCookies(); 	     	       wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(""header""))); 		 		 	}  Also to note I tried to do a work around for this by just implicitly waiting using this line below but even this doesn't seem to work properly either. It just ignores the timeout.   		    driver.manage().timeouts().implicitlyWait(seconds, TimeUnit.SECONDS);","closed","","dbaldwin103","2019-09-23T22:45:24Z","2019-11-09T08:07:54Z"
"","7466","Issue 7390 - Changing GetCommand to PostCommand for GetLog","I made this change, but I'm not expecting it to get merged yet--I need to learn how to build & test the dotnet bindings. Mainly I want to see if the build passes in lieu of being able to run locally.   - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-dotnet,","mmerrell","2019-08-05T00:28:40Z","2019-08-16T16:27:59Z"
"","7637","Can I start a web driver as service","I like to start a java thread to init the web driver,  then get the selenium script line by line from the soa remote request, and to run, is it possible? Thanks a lot!","closed","","aaronchen2k","2019-10-02T12:57:27Z","2019-11-01T15:07:43Z"
"","7280","Unable to Select (Materialize Drop down) using Selenium Web Driver in Python","I have tried different methods to select the materialize dropdown but none of them is working .  1 . select by Visible Text.  select_company = Select(driver.find_element_by_name(""companies"")) select_company.selectByVisibleText(""XYZ"") 2 . select by Index  Select(driver.find_element_by_tag_name(""select"")).select_by_index(2) 3. select by Value.  select_company = Select(driver.find_element_by_name(""companies"")) select_company.select_by_value(""XYZ"")","closed","","MujtabaBinKhalid","2019-06-11T11:35:19Z","2019-08-14T09:09:34Z"
"","7439","Moving automation tests from windows to Linux server","I have some tests, I am using  chrome Selenium Maven  I run them on windows and all thing are going fine with a successful run, I noticed that browser on windows is explicitly open and see the tests directly on the browser.  Then I need to move this to run it on UBUNTU server.  My questions: what are the main points we have to consider while moving our test from windows client environment to Linux server?  What are changes in code have to consider to run tests on the server? Or the same code should work fine on both environments?","closed","","hamzash9500","2019-07-28T11:27:08Z","2019-08-27T16:09:34Z"
"","7049","Unable to click on elements Selenium version 3.141.59","I have recently updated Selenium and ChromeDriver and now my automation fails to click on elements. I tried down grading Selenium and ChromeDriver to resolve  the issue but it didn't. I think it might have something to do with the version of Chrome I am using (73.0.3683.75). I haven't submitted a bug with Chrome yet as I want to see if there is a work around. I have tried adding a delay before the click and the javascriptexecutor and both do not work,  Since actions have been depreciated is there another way to perform the same behavior?","closed","","pranger8709","2019-03-20T14:30:48Z","2019-08-14T18:10:05Z"
"","7594","Inconsistent behavior of IE in WebdriverJS","I have multiple JavaScript tests created that use the chromedriver to run tests in Chrome and I now want to run the same tests IE. But its not working IE version is 11.0.9600 and IEdriver version is 3.14 Configuration done is as below: 1.Zoom is set to 100% 2. Protected Mode settings for each zone have the same value 3, window 7 ,selenium 3.14,ie 11 and 64 bit 4.capabilities added: 		base_capabilities = webdriver.Capabilities.ie();                 base_capabilities.set('ignoreProtectedModeSettings', true);                 base_capabilities.set('introduceFlakinessByIgnoringProtectedModeSettings', true);                 base_capabilities.set('ignoreZoomSetting', true);                 base_capabilities.set('requireWindowFocus', true);				                           behavior 1. Case 1: It launches local host only ex:-http://localhost:42884/(every time local host value is random ) This is the initial start page for the WebDriver server(ie screen ).After that it does not proceed. 2. Case 2: It launches the application url but does not proceed after that. WebDriverError: java.net.ConnectException: Connection refused: connect (node:8824) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 1): WebDriverError: java.net.ConnectException: Connection refused: connect (node:8824) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code. 3. Case 3: It launches the application URL and start typing username characters one by one.It is very slow while entering characters. After entering password it fails.  NOTE: all these scenarios are working fine in chrome and Firefox.","closed","","qankp","2019-09-24T08:18:19Z","2019-10-26T16:45:09Z"
"","7377","Add the possibility to nest By selectors.","I have found it useful to build new By selectors by composing/nesting other `By` selectors. I have added a generic method to that for all selector types, as well as a faster way of embedding CSS selectors inside each other (by simply appending the selector strings).  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-java,","danielthegray","2019-07-08T23:48:42Z","2021-01-24T20:38:58Z"
"","7034","Unable to switch back to main page after switching to the iframe once","I have an HTML structure like this: -  ```      Demo                           Hello World             Press me                                                               ``` I'm using selenium-webdriver with nodejs. I want to swtich to Iframe and type in the textarea and then want to go back to the div and press the button which is outside the iframe.  I'm able to switch back to the iframe by following code: -  ``` const frame = await driver.findElement(By.css('#iframe')); await driver.wait(until.ableToSwitchToFrame(frame)); const body = await driver.findElement(By.css('.body')); ```  Now I want to go back to the parent div and wanted to press the button but I won't be able to do that.  I have used this:  - ``` await driver.switchTo().defaultContent();``` And this ``` await driver.switchTo().parentFrame();```  But both didn't work. Can anyone help? @virenv @barancev    P.S: - I'm using node js selenium-webdriver package.","closed","","nitingupta220","2019-03-15T07:32:39Z","2019-08-14T17:10:03Z"
"","6862","webdriverJs attach to existing firefox session GET /session did not match a known command","I have a webDriverJS session started with an instance of chrome and firefox browers running i'm running the latest webdriveJS / GeckoDriver  Running from Chrome is fine when using seleniumSessionId   The return from GET sessions seems to work and if i call get session/cea42e5e9ec91ace194d54d4336810ab which is a Chrome session but when I pass a Firefox session i get the followin error:  curl GET http://16.100.206.160:4444/wd/hub/session/1d95ab9a-0a80-4492-8aba-16b9e27271bc --noproxy ""*""  curl: (6) Could not resolve host: GET {   ""state"": ""unknown command"",   ""sessionId"": null,   ""class"": ""org.openqa.selenium.remote.Response"",   ""value"": {     ""additionalInformation"": ""\nDriver info: driver.version: unknown"",     ""localizedMessage"": ""GET \u002fsession\u002f1d95ab9a-0a80-4492-8aba-16b9e27271bc did not match a known command\nBuild info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53'\nSystem info: host: 'DESKTOP-KP0NDTR', ip: '16.100.206.160', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181'\nDriver info: driver.version: unknown"",     ""supportUrl"": null,     ""systemInformation"": ""System info: host: 'DESKTOP-KP0NDTR', ip: '16.100.206.160', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181'"",     ""cause"": null,     ""stackTrace"": [       null,       null,       null,       null,       null,       null,       null,       null,       null,       null,       null,       null,       null,       null     ],     ""suppressed"": [     ],     ""message"": ""GET \u002fsession\u002f1d95ab9a-0a80-4492-8aba-16b9e27271bc did not match a known command\nBuild info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53'\nSystem info: host: 'DESKTOP-KP0NDTR', ip: '16.100.206.160', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181'\nDriver info: driver.version: unknown"",     ""class"": ""org.openqa.selenium.UnsupportedCommandException"",     ""buildInformation"": null   },   ""status"": 9 }  I validated the session is active:  `tfaron@dvm:~$ curl GET http://16.100.206.160:4444/wd/hub/sessions --noproxy ""*"" curl: (6) Could not resolve host: GET {   ""status"": 0,   ""value"": [     {       ""id"": ""cea42e5e9ec91ace194d54d4336810ab"",       ""capabilities"": {         ""acceptInsecureCerts"": false,         ""acceptSslCerts"": false,         ""applicationCacheEnabled"": false,         ""browserConnectionEnabled"": false,         ""browserName"": ""chrome"",         ""chrome"": {           ""chromedriverVersion"": ""2.45.615291 (ec3682e3c9061c10f26ea9e5cdcf3c53f3f74387)"",           ""userDataDir"": ""C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\scoped_dir6448_16862""         },         ""cssSelectorsEnabled"": true,         ""databaseEnabled"": false,         ""goog:chromeOptions"": {           ""debuggerAddress"": ""localhost:50579""         },         ""handlesAlerts"": true,         ""hasTouchScreen"": false,         ""javascriptEnabled"": true,         ""locationContextEnabled"": true,         ""mobileEmulationEnabled"": false,         ""nativeEvents"": true,         ""networkConnectionEnabled"": false,         ""pageLoadStrategy"": ""normal"",         ""platform"": ""Windows NT"",         ""proxy"": {         },         ""rotatable"": false,         ""setWindowRect"": true,         ""strictFileInteractability"": false,         ""takesHeapSnapshot"": true,         ""takesScreenshot"": true,         ""timeouts"": {           ""implicit"": 0,           ""pageLoad"": 300000,           ""script"": 30000         },         ""unexpectedAlertBehaviour"": ""ignore"",         ""version"": ""71.0.3578.98"",         ""webStorageEnabled"": true       }     },     {       ""id"": ""1d95ab9a-0a80-4492-8aba-16b9e27271bc"",       ""capabilities"": {         ""acceptInsecureCerts"": false,         ""browserName"": ""firefox"",         ""browserVersion"": ""60.0.2"",         ""moz:accessibilityChecks"": false,         ""moz:geckodriverVersion"": ""0.23.0"",         ""moz:headless"": false,         ""moz:processID"": 6220,         ""moz:profile"": ""C:\\Users\\Administrator\\AppData\\Local\\Temp\\rust_mozprofile.Q5twQXwXICW7"",         ""moz:useNonSpecCompliantPointerOrigin"": false,         ""moz:webdriverClick"": true,         ""pageLoadStrategy"": ""normal"",         ""platformName"": ""windows_nt"",         ""platformVersion"": ""10.0"",         ""rotatable"": false,         ""timeouts"": {           ""implicit"": 0,           ""pageLoad"": 300000,           ""script"": 30000         }       }     }   ]`   `[12:00:50] I/launcher - Running 1 instances of WebDriver [12:00:50] I/attachSession - Using the selenium server at http://127.0.0.1:4444/wd/hub [12:00:50] I/attachSession - Using session id - de052a07-b0bb-467c-bcdd-2b44ba62e423 [12:00:50] E/launcher - GET /session/de052a07-b0bb-467c-bcdd-2b44ba62e423 did not match a known command Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53' System info: host: 'DESKTOP-KP0NDTR', ip: '16.100.206.160', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181' Driver info: driver.version: unknown [12:00:50] E/launcher - UnsupportedOperationError: GET /session/de052a07-b0bb-467c-bcdd-2b44ba62e423 did not match a known command Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53' System info: host: 'DESKTOP-KP0NDTR', ip: '16.100.206.160', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181' Driver info: driver.version: unknown     at WebDriverError (C:\svt-web-client\projects\client-ng\node_modules\selenium-webdriver\lib\error.js:27:5)     at UnsupportedOperationError (C:\svt-web-client\projects\client-ng\node_modules\selenium-webdriver\lib\error.js:343:5)     at Object.checkLegacyResponse (C:\svt-web-client\projects\client-ng\node_modules\selenium-webdriver\lib\error.js:546:15)     at parseHttpResponse (C:\svt-web-client\projects\client-ng\node_modules\selenium-webdriver\lib\http.js:509:13)     at doSend.then.response (C:\svt-web-client\projects\client-ng\node_modules\selenium-webdriver\lib\http.js:441:30)     at process._tickCallback (internal/process/next_tick.js:109:7) From: Task: WebDriver.attachToSession()     at Function.attachToSession (C:\svt-web-client\projects\client-ng\node_modules\selenium-webdriver\lib\webdriver.js:695:24)     at AttachSession.getNewDriver (C:\svt-web-client\projects\client-ng\node_modules\protractor\built\driverProviders\attachSession.js:37:58)     at Runner.createBrowser (C:\svt-web-client\projects\client-ng\node_modules\protractor\built\runner.js:195:43)     at q.then.then (C:\svt-web-client\projects\client-ng\node_modules\protractor\built\runner.js:339:29)     at _fulfilled (C:\svt-web-client\projects\client-ng\node_modules\protractor\node_modules\q\q.js:834:54)     at self.promiseDispatch.done (C:\svt-web-client\projects\client-ng\node_modules\protractor\node_modules\q\q.js:863:30)     at Promise.promise.promiseDispatch (C:\svt-web-client\projects\client-ng\node_modules\protractor\node_modules\q\q.js:796:13)     at C:\svt-web-client\projects\client-ng\node_modules\protractor\node_modules\q\q.js:556:49     at runSingle (C:\svt-web-client\projects\client-ng\node_modules\protractor\node_modules\q\q.js:137:13)     at flush (C:\svt-web-client\projects\client-ng\node_modules\protractor\node_modules\q\q.js:125:13) [12:00:50] E/launcher - Process exited with error code 199 '  However if I run GET /session/firefoxId/url it returns me the URL from Firefox  So basically i can start a Firefox session via webDriverJs but cannot run protractor to connect to an existing session due to this GET failire","closed","","tfaron","2019-01-17T17:58:16Z","2019-08-14T23:10:01Z"
"","7173","Is there any way Selenium can tell if the element is 'visible' in the browser viewport?","I have a button which is displayed outside the view port of the Chrome browser.  ``` {Element (id = 0.4152299381787332-15)}     Coordinates: {OpenQA.Selenium.Remote.RemoteCoordinates}     Displayed: true     Enabled: true     Id: ""0.4152299381787332-15""     Location: {X = -40 Y = 60}     LocationOnScreenOnceScrolledIntoView: {X = -40 Y = 60}     Selected: false     Size: {Width = 40 Height = 40}     TagName: ""button""     Text: """"     WrappedDriver: {OpenQA.Selenium.Chrome.ChromeDriver} ```  The button ""starts"" -40 pixels on the left of the view port of the browser. Its width is 40, so the whole button is outside the view port. It seems like selenium has knowledge that OnceScrolledIntoView it still be 'off the screen' too.  Still it shows: ``` Displayed: true ```  Of course I am not able to 'click' on such element: ``` Click()' threw an exception of type 'OpenQA.Selenium.WebDriverException'     Data: {System.Collections.ListDictionaryInternal}     HResult: -2146233088     HelpLink: null     InnerException: null     Message: ""unknown error: Element is not clickable at point (-20, 80)\n  (Session info: chrome=74.0.3729.131)\n  (Driver info: chromedriver=2.41.578737 (49da6702b16031c40d63e5618de03a32ff6c197e),platform=Windows NT 10.0.16299 x86_64)""     Source: ""WebDriver""     StackTrace: ""   at OpenQA.Selenium.Remote.RemoteWebDriver.UnpackAndThrowOnError(Response errorResponse)\r\n   at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)\r\n   at OpenQA.Selenium.Remote.RemoteWebDriver.InternalExecute(String driverCommandToExecute, Dictionary`2 parameters)\r\n   at OpenQA.Selenium.Remote.RemoteWebElement.Execute(String commandToExecute, Dictionary`2 parameters)\r\n   at OpenQA.Selenium.Remote.RemoteWebElement.Click()""     TargetSite: {Void UnpackAndThrowOnError(OpenQA.Selenium.Remote.Response)} ```","closed","","mateusz-dobrowolny","2019-05-06T13:19:07Z","2019-08-14T11:09:59Z"
"","7178","[Ruby, 3.142.0] String does not have #dig method","I get the following error after upgrading to version `3.142.0` from `3.141.0`:  ``` TypeError:        String does not have #dig method      # ./features/build/tmp/jrubyExec/gems/selenium-webdriver-3.142.0/lib/selenium/webdriver/remote/response.rb:84:in `add_backtrace'      # ./features/build/tmp/jrubyExec/gems/selenium-webdriver-3.142.0/lib/selenium/webdriver/remote/response.rb:42:in `error'      # ./features/build/tmp/jrubyExec/gems/selenium-webdriver-3.142.0/lib/selenium/webdriver/remote/response.rb:72:in `assert_ok'      # ./features/build/tmp/jrubyExec/gems/selenium-webdriver-3.142.0/lib/selenium/webdriver/remote/response.rb:34:in `initialize'      # ./features/build/tmp/jrubyExec/gems/selenium-webdriver-3.142.0/lib/selenium/webdriver/remote/http/common.rb:88:in `create_response'      # ./features/build/tmp/jrubyExec/gems/selenium-webdriver-3.142.0/lib/selenium/webdriver/remote/http/default.rb:114:in `request'      # ./features/build/tmp/jrubyExec/gems/selenium-webdriver-3.142.0/lib/selenium/webdriver/remote/http/common.rb:64:in `call'      # ./features/build/tmp/jrubyExec/gems/selenium-webdriver-3.142.0/lib/selenium/webdriver/remote/bridge.rb:167:in `execute'      # ./features/build/tmp/jrubyExec/gems/selenium-webdriver-3.142.0/lib/selenium/webdriver/remote/oss/bridge.rb:587:in `execute'      # ./features/build/tmp/jrubyExec/gems/selenium-webdriver-3.142.0/lib/selenium/webdriver/remote/oss/bridge.rb:328:in `click_element'      # ./features/build/tmp/jrubyExec/gems/selenium-webdriver-3.142.0/lib/selenium/webdriver/common/element.rb:74:in `click'      # ./features/build/tmp/jrubyExec/gems/capybara-3.18.0/lib/capybara/selenium/node.rb:97:in `click'      # ./features/build/tmp/jrubyExec/gems/capybara-3.18.0/lib/capybara/node/element.rb:158:in `block in click'      # ./features/build/tmp/jrubyExec/gems/capybara-3.18.0/lib/capybara/node/base.rb:83:in `synchronize'      # ./features/build/tmp/jrubyExec/gems/capybara-3.18.0/lib/capybara/node/element.rb:158:in `click' ```  As you see, I'm using JRuby `9.2.7.0`, Capybara `3.18.0`, Selenium `3.142.0` and running with the legacy Firefox driver on Firefox version `47.0.2`.  This was working fine with Selenium `3.141.0`.  How can I help?  ## Environment  OS: Arch Linux Browser: Firefox Browser version: 47.0.2","closed","","boris-petrov","2019-05-07T06:25:41Z","2019-08-14T11:09:53Z"
"","7468","[java] fix swapped parameter names in devtools Response model class","I found this at #7415 and fix swapped parameter names.      - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","takeya0x86","2019-08-05T14:36:33Z","2019-09-10T14:30:37Z"
"","7717","Parse python docstring example as code snippet","I found that sphinx parses the original version like this: https://selenium-python.readthedocs.io/api.html#module-selenium.webdriver.support.wait  This fix will give a better hint to sphinx and perhaps other document generation tools.        - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-py,","pitachips","2019-10-27T11:28:36Z","2019-11-01T20:16:17Z"
"","7244","[py] Edge driver is not working","I followed the steps from this Wiki page (https://github.com/SeleniumHQ/selenium/wiki/Python-Bindings) to run python tests for Edge and received this error:   `E       AttributeError: 'WebDriver' object has no attribute 'service'`  Even after fixing the error, Edge still fails all python tests.    ## Last working Selenium version  Worked up to version:  Stopped working in version: (latest pull from master)  ## To Reproduce   Run the command:  `tox -e py27-edge -- test\selenium\webdriver\common\alerts_tests.py`  ## Expected behavior  All tests should pass.  ## Test script reproducing this issue (when applicable)  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS:  Windows 10 Browser:  Microsoft Edge Browser version:  Browser Driver version:  Language Bindings version:   Selenium Grid version (if applicable):","closed","","loly89","2019-05-28T23:51:13Z","2019-08-14T09:10:02Z"
"","7265","Init options","I don't like the current approach for initializing requiring undefined parameters as ""options"" which is already overloaded. I would like to deprecate it.  This might be overkill if we want to just allow anything in the constructor, but this also provides users with an `attr_accessor` if they want to add known supported things rather than using `#add_option` for it.  Also, IE takes a distinctly different approach because there is a map for most of the settings (e.g. `ignore_zoom_level: 'ignoreZoomSetting'`) that we iterate through. We could possibly implement something similar for these drivers, though.","closed","C-rb,","titusfortner","2019-06-05T21:50:09Z","2020-07-12T23:33:28Z"
"","7139","[C#] DefaultWait works with lambda expression but not with ExpectedConditions methods","I can't make DefaultWait to works with my custom ExpectedContidions method.  ``` public sealed class ExpectedConditions     {         public static Func WaitForReady(IElement element)         {             return x =>             {                 return element != null && element.Displayed && element.Enabled;             };         }     } ``` My DefaultWait looks like this:  ``` public static T WaitUntil(this ISeleniumDriver driver, Func condition, TimeSpan timeout)         {             var wait = new DefaultWait(driver)             {                 Timeout = timeout             };              wait.IgnoreExceptionTypes(new Type[] { typeof(NotFoundException) });              var result = wait.Until(condition);              if (default(T) == null)             {                 throw new Exception();             }              return result;         } ```  Everything works as expected when I use it like this:  `this.driver.WaitUntil(x => TuneSideNavigatioBar != null && TuneSideNavigatioBar.Displayed && TuneSideNavigatioBar.Enabled, TimeSpan.FromSeconds(10));`  But doesn't works in this way:  `this.driver.WaitUntil(ExpectedConditions.WaitForReady(TuneSideNavigatioBar), TimeSpan.FromSeconds(10));`  `TuneSideNavigatioBar` is `private IButton TuneSideNavigatioBar => driver.Find(By.XPath(""//button[@qaid='Sidebar-Tune']""));`  I get: `Message: OpenQA.Selenium.NoSuchElementException : no such element: Unable to locate element: {""method"":""xpath"",""selector"":""//*[@qaid='Sidebar-Tune']""}`  Please tell me what is difference to use lambda and methods when calling Default wait","closed","C-dotnet,","ghost","2019-04-25T12:45:36Z","2021-09-05T08:31:31Z"
"","7038","Configuring proxies Python3 + Chrome WebDriver","I can't connect using proxies using Selenium Chrome WebDriver on Python 3.7  1 - When using a proxy (adding -proxy-server=%s on chrome_options)  ``` def selenium_connect():     PROXY = ""66.97.38.58:80""     url = ""http://whatsmyip.org""     chrome_options = webdriver.ChromeOptions()     chrome_options.add_argument('--headless')     chrome_options.add_argument('--no-sandbox')     chrome_options.add_argument('--disable-dev-shm-usage')     chrome_options.add_argument('--proxy-server=%s' % PROXY)     driver = webdriver.Chrome(chrome_options=chrome_options)     driver.get(url)  ```  In this case I get an empty result.  2 - I have tried this alternative: How do you run headless chrome and a proxy using selenium in python?  ``` def selenium_connect():     PROXY = ""66.97.38.58:80""     url = ""http://whatsmyip.org""     chrome_options = webdriver.ChromeOptions()     chrome_options.add_argument('--headless')     chrome_options.add_argument('--no-sandbox')     chrome_options.add_argument('--disable-dev-shm-usage')      desired_caps = chrome_options.to_capabilities()     prox = Proxy()     prox.proxy_type = ProxyType.MANUAL     prox.http_proxy = PROXY     prox.add_to_capabilities(desired_caps)      driver = webdriver.Chrome(chrome_options=chrome_options, desired_capabilities=desired_caps)     driver.get(url)  ```  I this case, the connection is routed via my local ip and not the proxy's ip.  I'm using a standard ubuntu Docker environment, selenium-3.141.0, chromium-chromedriver 68.0","closed","","gerimo","2019-03-17T21:55:49Z","2019-08-14T18:09:57Z"
"","7463","Fixing typo in ByFriend(l)yLocator class name","I assume this was a typo, feel free to close if I'm wrong :)   - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-java,","mmerrell","2019-08-03T22:07:44Z","2019-08-05T15:03:42Z"
"","7590","Make a new release (Python, pypi)","I am using the selenium Python library from pypi. Due to #5296 I am forced to pin the version to 3.8.0, which is almost two years old.  That bug has however been fixed, so a new Python release to pypi would presumably work for us and others.  Is there a timeline for a new release?","closed","","PetterS","2019-09-23T13:57:53Z","2019-10-23T16:23:44Z"
"","7321","Failed to import atoms module ./atoms/get-attribute.js.","I am using selenium-webdriver in my testcases. They were executing fine until a new update (4.0.0-alpha.3) was rolled out for selenium-webdriver. I even tested the same on (4.0.0-alpha.4), however, the issue is still the same.  Please help me if possible ![Screenshot_2](https://user-images.githubusercontent.com/34648979/60017257-f541a100-96a5-11e9-90cc-dceb67c02303.png)","closed","C-nodejs,","Karangoyal25892","2019-06-24T12:00:33Z","2019-08-14T20:09:33Z"
"","7255","Selenium::WebDriver::Error::InvalidArgumentError file not found","I am using selenium(3) headless chrome with Capybara(2.18.0) I am trying to run a file upload spec(js: true) inside a Docker container, but I am getting  `Selenium::WebDriver::Error::InvalidArgumentError:  invalid argument: File not found : /home/app/webapp/spec/support/files/dummy.pdf  ![Screenshot from 2019-06-02 14-51-13](https://user-images.githubusercontent.com/20887144/58759243-8e1d4a80-8546-11e9-91b3-28e43fdb5a3c.png)    `","closed","","prativapokhrel","2019-06-02T09:11:37Z","2019-08-14T09:09:52Z"
"","7367","[SEVERE]: Timed out receiving message from renderer","I am using Google chrome headless with Selenium in maven following are the details  1) Google Chrome 75.0.3770.100 2) ChromeDriver 75.0.3770.90 3) Selenium 3.141.59  When I run ChromeDriver with following options  ``` ChromeOptions options = new ChromeOptions(); options.addArguments(""--headless""); driver = new ChromeDriver(options);	 driver.get(prop.getProperty(""url"")); driver.manage().window().maximize(); driver.manage().deleteAllCookies(); driver.manage().timeouts().pageLoadTimeout(30, TimeUnit.SECONDS); driver.manage().timeouts().implicitlyWait(20, TimeUnit.SECONDS); ```  It successfully executes all the test but also throws following error so this is not my worry `[1562587666.889][SEVERE]: bind() failed: Cannot assign requested address (99)` Although I have tried different suggestions but nothing seems working.   The real issue is when I set chrome windows size greater than 800,600 it stops working ``` ChromeOptions options = new ChromeOptions(); options.addArguments(""--headless"", ""--window-size=1920,1080""); ```  and start throwing the following error on each test `[SEVERE]: Timed out receiving message from renderer` and tests are not executed at all, remove the screen option and its working again.  This is driving me insane, I tried different combination of Chrome, ChromeDriver but no success, Kindly suggest something to resolve this.   Following is my Docker file  ``` FROM maven:3.6.1-jdk-8  # Google Chrome RUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \ 	&& echo ""deb http://dl.google.com/linux/chrome/deb/ stable main"" >> /etc/apt/sources.list.d/google-chrome.list \ 	&& apt-get update -qqy \ 	&& apt-get -qqy install google-chrome-stable \ 	&& rm /etc/apt/sources.list.d/google-chrome.list \ 	&& rm -rf /var/lib/apt/lists/* /var/cache/apt/* \ 	&& sed -i 's/""$HERE\/chrome""/""$HERE\/chrome"" --no-sandbox/g' /opt/google/chrome/google-chrome  # ChromeDriver RUN CHROME_VERSION=$(google-chrome --version | grep -Eo ""[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,4}"") \ 	&& CHROME_DRIVER_VERSION=$(curl https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_VERSION) \ 	&& wget --no-verbose -O /tmp/chromedriver_linux64.zip https://chromedriver.storage.googleapis.com/$CHROME_DRIVER_VERSION/chromedriver_linux64.zip \ 	&& rm -rf /opt/chromedriver \ 	&& unzip /tmp/chromedriver_linux64.zip -d /opt \ 	&& rm /tmp/chromedriver_linux64.zip \ 	&& mv /opt/chromedriver /opt/chromedriver-$CHROME_DRIVER_VERSION \ 	&& chmod 755 /opt/chromedriver-$CHROME_DRIVER_VERSION \ 	&& chmod +x /opt/chromedriver-$CHROME_DRIVER_VERSION \ 	&& ln -fs /opt/chromedriver-$CHROME_DRIVER_VERSION /usr/bin/chromedriver	 ```  Thanks","closed","","msameerbutt","2019-07-08T12:33:33Z","2019-08-14T06:09:47Z"
"","7341","Not able to login to Site using Selenium WebDriver","I am unable to log into a site under test with the Selenium WebDriver, but am not having any issues logging in when doing Manual login.  driver.Navigate().GoToUrl(this._baseURL + ""Account/Index""); var wait = new WebDriverWait(driver, TimeSpan.FromSeconds(30)); wait.Until(drv => drv.FindElement(By.Id(""element-on-next-page"")));  The login button calls the jQuery $.ajax method to POST data to a service, and is correctly going into the success() method. The service returns a redirect URL.   Reference:  https://stackoverflow.com/questions/54329793/cant-log-in-to-site-under-selenium-webdriver  Note : I have entered the credentials manually on the Selenium Opened browser but still no luck...any idea to resolve?  Thank you very much","closed","","araveeti","2019-06-28T16:04:49Z","2019-08-14T07:09:34Z"
"","7126","SessionNotCreatedError: Unable to create session error while launching Edge browser using Protractor","I am unable to launch edge browser session using Protractor.   **Below are the configuration details:**  OS : Windows 10 Version : 1809 Os build : 17763.437 Selenium version : 3.141.59 Protractor version : 5.4.2  **### Error log**  Unable to create session from {   ""desiredCapabilities"": {     ""browserName"": ""MicrosoftEdge""   },   ""capabilities"": {     ""firstMatch"": [       {         ""browserName"": ""MicrosoftEdge""       }     ]   } } Build info: version: '3.141.59' Driver info: driver.version: unknown [15:32:48] E/launcher - SessionNotCreatedError: Unable to create session from {   ""desiredCapabilities"": {     ""browserName"": ""MicrosoftEdge""   },   ""capabilities"": {     ""firstMatch"": [       {         ""browserName"": ""MicrosoftEdge""       }     ]   } } Build info: version: '3.141.59' Driver info: driver.version: unknown     at Object.checkLegacyResponse (user\node_modules\selenium-webdriver\lib\error.js:546:15)     at parseHttpResponse (user\node_modules\selenium-webdriver\lib\http.js:509:13)     at doSend.then.response (user\node_modules\selenium-webdriver\lib\http.js:441:30)     at      at process._tickCallback (internal/process/next_tick.js:188:7) From: Task: WebDriver.createSession()     at Function.createSession (user\node_modules\selenium-webdriver\lib\webdriver.js:769:24)     at createDriver (user\node_modules\selenium-webdriver\index.js:170:33)     at Builder.build (user\node_modules\selenium-webdriver\index.js:635:14)     at Hosted.getNewDriver (user\node_modules\protractor\built\driverProviders\driverProvider.js:53:33)     at Runner.createBrowser (user\node_modules\protractor\built\runner.js:195:43)     at q.then.then (user\node_modules\protractor\built\runner.js:339:29)     at _fulfilled (user\node_modules\q\q.js:834:54)     at self.promiseDispatch.done (user\node_modules\q\q.js:863:30)     at Promise.promise.promiseDispatch (user\node_modules\q\q.js:796:13)     at user\node_modules\q\q.js:556:49 [15:32:48] E/launcher - Process exited with error code 199    I tried adding MicrosoftWebDriver.exe file to C:\Windows\System32 folder but still got the same error.  Does anyone have work around or solution for this issue?","closed","","GalmaJ","2019-04-21T20:55:06Z","2019-08-14T13:09:48Z"
"","7001","Selenium Scripts is not getting parameters from App.Config file in NUnit Project","I am trying to use App.Config file to pass my Browser name and url to my test framework. I have used ConfigurationManager class to do so but still no luck in getting the values from config file. Here is the config file and code that i am using  **App Config :**   ![image](https://user-images.githubusercontent.com/47805449/53842503-d08cc500-3ff3-11e9-95bb-51dbf7dad1a5.png)    browsername =  ConfigurationManager.AppSettings[""BrowserName""];   Url = ConfigurationManager.AppSettings[""Url""];","closed","","ank1006","2019-03-05T22:37:49Z","2019-08-14T20:09:55Z"
"","7099","promise.ControlFlow is not a constructor","I am trying to understand the behavior of following code:  selenium/javascript/node/selenium-webdriver/example/parallel_flows.js  But I am getting error that `promise.ControlFlow is not a constructor`.  Am I missing something? Can anyone please guide me?  Thanking you","closed","","chauhansaurabhb","2019-04-12T13:56:56Z","2019-08-14T15:10:04Z"
"","6867","addArguments dont work","I am trying to open browser in useing debugger address but after using setExperimentalOptions no addArguments() dont work. Here is my code.. Anyone can help me?  String PROXY = ""104.248.166.226:3128"";         Proxy proxy = new Proxy();         proxy.setHttpProxy(PROXY)                 .setFtpProxy(PROXY)                 .setSslProxy(PROXY);         DesiredCapabilities capabilities = new DesiredCapabilities();         capabilities.setCapability(CapabilityType.PROXY, proxy);  //        WebDriver driver = new FirefoxDriver();         ChromeOptions options = new ChromeOptions();          options.addArguments(""start-maximized"");         options.addArguments(""--disable-images"");         options.addArguments(""user-agent=\""$1\"""");          Map prefs = new HashMap();         prefs.put(""profile.default_content_setting_values.images"", 2);         prefs.put(""profile.default_content_settings.popups"", 0);         prefs.put(""profile.default_content_settings.geolocation"", 2); //        options.setExperimentalOption(""prefs"", prefs);         options.setExperimentalOption(""debuggerAddress"", ""localhost:"" + port);          capabilities.setCapability(ChromeOptions.CAPABILITY, options);         driver = new ChromeDriver(capabilities); [New Text Document (2).txt](https://github.com/SeleniumHQ/selenium/files/2778759/New.Text.Document.2.txt)","closed","","IhChowdhury","2019-01-21T11:47:39Z","2019-08-14T23:09:54Z"
"","7407","Set focus to an input field in iOS/Safari","I am trying to automate tests on iOS 12.3.1 on Safari browser using RemoteWebDriver. I have a real device (iPad) and using Appium version 1.13.0. When I execute `element.SendKeys(""some text"")`, it's not triggering the character length validation. Then I tried using Actions (OpenQA.Selenium.Interactions.Actions) and figured out that, `Action.SendKeys(...)` trigger the character length validation if I can set focus into the input field. (When I set the focus manually, The iOS/iPad's keyboards get activated and comes to the screen and plus the cursor starts blicking inside the input element). I want to simulate the same behavior to send keys using actions.    I have tried so many options including `javascript .focus()` and nothing seems to work to get the focus to the input field. The element itself has autofocus attribute, but still no luck. Any advice?   Below is the element  ``  This is how I initialized the remote web driver  ``` case ""SafariOniOS"":     var iOSCaps = new DesiredCapabilities();     iOSCaps.SetCapability(""platformName"", ""iOS"");     iOSCaps.SetCapability(""platformVersion"", Settings.PlatformVersion);     iOSCaps.SetCapability(""browserName"", MobileBrowserType.Safari);     iOSCaps.SetCapability(""automationName"", ""XCUITest"");     iOSCaps.SetCapability(""udid"", Settings.DeviceId);     iOSCaps.SetCapability(""deviceName"", Settings.DeviceName);     iOSCaps.SetCapability(""xcodeOrgId"", Settings.AppleDeveloperTeamId);     iOSCaps.SetCapability(""xcodeSigningId"", ""iPhone Developer"");     iOSCaps.SetCapability(""newCommandTimeout"", 360);          var iOSCommandExecutor = new SomeCommandExecutorImpl(     	new Uri(Settings.RemoteServerAddress),     	Timeout.InfiniteTimeSpan)     {     	CommandsToIgnore = SomeCommandExecutor.CommandsToIgnoreForMobileWeb     };     return new RemoteWebDriver(iOSCommandExecutor, iOSCaps); ```","closed","","go-green","2019-07-19T00:53:23Z","2019-08-18T04:09:34Z"
"","7434","Unable to drag li tags from source list and drop to an empty target list using selenium","I am trying a drag users from one list to another list. The target list is empty. I want to drag the li tags to that empty list. This does not work in either chrome or firefox.  Sample html code to replicate the issue:  ```            Source                      Option1             Option2             Option3             Option4                        Target                            ``` I have tried selenium using draganddrop ,clickandHold along with moveToElement .  Using DragandDropMethod:  ``` WebElement source=By.xpath(""//div[@id='sourceDiv']//ul//li""); WebElement target=By.xpath(""//div[@id='targetDiv']//ul""); Actions actionBuilder = new Actions(driver); actionBuilder.dragAndDrop(source, target).build().perform(); ``` Using MoveToElement: ```  WebElement source=By.xpath(""//div[@id='sourceDiv']//ul//li"");     WebElement target=By.xpath(""//div[@id='targetDiv']//ul"");     Actions actionBuilder = new Actions(driver);     actionBuilder.clickAndHold(source).moveToElement(target).release().build().perform();   ``` Environment OS: Windows 7 Browser: Chrome Version:75.0.3770.142, Firefox Quantum Version:68.0.1 Browser Driver version: ChromeDriver  2.43.600210, GeckoDriver 0.23  Language Bindings version: Java 3.141.59","closed","C-java,","Shebeok","2019-07-26T08:36:45Z","2021-09-05T08:19:01Z"
"","6853","browser name Safari inconsistency","I am running tests through Selenium grid, using Selenium version 3.141.59.  To launch a Safari browser I use: ``` DesiredCapabilities capabilities = new DesiredCapabilities(); capabilities.setBrowserName(BrowserType.SAFARI); ... WebDriver driver = new RemoteWebDriver(new URL(""https://ondemand.saucelabs.com/wd/hub""), capabilities); ```  Note that `BrowserType.SAFARI` is defined as: ``` String SAFARI = ""safari""; ```  When I try to read this back I use: ``` ((RemoteWebDriver) driver).getCapabilities().getBrowserName(); ``` However this returns ""Safari"" with upper-case S.","closed","C-grid,","SiKing","2019-01-15T20:32:09Z","2020-05-20T21:29:02Z"
"","7213","ActionChains methods not working on Safari Browser","I am performing mouse hover operation on web element.  ActionChains(self.objDriver).move_to_element(obj_element) doesn't return any action   obj_element = WebDriverWait(self.objDriver, 10).until(exp_cond.visibility_of_element_located(locator_value)) act_hover = ActionChains(self.objDriver).move_to_element(obj_element) act_hover.perform()  or ActionChains(self.objDriver).click(obj_element).perform()  or self.objActionChains.context_click(obj_element)  ## Expected behavior Action chains methods should work  ## Environment  OS: MAC (Macos Sierra 10.12.6) Browser: Safari Browser version: 12.1 Selenium Grid version (if applicable): 3.141.59.jar Python: 3.6 Selenium: 3.141.0 ![mouse_hover](https://user-images.githubusercontent.com/36481052/57848906-9f045700-77f7-11e9-81f5-b15ee79293d3.png)","closed","","sajid90","2019-05-16T11:01:20Z","2022-01-26T00:09:47Z"
"","7372","org.openqa.selenium.InvalidArgumentException: invalid argument from invalid argument: 'origin' must be either a string or a dictionary","I am not sure if it is related, but since in Chrome was automatically updated in our company from version 74.x to 75.x I get this error when running the Selenium tests in a on-premises Selenium Grid:  ``` org.openqa.selenium.InvalidArgumentException: invalid argument from invalid argument: 'origin' must be either a string or a dictionary   (Session info: chrome=75.0.3770.100) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552) 	at org.openqa.selenium.remote.RemoteWebDriver.perform(RemoteWebDriver.java:618) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.base/java.lang.reflect.Method.invoke(Method.java:566) 	at com.sun.proxy.$Proxy28.perform(Unknown Source) 	at org.openqa.selenium.interactions.Actions$BuiltAction.perform(Actions.java:639) 	at org.openqa.selenium.interactions.Actions.perform(Actions.java:595) ```  It happens for instance when doing a double click or right click with the methods of org.openqa.selenium.interactions.Actions of Selenium.  I use the Chromedriver version 75.0.3770.90 because I have not found a Chromedriver which version matches exactly to our Chrome version.  When I use Chromedriver version 74.0.3729.6 then everything is okay when I run the tests against Chrome version 75.0.3770.100.  This error message originates from Chromedriver. But I am not sure why it is thrown and how to prevent it other than using an older Chromedriver version? Maybe it is a bug in Chromedriver? Or in Selenium?  Since I find no information about this issue on the internet I assume that it is not a general problem but occurs only in very rare conditions. You can try to reproduce it with Selenium version 3.141.59, Chrome 75.0.3770.100 and Chromedriver 75.0.3770.90 on Windows 10 by doing a double click on a WebElement.","closed","","tedrigofrach","2019-07-08T15:38:06Z","2019-08-14T06:09:45Z"
"","7017","Not able to login to the website using Alert.send_keys() in google chrome","I am not able to login to the site using Alert.send_keys() My System configuration: OS: Windows10 64bit Browser Version: 72.0.3 Selenium: 3.141 Python: 3.7 Chrome Driver: 72.0.3  Code tried:1 +++++++++++ browser = webdriver.Chrome() browser.get('http://10.179.230.232/desktop/')  alert = Alert(browser) alert.send_keys(""apc""+str(Keys.TAB)+""apc"") alert.accept() ++++++++ Code Tried: 2 ++++++++ browser = webdriver.Chrome() browser.get('http://10.179.230.232/desktop/')  Alert.send_keys(""apc"") browser.switch_to.alert() Alert.send_keys(""apc"") +++++++++ Error: Traceback (most recent call last): File ""C:/DataVerificationSQA/UITest/dceUITest.py"", line 47, in  alert.send_keys(""apc""+str(Keys.TAB)+""apc"") File ""C:\Program Files\Python37\lib\site-packages\selenium\webdriver\common\alert.py"", line 105, in send_keys self.driver.execute(Command.SET_ALERT_VALUE, {'text': keysToSend}) File ""C:\Program Files\Python37\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 321, in execute self.error_handler.check_response(response) File ""C:\Program Files\Python37\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 242, in check_response raise exception_class(message, screen, stacktrace) selenium.common.exceptions.NoAlertPresentException: Message: no such alert (Session info: chrome=72.0.3626.121) (Driver info: chromedriver=72.0.3626.69 (3c16f8a135abc0d4da2dff33804db79b849a7c38),platform=Windows NT 10.0.14393 x86_64)  __ git  Firefox is working fine. ++++++++++ browser = webdriver.Firefox() browser.get(r'http://10.179.230.232/desktop/') alert = Alert(browser) alert.send_keys(f'apc{Keys.TAB}apc') alert.accept() ++++++++++++  Please help me to solve this issue. Thanks","closed","R-awaiting answer,","arunkrh","2019-03-10T11:27:06Z","2019-08-14T17:09:46Z"
"","7016","Getting different behhaviour with @FindBy and by using driver.findElements","I am getting size of list as 3,even if I remove a element from the list when I am using @FindBy annotation.  When I execute my code without @FindBy annotation I am getting correct list size as 2.  List has following elements:[Instructor,course,price]  package com.practise.testSuite;  import java.util.ArrayList; import java.util.Collections; import java.util.List;  import org.apache.commons.collections.collection.UnmodifiableCollection; import org.openqa.selenium.By; import org.openqa.selenium.WebDriver; import org.openqa.selenium.WebElement; import org.openqa.selenium.chrome.ChromeDriver; import org.openqa.selenium.support.FindBy; import org.openqa.selenium.support.PageFactory;  import com.google.common.collect.ImmutableCollection;  public class TestClass {  	static WebDriver driver;  	@FindBy(xpath = ""//th"") 	public List columns;  	List columnNames = new ArrayList();  	public void initMethod() { 		PageFactory.initElements(driver, this); 	}  	public List getColumns() { 		if(columns.getClass().getName().contains(""UnmodifiableList"")){ 			System.out.println(""true""); 		} 		// output of below line = Initial columns list size 3 		System.out.println(""Initial columns list size "" + columns.size());  		for (int i = 0; i < columns.size(); i++) { 			System.out.println(columns.get(i).getText()); 			if (columns.get(i).getText().equals(""Instructor"")) 				columns.remove(i); 		} 		// output of below line = After modification column list size 3 		System.out.println(""After modification column list size "" + columns.size()); 		return columns; 	}  	public static void main(String[] args) { 		System.setProperty(""webdriver.chrome.driver"", ""F://chromedriver.exe""); 		driver = new ChromeDriver(); 		driver.get(""http://www.qaclickacademy.com/practice.php""); 		TestClass test = new TestClass(); 		test.initMethod(); 		test.getColumns(); 	}  }","closed","","spawar20","2019-03-09T15:46:11Z","2019-08-14T18:09:46Z"
"","7508","Fatal error: invalid session id","I am facing this issue while running the UI regression test. I have used Typescript for automation in selenium and I have around 80 test cases. So when executing all at once, it executes some of the test cases smoothly but after sometimes some test cases fail and this error is popped up. I am using only one thread for running these tests. `""noOfThreads"": ""1"",` There is no issue with the individual test cases as they work fine when running individually.","closed","","mohitgith","2019-08-21T06:46:28Z","2019-09-20T08:09:38Z"
"","6964","webdriver and asyncio","I am facing issues with selenium and asyncio. I am trying to run multiple instances of webdriver in the same loop. The first instance starts just file and goes to the required url. But the subsequent instances just open up a blank firefox windows . Can someone give me some hints into why this is happening ?","closed","","parthibd","2019-02-24T16:15:14Z","2019-08-14T21:09:47Z"
"","7844","Ctrl-a does not select all in Firefox contenteditable","I am expecting `SendKeys(Keys.Control + ""a"")` on a focused `contenteditable` `div` to select all the text. It works in Firefox for input fields, it works in chrome for both input/contenteditable but does nothing on firefox contenteditable divs. I have tried some of the myriad other ways to sendkeys with no luck.  - versions   - Firefox: 70.0.1   - gecko driver: 0.26.0 (e9783a644016 2019-10-10 13:38 +0000)   - Selenium.Firefox.WebDriver: 0.24.0   - Ubuntu 18.04  Here is sample unit test:  ``` csharp using System.Threading; using NUnit.Framework; using OpenQA.Selenium; using OpenQA.Selenium.Chrome; using OpenQA.Selenium.Firefox; using OpenQA.Selenium.Interactions;  namespace SeleniumTest {     [TestFixture]     public class FirefoxTest     {              [Test]         public void test_ctrl_a()         {             var driver = new FirefoxDriver(""/usr/bin"", new FirefoxOptions()); //            var driver = new ChromeDriver(""/usr/bin"", new ChromeOptions());                          driver.Navigate().GoToUrl(""file:///home/duncan/Desktop/test.html"");                          Thread.Sleep(3000);              var element = driver.FindElement(By.CssSelector(""#test""));                          new Actions(driver)                 .MoveToElement(element, 1, 1)                 .Click()                 .Perform();              // Works in chrome             driver.SwitchTo()                 .ActiveElement()                 .SendKeys(Keys.Control + ""a"");         }     } } ```  And a sample page:  ```html                                   This is a test                ```  You can change the `#test` id to switch between element types or switch to the chrome driver.","closed","","duncanawoods","2019-12-04T17:17:22Z","2020-01-04T20:39:04Z"
"","7841","SendKeys(Keys.ArrowRight) moves caret to end of contenteditable","I am expecting `SendKeys(Keys.ArrowRight)` on a focused `contenteditable` `div` to move the caret one character to the right. Instead, the caret moves to the of the text like pressing the end key.  - right arrow works as expected on input boxes - it used to work with contenteditable in previous versions (6 months ago, do not know versions) - event handlers report a right-arrow has been typed as expected - versions   - chrome: 78.0.3904.108   - chrome driver: 78.0.3904.105   - Selenium.Chrome.WebDriver: 77.0.0   - Ubuntu 18.04  Here is sample unit test:  ``` csharp using System.Threading; using NUnit.Framework; using OpenQA.Selenium; using OpenQA.Selenium.Chrome; using OpenQA.Selenium.Interactions;  namespace SeleniumTest {     [TestFixture]     public class MiniTest     {         [Test]         public void Test()         {             var driver = new ChromeDriver(""/usr/bin"", new ChromeOptions());                          driver.Navigate().GoToUrl(""file:///home/daw/Desktop/test.html"");                          Thread.Sleep(3000);              var element = driver.FindElement(By.CssSelector(""#test""));                          new Actions(driver)                 .MoveToElement(element, 1, 1)                 .Click()                 .Perform();                          driver.SwitchTo().ActiveElement().SendKeys(Keys.ArrowRight);         }     } } ```  And a sample page:  ```html                                   This is a test                ```  You can change the `#test` id to switch between element types.  Note, posted to stackoverflow first:  https://stackoverflow.com/questions/59161603/selenium-sendkeys-keys-arrowright-moves-to-end-of-contenteditable-text","closed","","duncanawoods","2019-12-03T22:08:07Z","2020-01-04T20:39:01Z"
"","7703","Cant get Full page screenshot","I am currently trying to return a full-page screenshot for all browsers we are testing but it returns only the viewport screen, interesting enough IE11 is working just fine.  1 - Would it be a browser capability issue with selenium? 2 - can we use a config in the takeScreenshot() to get the screenshot the way we need it (viewport view, full page...) ?  I am using NodeJs v10.15.1  and selenium-webdriver 4.0.0-alpha.5  Thanks","closed","","EFXPROMedia","2019-10-22T15:50:29Z","2019-12-05T17:24:36Z"
"","7241","Actions KeyDown modifier still active after test run","I am attempting to select and drag multiple items in a grid control and I am successfully doing so 50% of the time as the access modifier I'm using (whether this be Ctrl / Shift etc) is still active once the test is run.   So for example: actions.MoveToElement(RowInGrid).KeyDown(OpenQA.Selenium.Keys.Control).Click().KeyUp(OpenQA.Selenium.Keys.Control).Build().Perform();  Would result in the first test run failing and the next passing with the second test having the modifier still active as if the key press has not been undone.","closed","","ConorFox","2019-05-28T16:05:43Z","2019-08-14T10:09:34Z"
"","7823","""unable to send message to renderer"" using Selenium, Java, chrome","I am attempting to get Selenium working on a Windows 10 PC.  I'm running locally.  All attempts to run the script lead to **""Exception in thread ""main"" org.openqa.selenium.SessionNotCreatedException: session not created from disconnected: unable to send message to renderer""**  I was hoping that someone might have some fresh troubleshooting ideas for me.  I've already torn this down and rebuilt the set up a few times to end up with the same result.  (I've also tried a bunch of other things, but I don't want to confuse the example provided.)  **The set up steps followed:** https://www.guru99.com/installing-selenium-webdriver.html  **Expected:** The script running is expected to launch chrome, navigate to yahoo and close.    **What happens:** Chrome launches, ""data:,"" appears in the URL text box, and chrome closes with the error mentioned above.  So, it didn't navigate to yahoo and an unexpected error was received.  **Java seems fine from command line.** C:\Users\dougm>java -version java version ""1.8.0_231"" Java(TM) SE Runtime Environment (build 1.8.0_231-b11) Java HotSpot(TM) 64-Bit Server VM (build 25.231-b11, mixed mode)  **Chromedriver seems fine from command line.** C:\Users\dougm>chromedriver Starting ChromeDriver 78.0.3904.105 *** on port 9515 Only local connections are allowed. Please protect ports used by ChromeDriver and related test frameworks to prevent access by malicious code.  **The chrome driver is the latest for the version of chrome I have.** From selenium site. ""ChromeDriver 78.0.3904.105 Supports Chrome version 78 Includes the following change over version 78.0.3904.70: Fixed incorrect calculation of element coordinates For more details, please see the release notes.""  **The versions for the example in use are:** Starting ChromeDriver 78.0.3904.105 ... (Session info: chrome=78.0.3904.108) Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:48' System info: host: 'WINDOWS-1H1GR1Q', ip: '10.0.0.207', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '13.0.1' Driver info: driver.version: ChromeDriver  **The full error (script at end):** Starting ChromeDriver 78.0.3904.105 (60e2d8774a8151efa6a00b1f358371b1e0e07ee2-refs/branch-heads/3904@{#877}) on port 30991 Only local connections are allowed. Please protect ports used by ChromeDriver and related test frameworks to prevent access by malicious code. Exception in thread ""main"" org.openqa.selenium.SessionNotCreatedException: session not created from disconnected: unable to send message to renderer   (Session info: chrome=78.0.3904.108) Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:48' System info: host: 'WINDOWS-1H1GR1Q', ip: '10.0.0.207', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '13.0.1' Driver info: driver.version: ChromeDriver remote stacktrace: Backtrace: 	Ordinal0 [0x00C4A923+1550627] 	Ordinal0 [0x00BCA731+1025841] 	Ordinal0 [0x00B4C715+509717] 	Ordinal0 [0x00B43E80+474752] 	Ordinal0 [0x00B44135+475445] 	Ordinal0 [0x00B43BE5+474085] 	Ordinal0 [0x00B49DBE+499134] 	Ordinal0 [0x00B43B98+474008] 	Ordinal0 [0x00B4454B+476491] 	Ordinal0 [0x00B4401A+475162] 	Ordinal0 [0x00B44135+475445] 	Ordinal0 [0x00B43BE5+474085] 	Ordinal0 [0x00B4863D+493117] 	Ordinal0 [0x00B43B98+474008] 	Ordinal0 [0x00B4454B+476491] 	Ordinal0 [0x00B4401A+475162] 	Ordinal0 [0x00B44135+475445] 	Ordinal0 [0x00B43BE5+474085] 	Ordinal0 [0x00B47CF7+490743] 	Ordinal0 [0x00B43B98+474008] 	Ordinal0 [0x00B4454B+476491] 	Ordinal0 [0x00B4401A+475162] 	Ordinal0 [0x00B44135+475445] 	Ordinal0 [0x00B43BE5+474085] 	Ordinal0 [0x00B407DC+460764] 	Ordinal0 [0x00B43B98+474008] 	Ordinal0 [0x00B43A74+473716] 	Ordinal0 [0x00B4D360+512864] 	Ordinal0 [0x00AFB649+177737] 	Ordinal0 [0x00AFA8ED+174317] 	Ordinal0 [0x00AF8CDB+167131] 	Ordinal0 [0x00AE144A+70730] 	Ordinal0 [0x00AE24D0+74960] 	Ordinal0 [0x00AE2469+74857] 	Ordinal0 [0x00BE42F7+1131255] 	GetHandleVerifier [0x00CE711D+523789] 	GetHandleVerifier [0x00CE6EB0+523168] 	GetHandleVerifier [0x00CEE207+552695] 	GetHandleVerifier [0x00CE791A+525834] 	Ordinal0 [0x00BDB82C+1095724] 	Ordinal0 [0x00BE636B+1139563] 	Ordinal0 [0x00BE64D3+1139923] 	Ordinal0 [0x00BE5455+1135701] 	BaseThreadInitThunk [0x77000419+25] 	RtlGetAppContainerNamedObjectPath [0x77BA662D+237] 	RtlGetAppContainerNamedObjectPath [0x77BA65FD+189]  	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500) 	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481) 	at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62) 	at org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30) 	at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126) 	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) 	at java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958) 	at java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127) 	at java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502) 	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488) 	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) 	at java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150) 	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) 	at java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:131) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:181) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:168) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:123) 	at newSelenium.MyClass.main(MyClass.java:13)  **Script:** package newSelenium; import org.openqa.selenium.WebDriver; import org.openqa.selenium.chrome.ChromeDriver;  public class MyClass {  	 public static String driverPath = ""C:\\Users\\dougm\\Selenium\\""; 	 public static WebDriver driver; 	  		public static void main(String []args) { 			System.out.println(""launching chrome browser""); 			System.setProperty(""webdriver.chrome.driver"", driverPath+""chromedriver.exe""); 			driver = new ChromeDriver(); 			driver.navigate().to(""http://yahoo.com""); 			driver.close(); 		} 	 }","closed","","dougm123","2019-11-28T12:20:01Z","2019-12-29T11:17:29Z"
"","7287","[rb] Add missing verification in timeout_spec.rb","I added verification because there is no verification in one of the tests in timeout_spec.rb. Target test : `it 'should implicitly wait for a single element'`  Test passes have been verified with [Travis CI results](https://travis-ci.org/RustyNail/selenium/builds/545124587).   - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-rb,","RustyNail","2019-06-13T08:34:59Z","2019-06-14T03:11:31Z"
"","6997","Possibility to getMessage without additional info.","I added private static variable(**simpleGetMessage**) and public static set method(**setSimpleGetMessage(boolean)**) for that variable.   That variable is used in **getMessage()** -> **if simpleGetMessage == true** -> return only message of exception without addition info.   **Default value of simpleGetMessage is false.**   Those changes give the possibilitie to **getMessage()** without addition info. This apply for **_WebDriverException_** and every **class** which **extends WebDriverException** and don't **override getMessage()**. This is useful if you use a log and want to keep it short and clean.  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6997)","closed","C-java,","raul1ro","2019-03-05T15:57:24Z","2021-01-22T13:37:02Z"
"","7522","Question: I am not able to pass through this Initial Page for IE. ""This is the initial start page for the WebDriver server"" executes, navigates to app (google.com) and stucks here.","I  am not able to pass through this Initial Page for IE. ""This is the initial start page for the WebDriver server"" executes, navigates to app (google.com) and stucks here.   Configuration -  Java - 1.8.0_211 Browser - IE 11 Machine - Windows10 - (64 - Bit) IE Driver - Tried both 64-bit and 32 bit  IE Configuration - IE 64 bit Security Zones settings (Protected Mode Enables for all zones) Zoom - 100%  Can you provide urgent help ? Thanks in Advance.  My Code:  System.setProperty(""webdriver.ie.driver"", ""C:\\Selenium\\IEDriverServer.exe""); WebDriver driver = new InternetExplorerDriver(); driver.get(""https://www.google.com/""); driver.findElement(By.name(""btnK"")).click();  OUTPUT:  Started InternetExplorerDriver server (64-bit) 3.14.0.0 Listening on port 22703 Only local connections are allowed Aug 28, 2019 1:44:54 PM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: W3C Exception in thread ""main"" org.openqa.selenium.NoSuchWindowException: Currently focused window has been closed. Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z' System info: host: 'IN5CD5425F65', ip: '192.168.31.15', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_211' Driver info: org.openqa.selenium.ie.InternetExplorerDriver Capabilities {acceptInsecureCerts: false, browserName: internet explorer, browserVersion: 11, javascriptEnabled: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:ieOptions: {browserAttachTimeout: 0, elementScrollBehavior: 0, enablePersistentHover: true, ie.browserCommandLineSwitches: , ie.ensureCleanSession: false, ie.fileUploadDialogTimeout: 3000, ie.forceCreateProcessApi: false, ignoreProtectedModeSettings: false, ignoreZoomSetting: false, initialBrowserUrl: http://localhost:22703/, nativeEvents: true, requireWindowFocus: false}, setWindowRect: true, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}} Session ID: 29fa2164-69f3-4c18-9170-d80285b10fa6 *** Element info: {Using=name, value=btnK} 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548) 	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:322) 	at org.openqa.selenium.remote.RemoteWebDriver.findElementByName(RemoteWebDriver.java:400) 	at org.openqa.selenium.By$ByName.findElement(By.java:284) 	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:314) 	at DGPortal.sample3.main(sample3.java:21)","closed","","keerthib01","2019-08-28T08:21:27Z","2019-10-01T20:09:37Z"
"","7600","How to capture websocket messages from Selenium using some interval update?","How to capture websocket messages from Selenium using some interval update? Can you provide me with some example (Python/ Node.js) on how to do it?","closed","","ProgrammingLife","2019-09-25T13:38:32Z","2019-10-25T14:30:42Z"
"","7731","Not able to use RelativeLocator in page factory (@FindBy)?","How can we use RelativeLocator in page factory (@FindBy), please help me here to use below code in page factory  ``` driver.findElement(RelativeLocator.withTagName(""input"").above(By.name(""password"")).                 below(By.xpath(""//td//b[text()='sign-in here']""))); ```  Actually I want to use above code (RelativeLocator) in page factory, it's a new feature given by selenium4-alpha-3 version community, but I don't know how to use this in page factory. please see the below code of page factory, here we can use all the locators like name, cssSelector, xpath, id, className, linkText, etc. Same way how can we use Relative locator here:  ``` @FindBy(name=""uid"")  WebElement` userName; ```  I know it's normal uses, see the [Relative Locator video](https://www.youtube.com/watch?v=R7XOYM7ISRw) for your reference, I need help to use this new Relative locator in page factory with @FindBy annotation.","closed","","sachinguptait","2019-10-31T11:08:25Z","2019-11-30T18:09:36Z"
"","7727","How to use RelativeLocator in Page facory","How can i use RelativeLocator in page factory (@FindBy), please help me here  ``` driver.findElement(RelativeLocator.withTagName(""input"").above(By.name(""password"")). 				below(By.xpath(""//td//b[text()='sign-in here']""))); ```","closed","","sachinguptait","2019-10-30T18:52:33Z","2019-11-29T20:08:52Z"
"","7051","Sample fails","Hi, tried the sample here (https://www.seleniumhq.org/docs/03_webdriver.jsp#introducing-the-selenium-webdriver-api-by-example) but it reports that there is no element named 'q'.  I used the IE-Driver.  Thanks for helping  With best regards  Gerhard","closed","","GerhardKreuzer","2019-03-21T20:31:14Z","2019-08-14T18:09:55Z"
"","7532","Typo in wiki, link needs fixing in CONTRIBUTING.md","Hi, thank you for the project. I'm not quite sure where the best place to add this is  The wiki is uneditable, and I don't know the correct link (not familiar with the current state of the docs)  ## Wiki typo  https://github.com/SeleniumHQ/selenium/wiki/ChromeDriver#requirements  `C:\Users%USERNAME%\AppData\Local\Google\Chrome\Application\chrome.exe` -> `C:\Users\%USERNAME%\AppData\Local\Google\Chrome\Application\chrome.exe`  ## Broken link when referencing new documentation When trying to find the current CONTRIBUTION guideline / where to go as of Sept 1st 2019 there's a broken link here:   https://github.com/SeleniumHQ/selenium/blob/46abe36/CONTRIBUTING.md  > Contributions toward the new docs follow the same process described in the next section about code contributions. You should spend some time familiarising yourself with the documentation by reading more about it.  Link: https://seleniumhq.github.io/docs/intro.html#about_this_documentation  (Sorry this couldn't map cleanly to a pull request!)","closed","","tony","2019-09-01T19:34:50Z","2019-10-03T21:09:37Z"
"","6934","https://seleniumhq.herokuapp.com lapsed, was this intentional? claimed by me temporarily","Hi, I Pinged @shs96c on Linked in about this previously,  I was trying to chat about a few things on the slack channel for Selenium and quite a few online links directed me to:  `https://seleniumhq.herokuapp.com`   which the subdomain has lapsed.  Was this an intentional change for the selenium group?  I have claimed the heroku subdomain just to avoid a malicious actor from taking it until I find out if you don't really care about it anymore, or it was a genuine mistake.  Happy to return it for the latter of course!  Thanks","closed","C-infra,","symonk","2019-02-14T00:22:17Z","2019-08-14T20:10:02Z"
"","7794","[.Net] Fix WS message handler","Hi, I fixed how the DevTools WS protocol is handled in .Net implementation.  The original implementation was waiting for all requests to finish, and it causes faults when multiple requests sent to the driver. This implementation of the ProcessIncomingMessage returns a response when available.  The sad thing is that the fix was done on top of the #7576, which was cold for two months. My contract where I was using .Net selenium finished now; I am not able to wait longer.","closed","C-dotnet,","trejjam","2019-11-18T11:28:24Z","2020-01-11T00:13:02Z"
"","7805","Element does not exist in cache","Hi, i am executing a test in iOS Safari with appium and it show me this error:  Capabilities {autoGrantPermissions: true, automationName: XCuiTest, browserName: safari, databaseEnabled: false, deviceName: iPhone 7, dontStopAppOnReset: true, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: false, platform: MAC, platformName: ios, platformVersion: 12.2, takesScreenshot: true, udid: ..., webStorageEnabled: false} Session ID: c98d2fd2-8d05-4a81-b75f-6d9d73609bd7 *** Element info: {Using=xpath, value=//*[contains(text(),'El campo es de obligatorio diligenciamiento.')]} An unknown server-side error occurred while processing the command. Original error: Error: Remote debugger error with code 'undefined': StaleElementReferenceError: Element does not exist in cache Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03' System info: host: '', ip: '', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_202' Driver info: io.appium.java_client.AppiumDriver  someone knows why?  thaks","closed","","apulido15","2019-11-22T00:22:49Z","2019-12-22T08:56:08Z"
"","7047","Add multiline copy/past","Hi,  if its possible to add this feature  Thanks    ## 🚀 Feature Proposal  Allow to copy/paste some row to easily update scenarios using the same functions in different places.   ## Motivation  It's possible to do it using a code editor but i need to edit every ""id"" elements after. yesterday  i had to copy 96 lines in a lot of tests.","closed","C-ide,","adrien-ber","2019-03-20T11:07:29Z","2019-08-14T17:10:04Z"
"","6968","Click is not working properly in Chrome V 72","Hi,  I see my chrome version was upgraded to v72 last week.  Selenium Click () is not working properly for the menu items. For example,  If driver finds the parent class name (A)  , and then I click A, Click A is working. If I  use  parent A to find Child class name (B), and then I click B,  Click B is not working (no response) Using Actions class to handle click is not working either.  I downgraded Chrome from v72 to v71 or v70 and both clicks are working properly.  I have the confidence to say click is not working properly in Chrome v72.   Environment:  Selenium 2.45, Chrome v72: , Windows 10  Click is not working properly  Selenium 2.45, Chrome v71, Windows 10 :  Click is working properly   Thanks,  Ray","closed","","toraylin","2019-02-25T22:38:17Z","2019-08-14T21:09:40Z"
"","6861","Font family in at symbol (@) when using getAttribute","Hi, When we use getAttribute to get HTML5 validation message, if it contains at symbol (@) the font family makes difference.  Prints: ![image](https://user-images.githubusercontent.com/23129723/51317298-5baefd00-1a3e-11e9-8254-e8477de1e3c0.png)  ![image](https://user-images.githubusercontent.com/23129723/51318143-a29df200-1a40-11e9-9356-69eec3084fb2.png)  ![image](https://user-images.githubusercontent.com/23129723/51318168-b6495880-1a40-11e9-9a99-86770af7ab81.png)  ![image](https://user-images.githubusercontent.com/23129723/51318231-dda02580-1a40-11e9-891d-a07fbdd18909.png)","closed","A-needs decision,","hamiltonmarques","2019-01-17T12:18:44Z","2021-10-30T00:06:08Z"
"","7050","AttributeError: type object 'TestLoginModule' has no attribute 'test_login'","Hi, os:win10 tool:Pycharm python：anaconda 3.7  i have a problem that when i run the selenium script ,sometimes i will have below error: ![1553153736(1)](https://user-images.githubusercontent.com/33220071/54738426-35990b00-4bef-11e9-9f25-2dc3f9e4bd31.jpg)  and AttributeError: type object 'TestLoginModule' has no attribute 'test_login' the TestLoginModule is my class name ,the test_login is a function in it. the point is that error doesn't show everytime , sometimes it just go right ,but some times it just wrong . and i don't get the point why it get wrong when i just use the function in the script. thx for help.","closed","","loudDD","2019-03-21T07:41:27Z","2019-08-14T19:09:36Z"
"","7189","Here's GoToUri question","Hi, I come from china,here are some questions for you,I am a .net developer, I use driver.Navigate().GoToUrl to navigate the page,but sometimes it triggers timeout exception,the page is actually fully displayed,but the browser keeps going round and round, and i try catch the TimeoutExption and then I use  FindElement to check the page whether completed but it didn't work,I thought  the reason was the driver was synchronous , It that right? how can I deal with this proplem?I want to check that the page is completed with some judgment of my own,how can I do?","closed","","luowenjia1996","2019-05-09T02:14:30Z","2019-08-14T11:09:45Z"
"","7455","Actions.MoveToElement() using offset doesn't work in Chrome v76","Hi, I am using moveToElement command using offset.  But it drops element somewhere else.  The Selenium test case involves drag and drop action at xy location.  But element is getting dropped at wrong location  Environment: ChromeDriver Version -  76.0.3809.68 Chrome Browser Version - 76.0.3809.87 Selenium Jar Version - selenium-server-standalone-3.141.59  Sample Code  Sample Code Snippet    WebElement sourceElement = mySourceElement; Actions builder = new Actions(driver); Action dragAndDrop = builder.clickAndHold(sourceElement).build(); dragAndDrop.perform(); driver.switchTo().frame(iFrame); WebElement targetElement = myTargetElement; Thread.sleep(1000); dragAndDrop = builder.moveToElement(targetElement).release().build();   dragAndDrop.perform();","closed","C-java,","mahesh1632","2019-08-01T10:10:30Z","2019-08-31T18:09:35Z"
"","6961","Selenium Grid UI does not load JS and CSS files","Hi,  We have been using Selenium Grid in a docker container behind a HAPROXY , due to which the selenium has incorrect display or it is not able to load the css and js files -  ![image](https://user-images.githubusercontent.com/20640613/53220429-7eaa7d80-368a-11e9-8ae6-36c900f63e9b.png)  In the HAProxy we are enabiling the following directive:  -------------------------------------------------------------------------------------  http-response set-header X-Content-Type-Options nosniff  -------------------------------------------------------------------------------------  which triggers Strict Content-Type checking in Web Browsers, the web browser refuses to load the resources as css while the web server tells that it is text/plain.   Hence, Could you please add the proper content type to these files as this is blocking us. - - **consoleservlet.css** - **consoleservlet.js**  Thank you.","closed","R-awaiting answer,","harloveleenKaur","2019-02-22T04:48:29Z","2019-08-14T19:09:53Z"
"","7445","Black Screenshot with selenium-server-standalone-3.141.59.jar and IEDriverServer.exe 3.14.0","Hi,  Since I updated to selenium-server-standalone-3.141.59.jar and IEDriverServer.exe 3.14.0 I receive black screenshot.  Capabilities: DesiredCapabilities capabilities = new DesiredCapabilities(); capabilities.setBrowserName(BrowserType.IE); capabilities.setCapability(CapabilityType.SUPPORTS_JAVASCRIPT, true); capabilities.setCapability(CapabilityType.ACCEPT_SSL_CERTS, true); capabilities.setCapability(CapabilityType.SUPPORTS_ALERTS, true); capabilities.setCapability(CapabilityType.HAS_NATIVE_EVENTS, false); capabilities.setCapability(InternetExplorerDriver.UNEXPECTED_ALERT_BEHAVIOR, UnexpectedAlertBehaviour.IGNORE);               capabilities.setCapability(InternetExplorerDriver.INTRODUCE_FLAKINESS_BY_IGNORING_SECURITY_DOMAINS, true); capabilities.setCapability(InternetExplorerDriver.IE_ENSURE_CLEAN_SESSION, false); capabilities.setCapability(InternetExplorerDriver.ENABLE_ELEMENT_CACHE_CLEANUP, false); capabilities.setCapability(InternetExplorerDriver.REQUIRE_WINDOW_FOCUS, false); InternetExplorerOptions internetExplorerOptions = new InternetExplorerOptions(); internetExplorerOptions.merge(capabilities); internetExplorerOptions.setPageLoadStrategy(PageLoadStrategy.NORMAL); driver = new RemoteWebDriver(getHostUrl(), internetExplorerOptions);  Screenshot code: File source = driver.getScreenshotAs(OutputType.FILE);  Result: Screenshot is black. Works OK with Firefox and Chrome.  Can you please help me? Regards.","closed","","AntonStefanovLefterov","2019-07-29T07:45:14Z","2019-08-29T03:09:34Z"
"","7825","Getting org.openqa.selenium.WebDriverException: unknown error: cannot determine loading status","Hi,  Our Chrome browser recently updated to 78.0.3904.108 and after that automation tests are failing with exception _'org.openqa.selenium.WebDriverException: unknown error: cannot determine loading status from unknown error: unhandled inspector error: {""code"":-32000,""message"":""Inspected target navigated or closed""}'.  Below is the full error log  org.openqa.selenium.WebDriverException: unknown error: cannot determine loading status from unknown error: unhandled inspector error: {""code"":-32000,""message"":""Inspected target navigated or closed""}   (Session info: chrome=78.0.3904.108) Driver info: org.openqa.selenium.remote.RemoteWebDriver Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 78.0.3904.108, chrome: {chromedriverVersion: 78.0.3904.70 (edb9c9f3de024..., userDataDir: C:\Users\a2burns\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:54638}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore, webdriver.remote.sessionid: 363e59c2b4ae58141b27472bfe4...} Session ID: 363e59c2b4ae58141b27472bfe4eee38 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552) 	at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:277) 	at common.pageFactory.ConfigurationRegistry.getDriver(ConfigurationRegistry.java:162) 	at common.pageFactory.ConfigurationRegistry.getDriver(ConfigurationRegistry.java:52) 	at common.pageFactory.BaseTestSession.setUpBaseTestSession(BaseTestSession.java:59) 	at parallel.run.helpers.ParallelContext.setupParallelContext(ParallelContext.java:64) 	at stepDefinitions.StepsInit.setUp(StepsInit.java:22) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at cucumber.runtime.Utils$1.call(Utils.java:40) 	at cucumber.runtime.Timeout.timeout(Timeout.java:16) 	at cucumber.runtime.Utils.invoke(Utils.java:34) 	at cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60) 	at cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224) 	at cucumber.runtime.Runtime.runHooks(Runtime.java:212) 	at cucumber.runtime.Runtime.runBeforeHooks(Runtime.java:202) 	at cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:40) 	at cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165) 	at cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63) 	at cucumber.api.testng.AbstractTestNGCucumberTests.feature(AbstractTestNGCucumberTests.java:21) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86) 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643) 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820) 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128) 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129) 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112) 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) 	at java.lang.Thread.run(Thread.java:748)  Environment Details:  Windows Java version                       1.8.0_161 Chrome Version                 78.0.3904.108 Chromedriver Version       78.0.3904.70  Do I need to update my chrome driver to 78.0.3904.105?  Can someone help me here.  Thanks!","closed","","satyachalla4","2019-11-28T16:18:05Z","2019-12-29T11:17:32Z"
"","6879","Node to Hub connection question","Hi,  My Hub is reachable over public internet, while my Node is behind an internal network.  Node can reach Hub successfully, however Hub times out trying to register the Node using it's internal ip, which will of course will never work.  Is it possible to register a node which is not visible over public internet, without having to set up a VPN or NAT hole punching?","closed","","michaelgeorgeattard","2019-01-24T11:26:26Z","2019-08-14T22:09:39Z"
"","7642","RemoteWebDriver SendKeys using TouchActions","Hi,  I'm trying to send a string to an input tag, letter by letter, and all seems to work fine but there's a slight issue with the text entered.  Each time a letter in entered, it repeats the previous letters. Yes it's something really extrange.  ``` element = _remoteWebDriverMobile.FindElementById(""input""); touchActions = new TouchActions(_remoteWebDriverMobile); point = new Point(_random.Next(0, element.Size.Width), _random.Next(0, element.Size.Height)); touchActions.MoveToElement(element, point.X, point.Y)                                                     .Click()                                                     .Build()                                                     .Perform();  for (int idx = 0; idx < text_to_write.Length; idx++) {    String s = new StringBuilder().Append(text_to_write[idx]).ToString();    touchActions.SendKeys(s).Perform();    waitDriver = new WebDriverWait(_remoteWebDriverMobile,     TimeSpan.FromMilliseconds(RandomGaussiano.NextGaussian(_random, 150, 50)));    Console.WriteLine(""Text: "" + s); } ``` I just send each letter individually by a certain period of time.  So, if send this string ""tag protector"", the resulting text entered in the input is: ""tag protecttag protectotag protector"" and each time the result is different.  ![Captura](https://user-images.githubusercontent.com/39434545/66126888-c31bd580-e5ea-11e9-88c7-41594cd4cccd.JPG)  Using latest ChromeDriver. Using .NET c#.","closed","","apalabrados","2019-10-03T12:34:54Z","2019-11-02T16:07:41Z"
"","7601","Obtain the content of ""https://free-ss.site"" with selenium + python + firefox + geckodriver","Hi,  I want to obtain the content of ""https://free-ss.site"" with selenium + python + firefox + geckodriver.   I write the following code with python:   ``` import os  def get_path(path):     return os.path.abspath(os.path.expanduser(path))  firefox_binary=get_path(""~/software/mozilla.org/firefox_relative/firefox-68.0esr/firefox/firefox"") executable_path=get_path(""~/software/mozilla.org/geckodriver-v0.25.0-linux64/geckodriver"")  from selenium import webdriver browser = webdriver.Firefox(firefox_binary=firefox_binary, executable_path=executable_path) browser.get(""https://free-ss.site"") ```   But failed the get all of the contents on that website.     Any hints?","closed","","hongyi-zhao","2019-09-25T14:22:33Z","2019-10-25T16:30:42Z"
"","7309","Does not open the localhost link in latest Firefox","Hi,  I am using nunit console for test my ASP.NET Core web blazor application. But when run the local host of my application by using nunit I have faced the below issue like the localhost url is not open in latest firefox. Could you please update the details why Nunit does not support the latest version and work around for this issue.   ![image](https://user-images.githubusercontent.com/8706341/59263335-789ed380-8c5e-11e9-9eb4-10c9776ce899.png)   Note: Nunit is working in 43 version firefox. But blazor application is only running in latest version of firefox. So, could you please suggest me how can I run the nunit in latest firefox.  I am using the selenium for launch the localhost URL and I have given the testing assembly which is compiling by the below mentioned code as a parameter for the Nunit console exe. In below code I am using the Firebox browser which is supported only in 43 version. I have tried Chrome browser but localhost link is not open in that browser.  [TestFixture(""Firefox"")] [ImageComparison(true)] public class Test : NUnitUtil { private string activeBrowser; private string SampleURL = ""http://localhost:5000"";      public Test(string browser)     {         driver = GetWebDriverForBrowser(browser);         activeBrowser = browser;     }      [TestFixtureTearDown]     public void quitDriver()     {         driver.Quit();     }      [Test, Description(""Control rendering"")]     [Category(""Basic"")]     public void AngularCDNmaterial30()     {                  driver.Navigate().GoToUrl(SampleURL);         IWebElement element = driver.FindElement(By.TagName(""body""));         Thread.Sleep(15000);         TakeAndCompareScreenshot(element);     } }  Please suggest the solution for this  Thanks. Ganesan R.","closed","","ganesanviji","2019-06-20T05:07:31Z","2019-08-14T08:09:34Z"
"","7759","Selenium-side-runner problem","Hi,  can anyone help me with this problem:  ``` selenium-side-runner -c ""goog:chromeOptions.args=[--headless,--nogpu] browserName=chrome"" Wohnungsemail.side  info:    Running Wohnungsemail.side No tests found, exiting with code 1 Run with `--passWithNoTests` to exit with code 0 In /home/hannes/flathunter/selenium/side-suite-Wohnungsemail   3 files checked.   testMatch: {**/***/*.test.js,**/***.test.js} - 0 matches   testPathIgnorePatterns: /node_modules/ - 3 matches   testRegex:  - 0 matches Pattern:  - 0 matches  ```  I am running the selenium file from chrome Browser pwerfectly, but from Selenium-side-runner i only get this...  any idea?","closed","","pcace","2019-11-08T14:10:08Z","2019-12-08T14:36:43Z"
"","7336","Safari 13.0 is not compatible for mac-OS High Sierra  10.13.6","Hi,       I am using mac-OS High Sierra 10.13.6 and safari browser recently got upgraded to Safari 13.0,After that selenium scripts are not working properly,many of the objects using xpath locators like (text,contains text,using attribute values,placeholder etc ) are not identifying properly but mac OS chrome browser working fine.     Please support me, how to overcome this issue.","closed","","SundaresanUBP","2019-06-28T03:32:19Z","2019-08-14T07:09:36Z"
"","7549","Can't click an AJAX element using Selenium WebDriver !","Hi there, I have tried a lot to click an AJAX element but any of the methods not working;   1. Thread.sleep(2000); 		By cotainer = By.xpath(""//input[@value='View Details']""); 		WebDriverWait wait = new WebDriverWait(driver, 15); 		wait.until(ExpectedConditions.presenceOfElementLocated(cotainer)).click(); 2. WebElement myElement = new WebDriverWait(driver, 30).until(ExpectedConditions.elementToBeClickable( 												By.xpath(""//input[@value='View Details']"")));  3. WebDriverWait wait = new WebDriverWait(driver, 10); 		WebElement myEl = wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(""//input[@value='View Details']""))); 		myEl.click(); [page.txt](https://github.com/SeleniumHQ/selenium/files/3592113/page.txt)","closed","","msayem2018","2019-09-09T18:55:40Z","2019-10-09T19:09:39Z"
"","7116","Last version of IEDriverServer & Selenium compatible with Windows XP + IE 8?","Hi there,  I'm trying to run IEDriverServer & selenium on Windows XP + IE 8 (what an ancient version!:( ), but the recommended version(3.14.0) of IEDriverServer doesn't work with Windows XP.  Would you please help point out the appropriate version of IEDriverServer & selenium against windows XP + IE 8, and where can I download them?  Thanks in advance.","closed","","mingjin","2019-04-18T14:30:15Z","2019-08-14T13:09:59Z"
"","7333","net.serenitybdd.core.exceptions.SerenityManagedException: The following error occurred: sendKeysToActiveElement while doing Ctrl+click","Hi Team,  I am using webdrivermanager, version: '3.4.0' with chrome driver 75.0.3770.90 with chrome browser 75.0.3770.100.getting below error. it was working fine earlier with chrome browser 74.   net.serenitybdd.core.exceptions.SerenityManagedException: The following error occurred: sendKeysToActiveElement Build info: version: '3.11.0', revision: 'e59cfb3', time: '2018-03-11T20:26:55.152Z' System info: host: 'VI-LLPB0312V4', ip: '172.20.51.204', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_201' Driver info: driver.version: RemoteWebDriver 	at org.openqa.selenium.remote.http.AbstractHttpCommandCodec.encode(AbstractHttpCommandCodec.java:218) 	at org.openqa.selenium.remote.http.AbstractHttpCommandCodec.encode(AbstractHttpCommandCodec.java:117) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:152) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545) 	at org.openqa.selenium.remote.RemoteExecuteMethod.execute(RemoteExecuteMethod.java:35) 	at org.openqa.selenium.remote.RemoteKeyboard.pressKey(RemoteKeyboard.java:46) 	at org.openqa.selenium.interactions.KeyDownAction.perform(KeyDownAction.java:47) 	at org.openqa.selenium.interactions.CompositeAction.perform(CompositeAction.java:36) 	at org.openqa.selenium.interactions.Actions$BuiltAction.perform(Actions.java:641) 	at com.johnlewis.weeklyCashBalancing.pageobjects.LogoffPage.menuCRTLClick(LogoffPage.java:85) 	at com.johnlewis.weeklyCashBalancing.pageobjects.LogoffPage$$EnhancerByCGLIB$$3d9aae92.CGLIB$menuCRTLClick$0() 	at com.johnlewis.weeklyCashBalancing.pageobjects.LogoffPage$$EnhancerByCGLIB$$3d9aae92$$FastClassByCGLIB$$5ddc1c52.invoke() 	at net.sf.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228) 	at net.thucydides.core.steps.BaseMethodRunner.invokeMethod(BaseMethodRunner.java:10) 	at net.thucydides.core.steps.NormalMethodRunner.invokeMethodAndNotifyFailures(NormalMethodRunner.java:20) 	at net.thucydides.core.steps.StepInterceptor.runNormalMethod(StepInterceptor.java:361) 	at net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:132) 	at net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:68) 	at com.johnlewis.weeklyCashBalancing.pageobjects.LogoffPage$$EnhancerByCGLIB$$3d9aae92.menuCRTLClick() 	at com.johnlewis.weeklyCashBalancing.steps.LogoffPageSteps.menuCTRLClick(LogoffPageSteps.java:18) 	at com.johnlewis.weeklyCashBalancing.steps.LogoffPageSteps$$EnhancerByCGLIB$$3e085ab9.CGLIB$menuCTRLClick$1() 	at com.johnlewis.weeklyCashBalancing.steps.LogoffPageSteps$$EnhancerByCGLIB$$3e085ab9$$FastClassByCGLIB$$86031464.invoke() 	at net.sf.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228) 	at net.thucydides.core.steps.BaseMethodRunner.invokeMethod(BaseMethodRunner.java:10) 	at net.thucydides.core.steps.NormalMethodRunner.invokeMethodAndNotifyFailures(NormalMethodRunner.java:20) 	at net.thucydides.core.steps.StepInterceptor.runNormalMethod(StepInterceptor.java:361) 	at net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:132) 	at net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:68) 	at com.johnlewis.weeklyCashBalancing.steps.LogoffPageSteps$$EnhancerByCGLIB$$3e085ab9.menuCTRLClick() 	at com.johnlewis.weeklyCashBalancing.stepdefs.WCBStepDefination.userCLTRAndClickToOpenTheMenuInMultipleTab(WCBStepDefination.java:53) 	at ?.user press CLTR and click on to open the menu in multiple tab and Verify tital of page ""Enter Daily WCB Totals,Enter Other Tenders,View and Submit Weekly Totals,Maintain Registers and Sections,View Audit Trail,Submit Progress Tracker""(src/test/resources/features/LogoffWCB.feature:9)","closed","","mahesht36","2019-06-27T10:38:21Z","2019-08-14T07:09:37Z"
"","7548","How to Allow notification permission for desktop-notifications for Chrome Browser","Hi i have been trying to automate a page. And in one of the page it requires the user to grant permission for mic & cam. I have written the code for the same using the Chrom_Options() even then This dosn't help me in selecting the Allow permission automatically using the script.  Below is the code that I use and every time I need to manually click on the allow permission     button ``` from selenium.webdriver import Chrome from random import shuffle from time import sleep from moviepy.editor import VideoFileClip from selenium.common.exceptions import ElementClickInterceptedException import math from selenium.webdriver.chrome.options import Options  #To Enable the notification (Allow Microphone and Camera) option = Options()  option.add_argument(""--enable-infobars"") option.add_argument(""start-maximized"") option.add_argument(""--enable-extensions"")  # Pass the argument 1 to allow and 2 to block option.add_experimental_option(""prefs"", {     ""profile.default_content_setting_values.notifications"": 1 })  driver = Chrome(options=option, executable_path='/Users/downloads/chromedriver') driver.get('https://study.yupl.us/studies/5d5a64aa8b5bb92fb776753b?auth=false')  def GetVideoDuration(video_element):     val = VideoFileClip(video_element)     return val.duration  zip=[99524,90209] shuffle(zip)  #click Start Study sleep(5) try:     element = driver.find_element_by_xpath(""//button[text()='START STUDY']"")     driver.execute_script(""arguments[0].click();"", element) except ElementClickInterceptedException:     pass  #Enter the ZIP code try:     zipcode=driver.find_element_by_id('zipEntry_zipCode')     zipcode.send_keys(zip[0]) except ElementClickInterceptedException:     pass  #After entering Continue Button Click on Continue to Proceed try:     continuebutton=driver.find_element_by_xpath('//span[text()=""Continue""]')     driver.execute_script(""arguments[0].click();"", continuebutton) except ElementClickInterceptedException:     pass  #Get The video duration and wait for the video to completly play videoduration=0 try:     sleep(10)     questionvideo = driver.find_element_by_id('studyMediaVideo')     video = driver.execute_script(""return arguments[0].getAttribute('src')"", questionvideo)     videoduration = GetVideoDuration(video)     # Play the video     driver.execute_script(""arguments[0].click();"", questionvideo) except ElementClickInterceptedException:     pass   #wait till the video is completly played sleep(math.ceil(videoduration))  #Click on Answer Question try:     answer=driver.find_element_by_xpath('//button[text()=""ANSWER""]')     driver.execute_script(""arguments[0].click();"", answer) except ElementClickInterceptedException:     pass ```","closed","","srinisharma1","2019-09-08T07:39:48Z","2019-10-08T18:09:37Z"
"","7249","Dev tool profiler","Hi I have Added PR for DevTools Profiler . this tools can add better info on script behavior and Test coverage,          - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","D-chrome,","dratler","2019-05-29T19:58:58Z","2019-06-03T11:25:33Z"
"","7043","FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Users\\cursu\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\selenium-3.141.0-py3.7.egg\\selenium\\webdriver\\remote\\getAttribute.js'","Hi guys,  i got this error and i don't know why i got it. Full error is:    File ""Raport_FR_CH_Nata.py"", line 1, in      from selenium import webdriver   File ""C:\Users\cursu\AppData\Local\Programs\Python\Python37-32\lib\site-packages\selenium-3.141.0-py3.7.egg\selenium\webdriver\__init__.py"", line 18, in      from .firefox.webdriver import WebDriver as Firefox  # noqa   File ""C:\Users\cursu\AppData\Local\Programs\Python\Python37-32\lib\site-packages\selenium-3.141.0-py3.7.egg\selenium\webdriver\firefox\webdriver.py"", line 26, in      from selenium.webdriver.remote.webdriver import WebDriver as RemoteWebDriver   File ""C:\Users\cursu\AppData\Local\Programs\Python\Python37-32\lib\site-packages\selenium-3.141.0-py3.7.egg\selenium\webdriver\remote\webdriver.py"", line 26, in      from .webelement import WebElement   File ""C:\Users\cursu\AppData\Local\Programs\Python\Python37-32\lib\site-packages\selenium-3.141.0-py3.7.egg\selenium\webdriver\remote\webelement.py"", line 43, in      getAttribute_js = pkgutil.get_data(_pkg, 'getAttribute.js').decode('utf8')   File ""C:\Users\cursu\AppData\Local\Programs\Python\Python37-32\lib\pkgutil.py"", line 637, in get_data     return loader.get_data(resource_name)   File """", line 916, in get_data FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Users\\cursu\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\selenium-3.141.0-py3.7.egg\\selenium\\webdriver\\remote\\getAttribute.js'     ---Running Windows 10 with Python 3.7 selenium and urrlib.","closed","","ghost","2019-03-19T13:11:44Z","2019-08-14T19:09:41Z"
"","7256","Selinum WEbdriver test runner","Hi folks, I was new to selenium and I wrote all tests, now I want to run the test run and schedule the test run. How can I do this?","closed","","shibinmadassery","2019-06-03T06:32:04Z","2019-08-14T09:09:49Z"
"","7363","[Feature Request] IScrollableElement","Hi all.  As a developer who uses Selenium on a daily basis writing image capture SDK, I find it frustrating doing all that JavaScript execution in order to scroll pages and elements, and it's also inconsistent with Appium, which yields bugs.  So what I want to ask - is it possible to consider adding something like `IScrollableElement` interface that will allow scrolling an element without executing JavaScript? It would probably have methods like `ScrollTo(double x, double y)` and `ScrollBy(double x, double y)`, and also some methods/properties to get the current scroll position, and total available scroll size.  How much work do you think something like that will take? Would it require browser-side support?  Itai.","closed","I-stale,","itaibh","2019-07-05T15:44:53Z","2021-12-04T00:06:36Z"
"","7107","Selenium Click issue 3.10","Hi All,   We have automated Our project using Selenium 3.9.0.0/ IE 3.9  version. with IE 11   After we upgrade to Selenium and IE version > 3.9 , scripts are not clicking any elements ( If we use java script, its working fine. But normal click method is not working.)  Thanks Karthikeyan Sundaram","closed","","Karthiele","2019-04-16T10:27:13Z","2019-08-14T15:09:36Z"
"","7066","Can't Disable Logging","Hi all,  I've set my `logback.xml` file to this inside resources: ```              ```  I've even gone as far as to set these options: ```         Logger.getLogger(""org.openqa.selenium.remote"").setLevel(Level.OFF);         System.setProperty(""webdriver.chrome.silentLogging"", ""true"");         System.setProperty(""webdriver.chrome.verboseLogging"", ""false"");         System.setProperty(""webdriver.chrome.silentOutput"", ""true"");         LogFactory.getFactory().setAttribute(""org.apache.commons.logging.Log"", ""org.apache.commons.logging.impl.NoOpLog"");          ChromeOptions options = new ChromeOptions();         options.addArguments(""start-maximized""); // open Browser in maximized mode         options.addArguments(""disable-infobars""); // disabling infobars         options.addArguments(""--disable-extensions""); // disabling extensions         options.addArguments(""--disable-gpu""); // applicable to windows os only         options.addArguments(""--disable-dev-shm-usage""); // overcome limited resource problems         options.addArguments(""--no-sandbox""); // Bypass OS security model         options.addArguments(""--headless"");         options.addArguments(""--log-level=3""); ```  I still get messages log out when on linux: ``` Mar 28, 2019 1:34:13 PM org.openqa.selenium.remote.RemoteWebDriver log OFF: Executing: getPageSource [303423e93ed451ed4891f9ff9cb2a74e, getPageSource {}] ```  Thanks.","closed","R-awaiting answer,","heychazza","2019-03-28T17:40:52Z","2019-08-14T17:09:47Z"
"","7329","Google chrome dev toosl page domain","Hi @shs96c , here is  Page DevTools API with creation of right structure of models Ref: #6667 Major : 1. Page API 2. Create the following models debugger , dom , IO & Runtime 3. Add Page test  Minor 1. Add fromJson methods to some classes  Also this is on behalf of Intuit.  Cheers Dratler","closed","C-java,","dratler","2019-06-25T20:27:28Z","2020-03-10T05:45:45Z"
"","7345","Code review rejects","Hi @shs96c  here is Target PR rejects related to  #6667 1. Fix typo's 2. use Selenium Session 3. Fix tests  #behalfOf_Intuit","closed","C-java,","dratler","2019-06-29T19:31:55Z","2019-09-10T10:40:21Z"
"","7357","Google chrome dev tool fetch domain","Hi @shs96c  This is part of GCD #6667   Cheers Dratler       - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-java,","dratler","2019-07-03T19:40:18Z","2019-09-10T11:34:40Z"
"","7583","Selenium - JAVA","Hi ,  Im trying to automate mobile using appium. i have been caught under swipe down and swipe up.  Below is my code and i get error as ad cast to dr. Please help  				int ScreenWidth = dr.manage().window().getSize().getWidth(); 				int ScreenHeight = dr.manage().window().getSize().getHeight();  				int startx = ScreenWidth/2; 				int endx = ScreenWidth/2; 				int starty = ScreenHeight*6/7; 				int endy = ScreenHeight/7; 				 			 				dr.swipe(startx, starty, endx, endy);","closed","","Misbah19-ops","2019-09-20T07:49:44Z","2019-10-20T13:23:35Z"
"","7683","org.openqa.selenium.UnsupportedCommandException: POST /session/f2f6467d30e8890b9adde945446c2bda/element//click","Hi  When I use **standalone-chrome-debug** ,  UnsupportedCommandException occurred in my code  But if I use **standalone-chrome** (no debug version) , my code ran successfully with out any error   stack trace:  `org.openqa.selenium.UnsupportedCommandException: POST /session/f2f6467d30e8890b9adde945446c2bda/element//click        Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53' System info: host: '829a5f2ca5ba', ip: '172.17.0.2', os.name: 'Linux', os.arch: 'amd64', os.version: '4.9.0-8-amd64', java.version: '1.8.0_222' Driver info: driver.version: unknown 	at org.openqa.selenium.remote.http.AbstractHttpCommandCodec.decode(AbstractHttpCommandCodec.java:261) 	at org.openqa.selenium.remote.http.AbstractHttpCommandCodec.decode(AbstractHttpCommandCodec.java:117) 	at org.openqa.selenium.grid.session.remote.ProtocolConverter.handle(ProtocolConverter.java:74) 	at org.openqa.selenium.grid.session.remote.RemoteSession.execute(RemoteSession.java:129) 	at org.openqa.selenium.remote.server.WebDriverServlet.lambda$handle$0(WebDriverServlet.java:235) 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) 	at java.util.concurrent.FutureTask.run(FutureTask.java:266) 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) 	at java.lang.Thread.run(Thread.java:748)`  --------------------  I using docker to run chrome driver debug: `docker run -d -p 9510:4444 -p 5900:5900 -v /dev/shm:/dev/shm selenium/standalone-chrome-debug`  Or(when no error ): `docker run -d -p 9510:4444 -p 5900:5900 -v /dev/shm:/dev/shm selenium/standalone-chrome`","closed","R-awaiting answer,","ingen2","2019-10-14T14:27:09Z","2020-04-18T22:16:48Z"
"","7022","Failed to takeScreenshot in driver and element","Hi   Currently, I failed take screenshot in my target. so I need some help.  I develop selenium Test case.  my develop env.  PC : windows 10, chrome driver 2.36, nodeJS target : chromium 63 version  I connect my target with ""chrome.Driver.createSession"" (chromeOptions.options_['debuggerAddress'])  In this case,   1. driver.takeScreenshot()       - after call api, stop process,       - my target chromium develop say, chrome driver not supported this api          (https://chromium.googlesource.com/chromium/src/+/master/docs/chromedriver_status.md) 2. driver.findElement(webdriver.By.tagName('body')).takeScreenshot(false);      - error message occur.      - UnsupportedOperationError: unknown command: session/158573a92f5c1a400b8bf506d5c116c3/element/0.48810784510225513-2/screenshot  how to take screenshot in chrome debuggerAddress...???","closed","","pwsses","2019-03-12T11:27:57Z","2019-08-14T19:10:03Z"
"","7298","Is there any selenium method exist to replace bar code scanner simulation","Hi My application authorizes users with a tag which is nothing but the barcode so we authorize it with scanner machine. On analysis, I found that it simulates device control along with the actual data which on a textbox on the web application. Is there any selenium library exist to simulate the barcode functionality ?? I could use the zxing library here but my task is to pass the actual data (which I know ) along with the nonprintable characters ( which are the ASCII values ). I passed the data in the given format with sendkeys() method but it is not working as expected.  Has anybody worked on it before ? or can we surpass the scanner authentication with Java ?? Any help is much appreciated!!!!","closed","","RG108","2019-06-17T12:37:13Z","2019-08-14T08:09:49Z"
"","7055","Set the 'value' of an Element","Hi I have this nive element:   Now I have to change 'value', but there is no accessible function on the object I get back by searching .FindElement(By.Id(""ConsultationSearchForm:StartDate""))  With best regards  Gerhard","closed","","GerhardKreuzer","2019-03-24T13:44:33Z","2019-08-14T18:09:56Z"
"","7770","Issue with selenium UI tests performance in IE11","Hi I am facing significant performance issues while running UI tests in IE11. I am aware that IE11 is the slowest compared to other browsers. But the fact that a test that takes 5 mins in chrome is taking 60 mins in IE11 makes me wonder if there is something I can do to bridge the gap.  Things I am doing: 1. Using css selectors 2. Using 32 bit IE driver (3.14.0) in 64 bit windows server 2019 machine. Instantiating IE driver instance IE11 node by executing the command:  `java -Dwebdriver.ie.driver=""C:\Users\prate\Downloads\IEDriverServer.exe"" -jar selenium-server-standalone-3.141.59.jar -port 5555 -role node -hub http:///grid/register -browser ""browserName=internet explorer,version=11,platform=WINDOWS""`  3. I read that the two most expensive methods are getText() and isDisplayed() so they should be used very little. I admit to using them a lot. I tried to replace getText with something like `document.querySelector('.RichEditor-editor').innerText` but didn’t see much improvement in performance.  4. The capabilities object which is being used:   capabilities: [     {       browserName: 'internet explorer',       platformName: 'WINDOWS',       logLevel: debug,       'se:ieOptions': {         'ie.ensureCleanSession': true,         'ie.requireWindowFocus': true,         'ie.enablePersistentHover': false,         'ie.nativeEvents': false,         ignoreZoomSetting: true,         ignoreProtectedModeSettings: true       }     }   ]  I am using webdriverio framework. Is there any thing else I can try to somewhat speed up my tests?","closed","D-IE,","pk-saxena","2019-11-11T15:43:19Z","2020-01-05T23:00:52Z"
"","7229","Selenium Grid, with Java - Not able to Get Node details from 'http://host:port/grid/api/testsession?session=sessionid' api","Hi  When trying to get the Node Details, from the Hub Session (SessionId sid = remoteWebDriver.getSessionId()), using the end point - http://host:port/grid/api/testsession?session=sessionid, it is giving back the response -                          Error 500 Server Error                   HTTP ERROR 500         Problem accessing /grid/api/testsession. Reason:                  Server Error                  Caused by:         org.openqa.selenium.json.JsonException: Expected to read a START_MAP but instead have: END. Last 0 characters read:  Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:13:22.693Z' System info: host: 'TVMATP1004064L', ip: '10.155.81.140', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.2' Driver info: driver.version: unknown 	at org.openqa.selenium.json.JsonInput.expect(JsonInput.java:289) 	at org.openqa.selenium.json.JsonInput.beginObject(JsonInput.java:219) 	at org.openqa.selenium.json.MapCoercer.lambda$apply$1(MapCoercer.java:64) 	at org.openqa.selenium.json.JsonTypeCoercer.lambda$null$6(JsonTypeCoercer.java:142) 	at org.openqa.selenium.json.JsonTypeCoercer.coerce(JsonTypeCoercer.java:123) 	at org.openqa.selenium.json.JsonInput.read(JsonInput.java:279) 	at org.openqa.grid.web.servlet.TestSessionStatusServlet.doPost(TestSessionStatusServlet.java:73) 	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707) 	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790) 	at org.seleniumhq.jetty9.servlet.ServletHolder.handle(ServletHolder.java:860) 	at org.seleniumhq.jetty9.servlet.ServletHandler.doHandle(ServletHandler.java:535) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:143) 	at org.seleniumhq.jetty9.security.SecurityHandler.handle(SecurityHandler.java:548) 	at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:190) 	at org.seleniumhq.jetty9.server.session.SessionHandler.doHandle(SessionHandler.java:1595) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:188) 	at org.seleniumhq.jetty9.server.handler.ContextHandler.doHandle(ContextHandler.java:1253) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:168) 	at org.seleniumhq.jetty9.servlet.ServletHandler.doScope(ServletHandler.java:473) 	at org.seleniumhq.jetty9.server.session.SessionHandler.doScope(SessionHandler.java:1564) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:166) 	at org.seleniumhq.jetty9.server.handler.ContextHandler.doScope(ContextHandler.java:1155) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:141) 	at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132) 	at org.seleniumhq.jetty9.server.Server.handle(Server.java:530) 	at org.seleniumhq.jetty9.server.HttpChannel.handle(HttpChannel.java:347) 	at org.seleniumhq.jetty9.server.HttpConnection.onFillable(HttpConnection.java:256) 	at org.seleniumhq.jetty9.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:279) 	at org.seleniumhq.jetty9.io.FillInterest.fillable(FillInterest.java:102) 	at org.seleniumhq.jetty9.io.ChannelEndPoint$2.run(ChannelEndPoint.java:124) 	at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:247) 	at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.produce(EatWhatYouKill.java:140) 	at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:131) 	at org.seleniumhq.jetty9.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:382) 	at org.seleniumhq.jetty9.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:708) 	at org.seleniumhq.jetty9.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:626) 	at java.base/java.lang.Thread.run(Thread.java:834)                   Powered by Jetty:// 9.4.8.v20180619                  Used software are Java 11 selenium-server-standalone-3.14.0.jar Tried with selenium-server-standalone-3.141.0.jar and selenium-server-standalone-3.141.59.jar also.  I think, the lower versions of stand alone jar are incompatible with higher versions of Java.","closed","","MobileTester","2019-05-24T05:27:01Z","2019-08-14T10:09:43Z"
"","7382","varacode scan  throws vulnerable for selenium JARs","Hi  my selenium scripts scanned through varacode and it generated vulnerable in below selenium JAR files specially regarding Directory Traversal  selenium-chrome-driver-2.53.1.jar selenium-ie-driver-2.53.1.jar selenium-firefox-driver-2.53.1.jar  Description : Allowing user inout to control paths used in filesystem operations may enable attacker to access.  below are few lines it throws  selenium-firefox-driver-2.53.1.jar ------  org/.../internal/ProfilesIni.java (line 104,137, 140, 145) selenium-ie-driver-2.53.1.jar -----------   .../InternetExplorerDriverService.java (line 201, 177) selenium-chrome-driver-2.53.1.jar ------ .../ChromeDriverService.java (line 147)  As i ma working in financial institution my scripts has to go through varacode,  let me know how to fix these issues.  Regards Ramakrishna","closed","","ramakrishnakandipati","2019-07-10T02:45:32Z","2019-08-14T06:09:43Z"
"","7576",".Net string.Format without named parameters","Hey there thank you for a great work there! I found some issues with `DevToolsSession.LogTrace`, .Net Core does not support named parameters in `string.Format(...)`. The second typo is in `DriverOptions.GetTypeSafeOptionName` in generating error messages.","closed","C-dotnet,","trejjam","2019-09-18T13:31:23Z","2020-01-11T00:13:35Z"
"","7680","Selenium not detect","Hey i use selenium with python on win 7 64 bit i have script to login me only automated on my using webpages.But the browser detect and the websites knows i use selenium and they dont let me login without re captcha. I read in other issues users replace something in chromedriver but my changing of cdc part with vim doesnt help. what do I have to change so that selenium is not recognized By webpages and chromedriver ?","closed","","oh2thirteen","2019-10-13T18:02:48Z","2019-11-12T19:07:58Z"
"","7700","Use proxy with username and password","Hello, I have a problem when use proxy with username and password.  ChromeOptions options = new ChromeOptions(); proxy = new Proxy(); proxy.Kind = ProxyKind.Manual; proxy.IsAutoDetect = false; proxy.HttpProxy = proxy.SslProxy = ""127.0.0.1:3330""; options.Proxy = proxy; options.AddArgument(""ignore-certificate-errors""); var chromedriver = new ChromeDriver(options);  that can use without username and password. but doesn't work with username and password. someone said use SocksUserName and SocksPassword. it doesn't work. Please help me, thanks","closed","","GodStar88","2019-10-22T03:20:12Z","2019-11-21T12:08:30Z"
"","7701","Headless and Extenstion","Hello, I am using Extention on chrome driver. It doesn't work when i use headless mode/  OpenQA.Selenium.WebDriverException: unknown error: failed to wait for extension background page to load: chrome-extension://lkmofgnohbedopheiphabfhfjgkhfcgf/_generated_background_page.html from unknown error: page could not be found: chrome-extension://lkmofgnohbedopheiphabfhfjgkhfcgf/_generated_background_page.html    at OpenQA.Selenium.Remote.RemoteWebDriver.UnpackAndThrowOnError(Response errorResponse)    at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)    at OpenQA.Selenium.Remote.RemoteWebDriver.StartSession(ICapabilities desiredCapabilities)    at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(ICommandExecutor commandExecutor, ICapabilities desiredCapabilities)    at OpenQA.Selenium.Chrome.ChromeDriver..ctor(ChromeDriverService service, ChromeOptions options, TimeSpan commandTimeout)    at OpenQA.Selenium.Chrome.ChromeDriver..ctor(ChromeDriverService service, ChromeOptions options)   How can i fix that? please help me, thanks","closed","","GodStar88","2019-10-22T03:22:29Z","2019-11-21T12:08:27Z"
"","7804","Window.Maximize works, but Window.Fullscreen doesn't work","Hello, In VBA, I try to open Chrome in full screen mode in many ways. I have to mention that this macro is working: `Sub Chrometest()` `    Dim drv As New Selenium.ChromeDriver` `    drv.Get ""https://www.google.ca/""` `    drv.Wait (1000)` `    drv.Window.Maximize` `    drv.Wait (1000)` `End Sub` However, when I switch ""Maximize"" for ""FullScreen"", it will stop at this line and return an error -2146233088 (80131500): `Sub Chrometest()` `    Dim drv As New Selenium.ChromeDriver` `    drv.Get ""https://www.google.ca/""` `    drv.Wait (1000)` `    drv.Window.FullScreen` `    drv.Wait (1000)` `End Sub` How can I use the fullscreen function on Chrome with VBA?","closed","","sebastien-labbe","2019-11-21T21:11:30Z","2020-01-04T20:38:58Z"
"","7060","can't task TakesScreenshot when exsit alert dialog","Hello,      I'd like to takescreenshot when websit has  an alert dialog. But i found that I can not take screen shot when alert occurs util accept or dismiss it.     How can I screenshot this alert dialog/web screen?   ``` driver.navigate().to(""http://www.baidu.com"");  JavascriptExecutor js = (JavascriptExecutor) driver;  String jumpJs = ""alert(1)"";  js.executeScript(jumpJs ); Alert alert = driver.switchTo().alert(); Thread.sleep(100); byte[] base64= ((TakesScreenshot)driver).getScreenshotAs(OutputType.BYTES); ```  ``` Starting ChromeDriver 2.45.615291 (ec3682e3c9061c10f26ea9e5cdcf3c53f3f74387) on port 30738 Only local connections are allowed. [1553653137.964][WARNING]: Timed out connecting to Chrome, retrying... 三月 27, 2019 10:19:00 上午 org.openqa.selenium.remote.ProtocolHandshake createSession 信息: Detected dialect: OSS Exception in thread ""main"" org.openqa.selenium.UnhandledAlertException: unexpected alert open: {Alert text : 1}   (Session info: chrome=70.0.3538.110)   (Driver info: chromedriver=2.45.615291 (ec3682e3c9061c10f26ea9e5cdcf3c53f3f74387),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 19 milliseconds: null Build info: version: '3.4.0', revision: 'unknown', time: 'unknown' System info: host: 'ADMIN-PC', ip: '192.168.28.141', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_112' Driver info: org.openqa.selenium.chrome.ChromeDriver Capabilities [{mobileEmulationEnabled=false, timeouts={implicit=0.0, pageLoad=300000.0, script=30000.0}, hasTouchScreen=false, platform=XP, acceptSslCerts=false, goog:chromeOptions={debuggerAddress=localhost:45032}, acceptInsecureCerts=false, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, setWindowRect=true, unexpectedAlertBehaviour=ignore, applicationCacheEnabled=false, rotatable=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.45.615291 (ec3682e3c9061c10f26ea9e5cdcf3c53f3f74387), userDataDir=C:\Users\admin\AppData\Local\Temp\scoped_dir81452_30084}, takesHeapSnapshot=true, pageLoadStrategy=normal, strictFileInteractability=false, databaseEnabled=false, handlesAlerts=true, version=70.0.3538.110, browserConnectionEnabled=false, proxy=Proxy(), nativeEvents=true, locationContextEnabled=true, cssSelectorsEnabled=true}] Session ID: 6f13f5f4c54e6de314c4bf56a074db9f ```","closed","","louyu65","2019-03-27T02:21:03Z","2019-08-14T17:09:55Z"
"","7648","[selenium-webdriver] Need for a new version of selenium-webdriver","Hello,  We recently pushed this PR (https://github.com/SeleniumHQ/selenium/pull/7511).  Could you please create a new selenium-webdriver version (alpha.6 ?) with this fix so that we could use this version in a project that use the selenium-webdriver dependency ?   Thank you very much","closed","C-nodejs,","MaximeJEUSS","2019-10-04T15:31:12Z","2020-04-15T08:13:55Z"
"","7153","Selenium WebDriver issue in Eclipse IDE","Hello,  I'm trying to perform a test using BDD for Iseries and until last Friday everything was working fine but, currently, it's impossible to run any test on eclipse.  Every time I try to execute a Runner I have got this message:   ### Trace:  java.lang.NoClassDefFoundError: org/openqa/selenium/internal/WrapsElement 	at java.lang.ClassLoader.defineClass1(Native Method) 	at java.lang.ClassLoader.defineClass(Unknown Source) 	at java.security.SecureClassLoader.defineClass(Unknown Source) 	at java.net.URLClassLoader.defineClass(Unknown Source) 	at java.net.URLClassLoader.access$100(Unknown Source) 	at java.net.URLClassLoader$1.run(Unknown Source) 	at java.net.URLClassLoader$1.run(Unknown Source) 	at java.security.AccessController.doPrivileged(Native Method) 	at java.net.URLClassLoader.findClass(Unknown Source) 	at java.lang.ClassLoader.loadClass(Unknown Source) 	at sun.misc.Launcher$AppClassLoader.loadClass(Unknown Source) 	at java.lang.ClassLoader.loadClass(Unknown Source) 	at java.lang.ClassLoader.defineClass1(Native Method) 	at java.lang.ClassLoader.defineClass(Unknown Source) 	at java.security.SecureClassLoader.defineClass(Unknown Source) 	at java.net.URLClassLoader.defineClass(Unknown Source) 	at java.net.URLClassLoader.access$100(Unknown Source) 	at java.net.URLClassLoader$1.run(Unknown Source) 	at java.net.URLClassLoader$1.run(Unknown Source) 	at java.security.AccessController.doPrivileged(Native Method) 	at java.net.URLClassLoader.findClass(Unknown Source) 	at java.lang.ClassLoader.loadClass(Unknown Source) 	at sun.misc.Launcher$AppClassLoader.loadClass(Unknown Source) 	at java.lang.ClassLoader.loadClass(Unknown Source) 	at java.lang.Class.getDeclaredMethods0(Native Method) 	at java.lang.Class.privateGetDeclaredMethods(Unknown Source) 	at java.lang.Class.getDeclaredMethods(Unknown Source) 	at com.google.inject.spi.InjectionPoint.getDeclaredMethods(InjectionPoint.java:766) 	at com.google.inject.spi.InjectionPoint.getInjectionPoints(InjectionPoint.java:683) 	at com.google.inject.spi.InjectionPoint.forInstanceMethodsAndFields(InjectionPoint.java:378) 	at com.google.inject.internal.ConstructorBindingImpl.getInternalDependencies(ConstructorBindingImpl.java:182) 	at com.google.inject.internal.InjectorImpl.getInternalDependencies(InjectorImpl.java:661) 	at com.google.inject.internal.InjectorImpl.cleanup(InjectorImpl.java:617) 	at com.google.inject.internal.InjectorImpl.initializeJitBinding(InjectorImpl.java:603) 	at com.google.inject.internal.InjectorImpl.createJustInTimeBinding(InjectorImpl.java:932) 	at com.google.inject.internal.InjectorImpl.createJustInTimeBindingRecursive(InjectorImpl.java:852) 	at com.google.inject.internal.InjectorImpl.getJustInTimeBinding(InjectorImpl.java:291) 	at com.google.inject.internal.InjectorImpl.getBindingOrThrow(InjectorImpl.java:222) 	at com.google.inject.internal.InjectorImpl.getInternalFactory(InjectorImpl.java:938) 	at com.google.inject.internal.FactoryProxy.notify(FactoryProxy.java:48) 	at com.google.inject.internal.ProcessedBindingData.runCreationListeners(ProcessedBindingData.java:60) 	at com.google.inject.internal.InternalInjectorCreator.initializeStatically(InternalInjectorCreator.java:133) 	at com.google.inject.internal.InternalInjectorCreator.build(InternalInjectorCreator.java:106) 	at com.google.inject.Guice.createInjector(Guice.java:87) 	at com.google.inject.Guice.createInjector(Guice.java:69) 	at com.google.inject.Guice.createInjector(Guice.java:59) 	at net.thucydides.core.guice.Injectors.getInjector(Injectors.java:27) 	at net.serenitybdd.core.di.WebDriverInjectors.getInjector(WebDriverInjectors.java:10) 	at net.thucydides.core.webdriver.WebDriverFactory.(WebDriverFactory.java:63) 	at net.thucydides.core.webdriver.WebDriverFactory.(WebDriverFactory.java:57) 	at net.thucydides.core.webdriver.WebdriverProxyFactory.(WebdriverProxyFactory.java:31) 	at net.thucydides.core.webdriver.WebdriverProxyFactory.getFactory(WebdriverProxyFactory.java:37) 	at net.thucydides.core.steps.BaseStepListener.(BaseStepListener.java:235) 	at net.thucydides.core.steps.BaseStepListener.(BaseStepListener.java:231) 	at net.thucydides.core.steps.Listeners$BaseStepListenerBuilder.withOutputDirectory(Listeners.java:37) 	at net.serenitybdd.core.SerenityListeners.(SerenityListeners.java:30) 	at cucumber.runtime.formatter.SerenityReporter.initialiseThucydidesListenersFor(SerenityReporter.java:120) 	at cucumber.runtime.formatter.SerenityReporter.lambda$handleTestSourceRead$8(SerenityReporter.java:168) 	at java.util.Optional.ifPresent(Unknown Source) 	at cucumber.runtime.formatter.SerenityReporter.handleTestSourceRead(SerenityReporter.java:165) 	at cucumber.runtime.formatter.SerenityReporter.lambda$new$0(SerenityReporter.java:124) 	at cucumber.runner.EventBus.send(EventBus.java:28) 	at cucumber.runtime.model.CucumberFeature.sendTestSourceRead(CucumberFeature.java:132) 	at cucumber.runtime.RuntimeOptions.cucumberFeatures(RuntimeOptions.java:315) 	at cucumber.api.junit.Cucumber.(Cucumber.java:81) 	at net.serenitybdd.cucumber.CucumberWithSerenity.(CucumberWithSerenity.java:54) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source) 	at java.lang.reflect.Constructor.newInstance(Unknown Source) 	at org.junit.internal.builders.AnnotatedBuilder.buildRunner(AnnotatedBuilder.java:104) 	at org.junit.internal.builders.AnnotatedBuilder.runnerForClass(AnnotatedBuilder.java:86) 	at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59) 	at org.junit.internal.builders.AllDefaultPossibilitiesBuilder.runnerForClass(AllDefaultPossibilitiesBuilder.java:26) 	at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59) 	at org.junit.internal.requests.ClassRequest.getRunner(ClassRequest.java:33) 	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader.createUnfilteredTest(JUnit4TestLoader.java:90) 	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader.createTest(JUnit4TestLoader.java:76) 	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader.loadTests(JUnit4TestLoader.java:49) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:525) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:763) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:463) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:209) Caused by: java.lang.ClassNotFoundException: org.openqa.selenium.internal.WrapsElement 	at java.net.URLClassLoader.findClass(Unknown Source) 	at java.lang.ClassLoader.loadClass(Unknown Source) 	at sun.misc.Launcher$AppClassLoader.loadClass(Unknown Source) 	at java.lang.ClassLoader.loadClass(Unknown Source) 	... 83 more  ### Dependencies:   dependencies { 	/////////////////////////////////////////////////////////////////////////// 	/////////LOCAL DEPENDENCIES//////////////////////////////////////////////// 	/////////////////////////////////////////////////////////////////////////// 	compile name: 'sqljdbc4' 	compile name: 'ojdbc6'    	compile name:  'sikulixapi'    	//Librerias POI manipular Excel    	compile name:  'librerias poi/commons-collections4-4.1'    	compile name:  'librerias poi/jxl'    	compile name:  'librerias poi/poi-3.16'    	compile name:  'librerias poi/poi-ooxml-3.16'    	compile name:  'librerias poi/poi-ooxml-schemas-3.16'    	compile name:  'librerias poi/xmlbeans-2.6.0'        	/////////////////////////////////////////////////////////////////////////// 	/////////REMOTE DEPENDENCIES/////////////////////////////////////////////// 	/////////////////////////////////////////////////////////////////////////// 	compile group: 'commons-collections', name: 'commons-collections', version: '3.2'     testCompile group: 'junit', name: 'junit', version: '4.12'     compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.1'     compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.141.59'     compile group: 'org.seleniumhq.selenium', name: 'selenium-api', version: '3.141.59'     compile group: 'org.seleniumhq.selenium', name: 'selenium-server', version: '3.141.59'     compile group: 'org.apache.axis', name: 'axis', version: '1.4'     compile group: 'com.sixdimensions.commons.osgi.wrapper', name: 'jaxrpc-api', version: '1.1'     compile group: 'com.github.detro.ghostdriver', name: 'phantomjsdriver', version: '1.0.1' 	compile group: 'org.apache.poi', name: 'poi', version: '3.15' 	compile group: 'org.apache.poi', name: 'poi-ooxml', version: '3.15' 	compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1' 	compile group: 'commons-discovery', name: 'commons-discovery', version: '0.5' 	compile group: 'javax.activation', name: 'activation', version: '1.1' 	compile group: 'javax.mail', name: 'mail', version: '1.4' 	compile group: 'com.jcraft', name: 'jsch', version: '0.1.54' 	compile group: 'net.serenity-bdd', name: 'serenity-core', version: '2.0.48'     compile group: 'net.serenity-bdd', name: 'serenity-junit', version: '2.0.48'     compile group: 'net.serenity-bdd', name: 'serenity-cucumber', version: '1.9.37'    // compile group: 'org.jvnet.com4j', name: 'com4j', version: '2.1'     // https://mvnrepository.com/artifact/com.googlecode.javacv/javacv 	compile group: 'com.googlecode.javacv', name: 'javacv', version: '0.1'  	testCompile group: 'org.assertj', name: 'assertj-core', version: '3.8.0'   	testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'       testCompile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'     testCompile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'     testCompile('junit:junit:4.12')      compile group: 'net.sf.jt400', name: 'jt400', version: '6.6'        //Java Mail    compile group: 'javax.mail', name: 'mail', version: '1.5.0-b01'    compile group: 'javax.activation', name: 'activation', version: '1.1.1'    compile group: 'org.apache.poi', name: 'poi', version: '3.15'    compile group: 'org.apache.poi', name: 'poi-ooxml', version: '3.15'     compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'    compile 'com.opencsv:opencsv:4.3.2' 	   //Lib Drools     compile group: 'org.drools', name: 'drools-core', version: '7.14.0.Final'    compile group: 'org.jvnet.com4j', name: 'com4j', version: '2.1'                   	     }   OS:  Selenium version:","closed","","Jeffrey93","2019-04-29T17:55:40Z","2019-08-14T12:09:52Z"
"","7027","Selenium source code is still using JsonWireProtocolResponse.java. Deprecated?","Hello,  I was going through the java selenium client source and noticed that when validating the response from the server, the function successHandler() under the JsonWireProtocolResponse.java file is called as opposed to the function by the same name under the W3CHandshakeResponse.java file. I was under the impression that the Jsonwire protocol had been deprecated and replaced by the W3C standard. The issue that I am having is that I have formatted the response for a webdriver I am working on according to the W3C standard but the current client code checks for properties dictated by the jsonwire protocol but not W3C. Mainly ""value"", ""status"" and ""sessionId"" as opposed to ""sessionId"" and ""capabilities"" when the /session endpoint is called. Is this something that will be fixed in the near future or should I write the driver code such that it is functional with the old standard?","closed","R-awaiting answer,","miggs125","2019-03-13T15:31:27Z","2019-08-14T17:09:54Z"
"","7425","IE 11 Selenium Test Case automation is not launching","Hello Team,  I am unable to Launch UI Test cases in **Internet Explorer** in Windows SERVER 2016.But chrome is launching with out any issues. Below is the Error MEssage.    Failed: Unable to get browser     Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53'     System info: host: 'xxxxxxx', ip: '10.146.0.25', os.name: 'Windows Server 2016', os.arch: 'x86', os.version: '10.0', java.version: '1.8.0_211'     Driver info: driver.version: unknown  Thanks Mallesh","closed","","ghost","2019-07-23T09:04:37Z","2021-09-05T10:20:37Z"
"","7326","Session ID is null. Using WebDriver after calling quit()? issue while tring to close browser and start it again","Hello guys  i got this issue while trying to close webdriver and open it again to close browser and open it again for each scenario in new browser session , i used cucumber hooks @before and @after as following :  ` 	private static WebDriver localDriver = null;  	public static WebDriver getDriver(String browser) { 		if (localDriver == null) { 			setWebDriver(createInstance(browser)); 		} 		return localDriver; 	}  	public static WebDriver getInstance() { 		if (localDriver != null) { 			return localDriver; 		} 		return null;  	}   @Before  public static WebDriver createInstance(String browserName) { 		WebDriver driver; 		  		switch (browserName.toUpperCase()) { 		case ""FIREFOX"": 			System.setProperty(""webdriver.gecko.driver"", 					""drivers/windows/fireFox/geckodriver.exe""); 			driver = new FirefoxDriver(); 			driver.manage().window().maximize(); 			//driver.manage().deleteAllCookies(); 			break; 		case ""IE"": 			System.setProperty(""webdriver.ie.driver"", 					""drivers/windows/IE/IEDriverServer.exe""); 			driver = new InternetExplorerDriver(); 			driver.manage().window().maximize(); 			//driver.manage().deleteAllCookies(); 			break; 		case ""CHROME"": 			System.setProperty(""webdriver.chrome.driver"", 					""drivers/windows/chrome/chromedriver.exe""); 			driver = new ChromeDriver(); 			driver.manage().window().maximize(); 		 			//driver.manage().deleteAllCookies(); 			break; 		case ""EDGE"": 			System.setProperty(""webdriver.edge.driver"", 					""drivers/windows/edge/MicrosoftWebDriver.exe""); 			driver = new EdgeDriver(); 			driver.manage().window().maximize(); 			//driver.manage().deleteAllCookies(); 			break; 		default: 			System.setProperty(""webdriver.chrome.driver"", 					""drivers/windows/chrome/chromedriver.exe""); 			driver = new ChromeDriver(); 			 			break; 		} `  and this after    `@After  public static void closeDriver() throws InterruptedException { 		if (localDriver != null) { 			localDriver.manage().deleteAllCookies(); 			localDriver.quit(); 			localDriver = null; 			Thread.sleep(5000);} }  `  could you please help me to solve this issue  note that my env is  Junit 4 + cucumber + selenium 3.14   Error log :    Feature: Check when user login to the system Running Feature child (scenario)... Begin scenario run... Scenario login to the system has been started 1561402330360	mozrunner::runner	INFO	Running command: ""C:\\Program Files\\Mozilla Firefox\\firefox.exe"" ""-marionette"" ""-foreground"" ""-no-remote"" ""-profile"" ""C:\\Users\\Tofail\\AppData\\Local\\Temp\\rust_mozprofile.3crKL1plyPdx"" 1561402330744	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons 1561402330744	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/ 1561402330744	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader* 1561402332275	Marionette	INFO	Listening on port 51410 1561402332503	Marionette	WARN	TLS certificate errors will be ignored for this session Jun 24, 2019 9:52:12 PM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: W3C FirefoxDriver: firefox on WINDOWS (8d04c0b9-65ae-4baf-8feb-04fe43040d42)has been opened [GFX1-]: [D2D1.1] 4CreateBitmap failure Size(20444,100) Code: 0x80070057 format 0 JavaScript warning:  unreachable code after return statement JavaScript warning: line 7241: unreachable code after return statement console.error: BroadcastService:    receivedBroadcastMessage: handler for   remote-settings/monitor_changes   threw error:   Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221561148779474%22 is not a valid URL..   Stack:     remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:203:13  1561402378981	Marionette	INFO	Stopped listening on port 51410 [Child 16508, Chrome_Chi[Parent 16676, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1560988636/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341  ###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost  [GPU 17488, Chrome_ChildThread] WARNING: pip ###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv  Scenario completed...0 Running Feature child (scenario)... Begin scenario run... Scenario Invalid login to the system has been started 1561402385501	mozrunner::runner	INFO	Running command: ""C:\\Program Files\\Mozilla Firefox\\firefox.exe"" ""-marionette"" ""-foreground"" ""-no-remote"" ""-profile"" ""C:\\Users\\Tofail\\AppData\\Local\\Temp\\rust_mozprofile.AKFRHBAxS4KU"" 1561402385885	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons 1561402385886	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/ 1561402385886	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader* 1561402387530	Marionette	INFO	Listening on port 51489 [Parent 25064, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1560988636/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341 [Child 2580, Chrome_ChildThread] WARNING: pipe err1561402387693	Marionette	WARN	TLS certificate errors will be ignored for this session Jun 24, 2019 9:53:07 PM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: W3C FirefoxDriver: firefox on WINDOWS (b10728ed-94e6-40be-8149-5c8fc799886d)has been opened    Scenario: login to the system               # src/test/resources/General/Login/test.feature:3     Given I want to open home page            # Stepdefs.openHomepage()     And I want to login username and password # Stepdefs.loginto()     Then Check if the user on Home page       # Stepdefs.checkhomePage() 1561402393069	Marionette	INFO	Stopped listening on port 51489 [Parent 25064, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1560988636/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341 [Parent 25064, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1560988636/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341 [Child 27416, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1560988636/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341 [Child 27416, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1560988636/build/src/ipc/chromium/src/chrome/common/ipc_channel_win[Parent 25064, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1560988636/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341 [Child 3964, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1560988636/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341 [Child 3964, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1560988636/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.c[GPU 25936, Chrome_C ###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv  Initiating retry... Current class is: com.github.mkolisnyk.cucumber.runner.ExtendedExecutionUnitRunner Scenario completed...1 Running Feature child (scenario)... Begin scenario run... Scenario check forget password has been started 1561402399458	mozrunner::runner	INFO	Running command: ""C:\\Program Files\\Mozilla Firefox\\firefox.exe"" ""-marionette"" ""-foreground"" ""-no-remote"" ""-profile"" ""C:\\Users\\Tofail\\AppData\\Local\\Temp\\rust_mozprofile.zJPL3j9ROrzj"" 1561402399845	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons 1561402399846	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/ 1561402399846	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader* 1561402401350	Marionette	INFO	Listening on port 51523 1561402401618	Marionette	WARN	TLS certificate errors will be ignored for this session Jun 24, 2019 9:53:21 PM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: W3C FirefoxDriver: firefox on WINDOWS (ed0c9229-42b2-45b1-b818-41c922f8a320)has been opened    Scenario: Invalid login to the system # src/test/resources/General/Login/test.feature:8     Given I want to open home page      # Stepdefs.openHomepage()     Then I want to login invalid        # Stepdefs.invalid_login()       org.openqa.selenium.NoSuchSessionException: Session ID is null. Using WebDriver after calling quit()?       Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'       System info: host: 'DESKTOP-85HPMJD', ip: '192.168.45.2', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181'       Driver info: driver.version: RemoteWebDriver       	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:125)       	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)       	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)       	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)       	at org.openqa.selenium.remote.RemoteWebDriver.findElementByCssSelector(RemoteWebDriver.java:420)       	at org.openqa.selenium.By$ByCssSelector.findElement(By.java:431)       	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)       	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)       	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)       	at com.sun.proxy.$Proxy19.click(Unknown Source)       	at pageObjectsFactory.pageObjects.login.LoginPage.invalid_login(LoginPage.java:123)       	at io.cucumber.skeleton.Stepdefs.invalid_login(Stepdefs.java:219)       	at ✽.Then I want to login invalid(src/test/resources/General/Login/test.feature:10)  1561402406212	Marionette	INFO	Stopped listening on port 51523 [Parent 20628, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1560988636/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341 [Parent 20628, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1560988636/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341 [Child 19000, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1560988636/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341 [Child 19000, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_[Parent 20628, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1560988636/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341  ###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost  [GPU 25400, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1560988636/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341  ###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv  Initiating retry... Current class is: com.github.mkolisnyk.cucumber.runner.ExtendedExecutionUnitRunner Scenario completed...1    Scenario: check forget password                 # src/test/resources/General/Login/test.feature:12     Given I want to open home page                # Stepdefs.openHomepage()     Then Check if the password reset successfully # Stepdefs.forgetPassword()       org.openqa.selenium.NoSuchSessionException: Session ID is null. Using WebDriver after calling quit()?       Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'       System info: host: 'DESKTOP-85HPMJD', ip: '192.168.45.2', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181'       Driver info: driver.version: RemoteWebDriver       	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:125)       	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)       	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)       	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)       	at org.openqa.selenium.remote.RemoteWebDriver.findElementByCssSelector(RemoteWebDriver.java:420)       	at org.openqa.selenium.By$ByCssSelector.findElement(By.java:431)       	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)       	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)       	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)       	at com.sun.proxy.$Proxy19.sendKeys(Unknown Source)       	at pageObjectsFactory.pageObjects.login.LoginPage.forgetPasword(LoginPage.java:145)       	at io.cucumber.skeleton.Stepdefs.forgetPassword(Stepdefs.java:224)       	at ✽.Then Check if the password reset successfully(src/test/resources/General/Login/test.feature:14)   Failed scenarios: src/test/resources/General/Login/test.feature:8 # Scenario: Invalid login to the system src/test/resources/General/Login/test.feature:12 # Scenario: check forget password  3 Scenarios (2 failed, 1 passed) 7 Steps (2 failed, 5 passed) 1m22.968s  org.openqa.selenium.NoSuchSessionException: Session ID is null. Using WebDriver after calling quit()? Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03' System info: host: 'DESKTOP-85HPMJD', ip: '192.168.45.2', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181' Driver info: driver.version: RemoteWebDriver 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:125) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552) 	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323) 	at org.openqa.selenium.remote.RemoteWebDriver.findElementByCssSelector(RemoteWebDriver.java:420) 	at org.openqa.selenium.By$ByCssSelector.findElement(By.java:431) 	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315) 	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69) 	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38) 	at com.sun.proxy.$Proxy19.click(Unknown Source) 	at pageObjectsFactory.pageObjects.login.LoginPage.invalid_login(LoginPage.java:123) 	at io.cucumber.skeleton.Stepdefs.invalid_login(Stepdefs.java:219) 	at ✽.Then I want to login invalid(src/test/resources/General/Login/test.feature:10)  org.openqa.selenium.NoSuchSessionException: Session ID is null. Using WebDriver after calling quit()? Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03' System info: host: 'DESKTOP-85HPMJD', ip: '192.168.45.2', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181' Driver info: driver.version: RemoteWebDriver 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:125) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552) 	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323) 	at org.openqa.selenium.remote.RemoteWebDriver.findElementByCssSelector(RemoteWebDriver.java:420) 	at org.openqa.selenium.By$ByCssSelector.findElement(By.java:431) 	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315) 	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69) 	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38) 	at com.sun.proxy.$Proxy19.sendKeys(Unknown Source) 	at pageObjectsFactory.pageObjects.login.LoginPage.forgetPasword(LoginPage.java:145) 	at io.cucumber.skeleton.Stepdefs.forgetPassword(Stepdefs.java:224) 	at ✽.Then Check if the password reset successfully(src/test/resources/General/Login/test.feature:14)    Thanks in advance","closed","","TofailHiary","2019-06-24T19:04:41Z","2019-08-14T07:09:45Z"
"","7160","org.openqa.selenium.TimeoutException: timeout to a simple website","Hello friends I have an application that uses the webdriver to access multiple sites. some sites like the site: http://vrsoftware.dyndns.org:37904/vader/?tv  returns timeout however, when access via chrome, it accesses normally  org.openqa.selenium.TimeoutException: timeout   (Session info: headless chrome=74.0.3729.131)   (Driver info: chromedriver=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}),platform=Mac OS X 10.14.4 x86_64) (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 0 milliseconds Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03' System info: host: 'MacBook-Pro-de-Cassio.local', ip: 'fe80:0:0:0:8c:1954:b623:a6b9%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.14.4', java.version: '1.8.0_201' Driver info: org.openqa.selenium.chrome.ChromeDriver Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 74.0.3729.6 (255758eccf3d24..., userDataDir: /var/folders/8l/_rhpzhr53kd...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:59772}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), rotatable: false, setWindowRect: true, strictFileInteractability: false, takesHeapSnapshot: true, takesScreenshot: true, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unexpectedAlertBehaviour: ignore, unhandledPromptBehavior: ignore, version: 74.0.3729.131, webStorageEnabled: true} Session ID: bfcb1c82cfd39d3a07b48d397b3b91e1 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) 	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214) 	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166) 	at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40) 	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80) 	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552) 	at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:277) 	at br.com.imidiatv.web.controller.MidiaController.printScreenv2(MidiaController.java:495) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189) 	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) 	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:114) 	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827) 	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738) 	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) 	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963) 	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897) 	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) 	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872) 	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707) 	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) 	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790) 	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:711) 	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1644) 	at br.com.imidiatv.web.filters.UrlRedirectFilter.doFilter(UrlRedirectFilter.java:38) 	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1624) 	at org.eclipse.jetty.servlets.CrossOriginFilter.handle(CrossOriginFilter.java:248) 	at org.eclipse.jetty.servlets.CrossOriginFilter.doFilter(CrossOriginFilter.java:211) 	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1615) 	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:550) 	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143) 	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:568) 	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:221) 	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1112) 	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:479) 	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:183) 	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1046) 	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141) 	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97) 	at org.eclipse.jetty.server.Server.handle(Server.java:462) 	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:281) 	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:232) 	at org.eclipse.jetty.io.AbstractConnection$1.run(AbstractConnection.java:505) 	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:607) 	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:536) 	at java.lang.Thread.run(Thread.java:748)","closed","","cassiohoffmann","2019-05-01T04:27:54Z","2019-08-14T12:09:46Z"
"","7442","Selenium 4.0 grid browser priority, first cut","Grid Browser Session priority, first cut at working logic with unit tests.  There's more code than necessary, and an abusive amount of commentary, but this should correctly prioritize where sessions go based on browser ""rarity"". Still need a code review and some unit tests, but I wanted to put this up for review and feedback. There's plenty to optimize, but I think this does the job.   - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-grid,","mmerrell","2019-07-28T21:46:40Z","2019-08-05T15:04:19Z"
"","7502","Interface mobile.NetworkConnection invisible from class loader","Good morning, When I try to instantiate the class EventFiringWebDriver I get the following error :  java.lang.IllegalArgumentException: interface org.openqa.selenium.mobile.NetworkConnection is not visible from class loader 	at java.lang.reflect.Proxy$ProxyClassFactory.apply(Unknown Source) 	at java.lang.reflect.Proxy$ProxyClassFactory.apply(Unknown Source) 	at java.lang.reflect.WeakCache$Factory.get(Unknown Source) 	at java.lang.reflect.WeakCache.get(Unknown Source) 	at java.lang.reflect.Proxy.getProxyClass0(Unknown Source) 	at java.lang.reflect.Proxy.newProxyInstance(Unknown Source) 	at org.openqa.selenium.support.events.EventFiringWebDriver.(EventFiringWebDriver.java:96) ...  I am using the following version : 3.14.0 I don't understand why I get this error, besides my code worked a few days ago. Here is the piece of code, I get the error on the last line :   ChromeOptions copt = new ChromeOptions(); copt.setCapability(""goog:loggingPrefs"", logpref); WebDriver driver = new ChromeDriver(copt); EventFiringWebDriver eventFiring = new EventFiringWebDriver(driver);  What I find the most curious is that I am using ChromeDriver and it is not on a mobile, why would this interface mobile.NetworkConnection be called ? Thanks in advance for your help.","closed","","JadouC7","2019-08-19T09:46:06Z","2019-09-18T10:09:35Z"
"","7128","org.openqa.selenium.SessionNotCreatedException Unable to find a matching set of capabilities though provided","Getting org.openqa.selenium.SessionNotCreatedException: Unable to find a matching set of capabilities Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53' System info: host: 'WINDOWSMACHINE', ip: 'xxx', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_212' Driver info: driver.version: unknown remote stacktrace:  Command duration or timeout: 3.38 seconds 	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214) 	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166) 	at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$errorHandler$0(JsonWireProtocolResponse.java:54) 	at org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30) 	at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126) 	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) 	at java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958) 	at java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:126) 	at java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:498) 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:485) 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471) 	at java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:152) 	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) 	at java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:464) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:131) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:144) 	at base.TestBase.Setup(TestBase.java:136) 	at java.util.concurrent.FutureTask.run(FutureTask.java:266) 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) 	at java.util.concurrent.FutureTask.run(FutureTask.java:266) 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) 	at java.lang.Thread.run(Thread.java:748) Caused by: org.openqa.selenium.SessionNotCreatedException: Unable to find a matching set of capabilities Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53' System info: host: 'WINDOWSMACHINE', ip: 'xxx', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_212' Driver info: driver.version: unknown remote stacktrace:  Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03' System info: host: 'A-MacBook-Pro.local', ip: '2606:6000:fccc:1e00:0:0:0:6%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.14.4', java.version: '1.8.0_212' Driver info: driver.version: unknown 	at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62) 	at org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30) 	at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126) 	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source) 	at java.util.Spliterators$ArraySpliterator.tryAdvance(Unknown Source) 	at java.util.stream.ReferencePipeline.forEachWithCancel(Unknown Source) 	at java.util.stream.AbstractPipeline.copyIntoWithCancel(Unknown Source) 	at java.util.stream.AbstractPipeline.copyInto(Unknown Source) 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source) 	at java.util.stream.FindOps$FindOp.evaluateSequential(Unknown Source) 	at java.util.stream.AbstractPipeline.evaluate(Unknown Source) 	at java.util.stream.ReferencePipeline.findFirst(Unknown Source) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74) 	at org.openqa.selenium.grid.session.remote.RemoteSession$Factory.performHandshake(RemoteSession.java:147) 	at org.openqa.selenium.grid.session.remote.ServicedSession$Factory.apply(ServicedSession.java:161) 	at org.openqa.selenium.remote.server.ActiveSessionFactory.lambda$apply$12(ActiveSessionFactory.java:180) 	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source) 	at java.util.stream.ReferencePipeline$11$1.accept(Unknown Source) 	at java.util.stream.ReferencePipeline$2$1.accept(Unknown Source) 	at java.util.Spliterators$ArraySpliterator.tryAdvance(Unknown Source) 	at java.util.stream.ReferencePipeline.forEachWithCancel(Unknown Source) 	at java.util.stream.AbstractPipeline.copyIntoWithCancel(Unknown Source) 	at java.util.stream.AbstractPipeline.copyInto(Unknown Source) 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source) 	at java.util.stream.FindOps$FindOp.evaluateSequential(Unknown Source) 	at java.util.stream.AbstractPipeline.evaluate(Unknown Source) 	at java.util.stream.ReferencePipeline.findFirst(Unknown Source) 	at org.openqa.selenium.remote.server.ActiveSessionFactory.apply(ActiveSessionFactory.java:183) 	at org.openqa.selenium.remote.server.NewSessionPipeline.lambda$null$2(NewSessionPipeline.java:66) 	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source) 	at java.util.stream.ReferencePipeline$2$1.accept(Unknown Source) 	at java.util.Collections$2.tryAdvance(Unknown Source) 	at java.util.stream.ReferencePipeline.forEachWithCancel(Unknown Source) 	at java.util.stream.AbstractPipeline.copyIntoWithCancel(Unknown Source) 	at java.util.stream.AbstractPipeline.copyInto(Unknown Source) 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source) 	at java.util.stream.FindOps$FindOp.evaluateSequential(Unknown Source) 	at java.util.stream.AbstractPipeline.evaluate(Unknown Source) 	at java.util.stream.ReferencePipeline.findFirst(Unknown Source) 	at org.openqa.selenium.remote.server.NewSessionPipeline.lambda$createNewSession$3(NewSessionPipeline.java:69) 	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source) 	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source) 	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source) 	at java.util.stream.DistinctOps$1$2.accept(Unknown Source) 	at java.util.stream.ReferencePipeline$2$1.accept(Unknown Source) 	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source) 	at java.util.stream.ReferencePipeline$2$1.accept(Unknown Source) 	at java.util.stream.Streams$StreamBuilderImpl.tryAdvance(Unknown Source) 	at java.util.stream.Streams$ConcatSpliterator.tryAdvance(Unknown Source) 	at java.util.stream.ReferencePipeline.forEachWithCancel(Unknown Source) 	at java.util.stream.AbstractPipeline.copyIntoWithCancel(Unknown Source) 	at java.util.stream.AbstractPipeline.copyInto(Unknown Source) 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source) 	at java.util.stream.FindOps$FindOp.evaluateSequential(Unknown Source) 	at java.util.stream.AbstractPipeline.evaluate(Unknown Source) 	at java.util.stream.ReferencePipeline.findFirst(Unknown Source) 	at org.openqa.selenium.remote.server.NewSessionPipeline.createNewSession(NewSessionPipeline.java:72) 	at org.openqa.selenium.remote.server.commandhandler.BeginSession.execute(BeginSession.java:65) 	at org.openqa.selenium.remote.server.WebDriverServlet.lambda$handle$0(WebDriverServlet.java:235) 	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) 	at java.util.concurrent.FutureTask.run(Unknown Source) 	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source) 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source) 	at java.lang.Thread.run(Unknown Source) ... Removed 20 stack frames      if(browser.contains(""winfirefox"")) 	{ 					 			System.setProperty(""webdriver.gecko.driver"",                      ReadProperties.globalProp.getProperty(""pcgeckodriver"")); 			FirefoxOptions firefoxOptions = new FirefoxOptions(); 			firefoxOptions.setCapability(""platform"", ""WINDOWS""); 			firefoxOptions.setCapability(""browser"", ""firefox""); 			firefoxOptions.setCapability(""newCommandTimeout"", 5000); 			firefoxOptions.setCapability(FirefoxDriver.MARIONETTE, true);  			whichNodeURL=winNodeURL;	 					 			try 			{ 				driverThread.set(new RemoteWebDriver(new URL(whichNodeURL), firefoxOptions)); 			} catch (MalformedURLException e) { 				e.printStackTrace(); 			 } 					 			} 	else if(browser.contains(""macfirefox"")) 	{ 			System.setProperty(""webdriver.gecko.driver"",                      ReadProperties.globalProp.getProperty(""macgeckodriver"")); 			FirefoxOptions macfirefoxOptions = new FirefoxOptions(); 			macfirefoxOptions.setCapability(""platform"", ""MAC""); 			macfirefoxOptions.setCapability(""browser"", ""firefox""); 			macfirefoxOptions.setCapability(""newCommandTimeout"", 5000); 			macfirefoxOptions.setCapability(FirefoxDriver.MARIONETTE, true); 					 			whichNodeURL=macNodeURL; 					 			try 			{ 				driverThread.set(new RemoteWebDriver(new URL(whichNodeURL), macfirefoxOptions)); 			} catch (MalformedURLException e) { 				e.printStackTrace(); 			} 					 			}","closed","","ghost","2019-04-22T22:55:21Z","2019-08-14T13:09:45Z"
"","7057","org.openqa.selenium.WebDriverException: unknown error: failed to write automation extension zip","Getting above exception if i execute runnable jar of a selenium script.But same script work good if i execute it through IDE(Eclipse).  Getting Exception for source code ""**driver = new ChromeDriver(options);**""    Starting ChromeDriver 2.46.628402 (536cd7adbad73a3783fdc2cab92ab2ba7ec361e1) on port 16528 Only local connections are allowed. Please protect ports used by ChromeDriver and related test frameworks to prevent access by malicious code. org.openqa.selenium.WebDriverException: unknown error: failed to write automation extension zip   (Driver info: chromedriver=2.46.628402 (536cd7adbad73a3783fdc2cab92ab2ba7ec361e1),platform=Windows NT 10.0.10586 x86_64) (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 109 milliseconds Build info: version: 'unknown', revision: 'unknown', time: 'unknown' System info: host: 'xyz', ip: 'xxxxxxx', os.name: 'Windows 10', os.arch: 'x86', os.version: '10.0', java.version: '1.8.0_101' Driver info: driver.version: ChromeDriver         at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)         at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)         at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)         at java.lang.reflect.Constructor.newInstance(Unknown Source)         at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)         at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)         at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$errorHandler$0(JsonWireProtocolResponse.java:54)         at org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)         at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)         at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)         at java.util.Spliterators$ArraySpliterator.tryAdvance(Unknown Source)         at java.util.stream.ReferencePipeline.forEachWithCancel(Unknown Source)         at java.util.stream.AbstractPipeline.copyIntoWithCancel(Unknown Source)         at java.util.stream.AbstractPipeline.copyInto(Unknown Source)         at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)         at java.util.stream.FindOps$FindOp.evaluateSequential(Unknown Source)         at java.util.stream.AbstractPipeline.evaluate(Unknown Source)         at java.util.stream.ReferencePipeline.findFirst(Unknown Source)         at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)         at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)         at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)         at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)         at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)         at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)         at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:131)         at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:181)         at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:168)         at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:157)         at test.abc.Test_JAR.main(Test_JAR.java:24)         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)         at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)         at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)         at java.lang.reflect.Method.invoke(Unknown Source)         at org.eclipse.jdt.internal.jarinjarloader.JarRsrcLoader.main(JarRsrcLoader.java:58) Exception in thread ""main"" java.lang.reflect.InvocationTargetException         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)         at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)         at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)         at java.lang.reflect.Method.invoke(Unknown Source)         at org.eclipse.jdt.internal.jarinjarloader.JarRsrcLoader.main(JarRsrcLoader.java:58)","closed","R-awaiting answer,","RameshY703","2019-03-26T11:11:28Z","2019-08-14T17:09:45Z"
"","7295","[java] add full page screenshot feature for Firefox","Geckodriver v0.24.0 has new endpoint for full page screenshot. https://github.com/mozilla/geckodriver/releases/tag/v0.24.0 This commit allows java `FirefoxDriver` use of this function.  * add `FirefoxDriver` method calling `/session/{session id}/moz/screenshot/full` * add unit test       - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","takeya0x86","2019-06-16T12:33:55Z","2019-06-22T05:23:34Z"
"","7182","[py] Adding full page screenshot feature for Firefox","Geckodriver allows to make full page screenshots since version [0.24.0](https://github.com/mozilla/geckodriver/releases/tag/v0.24.0) (mozilla/geckodriver#570). This commit makes use of that feature.      - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/7182)","closed","C-py,","gentoo90","2019-05-07T14:28:43Z","2019-07-18T07:37:45Z"
"","7656","Fix variable typo in firefox_profile.py","fyle variable is typo for file  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-py,","xaircore","2019-10-06T10:11:36Z","2020-01-26T15:01:01Z"
"","7458","Chording with Actions doesn't work as intended.","From `testChordControlCutAndPaste`, the following should work:  ```java new Actions(driver) .sendKeys(Keys.CONTROL + ""a"" + ""x"") ```  This doesn't work since we press and then release the control key. We should keep it down until we see `Keys.NULL`","closed","I-stale,","shs96c","2019-08-01T19:57:32Z","2021-12-04T00:06:39Z"
"","7164","Add new WebDriver support for Edge - JAVA","Following coding pattern from FirefoxDriver to spin up MicrosoftWebDriver.exe or MSEdgeDriver.exe depending on System Property ""webdriver.edge.edgehtml"".   By default, MicrosoftWebDriver.exe will be picked and launched if the system property does not exist or set to ""true"". If it is ""false"", MSEdgeDriver.exe will be used (available for download under Microsoft Edge Insider: https://developer.microsoft.com/en-us/microsoft-edge/tools/webdriver/)  I will probably follow up with a Wiki page if necessary when the PR is completed.  - [X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/7164)","closed","D-edge,","loly89","2019-05-02T19:31:53Z","2019-09-16T16:49:50Z"
"","7331","Timeout exception while waiting for webpage with element in headless chrome","Following code uses non-headless chrome and it works:      import os     from selenium import webdriver     from selenium.webdriver.common.keys import Keys     from selenium.webdriver.chrome.options import Options     from selenium.webdriver.common.by import By     from selenium.webdriver.support import expected_conditions as EC     from selenium.webdriver.common.by import By     from selenium.webdriver.support.ui import WebDriverWait               chrome_options = Options()     chrome_options.add_argument(""--headless"")     chrome_options.add_argument('--start-maximized')     chrome_options.binary_location = 'C:\Program Files (x86)\Google\Chrome\Application\chrome.exe'          driver = webdriver.Chrome(executable_path=os.path.abspath(""C:\User\Program Files\chrome-driver\chromedriver.exe""))          driver.set_window_size(1200, 600)           driver.get(""login-url"")     driver.find_element_by_id(""loginId"").send_keys(""uname"")     driver.find_element_by_id(""newPassword"").send_keys(""pwd"")     driver.find_element_by_name(""submit-button"").click()     driver.set_window_size(1200, 800)     WebDriverWait(driver, 10).until(EC.visibility_of_element_located((By.ID,""user-info"")))          v = driver.find_element_by_xpath(""//tr[4]/td[5]/span"").text          print(v)  When I choose to use headless chrome:      driver = webdriver.Chrome(executable_path=os.path.abspath(""C:\User\Program Files\chrome-driver\chromedriver.exe""), chrome_options=chrome_options)  It throws following exception:      Traceback (most recent call last):       File ""C:/User/workspaces/pyworkspaces/fin2/venv/process.py"", line 28, in          WebDriverWait(driver, 10).until(EC.visibility_of_element_located((By.ID,""user-info"")))       File ""C:\User\workspaces\pyworkspaces\fin2\venv\lib\site-packages\selenium\webdriver\support\wait.py"", line 80, in until         raise TimeoutException(message, screen, stacktrace)     selenium.common.exceptions.TimeoutException: Message:   So it seems to fail on following line, in headless chrome:      WebDriverWait(driver, 10).until(EC.visibility_of_element_located((By.ID,""user-info"")))  I also tried `presence_of_element_located`:      WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.ID,""user-info"")))  But it still gives `TimeOutException`. Why is it so?  **Environment**  Running chromedriver from command prompt says version 75.0.3770.90. Chrome is also of exact same version: Version 75.0.3770.100 (Official Build) (64-bit) Windows 10 64 bit Python console of PyCharm shows this: Python 3.7.3 (v3.7.3:ef4ec6ed12, Mar 25 2019, 21:26:53) [MSC v.1916 32 bit (Intel)] on win32","closed","","RajS999","2019-06-26T08:09:28Z","2019-08-14T07:09:40Z"
"","7692","Fix FluentWait so it completes in more cases.","FluentWait could potentially never complete when the condition passed to it made no progress (either because it fall into an infinite loop or waiting for a resource or response over network).  Fixes #7494  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-java,","utamas","2019-10-16T18:06:44Z","2020-12-21T08:30:18Z"
"","7465","Google chrome dev toosl inspector domain duplication fix in class","Fixing duplication in tests and inspection tests       - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-java,","dratler","2019-08-04T13:49:39Z","2019-08-05T13:34:06Z"
"","7441","Adding correct paths for IDEA to the okhttp dependencies","Fixing 2 broken paths, pointing to a kotlin folder that doesn't exist. Only affected IDEA   - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","mmerrell","2019-07-28T21:43:58Z","2019-08-01T20:13:30Z"
"","7102","Fix JavaScript atom for Element Clear","Fixes issue #6557: The bot.action.clear function explicitly raises blur event, and then the unfocus step raises blur event again, resulting in double firing of blue event.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/7102)","closed","D-atoms,","JohnChen0","2019-04-13T00:43:35Z","2019-04-29T03:01:07Z"
"","6992","retry find of file dialog HWND","fixes https://github.com/SeleniumHQ/selenium/issues/6991  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6992)","closed","","reinsch82","2019-03-04T13:28:22Z","2019-03-05T19:05:35Z"
"","7784","Added option to use char and string when generating atoms.cc","fixes #7783  Add utf8 parameter for gen_file.py to enable creating atoms.cc and atoms.h with char* and std::string types. The default is True to preserve the prior behaviour, using char_t* and std::wstring.  ChromeDriver atoms BUILD was updated to set utf8 to False.   - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","TriciaCrichton","2019-11-14T00:56:37Z","2019-11-29T13:18:35Z"
"","7486","[PY] Fix typo in __init__ function of invisibility_of_element EC","Fixes #7337        - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","GQAssurance","2019-08-10T07:01:15Z","2019-08-10T14:18:04Z"
"","6927","Catch unexpected long type value in socksVersion.","Fixes #6917  I was unable to find the root cause of the problem  (mainly because I suck at Java) and this is a hotfix. By opening this PR I hope that a better solution is discussed, at least.  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6927)","closed","C-java,","dsmontoya","2019-02-11T20:22:12Z","2022-02-11T19:52:08Z"
"","7483","[PY] Explicitly clear PoolManager by using context manager","Fixes #6878  This is meant to solve ResourceWarning messages when WebDrivers are instanced with a `keepalive=False`.       - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","GQAssurance","2019-08-08T23:13:33Z","2019-08-28T20:27:56Z"
"","6886","Corrects the comments to generate more accurate javadocs, fixes #6701","Fixes #6701  Note : This change would generate more accurate javadocs.  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6886)","closed","","maneesh-ms","2019-01-27T12:20:34Z","2019-04-13T14:21:18Z"
"","7111","Run tests only when changes in folder","Fixes #6208   - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/7111)","closed","","knmkr","2019-04-17T05:48:17Z","2019-04-18T05:37:55Z"
"","7010","[rb] Fix: can't modify frozen Array","Fix selenium/rb/lib/selenium/webdriver/common/socket_poller.rb:64:in `': can't modify frozen Array (RuntimeError).  Disabling rubocop rule `Style/MutableConstant`.  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/7010)","closed","C-rb,","N0xFF","2019-03-07T20:00:06Z","2019-03-07T22:06:34Z"
"","7355","Fix NumberFormatException in LinuxEphemeralPortRangeDetector","Fix NumberFormatException in LinuxEphemeralPortRangeDetector when the ephemeral port file contains multiple whispaces.  Fixes #7354       - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","nsotgui","2019-07-03T13:25:35Z","2019-07-18T20:14:48Z"
"","7657","Fix grammar typo in exceptions.py","Fix grammar typo in UnknownMethodException doc string  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","xaircore","2019-10-06T16:28:34Z","2019-10-11T09:14:21Z"
"","7217","FileUtilities.GetCurrentDirectory reflection fix","Fix for ""The path is not of a legal form"" exception when calling FileUtilities.GetCurrentDirectory using reflection  This was caused by an empty string being passed to System.IO.Path.GetDirectoryName  Fixes #3447       - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-dotnet,","mathlang","2019-05-17T07:04:27Z","2019-06-01T13:51:27Z"
"","7669","Fix getLocationInView atom for documentElement","Fix Chrome's getLocationInView atom  ChromeDriver uses webdriver.chrome.getLocationInView atom to get location of an element, after scrolling it into view if necessary. This atom had a couple of bugs:  1. When this atom is passed the  element (i.e.,    document.documentElement), it throws an error since the parent node    is not an element. This causes ChromeDriver bug    https://crbug.com/chromedriver/1049.  2. Scrolling isn't working properly.  This commit fixes both bugs, and expands the corresponding test.        - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","JohnChen0","2019-10-10T01:19:11Z","2019-10-29T19:27:49Z"
"","7106","Driver path","First, it makes more sense now to do: ```ruby Selenium::WebDriver::Chrome::Service.driver_path = '/path/to/driver' ``` rather than to do: ```ruby Selenium::WebDriver::Chrome.driver_path = '/path/to/driver' ```  Second, this allows `#driver_path=` to take a `Proc` value. The reason for this is to be able to lazy load an auto-generated path file. (Essentially this allows webdrivers gem to remove its Monkey Patches).   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/7106)","closed","","titusfortner","2019-04-16T08:25:31Z","2020-07-12T23:36:53Z"
"","7686","UnsupportedCommandException sendKeysToActiveElement on Firefox","Firefox version used: 69.0.3 Selenium version used: 3.14.159  Context: Migrating from Selenium 2.x to 3.x.  The error:  ``` org.openqa.selenium.UnsupportedCommandException:  sendKeysToActiveElement Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03' System info: host: 'vmassol', ip: 'fe80:0:0:0:18d2:2da9:44bb:783e%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.14.5', java.version: '1.8.0_202' Driver info: driver.version: RemoteWebDriver 	at org.openqa.selenium.remote.http.AbstractHttpCommandCodec.encode(AbstractHttpCommandCodec.java:218) 	at org.openqa.selenium.remote.http.AbstractHttpCommandCodec.encode(AbstractHttpCommandCodec.java:117) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:152) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552) 	at org.openqa.selenium.remote.RemoteExecuteMethod.execute(RemoteExecuteMethod.java:35) 	at org.openqa.selenium.remote.RemoteKeyboard.sendKeys(RemoteKeyboard.java:38) 	at org.xwiki.test.ui.po.SuggestInputElement$SuggestionElement.delete(SuggestInputElement.java:98) ```  The code:  ``` // We don't send the keys directly to the text input because it can be hidden.(e.g. when multiple selection // is on and we click on a selected suggestion). getDriver().getKeyboard().sendKeys(Keys.BACK_SPACE); ```  I've found several issues on the topic but they were either related to Chrome and not Firefox or they didn't have a solution for FF and were closed due to inactivity: * https://github.com/SeleniumHQ/selenium/issues/7542 * https://github.com/SeleniumHQ/selenium/issues/5517 * https://github.com/SeleniumHQ/selenium/issues/4546  If `sendKeysToActiveElement` is really unsupported then I guess it shouldn't be part of the API, right?  Note that I cannot use `sendKeys()` on a `WebElement` since the element is hidden (see comment in code above).  Any idea?  Thanks a lot","closed","","vmassol","2019-10-15T12:26:55Z","2019-12-04T11:19:34Z"
"","7830","[rb] update Selenium Logger","Finally got around to this.  1. Allow creating a separate Logger instance with a different progname so we can remove the ""duplicate"" logging wrappers in Watir, Webdrivers and others  2. Supports adding ids so if someone wants to silence specific warnings/deprecations they can  3. Allows #deprecate to take a block that will append to the logged message (e.g. reasons for deprecation or link to blog / documentation, etc)  4. Added Custom RSpec Matchers to make it easier to filter out noise from STDOUT  5. I also threw in `aggregate_failures` in spec_helpers because I was playing with it. Let me know if there's a reason we might now want it there.","closed","C-rb,","titusfortner","2019-11-29T23:47:32Z","2020-07-12T23:29:34Z"
"","7131","No documentation on how to set host headers","EXPECTED: seeing a headers/host override on the `get` method on the selenium driver: https://www.seleniumhq.org/docs/03_webdriver.jsp#fetching-a-page  ACTUAL: documentation provides no reference for accepted parameters.  How do I set/override the Host (or any) header for the `get` request? Setting the Host header separately from resolving the DNS is incredibly important for verifying health before allowing it to accept traffic from the expected Host.  I am happy to pull updates to documentation if you point me towards where this mechanism is exposed.  If this mechanism is not exposed, is there a reason?","closed","","duane","2019-04-23T23:19:30Z","2019-08-14T06:09:57Z"
"","7035","A socket Warning from remote_connection.py","Environment: OS: Windows7 with SP1 (64-bit) Browser: Chrome  73.0.3683.75 (64-bit) chromedriver: 73.0.3683.68 Python: 3.7 (64-bit) selenium-server-standalone: 3.14.0   Step 1.   start selenium-server-standalone  using :  java -jar selenium-server-standalone-3.14.0.jar Step 2.   connect to it :  webdriver.Remote('http://127.0.0.1:4444/wd/hub', {'platform':'WINDOWS', 'browserName':'chrome' } )  All test cases has been executed successfully,but there are many repetitive Warnings:  Warning (from warnings module):   File ""D:\MyProgram\Python37\lib\site-packages\selenium\webdriver\remote\remote_connection.py"", line 376     return self._request(command_info[0], url, body=data) ResourceWarning: unclosed   Anything wrong here ?  Thank you.","closed","C-py,","2Niu","2019-03-15T09:57:30Z","2019-08-14T17:09:57Z"
"","7246","Issue with clearing cookies/starting a clean session in IE11","Environment: **WebdriverIO version:** 4.14.2 **Mode:** WDIO Testrunner (sync) **Browser name and version:** IE 11 **selenium standalone**: selenium-server-standalone-3.141.59.jar **IE driver:** 32 bit 3.14.0  **Config of WebdriverIO**   specs: [`${pathToTests}*.js`],   deprecationWarnings: false,   maxInstances: 1,   capabilities: [     {       browserName: 'internet explorer',       platform: 'WIN8_1',       platformName: 'windows',       ignoreZoomSetting: true,       ignoreProtectedModeSettings: true,       IE_ENSURE_CLEAN_SESSION: true,       logLevel: debug     }   ],   sync: true,  **Issue Description:** Unable to start a clean session in IE. Whenever I launch a new test, IE is already signed in with last user login  **Expected behavior** IE browser should start a new session everytime","closed","","pk-saxena","2019-05-29T09:37:07Z","2019-08-14T09:10:00Z"
"","7685","Deleting secured cookie on IE","Environment :   Browser name and version: IE 11.13 Selenium : 3.141.0 robotframework-seleniumlibrary : 4.0.0 IE driver: 32 bit 3.141.59   With internet explorer, im trying to delete a cookie named wassup (with httpOnly True and secure True), but its not working, the cookie is still here. There is no error msg :  ""DEBUG : DELETE http://127.0.0.1:61940/session/60566738-0540-4531-9c4c-21b1ada3d7ad/cookie/wassup {""name"": ""wassup""}""  With chrome, its working, the cookie is deleted.  Seems like we cant delete httpyOnly and secure cookie on IE, but getting value of the cookie is working.","closed","R-awaiting answer,","chenry35","2019-10-15T09:12:21Z","2021-09-05T10:20:35Z"
"","7423","Handles long overflow on JsonTypeCoercer","Ensures that if a value is an integer, it can be safely casted to Long. Otherwise, we would return a Double.  Fixes #7398       - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-java,","albertor24","2019-07-23T02:11:31Z","2019-08-01T20:27:13Z"
"","7114","Add new expected condition: element_to_be_unclickable","element_to_be_unclickable is the reverse of element_to_be_clickable. Instead of waiting for an element to be clickable, we wait and expect a web element to be unclickable but visible.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/7114)","closed","C-py,","clarmso","2019-04-18T05:02:20Z","2020-06-24T03:58:33Z"
"","6929","WebExtension not installed in Firefox 65 using .Net WebDriver","Download any XPI file from https://addons.mozilla.org/en-US/firefox/addon/search-encrypt/?src=hp-dl-promo. Tried to install with Selenium c# driver. It works fine in Firefox 61, but after upgrade to Firefox 65 the extension is not copied to extensions folder of Firefox temporary profile hence extension is not installed. The extension works fine when installed offline outside selenium.  OS: Win 10 Enterprise Selenium Version: 3.141.0 Browser: Firefox: 65.0 .Net Framework: 4.7.2 Gecko: 0.24.0  The c# driver requires the same change as Java https://github.com/SeleniumHQ/selenium/issues/6403.","closed","D-firefox,","kabilanvk","2019-02-12T18:20:03Z","2019-08-14T13:09:52Z"
"","7096","Avoid accidental double click during Chrome test","Double-click recognition was recently added to ChromeDriver. Two tests require calling the ""release actions"" end point to avoid accidentally triggering double-click.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/7096)","closed","","JohnChen0","2019-04-10T20:10:45Z","2019-04-11T04:32:05Z"
"","6999","Selenium session dies frequently","Doing a POC on win10 and openjdk 11.0.2 for selenium grid testing.  Environment:  OS- Win 10 JDK- Openjdk 11.0.2  3.141.59 testng- 6.14.3  Steps to reproduce  1. Set up selenium grid successfully  Below is a log from it: Hub 13:38:16.348 INFO [GridLauncherV3.parse] - Selenium server version: 3.141.0, revision: 2ecb7d9a 13:38:16.412 INFO [GridLauncherV3.lambda$buildLaunchers$5] - Launching Selenium Grid hub on port 4444 2019-03-05 13:38:16.835:INFO::main: Logging initialized @673ms to org.seleniumhq.jetty9.util.log.StdErrLog 13:38:17.116 INFO [Hub.start] - Selenium Grid hub is up and running 13:38:17.132 INFO [Hub.start] - Nodes should register to http://172.30.4.66:4444/grid/register/ 13:38:17.132 INFO [Hub.start] - Clients should connect to http://172.30.4.66:4444/wd/hub 13:49:02.449 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:6734 14:00:25.594 INFO [DefaultRemoteProxy.onEvent] - Marking the node http://172.30.4.66:6734 as down: cannot reach the node for 2 tries 14:01:25.990 INFO [DefaultRemoteProxy.onEvent] - Unregistering the node http://172.30.4.66:6734 because it's been down for 60397 milliseconds 14:01:25.990 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:6734 14:01:46.676 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:47813 14:06:37.348 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {browserName: chrome, chrome.binary: C:\Program Files (x86)\Goog..., goog:chromeOptions: {args: [], extensions: []}, version: } 14:06:37.348 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {browserName: chrome, chrome.binary: C:\Program Files (x86)\Goog..., goog:chromeOptions: {args: [], extensions: []}, version: } 14:06:37.348 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=3244e26c-2066-4e7a-b9d1-270bb124b553, seleniumProtocol=WebDriver, browserName=chrome, maxInstances=5, platformName=WIN10, platform=WIN10} 14:06:37.364 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=3244e26c-2066-4e7a-b9d1-270bb124b553, seleniumProtocol=WebDriver, browserName=chrome, maxInstances=5, platformName=WIN10, platform=WIN10} 14:09:49.075 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {browserName: chrome, chrome.binary: C:\Program Files (x86)\Goog..., goog:chromeOptions: {args: [], extensions: []}, version: } 14:09:49.075 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {browserName: chrome, chrome.binary: C:\Program Files (x86)\Goog..., goog:chromeOptions: {args: [], extensions: []}, version: } 14:09:49.075 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=3244e26c-2066-4e7a-b9d1-270bb124b553, seleniumProtocol=WebDriver, browserName=chrome, maxInstances=5, platformName=WIN10, platform=WIN10} 14:09:49.075 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=3244e26c-2066-4e7a-b9d1-270bb124b553, seleniumProtocol=WebDriver, browserName=chrome, maxInstances=5, platformName=WIN10, platform=WIN10} 14:18:01.550 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {browserName: chrome, chrome.binary: C:\Program Files (x86)\Goog..., goog:chromeOptions: {args: [], extensions: []}, version: } 14:18:01.550 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {browserName: chrome, chrome.binary: C:\Program Files (x86)\Goog..., goog:chromeOptions: {args: [], extensions: []}, version: } 15:07:19.398 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {browserName: chrome, chrome.binary: C:\Program Files (x86)\Goog..., goog:chromeOptions: {args: [], extensions: []}, version: } 15:06:15.432 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {browserName: chrome, chrome.binary: C:\Program Files (x86)\Goog..., goog:chromeOptions: {args: [], extensions: []}, version: } 14:57:45.741 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:57:40.612 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:57:35.478 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:57:30.336 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:57:25.233 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:57:20.119 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:57:15.023 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:57:09.866 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:57:04.735 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:56:59.602 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:56:54.432 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:56:49.289 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:56:44.173 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:56:39.070 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:56:33.977 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:56:28.832 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:56:23.703 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:56:04.392 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:55:59.290 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:55:54.195 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:55:49.090 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:55:43.989 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:55:38.826 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:55:33.730 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:55:28.557 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:55:23.429 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:55:18.322 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:55:13.157 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:55:08.056 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:55:02.859 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:54:57.710 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:46:12.692 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:45:46.233 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:45:41.135 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:45:36.027 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:45:30.895 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:45:25.747 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:45:20.597 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:45:15.460 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:45:10.348 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:45:05.186 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:45:00.061 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:44:54.932 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:44:49.773 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:44:44.612 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:44:39.491 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:44:34.333 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:44:29.207 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:44:24.103 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:44:18.997 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:44:13.800 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:44:08.641 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:44:03.518 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:43:58.419 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:43:53.252 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:43:48.122 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:43:43.025 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:43:37.871 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:43:32.719 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:43:27.565 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:43:22.444 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:43:17.317 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:43:12.187 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:43:07.077 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:43:01.932 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:42:56.789 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:42:51.633 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:42:46.469 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:42:41.280 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:42:36.124 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:42:31.014 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:42:25.632 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:42:14.247 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:42:09.128 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:42:04.027 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 14:41:48.637 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:41:43.510 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:41:38.381 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:41:33.254 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:41:28.137 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:41:23.040 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:41:17.944 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:41:12.792 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:41:07.680 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:41:02.529 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:40:57.390 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:40:52.260 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:40:47.119 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:40:42.022 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:40:36.905 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:40:31.746 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:40:26.619 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:40:26.381 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {browserName: chrome, chrome.binary: C:\Program Files (x86)\Goog..., goog:chromeOptions: {args: [], extensions: []}, version: } 14:40:21.522 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:40:16.419 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:40:11.289 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:40:06.172 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:40:01.059 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:39:55.927 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:39:50.742 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:39:45.612 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:39:40.517 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:39:35.418 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:39:30.301 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:39:25.167 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:39:20.038 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:39:14.926 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:39:09.784 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:38:57.249 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:38:52.112 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:38:47.012 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:38:41.851 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:38:36.715 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:38:31.608 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:38:26.477 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:38:21.332 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:38:16.236 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:38:11.123 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:38:06.024 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:38:05.135 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {browserName: chrome, chrome.binary: C:\Program Files (x86)\Goog..., goog:chromeOptions: {args: [], extensions: []}, version: } 14:38:00.908 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:37:55.813 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:37:50.715 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:37:45.624 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:37:40.526 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:37:35.424 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:37:30.306 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:37:25.150 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:37:19.952 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:37:14.834 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:37:09.709 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:37:04.584 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:36:59.487 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:36:54.325 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:36:49.187 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:36:44.089 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:36:38.987 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:36:33.871 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:36:28.750 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:36:23.605 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:36:18.487 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:36:13.360 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:36:08.248 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:36:03.100 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:35:57.980 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:35:52.871 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:35:47.712 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:35:42.587 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:35:37.434 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:35:32.297 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:35:29.939 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {browserName: chrome, chrome.binary: C:\Program Files (x86)\Goog..., goog:chromeOptions: {args: [], extensions: []}, version: } 14:35:29.939 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {browserName: chrome, chrome.binary: C:\Program Files (x86)\Goog..., goog:chromeOptions: {args: [], extensions: []}, version: } 14:35:27.151 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:35:22.048 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:35:16.870 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:35:11.729 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:35:06.645 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:35:01.536 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:34:56.433 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:34:51.317 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:33386 14:34:41.419 INFO [DefaultRemoteProxy.onEvent] - Marking the node http://172.30.4.66:47813 as down: cannot reach the node for 2 tries 14:22:46.061 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {browserName: chrome, chrome.binary: C:\Program Files (x86)\Goog..., goog:chromeOptions: {args: [], extensions: []}, version: } 14:22:46.061 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {browserName: chrome, chrome.binary: C:\Program Files (x86)\Goog..., goog:chromeOptions: {args: [], extensions: []}, version: } 14:22:25.931 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {browserName: chrome, chrome.binary: C:\Program Files (x86)\Goog..., goog:chromeOptions: {args: [], extensions: []}, version: } 14:19:49.112 INFO [RequestHandler.process] - Error forwarding the new session new session request for webdriver should contain a location header or an 'application/json;charset=UTF-8' response body with the session ID. org.openqa.grid.common.exception.GridException: new session request for webdriver should contain a location header or an 'application/json;charset=UTF-8' response body with the session ID.         at org.openqa.grid.internal.TestSession.updateHubIfNewWebDriverSession(TestSession.java:396)         at org.openqa.grid.internal.TestSession.forward(TestSession.java:240)         at org.openqa.grid.web.servlet.handler.RequestHandler.forwardNewSessionRequestAndUpdateRegistry(RequestHandler.java:91)         at org.openqa.grid.web.servlet.handler.RequestHandler.process(RequestHandler.java:114)         at org.openqa.grid.web.servlet.DriverServlet.process(DriverServlet.java:85)         at org.openqa.grid.web.servlet.DriverServlet.doPost(DriverServlet.java:69)         at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)         at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)         at org.seleniumhq.jetty9.servlet.ServletHolder.handle(ServletHolder.java:865)         at org.seleniumhq.jetty9.servlet.ServletHandler.doHandle(ServletHandler.java:535)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:146)         at org.seleniumhq.jetty9.security.SecurityHandler.handle(SecurityHandler.java:548)         at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:257)         at org.seleniumhq.jetty9.server.session.SessionHandler.doHandle(SessionHandler.java:1595)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:255)         at org.seleniumhq.jetty9.server.handler.ContextHandler.doHandle(ContextHandler.java:1340)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:203)         at org.seleniumhq.jetty9.servlet.ServletHandler.doScope(ServletHandler.java:473)         at org.seleniumhq.jetty9.server.session.SessionHandler.doScope(SessionHandler.java:1564)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:201)         at org.seleniumhq.jetty9.server.handler.ContextHandler.doScope(ContextHandler.java:1242)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:144)         at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)         at org.seleniumhq.jetty9.server.Server.handle(Server.java:503)         at org.seleniumhq.jetty9.server.HttpChannel.handle(HttpChannel.java:364)         at org.seleniumhq.jetty9.server.HttpConnection.onFillable(HttpConnection.java:260)         at org.seleniumhq.jetty9.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:305)         at org.seleniumhq.jetty9.io.FillInterest.fillable(FillInterest.java:103)         at org.seleniumhq.jetty9.io.ChannelEndPoint$2.run(ChannelEndPoint.java:118)         at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:333)         at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:310)         at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:168)         at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:126)         at org.seleniumhq.jetty9.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:366)         at org.seleniumhq.jetty9.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:765)         at org.seleniumhq.jetty9.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:683)         at java.base/java.lang.Thread.run(Thread.java:834) 14:19:49.097 INFO [RequestHandler.process] - Error forwarding the new session new session request for webdriver should contain a location header or an 'application/json;charset=UTF-8' response body with the session ID. org.openqa.grid.common.exception.GridException: new session request for webdriver should contain a location header or an 'application/json;charset=UTF-8' response body with the session ID.         at org.openqa.grid.internal.TestSession.updateHubIfNewWebDriverSession(TestSession.java:396)         at org.openqa.grid.internal.TestSession.forward(TestSession.java:240)         at org.openqa.grid.web.servlet.handler.RequestHandler.forwardNewSessionRequestAndUpdateRegistry(RequestHandler.java:91)         at org.openqa.grid.web.servlet.handler.RequestHandler.process(RequestHandler.java:114)         at org.openqa.grid.web.servlet.DriverServlet.process(DriverServlet.java:85)         at org.openqa.grid.web.servlet.DriverServlet.doPost(DriverServlet.java:69)         at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)         at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)         at org.seleniumhq.jetty9.servlet.ServletHolder.handle(ServletHolder.java:865)         at org.seleniumhq.jetty9.servlet.ServletHandler.doHandle(ServletHandler.java:535)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:146)         at org.seleniumhq.jetty9.security.SecurityHandler.handle(SecurityHandler.java:548)         at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:257)         at org.seleniumhq.jetty9.server.session.SessionHandler.doHandle(SessionHandler.java:1595)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:255)         at org.seleniumhq.jetty9.server.handler.ContextHandler.doHandle(ContextHandler.java:1340)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:203)         at org.seleniumhq.jetty9.servlet.ServletHandler.doScope(ServletHandler.java:473)         at org.seleniumhq.jetty9.server.session.SessionHandler.doScope(SessionHandler.java:1564)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:201)         at org.seleniumhq.jetty9.server.handler.ContextHandler.doScope(ContextHandler.java:1242)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:144)         at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)         at org.seleniumhq.jetty9.server.Server.handle(Server.java:503)         at org.seleniumhq.jetty9.server.HttpChannel.handle(HttpChannel.java:364)         at org.seleniumhq.jetty9.server.HttpConnection.onFillable(HttpConnection.java:260)         at org.seleniumhq.jetty9.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:305)         at org.seleniumhq.jetty9.io.FillInterest.fillable(FillInterest.java:103)         at org.seleniumhq.jetty9.io.ChannelEndPoint$2.run(ChannelEndPoint.java:118)         at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:333)         at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:310)         at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:168)         at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:126)         at org.seleniumhq.jetty9.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:366)         at org.seleniumhq.jetty9.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:765)         at org.seleniumhq.jetty9.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:683)         at java.base/java.lang.Thread.run(Thread.java:834) 15:08:47.965 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=3244e26c-2066-4e7a-b9d1-270bb124b553, seleniumProtocol=WebDriver, browserName=chrome, maxInstances=5, platformName=WIN10, platform=WIN10} 15:08:48.074 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.090 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.090 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.090 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.090 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.090 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.090 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.090 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.090 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.090 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.090 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.090 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.106 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.106 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.106 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.106 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.106 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.106 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.106 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.106 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.106 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.106 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.121 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.121 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.121 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.121 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.121 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.121 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.121 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.121 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.121 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.121 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.121 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.138 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.138 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.138 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.138 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.138 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.138 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.138 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.138 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.138 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.138 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.138 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.138 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.138 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.138 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.138 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.138 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.138 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.138 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.138 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.138 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.138 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.138 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.138 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.138 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.138 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.138 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.138 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.138 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.154 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.154 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.154 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.154 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.154 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.154 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.154 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.154 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.154 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.154 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.154 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.154 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.154 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:08:48.154 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:33386 15:08:48.154 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:33386 15:08:48.154 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:33386 15:08:48.154 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:33386 15:08:48.154 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:33386 15:08:48.154 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:33386 15:08:48.154 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:33386 15:08:48.169 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:33386 15:08:48.169 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:33386 15:08:48.169 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:33386 15:08:48.169 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:33386 15:08:48.169 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.169 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.169 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.169 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.169 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.169 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.169 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.169 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.169 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.169 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.169 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.169 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.169 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.169 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.169 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.169 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.169 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.169 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.169 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.169 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.169 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.169 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.169 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.169 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.169 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.169 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.169 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.169 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.169 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.169 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.169 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.169 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.169 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.169 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.185 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.185 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.185 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.185 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.185 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.185 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.185 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.185 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.185 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.185 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.185 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.185 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.185 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.185 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.185 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.185 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.185 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.185 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.185 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.185 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.185 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.185 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.185 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.185 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.185 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.185 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.201 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.201 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.201 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.201 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.201 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.201 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.201 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.201 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.201 WARN [DefaultGridRegistry.add] - Proxy 'http://172.30.4.66:33386' is already queued for registration. 15:08:48.201 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=722f40c5-838f-4f6e-bcd5-158c5e85c200, seleniumProtocol=WebDriver, browserName=chrome, maxInstances=5, platformName=WIN10, platform=WIN10} 15:08:48.201 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=722f40c5-838f-4f6e-bcd5-158c5e85c200, seleniumProtocol=WebDriver, browserName=chrome, maxInstances=5, platformName=WIN10, platform=WIN10} 15:08:48.201 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=722f40c5-838f-4f6e-bcd5-158c5e85c200, seleniumProtocol=WebDriver, browserName=chrome, maxInstances=5, platformName=WIN10, platform=WIN10} 15:08:48.201 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=722f40c5-838f-4f6e-bcd5-158c5e85c200, seleniumProtocol=WebDriver, browserName=chrome, maxInstances=5, platformName=WIN10, platform=WIN10} 15:08:48.201 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=722f40c5-838f-4f6e-bcd5-158c5e85c200, seleniumProtocol=WebDriver, browserName=chrome, maxInstances=5, platformName=WIN10, platform=WIN10} 15:08:48.201 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=1c578fca-b1c6-44b3-b18c-1cfd9fde97ea, seleniumProtocol=WebDriver, browserName=chrome, maxInstances=5, platformName=WIN10, platform=WIN10} 15:08:48.201 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=1c578fca-b1c6-44b3-b18c-1cfd9fde97ea, seleniumProtocol=WebDriver, browserName=chrome, maxInstances=5, platformName=WIN10, platform=WIN10} 15:08:48.201 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=1c578fca-b1c6-44b3-b18c-1cfd9fde97ea, seleniumProtocol=WebDriver, browserName=chrome, maxInstances=5, platformName=WIN10, platform=WIN10} 15:08:48.201 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=1c578fca-b1c6-44b3-b18c-1cfd9fde97ea, seleniumProtocol=WebDriver, browserName=chrome, maxInstances=5, platformName=WIN10, platform=WIN10} 15:08:48.216 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=1c578fca-b1c6-44b3-b18c-1cfd9fde97ea, seleniumProtocol=WebDriver, browserName=chrome, maxInstances=5, platformName=WIN10, platform=WIN10} 15:08:49.115 INFO [RequestHandler.process] - Error forwarding the new session Error forwarding the request Failed to connect to /172.30.4.66:47813 org.openqa.grid.internal.exception.NewSessionException: Error forwarding the request Failed to connect to /172.30.4.66:47813         at org.openqa.grid.web.servlet.handler.RequestHandler.forwardNewSessionRequestAndUpdateRegistry(RequestHandler.java:94)         at org.openqa.grid.web.servlet.handler.RequestHandler.process(RequestHandler.java:114)         at org.openqa.grid.web.servlet.DriverServlet.process(DriverServlet.java:85)         at org.openqa.grid.web.servlet.DriverServlet.doPost(DriverServlet.java:69)         at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)         at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)         at org.seleniumhq.jetty9.servlet.ServletHolder.handle(ServletHolder.java:865)         at org.seleniumhq.jetty9.servlet.ServletHandler.doHandle(ServletHandler.java:535)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:146)         at org.seleniumhq.jetty9.security.SecurityHandler.handle(SecurityHandler.java:548)         at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:257)         at org.seleniumhq.jetty9.server.session.SessionHandler.doHandle(SessionHandler.java:1595)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:255)         at org.seleniumhq.jetty9.server.handler.ContextHandler.doHandle(ContextHandler.java:1340)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:203)         at org.seleniumhq.jetty9.servlet.ServletHandler.doScope(ServletHandler.java:473)         at org.seleniumhq.jetty9.server.session.SessionHandler.doScope(SessionHandler.java:1564)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:201)         at org.seleniumhq.jetty9.server.handler.ContextHandler.doScope(ContextHandler.java:1242)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:144)         at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)         at org.seleniumhq.jetty9.server.Server.handle(Server.java:503)         at org.seleniumhq.jetty9.server.HttpChannel.handle(HttpChannel.java:364)         at org.seleniumhq.jetty9.server.HttpConnection.onFillable(HttpConnection.java:260)         at org.seleniumhq.jetty9.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:305)         at org.seleniumhq.jetty9.io.FillInterest.fillable(FillInterest.java:103)         at org.seleniumhq.jetty9.io.ChannelEndPoint$2.run(ChannelEndPoint.java:118)         at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:333)         at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:310)         at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:168)         at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:126)         at org.seleniumhq.jetty9.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:366)         at org.seleniumhq.jetty9.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:765)         at org.seleniumhq.jetty9.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:683)         at java.base/java.lang.Thread.run(Thread.java:834) Caused by: java.net.ConnectException: Failed to connect to /172.30.4.66:47813         at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:247)         at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:165)         at okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:257)         at okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:135)         at okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:114)         at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42)         at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)         at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)         at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)         at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)         at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)         at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)         at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)         at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:126)         at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)         at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)         at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200)         at okhttp3.RealCall.execute(RealCall.java:77)         at org.openqa.selenium.remote.internal.OkHttpClient.execute(OkHttpClient.java:103)         at org.openqa.grid.internal.TestSession.sendRequestToNode(TestSession.java:422)         at org.openqa.grid.internal.TestSession.forward(TestSession.java:229)         at org.openqa.grid.web.servlet.handler.RequestHandler.forwardNewSessionRequestAndUpdateRegistry(RequestHandler.java:91)         ... 35 more Caused by: java.net.ConnectException: Connection refused: connect         at java.base/java.net.PlainSocketImpl.connect0(Native Method)         at java.base/java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:101)         at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399)         at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242)         at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224)         at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403)         at java.base/java.net.Socket.connect(Socket.java:591)         at okhttp3.internal.platform.Platform.connectSocket(Platform.java:129)         at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:245)         ... 56 more 15:08:49.224 INFO [RequestHandler.process] - Error forwarding the new session Error forwarding the request Failed to connect to /172.30.4.66:33386 org.openqa.grid.internal.exception.NewSessionException: Error forwarding the request Failed to connect to /172.30.4.66:33386         at org.openqa.grid.web.servlet.handler.RequestHandler.forwardNewSessionRequestAndUpdateRegistry(RequestHandler.java:94)         at org.openqa.grid.web.servlet.handler.RequestHandler.process(RequestHandler.java:114)         at org.openqa.grid.web.servlet.DriverServlet.process(DriverServlet.java:85)         at org.openqa.grid.web.servlet.DriverServlet.doPost(DriverServlet.java:69)         at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)         at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)         at org.seleniumhq.jetty9.servlet.ServletHolder.handle(ServletHolder.java:865)         at org.seleniumhq.jetty9.servlet.ServletHandler.doHandle(ServletHandler.java:535)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:146)         at org.seleniumhq.jetty9.security.SecurityHandler.handle(SecurityHandler.java:548)         at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:257)         at org.seleniumhq.jetty9.server.session.SessionHandler.doHandle(SessionHandler.java:1595)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:255)         at org.seleniumhq.jetty9.server.handler.ContextHandler.doHandle(ContextHandler.java:1340)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:203)         at org.seleniumhq.jetty9.servlet.ServletHandler.doScope(ServletHandler.java:473)         at org.seleniumhq.jetty9.server.session.SessionHandler.doScope(SessionHandler.java:1564)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:201)         at org.seleniumhq.jetty9.server.handler.ContextHandler.doScope(ContextHandler.java:1242)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:144)         at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)         at org.seleniumhq.jetty9.server.Server.handle(Server.java:503)         at org.seleniumhq.jetty9.server.HttpChannel.handle(HttpChannel.java:364)         at org.seleniumhq.jetty9.server.HttpConnection.onFillable(HttpConnection.java:260)         at org.seleniumhq.jetty9.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:305)         at org.seleniumhq.jetty9.io.FillInterest.fillable(FillInterest.java:103)         at org.seleniumhq.jetty9.io.ChannelEndPoint$2.run(ChannelEndPoint.java:118)         at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:333)         at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:310)         at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:168)         at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:126)         at org.seleniumhq.jetty9.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:366)         at org.seleniumhq.jetty9.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:765)         at org.seleniumhq.jetty9.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:683)         at java.base/java.lang.Thread.run(Thread.java:834) Caused by: java.net.ConnectException: Failed to connect to /172.30.4.66:33386         at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:247)         at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:165)         at okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:257)         at okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:135)         at okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:114)         at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42)         at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)         at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)         at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)         at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)         at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)         at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)         at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)         at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:126)         at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)         at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)         at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200)         at okhttp3.RealCall.execute(RealCall.java:77)         at org.openqa.selenium.remote.internal.OkHttpClient.execute(OkHttpClient.java:103)         at org.openqa.grid.internal.TestSession.sendRequestToNode(TestSession.java:422)         at org.openqa.grid.internal.TestSession.forward(TestSession.java:229)         at org.openqa.grid.web.servlet.handler.RequestHandler.forwardNewSessionRequestAndUpdateRegistry(RequestHandler.java:91)         ... 35 more Caused by: java.net.ConnectException: Connection refused: connect         at java.base/java.net.PlainSocketImpl.connect0(Native Method)         at java.base/java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:101)         at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399)         at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242)         at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224)         at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403)         at java.base/java.net.Socket.connect(Socket.java:591)         at okhttp3.internal.platform.Platform.connectSocket(Platform.java:129)         at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:245)         ... 56 more 15:08:49.224 INFO [RequestHandler.process] - Error forwarding the new session Error forwarding the request Failed to connect to /172.30.4.66:33386 org.openqa.grid.internal.exception.NewSessionException: Error forwarding the request Failed to connect to /172.30.4.66:33386         at org.openqa.grid.web.servlet.handler.RequestHandler.forwardNewSessionRequestAndUpdateRegistry(RequestHandler.java:94)         at org.openqa.grid.web.servlet.handler.RequestHandler.process(RequestHandler.java:114)         at org.openqa.grid.web.servlet.DriverServlet.process(DriverServlet.java:85)         at org.openqa.grid.web.servlet.DriverServlet.doPost(DriverServlet.java:69)         at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)         at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)         at org.seleniumhq.jetty9.servlet.ServletHolder.handle(ServletHolder.java:865)         at org.seleniumhq.jetty9.servlet.ServletHandler.doHandle(ServletHandler.java:535)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:146)         at org.seleniumhq.jetty9.security.SecurityHandler.handle(SecurityHandler.java:548)         at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:257)         at org.seleniumhq.jetty9.server.session.SessionHandler.doHandle(SessionHandler.java:1595)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:255)         at org.seleniumhq.jetty9.server.handler.ContextHandler.doHandle(ContextHandler.java:1340)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:203)         at org.seleniumhq.jetty9.servlet.ServletHandler.doScope(ServletHandler.java:473)         at org.seleniumhq.jetty9.server.session.SessionHandler.doScope(SessionHandler.java:1564)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:201)         at org.seleniumhq.jetty9.server.handler.ContextHandler.doScope(ContextHandler.java:1242)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:144)         at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)         at org.seleniumhq.jetty9.server.Server.handle(Server.java:503)         at org.seleniumhq.jetty9.server.HttpChannel.handle(HttpChannel.java:364)         at org.seleniumhq.jetty9.server.HttpConnection.onFillable(HttpConnection.java:260)         at org.seleniumhq.jetty9.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:305)         at org.seleniumhq.jetty9.io.FillInterest.fillable(FillInterest.java:103)         at org.seleniumhq.jetty9.io.ChannelEndPoint$2.run(ChannelEndPoint.java:118)         at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:333)         at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:310)         at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:168)         at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:126)         at org.seleniumhq.jetty9.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:366)         at org.seleniumhq.jetty9.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:765)         at org.seleniumhq.jetty9.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:683)         at java.base/java.lang.Thread.run(Thread.java:834) Caused by: java.net.ConnectException: Failed to connect to /172.30.4.66:33386         at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:247)         at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:165)         at okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:257)         at okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:135)         at okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:114)         at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42)         at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)         at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)         at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)         at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)         at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)         at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)         at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)         at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:126)         at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)         at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)         at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200)         at okhttp3.RealCall.execute(RealCall.java:77)         at org.openqa.selenium.remote.internal.OkHttpClient.execute(OkHttpClient.java:103)         at org.openqa.grid.internal.TestSession.sendRequestToNode(TestSession.java:422)         at org.openqa.grid.internal.TestSession.forward(TestSession.java:229)         at org.openqa.grid.web.servlet.handler.RequestHandler.forwardNewSessionRequestAndUpdateRegistry(RequestHandler.java:91)         ... 35 more Caused by: java.net.ConnectException: Connection refused: connect         at java.base/java.net.PlainSocketImpl.connect0(Native Method)         at java.base/java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:101)         at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399)         at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242)         at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224)         at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403)         at java.base/java.net.Socket.connect(Socket.java:591)         at okhttp3.internal.platform.Platform.connectSocket(Platform.java:129)         at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:245)         ... 56 more 15:08:49.255 INFO [RequestHandler.process] - Error forwarding the new session Error forwarding the request Failed to connect to /172.30.4.66:33386 org.openqa.grid.internal.exception.NewSessionException: Error forwarding the request Failed to connect to /172.30.4.66:33386         at org.openqa.grid.web.servlet.handler.RequestHandler.forwardNewSessionRequestAndUpdateRegistry(RequestHandler.java:94)         at org.openqa.grid.web.servlet.handler.RequestHandler.process(RequestHandler.java:114)         at org.openqa.grid.web.servlet.DriverServlet.process(DriverServlet.java:85)         at org.openqa.grid.web.servlet.DriverServlet.doPost(DriverServlet.java:69)         at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)         at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)         at org.seleniumhq.jetty9.servlet.ServletHolder.handle(ServletHolder.java:865)         at org.seleniumhq.jetty9.servlet.ServletHandler.doHandle(ServletHandler.java:535)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:146)         at org.seleniumhq.jetty9.security.SecurityHandler.handle(SecurityHandler.java:548)         at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:257)         at org.seleniumhq.jetty9.server.session.SessionHandler.doHandle(SessionHandler.java:1595)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:255)         at org.seleniumhq.jetty9.server.handler.ContextHandler.doHandle(ContextHandler.java:1340)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:203)         at org.seleniumhq.jetty9.servlet.ServletHandler.doScope(ServletHandler.java:473)         at org.seleniumhq.jetty9.server.session.SessionHandler.doScope(SessionHandler.java:1564)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:201)         at org.seleniumhq.jetty9.server.handler.ContextHandler.doScope(ContextHandler.java:1242)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:144)         at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)         at org.seleniumhq.jetty9.server.Server.handle(Server.java:503)         at org.seleniumhq.jetty9.server.HttpChannel.handle(HttpChannel.java:364)         at org.seleniumhq.jetty9.server.HttpConnection.onFillable(HttpConnection.java:260)         at org.seleniumhq.jetty9.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:305)         at org.seleniumhq.jetty9.io.FillInterest.fillable(FillInterest.java:103)         at org.seleniumhq.jetty9.io.ChannelEndPoint$2.run(ChannelEndPoint.java:118)         at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:333)         at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:310)         at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:168)         at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:126)         at org.seleniumhq.jetty9.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:366)         at org.seleniumhq.jetty9.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:765)         at org.seleniumhq.jetty9.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:683)         at java.base/java.lang.Thread.run(Thread.java:834) Caused by: java.net.ConnectException: Failed to connect to /172.30.4.66:33386         at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:247)         at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:165)         at okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:257)         at okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:135)         at okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:114)         at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42)         at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)         at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)         at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)         at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)         at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)         at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)         at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)         at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:126)         at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)         at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)         at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200)         at okhttp3.RealCall.execute(RealCall.java:77)         at org.openqa.selenium.remote.internal.OkHttpClient.execute(OkHttpClient.java:103)         at org.openqa.grid.internal.TestSession.sendRequestToNode(TestSession.java:422)         at org.openqa.grid.internal.TestSession.forward(TestSession.java:229)         at org.openqa.grid.web.servlet.handler.RequestHandler.forwardNewSessionRequestAndUpdateRegistry(RequestHandler.java:91)         ... 35 more Caused by: java.net.ConnectException: Connection refused: connect         at java.base/java.net.PlainSocketImpl.connect0(Native Method)         at java.base/java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:101)         at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399)         at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242)         at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224)         at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403)         at java.base/java.net.Socket.connect(Socket.java:591)         at okhttp3.internal.platform.Platform.connectSocket(Platform.java:129)         at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:245)         ... 56 more 15:08:49.240 INFO [RequestHandler.process] - Error forwarding the new session Error forwarding the request Failed to connect to /172.30.4.66:33386 org.openqa.grid.internal.exception.NewSessionException: Error forwarding the request Failed to connect to /172.30.4.66:33386         at org.openqa.grid.web.servlet.handler.RequestHandler.forwardNewSessionRequestAndUpdateRegistry(RequestHandler.java:94)         at org.openqa.grid.web.servlet.handler.RequestHandler.process(RequestHandler.java:114)         at org.openqa.grid.web.servlet.DriverServlet.process(DriverServlet.java:85)         at org.openqa.grid.web.servlet.DriverServlet.doPost(DriverServlet.java:69)         at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)         at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)         at org.seleniumhq.jetty9.servlet.ServletHolder.handle(ServletHolder.java:865)         at org.seleniumhq.jetty9.servlet.ServletHandler.doHandle(ServletHandler.java:535)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:146)         at org.seleniumhq.jetty9.security.SecurityHandler.handle(SecurityHandler.java:548)         at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:257)         at org.seleniumhq.jetty9.server.session.SessionHandler.doHandle(SessionHandler.java:1595)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:255)         at org.seleniumhq.jetty9.server.handler.ContextHandler.doHandle(ContextHandler.java:1340)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:203)         at org.seleniumhq.jetty9.servlet.ServletHandler.doScope(ServletHandler.java:473)         at org.seleniumhq.jetty9.server.session.SessionHandler.doScope(SessionHandler.java:1564)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:201)         at org.seleniumhq.jetty9.server.handler.ContextHandler.doScope(ContextHandler.java:1242)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:144)         at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)         at org.seleniumhq.jetty9.server.Server.handle(Server.java:503)         at org.seleniumhq.jetty9.server.HttpChannel.handle(HttpChannel.java:364)         at org.seleniumhq.jetty9.server.HttpConnection.onFillable(HttpConnection.java:260)         at org.seleniumhq.jetty9.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:305)         at org.seleniumhq.jetty9.io.FillInterest.fillable(FillInterest.java:103)         at org.seleniumhq.jetty9.io.ChannelEndPoint$2.run(ChannelEndPoint.java:118)         at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:333)         at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:310)         at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:168)         at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:126)         at org.seleniumhq.jetty9.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:366)         at org.seleniumhq.jetty9.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:765)         at org.seleniumhq.jetty9.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:683)         at java.base/java.lang.Thread.run(Thread.java:834) Caused by: java.net.ConnectException: Failed to connect to /172.30.4.66:33386         at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:247)         at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:165)         at okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:257)         at okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:135)         at okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:114)         at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42)         at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)         at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)         at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)         at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)         at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)         at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)         at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)         at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:126)         at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)         at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)         at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200)         at okhttp3.RealCall.execute(RealCall.java:77)         at org.openqa.selenium.remote.internal.OkHttpClient.execute(OkHttpClient.java:103)         at org.openqa.grid.internal.TestSession.sendRequestToNode(TestSession.java:422)         at org.openqa.grid.internal.TestSession.forward(TestSession.java:229)         at org.openqa.grid.web.servlet.handler.RequestHandler.forwardNewSessionRequestAndUpdateRegistry(RequestHandler.java:91)         ... 35 more Caused by: java.net.ConnectException: Connection refused: connect         at java.base/java.net.PlainSocketImpl.connect0(Native Method)         at java.base/java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:101)         at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399)         at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242)         at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224)         at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403)         at java.base/java.net.Socket.connect(Socket.java:591)         at okhttp3.internal.platform.Platform.connectSocket(Platform.java:129)         at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:245)         ... 56 more 15:08:49.240 INFO [RequestHandler.process] - Error forwarding the new session Error forwarding the request Failed to connect to /172.30.4.66:33386 org.openqa.grid.internal.exception.NewSessionException: Error forwarding the request Failed to connect to /172.30.4.66:33386         at org.openqa.grid.web.servlet.handler.RequestHandler.forwardNewSessionRequestAndUpdateRegistry(RequestHandler.java:94)         at org.openqa.grid.web.servlet.handler.RequestHandler.process(RequestHandler.java:114)         at org.openqa.grid.web.servlet.DriverServlet.process(DriverServlet.java:85)         at org.openqa.grid.web.servlet.DriverServlet.doPost(DriverServlet.java:69)         at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)         at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)         at org.seleniumhq.jetty9.servlet.ServletHolder.handle(ServletHolder.java:865)         at org.seleniumhq.jetty9.servlet.ServletHandler.doHandle(ServletHandler.java:535)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:146)         at org.seleniumhq.jetty9.security.SecurityHandler.handle(SecurityHandler.java:548)         at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:257)         at org.seleniumhq.jetty9.server.session.SessionHandler.doHandle(SessionHandler.java:1595)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:255)         at org.seleniumhq.jetty9.server.handler.ContextHandler.doHandle(ContextHandler.java:1340)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:203)         at org.seleniumhq.jetty9.servlet.ServletHandler.doScope(ServletHandler.java:473)         at org.seleniumhq.jetty9.server.session.SessionHandler.doScope(SessionHandler.java:1564)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:201)         at org.seleniumhq.jetty9.server.handler.ContextHandler.doScope(ContextHandler.java:1242)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:144)         at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)         at org.seleniumhq.jetty9.server.Server.handle(Server.java:503)         at org.seleniumhq.jetty9.server.HttpChannel.handle(HttpChannel.java:364)         at org.seleniumhq.jetty9.server.HttpConnection.onFillable(HttpConnection.java:260)         at org.seleniumhq.jetty9.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:305)         at org.seleniumhq.jetty9.io.FillInterest.fillable(FillInterest.java:103)         at org.seleniumhq.jetty9.io.ChannelEndPoint$2.run(ChannelEndPoint.java:118)         at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:333)         at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:310)         at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:168)         at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:126)         at org.seleniumhq.jetty9.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:366)         at org.seleniumhq.jetty9.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:765)         at org.seleniumhq.jetty9.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:683)         at java.base/java.lang.Thread.run(Thread.java:834) Caused by: java.net.ConnectException: Failed to connect to /172.30.4.66:33386         at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:247)         at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:165)         at okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:257)         at okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:135)         at okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:114)         at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42)         at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)         at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)         at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)         at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)         at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)         at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)         at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)         at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:126)         at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)         at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)         at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200)         at okhttp3.RealCall.execute(RealCall.java:77)         at org.openqa.selenium.remote.internal.OkHttpClient.execute(OkHttpClient.java:103)         at org.openqa.grid.internal.TestSession.sendRequestToNode(TestSession.java:422)         at org.openqa.grid.internal.TestSession.forward(TestSession.java:229)         at org.openqa.grid.web.servlet.handler.RequestHandler.forwardNewSessionRequestAndUpdateRegistry(RequestHandler.java:91)         ... 35 more Caused by: java.net.ConnectException: Connection refused: connect         at java.base/java.net.PlainSocketImpl.connect0(Native Method)         at java.base/java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:101)         at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399)         at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242)         at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224)         at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403)         at java.base/java.net.Socket.connect(Socket.java:591)         at okhttp3.internal.platform.Platform.connectSocket(Platform.java:129)         at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:245)         ... 56 more 15:08:54.094 INFO [DefaultRemoteProxy.onEvent] - Unregistering the node http://172.30.4.66:47813 because it's been down for 2052675 milliseconds 15:08:54.094 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:47813 15:09:00.284 INFO [DefaultRemoteProxy.onEvent] - Marking the node http://172.30.4.66:33386 as down: cannot reach the node for 2 tries 15:09:13.637 INFO [DefaultGridRegistry.add] - Registered a node http://172.30.4.66:39729 15:09:13.637 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:39729 15:09:13.660 INFO [ActiveTestSessions.updateReason] - Removed a session that had not yet assigned an external key 723c08a8-4a8a-4696-ab50-a2a27c672403, indicates failure in session creation PROXY_REREGISTRATION 15:09:13.661 INFO [ActiveTestSessions.updateReason] - Removed a session that had not yet assigned an external key 61416c3c-f392-426c-9b36-0c15c59effda, indicates failure in session creation PROXY_REREGISTRATION 15:09:13.662 INFO [ActiveTestSessions.updateReason] - Removed a session that had not yet assigned an external key b29d29fd-7260-424d-b626-e929bcc02ecf, indicates failure in session creation PROXY_REREGISTRATION 15:09:13.662 INFO [ActiveTestSessions.updateReason] - Removed a session that had not yet assigned an external key dbe55ee6-2783-4d7d-9aaa-7bb9f4c81d3d, indicates failure in session creation PROXY_REREGISTRATION 15:09:13.663 INFO [ActiveTestSessions.updateReason] - Removed a session that had not yet assigned an external key 9d4ce54c-8328-466e-b023-40b807451e17, indicates failure in session creation PROXY_REREGISTRATION 15:09:16.348 INFO [RequestHandler.process] - Error forwarding the new session Error forwarding the request org.seleniumhq.jetty9.io.EofException org.openqa.grid.internal.exception.NewSessionException: Error forwarding the request org.seleniumhq.jetty9.io.EofException         at org.openqa.grid.web.servlet.handler.RequestHandler.forwardNewSessionRequestAndUpdateRegistry(RequestHandler.java:94)         at org.openqa.grid.web.servlet.handler.RequestHandler.process(RequestHandler.java:114)         at org.openqa.grid.web.servlet.DriverServlet.process(DriverServlet.java:85)         at org.openqa.grid.web.servlet.DriverServlet.doPost(DriverServlet.java:69)         at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)         at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)         at org.seleniumhq.jetty9.servlet.ServletHolder.handle(ServletHolder.java:865)         at org.seleniumhq.jetty9.servlet.ServletHandler.doHandle(ServletHandler.java:535)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:146)         at org.seleniumhq.jetty9.security.SecurityHandler.handle(SecurityHandler.java:548)         at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:257)         at org.seleniumhq.jetty9.server.session.SessionHandler.doHandle(SessionHandler.java:1595)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:255)         at org.seleniumhq.jetty9.server.handler.ContextHandler.doHandle(ContextHandler.java:1340)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:203)         at org.seleniumhq.jetty9.servlet.ServletHandler.doScope(ServletHandler.java:473)         at org.seleniumhq.jetty9.server.session.SessionHandler.doScope(SessionHandler.java:1564)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:201)         at org.seleniumhq.jetty9.server.handler.ContextHandler.doScope(ContextHandler.java:1242)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:144)         at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)         at org.seleniumhq.jetty9.server.Server.handle(Server.java:503)         at org.seleniumhq.jetty9.server.HttpChannel.handle(HttpChannel.java:364)         at org.seleniumhq.jetty9.server.HttpConnection.onFillable(HttpConnection.java:260)         at org.seleniumhq.jetty9.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:305)         at org.seleniumhq.jetty9.io.FillInterest.fillable(FillInterest.java:103)         at org.seleniumhq.jetty9.io.ChannelEndPoint$2.run(ChannelEndPoint.java:118)         at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:333)         at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:310)         at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:168)         at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:126)         at org.seleniumhq.jetty9.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:366)         at org.seleniumhq.jetty9.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:765)         at org.seleniumhq.jetty9.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:683)         at java.base/java.lang.Thread.run(Thread.java:834) Caused by: org.openqa.grid.common.exception.ClientGoneException: org.seleniumhq.jetty9.io.EofException         at org.openqa.grid.internal.TestSession.writeRawBody(TestSession.java:484)         at org.openqa.grid.internal.TestSession.forward(TestSession.java:278)         at org.openqa.grid.web.servlet.handler.RequestHandler.forwardNewSessionRequestAndUpdateRegistry(RequestHandler.java:91)         ... 35 more Caused by: org.seleniumhq.jetty9.io.EofException         at org.seleniumhq.jetty9.io.ChannelEndPoint.flush(ChannelEndPoint.java:286)         at org.seleniumhq.jetty9.io.WriteFlusher.flush(WriteFlusher.java:393)         at org.seleniumhq.jetty9.io.WriteFlusher.write(WriteFlusher.java:277)         at org.seleniumhq.jetty9.io.AbstractEndPoint.write(AbstractEndPoint.java:380)         at org.seleniumhq.jetty9.server.HttpConnection$SendCallback.process(HttpConnection.java:802)         at org.seleniumhq.jetty9.util.IteratingCallback.processing(IteratingCallback.java:241)         at org.seleniumhq.jetty9.util.IteratingCallback.iterate(IteratingCallback.java:224)         at org.seleniumhq.jetty9.server.HttpConnection.send(HttpConnection.java:538)         at org.seleniumhq.jetty9.server.HttpChannel.sendResponse(HttpChannel.java:831)         at org.seleniumhq.jetty9.server.HttpChannel.write(HttpChannel.java:887)         at org.seleniumhq.jetty9.server.HttpOutput.write(HttpOutput.java:239)         at org.seleniumhq.jetty9.server.HttpOutput.write(HttpOutput.java:215)         at org.seleniumhq.jetty9.server.HttpOutput.write(HttpOutput.java:540)         at java.base/java.io.OutputStream.write(OutputStream.java:122)         at org.openqa.grid.internal.TestSession.writeRawBody(TestSession.java:482)         ... 37 more Caused by: java.io.IOException: An existing connection was forcibly closed by the remote host         at java.base/sun.nio.ch.SocketDispatcher.writev0(Native Method)         at java.base/sun.nio.ch.SocketDispatcher.writev(SocketDispatcher.java:55)         at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:182)         at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:130)         at java.base/sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:496)         at org.seleniumhq.jetty9.io.ChannelEndPoint.flush(ChannelEndPoint.java:266)         ... 51 more 15:09:16.348 INFO [RequestHandler.process] - Error forwarding the new session Error forwarding the request org.seleniumhq.jetty9.io.EofException org.openqa.grid.internal.exception.NewSessionException: Error forwarding the request org.seleniumhq.jetty9.io.EofException         at org.openqa.grid.web.servlet.handler.RequestHandler.forwardNewSessionRequestAndUpdateRegistry(RequestHandler.java:94)         at org.openqa.grid.web.servlet.handler.RequestHandler.process(RequestHandler.java:114)         at org.openqa.grid.web.servlet.DriverServlet.process(DriverServlet.java:85)         at org.openqa.grid.web.servlet.DriverServlet.doPost(DriverServlet.java:69)         at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)         at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)         at org.seleniumhq.jetty9.servlet.ServletHolder.handle(ServletHolder.java:865)         at org.seleniumhq.jetty9.servlet.ServletHandler.doHandle(ServletHandler.java:535)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:146)         at org.seleniumhq.jetty9.security.SecurityHandler.handle(SecurityHandler.java:548)         at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:257)         at org.seleniumhq.jetty9.server.session.SessionHandler.doHandle(SessionHandler.java:1595)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:255)         at org.seleniumhq.jetty9.server.handler.ContextHandler.doHandle(ContextHandler.java:1340)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:203)         at org.seleniumhq.jetty9.servlet.ServletHandler.doScope(ServletHandler.java:473)         at org.seleniumhq.jetty9.server.session.SessionHandler.doScope(SessionHandler.java:1564)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:201)         at org.seleniumhq.jetty9.server.handler.ContextHandler.doScope(ContextHandler.java:1242)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:144)         at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)         at org.seleniumhq.jetty9.server.Server.handle(Server.java:503)         at org.seleniumhq.jetty9.server.HttpChannel.handle(HttpChannel.java:364)         at org.seleniumhq.jetty9.server.HttpConnection.onFillable(HttpConnection.java:260)         at org.seleniumhq.jetty9.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:305)         at org.seleniumhq.jetty9.io.FillInterest.fillable(FillInterest.java:103)         at org.seleniumhq.jetty9.io.ChannelEndPoint$2.run(ChannelEndPoint.java:118)         at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:333)         at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:310)         at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:168)         at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:126)         at org.seleniumhq.jetty9.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:366)         at org.seleniumhq.jetty9.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:765)         at org.seleniumhq.jetty9.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:683)         at java.base/java.lang.Thread.run(Thread.java:834) Caused by: org.openqa.grid.common.exception.ClientGoneException: org.seleniumhq.jetty9.io.EofException         at org.openqa.grid.internal.TestSession.writeRawBody(TestSession.java:484)         at org.openqa.grid.internal.TestSession.forward(TestSession.java:278)         at org.openqa.grid.web.servlet.handler.RequestHandler.forwardNewSessionRequestAndUpdateRegistry(RequestHandler.java:91)         ... 35 more Caused by: org.seleniumhq.jetty9.io.EofException         at org.seleniumhq.jetty9.io.ChannelEndPoint.flush(ChannelEndPoint.java:286)         at org.seleniumhq.jetty9.io.WriteFlusher.flush(WriteFlusher.java:393)         at org.seleniumhq.jetty9.io.WriteFlusher.write(WriteFlusher.java:277)         at org.seleniumhq.jetty9.io.AbstractEndPoint.write(AbstractEndPoint.java:380)         at org.seleniumhq.jetty9.server.HttpConnection$SendCallback.process(HttpConnection.java:802)         at org.seleniumhq.jetty9.util.IteratingCallback.processing(IteratingCallback.java:241)         at org.seleniumhq.jetty9.util.IteratingCallback.iterate(IteratingCallback.java:224)         at org.seleniumhq.jetty9.server.HttpConnection.send(HttpConnection.java:538)         at org.seleniumhq.jetty9.server.HttpChannel.sendResponse(HttpChannel.java:831)         at org.seleniumhq.jetty9.server.HttpChannel.write(HttpChannel.java:887)         at org.seleniumhq.jetty9.server.HttpOutput.write(HttpOutput.java:239)         at org.seleniumhq.jetty9.server.HttpOutput.write(HttpOutput.java:215)         at org.seleniumhq.jetty9.server.HttpOutput.write(HttpOutput.java:540)         at java.base/java.io.OutputStream.write(OutputStream.java:122)         at org.openqa.grid.internal.TestSession.writeRawBody(TestSession.java:482)         ... 37 more Caused by: java.io.IOException: An existing connection was forcibly closed by the remote host         at java.base/sun.nio.ch.SocketDispatcher.writev0(Native Method)         at java.base/sun.nio.ch.SocketDispatcher.writev(SocketDispatcher.java:55)         at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:182)         at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:130)         at java.base/sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:496)         at org.seleniumhq.jetty9.io.ChannelEndPoint.flush(ChannelEndPoint.java:266)         ... 51 more 15:09:16.426 INFO [RequestHandler.process] - Error forwarding the new session Error forwarding the request org.seleniumhq.jetty9.io.EofException org.openqa.grid.internal.exception.NewSessionException: Error forwarding the request org.seleniumhq.jetty9.io.EofException         at org.openqa.grid.web.servlet.handler.RequestHandler.forwardNewSessionRequestAndUpdateRegistry(RequestHandler.java:94)         at org.openqa.grid.web.servlet.handler.RequestHandler.process(RequestHandler.java:114)         at org.openqa.grid.web.servlet.DriverServlet.process(DriverServlet.java:85)         at org.openqa.grid.web.servlet.DriverServlet.doPost(DriverServlet.java:69)         at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)         at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)         at org.seleniumhq.jetty9.servlet.ServletHolder.handle(ServletHolder.java:865)         at org.seleniumhq.jetty9.servlet.ServletHandler.doHandle(ServletHandler.java:535)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:146)         at org.seleniumhq.jetty9.security.SecurityHandler.handle(SecurityHandler.java:548)         at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:257)         at org.seleniumhq.jetty9.server.session.SessionHandler.doHandle(SessionHandler.java:1595)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:255)         at org.seleniumhq.jetty9.server.handler.ContextHandler.doHandle(ContextHandler.java:1340)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:203)         at org.seleniumhq.jetty9.servlet.ServletHandler.doScope(ServletHandler.java:473)         at org.seleniumhq.jetty9.server.session.SessionHandler.doScope(SessionHandler.java:1564)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:201)         at org.seleniumhq.jetty9.server.handler.ContextHandler.doScope(ContextHandler.java:1242)         at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:144)         at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)         at org.seleniumhq.jetty9.server.Server.handle(Server.java:503)         at org.seleniumhq.jetty9.server.HttpChannel.handle(HttpChannel.java:364)         at org.seleniumhq.jetty9.server.HttpConnection.onFillable(HttpConnection.java:260)         at org.seleniumhq.jetty9.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:305)         at org.seleniumhq.jetty9.io.FillInterest.fillable(FillInterest.java:103)         at org.seleniumhq.jetty9.io.ChannelEndPoint$2.run(ChannelEndPoint.java:118)         at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:333)         at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:310)         at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:168)         at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:126)         at org.seleniumhq.jetty9.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:366)         at org.seleniumhq.jetty9.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:765)         at org.seleniumhq.jetty9.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:683)         at java.base/java.lang.Thread.run(Thread.java:834) Caused by: org.openqa.grid.common.exception.ClientGoneException: org.seleniumhq.jetty9.io.EofException         at org.openqa.grid.internal.TestSession.writeRawBody(TestSession.java:484)         at org.openqa.grid.internal.TestSession.forward(TestSession.java:278)         at org.openqa.grid.web.servlet.handler.RequestHandler.forwardNewSessionRequestAndUpdateRegistry(RequestHandler.java:91)         ... 35 more Caused by: org.seleniumhq.jetty9.io.EofException         at org.seleniumhq.jetty9.io.ChannelEndPoint.flush(ChannelEndPoint.java:286)         at org.seleniumhq.jetty9.io.WriteFlusher.flush(WriteFlusher.java:393)         at org.seleniumhq.jetty9.io.WriteFlusher.write(WriteFlusher.java:277)         at org.seleniumhq.jetty9.io.AbstractEndPoint.write(AbstractEndPoint.java:380)         at org.seleniumhq.jetty9.server.HttpConnection$SendCallback.process(HttpConnection.java:802)         at org.seleniumhq.jetty9.util.IteratingCallback.processing(IteratingCallback.java:241)         at org.seleniumhq.jetty9.util.IteratingCallback.iterate(IteratingCallback.java:224)         at org.seleniumhq.jetty9.server.HttpConnection.send(HttpConnection.java:538)         at org.seleniumhq.jetty9.server.HttpChannel.sendResponse(HttpChannel.java:831)         at org.seleniumhq.jetty9.server.HttpChannel.write(HttpChannel.java:887)         at org.seleniumhq.jetty9.server.HttpOutput.write(HttpOutput.java:239)         at org.seleniumhq.jetty9.server.HttpOutput.write(HttpOutput.java:215)         at org.seleniumhq.jetty9.server.HttpOutput.write(HttpOutput.java:540)         at java.base/java.io.OutputStream.write(OutputStream.java:122)         at org.openqa.grid.internal.TestSession.writeRawBody(TestSession.java:482)         ... 37 more Caused by: java.io.IOException: An existing connection was forcibly closed by the remote host         at java.base/sun.nio.ch.SocketDispatcher.writev0(Native Method)         at java.base/sun.nio.ch.SocketDispatcher.writev(SocketDispatcher.java:55)         at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:182)         at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:130)         at java.base/sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:496)         at org.seleniumhq.jetty9.io.ChannelEndPoint.flush(ChannelEndPoint.java:266)         ... 51 more 15:10:00.599 INFO [DefaultRemoteProxy.onEvent] - Unregistering the node http://172.30.4.66:33386 because it's been down for 60315 milliseconds 15:10:00.600 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.30.4.66:33386  Node log: 15:08:48.279 INFO [ActiveSessionFactory.apply] - Capabilities are: {   ""browserName"": ""chrome"",   ""chrome.binary"": ""C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe"",   ""goog:chromeOptions"": {     ""args"": [     ],     ""extensions"": [     ]   },   ""version"": """" } 15:08:48.279 INFO [ActiveSessionFactory.apply] - Capabilities are: {   ""browserName"": ""chrome"",   ""chrome.binary"": ""C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe"",   ""goog:chromeOptions"": {     ""args"": [     ],     ""extensions"": [     ]   },   ""version"": """" } 15:08:48.279 INFO [ActiveSessionFactory.apply] - Capabilities are: {   ""browserName"": ""chrome"",   ""chrome.binary"": ""C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe"",   ""goog:chromeOptions"": {     ""args"": [     ],     ""extensions"": [     ]   },   ""version"": """" } 15:09:13.528 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) 15:08:48.279 INFO [ActiveSessionFactory.apply] - Capabilities are: {   ""browserName"": ""chrome"",   ""chrome.binary"": ""C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe"",   ""goog:chromeOptions"": {     ""args"": [     ],     ""extensions"": [     ]   },   ""version"": """" } 15:08:48.279 INFO [ActiveSessionFactory.apply] - Capabilities are: {   ""browserName"": ""chrome"",   ""chrome.binary"": ""C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe"",   ""goog:chromeOptions"": {     ""args"": [     ],     ""extensions"": [     ]   },   ""version"": """" } 15:09:13.528 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) 15:09:13.528 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) 15:09:13.528 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) 15:09:13.528 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) 15:09:13.637 INFO [SelfRegisteringRemote.registerToHub] - The node is registered to the hub and ready to use Starting ChromeDriver 2.46.628402 (536cd7adbad73a3783fdc2cab92ab2ba7ec361e1) on port 28240 Only local connections are allowed. Please protect ports used by ChromeDriver and related test frameworks to prevent access by malicious code. Starting ChromeDriver 2.46.628402 (536cd7adbad73a3783fdc2cab92ab2ba7ec361e1) on port 10056 Only local connections are allowed. Please protect ports used by ChromeDriver and related test frameworks to prevent access by malicious code. Starting ChromeDriver 2.46.628402 (536cd7adbad73a3783fdc2cab92ab2ba7ec361e1) on port 37250 Only local connections are allowed. Please protect ports used by ChromeDriver and related test frameworks to prevent access by malicious code. Starting ChromeDriver 2.46.628402 (536cd7adbad73a3783fdc2cab92ab2ba7ec361e1) on port 26803 Only local connections are allowed. Please protect ports used by ChromeDriver and related test frameworks to prevent access by malicious code. Starting ChromeDriver 2.46.628402 (536cd7adbad73a3783fdc2cab92ab2ba7ec361e1) on port 30513 Only local connections are allowed. Please protect ports used by ChromeDriver and related test frameworks to prevent access by malicious code. 15:09:16.163 INFO [ProtocolHandshake.createSession] - Detected dialect: OSS 15:09:16.279 INFO [ProtocolHandshake.createSession] - Detected dialect: OSS 15:09:16.289 INFO [ProtocolHandshake.createSession] - Detected dialect: OSS 15:09:16.348 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session adbe674929b7ddcb0e5fed514a4991cd (org.openqa.selenium.chrome.ChromeDriverService) 15:09:16.348 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session 9e1b868f53d749f838f898c7fa78f4c5 (org.openqa.selenium.chrome.ChromeDriverService) 15:09:16.348 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session 3d9a7dbdcd2583469f33991756718490 (org.openqa.selenium.chrome.ChromeDriverService) 15:09:16.394 INFO [ProtocolHandshake.createSession] - Detected dialect: OSS 15:09:16.426 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session 4405e5edff9d5106cfea02863079c934 (org.openqa.selenium.chrome.ChromeDriverService) 15:09:16.441 INFO [ProtocolHandshake.createSession] - Detected dialect: OSS 15:09:16.473 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session cbefd559d32857c386ca4b4e546e399b (org.openqa.selenium.chrome.ChromeDriverService)  Test script @Test   public void test() throws MalformedURLException {     WebDriver driver;          DesiredCapabilities capabilities = DesiredCapabilities.chrome();     ChromeOptions options = new ChromeOptions();     capabilities.setCapability(""chrome.binary"", ""C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe"");     capabilities.setCapability(ChromeOptions.CAPABILITY, options);      driver= new RemoteWebDriver(new URL(""http://localhost:4444/wd/hub""), capabilities);          driver.get(""https://www.google.com"");          WebElement element = driver.findElement(By.name(""q""));     element.sendKeys(""Cheese!\n""); // send also a ""\n""     element.submit();      // wait until the google page shows the result     WebElement myDynamicElement = (new WebDriverWait(driver, 10))               .until(ExpectedConditions.presenceOfElementLocated(By.id(""resultStats"")));      List findElements = driver.findElements(By.xpath(""//*[@id='rso']//h3/a""));      // this are all the links you like to visit     for (WebElement webElement : findElements)     {         System.out.println(webElement.getAttribute(""href""));     }     driver.quit();       }  Actual Session keeps getting disconnected. Test ng failure message below: org.openqa.selenium.WebDriverException: Session [cbefd559d32857c386ca4b4e546e399b] not available and is not among the last 1000 terminated sessions. Active sessions are[] Command duration or timeout: 0 milliseconds 	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214) 	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166) 	at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40) 	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80) 	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552) 	at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:277) 	at io.github.bonigarcia.wdm.test.GridTest.test(GridTest.java:33) 	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) 	at java.base/java.lang.Thread.run(Thread.java:834) Caused by: org.openqa.selenium.WebDriverException: Session [cbefd559d32857c386ca4b4e546e399b] not available and is not among the last 1000 terminated sessions. Active sessions are[] Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03' System info: host: 'CREDMDPCSGAN', ip: '172.30.4.66', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.2' Driver info: driver.version: unknown 	at org.openqa.grid.internal.ActiveTestSessions.getExistingSession(ActiveTestSessions.java:120) 	at org.openqa.grid.internal.DefaultGridRegistry.getExistingSession(DefaultGridRegistry.java:387) 	at org.openqa.grid.web.servlet.handler.RequestHandler.getSession(RequestHandler.java:241) 	at org.openqa.grid.web.servlet.handler.RequestHandler.process(RequestHandler.java:123) 	at org.openqa.grid.web.servlet.DriverServlet.process(DriverServlet.java:85) 	at org.openqa.grid.web.servlet.DriverServlet.doPost(DriverServlet.java:69) 	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707) 	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790) 	at org.seleniumhq.jetty9.servlet.ServletHolder.handle(ServletHolder.java:865) 	at org.seleniumhq.jetty9.servlet.ServletHandler.doHandle(ServletHandler.java:535) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:146) 	at org.seleniumhq.jetty9.security.SecurityHandler.handle(SecurityHandler.java:548) 	at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:257) 	at org.seleniumhq.jetty9.server.session.SessionHandler.doHandle(SessionHandler.java:1595) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:255) 	at org.seleniumhq.jetty9.server.handler.ContextHandler.doHandle(ContextHandler.java:1340) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:203) 	at org.seleniumhq.jetty9.servlet.ServletHandler.doScope(ServletHandler.java:473) 	at org.seleniumhq.jetty9.server.session.SessionHandler.doScope(SessionHandler.java:1564) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:201) 	at org.seleniumhq.jetty9.server.handler.ContextHandler.doScope(ContextHandler.java:1242) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:144) 	at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132) 	at org.seleniumhq.jetty9.server.Server.handle(Server.java:503) 	at org.seleniumhq.jetty9.server.HttpChannel.handle(HttpChannel.java:364) 	at org.seleniumhq.jetty9.server.HttpConnection.onFillable(HttpConnection.java:260) 	at org.seleniumhq.jetty9.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:305) 	at org.seleniumhq.jetty9.io.FillInterest.fillable(FillInterest.java:103) 	at org.seleniumhq.jetty9.io.ChannelEndPoint$2.run(ChannelEndPoint.java:118) 	at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:333) 	at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:310) 	at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:168) 	at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:126) 	at org.seleniumhq.jetty9.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:366) 	at org.seleniumhq.jetty9.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:765) 	at org.seleniumhq.jetty9.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:683) 	at java.lang.Thread.run(Thread.java:834)  Expected Session should persist and script should get executed.","closed","R-awaiting answer,","formynet","2019-03-05T20:23:31Z","2019-08-14T19:09:47Z"
"","7211","Safari Element Identification Issue","Detailed steps to reproduce the behavior:  We have a login page where we have username(textbox), password(textbox) and login button While trying to enter username and password at some instances of time password field is also getting written to username field itself. Steps: 1) Clear username field 2) send username value to username field 3)clear password field 4)send password value to password field 5) Click login button  It occurs very randomly. If we try to rerun the failed case again we were not able to reproduce this issue. Could you please let us know the reason for this issue.  We had close to 700 cases failed because of this issue out of 3000 cases.  ## Expected behavior  Elements should be interacted properly  ## Environment  OS: iOS 10.12.6 Browser: Safari  Browser version:  Browser Driver version: 12.1 Selenium Grid version (if applicable): 3.11.0","closed","R-awaiting answer,","rajkumar-cp","2019-05-16T08:28:59Z","2019-08-14T20:09:36Z"
"","6958","Chrome session goes stale after opening a link in a new tab/window","Description: Chrome session goes stale after opening a link in a new tab/window. Chrome browser tries to navigate to URL, but makes automation go stale in the process. No html content gets loaded. It looks like chrome is initializing the navigation, but then stopping to perform the navigation.  Development language: C# OS: Windows 10 1809 Browser: Chrome Version 72.0.3626.109 (Official Build) (64-bit) Versions: Selenium: 3.141.0 selenium.support: 3.141.0 selenium.chrome.webdriver: 2.45.0 Nunit: 3.12.0 Specflow: 2.4.1 Specflow.Nunit: 2.4.1  Steps performed: - navigate to chip.de - click on the facebook link (new tab with facebook link opens) - switch to new tab  Expected behavior: Tab navigates to URL. Web Content gets displayed.  Actual behavior: Tab tries to initialize navigation but fails without any error causing test automation to go stale.   Code snippet:  public static  ChromeOptions options(string lang) {  ChromeOptions option = new ChromeOptions();  option.AddArgument(""--start-maximised"");  option.AddArguments(""-lang="" + lang);  return option; } driver = new ChromeDriver(options(""en-us""));  driver.Navigate().GoToUrl(""https://www.chip.de/"");   public static void ClickElementJS() {  IJavaScriptExecutor exe = (IJavaScriptExecutor)driver;  exe.ExecuteScript(""arguments[0].click();"", driver.FindElement(By.ClassName(""Social__Link Social__Link--Facebook""))); } ClickElementJS();   public static bool SwitchWindow(string baseWindow)         {             var availableWindows = new List(driver.WindowHandles);              foreach (string w in availableWindows)             {                 driver.SwitchTo().Window(w);                                  if (w != baseWindow)                     return true;             }             return false;         }  SwitchWindow(baseWindow);  public static bool WaitUntilElementIsVisible(int time, string element)         {             try             {                 new WebDriverWait(driver, TimeSpan.FromSeconds(time))                     .Until(d => d.FindElement(By.TagName(element)));                 visible = true;             }             catch (Exception)             {                 visible = false;             }              return visible;         }   bool divvisible = WaitUntilElementIsVisible(5, ""div"");             if (divvisible is false)             {                 DriverCommands.Driver.Navigate().Refresh();             }  new WebDriverWait(driver, TimeSpan.FromSeconds(10))                 .Until(d => d.Url.ToString().Contains(""https://www.facebook.com/CHIP""));   Comments: this issue is not happening when I am running it in debug mode.","closed","","miksch123","2019-02-21T14:04:01Z","2019-08-14T21:09:45Z"
"","7596","Cannot Set Cookies on Chrome Browser 77 and ChromeDriver 77.0.3865.40","Description: Cannot set Cookies.  The Error thrown on running the test: ``` UnableToSetCookieError: unable to set cookie   (Session info: chrome=77.0.3865.75)     at Object.throwDecodedError (/usr/app/node_modules/selenium-webdriver/lib/error.js:550:15)     at parseHttpResponse (/usr/app/node_modules/selenium-webdriver/lib/http.js:563:13)     at Executor.execute (/usr/app/node_modules/selenium-webdriver/lib/http.js:489:26)     at processTicksAndRejections (internal/process/task_queues.js:93:5)     at async thenableWebDriverProxy.execute (/usr/app/node_modules/selenium-webdriver/lib/webdriver.js:699:17)     at async loginWithRoles (/usr/app/features/support/pages/common.js:16:3) ```   ## Expected behavior  The cookies should be set.   ## Test script or set of commands reproducing this issue  ``` await driver.get('http://web-server:3000')   await driver.manage().addCookie({     name: 'token',     value: tokenValue,     httpOnly: true,     domain: 'web-server',     path: '/',     secure: false   })   await driver.get('http://web-server:3000')   return driver.manage().window().setRect({width: 1920, height: 3000}) ```  ## Environment  OS: macOS:10.12 and Linux  Browser: Chrome Browser version: 77.0.3865.90 Browser Driver version: ChromeDriver 77.0.3865.40 Language Bindings version: Javascript selenium-webdriver version: 4.0.0-alpha.5","closed","C-nodejs,","deepticake","2019-09-24T10:16:49Z","2019-11-06T14:07:48Z"
"","7598","OpenQA.Selenium.WebDriverException : javascript error: Promise.resolve is not a function (Session info: chrome=77.0.3865.90)","Description: Unable to Find element by Id: This code works with Selenium.WebDriver.ChromeDriver Version 76:  var myUrl = ""https://loginpage""; driver.Navigate().GoToUrl(myUrl); var a = driver.FindElements(By.Id(""username""));  The Error thrown on running the test: Message:      OpenQA.Selenium.WebDriverException : javascript error: Promise.resolve is not a function       (Session info: chrome=77.0.3865.90)   Stack Trace:      RemoteWebDriver.UnpackAndThrowOnError(Response errorResponse)     RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)     RemoteWebDriver.FindElements(String mechanism, String value)  Expected behavior: javascript error: Promise.resolve should not appear  Environment: Browser: Chrome Browser version: 77.0.3865.90 Browser Driver version: ChromeDriver 77.0.3865.4000","closed","","nskliarov","2019-09-25T08:49:35Z","2019-10-26T16:45:12Z"
"","7617","why ? Deprecated Class LegacyTouchSequence","Deprecated. This class is strongly deprecated and will be removed once Google's Chrome and Microsoft's Edge browsers support the new action sequence API.  What that  mean? can't use LegacyTouchSequence? and is driver.input do not public method about touch?  how i can moblie touch for browser? thks","closed","","jiriyao","2019-09-29T09:13:17Z","2019-10-29T09:45:06Z"
"","7438","Insecure certificate in mozialla firefox","Dear Team ,  While navigating URL in mozialla firefox driver with Selenium C# webdriver , I am getting SSL /potential risk certificate before launch browser successfully.Could anyone assist me for ignoring this ssl certificate issue and launch browesr successfully?  Code :-  FirefoxDriverService service = FirefoxDriverService.CreateDefaultService(ConfigurationManager.AppSettings[""GekoDriverPath""], ""geckodriver.exe"");                  service.FirefoxBinaryPath = @""C:\Program Files\Mozilla Firefox\firefox.exe"";                  FirefoxProfile fp = new FirefoxProfile();                 fp.SetPreference(""dom.webnotifications.enabled"", false);                 fp.AcceptUntrustedCertificates = true;                 fp.AssumeUntrustedCertificateIssuer = false;                 FirefoxOptions options = new FirefoxOptions();                 options.Profile = fp;                 this.Driver = new FirefoxDriver(service, options, TimeSpan.FromSeconds(20));                  this.Driver.Manage().Window.Maximize();  os DETAIL :- Windows 10  Selenium Version: selenium==3.14  Browser: Firefox  Browser Version: 68.0.1 (64-bit)  pROGRAMMING LANGUAGE :- sELENIUM c# Expected Behavior - The SSL exceptions should be handled by Selenium Web driver. (We are using c#). Actual Behavior - The web driver stops at SSL certificate error page ![selenium firefox certificate error](https://user-images.githubusercontent.com/51488902/62005879-37ec1280-b157-11e9-8f1d-ecfcc926eba8.jpg) ![selenium firefox certificate error](https://user-images.githubusercontent.com/51488902/62005890-54884a80-b157-11e9-8040-e9d884c4d65e.jpg) ![selenium firefox certificate error1](https://user-images.githubusercontent.com/51488902/62005891-5520e100-b157-11e9-834e-4360732c5f62.JPG)","closed","","amitstudent2006","2019-07-28T11:24:37Z","2019-08-28T01:09:34Z"
"","7135","Removes old exception and dead code from py lib.","Dead code related to an old exception that is not used anymore were still present in error handler of webdriver.  Fixes #7134       - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/7135)","closed","","alanverresen","2019-04-24T13:56:56Z","2019-04-24T14:06:53Z"
"","6893","Cookie is Serializable, but ReturnedCookie isn't","Currently, you are able to de-serialize cookies, because Cookie is serializable. However, you arený able to actually serialize the cookies, as ReturnedCookie is returned, and ReturnedCookie is not serializable.  ## To Reproduce ``` FileStream fs = new FileStream(""Cookies.dat"", FileMode.Create); BinaryFormatter formatter = new BinaryFormatter(); formatter.Serialize(fs, driver.Manage().Cookies.AllCookies); fs.close(); ```  ## Error OpenQA.Selenium.Internal.ReturnedCookie in assembly WebDriver, Version=3.141.0.0, Culture=neutral, PublicKeyToken=null is not marked as Serializable.","closed","I-stale,","Viserius","2019-01-29T12:13:11Z","2022-01-20T00:07:20Z"
"","7163","Allow attaching an existing Internet Explorer","Currently, there is no way to use/attach an Internet Explorer started outside of Selenium This PR aims at adding this feature.  This attachment can be done on new session creation where the capability `attachExistingBrowser` is set to `true` in ieOptions. Then, driver looks at existing Internet Explorer windows, created programmatically (i.e: the same way IEDrvierServer creates browser). If none is found, behaviour is the same as if IEDriverServer cannot create a browser. If several Internet Explorer are found, it maps to the first one. Drawback of this approach is that we can only have one IE at the same time.  To use attaching instead of new browser creation, I do:  	((Map) options.getCapability(""se:ieOptions"")).put(""attachExistingBrowser"", true);  It may be improved by modifying selenium clients   	modified:   iedriver/BrowserFactory.cpp 	modified:   iedriver/CommandHandlers/NewSessionCommandHandler.cpp 	modified:   iedriver/IECommandExecutor.cpp 	modified:   iedriver/IECommandExecutor.h 	modified:   iedriver/WebDriverConstants.h       - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/7163)","closed","D-IE,","bhecquet","2019-05-02T12:51:11Z","2020-04-11T07:46:37Z"
"","6872","Rethrow exceptions when RemoteSession start fails","Currently, if a remote session fails to start, then Optional.empty() is returned and the system behaves as expected. However, RemoteSession does not make a call to service.stop(), and ServicedSession is unaware that an exception has occurred, so it also doesn't make this call.  Thus, in the case that the Remote Session fails, there will can lingering processes (ex. chromedriver) on the remote host. If running in a high-traffic environment, then these lingering processes can eventually starve the host of resources.  Fixes lingering processes on #4958  ----  More context: We had an issue when running the Selenium server under load that the Chromedriver would time out on startup, and the HTTP Client would fail to connect. This was in an issue in and of itself, but the problem should have gone away. Instead, we noticed that we had thousands of chromedriver processes lingering on our host. After a bit of debugging, we noticed that if RemoteSession's HTTP Client throws an exception, there's no call to service.stop() - the method responsible for tearing down the processes.  By rethrowing as an IllegalStateException, the exception is trapped safely by ServicedSession (we believe this to be the only place that this changed method is used), which then calls service.stop() and returns Optional.empty() as RemoteSession would have done).  ----  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6872)","closed","R-awaiting answer,","andrewdodd13","2019-01-22T13:38:53Z","2021-05-09T18:53:39Z"
"","7554","EventFiringWebDriver doesn't truly fire events of WebDriver usage","Current implementation of firing events is considering to wrap original WebDriver instance with `EventFiringWebDriver` instance, and use this instance in test.  ```csharp var driver = new EventFiringWebDriver(new ChromeDriver()); // use this driver ```  I see several issues in this way.  1. `EventFiringWebDriver` class hides all original members of `ChromeDriver` class. Example: ```csharp var driver = new ChromeDriver(); driver.FindElementByLinkText(""a""); ```  And if I wrap driver with `EventFiringWebDriver` I lose `FindElementByLinkText` method. ```csharp var driver = new ChromeDriver(); driver = new EventFiringWebDriver(driver); driver.FindElementByLinkText(""a""); // method not found ```  2. Events are not fired if I get unwrapped instance of WebDriver and execute some method. ```csharp var driver = new ChromeDriver(); driver = new EventFiringWebDriver(driver); driver.FindElement(By.Id(""id"")); // fires event ((ChromeDriver)driver.WrappedDriver).FindElement(By.Id(""id"")); // doesn't fire event ```  WebDriver events are really useful, we need this feature. But current implementation of events are painful for users.  **Possible way to resolve it**: bring events directly to `RemoteWebDriver` class. Given that all drivers are inherited from `RemoteWebDriver` class, it brings events for all drivers. ```csharp var driver = new ChromeDriver(); driver.OnNavigating += MyHandler; ```  Now events are in box solution, absolutely all user's actions are handled. Doesn't matter how user uses WebDriver, all events will be fired.","closed","","nvborisenko","2019-09-11T12:51:47Z","2019-09-11T15:12:09Z"
"","7152","Fix FTP and HTTPS proxy markers.","Commit c183a9c1b2a70764d485651cb500e315f4af9000 (unintentionally?) changed these when extracting to constants, breaking manual proxy functionality.   - [X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/7152)","closed","D-IE,","DrMarcII","2019-04-29T17:34:39Z","2019-05-20T17:41:26Z"
"","7475","Code Export for C# test","Code Export for C# test  ![menu](https://user-images.githubusercontent.com/3311217/62611985-34b40c00-b939-11e9-9553-1a9d7efdd453.png)","closed","","colindcli","2019-08-07T09:31:41Z","2019-09-06T14:09:35Z"
"","7773","Migrate python build to bazel","Closed with e160563f3e9805ec784dcc3820896bd56168f6e6","closed","C-build,","shs96c","2019-11-11T21:37:03Z","2019-12-12T11:45:51Z"
"","7073","closed","closed","closed","","devmalead","2019-03-31T07:40:23Z","2019-08-14T17:09:38Z"
"","7569","Selenium WebDriver can't click on AJAX element !","Click failure on AJAX window Button.  An ajax panel inside webpage with different elements such as 'Login to Register', 'Register Me', 'View Details', Buttons etc, can't click  https://www.queenslibrary.org/calendar?searchField=*&category=calendar&fromlink=calendar&searchFilter=  and click any card the right side of the Quick View exist the said elements ;  My Code to perform action on element-  By container = By.xpath(""//input[@value='View Details']]""); 		WebDriverWait wait = new WebDriverWait(driver, 59); 		wait.until(ExpectedConditions.elementToBeClickable(container)); 		JavascriptExecutor jsExe = ((JavascriptExecutor)driver); 		jsExe.executeScript(""arguments[0].click();"", container);  [HTML_Code.txt](https://github.com/SeleniumHQ/selenium/files/3617115/HTML_Code.txt) @Environment OS:  Windows 10 Browser:","closed","","msayem2018","2019-09-16T16:04:16Z","2019-10-16T17:09:44Z"
"","7493","Add log level mapping for ChromeDriver just like for Firefox","ChromeDriver uses the following log levels:  ALL, DEBUG, INFO, WARNING, SEVERE, and OFF  See https://cs.chromium.org/chromium/src/chrome/test/chromedriver/logging.cc  Selenium uses:  ""OFF"", ""SEVERE"", ""WARNING"", ""INFO"", ""CONFIG"", ""FINE"", ""FINER"", ""FINEST"", ""ALL"".  https://github.com/SeleniumHQ/selenium/wiki/DesiredCapabilities#loggingpreferences-json-object  Please add a mapping between the two list like for Firefox here: https://github.com/SeleniumHQ/selenium/blob/master/java/client/src/org/openqa/selenium/firefox/FirefoxDriverLogLevel.java  Chromium is probably also affected.  The same needs to be done for the Python implementation of Selenium.  Related issue: https://bugs.chromium.org/p/chromedriver/issues/detail?id=457#c10","closed","C-java,","digulla","2019-08-14T08:17:49Z","2021-09-05T10:02:54Z"
"","7198","Support ChromeDriver ""append log"" flag in Java","ChromeDriver has a command line option to append to existing log file instead of overwriting it. Update Java API to support it.       - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-java,","JohnChen0","2019-05-10T17:08:58Z","2019-05-20T19:43:02Z"
"","7197","Support ChromeDriver ""append log"" flag in .NET","ChromeDriver has a command line option to append to existing log file instead of overwriting it. Update .NET API to support it.       - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-dotnet,","JohnChen0","2019-05-10T17:06:27Z","2019-06-03T01:52:54Z"
"","7282","Add chromedriver cast APIs to remote server","ChromeDriver APIs for interacting with cast devices can now be     invoked via calls to remote server.      Referenced ChromeDriver APIs:      https://chromium-review.googlesource.com/c/chromium/src/+/1401270    - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-java,","jwoolley","2019-06-12T00:10:06Z","2019-07-12T18:10:48Z"
"","7077","Chromedriver is not working when executed from Jenkins","Chromedriver - 2.37 Chrome version - 73.0.3683.86 (Official Build) (64-bit)  When I run the tests with the same chromedriver, it works fine in my local laptop but when I run it in jenkins remote server , it says the below but timeouts after 500seconds.  Starting ChromeDriver 2.37.543627 (63642262d9fb93fb4ab52398be4286d844092a5e) on port 35312 Only local connections are allowed.","closed","","archanarathnam","2019-04-01T12:07:32Z","2019-08-14T17:09:36Z"
"","7335","C# unable to enable performance logging for ChromeDriver","Chrome:Version 75.0.3770.100 ChromeDriver:75.0.3770.90 Selenium:3.141.0  I'm getting the error ``` OpenQA.Selenium.WebDriverException: 'invalid argument: entry 0 of 'firstMatch' is invalid from invalid argument: perfLoggingPrefs specified, but performance logging was not enabled'  If the work around is to use LoggingPreference, can someone please tell me how to reference it since it does not seem to be in the 3.141.0 dll. Also, I think this might relate to the changes to 75.0.3770.8 Renamed capability loggingPrefs to goog:loggingPrefs, as required by W3C standard  ``` public Driver(ChromeDriverModel chromeDriverModel)         {             ChromeOptions chromeOptions = new ChromeOptions();             enablePerformanceMonitor = chromeDriverModel.enablePerformanceMonitoring;             if (enablePerformanceMonitor)                 chromeOptions = _ChromePerformanceOptions();              if (!string.IsNullOrWhiteSpace(chromeDriverModel.ChromeDriverLocation))             {                 if (enablePerformanceMonitor)                     _webDriver = new ChromeDriver(chromeDriverModel.ChromeDriverLocation, chromeOptions);                 else                     _webDriver = new ChromeDriver(chromeDriverModel.ChromeDriverLocation);             }             else             {                 if (enablePerformanceMonitor)                     _webDriver = new ChromeDriver(chromeOptions);                 else                     _webDriver = new ChromeDriver();             }         }   private ChromeOptions _ChromePerformanceOptions()         {             var option = new ChromeOptions();             var perfLogPrefs = new ChromePerformanceLoggingPreferences();             perfLogPrefs.AddTracingCategories(new string[] { ""devtools.network"", ""devtools.timeline"" });             option.PerformanceLoggingPreferences = perfLogPrefs;             option.AddAdditionalCapability(CapabilityType.EnableProfiling, true, true);             option.SetLoggingPreference(""performance"", LogLevel.All);             return option;         } ``` ```  Sorry if repost, not sure which is the official spot.","closed","D-chrome,","JL1234567","2019-06-27T19:33:33Z","2022-02-10T11:52:09Z"
"","7074","[rb] Don't modify income Chromedriver options","Chrome WebDriver initializer modifies incoming options for driver. Ruby's ""good practices"" generally boil down to not mutating data you don't own.  Example how to reproduce:  ```ruby chromedriver_opts = {verbose: true}.freeze driver = Selenium::WebDriver.for(:chrome, driver_opts: chromedriver_opts) ```  Output:   ```log Failure/Error: driver_args","closed","","miry","2019-03-31T12:18:37Z","2019-04-01T06:55:12Z"
"","7556","Update Chrome extension to CRX3 format","Chrome 78 will no longer support extensions in CRX2 format (see https://www.chromium.org/crx2-deprecation). Update extension used for testing to CRX3 format.       - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","JohnChen0","2019-09-11T18:44:51Z","2019-09-18T11:09:51Z"
"","7387","Upgrade childprocess gem to 2.0","childprocess gem has recently [released 2.0.0 version](https://github.com/enkessler/childprocess). Change constraints to accommodate that change: https://github.com/SeleniumHQ/selenium/blob/master/rb/selenium-webdriver.gemspec#L34","closed","C-rb,","Medvezo","2019-07-12T07:56:21Z","2019-08-21T21:09:33Z"
"","7104","Fix isShown for child of DETAILS element","Child elements of DETAILS is often not displayed. Modify isShown function to handle it correctly.       - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/7104)","closed","","JohnChen0","2019-04-16T04:12:40Z","2019-04-16T13:55:49Z"
"","7473","Fixing Javadoc for Actions.moveToElement, ""center"", not ""top-left""","Changing references to conform to W3C spec.       - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","mmerrell","2019-08-07T03:23:59Z","2019-08-18T20:40:54Z"
"","7638","Fixed references to chromedriver website","Changed all references to the chromedriver project Google Sites URL (https://sites.google.com/a/chromium.org/chromedriver/) to be to the project's actual domain and official site, https://chromedriver.chromium.org/.  Fixes #7630       - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","pbeart","2019-10-02T16:42:31Z","2019-10-03T19:19:21Z"
"","7401","Expose Event Bus to local ends","CDP is an event-based API. We know that we need to remote the CDP across the network from the local machine, possibly through any number of intermediary nodes. To do so, we need a mechanism to expose the grid's event bus to users.  We should consider a dual-pronged approach.   * Upgrade connections to HTTP/2 and push events to the user  * Provide some sort of ""store and forward"" approach, either using long hanging GETs (""Comet style"") or simple polling. The former will be more in line with the HTTP/2 approach, the latter will be laggier but more robust.","closed","C-java,","shs96c","2019-07-17T11:22:29Z","2021-09-05T08:21:30Z"
"","6888","can't get cookies in IE browser","can't get cookies in IE browser  version  ![image](https://user-images.githubusercontent.com/19355699/51810541-76f1f600-22e3-11e9-893c-c95d2df71eef.png) OS: windows10 IE11 use 32 bit IEdriver  ![image](https://user-images.githubusercontent.com/19355699/51810462-ee735580-22e2-11e9-9aab-bef6028ec2b6.png) ![image](https://user-images.githubusercontent.com/19355699/51810469-f7642700-22e2-11e9-8bc7-c494c0ac7c5b.png)","closed","D-IE,","say1or","2019-01-28T01:56:49Z","2019-08-14T16:09:49Z"
"","7245","[rb] Add aggregate_failures if there is more than one 'expect()'.","By putting `aggregate_failures`, we can check them at once, even if all `expect()` fail.  The files changed in this PullRequest are below. * rb / spec / unit / selenium / webdriver / proxy_spec.rb  Addition of aggregate_failures seems to be applicable to other than the file which I changed this time. If you can fix other files as well, I will make another PullRequest and respond.  Test passes have been verified with [Travis CI results](https://travis-ci.org/RustyNail/selenium/builds/538116780).       - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-rb,","RustyNail","2019-05-29T00:14:46Z","2019-06-13T08:16:16Z"
"","7424","Add ApplicationCache from GoogleDev Tools","Build ApplicationCache from Google Dev Tools Add model Add test #6667    - [X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-java,","dratler","2019-07-23T08:38:23Z","2019-09-10T11:19:05Z"
"","7155","test no es estable java, ejecuta varias veces y aveces funciona y otras no #java #selenium","buenas tardes, tengo problemas con los test hechos con firefox y selenium, ide netbeans java  el problema es que los casos no son estables, por ejemplo lo ejecuto 10 veces de las cuales 1 o 2 test me sale error, y son errores de tiempo entre selenium y el software, utilizo wait implicito, explicito de 10 segundos  y sleep, tambien un metodo que analiza los tiempos de javascript, pero aun asi no es estable, otro problema es que selenium le ingresa los parametros al software y aveces no los reconoce, ejemplo ingresar el nombre, selenium lo ingresa pero al darle click al boton sale la alerta que falta ingresar el nombre, manualmente el software no falla y su lenguaje es php, javascript y ajax.-... estas fallas pueden ser selenium, el driver de firefox o como tal compativilidad con el software o puede ser codigo, muchas gracias por su ayuda","closed","","cristian-ramirez-b","2019-04-29T18:57:01Z","2019-08-14T12:09:49Z"
"","7482","Add sendDevToolsCommandAndGetReturn to Javascript Chrome webdriver.","Before this change, the chrome javascript webdriver only supported sending command to Chrome's devtool without being able to get the result returned by the command; which prevent the use of commands like 'Performance.getMetric'. This change add the missing command.       - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-nodejs,","pjaton","2019-08-08T22:03:51Z","2020-04-01T13:13:44Z"
"","7012","Selenium grid support for appium server flag --session-override","Basically the Appium server have a command line option --session-override which will kill previous appium session if a new session request is received. But this flag is useless when in a selenium grid system. Due to the fact that selenium sees the node as unavailable and never forward the new session request.  How the feature would work is if the request is for a specific node. For appium that means the ""applicationName"" field is available in the desired capabilities then attempt to start a driver session on the server end. If ""applicationName"" then pick any available node that matches the desired capabilities.   ## Motivation I'm just seeing a lot of node blocks when using Jenkins and somehow the step to stop a build mid build jenkins never trigger the clean up properly so if that happens the node becomes blocked unless I reboot grid or wait until grid finally recognize the node as available.   Let me know what you guys think, or if anyone else is having the same issue as me.","closed","I-enhancement,","Jiurong-Yang","2019-03-08T01:41:04Z","2021-09-05T08:12:26Z"
"","7272","ie.enableFullPageScreenshot not set by default on version 3.14","As per IE driver [CHANGELOG](https://raw.githubusercontent.com/SeleniumHQ/selenium/master/cpp/iedriverserver/CHANGELOG) version 2.52 has added the flag ie.enableFullPageScreenshot which is by default as true to take full page screenshot. I am using IE driver version 3.14 and this behaviour is no longer working. ` from selenium.webdriver import Remote from selenium.webdriver.ie.options import Options as IEOptions options = IEOptions() options.full_page_screenshot = True // explicitly setting it even though assuming its set by default webdriver = Remote(desired_capabilities=options.to_capabilities()) print(json.dumps(webdriver.desired_capabilities, indent=4, sort_keys=True)) webdriver.get(""""https://www.google.co.uk/"") query = webdriver.find_element_by_name('q') query.send_keys(""Selenium"") query.send_keys(webdriver.common.keys.Keys.ENTER) webdriver.save_screenshot(""full_page_screenshot.png"") // only gives screenshot of the viewport and not full page`","closed","","prateeksarda","2019-06-07T17:18:26Z","2019-08-14T09:09:38Z"
"","7622","getText retuns different results for FF/Chrom/IE","As far as i understand the docs WebElement#asText should return the same result with every browser. But for this HTML the result is totally different:          driver.findElement(By.id(""tester"")).getText();          final String htmlContent             = ""\n""             + ""\n""             + ""\n""             + ""  \n""             + ""    \n""             + ""      option1\n""             + ""      \n""             + ""      Number Three\n""             + ""      Number 4\n""             + ""    \n""             + ""  \n""             + """";  Chrome 77          ""      option1\n      \n      Number Three\n      Number 4\n    ""  FF 60 ESR / 52 ESR          ""option1\nNumber Three\nNumber 4""  IE 11          ""option1 Number Three Number 4""  Selenium: 3.141.59 on win7","closed","I-stale,","rbri","2019-09-30T18:27:16Z","2021-12-05T00:07:34Z"
"","7375","[rb] remove Firefox::Binary class","As discussed on Slack, this is my proposed alternative to https://github.com/seleniumhq/selenium/commit/15f966d632dba814e8adf596752c29d43a0798bf  To recap: 1. Defaulting browser location belongs in Options not in Service class 2. geckodriver should be responsible for finding it by default, not a(n outdated) Selenium class; if geckodriver does not find it, then it should either be fixed by Mozilla or the user should specify it. 3. There is no reason for Firefox & Chrome to have different behaviors for this in 4.x","closed","D-firefox,","titusfortner","2019-07-08T21:43:25Z","2019-07-17T20:46:50Z"
"","7207","while running the selenium test case in azure devops getting below errors","Application : java    Using pom.xml file  while running the selenium test cases from eclipse IDE it's working fine  but  We are trying to replicate same in Azure DevOps ....getting below errors.........  Issue1: session not created: This version of ChromeDriver only supports Chrome version 74.  Issue2: The driver executable does not exist: D:\a\1\s\src\test\resources\Drivers\chromedriver.exe  please help me on this","closed","","mahammad13","2019-05-15T16:03:32Z","2019-08-14T10:09:56Z"
"","7655","Fix XCode typo in README.md","Apple's current official documentation uses the IDE name Xcode instead of XCode.  [Current Apple's documentation](https://help.apple.com/xcode/mac/current/#/devc8c2a6be1)  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","xaircore","2019-10-06T10:02:47Z","2019-10-07T07:42:17Z"
"","7123","[py] license specified twice in setup","Apache license header in `py/setup.py` is specified twice... this fixes it.  - [ X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/7123)","closed","C-py,","cgoldberg","2019-04-20T15:24:55Z","2019-04-20T18:24:47Z"
"","7205","Add Duration-based constructors to WebDriverWait","Also deprecate the ambiguous `long`-based constructors.       - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-java,","kluever","2019-05-15T02:33:10Z","2019-05-24T11:21:34Z"
"","7767","https between components","Alright. This is for #7662   Essentially there is a big on/off flag (--https) and then you need to provide a certificate (--https-certificate) and a key (--https-private-key). There is also an info section on how to wire it up including making yourself some certificates and how to teach Java to trust them.  Not sure how to write tests as it requires certificates, but can confirm I have locally been able to light up a browser and drive it.  This does not do the follow, each will have to be a separate item - secure zeromq which is still plain tcp - teach the client bindings about certificates (my tests were with the python ones and they just work by saying the remote_connection is https but it spits out a warning about verifying certificates on every communication over the wire)  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","adamgoucher","2019-11-10T18:56:56Z","2021-04-13T02:54:02Z"
"","7318","Move common driver quit behavior to Common::Driver","All the drivers do exactly the same quit behavior except for Remote, however remote doesn't create a service so @service will be nil and we can move the `quit` method to the base class.","closed","","twalpole","2019-06-22T22:53:28Z","2019-06-24T17:33:58Z"
"","7312","[rb] initialize all of the drivers in superclass","All of the drivers are now pretty much doing the exact same thing, so there isn't a need to have the code duplicated in each file.  The only major issue I had was extending the browser-specific Bridge modules. This code changes them into subclasses, which works, but I don't love, especially because it is adding files that don't actually do anything (right now), just so that the superclass can  make all the method calls it needs.   Should we define the subclasses at the end of `remote/bridge.rb` file rather than creating 2 extra files? Or is the a better approach entirely?","closed","C-rb,","titusfortner","2019-06-20T16:37:40Z","2020-07-12T23:32:18Z"
"","7460","Only conditionalize Travis on tree changes if the build is a PR","After talking with @titusfortner, his intent for #6208 was for it to only apply when the Travis build is a PR. #7111 made the change, but made it for all builds and not just PRs. This adds logic to ensure all tests are run for non-PR builds.  `$TRAVIS_PULL_REQUEST` is set to the PR number if the build is a PR and `false` otherwise. This is (documented here)[https://docs.travis-ci.com/user/environment-variables#default-environment-variables]. We could also use `$TRAVIS_EVENT_TYPE`, but I feel the former is clearer.","closed","C-infra,","lmtierney","2019-08-02T02:34:24Z","2019-08-05T13:38:40Z"
"","7137","Cannot start the driver service on http://localhost after update to Chrome 74","After Chrome automatically updated to Version 74.0.3729.108 (Official Build) (64-bit), I updated chromedrive to latest (74.0.3729.6), I get following error:   OpenQA.Selenium.WebDriverException : Cannot start the driver service on http://localhost:52736/     at OpenQA.Selenium.DriverService.Start()  This code is run from following on mac, .net core: ```         private void initWebDriver()         {             ChromeOptions options = new ChromeOptions();             options.AddUserProfilePreference(""plugins.always_open_pdf_externally"", true);             options.AddUserProfilePreference(""download.default_directory"", directoryToSave);              driverService.Start();             driver = new ChromeDriver(driverService, options);             wait = new WebDriverWait(driver, System.TimeSpan.FromMilliseconds(defaultSleep));         } ```   This program was working fine for weeks when using Chrome 73, only has broken this morning with the latest chrome version.  I've also tried updating to latest NuGet packages (Selenium.Chrome.WebDriver 74.0.0, Selenium.WebDriver 3.141.0 and Selenium.WebDriver.MicrosoftDrive 17.17134.0 but still can not solve this).  In my programs bin/Debug i've also updated the alias for chromedrive to point at new chromedriver install:  big/Debug/netcoreapp2.2/chromedriver -> /usr/local/Caskroom/chromedriver/74.0.3729.6/chromedriver  I know this is working as there was a permissions problem until i did a chmod to change permissions on my new alias, then the error changed to the above.  Any ideas would be appreciated.","closed","","ChrisGClark","2019-04-25T03:21:48Z","2019-08-14T12:09:57Z"
"","6896","[SEVERE]driver.Chrome() fails to close chromedriver.exe upon using driver.quit() at the end C#","After calling driver.quit() at the end of a multithreaded program physical browser will close but the process   chromedriver.exe will still be running  take a look here http://prntscr.com/mdtqtb  selenium c#","closed","D-chrome,","vitalisc","2019-01-29T16:38:40Z","2019-08-14T16:09:48Z"
"","6909","[rb] Waiting till Socket connection completed","After `select` we should use `getsockopt` to read the SO_ERROR option at level SOL_SOCKET to determine that connection completed successfully. Otherwise in `connect_nonblock` we can get EISCONN error.  http://man7.org/linux/man-pages/man2/connect.2.html  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6909)","closed","C-rb,","N0xFF","2019-02-01T20:10:34Z","2019-08-29T01:12:42Z"
"","6946","[rb] Add new_window w3c command","Adds support for the [w3c new_window](https://w3c.github.io/webdriver/#new-window) command for the Ruby bindings.  Addresses https://github.com/SeleniumHQ/selenium/issues/6873  This is a rather raw implementation, which you can do: ``` driver.new_window('tab') driver.new_window('window') ``` and get back a hash with the window handle.  I reviewed this suggested implementation: https://github.com/SeleniumHQ/selenium/issues/6873#issuecomment-459109624. Maintainers, if you'd prefer the SwitchTo format, please let me know and I can look to tweak.  ## Current Browser Support As far as I know: - Safari Technology Preview v74 - Firefox 66 (Beta)  Due to the limited support, I've made test exclusions to only Safari Technology Preview, as I don't believe the build system uses the beta Firefox.  ## Notes - This is not yet implemented in java, so any remote tests will likely fail - First commit in the rb selenium repo - I assumed documentation should be in YARD format as I saw a reference to yard in rakefile  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6946)","closed","C-rb,","dylanlive","2019-02-19T01:18:54Z","2019-05-08T18:05:41Z"
"","7481","Using timeout in DriverService Builder","Adding timeout to DriverServiceBuilder Removing timeout from FirefoxBinary because it is not used       - [ X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-java,","grigaman","2019-08-08T11:50:07Z","2019-10-04T18:56:40Z"
"","7418","Add inspector GDC","Adding GDC Inspector API  #6667       - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-java,","dratler","2019-07-22T10:02:02Z","2019-08-01T20:30:01Z"
"","7756","Add Chrome tests to bazel build.","Added BUILD.bazel file for the java Chrome tests. This is modeled after the devtools build file.    - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-build,","TriciaCrichton","2019-11-07T22:25:04Z","2021-01-15T14:19:20Z"
"","7058","added scrollToElement method in RemoteWebDriver","Added a feature for scrolling to a specific web element so that it will be available in the ViewPort. This is required in many html pages which implements different scrolling events.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/7058)","closed","C-java,","adiohana","2019-03-26T17:10:32Z","2021-06-13T05:17:58Z"
"","7215","Add tests for Duration-based WebDriverWait constructors","Add tests for https://github.com/SeleniumHQ/selenium/issues/7187       - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-java,","kluever","2019-05-16T14:54:38Z","2019-05-17T10:49:21Z"
"","7142","Add support for MicrosoftEdge using msedgedriver","Add support for new MicrosoftEdge using MSEdgeDriver.exe available through https://msedgecdn.azurewebsites.net/webdriver/index.html  - [ x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/7142)","closed","","loly89","2019-04-26T06:54:36Z","2019-05-02T19:39:23Z"
"","7544","Add ChromiumDriver.setPermission to Java bindings","Add setPermission to ChromiumDriver to support the same command added for ChromeDriver version 78. This change updates the Java client bindings.  This will allow Selenium code to override default permissions that would otherwise require user action.  Fixes #7539       - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","TriciaCrichton","2019-09-06T20:41:03Z","2019-09-10T11:02:13Z"
"","6856","Update domcore.js","Add sanity check making sure that called functions getAttribute and getAttributeNode are defined on the node before calling them.  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6856)","closed","","codedieum","2019-01-16T09:18:39Z","2019-01-18T17:32:12Z"
"","6974","Fix comments on Java Actions.moveToElement","According to https://w3c.github.io/webdriver/#dfn-center-point step 1, the element center point is calculated by getClientRects.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6974)","closed","C-java,","JohnChen0","2019-02-27T03:37:45Z","2020-04-12T20:28:41Z"
"","6877","Increase height used in Java window size tests","A recent change in Chrome (https://crrev.com/624785) increased the minimum window height allowed on Mac to be about 300. This causes some window size tests to fail (e.g., https://crbug.com/chromedriver/2748). Increasing the heights to be above 300.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6877)","closed","","JohnChen0","2019-01-24T00:32:53Z","2019-01-24T03:35:06Z"
"","7143","What's in selenium-webdriver 3.142.0?","A new version 3.142.0 was released on rubygems 2 days ago (https://rubygems.org/gems/selenium-webdriver/versions/3.142.0). I've found no reference on that version, included changes etc anywhere – no git tag, no release note, no change log.  I've not done an analysis like diffing the gem, so I'm not sure what is going on. I think it would be good to let people know that this is a ""good"" release and not a potentially dangerous thing like a malicious release we've seen in the past for other libraries.  Thank you!","closed","","tisba","2019-04-26T08:24:21Z","2019-08-14T13:09:36Z"
"","6941","[py] Unclosed socket cleanup","A fix for this issue:  https://github.com/SeleniumHQ/selenium/issues/6878  It creates a ""close"" function for the remote_connection which clears the connection pool, if the pool exists. The ""close"" function is called when the webdriver is quit  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6941)","closed","C-py,","GQAssurance","2019-02-15T22:49:33Z","2019-03-08T15:52:19Z"
"","7530","Handle TaskCanceled exception and re-throw it with timeout exception","`HttpClient` doesn't throw Timeout WebException, it throws `TaskCanceledException`.  This PR consider it and re-throw new exception in case of `TaskCanceled`.  ![image](https://user-images.githubusercontent.com/22616990/64025785-262ad000-cb46-11e9-8e48-3740a38b8bc4.png)","closed","","nvborisenko","2019-08-30T13:47:59Z","2019-09-04T19:51:39Z"
"","7079","selenium.common.exceptions.JavascriptException","```selenium.common.exceptions.JavascriptException: Message: javascript error: Failed to construct 'Touch': member target is not of type EventTarget.```  from selenium.webdriver.common.touch_actions import TouchActions  TouchActions(driver).flick_element(element, 0, -200, 50).perform()","closed","C-py,","jydd","2019-04-01T16:46:31Z","2019-08-14T08:09:40Z"
"","7847","TypeError: getaddrinfo() argument 1 must be string or None","```python socket_ = socket.create_connection((host, port), 1) ```  https://github.com/SeleniumHQ/selenium/blob/master/py/selenium/webdriver/common/utils.py#L109 this line produces an error:  TypeError: getaddrinfo() argument 1 must be string or None  Python 3.8","closed","","kamikaze","2019-12-06T03:37:36Z","2020-01-05T05:05:09Z"
"","7091","Generic Defaultwait does not works","``` public static bool WaitUntil(this IDriver driver, Func condition, TimeSpan timeout)         {             var wait = new DefaultWait(driver)             {                 Timeout = timeout             };              bool result = wait.Until(condition);              if (!result)             {                 throw new Exception();             }              return result;         } ```  trying to use this extension method like this without success:  ``` this.driver.WaitUntil(x => Menu != null && Menu.Displayed && Menu.Enabled, TimeSpan.FromSeconds(5)); ```","closed","C-dotnet,","ghost","2019-04-09T08:42:05Z","2019-08-14T16:09:45Z"
"","7036","C# System.InvalidCastException: 'Unable to cast object of type 'EventFiringWebElement' to type 'OpenQA.Selenium.Internal.IWrapsDriver'.'","``` IWebDriver driver; driver = new DriverFactory().Init(); this.Driver = new EventListener(driver); ```  ``` public static void DoubleClick(this IWebElement webElement)         {             var driver = ((IWrapsDriver)webElement).WrappedDriver;             Actions action = new Actions(driver);             action.DoubleClick(webElement).Build().Perform();         } ```  `System.InvalidCastException: 'Unable to cast object of type 'EventFiringWebElement' to type 'OpenQA.Selenium.Internal.IWrapsDriver'.'`","closed","","ghost","2019-03-15T11:55:54Z","2019-08-14T19:09:46Z"
"","7115","[rb] fix serialization methods","`#as_json` is supposed to return a Hash with all of the Symbols stripped out.   We could implement Rails' monkey patch on Hash, but we shouldn't We could JSON.parse(JSON.generate hash), but that feels wrong.  Also, I feel like converting snake case keys into camel case makes more sense in the `#as_json` than the `#to_json` method.  @p0deje / @twalpole can you double check my logic for `#generate_as_json` here?   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/7115)","closed","C-rb,","titusfortner","2019-04-18T13:11:31Z","2019-06-17T20:30:05Z"
"","7315","org.openqa.selenium.interactions.MoveTargetOutOfBoundsException after upgrading to 3.14.0 from 3.8.1","` new Actions(data).moveToElement(element,x,y).perform();`  This code worked find with:  Selenium 3.8.1, Chrome 63, chromedriver 2.3.8  After finally upgrading to: Selenium 3.14 , Chrome 75,  chromedriver 75.0.3770.9  I am getting error:  `org.openqa.selenium.interactions.MoveTargetOutOfBoundsException `  The page did not change at all, it still same page, but now I am getting error which I was not before and tests were working good back then...  What is cause of that?","closed","","LubomirKovalcik","2019-06-22T09:25:41Z","2019-08-14T07:10:01Z"
"","7505","Make selenium-webdriver to locate element for WinAppDriver.","[Windows Application Driver](https://github.com/Microsoft/WinAppDriver) is a service to support Selenium-like UI Test Automation on Windows Applications. But selenium-webdriver doesn't implement [mobile spec locator-strategies](https://github.com/SeleniumHQ/mobile-spec/blob/master/spec-draft.md#locator-strategies) for non-HTML-based platforms, customer can't use selenium-webdriver directly. This pull request implements part of locator-strategies to make selenium-webdriver drive WinAppDriver for automation testing.   - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-nodejs,","licanhua","2019-08-20T05:05:40Z","2020-07-10T23:57:09Z"
"","7352","SendKeys fails to send CTRL+SPACE in InternetExplorer","[Test.zip](https://github.com/SeleniumHQ/selenium/files/3352089/Test.zip)  ## 🐛 Bug Report  When a test attempts to send the key combination CTRL+SPACE using the SendKeys method, the browser element receives only SPACE.  This does not occur in Chrome, but does in Internet Explorer.  ## To Reproduce  Use the attached script and sample html file to execute this line of code:  ```` 		    input.SendKeys(OpenQA.Selenium.Keys.Control + "" ""); ````  In Chrome, we get the expected output ""CTRL+32"". In Internet Explorer, the output is just ""32"".  ## Expected behavior  The browser/element should receive the full key combination, not just part of it.  ## Test script or set of commands reproducing this issue  See attached.  ## Environment  OS: Windows 10 Browser: Internet Explorer Browser version: 11 (11.557.17763.0) Browser Driver version: IEDriver 3.141.59 Language Bindings version: C#","closed","","ccarmannt","2019-07-02T19:48:59Z","2019-08-14T06:09:49Z"
"","7264","[rb] skip pending by default on local","@p0deje  are you ok with this code (69ee9211b437316f0114e3f98e2511f6caf9f9ee) being default when not run on a ci? I don't think there is a way to toggle this specifically for `./go` vs `IntelliJ`","closed","C-rb,","titusfortner","2019-06-05T19:13:29Z","2020-07-12T23:34:51Z"
"","7260","Resolve Profiler rejects","1. Replace fromJson from Public or package private to private 2. fix from Json 3. fix some minor Typo       - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","dratler","2019-06-04T19:22:04Z","2019-06-06T12:15:26Z"
"","7374","Audit by Google DevTools","1. Build Audit from Google Dev Tools 2. Add model 3. Add test #6667       - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-java,","dratler","2019-07-08T20:13:38Z","2020-04-03T09:34:32Z"
"","7250","Add Test to Target","1. Add ChromeDevToolsTargetTest.java with Target test 2. Add it to DevToolsTest","closed","","dratler","2019-05-30T15:05:41Z","2019-05-30T18:42:41Z"
"","7670","ios 所有的元素都不能操作，找不到元素","/usr/local/bin/python3.7 /Users/huangxiaowei/Documents/git/ui-test/uiiostest/test.py Traceback (most recent call last):   File ""/Users/huangxiaowei/Documents/git/ui-test/uiiostest/test.py"", line 54, in      dr.find_element_by_ios_predicate(""name == '我的'"").click()   File ""/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/appium/webdriver/webdriver.py"", line 358, in find_element_by_ios_predicate     return self.find_element(by=MobileBy.IOS_PREDICATE, value=predicate_string)   File ""/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/appium/webdriver/webdriver.py"", line 276, in find_element     'value': value})['value']   File ""/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 319, in execute     response = self.command_executor.execute(driver_command, params)   File ""/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/selenium/webdriver/remote/remote_connection.py"", line 374, in execute     return self._request(command_info[0], url, body=data)   File ""/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/selenium/webdriver/remote/remote_connection.py"", line 397, in _request     resp = self._conn.request(method, url, body=body, headers=headers)   File ""/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/urllib3/request.py"", line 80, in request     method, url, fields=fields, headers=headers, **urlopen_kw   File ""/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/urllib3/request.py"", line 171, in request_encode_body     return self.urlopen(method, url, **extra_kw)   File ""/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/urllib3/poolmanager.py"", line 330, in urlopen     response = conn.urlopen(method, u.request_uri, **kw)   File ""/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/urllib3/connectionpool.py"", line 672, in urlopen     chunked=chunked,   File ""/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/urllib3/connectionpool.py"", line 421, in _make_request     six.raise_from(e, None)   File """", line 3, in raise_from   File ""/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/urllib3/connectionpool.py"", line 416, in _make_request     httplib_response = conn.getresponse()   File ""/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py"", line 1336, in getresponse     response.begin()   File ""/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py"", line 306, in begin     version, status, reason = self._read_status()   File ""/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py"", line 267, in _read_status     line = str(self.fp.readline(_MAXLINE + 1), ""iso-8859-1"")   File ""/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/socket.py"", line 589, in readinto     return self._sock.recv_into(b) KeyboardInterrupt  Process finished with exit code 1","closed","","huangceshi","2019-10-10T07:05:14Z","2019-11-09T08:07:57Z"
"","6935","capabilities.js - used unused variable in merge()","- minor update - the code worked before because Capabilities and Map both happened to have a keys() function - added tests in capabilities_test.js  Fixes #6911  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6935)","closed","C-nodejs,","martin770","2019-02-14T01:13:04Z","2019-04-15T16:45:17Z"
"","7233","Add new WebDriver support for Edge - DOTNET","- Extracting Chrome into a separate Chromium package since the new Edge is also Chromium-based.  - Add the ability for EdgeDriver to launch the new MicrosoftEdge using MSEdgeDriver without breaking any existing Edge tests.       - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-dotnet,","loly89","2019-05-24T19:15:13Z","2019-06-03T14:32:54Z"
"","7459","Add support for the new MicrosoftEdge - Python","- Extracting Chrome into a separate Chromium package since the new Edge is also Chromium-based. - Add the ability for EdgeDriver to launch the new MicrosoftEdge using MSEdgeDriver without breaking any existing Edge tests using is_legacy parameter, which defaults to True.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-py,","loly89","2019-08-01T21:03:15Z","2019-08-02T02:46:47Z"
"","7252","Add support for edge python","- Extracting Chrome into a separate Chromium package since the new Edge is also Chromium-based. - Add the ability for EdgeDriver to launch the new MicrosoftEdge using MSEdgeDriver without breaking any existing Edge tests using is_legacy parameter, which defaults to True.   - [X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","loly89","2019-05-31T17:13:20Z","2019-05-31T17:19:58Z"
"","7253","Add support for the new MicrosoftEdge - Python","- Extracting Chrome into a separate Chromium package since the new Edge is also Chromium-based. - Add the ability for EdgeDriver to launch the new MicrosoftEdge using MSEdgeDriver without breaking any existing Edge tests using is_legacy parameter, which defaults to True.       - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-py,","loly89","2019-05-31T17:54:36Z","2019-11-06T08:21:28Z"
"","7231","Optimized DevTools","- Added test cases for Log and Console - Fixed some parsing bugs - modified to same convention we have in Network and Performance - Improved JavaDoc in Network - Usage of fromJson in all models  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-java,","adiohana","2019-05-24T09:19:48Z","2019-05-29T16:31:41Z"
"","7117","Run ChromeDriver on Centos7 get status code:-11","- a simple test running on centos7, and I get some error like following:  /home/auser-tw/projects/IM3/chrome_test.py:13: DeprecationWarning: use options instead of chrome_options   driver = webdriver.Chrome(executable_path='/home/auser-tw/projects/IM3/model/Twitter/TC/google_chrome_driver/linux/chromedriver', chrome_options=options) Traceback (most recent call last):   File ""/home/auser-tw/projects/IM3/chrome_test.py"", line 13, in      driver = webdriver.Chrome(executable_path='/home/auser-tw/projects/IM3/model/Twitter/TC/google_chrome_driver/linux/chromedriver', chrome_options=options)   File ""/home/auser-tw/miniconda3/lib/python3.7/site-packages/selenium/webdriver/chrome/webdriver.py"", line 73, in __init__     self.service.start()   File ""/home/auser-tw/miniconda3/lib/python3.7/site-packages/selenium/webdriver/common/service.py"", line 98, in start     self.assert_process_still_running()   File ""/home/auser-tw/miniconda3/lib/python3.7/site-packages/selenium/webdriver/common/service.py"", line 111, in assert_process_still_running     % (self.path, return_code) selenium.common.exceptions.WebDriverException: Message: Service /home/auser-tw/projects/IM3/model/Twitter/TC/google_chrome_driver/linux/chromedriver unexpectedly exited. Status code was: -11  this is my code: `from selenium import webdriver  options = webdriver.ChromeOptions() options.add_argument('--headless') options.add_argument('--disable-gpu') options.add_argument('--no-sandbox') driver = webdriver.Chrome(executable_path='/home/auser-tw/projects/IM3/model/Twitter/TC/google_chrome_driver/linux/chromedriver', chrome_options=options) driver.get(""https://www.google.com"") print(driver.page_source) driver.quit()` first submit issus, thank you for help from everyone","closed","","lightflyer","2019-04-18T14:36:18Z","2019-08-14T13:10:00Z"
"","7611","Refactor/remove unused files","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Whilst a bit smaller, this is the first PR that actually starts removing / destroying previously referenced components.  - A lot of the re-linked files which were moved have now been removed and their new references  updated - Primarily this PR removes `require` calls, so this PR may fail with unfound files - The `Platform` helper which was mixed into a global(ish), ns has been merged with the `SeleniumRake::Checks` class methods to remove duplication","closed","","luke-hill","2019-09-27T14:07:01Z","2019-11-01T09:02:16Z"
"","7615","Consistent Python WebDriver classes","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  This PR changes the Microsoft Edge `WebDriver` `__init__` to take a `desired_capabilities` parameter instead of `capabilities`. This makes it consistent with other `WebDriver` classes.  This PR also adds a `create_options` method to the Edge and Firefox `WebDriver` classes to make them more consistent with the other driver classes whose initializers take an `options` parameter.","closed","","OutOfFocus4","2019-09-28T16:33:33Z","2019-10-05T16:29:06Z"
"","7735","Rubocop Autofix Rakefile","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Run rubocop autofixes (Only automatic not manual), across *just* the Rakefile.  Turn a file with >300 offenses to a file with","closed","","luke-hill","2019-11-01T09:16:59Z","2019-11-05T13:08:38Z"
"","7562","Refactor/rework ruby raketasks part1","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Rework the rake-tasks folder by doing manual changes  Rework the `crazy-fun/build-tasks/build_grammar.rb` by just fixing the tabs, and removing the `then` keyword after case statements. NB: There is a ginormous case statement around 300 lines in the middle, so I added a comment at the end. God help whoever has to refactor this!  Review: @p0deje / @shs96c (Incase I've deleted / amended something as a breaking change)  I'd advise to review in 2 stages - One just for the crazy-fun one as it'll be awful to look at!","closed","","luke-hill","2019-09-13T10:08:58Z","2019-09-19T15:15:50Z"
"","7681","SeleniumRake Build: Begin to remove un-called code","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Remove code which doesn't appear to have a single calling point inside the entire code-base","closed","","luke-hill","2019-10-14T11:20:54Z","2019-10-14T12:54:02Z"
"","7551","Refactor/ruby rake tasks tidy","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Refactor a load of ruby rake task code after chatting with Simon on IRC  Plan is to merge this then start simplifying the files afterwards","closed","","luke-hill","2019-09-10T13:22:37Z","2019-09-19T15:15:17Z"
"","7734","Refactor and fix copyright task","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  ping @shs96c - Fix is commit 1 and there is a slight refactor to make it easier to understand whats happening  More can be refactored, but it's a bit confusing. So lets get this win in now!","closed","","luke-hill","2019-11-01T08:14:27Z","2019-11-01T20:16:51Z"
"","7667","Refactor/crazy fun namespace 1","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Part 1 of 3 of tidy up.  Move about 40-50% of code into correct folder structure and 1class per file. Use `mappings_` files as a linker Retain previously named files just as symlinks so as not to break backwards compatibility  Part 2 will do the same to the rest of the code, part 3 will remove global mixins","closed","","luke-hill","2019-10-09T09:53:00Z","2019-10-30T16:25:40Z"
"","7572","Refactor/rework ruby raketasks part2","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Key take-aways from this PR - 95% of top level `.rb` files have now been moved and properly namespaced (All residual files are now just require symlinks) - Initial cull of unused helper methods has seen 5-10 methods removed - Move of one task which was defined outside of rakefile to inside rakefile - Also moved some `Rake` code to it's own rake namespace","closed","","luke-hill","2019-09-17T07:39:51Z","2019-09-27T13:32:26Z"
"","7765","[py] Use callback functions instead callable objects as expected conditions","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  I think it's better to use callback functions instead of callable objects as expected conditions. Also, removed `_find_element` and `_find_elements` functions from the expected_conditions.py module because they do nothing and can be easily replaced with a direct webdriver method call.","closed","","uriyyo","2019-11-10T11:37:51Z","2020-04-03T21:09:35Z"
"","7707","Add more logging for node:atoms rake task","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Help triage #7704 Add extra logging when RakeOuts are not found during meta-programming phase.","closed","","luke-hill","2019-10-23T09:03:42Z","2019-10-25T08:10:01Z"
"","7584","Refactor/rework ruby raketasks 3","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Focus on running rubocop autofixes on `rakelib/`  Not yet focussing much on namespacing e.t.c. just minor tweaks and splitting out files to contain single classes","closed","","luke-hill","2019-09-20T08:40:35Z","2019-10-01T07:45:28Z"
"","6930","[py] Add support for the New Window command (#6873)","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Fixes #6873. @AutomatedTester can you please review? Thanks   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6930)","closed","","whimboo","2019-02-12T21:09:38Z","2020-06-04T14:57:40Z"
"","7238","[ruby] Fix ""FrozenError: can't modify frozen String"" exception","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Fixed tiny bug. The `error` variable raises exception ""FrozenError: can't modify frozen String"".","closed","","camelmasa","2019-05-28T05:15:41Z","2019-05-28T14:11:30Z"
"","6906","[C-py] Add `interval` option and shorten sleep interval for waiting until connectable","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Fix #6848   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6906)","closed","C-py,","iwasa-kosui","2019-02-01T05:19:53Z","2020-03-10T13:18:47Z"
"","7736","CrazyFun: Remaining Namespace work (Aside from the .rl items)","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Everything below is without considering 4 files: `rake_tasks/crazy_fun/mappings/base_grammar.rl` `rake_tasks/crazy_fun/mappings/build_grammar.rb` `rake_tasks/crazy_fun/mappings/build_grammar.rl` `rake_tasks/crazy_fun/mappings/main.rb`  After merging this PR we have .... - All files contained under a single directory `rake_tasks` - All files underneath that correctly namespaced according to folder/module customs - ""In theory"" no actual changes in terms of functionality  The next 2/3 tasks would be primarily - Renames: Some of the file/folder structures are so verbose and unhelpful they need looking at. Also some of the filenames are also a bit manky. I propose this be tackled in 1 PR - Syntax: Running the rubocop autofixer over a directory at a time will produce 100's of optimisations and speed improvements - Conversion to Ruby-isms: This one is tricky and will be best left until everything else is merged in. Certain areas have issues where we use items that don't need to be enumerated (Arrays of length 1), symbols with string covers on (primarily with the `-` key in them). Both of these are simple enough fixes but I think it's highly likely something could go wrong when doing this, hence delaying it till the end.  Review away. I'd also highly advise looking at this with tab mode switched on (So you don't see a huge set of +/- differences). In order to view the condensed diff without tab highlights being present polluting the PR, use this link https://github.com/SeleniumHQ/selenium/pull/7736/files?utf8=%E2%9C%93&diff=unified&w=1","closed","","luke-hill","2019-11-01T14:48:23Z","2019-11-05T13:08:58Z"
"","7708","CrazyFun/Build - Massive cull of uncalled code.","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Changes: - Rakefile requires are now re-ordered alphabetically, and have been sorted better according to their type/s - Requires which are used in more than one places have been de-duped and placed in the relevant place  Additions: - `FileCopyHack` is now namespaced better (Still need the whole of CF to be namespaced properly) - `RubyMappings` has been split into individual files for each of the individual mappings that are present  Removals: - All of the mappings which weren't consumed inside crazyfun. Of which there were 4 big ones (Python / GCC / Rename / Javascript) - Leading to over 1500LOC being culled.  Refactors: - `ruby` as a method was included in the top level namespace, I've now moved this to only be defined inside the RubyMappings classes that needed it, so it's giving us a bit cleaner code.  Next up. Look into finally fixing all the namespaces inside crazy_fun (Excluding the `main.rb` file)","closed","","luke-hill","2019-10-23T11:57:16Z","2019-11-13T09:39:51Z"
"","7653","Make Python Edge driver more like other Chromium drivers","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Based on @AutomatedTester's comments on #7615, add deprecation warnings to the `__init__` of the Edge `WebDriver` and implement `create_options`.","closed","D-edge,","OutOfFocus4","2019-10-05T19:21:33Z","2020-03-15T11:26:55Z"
"","7808","Add support for shadow elements","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Atoms checks if an element is still attached to the DOM before every interaction. This check is done [here](https://github.com/SeleniumHQ/selenium/blob/master/javascript/atoms/inject.js#L524).  The problem is that it doesn't take into account shadow elements. These elements doesn't have a parentNode but they can still be attached to the DOM, for example shadowRoot elements.  If you try to interact with WebComponents in IPhone an ""Element is no longer attached to the DOM"" error would be raised.  I do this pull request in this branch because this is the current version that [appium-remote-debugger](https://github.com/appium/appium-remote-debugger/blob/master/Makefile) currently using.  You can replicate this problem directly in the browser following the next steps:  - Go to https://shop.polymer-project.org/ - Open the inspector console and run the following script: ``` var doc = { documentElement : document }    var element = document     .querySelector('shop-app').shadowRoot     .querySelector('shop-home').shadowRoot     .querySelector('shop-button a');    function getElementIfAttached(el) {     var node = el;     while (node) {       if (node == doc.documentElement) {         return el;       }           node = node.parentNode;     }   }    getElementIfAttached(element) ```  You can see that getElementIfAttached doesn't return the element although the shop-button is still attached to the DOM.","closed","","diego-fernandez-santos","2019-11-23T14:42:20Z","2020-04-07T20:44:47Z"
"","7671","Refactor/rubocop autofixes on selenium rake","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  A variety of manual / automatic rubocop fixes on the `selenium_rake` directory  Autofixes - Add some frozen_string_literal's - Fix up some string and punctuation quick fixes  Manual - Some LineLength tweaks - Some lVar assigns have been made private for better legibility - Very initial phase of deleting code that doesn't appear to be used","closed","","luke-hill","2019-10-10T12:53:27Z","2019-10-16T09:55:13Z"
"","7625","Refactor/sole master directory","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  - Make the sole arbiter `rake_tasks` - Fix up some minor punctuation  EDIT: I've opted to tidy up the `.rake` files because they were a proper mish-mash. And future PR's will attempt to try unclog these files even further.  It's likely that even though we're moving all the rakes into the one mega `Rakefile` we can unclog it later, but this is a necessary evil for now to fix the `rake_tasks` directory","closed","C-build,","luke-hill","2019-10-01T09:48:56Z","2019-10-18T13:40:19Z"
"","7496","Add expected conditions for invisibility of multiple elements","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   - `invisibility_of_any_elements_located`: Returns `True` once any of the located elements becomes invisible  - `invisibility_of_all_elements_located`: Returns `True` once all of the located elements are invisible","closed","C-py,","jnsdrtlf","2019-08-15T12:15:31Z","2019-10-22T20:33:18Z"
"","7172","typo in method description","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/7172)","closed","","BogdanDor","2019-05-04T13:53:51Z","2019-08-31T04:35:29Z"
"","7075","switch to parent frame fix for non-w3c compatible drivers","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/7075)","closed","C-nodejs,","corevo","2019-03-31T13:25:13Z","2019-05-01T13:35:51Z"
"","7037","Check if argument is iterable. E.g. type **list** also works.","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/7037)","closed","C-py,","jerryjiahaha","2019-03-17T11:23:25Z","2020-04-03T21:00:26Z"
"","6983","Added socksVersion field in proxy class","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6983)","closed","C-py,","singh811","2019-03-01T09:53:52Z","2019-06-20T01:26:22Z"
"","6955","Suggest download of chromedriver over HTTPS","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6955)","closed","","JLLeitschuh","2019-02-20T06:29:24Z","2019-02-20T12:15:50Z"
"","6954","Suggest download Microsoft Webdriver over HTTPS","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6954)","closed","C-py,","JLLeitschuh","2019-02-20T06:28:18Z","2019-02-20T12:35:56Z"
"","6913","typo","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6913)","closed","","gotcha","2019-02-05T12:40:29Z","2019-02-05T16:19:51Z"
"","6902","removed unused constant IMPLICITLY_WAIT","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6902)","closed","C-nodejs,","Darth-koder007","2019-01-30T17:26:45Z","2019-02-01T19:12:39Z"
"","7780","fix example to use .wait instead of .ui","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-py,","kanja22","2019-11-13T08:04:36Z","2020-02-28T09:26:20Z"
"","7726","requireAtom: make dynamic import work with webpack","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-nodejs,","NaridaL","2019-10-30T09:59:45Z","2020-02-26T11:37:46Z"
"","7688","Add missing ""break"" statement","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-java,","mtrea","2019-10-15T22:51:27Z","2020-04-30T22:57:04Z"
"","7659","Fix common typo's","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","xaircore","2019-10-06T19:04:06Z","2019-10-11T15:58:21Z"
"","7644","Loosen dependency on childprocess in ruby gemspec","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-rb,","jaredbeck","2019-10-03T16:30:42Z","2019-10-04T16:33:13Z"
"","7613","Allow to use rubyzip 1.3.0 and 2.0.0. Fixes #7606","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","vtamara","2019-09-28T12:09:49Z","2019-10-01T10:39:18Z"
"","7607","Accepts rubyzip 1.3.0 and 2.0.0. Fixes #7606","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-rb,","vtamara","2019-09-26T17:16:13Z","2019-09-30T10:31:18Z"
"","7527","Fix typo: mobilie -> mobile","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","takotakot","2019-08-29T10:55:45Z","2019-09-03T23:19:15Z"
"","7484","Fix invisibility_of_element expected condition init function","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","jklingen92","2019-08-09T14:29:39Z","2019-08-09T14:37:48Z"
"","7422","Add js bindings for chromedriver cast functionality","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-nodejs,","jwoolley","2019-07-23T00:58:45Z","2019-12-04T23:42:54Z"
"","7416","Old style exceptions are syntax errors in Python 3","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-py,","cclauss","2019-07-21T11:22:04Z","2019-10-04T08:25:10Z"
"","7415","added ResourceTiming parser in CDP Network","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-java,","adiohana","2019-07-21T10:34:10Z","2019-08-05T13:39:02Z"
"","7397","Adding a LocalDistributor test","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","mmerrell","2019-07-16T15:56:43Z","2019-08-05T15:04:25Z"
"","7396","Adding a LocalDistributor test","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","mmerrell","2019-07-16T15:48:18Z","2019-07-16T15:55:56Z"
"","7371","CDP Storage domain","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-java,","adiohana","2019-07-08T15:36:07Z","2020-04-03T09:36:15Z"
"","7224","fixed compilation and build","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","adiohana","2019-05-21T16:47:30Z","2019-05-21T17:08:32Z"
"","7223","fixed compilation issue","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","adiohana","2019-05-21T16:35:59Z","2019-05-21T16:46:54Z"
"","7222","Use java.time.Duration to configure timeouts","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-java,","valfirst","2019-05-20T09:06:55Z","2020-07-16T06:17:47Z"
"","7214","adding page factory support for python selenium community","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-py,","ToxicEnvelope","2019-05-16T11:38:11Z","2020-03-27T16:14:24Z"
"","7208","Dev tools network","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","adiohana","2019-05-15T16:26:50Z","2019-05-15T16:27:02Z"
"","7343","Java client: set LOGGING_PREFS to `goog:loggingPrefs`; fixes #7342","- [x] By placing an `X` in the preceding checkbox, I (Vyacheslav Slavik Fursov) verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","SlavikCA","2019-06-28T19:53:07Z","2019-08-15T15:59:12Z"
"","7257","Add Chrome based Edge to the Ruby bindings","- [X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  This is the start of adding Chrome based Edge to the Ruby bindings.  We need to decide whether to implement this separately from legacy edge, or to accept some sort of configuration option to switch between legacy and chrome based - thoughts?","closed","C-rb,","twalpole","2019-06-03T20:48:55Z","2019-06-14T18:42:48Z"
"","7313","Add basic support for IEDriver to drive an EdgeChromium IE tab.","- [X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  This change allows IEDriver to attach to an internet explorer tab hosted within the new chromium based Edge browser.  - This change adds two capabilities to the IE extension capability object which define whether to launch chromium-edge (or just run in normal mode), and where to launch it from.  ie.edgechromium : bool ie.edgepath : string  for example:  {   ""capabilities"": {     ""alwaysMatch"": {          ""se:ieOptions"": {              ""ie.edgechromium"": true,              ""ie.edgepath"": ""C:\\Users\\user\\appdata\\local\\Microsoft\\Edge SXS\\Application\\msedge.exe""          }     }   } }  - Some internal bookkeeping has been added to various places to know whether we're working with IE in Edge or normal IE.  Known Issues: - In this preliminary version we don't support opening new tabs or new windows due to a crash when new windows were opened in the Edge IE tab in Browser::NewWindow3. I added a workaround there for Edge.","closed","D-IE,","stanleyhon","2019-06-20T23:45:08Z","2019-08-08T21:17:10Z"
"","7006","[dotnet] Adds serialization to ReturnedCookie","- [X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Adds Serialization to the ReturnedCookie object, I've made sure that the JsonProperty names match that of Cookie.  Fixes #6893   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/7006)","closed","C-dotnet,","jordan-mace","2019-03-07T10:49:50Z","2021-03-16T00:14:56Z"
"","7002","Deprecate legacy Firefox driver","- [X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/7002)","closed","","twalpole","2019-03-06T02:58:36Z","2019-03-06T22:06:18Z"
"","6916","add async version of until() and until_not()","- [x ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6916)","closed","C-py,","skidzo","2019-02-06T17:06:25Z","2019-03-27T12:56:07Z"
"","7421","Add js bindings for chromedriver cast functionality","- [x ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","jwoolley","2019-07-23T00:54:26Z","2019-07-23T00:55:26Z"
"","7278","Mark tests as expected to pass and update rubocop config","- [X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","twalpole","2019-06-11T01:40:11Z","2019-06-11T01:40:50Z"
"","7276","Add log extension commands coming in chromedriver 76/77 to Chrome bridge","- [X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-rb,","twalpole","2019-06-10T18:29:03Z","2019-06-24T17:33:43Z"
"","7349","Update  ""__init()"" to ""__init__()"" for class invisibility_of_element in expected_conditions.py,fixes #7337","- [py]Update ""__init()"" to ""__init__()"" for class invisibility_of_element in expected_conditions.py   Fixes #7337  - [ ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-py,","mazl","2019-07-02T06:05:30Z","2019-08-09T14:37:26Z"
"","7042","allow ability to set default driver executable path at a class level","- [ x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   Per the discussion in slack with @titusfortner, this change is a simple one that should have zero impact with regards to backwards compatibility, and all it does is allow you to set the default path for the driver's location for each `WebDriver` class at the class level so it doesn't have to be provided at the time of each driver's instantiation. This feature is already present in the Ruby language bindings and is just to bring them closer together in terms of feature parity.  I've added Python unit tests for each impacted `WebDriver` to make sure that the `executable_path` argument always takes priority over the `driver_path` class attribute.  I also adjusted the documentation in the relevant places to update them for the new behavior.   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/7042)","closed","C-py,","SalmonMode","2019-03-19T00:45:00Z","2021-01-25T15:36:31Z"
"","7009","Update proxy code to support HTTPS properly","- [ X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   Description: Current implementation of proxy support in HTTP library is broken when connecting to HTTPS servers. This patch adds support for ""CONNECT"" method to tunnel TLS.   See here for details: https://en.wikipedia.org/wiki/HTTP_tunnel#HTTP_CONNECT_method   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/7009)","closed","C-nodejs,","msarimz89","2019-03-07T14:53:24Z","2021-04-12T08:13:52Z"
"","7263","Summary for Minimize method corrected","- [ X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-dotnet,","JonahKK","2019-06-05T13:59:18Z","2019-10-04T18:54:59Z"
"","6960","Allow conditional builds by language on Travis","- [ X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  When working on the ruby code in my own fork I'm really not interested in running the other language tests when pushing to travis as it's time and resource wasteful.  This updates .travis.yml to allow specifying a repo env var named BUILD_ONLY containing the name of the language(s) tests to be run.   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6960)","closed","","twalpole","2019-02-21T21:03:13Z","2019-02-23T16:34:40Z"
"","6949","Add socks_version to Proxy - Issue #6938","- [ X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  This adds socks_version to the Proxy object.  It's a required parameter in the webdriver spec for specifying a socks proxy - https://w3c.github.io/webdriver/#proxy.  Note: We have socks_username and socks_password in the proxy object as well but they aren't part of the spec - not sure which if any webdriver implementation support them   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6949)","closed","","twalpole","2019-02-19T17:20:26Z","2019-02-21T17:28:08Z"
"","7412","Fix visibility checking for descendants of details elements","- [ X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Should fix issue #3250","closed","D-atoms,","twalpole","2019-07-19T16:12:59Z","2019-09-29T20:45:30Z"
"","6957","Remove Gemfile.lock","- [ X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  As discussed, removing the Gemfile.lock from the project   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6957)","closed","C-rb,","twalpole","2019-02-20T17:57:52Z","2019-02-21T17:25:02Z"
"","7316","Split service process control out to service manager class","- [ X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  @titusfortner This splits the actual service process creation/management out to separate classes.  This would solve the reuse in driver registrations issue and I don't think it adds complexity (actually simplifies the Service classes).  I could also get rid of the browser specific ServiceManager classes and just pass in the browser name to the ServiceManager class and have the shutdown supported be a Hash in it since that's the only difference between them.  Although having it this way does allow for people to add ServiceManager classes if they want/need to (not sure if that is a consideration for Sauce, etc) Thoughts?","closed","C-rb,","twalpole","2019-06-22T18:21:29Z","2020-07-14T20:47:57Z"
"","7013","Ignore overflow on ""display: contents"" elements in the atoms","- [ X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  ""display: contents"" elements are ignored for layout purposes, so overflow should not be checked for them when determining element visibility.  Fixes issue #6977   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/7013)","closed","D-atoms,","twalpole","2019-03-08T23:02:52Z","2019-04-08T19:08:58Z"
"","7065","[rb] Default http client use persistent connections","- [ X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/7065)","closed","C-rb,","twalpole","2019-03-28T03:11:20Z","2019-04-08T19:08:57Z"
"","6950","Bump minimum requirement to ruby 2.3 and fix rubocop violations","- [ X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6950)","closed","C-rb,","twalpole","2019-02-19T19:29:56Z","2019-03-06T06:23:13Z"
"","6948","Allow childprocess 1.x - issue #6907","- [ X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6948)","closed","","twalpole","2019-02-19T16:19:44Z","2019-02-22T10:43:35Z"
"","7082","Update deprecated capability ""platform"" to ""platformName"" for DesiredCapabilities","- [ ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/7082)","closed","C-java,","ZozoZoeLi","2019-04-03T08:36:56Z","2020-07-12T18:56:06Z"
"","7388","Merging with upstream","- [ ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","bharadwaj-pendyala","2019-07-13T11:09:44Z","2019-07-13T11:11:30Z"
"","7347","Update to latest bazel/rules_nodejs","- [ ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","alexeagle","2019-07-01T04:08:15Z","2019-07-01T18:38:15Z"
"","6926","chrome.js - cleaned up formatting (indenting, changed let to const)","- 2-space indent (per .editorconfig) - consistent line breaks at 80 chars - removed unused imports - changed var/let to const where applicable - touched if/else flows to be more readable - createSession now uses Options (chrome-specific)   instead of Capabilities (generic)  - [X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6926)","closed","C-nodejs,","martin770","2019-02-11T18:39:14Z","2019-02-27T01:20:53Z"
"","7540","Only allow CORS when using a —allow-cors flag","**Use case:** When make a request to Selenium server though API in JS code in browser, the request will be ignored by CORS policy.  So, I added —allow-cors flag to turn CORS compatibility mode on, which will allow connections to the Selenium server from within websites hosted on any domain  I'm inspired by @jlipps. He made the same thing in Appium server. https://github.com/appium/appium/pull/11719     **Usage:** `java -jar selenium.jar standalone --allow-cors`  This will give user a warning related to CORS:  > [BaseServer.] - You have enabled CORS requests from any host. Be careful not to visit sites which could maliciously try to start Selenium sessions on your machine   **Test Result:** Without --allow-cors ![CORS](https://user-images.githubusercontent.com/13638569/64405400-f46fb700-d0b9-11e9-8563-69b6163f7c7d.png)  With --allow-cors ![with-allow-cors](https://user-images.githubusercontent.com/13638569/64405431-0e10fe80-d0ba-11e9-9cd2-17c6343eb062.png)    - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","zcmgyu","2019-09-06T06:28:03Z","2019-10-16T12:48:14Z"
"","7815","Support functions for message in driver.wait()","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.   ### Supporting functions for `message` in `driver.wait()`.   ### Description This change allows users to pass a function that resolves an error message when the `driver.wait()` condition fails. Currently a `string` can be passed to the `wait()` method, now `() => string` can also be passed.  ### Motivation and Context Currently a user only has the ability to pass a message containing information about the step at the beginning of the test. Giving a user the ability to pass a function that resolves a message allows the message to contain information that is made available at the end of the test. The motivation for this PR is to be able to write out information about the current state of the test results after a timeout period has expired.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","C-nodejs,","jackall3n","2019-11-26T15:45:37Z","2020-03-09T15:11:15Z"
"","7850","Add: Added W3C capability strictFileInteractability(c-nodejs)","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","C-nodejs,","harsha509","2019-12-07T02:21:35Z","2019-12-17T12:53:36Z"
"","7849","Fix: Fixing typo errors","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","harsha509","2019-12-06T17:49:44Z","2019-12-06T19:21:58Z"
"","7289",".setChromeOptions() not respected with chromedriver@75","**Solved this for myself, see updates in comments!**  ## 🐛 Bug Report  This is about `selenium-webdriver` for Node.  In some cases, when trying to create a new driver for Chrome, options set with `.setChromeOptions()` are not respected. If you have a Node script that creates the driver, it depends on how the script is called: the options are respected if you call `node ...` directly, but it does not work if you call the same script via `npm run ...` with a command aliased to that same script.  ## To Reproduce Take the following script:  ```javascript // test.js  const {Builder} = require('selenium-webdriver'); const chrome = require('selenium-webdriver/chrome');  // 'disable-infobars' should disable the ""Chrome is being controlled // by automated test software""-warning let chrome_options = new chrome.Options().addArguments(""disable-infobars"")  const driver = new Builder() 	.setChromeOptions(chrome_options) 	.forBrowser('chrome') 	.build(); ```  If you run it with ``` node test.js ``` a Chrome browser should come up, with **no** warning about ""Chrome is being controlled by automated test software."".  Now run the same script via ``` npm test ``` where we aliased `test` to `node test.js`: ```javascript // package.json  ... ""scripts"": { 	""test"": ""node test.js"" } ``` Again, a Chrome browser should pop up, but now (in my case), it **does** have the warning """"Chrome is being controlled by automated test software."".  ## Expected behavior  In both cases, the `.setChromeOptions()` should be respected, and no warning should be shown.  I suspect the issue is not with `npm` itself, but that it does set certain environment variables that influence how the driver is built. E.g. if you dump `process.env` in the second case, `npm` has set tens of `npm_config` environment variables. Something like that might be the cause. In that case, I expect `selenium-webdriver` to handle that more robustly.  Note: `npm` runs scripts with `sh`, and although I use `zsh`, if you use `sh` specifically: ``` sh -c 'node test.js` ``` it still works, so I don't think that's the problem.  No problems arise when doing the same in Firefox (i.e. with `.setFirefoxOptions`)  If there are any other ways I can test the behaviour of the webdriver, I would like to know, as it was very hard for me to properly debug the issue and check how and why webdriver does certain things. I did manage to [get the output of the `webdriver.http` logs,](https://seleniumhq.github.io/selenium/docs/api/javascript/module/selenium-webdriver/lib/logging.html) and although it differed between the two cases, I couldn't tell what caused it and whether the difference was problematic.  ## Test script or set of commands reproducing this issue  For a full setup demonstrating the bug, see my repo [rensbaardman/npm-selenium-webdriver-bug](https://github.com/rensbaardman/npm-selenium-webdriver-bug).  ## Environment  OS: OS X 10.11.6 Browser: Chrome Browser version: 75.0.3770.80 Browser Driver version: chromedriver@75.0.0 selenium-webdriver version: selenium-webdriver@4.0.0-alpha.1 Node version: v10.16.0 npm version: 6.9.0","closed","","rensbaardman","2019-06-13T12:50:42Z","2019-08-14T08:09:59Z"
"","7757","connect to local browser but can't set agent","**i started a local brower and used this**  `options.add_experimental_option(""debuggerAddress"", ""127.0.0.1:62486"")`, **but it can't set agent by** `options.add_argument(f'--proxy-server=xxx.xx.xx.xx:8800')`.   **Thanks guys, i need help.**","closed","","Heartfilia","2019-11-08T01:22:08Z","2019-12-08T14:36:40Z"
"","7604","Unable to run webdriverio tests on IE11 using selenium grid","**Environment:**  **WebdriverIO version:** 5.11.0  **Mode:** WDIO Testrunner (sync)  **Browser name and version:** IE 11  **Host machine:** Mac 10.13.6  **Windows machine:** 64 bit windows server 2019  **selenium standalone:** selenium-server-standalone-3.141.59.jar  **IE driver:** 32 bit 3.14.0 **Config of WebdriverIO:**   host: 'windows machine ip',   port: 4444,   path: '/wd/hub',   specs: [`${pathToTests}*.js`],   deprecationWarnings: false,   maxInstances: 1,   capabilities: [     {       browserName: 'internet explorer',       version: 11,       platform: 'WINDOWS',        platformName: 'WINDOWS',       logLevel: debug,       'se:ieOptions': {         'ie.ensureCleanSession': true,         ignoreZoomSetting: true,         ignoreProtectedModeSettings: true       }     }   ] sync: true, **Issue Description:**  Unable to execute webdriverio tests on IE using selenium grid. The browser itself is not launched. My application is running locally on mac host port 3000. From Mac host, I have established reverse ssh tunnel to a windows machine hosted on aws. I tested successfully that there is no issue with ssh tunnel since I can access my application on port 3000 inside windows machine. selenium grid is launched on windows machine. When I trigger tests from my local mac host, I see an exception inside selenium hub. **Selenium hub logs:**  2019-09-26 12:48:17.446:WARN:osjs.HttpChannel:qtp21880137-15: /wd/hub/session java.io.IOException: org.openqa.grid.common.exception.GridException: Cannot extract a capabilities from the request: {""capabilities"":{""alwaysMatch"":{""browserName"":""internet explorer"",""version"":11,""platform"":""WINDOWS"",""platformName"":""WINDOWS"",""se:ieOptions"":{""ie.ensureCleanSession"":true,""ignoreZoomSetting"":true,""ignoreProtectedModeSettings"":true}},""firstMatch"":[{}]},""desiredCapabilities"":{""browserName"":""internet explorer"",""version"":11,""platform"":""WINDOWS"",""platformName"":""WINDOWS"",""se:ieOptions"":{""ie.ensureCleanSession"":true,""ignoreZoomSetting"":true,""ignoreProtectedModeSettings"":true}}}  **Selenium hub config:** browserTimeout: 0  debug: false  host: 172.31.31.173  port: 5555  role: node  timeout: 1800  cleanUpCycle: 5000  maxSession: 5  capabilities: Capabilities {browserName: internet explorer, platform: WINDOWS, platformName: WINDOWS, seleniumProtocol: WebDriver, server:CONFIG_UUID: b626910a-b79d-4d5d-a431-87d..., version: 11}  downPollingLimit: 2  hub: http://localhost:4444/grid/register  id: http://172.31.31.173:5555  nodePolling: 5000  nodeStatusCheckTimeout: 5000  proxy: org.openqa.grid.selenium.proxy.DefaultRemoteProxy  register: true  registerCycle: 5000  remoteHost: http://172.31.31.173:5555  unregisterIfStillDownAfter: 60000  **Expected behavior :**  IE browser should get launched on running test  **Actual behavior:**   Getting the exception mentioned above.  Any idea what could be the reason behind the exception?","closed","","pk-saxena","2019-09-26T13:22:01Z","2019-10-26T16:45:15Z"
"","7334","Issue with generating logfile","**Environment:** WebdriverIO version: 4.14.2 Mode: WDIO Testrunner (sync) Browser name and version: IE 11 selenium standalone: selenium-server-standalone-3.141.59.jar IE driver: 32 bit 3.14.0  **Config of WebdriverIO:** specs: [${pathToTests}*.js], deprecationWarnings: false, maxInstances: 1, capabilities: [ { browserName: 'internet explorer', platform: 'WINDOWS', platformName: 'windows', logLevel: 'trace', logFile: 'C:\\Users\\Administrator\\Downloads\\ielog.txt' 'se:ieOptions': { 'ie.ensureCleanSession': true, ignoreZoomSetting: true, ignoreProtectedModeSettings: true } } ], sync: true,  **Issue Description:** I want to generate logFile as specified in capabilities object. But it is not being generated. Any idea on what I am missing here?","closed","","pk-saxena","2019-06-27T15:28:43Z","2019-08-14T06:10:05Z"
"","7322","Issue with element locators in IE","**Environment:** WebdriverIO version: 4.14.2 Mode: WDIO Testrunner (sync) Browser name and version: IE 11 selenium standalone: selenium-server-standalone-3.141.59.jar IE driver: 32 bit 3.14.0  **Config of WebdriverIO:** specs: [${pathToTests}*.js], deprecationWarnings: false, maxInstances: 1, capabilities: [     {       browserName: 'internet explorer',       platform: 'WINDOWS',       platformName: 'windows',       logLevel: 'trace',       'se:ieOptions': {         'ie.ensureCleanSession': true,         ignoreZoomSetting: true,         ignoreProtectedModeSettings: true       }     }   ], sync: true,  **Issue Description:**  I have following line of code that works perfectly fine in chrome browser but fails when running on IE: `         browser.waitForVisible('tbody tr #recruiter_application_status') ` Getting error: Error: Promise was rejected with the following reason: result.value.map is not a function     at elementIdDisplayed  Did anyone face similar issue?","closed","","pk-saxena","2019-06-24T15:16:27Z","2019-08-14T07:09:44Z"
"","7236","Issue running webdriverio tests on IE11 using selenium grid","**Environment:**     **WebdriverIO version:** 4.14.2     **Mode:** WDIO Testrunner (sync)     **Browser name and version:** IE 11     **Host machine:** Mac 10.13.6     **Guest machine:** Windows 8.1     **selenium standalone:** selenium-server-standalone-3.141.59.jar     **IE driver:** 32 bit 3.14.0  **Config of WebdriverIO** ```   host: '',   port: 4444,   path: '/wd/hub',   specs: [`${pathToTests}*.js`],   deprecationWarnings: false,   maxInstances: 1,   capabilities: [     {       browserName: 'internet explorer',       version: 11,       platformName: 'windows 8.1',     }   ],   sync: true, ``` **Issue Description:** Unable to execute webdriverio tests on IE using selenium grid. Getting exception: org.openqa.grid.common.exception.CapabilityNotPresentOnTheGridException: cannot find : Capabilities {browserName: internet explorer, handlesAlerts: true, javascriptEnabled: true, locationContextEnabled: true, loggingPrefs: org.openqa.selenium.logging..., platformName: windows 8.1, requestOrigins: {name: webdriverio, url: http://webdriver.io, version: 4.14.2}, rotatable: true, version: 11}  **To Reproduce** I am running windows 8.1 VM inside virtualbox on mac host. This is done in order to be able to run IE tests on mac. The Mac is running a Selenium-Grid hub. The Windows VM on Mac is running a Selenium node that hooks up to the hub. I have tested that VM is able to ping my Mac. This is done by changing the value of 'Attached To' in the Network setting of VM to Bridged Adapter. The whole set up is described here: http://kprakobkit.github.io/how-to-setup-selenium-webdriver-to-run-in-ie-on-a-mac/ On my host machine, when I go to http://localhost:4444/grid/console, I can see IE node as well.  **Expected behavior** IE browser should get launched inside windows VM on running test  **Actual behavior** Getting the exception mentioned above","closed","R-awaiting answer,","pk-saxena","2019-05-26T16:23:11Z","2019-08-14T10:09:37Z"
"","7088","How to simulate touch tap?","**Environment** OS:  Windows 10 Browser: Firefox Browser version:  66.0.2 (32 bit) gekodriver version: 0.24.0 Working with Python3  **Problem** I'm trying to simulate a touch tap with selenium, this is the interested portion of the code that i wrote for this work  ``` elem = driver.find_element_by_css_selector("".qJfNm"") touch = TouchActions(driver) touch.tap(elem).perform() ```  but it raise this error and i don't understand why, i don't know if is my pc/code problem or something else ``` Traceback (most recent call last):   File ""C:/Users/mcara/OneDrive/Desktop/instagram bot mobile/instagram_bot_mobile.py"", line 63, in      touch.tap(elem).perform()   File ""C:\Users\mcara\PycharmProjects\1\venv\lib\site-packages\selenium\webdriver\common\touch_actions.py"", line 47, in perform     action()   File ""C:\Users\mcara\PycharmProjects\1\venv\lib\site-packages\selenium\webdriver\common\touch_actions.py"", line 57, in      Command.SINGLE_TAP, {'element': on_element.id}))   File ""C:\Users\mcara\PycharmProjects\1\venv\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 321, in execute     self.error_handler.check_response(response)   File ""C:\Users\mcara\PycharmProjects\1\venv\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.WebDriverException: Message: POST /session/11d3859a-4963-49d9-a143-b11d71fbfa8a/touch/click did not match a known command ```  I've found nothing online about this issue","closed","I-stale,","Linch1","2019-04-05T20:42:38Z","2021-12-04T00:06:35Z"
"","7212","Dev tools Network and Performance","**Authors:** Adi Ohana Shay Dratler Behalf of Intuit  **Summary:** Added Chrome DevTools Network and Performance API's Added test scenarios that will run when running test_chrome command  **Notes And Gaps:** * Need to add support for List as Command input. * Add better error handling for DevTools operations * Add more test scenarios * Implement more DevTools methods according to https://chromedevtools.github.io/devtools-protocol/  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-java,","adiohana","2019-05-16T09:19:37Z","2019-12-15T22:58:08Z"
"","7634","Add method DELETE, PUT into allowedMethods of CORS","**#Fix merged PR:** https://github.com/SeleniumHQ/selenium/pull/7540  **Issues:**  Currently, the default value of allowedMethods of Jetty cross origin filter is GET,POST,HEAD. But [WebDriver also supports method DELETE](https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#command-summary), so you couldn't use delete method unless adding that method into allowed methods of Cross-Origin Filter.  **Jetty CORS document:** https://www.eclipse.org/jetty/documentation/9.4.x/cross-origin-filter.html  **Test Result:**  ![Screen Shot 2019-10-02 at 13 46 32](https://user-images.githubusercontent.com/13638569/66019754-8d5dea80-e51f-11e9-8a0b-be1936c2b984.png)        - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-grid,","zcmgyu","2019-10-02T05:18:59Z","2019-12-18T07:54:49Z"
"","7348","[py] Chrome options override desired capabilities","* Pass options to the remote driver (future proof) * Convert desired caps to options rather than the other way around  Fixes #5709       - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-py,","earendil","2019-07-01T11:51:37Z","2021-01-25T16:25:57Z"
"","7294","Devtools security","* added Security domain * Fixed some standardization issues in Network domain   - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","adiohana","2019-06-16T03:30:05Z","2019-06-20T10:41:52Z"
"","7677","Selenium Python - Passing `firefox_profile` arg doesn't seem to take effect","* `selenium==3.141.0` Python package. * Firefox version 69.0.3 (64bits) * `geckodriver` 0.25.0  I am trying to launch launch a Firefox browser with an extension installed. I am using the following code:  ```python from selenium import webdriver  profile = webdriver.FirefoxProfile() profile.add_extension(""/path/to/extension.xpi"") driver = webdriver.Firefox(firefox_profile=profile) ```  Now, the Firefox window that pops up doesn not have the extension installed. When I look in ""about:support"", I can see that the ""Profile folder"" is different than the one I can see in Python with `driver.profile.path`. In fact, checking the `geckodriver.log` I can see (not full log output for readability):  ``` INFO	Running command: ""firefox-bin"" ""-marionette"" ""-foreground"" ""-no-remote"" ""-profile"" ""/path/to/profile-A"" WARN	addMetadata: Add-on id-of-my-extension is invalid: Error: File /path/to/profile-A/extensions/id-of-my-extension does not contain a valid manifest(resource://gre/modules/addons/XPIInstall.jsm:671:11) JS Stack trace: loadManifest@XPIInstall.jsm:671:11 [...] ```  As you can see, the Firefox command has a `-profile` argument, but ""/path/to/profile-A"" is not the path to the profile I created with Python (let's call it /path/to/profile-B). Nevertheless it does try to load the extension from ""profile-A"", but the thing is that the extension is not present in that path but in the path to ""profile-B"".","closed","C-py,","lexotero","2019-10-11T14:05:35Z","2021-09-05T07:50:48Z"
"","6904","Chromedriver selenium opens page but closes 2 seconds later (Multiple Error Messages)","'m currently using chromedriver 2.25 to launch a webpage. Everything is done in python but however, when i run the script, i get the following error below.  my chrome version is chrome 54+ and I'm running windows 7 professional.  I've tried using chromedriver 2.27 but I still get the same error message. Does anyone know why I keep getting this error message :/? Would really apperciate any help here :)      [0131/143630:ERROR:angle_platform_impl.cc(33)] ANGLE Display::initialize     error 4 : Could not create D3D11 device.     [0131/143630:ERROR:gl_surface_egl.cc(612)] eglInitialize D3D11 failed     with error EGL_NOT_INITIALIZED, trying next display type     [0131/143630:ERROR:angle_platform_impl.cc(33)] ANGLE Display::initialize     error 4 : Renderer does not support PS 3.0.aborting!     [0131/143630:ERROR:gl_surface_egl.cc(612)] eglInitialize D3D9 failed     with error EGL_NOT_INITIALIZED     [0131/143630:ERROR:gl_initializer_win.cc(272)]     GLSurfaceEGL::InitializeOneOff failed.    [0131/143630:ERROR:gpu_child_thread.cc(352)] Exiting GPU process due to     errors during initialization    [4632:5396:0131/143630:ERROR:browser_gpu_channel_host_factory.cc(113)]     Failed to launch GPU process.","closed","","bryan9898","2019-01-31T07:29:30Z","2019-08-14T22:09:57Z"
"","7545","Stale element not found issue with chromedriver V76.0.3809.68 in Linux container","### Meta - Container OS: Ubuntu 18.04.2 LTS (Bionic Beaver) Selenium version: 3.141.0 Chrome version: 76.0.3809.87 Chromedriver version: 76.0.3809.68 Python version: 3.6.8  ### Issue -  Executing JavaScript to retrieve SVG child tag in iframe throws: selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found  ### Steps to reproduce -  1. Copy the following source code and save it as html file: ```     $(document).ready(function(){ 	var htmlString = """"; 	document.getElementById(""iframetest"").contentWindow.document.write(htmlString); });       ``` 2. Bring up Chrome using Python, and direct to saved html page. Execute following Python code: `driver.execute_script('return $(\'iframe\').contents().find(\'rect\');') `    ### Note -  Executing same JavaScript in Chrome console has no issue. `$('iframe').contents().find('rect')`","closed","","autoibi","2019-09-06T20:54:42Z","2019-10-16T17:09:39Z"
"","7842","Add support to debug virtual authenticators","### Description This patch adds support for the `addCredential`, `getCredentials`, `removeCredential`, `removeAllCredentials` and `setUserVerified` commands of the WebAuthn automation API.  To add these methods directly into the `VirtualAuthenticator` class, I extracted it into an interface and implemented a `RemoteVirtualAuthenticator` as inner class of `RemoteWebDriver`.  ### Motivation and Context Support more WebAuthn use cases: * Trying an assertion without having to create a credential first. * Handle user verification failures. * Use specific private keys to back credentials. * Handle credentials being cleared from an authenticator gracefully.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.   Fixes #7829","closed","","nsatragno","2019-12-03T22:57:05Z","2019-12-11T10:58:31Z"
"","7817","Bugfix/copyright rake fixes","### Description Fix Copyright Rake task  ### Motivation and Context Fixes a bug  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.   ### Issues fixed - `module_function` is not designed for stateful procedures (Ours is), so lets use a Proper Class instance - Remove the need for iVars polluting the individual class when we want them to change (For each copyright update language) - Have `initialize` handle the format, and the `update` method just do that ... update  Ran it just now, and about 30 Java files got an update, and 2/3 python files. I haven't committed that as I didn't know if you wanted it doing separately.","closed","","luke-hill","2019-11-27T08:39:16Z","2019-11-29T13:32:23Z"
"","7859","Add `SameSite` attribute to `Cookie`","### Description Add `SameSite` attribute to `Cookie`  ### Motivation and Context Cookie object in Selenium Java doesn't support setting `SameSite` attribute, described in the spce: https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-03#section-5.3.7  ChromeDriver already supports it. So improving Selenium Java API to support it as well.  Partially fix #7798, i.e. the Java part. Other language bindings need to be checked to see if a fix is needed or not.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. I believe all the doc needs to be updated is the javadoc for the new field. Please let me know if there is any other document I need to update. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","gjyalpha","2019-12-10T22:39:42Z","2020-05-01T17:57:32Z"
"","7467","Py: Replace instance checking for PointerActions.move_to() to try / except AttributeError block","## 🚀 Feature Proposal I feel the explicit instance checking in `move_to()` method of `selenium/webdriver/common/actions/pointer_actions.py` breaks flexibility of python code and may be against ""easier to ask for forgiveness than permission"" coding style. The disputed code is: ``` class PointerActions(Interaction):  def move_to(self, element, x=None, y=None):         if not isinstance(element, (WebElement, EventFiringWebElement)):             raise AttributeError(""move_to requires a WebElement"")         if x is not None or y is not None:             el_rect = element.rect             left_offset = el_rect['width'] / 2             top_offset = el_rect['height'] / 2             left = -left_offset + (x or 0)             top = -top_offset + (y or 0)         else:             left = 0             top = 0         self.source.create_pointer_move(origin=element, x=int(left), y=int(top))         return self ``` This might be an issue in case (mine in particular) when we have wrapper around `WebElement`. Suppose: ``` class WebElementWrapper:      def __init__(self, webdriver, selector):         self.webdriver = webdriver         self.selector = selector         self._element = None      @property     def web_element(self):         if self._element is None:             try:                 self._element = self.webdriver.find_element_by_selector(self.selector)             except NoSuchElementException as exc:                 raise NoSuchElementException(f""Web Element with selector {self.selector} has not been found.""                                              f""\n{exc.msg}"")         return self._element      def __getattr__(self, attr):         try:             orig_attr = self.web_element.__getattribute__(attr)             if callable(orig_attr):                 def hooked(*args, **kwargs):                     return orig_attr(*args, **kwargs)                 return hooked             return orig_attr         except AttributeError as exc:             raise AttributeError(f""WebElement has no attribute {attr}.\n{exc}"") ``` When I pass instance of WebLementWrapper to `ActionChains(driver).move_to_element(my_wrapped_webelement)` it works as intended as far, as it executes this part: ``` self._actions.append(lambda: self._driver.execute(                                  Command.MOVE_TO, {'element': to_element.id}))  ``` But with forced `w3c` compatibility it goes to: ```         if self._driver.w3c:             self.w3c_actions.pointer_action.move_to(to_element)             self.w3c_actions.key_action.pause() ``` Where it fails on `isinstance()` checking, what has no sense, as Python is flexible enough to handle this inside try / except.","closed","I-stale,","vhryhorchuk-amplify","2019-08-05T13:32:14Z","2021-12-04T00:06:40Z"
"","7462","Deprecating old versions of Python","## 🚀 Feature Proposal Drop support for Python 3.3 and earlier. Drop support for Python 2(?)  ## Motivation Python 3 has had a significant update since the release of Python 3.4. At the time the client library was updated to support Python 3, Python 3.4 was the latest version, which re-added support for `u''` unicode strings to make the Python 2 to 3 transition easier. However, to support both Python 3 and Python 2, at the time, we had to remove all the unicode prefixes from strings, and use `from __future__ import unicode_literals`. I propose we add back the unicode literal prefixes to all strings and remove the future import. This also allows us to clean up all the `.encode().decode()` calls that are in the code base.  On January 1st, 2020, the core developers of Python will end the continued development and fixes for Python 2.7. Python 2.7.18 will be the last release by the Python Software Foundation. At the time of this writing many library and application authors have dropped Python 2 support; such libraries like `pip`, `ipython`, `numpy` have already published distributions that no longer support Python 2.  Despite the popularity of Python 3, Python 2 has a large install base, and many companies are successfully running Python 2 applications without issue. It would not be helpful to simply drop Python 2 support for those institutions who rely on Selenium for their apps. So I propose we create a new folder or repository that is strictly for Python 2, but let the Selenium community update it, while the core developers focus on a pure Python 3 version of the Python bindings.  Once we split out Python 2 from Python 3, we can remove `u''` prefixes since they're no longer necessary, and make Python 3.5.2 the minimally required version. Then we can think about adding features like type annotations, using `pathlib`, and other general clean up.","closed","C-py,","isaulv","2019-08-02T20:48:05Z","2021-09-05T08:21:45Z"
"","7064","Save and Restore http sessions","## 🚀 Feature Proposal Add Save/Restore http session as a feature for RemoteWebDriver.  ## Motivation There are use cases where we want to simulate user's session without login - Verify that we have the correct cookies and allow the user to use the session as long as it is active.  ## Example 1. Creating RemoteWebDriver and execute login 2. Before terminating the Driver session, call driver.saveSession() - this will take relevant cookies for the session and return it as a Map. 3. driver.quite() 4. Create a new RemoteWebDriver instance 5. call driver.restoreSession(Map) in order to ""restore"" the previous session. Another approach for this will be to add the map in capabilities when creating the RemoteWebDriver","closed","I-enhancement,","adiohana","2019-03-27T17:47:27Z","2021-09-05T08:25:10Z"
"","7063","Manual HTTP calls for browser navigation","## 🚀 Feature Proposal Add manual HTTP calls (GET,POST,etc.) to RemoteWebDriver interface.  ## Motivation Currently, RemoteWebDriver has ""browser"" navigation utils - click, get, refresh, back, etc. Sometimes, there are cases we want to navigate to a page and display the response in browser view using manual HTTP calls (GET,POST,etc.) in order to improve performance or simulate a test case.  ## Example driver.httpRequest(POST, body, headers, additionalParams);  I already have an implementation for that in my ""selenium sdk"" I am using on top of remote web driver interface. It is mainly using javascript executions and localStorage for async use cases.","closed","R-awaiting answer,","adiohana","2019-03-27T17:32:51Z","2019-08-14T16:09:47Z"
"","7129","Vivaldi browser support","## 🚀 Feature Proposal  Vivaldi and other chrome based browsers should have easy way to use drivers  ## Motivation  More chrome based browsers exist and it would be nice to provide way to automate on them.  ## Example  It should work as chrome driver, but with support of browser name like vivaldi , chromeEdge etc. `desiredCapabilities: { browserName: ""vivaldi""`...","closed","","senpl","2019-04-23T12:04:28Z","2019-08-14T13:09:44Z"
"","7803","Tor browser suppoty","## 🚀 Feature Proposal  Tor browser support  ## Motivation  tor browser is the best in its category but we can not use with selenium in python on windows  ## Example  ``` from selenium import webdriver from selenium.webdriver.firefox.firefox_profile import FirefoxProfile from selenium.webdriver.firefox.firefox_binary import FirefoxBinary  binary = FirefoxBinary(r'c:\TorBrowser\Browser\firefox.exe') profile = FirefoxProfile(r'C:\TorBrowser\Browser\TorBrowser\Data\Browser\profile.default') profile.set_preference('network.proxy.type', 1) profile.set_preference('network.proxy.socks', '127.0.0.1') profile.set_preference('network.proxy.socks_port', 9150) profile.set_preference(""network.proxy.socks_remote_dns"", True) profile.update_preferences() driver = webdriver.Firefox(firefox_profile= profile, executable_path=r'C:\analizer\geckodriver.exe') driver.get(""http://check.torproject.org"") ```   there is a code for tor but not working","closed","","muhendis80","2019-11-21T17:12:19Z","2020-01-04T20:38:55Z"
"","7586","Upgrade childprocess gem to 3.0","## 🚀 Feature Proposal  This issue is similar to #7387 since `childprocess` gem has recently released 3.0.0 version.  ## Motivation  I have tried and failed to install this gem offline on Windows platform. Through an investigation, I found it was caused by `childprocess` which always tries to install a dependency on Windows through network access and reported it in enkessler/childprocess#158.  ## Example  ...","closed","C-rb,","aidistan","2019-09-21T11:50:21Z","2019-10-29T05:45:06Z"
"","7636","Allow overloading capabilities to ""driver.find_element_by_*(...)"" methods (Python API)","## 🚀 Feature Proposal  This feature would make more flexible the way to reimplement the behavior on `driver.find_element_by_*(...)` on Python. To do that I propose to add the `*args`, `**kwargs` arguments to these methods.  ## Motivation  The main motivation is to only need to reimplement the `driver.find_element(...)` method to change the global behavior of element finding, and allow to provide new arguments that extends the default functionality.  ## Example  Suppose I want to build a custom `driver` that has a retry policy on element finding. To do that, I would override `driver.find_element()` adding a new argument such us the max number of allowed retries as optional. That's possible right now, whereas the problem is that if I want to set this when I use `driver.find_element_by_xpath(...)`, then I would need to reimplement that method to allow something like `*args, **kwargs` arguments.   I would like to this kind of things can be possible without the need of reimplementing every `driver.find_element_by_*(...)` method.  P.D: If the propose is approved, I can work on the changes and then submit a pull request. :wink:","closed","C-py,","garciparedes","2019-10-02T08:18:53Z","2020-04-15T07:53:57Z"
"","7512","Provide an option to disable images loading in Internet Explorer","## 🚀 Feature Proposal  There is an option to disable images loading in Firefox & Chrome.  (Ref: https://stackoverflow.com/questions/48306556/selenium-webdriver-firefoxchrome-java-how-to-disable-image-loading). I don't find the option to do the same in Internet Explorer.  So, opened a thread at StackOverflow. But, no luck. https://stackoverflow.com/questions/57553624/selenium-internet-explorer-java-how-to-disable-images-loading/57557858?noredirect=1#comment101635509_57557858  ## Motivation  Disabling images loading improves the automation test performance.","closed","","NallaSandeep","2019-08-22T06:13:05Z","2019-09-21T11:09:35Z"
"","7783","Enable use of char and string when generating atoms.cc","## 🚀 Feature Proposal  The previous build structure had an options to generate javascript/atoms.h & atoms.cc using char* and std::string. The bazel build uses only char_t and std::wstring. We need to restore the option to choose; char_t and std::wstring will be the default.  Also, the current build actually uses chat_t, not char_t in the header file.  ## Motivation  Please outline the motivation for the proposal. The bazel build breaks compatibility with ChromeDriver, which code uses char* and std::string; the chromium code style doesn't allow std::wstring.  ## Example  instead of  extern const wchar_t* const CLEAR[]; We need: extern const char* const CLEAR[];  We are preparing a PR for this change.","closed","D-atoms,","TriciaCrichton","2019-11-14T00:06:29Z","2019-12-29T14:22:51Z"
"","7722","Set capabilities via JSON","## 🚀 Feature Proposal  The Java client for selenium appears to require a programmatic approach to setting capabilities. It would be great if driver creation could be config driven.  ## Motivation  When having a need to test against a large array of devices with various capabilities, it makes more sense to implement a config-driven approach to driver creation.  This approach could also be implemented across all binding languages.  ## Example  WebDriver driver = new ChromeDriver(someJsonFileOrObject)  Please provide an example for how this feature would be used.  Any case where we want to modify the capabilities for a large set of drivers to use for testing without making any code changes.","closed","I-enhancement,","kodayashi","2019-10-29T19:54:36Z","2021-09-05T08:12:27Z"
"","7646","[Java] Enable OkHttp cookies","## 🚀 Feature Proposal  selenium-java-3.141.59 uses OkHttp client internally to execute HTTP commands. If a persistent cookies policy is enabled for OkHttp client, we could use AWS load balancer sticky session function.  ## Motivation  We want to have an AWS load balancer sitting in front of a group of [selenoids](https://aerokube.com/selenoid/latest/) (similar to selenium hub), so the selenoid nodes can auto scale based on the running load.  ## Example  OkHttp client is able to support cookie handling through some third-party dependency since version 3.0.0. If this request is useful, I'd like to raise a pull request.","closed","C-java,","yunj","2019-10-04T00:20:53Z","2021-09-05T08:19:14Z"
"","6884","[NodeJS] Add the timeout option for http.request","## 🚀 Feature Proposal  Right now this call to http.request: https://github.com/SeleniumHQ/selenium/blob/master/javascript/node/selenium-webdriver/http/index.js#L194  passes options crafted from the send method just up above: https://github.com/SeleniumHQ/selenium/blob/master/javascript/node/selenium-webdriver/http/index.js#L125  These options are hardcoded there with no possibility to any thing custom such as  `timeout` as seen in the parameters here: https://nodejs.org/api/http.html#http_http_request_url_options_callback  So either support a way for the user to pass a ""default timeout"" or a ""request timeout"" down to this option set or have a base option set that would extend the one you are making.  ## Motivation  We have a somewhat flaky network environment and we're using the browserstack service for some tests.  Once in a while, one of the TCP connection will fail and will start retransmitting over and over and the remote server has no clue we didn't get the response and the local lib keeps trying... which never timesout.  What stops is our test configured to kill the selenium after 200 seconds.  you can see an example of the logs from the webdriver here: ``` [2019-01-25T21:05:07Z] [FINER] [webdriver.http.Executor] >>> POST /session/4de044844364a8ae506411939f0139a0813ebfe3/element/3/value [2019-01-25T21:08:07Z] [FINEST] [webdriver.http] Translating command: get ``` It never gets an answer.  So in order for us to retry or at least see the problem before the test times out we'd need the http.request to raise an error after a couple seconds.  ## Example  Not completely sure how it would be the best way to implement this, it seems very deep down.  On top of my head maybe having a `request.timeout` capability that could add a new ._http_options to the httpclient instnaciated here: https://github.com/SeleniumHQ/selenium/blob/master/javascript/node/selenium-webdriver/index.js#L640  Thank you very much for your tool.  If you give me a hint on how it should be done i could consider opening a pull request","closed","I-stale,","lindycoder","2019-01-25T22:20:54Z","2021-12-04T00:06:33Z"
"","6985","Publish a nuget package with chromedriver","## 🚀 Feature Proposal  Publish a nuget package with chromedriver, similarly to how you publish a Maven artifact with it https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-chrome-driver  ## Motivation  There are currently a few NuGet packages that will install chromedriver, [the most successful](https://www.nuget.org/packages/Selenium.WebDriver.ChromeDriver/) has some 4.5M downloads. These are done by the community.   Enterprises have a tough time approving these for use. It would be much easier if SeleniumHq would publish it.","closed","R-awaiting answer,","bgavrilMS","2019-03-01T11:43:57Z","2019-08-14T20:10:05Z"
"","6969","support Console command :screenshot","## 🚀 Feature Proposal  propose to support webconsole :screenshot command. this command can run within FF browser, but when tried the same in selenium, it reports ""elenium.common.exceptions.JavascriptException: Message: SyntaxError: expected expression, got ':'"" with command below:  driver.execute_script("":screenshot --selector '.css1' --filename 'test.png'"")  ## Motivation  very useful for automation, for lazy load web content(image, text...) and save it(with selector) as picture instead of saving whole page.   ## Example  Please provide an example for how this feature would be used.","closed","","SS024","2019-02-26T06:32:32Z","2019-08-14T18:09:52Z"
"","7858","Support Numlock Key","## 🚀 Feature Proposal  Please support the numlock key. It is not possible to use the Number pad keys (Keys.NUMPAD0...) without toggle Numlock.  ## Motivation  It is not possible to use the Number pad keys (Keys.NUMPAD0...) without toggle Numlock.  ## Example  Unable to enter GS group separator (character 29) which is needed to simulate GS1 Barcode FNC1 character (https://www.barcodefaq.com/barcode-properties/definitions/gs1-application-identifiers/#FNC1 / https://www.barcodefaq.com/ascii-chart-char-set/). Can be entered via press ALT and enter numpad ""029"" (but numpad must be enabled via numlock).","closed","I-stale,","mseele","2019-12-10T12:11:45Z","2021-12-03T00:06:47Z"
"","7221","Make driver.save_screenshot accept pathlib.Path objects.","## 🚀 Feature Proposal  On Python 3.6+ Make driver.save_screenshot accept pathlib.Path objects.  ## Motivation  Better consistency of code that use that kind of abstractions. (avoiding use of as_posix() method of pathlib.Path).","closed","C-py,","carlosplanchon","2019-05-20T06:39:19Z","2019-08-14T09:09:44Z"
"","7610","[.NET] Nullable Reference Types annotations","## 🚀 Feature Proposal  Now that C# 8 is out, people will be using the Nullable Reference Types language feature. Would be really great to have WebDriver classes annotated.  ## Motivation  Nullability annotations would really help to know which methods/properties might (or might not) return nulls, and to get compiler warnings if not handled properly.  ## Example  ```csharp public bool HasClass(this IWebElement element, string @class) { 	var classAttribute = element.GetAttribute(""class""); 	return classAttribute.Split("" "").Contains(@class); //","closed","I-stale,","Dreamescaper","2019-09-27T10:32:49Z","2021-12-04T00:06:45Z"
"","7032","Disable SSO as an Option in ChromeDriver to automate SSO Applications","## 🚀 Feature Proposal  Need a way to enable ChromeDriver to handle different User IDs via selenium so that we can automate applications with SSO.  ## Motivation  We are required to do automation of applications which run in Chrome but uses SSO, so while testing we are not able to simulate different users.  ## Example  Need a method where SSO User Id/ Password can be passed by Driver only.","closed","","parwalrahul","2019-03-14T17:47:10Z","2019-08-14T18:09:54Z"
"","7507","Support for InternetExplorerDriver of Microsoft Edge on macOS","## 🚀 Feature Proposal  Microsoft is preparing to release Edge on macOS (https://www.microsoftedgeinsider.com/en-us/download). Requesting support of Edge on macOS in the InternetExplorerDriver.  ## Motivation  Support for InternetExplorerDriver to run on macOS would help simplify deployment of integration servers, since all major modern browsers can now run on macOS.  ## Example  As normal, except it would run on macOS instead of Windows, and only for Edge.","closed","","xcolwell","2019-08-20T23:47:31Z","2019-09-20T01:09:35Z"
"","6876","set_attribute not availabl in python","## 🚀 Feature Proposal  It would be nice to add the method `set_attribute` to the base webdriver class.  ## Motivation  Other language bindings, such as Java, [apparently have a `setAttribute` method](https://stackoverflow.com/questions/35127108/how-to-set-value-to-input-web-element-using-selenium). I've run into multiple situations where this would come in handy.  ## Example  Instead of using `send_keys` to fill out a long chunk of text, using the proposed `set_attribute` the field value could be set in one go without as much delay as using `send_keys`","closed","","Mattwmaster58","2019-01-23T20:37:53Z","2019-08-14T23:09:37Z"
"","6859","ErrorCode handling in shorter version","## 🚀 Feature Proposal  It is a code refactor proposal  ## Motivation  Good python code practices. Please comment and discuss.  ## Example  Instead of https://github.com/SeleniumHQ/selenium/blob/master/py/selenium/webdriver/remote/errorhandler.py#L141      from enum import Enum      # some mock data     status = 'OK'     exception_class = -1      # proposal here     class Code:         def __init__(self, code, status, ex):             self.code = code             self.status = status             self.ex = ex          def check(self, status):             return status in self.status       class ErrorCode(Enum):         """"""Valid Error Codes""""""         SUCCESS = Code(0, '', None)         OK = Code(1, 'OK', 'exception_1')         FALSE = Code(2, 'False', 'exception_2')         TRUE= Code(3, 'True', 'exception_3')      # use this in handler instead of ifs     # if status == ErrorCode.SUCCESS.value.code:     #    print('do stuff for success')      for case in ErrorCode:         if case.value.check(status):             exception_class = case.value.ex             break         else:             exception_class = 'webdriver_ex'      print(exception_class)","closed","","lkord","2019-01-16T17:29:56Z","2019-08-14T23:09:48Z"
"","7632","Add the response to the logs when executing a RemoteWebDriver command in Java","## 🚀 Feature Proposal  In the Java class RemoteWebDriver within the method: `protected Response execute(String driverCommand, Map parameters)`  the execute command is wrapped around logs statements:  `log(sessionId, command.getName(), command, When.BEFORE);` `response = executor.execute(command);` `log(sessionId, command.getName(), command, When.AFTER);`  can this be changed to:  `log(sessionId, command.getName(), command, When.BEFORE);` `response = executor.execute(command);` `log(sessionId, command.getName(), response, When.AFTER);`  or something along these lines so we can see the result of the command being executed.  ## Motivation  We can make a class that extends lets say AndroidDriver and then @Override the log method so we can use our own logging set up for test results.","closed","C-java,","Valuuin","2019-10-01T20:26:35Z","2020-03-17T14:06:12Z"
"","7738","get_implicit_wait","## 🚀 Feature Proposal  I would like to propose a driver.get_implicit_wait() function.  ## Motivation  Functions shouldn't have side-effects if if I call driver.implicitly_wait(2) in my function, there is no way to set it back to what it was.  ## Example      def do_something():         old_wait = driver.get_implicit_wait()         driver.implicitly_wait(2)         try:             ... do stuff ...         finally:             driver.implicitly_wait(old_wait)","closed","C-py,","snoopyjc","2019-11-02T16:41:05Z","2020-04-02T14:32:24Z"
"","6987","ExpectedConditions.presenceOf(WebElement) for Java","## 🚀 Feature Proposal  I think the Java bindings could use an `ExpectedConditions.presenceOf(WebElement)` wait condition for use together with the `FindBy` annotation. In fact, every canned condition that can be used with a `By` parameter, should also have a counterpart that can be used with a `WebElement` parameter.  ## Motivation  In Java, you can already call `ExpectedConditions.presenceOfElementLocated(By)`, but the use of the `FindBy` annotation makes tests easier to read, and since there could be cases when you need to specify a complex wait condition that would want to use something like `presenceOf(WebElement)` as part of the condition, I miss a method like that.  ## Example  Now, this is quite difficult for me, because honestly I can't tell an actually practical, non-fabricated real-life example where particularly `presenceOf` would be used. :) Yes I could say: **""in complex wait conditions""** (explained below), but I could still not come up with an example where I actually needed it. And that is because my examples would be only as strong as examples for `presenceOfElementLocated(By)`. The reason is, just checking if elements are present in the DOM aren't the most useful checks, as most of the time you also care about visibility. Or that's what would be normal, a regular user only checks what is also visible on the screen, except for exceptional cases, but I also call them hacky cases, because you rely too much on internal details. Still, I know sometimes `presenceOf` may be the only option, and `visibilityOf`, while it is meant to be used on elements that are known to be present in the DOM, with Selenium 3's default implicit timeout of zero, it can be used just fine with `FindBy`-annotated elements. Although this isn't really a strong reasoning either, because most people realize that their life is simpler if the implicit timeout is set to something higher (what's the point of such a feature when it's not used most of the time, unless you use `findElement` together with Protractor against an Angular app of course?), then mixing up implicit and explicit timeouts will result in problems, but that's already true for `presenceOfElementLocated(By)`. And of course there's the point of implicit waits also being simply more concise than explicitly waiting for an element to be present, unless your wait condition is more complex, **like, including `or` calls**. So as you can see, **it's really just a matter of where you put the selectors**. For that reason alone, a consistent parity between such methods would be expected. One should not exist without the other.  _**(Edit: this paragraph is now the topic of #7007, to keep this issue focused on 1 topic.)** Maybe an also useful feature request would be to **disable implicit timeouts when explicit waits are performed**. My life has become much easier when I extended the `WebdriverWait` class to do exactly that, as I didn't end up in situations where the total wait time exceeded the explicit wait time. I see many end-to-end testing tools have been created partly for the reason that they do better than the timeout handling in Selenium. Maybe we should change that. And maybe that's too late to be included in Selenium 3, I know. :)_  Also, **why would wait conditions be complex**? At first they may sound like you don't really know what you're expecting. e.g. you enter a search keyword into the search field. There may or may not be any results displayed, and somehow both are acceptable, but not something like a validation error or an internal server error... Then you would check for either a ""no-result"" element or a ""list"" element. But why would you be in a situation like that instead of managing test data properly? Sometimes you have no option as you don't control the data well enough? You don't want your tests to fail because of that? **Rare cases for sure.** And then you also have `driver.findElements` as well as `ExpectedConditions.presenceOfAllElementsLocatedBy`... But they're still not ones I would use together with `@FindBy` or `@FindAll` or `@FindBys`.  I will leave to your judgement whether I provided a good enough reason. If you say no to it, I would appreciate a reasoning that is more than just ""you guys weren't convinced; I didn't give a good enough reason."" Thanks in advance.","closed","R-awaiting answer,","rkrisztian","2019-03-02T13:37:25Z","2020-01-13T22:49:51Z"
"","7567","Selenium / Edge Chromium JavaScript / Node support","## 🚀 Feature Proposal  I noticed all the examples online make use of Java to demonstrate how to use Selenium with Edge Chromium.  JavaScript/Node seems not to be supported by now.  Any feedback on this?  Thanks Bilal","closed","D-edge,","bhaidar","2019-09-15T19:39:42Z","2021-09-05T08:34:53Z"
"","7344","Critical hide window feature missing","## 🚀 Feature Proposal  headless for chrome causes massive javascript errors with things like ASP.net security. If you run without headless it works fine. This is a huge problem for someone writing in PowerShell making a GUI.  ## Motivation  This guy created a solution: https://pixytech.com/2016/09/09/selenium-webdriver-get-browser-hwnd/ Created an extension to your webdll to fix this problem. PLEASE MAKE THIS POSSIBLE BY DEFAULT! A good reason for this is when you are at a company and are restricted to only PowerShell this is the only possible way to get things done nice and sleek. You don't want a window popping up showing the automation when using a tool. All you need is the HWND of the main window being used and it's already been done by this guy...  All sites of people trying to reach out to get this fixed: https://social.msdn.microsoft.com/Forums/vstudio/ja-JP/afb2d145-7280-4600-9f9f-231d53f2db25/how-to-get-the-process-id-of-the-browser-when-i-launch-a-new-browser?forum=vstest https://stackoverflow.com/questions/11526260/get-window-handle-intptr-from-selenium-webdrivers-current-window-guid https://groups.google.com/forum/#!topic/selenium-users/gjFHDKhiZD8  you can just google it, you get the idea.  ## Example  I'm sure there is many sites that do this out there but my examples are internal so sorry i can't give them. Really https://pixytech.com/2016/09/09/selenium-webdriver-get-browser-hwnd/ shows exactly what's wrong too. setup everything in powershell and try to hide it. This is the only way to do it right now... ######################## #the main dll hack call $code = '[DllImport(""user32.dll"")] public static extern bool ShowWindowAsync(IntPtr hWnd, int nCmdShow);' #must use an add-type but it will stop itself after $seleniumdriver dies $type = Add-Type -MemberDefinition $code -Name MyAPI -PassThru #tricky part to get the HWND, could fail if you have more than one edge running #this is the BIGGEST problem ###need to create something like a $seleniumDriver.Manage().Window.HWND### $parentEdgeHWND = (Get-Process -Name ""msedge"").MainWindowHandle | Where-Object { $_.ToInt32() -gt 0 } #detect if there is more than one by type. #The type will change because it will be an array instead of a value if ($parentEdgeHWND.GetType().BaseType -eq [System.ValueType]){     #hide it     [void]$type::ShowWindowAsync($parentEdgeHWND, 0) } else {     #no way to fix this problem...need a better way to detect THIS window     [System.Windows.Forms.MessageBox]::Show(""Another instance of Microsoft Edge found...`r`nPlease Close it if you want to use this correctly..."") } ########################","closed","D-chrome,","ziron999","2019-06-29T06:10:25Z","2021-09-05T08:12:26Z"
"","7478","Selenium grid missing configuration for custom capabilities mutators","## 🚀 Feature Proposal  Grid already allows configuration of a Custom Matcher in the hub's config json but if that custom matcher wants to make use of extension capabilities as part of the processing (allowed by w3c specification) but there is no configuration also allow a Capabilities Mutator.  ## Motivation  Selenium Grid appears to passes intermediary extension capabilities through to the nodes which is a violation of the w3c specification for [New Session](https://w3c.github.io/webdriver/#dfn-new-sessions) > If the remote end is an intermediary node, it may use the result of the capabilities processing algorithm to route the new session request to the appropriate endpoint node. > An intermediary node is free to define extension capabilities to assist in this process, however, these specific capabilities *must not be forwarded to the endpoint node.*  ## Suggested fix  Selenium Grid does appears have mechanism to change capabilities with Capabilities Mutator, but it isn't configurable like the Capabilities Matcher.   I think it would be possible to use the existing CapabilitiesMutator logic:  * `org.openqa.selenium.remote.server.NewSessionPipeline#addCapabilitiesMutator` * `org.openqa.selenium.remote.server.NewSessionPipeline#createNewSession`  Suggest adding new config option for `customMutator` like existing `org.openqa.grid.internal.utils.configuration.GridHubConfiguration#capabilityMatcher`   Then when creating the NewSessionPipeline `org.openqa.selenium.remote.server.SeleniumServer#createPipeline` if the configuration is instance of GridHubConfiguration then register the customerMutator","closed","C-grid,","JonathanHallKJR","2019-08-08T02:23:31Z","2021-12-29T00:07:05Z"
"","6979","Add wait methods","## 🚀 Feature Proposal  For each find method like `find_element_by_css_selector` or `find_element_by_css_selector` add wait method wich will be wait until element show.  ## Motivation  I am use python and now I shoud make function  ``` def wait_element_by_css_selector(driver, css_selector, timeout=10):     from selenium.webdriver.common.by import By     from selenium.webdriver.support.wait import WebDriverWait     from selenium.webdriver.support import expected_conditions as EC     return WebDriverWait(driver, timeout).until(EC.presence_of_element_located((By.CSS_SELECTOR, css_selector))) ``` and add it to `WebDriver` as method. I now that it isn`t good practic and I suggest write the correct code and add it to selenium  ## Example  For example I want to send file and when it finishes uploading, a confirm button appears on the page. For click on it you will need to write `driver.wait_element_by_id(""confirm"").click()`","closed","","heckad","2019-02-28T16:24:25Z","2019-08-14T20:09:46Z"
"","7628","extending text_to_be_present_in_element_value functionality","## 🚀 Feature Proposal  extend the functionality of `text_to_be_present_in_element_value` to not only check the attribute ""value"", but any attribute.   ## Motivation  I'm currently automating a webpage, where the title of an image changes from ""in work"" to ""finished"". `text_to_be_present_in_element_value` would be exactly what I need, if I just could change ""value"" to the attribute ""title""  ## Example  As I'm using python, I added following class:   ```  class text_to_be_present_in_element_attribute(object):  	""""""  	An expectation for checking if the given text is present in the elements attribute  	locator, attribute, text  	""""""  	def __init__(self, locator, attribute_, text_):  		self.locator = locator  		self.attribute = attribute_  		self.text = text_  	  	def __call__(self, driver):  		try:  			element_text = _find_element(driver,  										self.locator).get_attribute(self.attribute)  			if element_text:  				return self.text in element_text  			else:  				return False  		except StaleElementReferenceException:  				return False ```  So it can be called like:  `WebDriverWait(client, 5).until(EC.text_to_be_present_in_element_attribute((By.XPATH, ""//div[contains(text(), 'sending')]/../preceding-sibling::div/img""), ""title"", ""finished""))`","closed","C-py,","LilyNatsuyuki","2019-10-01T15:56:56Z","2021-11-12T00:07:02Z"
"","7339","Allow adding listeners for Chrome DevTools Protocol Events","## 🚀 Feature Proposal  Expose a way to add listeners for Chrome DevTools Protocol Events. It's already possible to send commands with _browser.driver.sendDevToolsCommand_.  ## Motivation  I'm allowed to start/stop a Screencast, but there is no way of adding a listener to get the actual images produced.  ## Example  ``` // I'm using Selenium through Protractor so I'm accessing the driver from the browser object. browser.driver.addDevToolsEventListener('Page.screencastFrame', (frame) => {     browser.driver.sendDevToolsCommand('Page.screencastFrameAck', { sessionId: frame.sessionId }); }); ```  I'm happy to support the PR if someone points me in the right direction.  Events: https://chromedevtools.github.io/devtools-protocol/tot/Page#event-screencastFrame","closed","","JonWallsten","2019-06-28T14:53:43Z","2021-09-05T08:10:36Z"
"","7007","Disable implicit timeouts during explicit waits","## 🚀 Feature Proposal  Essentially what I report here is the same as #1176, and I know it has a resolution, this ticket is to challenge that resolution.  ## Motivation  Currently timeout handling in Selenium is not ideal in my opinion:  * Efficiency (not my strongest argument, as it may be premature optimization):     * Implicit waiting the most efficient way of waiting for element to exist, because the polling happens in the browser. This timeout however is 0 since Selenium 3, thus not used.     * Explicit waits will continuously do the polling in the client, talking to the browser through the network in every half a second by default (doing up to a total of 20 queries when 10 seconds is the timeout). If for example, one changes the poll interval to 50 ms, this could get worse. * Code readability     * When simply the element existence is the condition, implicit waits are the simplest to use, as `driver.findElement` does not require a new object creation, and use of static imports for more brevity. * Automatic timeout management is less error prone      * Several frameworks (Cypress, TestCafe) would take the timeout handling out of developers' hands, and keep it as automatic as possible. So if you perform several point-and-click operations on a page (one after the other), all you need is, find an element until a timeout happens, then click, then rinse and repeat. If you added explicit waits to parts where you think are necessary, in the future you would find your tests breaking randomly...  Therefore, implicit timeouts do make sense, I think people will want to use them (except with frameworks like Protractor, which should disable such timeouts by itself), however, this effectively means that implicit timeouts should be disabled just for the duration of using `WebDriverWait`, after which, the previously used setting should be restored (regardless of timeouts, I would say, as test writers may catch exceptions for whatever reasons).  ## Example  There are several canned conditions in `ExpectedConditions` that performs an element lookup, either by calling `driver.findElement` explicitely, or implicitely when using `@FindBy` and similar annotations.  https://letmedothat.wordpress.com/2015/04/11/why-would-you-never-mix-explicit-and-implicit-waits-in-selenium-webdriver/","closed","","rkrisztian","2019-03-07T12:39:57Z","2019-08-14T20:09:40Z"
"","7588","Enable TLS support for Jetty","## 🚀 Feature Proposal  Enable the Selenium hub to serve traffic over TLS using a defined PEM certificate and key file  ## Motivation  As good security practice, exposing services over HTTP is discouraged. Enabling HTTPS will allow users to configure a certificate to validate communication with the hub  ## Example  Deploying a Selenium hub server within a cloud provider (or container) and making it accessible via HTTPS","closed","","4x0v7","2019-09-22T06:02:56Z","2019-10-26T16:45:06Z"
"","7203","Change proxy settings after the Webdriver has been created.","## 🚀 Feature Proposal  Currently the proxy settings can be supplied in the Options object while creating a Webdriver. Once created, the proxy settings of that Webdriver cannot be altered. The only way to obtain a Webdriver with a different proxy settings is to discard the existing Webdriver and create a new one.  The proposal is to expose proxy settings of a Webdriver in the method - Webdriver.manage()   When the proxy settings have been changed from the Webdriver.manage() method, any subsequent Webdriver.get() call will use the modified proxy settings.  ## Motivation  Certain sites have very low rate limit threshold for requests from a single IP address because they are aggressive in their effort to prevent attack as well as spider bots. Writing an automation to scan for even a few hundred pages on such sites become a challenge especially when they ban IPs. The solution is to use an HTTP proxy to distribute the requests across multiple IP addresses. To mitigate the rate limit problem, every webdriver.get() request needs to be made from a different proxy. Currently the only was to do that is to discard the webdriver after each webdriver.get() request and create a new driver. This is inefficient and slow, but the bigger problem is that Chromedriver instances do not always close gracefully. If one runs the automation for some time, one notices a lot of zombie Chromedriver instances hanging around if one uses the Unix command ""ps -ef"". This causes memory leaks.     ## Example  Proxy proxy = webdriver.manage().getProxy(); proxy.setHttpProxy(""New proxy server to use""); webdriver.get(""New URL will use the new proxy server"");","closed","","sudiptomajumdar","2019-05-14T06:12:16Z","2019-08-14T10:09:53Z"
"","7769","Enhanced PageFactory / Support of (nested) PageFragements","## 🚀 Feature Proposal  Currently the PageFactory does not support nesting of custom types (a.k.a. page fragement). Whats currently supported by Selenium Java is: - Page1    - WebElement a    - WebElement b    - WebElement c  but not: - Page1    - MyPageFragement1      - WebElement a    - MyPageFragement2      - WebElement b  ## Motivation  Page Fragements is a pattern that was promoted by Arquillian Graphene (http://arquillian.org/arquillian-graphene/#_page_abstractions) and is really very nice to work with. It has some great benefits:   - Fragements are reusable, grouped components (something like ""composite components"" in the JSF world)   - it makes it much more readable  ## How can we support it?  Currently the PageFactory does: - Loop all fields of the instantiated page parameter - Check if @FindBy is present and make use of the ElementLocator, to resolve a WebElement via a Interceptor; a proxy is generated by the java default proxies, which only supports interfaces  What PageFactory could do: - Loop all fields of the instantiated page parameter - Check if @FindBy is present - Create a Proxy via ByteBudy, which is really easy and supports also classes (we need to do this recursive, to also support nesting of fragments) - Apply a interceptor, which delegates all calls of a WebElement to the ElementLocator; all calls of a method which is not from WebElement, will be delagated to the orignal method in the page fragement - We should also allow custom @FindBy annotations (i need something like @FindByParentPartialId)  With this change, something like this is easy possible:  https://gist.github.com/tandraschko/8eaaea0a55846a48293dd99a61c8182b","closed","I-enhancement,","tandraschko","2019-11-11T13:05:40Z","2022-01-26T00:09:51Z"
"","7643","[.NET] Add public constructor to LogEntry class","## 🚀 Feature Proposal  Currently the class only has a private constructor, no setters and an internal method to create a new instance. I'm trying to parse the LogEntry into another class, but writing unit tests is getting a bit tedious (reflection, additional wrappers and so on).   Would be nice if we had a public facing constructor for this. Added suggested code below.  ## Example      '///      /// Represents an entry in a log from a driver instance.     ///      public class LogEntry     {         ///          /// Initializes a new instance of the  class.         ///          private LogEntry()         {         }          public LogEntry(DateTime timestamp, LogLevel level, string message)         {             Timestamp = timestamp;             Level = level;             Message = message ?? string.Empty;         }          ///          /// Gets the timestamp value of the log entry.         ///          public DateTime Timestamp { get; private set; } = DateTime.MinValue;          ///          /// Gets the logging level of the log entry.         ///          public LogLevel Level { get; private set; } = LogLevel.All;          ///          /// Gets the message of the log entry.         ///          public string Message { get; private set; } = string.Empty;          ///          /// Returns a string that represents the current .         ///          /// A string that represents the current .         public override string ToString()         {             return string.Format(CultureInfo.InvariantCulture, ""[{0:yyyy-MM-ddTHH:mm:ssZ}] [{1}] {2}"", Timestamp, Level, Message);         }          ///          /// Creates a  from a dictionary as deserialized from JSON.         ///          /// The  from         /// which to create the .         /// A  with the values in the dictionary.         internal static LogEntry FromDictionary(Dictionary entryDictionary)         {             LogEntry entry = new LogEntry();             if (entryDictionary.ContainsKey(""message""))             {                 entry.Message = entryDictionary[""message""].ToString();             }              if (entryDictionary.ContainsKey(""timestamp""))             {                 DateTime zeroDate = new DateTime(1970, 1, 1, 0, 0, 0, DateTimeKind.Utc);                 double timestampValue = Convert.ToDouble(entryDictionary[""timestamp""], CultureInfo.InvariantCulture);                 entry.Timestamp = zeroDate.AddMilliseconds(timestampValue);             }              if (entryDictionary.ContainsKey(""level""))             {                 string levelValue = entryDictionary[""level""].ToString();                 try                 {                     entry.Level = (LogLevel)Enum.Parse(typeof(LogLevel), levelValue, true);                 }                 catch (ArgumentException)                 {                     // If the requested log level string is not a valid log level,                     // ignore it and use LogLevel.All.                 }             }              return entry;         }     }'","closed","I-stale,","EdwinVanVliet","2019-10-03T14:37:53Z","2021-12-04T00:06:46Z"
"","7571","Network intercept api to inspect request ans reponse","## 🚀 Feature Proposal  Currently  what I learned in my research is that there is no direct way to intercept api calls in webdriverJS. I think it will be a handy feature and I see that already available in few libraries like puppeteer and taiko. (https://taiko.gauge.org/#request-response)  ## Motivation  I searched for this feature for selenium js and could not get an accurate and simple solution. Talked to the Engineers as well and it seems that it will be a good feature to have.   ## Example  Consider a UI which is making calls to a third party api after some manipulations/calculations  on User entries. team does not control the api and they need to make sure the request created by the UI has the right data as per the business logic. In this scenario the only way we can validate this is by looking at the request.   Another scenario is to isolate the testing to UI by sending a mock response to UI and then validating that UI has  the right data displayed .","closed","","bimalviswam","2019-09-16T21:31:12Z","2019-10-26T16:45:21Z"
"","7121","Python ExpectedCondition ""Or"" ""And"" ""Not""","## 🚀 Feature Proposal  Copy the ExpectedConditions ""Or"", ""And"", and ""Not"" from the Java library to the Python library.  ## Motivation  - ""**Or**"" will simplify logic & speed up execution in tests when we need only 1 of several possible expected conditions to appear. - ""**And**"" may simplify logic in tests where we need all of several conditions to appear. - ""**Not**"" may increase code readability  ## Example  e.g. ""**Or**"":  During A/B testing of a website, it is unknown which of 2 elements will be served every page load.  The ""Or"" expected condition can ensure the test is unblocked as soon as either of them displays.  e.g. ""**Or**"": A user may or may not be shown a splash screen before the login-screen.  Using ""Or"", a single test can begin execution as soon as it confirms that either a splash element or a login element is visible.  e.g. ""**And**"": A test may wish to confirm the visibility of multiple elements before continuing.  (_This functionality can be easily synthesized in test code, but using the ""And"" expected condition might create clearer code._)  e.g. ""**Not**"": A test may wish to wait for an element to disappear before continuing.   (_This functionality can be easily synthesized in test code, AND it's often better to use the inverse ExpectedCondition, but using the ""Not"" expected condition might make clearer code._)","closed","C-py,","GQAssurance","2019-04-20T03:10:22Z","2019-09-27T21:09:36Z"
"","7539","Add SetPermission command for ChromeDriver","## 🚀 Feature Proposal  ChromeDriver is adding a SetPermission command; this should be supported by the Selenium libraries as well.  ## Motivation  There is a need for robust mechanism to set permissions during test runs. No existing options work on Chrome in headless mode. This new command will work in headed or headless mode.  ## Example  Web App under test accesses Navigator.Clipboard API. This requires the clipboard-read and clipboard-write permissions. Test code must be able to grant these permissions during the test run.   We plan to submit the updates for the Java binding.","closed","","TriciaCrichton","2019-09-05T18:17:26Z","2019-10-10T11:09:36Z"
"","6873","Add support for W3C ""New Window"" command","## 🚀 Feature Proposal  At the last TPAC it was decided to add a new command called ""New Window"" which allows tests to open a new tab or window. The related work can be seen at https://github.com/w3c/webdriver/issues/1138.  All drivers will have support for this probably soon, so it would be good to get support added in all the Selenium bindings.  As of now the command supports two types of browsing contexts to open, which are `tab` and `window`. If nothing gets passed in the browser will decide the best type on its own. This also happens when the requested type is not supported, eg. new browser window on mobile.  ## Example  Please provide an example for how this feature would be used.  ```python handle, _type = driver.new_window(type_hint=""tab"") driver.switch_to(handle) ```  More WebDriver tests which are part of the web-platform-tests suite can be found at https://github.com/web-platform-tests/wpt/tree/master/webdriver/tests/new_window.","closed","C-nodejs,","whimboo","2019-01-22T23:00:41Z","2019-08-14T15:09:42Z"
"","7247","Add remote connection proxy parameters","## 🚀 Feature Proposal  As a tester on a corporate network that is using a proxy to connect to the internet, I would like to have an option in selenium to add remote connection proxy parameters.  ## Motivation  Our company is behind a proxy and therefore we have an issue when trying to connect to a remote selenium-grid that is outside of our network (e.g. browserstack/saucelabs) since the connection is getting refused (which seems to get stuck with urllib3). For Java and Ruby I have found a workaround  Java ``` System.setProperty(""https.proxyHost"",""192.168.1.10""); System.setProperty(""https.proxyPort"",""3128""); ```  Ruby ``` ENV['HTTP_PROXY'] = 'http://192.168.1.10:3128' ```  With Python I followed the instructions on browserstack: https://www.browserstack.com/automate/python  And I added this before starting the driver: ``` proxy = '192.168.1.10:3128' os.environ['http_proxy'] = proxy  os.environ['HTTP_PROXY'] = proxy os.environ['https_proxy'] = proxy os.environ['HTTPS_PROXY'] = proxy ``` But I keep getting stuck with `urllib3` ``` [ WARN ] Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError(': Failed to establish a new connection: [WinError 10060] A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond')': /wd/hub/session ```  ## Example  To quote someone I spoke to:  > Looks indeed as if there isn't any more environment variable based injection of proxy settings possible for urllib3. You need to replace calls for urllib3.PoolManager(...) with urllib3.ProxyManager('http://localhost:8080',...)  or whatever your proxy_url is. > Since Selenium doesn't has implemented an own setting for this within their API, you need to do this change on your own within site-packages\selenium\webdriver\remote\remote_connection.py  But that is going a bit to far for me and I rather see a solution like this: ``` driver = webdriver.Remote(     command_executor='http://user:key@hub.browserstack.com:80/wd/hub',     desired_capabilities=desired_cap,     remote_http_proxy = '192.168.1.10:3128') ``` Or something you can add to the capabilities. I propose a solution for Python since there is no easy workaround for that (or not that I understand). But it's not limited to Python. It would be great if we could use the same in Java and Ruby as well for example.","closed","C-remote,","mark0203","2019-05-29T16:19:10Z","2021-09-05T10:20:20Z"
"","7402","We need an API for toggling extensions and managing. Currently I have to mess to about:addons","## 🚀 Feature Proposal  An API for managing extensions is needed: 1. installation from AMO 2. switching on 3. switching off 4. switching availability in private mode 5. getting list of permissions  ## Motivation Not to mess to about:addons for that.  ## Example ```python addons.install(""addon amo id"") -> Addon addons.list # list of addons addon.uninstall() addon.permissions addon.updateMode addon.manifest # manifest dict addon.content # allows accessing files inside of addon, for example getting their URIs addon.pages # different pages, like setting page addon.disabled # allows disabling/enabling and getting status ```","open","I-enhancement,","KOLANICH","2019-07-17T14:30:52Z","2022-01-07T01:51:29Z"
"","7802","Allow Browser Config Options from Command Line","## 🚀 Feature Proposal  Allow browser-specific configuration options to be passed as a json object and initialized via command line.  This eliminates the need for the node json configuration file on the host machine.  ## Motivation  When node capabilities are initialized via the command line, there's no way to properly initialize browser-specific configuration options, since the capabilities list is being split on ',' character, then key/value pairs are split on '=' character.  ## Example  Here is the command line initialization of a node that instantiates headless versions of chrome and firefox, please see goog:chromeOptions and moz:firefoxOptions options:  java -Dwebdriver.chrome.driver=/opt/openqa/selenium/browsers/chromedriver-78.0.3904.70 -Dwebdriver.chrome.logfile=/opt/openqa/selenium/logs/node/chrome78_wdc-tst-se3grid-001.log -Dwebdriver.gecko.driver=/opt/openqa/selenium/browsers/geckodriver-v0.26.0 -Dwebdriver.firefox.logfile=/opt/openqa/selenium/logs/node/firefox60_wdc-tst-se3grid-001.log -Dselenium.LOGGER=/opt/openqa/selenium/logs/node/node_wdc-tst-se3grid-001.log -Dselenium.LOGGER.level=INFO -cp /opt/openqa/selenium/bin/selenium-server-standalone-3.141.59.jar:/opt/openqa/selenium/lib/* org.openqa.grid.selenium.GridLauncherV3 -role node -hub http://wdc-tst-se3grid-001.openqa.com:4444/grid/register -port 5555 -maxSession 5 -id wdc-tst-se3grid-001:5555 -capabilities browserName=chrome,version=78.0,maxInstances=5,platform=LINUX,seleniumVersion=3.141.59,acceptSslCerts=true,acceptInsecureCerts=true,takesVideo=false,instance=wdc-tst-se3grid-001,goog:chromeOptions={""args"":[""--headless"",""--disable-gpu""]} -capabilities browserName=firefox,version=60.8.0esr,maxInstances=5,platform=LINUX,seleniumVersion=3.141.59,acceptSslCerts=true,acceptInsecureCerts=true,takesVideo=false,instance=wdc-tst-se3grid-001,moz:firefoxOptions={""args"":[""-headless""],""binary"":""/opt/openqa/selenium/browsers/firefox-60.8.0esr/firefox"",""log"":{""level"":""info""}}  ## Note:  The change has been made from the tag of selenium-3.141.59 and placed it on a branch called selenium-3.141.592_json, the specific file update is located here:  https://github.com/DeathBeforeDecaf/selenium/blob/639707ce9967efffd607c58a45e33dd696887267/java/server/src/org/openqa/grid/internal/cli/BrowserDesiredCapabilityConverter.java  Unfortunately I'm not familiar with using tags to interact with git (we generally use branches for releases) - so please forgive any stupid mistakes on my part.","closed","","DeathBeforeDecaf","2019-11-21T17:06:23Z","2021-09-05T10:02:55Z"
"","7015","Is there any reason get_parent or get_ siblings methods for a element does not exist?","## 🚀 Feature Proposal  Adding a method to allow user to get the parent of a element Adding a method to allow user to get the siblings of a element  ## Motivation  If I can find the children element of a element with calling find on that element, why cant I get the parent or siblings? The implementation should be very simple and those two methods seems like common method ppl use everyday.  ## Example  Assuming: ```   text   otherstuff   ``` It would be easier if we can jump from inner div to outer div to check if setting are overwritten correctly","closed","","Songyu-Wang","2019-03-09T09:13:32Z","2019-08-14T19:09:49Z"
"","7836","python contextmanager for webdriver","## 🚀 Feature Proposal  Adding `__enter__` and `__exit__` methods to python webdriver will make it as context manger  ## Motivation Eliminates the use of quit(), as with file handling in python. Remains backward compatible with usual way of calling quit saperately ## Example ``` with webdriver.Chrome() as driver:     driver.get(""some/address"")     driver.execute_script(""some_js_script"") ``` ## Code ``` class WebDriver: ... def __enter__(self):     return self      def __exit__(self, exc_type, exc_val, exc_tb):     do_something_with_the_execeptions_if_any(exc_type, exc_val, exc_tb)     self.quit() ```","closed","","dumbPy","2019-12-03T08:05:44Z","2020-01-04T20:38:52Z"
"","7661","Support for defining a proxy for http requests","## 🚀 Feature Proposal  Add support to configure a proxy for httprequests. (DriverService.IsInitialized)  ## Motivation  Deratives from the DriverService (ex. ChromeDriverService, FirefoxDriverService) use the IsInitialized method to check the status of the service. There is no way to configure a proxy for the http request made in the IsInitialized method.   In .NET Framework projects the default proxy can be defined in the web.config but in .Net core the option is not there. There is no way to use the ChromeDriver or FirefoxDriver in dotnetcore if you are behind a proxy.  The only possibility now is to create your own RemoteWebDriver and DriverService deratives with support added for the IHttpClientFactory or HttpClientHandler.","closed","I-stale,","mhartigh","2019-10-07T12:07:06Z","2021-12-04T00:06:47Z"
"","7753","Add support the WebAuthn Automation API","## 🚀 Feature Proposal  Add support for the WebAuthn Automation API, a standard WebDriver extension that allows developers to create virtual authenticators to test websites using WebAuthn.  https://w3c.github.io/webauthn/#sctn-automation  _note: the above link may not work until https://github.com/w3c/webauthn/pull/1340 is merged_  ## Motivation  At the moment there is no practical way to write e2e tests for pages using WebAuthn. Since this is a standard WebDriver API, the cost of implementing a layer on java is low.  ## Example  For a page like this  ```html Sign up with webauthn  ```  ```javascript document.getElmentById(""signup"").addEventListener(""click"", () => {   navigator.credentials.create({...}).then(credentials => {     document.getElementById(""result"").innerText = ""Success!"";   }) }); ```  A test could be written like so:  ```java // HasVirtualAuthenticator is an interface that augments a RemoteWebDriver. HasVirtualAuthenticator virtualAuthenticatorManager = ((HasVirtualAuthenticator) driver); VirtualAuthenticatorOptions options = new VirtualAuthenticatorOptions(); VirtualAuthenticator authenticator =     virtualAuthenticatorManager.addVirtualAuthenticator(options); driver.findElement(By.id(""signup"")).click(); WebElement result = driver.findElement(By.id(""result"")); new WebDriverWait(driver, 60, 1000).until(     driver -> !result.getText().equals("""")); assertThat(result.getText()).isEqualTo(""Success!""); ```  ## Implementation  We can implement the AddVirtualAuthenticator and RemoveVirtualAuthenticator methods first since they're the most useful and follow up with the others in subsequent PRs.","closed","I-enhancement,","nsatragno","2019-11-06T16:55:46Z","2019-12-29T15:24:46Z"
"","7127","Python Binding 4.0 Make WebElement and WebDriver class rely on ABC to register all subtypes","## 🚀 Feature Proposal  Add an Abstract Base Class to Remote.Webdriver and Remote.WebElement   ## Motivation  For most users of Python Selenium, they tend to have a straight forward use of the library, where they don't run into issues. However when it comes to using add on tools like Applitools Eyes, Appium, and even the current incarnation of the binding itself, there are times when the `isinstance` type checker will fail due to unforeseen uses of a WebElement.   Examples are using EventFiringWebElement with an ActionChains.move_to command.   #6604  The Applitools Eyes Python binding does not subclass WebElement, which makes it hard to integrate with EventFiringWebDriver, or other libraries that do isinstance checks.  The webdriver type itself hardly goes through checks itself, but a tool like Eyes, does do type checks on the driver to see if it is wrapped with the Eyes implementation.  ## Example  If WebElement is an ABC, then the following code should _just work_. ``` from abc import ABC  class IWebElement(ABC):     ... # some core methods are made abstract method.  class WebElement(IWebElement):     ... # existing definition  # Eyes library class EyesWebElement(object):     ... # eyes specific code  IWebElement.register(EyesWebElement) ... # assume you have valid driver, element from a live session. assert isinstance(EyesWebElement(driver, element), IWebElement) ```  The implementation of this should also include a scan of the code base for `type(object)` checks and replace them with `isinstance` or `issubclass` checks, unless we need exact type matching.","closed","C-py,","isaulv","2019-04-22T16:35:04Z","2021-09-05T08:10:32Z"
"","7162","Add capability to disable 'Don't let this page create more messages' message for IE browser","## 🚀 Feature Proposal  Add a custom capability to disable 'Don't let this page create more messages' popup for IE browser.  Currently, this popup can be disabled by adding the website to 'trusted site' section.  Ref- - https://answers.microsoft.com/en-us/ie/forum/all/disable-dont-let-this-page-create-more-messages-on/d77d2ab7-0044-4704-b69a-79fa4da99221 - https://github.com/SeleniumHQ/selenium/issues/3791 - https://stackoverflow.com/questions/54145363/selenium-internetexplorer-11-succesive-alert-text-empty-on-the-second-alert  ## Steps to reproduce  1. Open URL- https://www.joecolantonio.com/SeleniumTestPage.html 2. Click on the element ( XPATH- .//a[contains(.,'Alert Dialog')] ) 3. Accept alert 4. Click on the element ( XPATH- .//a[contains(.,'Alert Dialog')] )  ## Test Configuration  OS: Windows 10 Browser: IE 11 IE Driver Version: 3.141.5 Selenium Version: 3.14.0  ## Video- [IE_POPUP_MSG_VIDEO.mp4](https://drive.google.com/file/d/103oV6R7JO8NrJWG4eLSL8AB2UMoHm8Ec/view?usp=sharing)  ## Raw Command Logs- [IE_COMMAND_LOG_MSG_Dont_let_this_page_create_more_messages.log](https://gist.github.com/ckzgraphics/bee42a96d372db2d42a97b8d9d0860bf)  ## Selenium Logs- [IE_SELENIUM_LOG_MSG_Dont_let_this_page_create_more_messages.log](https://gist.github.com/ckzgraphics/f5d69c886eac8aef7341f6114c0cc2f5)","closed","D-IE,","ckzgraphics","2019-05-01T20:25:27Z","2021-09-05T08:12:26Z"
"","7030","SPNEGO support in Selenium hub/webdriver","## 🚀 Feature Proposal  A hub that supports SPNEGO and CA Siteminder.  The work is already done as a patch to Selenium where I work, I'm gauging if there's any interest in pushing this out to the community.  ## Motivation  username/password authentication is out of the question for us so we support SPNEGO/Kerberos authentication and proper logging on the hub/webdriver side so we can print out each action done by a user.  This is to counter data leakage.  ## Example","closed","I-enhancement,","actionbronson","2019-03-14T13:13:33Z","2020-05-20T21:26:37Z"
"","7777","support for CDP in python","## 🚀 Feature Proposal  A clear and concise description of what the feature is.  ## Motivation  Please outline the motivation for the proposal.  ## Example  Please provide an example for how this feature would be used.","closed","","anbuhckr","2019-11-12T17:21:01Z","2019-12-13T01:59:43Z"
"","7477","mulite","## 🚀 Feature Proposal  A clear and concise description of what the feature is.  ## Motivation  Please outline the motivation for the proposal.  ## Example  Please provide an example for how this feature would be used.","closed","","gyf900","2019-08-07T10:28:11Z","2019-09-06T11:09:35Z"
"","7267","Any plans port selenium into google chrome ?","## 🚀 Feature Proposal  A clear and concise description of what the feature is.  ## Motivation  Please outline the motivation for the proposal.  ## Example  Please provide an example for how this feature would be used.","closed","","mmotahar","2019-06-07T00:00:28Z","2019-08-14T09:09:41Z"
"","7187","WebDriverWait should have Duration-based constructors","## 🚀 Feature Proposal  `WebDriverWait` currently has the following public constructors:  - `WebDriverWait(WebDriver driver, long timeOutInSeconds)` - `WebDriverWait(WebDriver driver, long timeOutInSeconds, long sleepInMillis)` - `WebDriverWait(WebDriver driver, java.time.Clock clock, Sleeper sleeper, long timeOutInSeconds, long sleepTimeOut)`  The existing constructors should be deprecated (and removed?) in favor of `java.time.Duration`-based ones.  ## Motivation  The `long` parameters are worrisome. We've seen hundreds of ""unit mismatch"" bugs inside of Google when using a numeric primitive instead of a `Duration`.  Additionally, the existing constructors don't follow best practices w.r.t. parameter overloading (the ctors are effectively: `init(A, B)`, `init(A, B, C)`, `init(A, D, E, B, C)`).  ## Example  Assuming all of these ctor combinations are necessary, I'd suggest going with:  - `WebDriverWait(WebDriver driver, Duration timeOut)` - `WebDriverWait(WebDriver driver, Duration timeOut, Duration sleep)` - `WebDriverWait(WebDriver driver, Duration timeOut, Duration sleep, Clock clock, Sleeper sleeper)`","closed","C-java,","kluever","2019-05-08T19:06:47Z","2019-08-14T10:09:42Z"
"","7798","Add `SameSite` attribute to `Cookie`","## 🚀 Feature Proposal  `SameSite` attribute on [`Cookie`](https://selenium.dev/selenium/docs/api/java/org/openqa/selenium/Cookie.html) object  ## Motivation  The [`Cookie.Builder`](https://selenium.dev/selenium/docs/api/java/org/openqa/selenium/Cookie.Builder.html) object does not accommodate a `SameSite` field, described [here](https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-03#section-5.3.7) in the spec.  This makes it impossible to specify the `SameSite` field of a cookie, which can either be `None`, `Lax`, or `Strict`. This field can be specified in the `Set-Cookie` HTTP header, so the `Cookie` object should also support it.  ## Example ``` Cookie cookie = new Cookie.Builder(""name"", ""value"")     .sameSite(""lax"")     .build(); ```","closed","","chlily1","2019-11-19T20:18:03Z","2021-09-05T08:12:27Z"
"","6933","Immutable, driver-like snapshot of the current browser page state","## 🚀 Feature Proposal  **tl;dr:** Get a snapshot of the DOM, CSS, and layout at a point in time and have access to Selenium's searching tools to better get at the information you're looking for.  Ability to get an object of a snapshot / freeze frame / single point in time for the current browser tab/page state and be able to operate on that snapshot with driver functionality. - The snapshot would have a subset of driver functionality (the idempotent methods) that can be run against an immutable object, as listed below.  - It would AT LEAST include the current DOM, but would hopefully also include the CSS style info and any other necessary/helpful parts of the page to freeze frame. - Something along the lines of      ```     WebDriverCurrentStateSnapshot snapshot = driver.getCurrentPageStateSnapshot()     snapshot.findElement(By.id(""somebutton"").isDisplayed();     ```  This snapshot object wouldn't be graphical, it wouldn't even be ""headless"". There'd be no browser/driver involved, it would be purely a state capture object (probably immutable) with a subset of the driver's API. This is sort of like a network requests HAR file, but would be the entire page state instead of network requests (may include network requests?)  This (immutable?) `WebDriverCurrentStateSnapshot` object would have a subset of driver functionality: - The snapshot object _would_ be able to immutable-safe and idempotent operations     - `snapshot.findElement` and return a `WebElement` (`SnapshotWebElement`?)     - Checks and queries for values and against WebElements, such as: `element.getText()`, `element.getAttribute()`, `element.getPosition()`, etc...  - The Snapshot _wouldn't_ be able to do Actions or anything with side-effects     - It couldn't interact or click, because it's a snapshot in time, not live         - Or could it? If it's a link to some URL, wouldn't this be possible to pick up in the original driver by following the link? 🤷‍♂️ I'm not sure about this part  ### Possible Issues I'm not sure what the contents of the snapshot object would entail. - At the very least, the snapshot would have the DOM. - Then, after that, we'd want the CSS style and page layout too, or some way to emulate that so we can check element positioning.     - I'm not sure if Selenium can correctly grab the CSS/layout (I know Selenium has a hard time getting CSS pseudo-classes)? - After that, would the snapshot also have a HAR file as part of it as well? - Other things that I haven't listed?  Would it be possible to grab everything needed just from the driver? Is there anything the driver can't get from the browser that would block the making of a useful snapshot?  Would the snapshot need some emulator or to implement it's own layout engine to support the driver operations?  Would this page snapshot simply be too big to transfer to the user through the Selenium server? Would the use be okay with that size tradeoff and handle the bandwidth/memory issues on the client side?  ## Motivation  1. All checks made against a page snapshot would happen at ""a single point in time"", not as sequential commands over a period of time 1. No StaleElementReferenceExceptions would occur at all for any  rid of StaleElementReferenceExceptions during the course of certain checks 1. Since this would probably be an immutable object, it can allow thread safety/parallel operations  ## Example  1. Johnny wants to check a bunch of elements on the page for a certain condition (e.g. that they are all displayed) 2. Johnny calls `Arrays.stream(driver.findElements(By.xpath(""//*""))).forEach( element -> element.checkSomething())` 3. The page is constantly changing (due to the way it's designed: flashing lights, elements coming in and out), so Johnny is getting StaleElementReferenceExceptions. 4. Johnny doesn't know how to deal with these StaleElementReferenceExceptions apart from start over or ignore them. It's not possible to retarget the same element once it went stale without just re-finding all of them.  Insert a step in between 1 and 2 to get a `WebDriverCurrentStateSnapshot`, where we'll run all the checks against the snapshot instead of the driver. This will get rid of the StaleElementReferenceExceptions.  1. Johnny wants to check a bunch of elements on the page for a certain condition (e.g. that they are all displayed) 2. Johnny gets a snapshot of the current page with `WebDriverCurrentStateSnapshot snapshot = driver.getCurrentPageStateSnapshot()` 3. Against the snapshot, Johnny calls `Arrays.stream(snapshot.findElements(By.xpath(""//*""))).forEach( element -> element.checkSomething())` 4. Even if the actual browser page is constantly changing, the snapshot is an immutable, frozen point in time. Johnny gets no StaleElementReferenceExceptions and completes his checks.","closed","I-stale,","gwpantazes","2019-02-13T19:47:45Z","2021-12-04T00:06:34Z"
"","7829","Implement the rest of the WebAuthn automation methods","## 🚀 Feature Proposal  #7753 added basic support for WebAuthn automation in the form of the `addVirtualAuthenticator` and `removeVirtualAuthenticator` methods. Implement the rest of the methods: `addCredential`, `getCredential`, `removeCredential`, `removeAllCredentials`, `setUserVerified`.  ## Motivation  Support more WebAuthn use-cases, like logging in with a specific credential, handling user verification failures, and inspecting generated credentials.  ## Example  For a page like this  ```html Log in with WebAuthn  ```  ```javascript document.getElmentById(""login"").addEventListener(""click"", () => {   navigator.credentials.get({...}).then(assertion => {     document.getElementById(""result"").innerText = ""Success!"";   }) }); ```  A test could be written like so:  ```java // Set up the virtual authenticator. HasVirtualAuthenticator virtualAuthenticatorManager = ((HasVirtualAuthenticator) driver); VirtualAuthenticatorOptions options = new VirtualAuthenticatorOptions(); VirtualAuthenticator authenticator =     virtualAuthenticatorManager.addVirtualAuthenticator(options);  // New code: inject a credential into the authenticator. // Without this API the developer would have to generate a credential through // navigator.credentials.create({...}) on the javascript side and would have less // control over the resulting PK. Credential credential = Credential.createNonResidentCredential(...params); virtualAuthenticatorManager.addCredential(authenticator, credential);  // Assert login successful: driver.findElement(By.id(""login"")).click(); WebElement result = driver.findElement(By.id(""result"")); new WebDriverWait(driver, 60, 1000).until(     driver -> !result.getText().equals("""")); assertThat(result.getText()).isEqualTo(""Success!""); ```","closed","","nsatragno","2019-11-29T16:15:59Z","2020-01-10T11:38:39Z"
"","7654","Can we add methods to get DOMContentReady and actual load time of a page?","## 🚀 Feature Proposal   In any browse, we get the actual page load time and DOMContentReady time from Dev tools. Currently selenium does not have any webdriver methods to provide them. It will be a very great value if we add the methods from performance front.  ## Motivation  I am doing a workaround to get the time. Interested in applying same logic to selenium so it will easy to get them.   ## Screenshot     Also I would like to work in this.","closed","I-enhancement,","gowthamraj198","2019-10-05T21:26:30Z","2021-09-05T08:12:27Z"
"","7014","Windows 10-IE11 windowshandles returns 1 when ignored protected mode settings. please suggest best Webdriver version for windows 10 IE11","## 💬 Questions and Help Windows 10-IE11 windowshandles returns 1 when ignored protected mode settings. please suggest. ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","sashidharkochi","2019-03-09T02:54:45Z","2019-08-14T20:09:43Z"
"","7190","Element click is not functioning properly in IE 11","## 💬 Questions and Help The issue on IE 11.0 with Selenium 2.53.0  We could successfully execute a selenium test on Chrome, but with IE we had a weird observation.  It clicks on any random element than the target element.  Is this a known issue with IE 11? Can you please help us with any workaround/solution?.  Seeking help at the earliest.   ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","hbindut","2019-05-09T07:13:35Z","2019-08-14T11:09:48Z"
"","7741","Unable to access elements comes under 'iframe' of '#ShadowRoot'","## 💬 Questions and Help Right now the issue with all selenium webdriver versions is, it's unable to locate any elements which comes under 'iframe' of '#ShadowRoot'. Specially if a '#document' tag is there after the iframe selenium not able to access those elements. JavaScriptExecutor is also failed for this scenario.   ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","iamKrishnendu","2019-11-04T14:40:04Z","2019-12-07T20:26:54Z"
"","6986","Invoke IE11 without alerts add-on- Webdriver","## 💬 Questions and Help Please suggest if we can open IE driver by excluding some of the IE Add-ons. With my current IE settings, application is opened in tool bar when I have IE add-on enabled(Alerts add-on). Applications are opening properly when I disable the add-on, Kindly help if we can open IE by excluding some of the add-ons.    ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","sashidharkochi","2019-03-01T21:01:43Z","2019-08-14T20:10:03Z"
"","7828","IE11 throws WebDriverException  bug IE8 is right","## 💬 Questions and Help My automation script can run normally on ie8, but there are always some elements that cannot be clicked in ie11. Error message：org.openqa.selenium.support.ui.ExceptedConditions findElements  WebDriverException thrown by findElements(By.xpath://*[@name='StationName']) ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","DarKingYU","2019-11-29T12:00:56Z","2019-12-29T23:39:29Z"
"","7510","Wait.until(ExpectedConditions.invisibilityOfElementLocated()) always fails for negative scenarios","## 💬 Questions and Help In my application I'm using .until(ExpectedConditions.invisibilityOfElementLocated()) for verifying Home page details.   Steps to reproduce:  1. Launch Firefox and navigate to http://newtours.demoaut.com/ 2. Enter Valid user Name and Invalid pass word and click on Login  3. verify the title   Actual issue: My script fails with exception in the step 2 itself.  Below are the script and log details. Its been observed that it is working fine for the positive scenario, valid user name and valid password.   How can we wait till the next page loads so that I can get title and compare.   		driver = new FirefoxDriver(); 		driver.manage().window().maximize(); 		//driver.manage().timeouts().implicitlyWait(12, TimeUnit.SECONDS); 		driver.get(""http://newtours.demoaut.com/""); 		driver.findElement(By.name(""userName"")).sendKeys(""valid password""); 		driver.findElement(By.name(""password"")).sendKeys(""invalid password""); 		driver.findElement(By.name(""login"")).click(); 		WebDriverWait wait = new WebDriverWait(driver, 60); 		wait.until(ExpectedConditions.invisibilityOfElementLocated(By.name(""login""))); 		titleActual = driver.getTitle(); 		if (titleActual.equals(titleExpected)) { 			System.out.println(""Login successful""); 		}  		else {  Logs:  Aug 21, 2019 5:38:37 PM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: W3C Exception in thread ""main"" org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to no longer be visible: By.name: login (tried for 60 second(s) with 500 milliseconds interval) Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03' System info: host: 'LAPTOP-2PL6I9SD', ip: '192.168.43.30', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.1' Driver info: org.openqa.selenium.firefox.FirefoxDriver Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 67.0.3, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20190618025334, moz:geckodriverVersion: 0.24.0, moz:headless: false, moz:processID: 15188, moz:profile: C:\Users\SWATHI\AppData\Loc..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, platformVersion: 10.0, rotatable: false, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify} Session ID: e2401e63-ffda-45cd-a73f-ea418e38236d 	at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95) 	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272) 	at basic_tests.LoginFlightTest.main(LoginFlightTest.java:33)   ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","KiranTest","2019-08-21T12:25:25Z","2019-09-20T13:09:36Z"
"","7301","Unable to switch into a certain frame","## 💬 Questions and Help I've been using selenium to download certain things.  [aliyunecs](https://www.aliyun.com/price/product?spm=5176.8030368.1058477.1.2a033aa4WbYaok#/ecs/detail)  Here is the url that I want to download the ""下载全域价格CSV文件"" which is under the ""价格下载"" botton，So I need to hover mouse on ""价格下载"" botton， But  I found that this botton is under a iframe whose id is ""iFrameResizer0"",So I need to first switch into this frame, however when I use the  ```python browser.switch_to.iframe('iFrameResizer0') ``` it went wrong as this: ```python NoSuchFrameException: Message: iFrameResizer0 ```    (Session info: chrome=75.0.3770.90)  The full code is like this: ```python from selenium import webdriver  browser = webdriver.Chrome() browser.get(""https://www.aliyun.com/price/product?spm=5176.8030368.1058477.1.2a033aa4WbYaok#/ecs/detail"") browser.switch_to.iframe('iFrameResizer0') ````  If you can not find the botton ,here I will show you how to get that: First when you enter this website,you will see that: ![Screenshot_1](https://user-images.githubusercontent.com/22681439/59667948-37706b80-91ea-11e9-857d-2fcad149b789.png)  secondly, the ""价格下载"" botton is under the right down corner: ![Screenshot_2](https://user-images.githubusercontent.com/22681439/59668024-58d15780-91ea-11e9-9bee-9bfe60f65b7d.png)  Hover your mouse on that, you will see two options popping up: ![Screenshot_3](https://user-images.githubusercontent.com/22681439/59668082-72729f00-91ea-11e9-9f34-e43675d025ac.png)  The first one is what I want to click.","closed","","TillLindemann","2019-06-18T09:00:27Z","2019-08-14T08:09:46Z"
"","7133","Selenium doesn't work well with a URL but browser could","## 💬 Questions and Help I want to do a automation with Selenium to handle the URL 'http://www.cde.org.cn/', but it doesn't work with Selenium + Python and Java, I tried Chrome and Edge.  There are resource doens't exist error and the AJEX Request syntact error.  And also the ""Bad Request"" worning message alert.  But in the standalone browser, the URL could be opened correctly.  I am wondering if I need to add any special Chrome options or profile parameters.  Anyone can help?","closed","","greatvia","2019-04-24T09:32:59Z","2019-08-14T13:09:40Z"
"","7480","How I can run Selenium test using Chromium?","## 💬 Questions and Help I am getting this error when configuration in Options(): selenium.common.exceptions.SessionNotCreatedException: Message: session not created: This version of ChromeDriver only supports Chrome version 75   ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","BoazWarshawsky","2019-08-08T09:42:30Z","2019-09-07T10:09:35Z"
"","7763","How to set experimental flag chrome in Node.js","## 💬 Questions and Help How to set the experimental flag for Chrome in Node.js? It's no use by using addArguments();  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","seanmars","2019-11-09T17:53:58Z","2019-12-09T21:00:41Z"
"","7098","Tests fail to run when launched from bamboo with   "" org.openqa.selenium.NoSuchSessionException: No active session"" exception","## 💬 Questions and Help Hi,  When tests are launched from Bamboo build, they fail with the below error.   com.mining.test.CMATest.init FAILED 12-Apr-2019 15:30:08     org.openqa.selenium.NoSuchSessionException: No active session with ID 3284d088f56091eb470ccdc0f33f77f8 (WARNING: The server did not provide any stacktrace information) 12-Apr-2019 15:30:08     Command duration or timeout: 0 milliseconds 12-Apr-2019 15:30:08     Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03' 12-Apr-2019 15:30:08     System info: host: 'AUWILL-APP-003', ip: '10.3.110.88', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_131' 12-Apr-2019 15:30:08     Driver info: org.openqa.selenium.remote.RemoteWebDriver 12-Apr-2019 15:30:08     Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 73.0.3683.68 (47787ec04b6e3..., userDataDir: C:\Users\DEVELO~1\AppData\L...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:63719}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, proxy: Proxy(), rotatable: false, setWindowRect: true, strictFileInteractability: false, takesHeapSnapshot: true, takesScreenshot: true, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unexpectedAlertBehaviour: ignore, unhandledPromptBehavior: ignore, version: 73.0.3683.103, webStorageEnabled: true, webdriver.remote.sessionid: 3284d088f56091eb470ccdc0f33...} 12-Apr-2019 15:30:08     Session ID: 3284d088f56091eb470ccdc0f33f77f8 12-Apr-2019 15:30:08         at sun.reflect.GeneratedConstructorAccessor21.newInstance(Unknown Source) 12-Apr-2019 15:30:08         at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 12-Apr-2019 15:30:08  Kindly help to resolve the issue.   ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","KuzhaliDhivyan","2019-04-12T10:29:03Z","2019-08-14T16:09:36Z"
"","6895","Chrome headless file download using c#","## 💬 Questions and Help Hi All,  I required to download and validate a pdf file in chrome headless browser, Tried with below code, But the pdf file is not downloaded when i click download button(confirmed in screenshot)  Code: static async Task AllowHeadlessDownload(ChromeDriverService driverService, ChromeDriver driver)         {             var jsonContent = new JObject(                 new JProperty(""cmd"", ""Page.setDownloadBehavior""),                 new JProperty(""params"",                 new JObject(new JObject(                     new JProperty(""behavior"", ""allow""),                     new JProperty(""downloadPath"", @""D:\pdf"")))));             var content = new StringContent(jsonContent.ToString(), Encoding.UTF8, ""application/json"");             var sessionIdProperty = typeof(ChromeDriver).GetProperty(""SessionId"");             var sessionId = sessionIdProperty.GetValue(driver, null) as SessionId;              using (var client = new HttpClient())             {                 client.BaseAddress = driverService.ServiceUrl;                 var result = await client.PostAsync(""session/"" + sessionId.ToString() + ""/chromium/send_command"", content);                 var resultContent = await result.Content.ReadAsStringAsync();             }         }  public ChromeDriver ChromeHeadless()         {             var options = new ChromeOptions();             options.AddArguments(""headless"");             options.AddArguments(""--window-size=1920,1080"");             options.AddArguments(""test-type"");             options.AddArguments(""disable-popup-blocking"");             options.AddArgument(""disable-extensions"");             options.AddUserProfilePreference(""plugins.plugins_disabled"", new[] {                 ""Chrome PDF Viewer"" });             options.AddUserProfilePreference(""plugins.always_open_pdf_externally"", true);                         driverService = ChromeDriverService.CreateDefaultService();             ChromeDriver driver = new ChromeDriver(options);                         Environment.SetEnvironmentVariable(""BrowserName"", driver.Capabilities.BrowserName);             Environment.SetEnvironmentVariable(""BrowserVersion"", driver.Capabilities.Version);             AllowHeadlessDownload(driverService, driver).GetAwaiter().GetResult();             return driver; }  But i'm getting error ""System.Net.Http.HttpRequestException: 'An error occurred while sending the request.'SocketException: No connection could be made because the target machine actively refused it 177.0.0.1:5580' at the line ""var result = await client.PostAsync(""session/"" + sessionId.ToString() + ""/chromium/send_command"", content);""  Anyone faced same issue ?  Thanks, Elango","closed","R-awaiting answer,","Elangopalakrishnan","2019-01-29T16:37:49Z","2019-08-14T12:10:06Z"
"","7141","How to build java-client.jar by BUCK？","## 💬 Questions and Help Hey guys，I have a question about how to build java-clinet.jar like which selenium.com can download?  I cloned the source，And  type ""go selenium-server-standalone""  build selenium.jar success，But when I type ""go selenium-java"" There is no client-java.jar was built，I don't know what to do。  Can you help me?","closed","","tcwrleon","2019-04-26T03:28:06Z","2019-08-14T12:10:04Z"
"","7546","Document to refer for newbies who are interested to contribute to SeleniumHQ project","## 💬 Questions and Help Hello.. I am new to open source contribution community.. I have forked SeleniumHQ and cloned the repository into my local machine.   I am using Windows 7 and Eclipse IDE. Plz tell me how can I import the Selenium project into Eclipse IDE ?.   I tried to google, but none of the results really helped. Could you please tell if any document is there to refer for newbies like me who are interested to contribute to open source community. I joined Selenium IRC and no one answered my query. I don't know whom to contact now. Hence, I raised this query.  Thanks in Advance!  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","electronsrace","2019-09-06T23:29:29Z","2019-10-07T14:09:37Z"
"","7103","c# selenium webdriver IE 11 hide address bar and url fix size .","## 💬 Questions and Help hello every one , i include in my small project  c# windows form selenium webdrive IE 11 i need hide address bar  and url disable context menu fix resize by client and  disable maximize button from IE i have searched everywhere i have not found someone can help me please i need this so i can protect info personell.  [https://ibb.co/XpdDHSc](url)","closed","","YounesseSoft","2019-04-15T17:42:23Z","2019-08-14T15:09:38Z"
"","7054","SetCookies is not accepting extra keys in a cookie","## 💬 Questions and Help Currently when I set sookies I want to add the specific website cookie keys that are not supported by Cookies constructor. The Cookies constructor is currently only accepting following keys-  name, value, domain, path, expiry, isSecure, isHttpOnly  I cannot find any option to add more keys that specific websites are expecting.   Kindly let me know if there is any option to add more keys to the cookies","closed","","dira1122","2019-03-22T19:58:11Z","2019-08-14T18:09:59Z"
"","7432","Do we still need the xml2js dependency in selenium-webdriver?","## 💬 Questions and Help After used npm install the selenium-webdriver, I grep the 'xml2js' with whole folder. It didn't use by any function. I checkout with old tag and grep. It used to read the manifest for Firefox add-on. But in this [commit](https://github.com/SeleniumHQ/selenium/commit/e8efc001bdf09bc668a7715f939d5f09039d1fae#diff-581b0552068e3455f032d5c9a87d58a5) firefox/extension.js already be removed. Currently, the firefox.js read the manifest file with json not xml too.  So, just wondering the xml2js still need as the dependency or not?  selenium-webdriver version: 4.0.0-alpha.4   Thanks, Charles","closed","","charlesh21","2019-07-25T10:08:27Z","2019-08-24T16:09:37Z"
"","7248","Run tests on BrowserStack with Selenium WebDriver NuGet Package Selenium 4.0.0-alpha 01","## 💬 Questions and Help 1- I am executing tests with the latest NuGet Package: Selenium 4.0.0 alpha 01 on BrowserStack 2- Please refer the test script: https://gist.github.com/abhi291096/7606182b3edfd160b0aa2a28fc3567ae 3- I have printed the capabilities that are getting passed and getting the exception:  ``` {   ""browserName"": ""chrome"",   ""goog:chromeOptions"": {     ""w3c"": true,     ""bstack:options"": {       ""osVersion"": ""11"",       ""deviceName"": ""iPhone 8 Plus"",       ""realMobile"": ""true"",       ""buildName"": ""AM_CSharp"",       ""local"": ""false""     }   } } {   ""browserName"": ""chrome"",   ""goog:chromeOptions"": {     ""w3c"": true,     ""bstack:options"": {       ""osVersion"": ""11"",       ""deviceName"": ""iPhone 8 Plus"",       ""realMobile"": ""true"",       ""buildName"": ""AM_CSharp"",       ""local"": ""false""     }   } } **System.Collections.Generic.Dictionary`2[System.String,System.Object]** ```  4- On executing the same test on BrowserStack with the Selenium Webdriver Version: 3.141.0 I am able to successfully able to execute the tests.  5- Please refer the sample for 3.141.0: https://gist.github.com/abhi291096/f0a7ce62865a49074976a0721c8cb66a  6- The difference between the tests is how the capabilities are getting passed:  With latest version - 4.0.0 alpha 1   `options.AddAdditionalChromeOption(""bstack:options"", browserstackOptions);`  With version 3.141.0:   `options.AddAdditionalCapability(""bstack:options"", browserstackOptions,true); ` 7- I have reviewed this link: https://github.com/SeleniumHQ/selenium/issues/6563 and see that the method AddAdditionalCapability() has been deprecated with Selenium 4.0.0 alpha 01 with Csharp  8- Can anyone please tell me why the session is not starting with Selenium 4.0.0 alpha 01 code   ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","abhi291096","2019-05-29T18:45:27Z","2019-08-14T09:09:57Z"
"","7812","extension is already installed through selenium, but not working in firefox","## 💬 Questions and Help ### extension is already installed through selenium, but not working in firefox,and does not throw： `          firefox.install_addon(""/Users/dev/dec/jid0-oEwF5ZcskGhjFv4Kk4lYc@jetpack.xpi"",temporary=True)     profile.set_preference(""modifyheaders.config.openNewTab"",1)     profile.set_preference(""modifyheaders.start"",1)     profile.set_preference(""modifyheaders.config.migrated"",1)          profile.set_preference(""modifyheaders.headers.count"", 6)     profile.set_preference(""modifyheaders.headers.action0"", ""Add"")     profile.set_preference(""modifyheaders.headers.name0"", ""urlkey"")     profile.set_preference(""modifyheaders.headers.value0"", ""mmmmmmmmmm"")     profile.set_preference(""modifyheaders.headers.enabled0"", 1)     profile.set_preference(""modifyheaders.config.active"", 1)     profile.set_preference(""modifyheaders.confsssig.alwaysOn"",1)` ### Environment OS: MacOS 10.13.06 Browser: Firefox Browser version: 66.0.2 Browser Driver version: GeckoDriver 0.24 Language Bindings version: Java 8 Selenium Grid version (if applicable): 3.141.59 For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","hkglue","2019-11-25T11:02:17Z","2020-01-05T21:57:15Z"
"","6901","selenium with chrome --headless mode receive a timeout error","## 💬 Questions and Help ## my chrome version ： 71.0.3578.98 ## I update my chrome driver version ： 71.0.3578.137 (86ee722808adfe9e3c92e6e8ea746ade08423c7e ## the error report: ``` Traceback (most recent call last):   File ""E:/timeoutTest.py"", line 46, in      test()   File ""E:/timeoutTest.py"", line 31, in test     driver.get(""https://baidu.com"")   File ""d:\Users\dzlx\AppData\Local\Programs\Python\Python36\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 333, in get     self.execute(Command.GET, {'url': url})   File ""d:\Users\dzlx\AppData\Local\Programs\Python\Python36\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 321, in execute     self.error_handler.check_response(response)   File ""d:\Users\dzlx\AppData\Local\Programs\Python\Python36\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.TimeoutException: Message: timeout   (Session info: headless chrome=71.0.3578.98)   (Driver info: chromedriver=2.41.578737 (49da6702b16031c40d63e5618de03a32ff6c197e),platform=Windows NT 6.1.7601 SP1 x86_64) ```  ## my code :  ```  import time  from selenium import webdriver from selenium.webdriver.chrome.options import Options from selenium.webdriver.common.by import By  def test():     _chrome_options = Options()     _chrome_options.add_argument(""--headless"")      driver = webdriver.Chrome(r""E:\\timeoutTest\\Customized\\config\\chromedriver"", chrome_options=_chrome_options)     # driver = webdriver.Chrome(r""E:\\timeoutTest\\Customized\\config\\chromedriver"")     # cls.driver = webdriver.Chrome(executable_path=cls._chrome_driver_path)      driver.set_window_size(1200, 812)     driver.set_page_load_timeout(60)     driver.set_script_timeout(20)     # 隐式等待     driver.implicitly_wait(5)      driver.get(""https://baidu.com"")     time.sleep(5)     driver.find_element_by_id(""kw"").send_keys(""htmlunit"")     time.sleep(5)     driver.find_element_by_id(""su"").click()     time.sleep(5)     now_time = time.strftime(""%Y%m%d.%H.%M.%S"")     driver.get_screenshot_as_file(now_time + '.png')     print('screenshot:' + now_time + '.png')      print(driver.current_url)     print(driver.page_source)   if __name__ == '__main__':     test() ``` the code can‘t run in the --headless mode.  ----------- # update： After adding sleep time and update the chrome driver to 71.0.3578.137, and I change the request url to another，I received anther error like this :  ``` Traceback (most recent call last):   File ""E:/timeoutTest/Customized/testTemp.py"", line 35, in      test()   File ""E:/timeoutTest/Customized/testTemp.py"", line 23, in test     driver.find_element(By.XPATH, ""//*[@data-view-name=\""index\""]/div/div[2]/div/div[3]/div[1]/div[1]/ul/li[""   File ""d:\Users\dzlx\AppData\Local\Programs\Python\Python36\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 978, in find_element     'value': value})['value']   File ""d:\Users\dzlx\AppData\Local\Programs\Python\Python36\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 321, in execute     self.error_handler.check_response(response)   File ""d:\Users\dzlx\AppData\Local\Programs\Python\Python36\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {""method"":""xpath"",""selector"":""//*[@data-view-name=""index""]/div/div[2]/div/div[3]/div[1]/div[1]/ul/li[1]/div[1]/p""}   (Session info: headless chrome=71.0.3578.98)   (Driver info: chromedriver=71.0.3578.137 (86ee722808adfe9e3c92e6e8ea746ade08423c7e),platform=Windows NT 6.1.7601 SP1 x86_64) ``` ## and my code like this ： ``` import time  from selenium import webdriver from selenium.webdriver.chrome.options import Options from selenium.webdriver.common.by import By  def test():     _chrome_options = Options()     _chrome_options.add_argument(""--headless"")      driver = webdriver.Chrome(r""chromedriver"", chrome_options=_chrome_options)     # driver = webdriver.Chrome(r""E:\\timeoutTest\\Customized\\config\\chromedriver"")     # cls.driver = webdriver.Chrome(executable_path=cls._chrome_driver_path)      driver.set_window_size(1200, 600)     driver.set_page_load_timeout(100)     driver.set_script_timeout(40)     # 隐式等待     driver.implicitly_wait(10)      driver.get(""https://m.ctrip.com/webapp/dingzhi/index"")     time.sleep(10)     driver.find_element(By.XPATH, ""//*[@data-view-name=\""index\""]/div/div[2]/div/div[3]/div[1]/div[1]/ul/li[""                                         ""1]/div[1]/p"").click()     time.sleep(10)     now_time = time.strftime(""%Y%m%d.%H.%M.%S"")     driver.get_screenshot_as_file(now_time + '.png')     print('screenshot:' + now_time + '.png')     time.sleep(5)     print(driver.current_url)     print(driver.page_source)     driver.quit()  if __name__ == '__main__':     test() ```  the main reqestion is that, when I doesn't use the --headless mode, I can receive a page  screenshot like this:  ![image](https://user-images.githubusercontent.com/15920812/52026703-c9315200-2543-11e9-8d20-0c3dc1c7b9fb.png)  but when I use --headless argument, the page seems can't load and throw NoSuchElementException, the screenshot like this: ![image](https://user-images.githubusercontent.com/15920812/52026797-17465580-2544-11e9-84d7-a2c5c28a6b77.png) this is a blank image.  and the question is no error in another seem config computer.","closed","","GrayGraySmall","2019-01-30T12:07:52Z","2019-08-14T22:09:35Z"
"","7100","Same Test Works in Chrome but Not Firefox for SeleniumWebdriver","## 💬 Questions and Help  Why do the exact same tests work in Chrome but not in Firefox using selenium-webdriver/protractor and Jasmine in Javascript?  protractor.conf.js (currently chrome is commented out) ``` exports.config = {   framework: 'jasmine',   seleniumAddress: 'http://localhost:4444/wd/hub',   specs: ['test/functional/specs/*.js'],   SELENIUM_PROMISE_MANAGER: false,   multiCapabilities: [     /* {       browserName: 'chrome',       chromeOptions: {         args: ['--headless', '--window-size=2064,1083']       }     }, */     {       browserName: 'firefox',       'moz:firefoxOptions': {         'args': ['--headless']       }     }],   jasmineNodeOpts: {     showColors: true, // Use colors in the command line report.     isVerbose: true   },   onPrepare: function () {     browser.manage().window().maximize();     // Add a screenshot reporter and store screenshots to `/tmp/screenshots`:     jasmine.getEnv().addReporter(new HtmlReporter({       baseDirectory: 'test/functional/screenshots',       clientDefaults: {         columnSettings: {           displayTime: true,           displayBrowser: true,           displaySessionId: false,           inlineScreenshots: true         }       }       }).getJasmine2Reporter());   } } ``` actions.js ``` describe('Technical Documents', function () {      beforeEach(async function () {         await menus.get();         await menus.hoverOverSupport();         await menus.clickSearchTechDocs();     });     describe('xxx, function () {         it('xxx', async function () {             await technicalDocuments.addDocumentCategory();         });         it('xxx, async function () {             await technicalDocuments.addDocumentCategory();         });     }) }) ```   I am not providing the details of what the methods are, but the second _it_ never calls the menus.hoverOverSupport() or menus.clickSearchTechDocs() methods within the beforeEach while using Firefox but it always calls it when using Chrome. It will call both those methods in the first _it_  Anyone know why?","closed","","awhisler","2019-04-12T21:14:01Z","2019-08-14T15:10:03Z"
"","7328","set debugger off","## 💬 Questions and Help  I want turn off `debugger;` when I use my webdriver  ![image](https://user-images.githubusercontent.com/5530550/60095459-e3680880-974e-11e9-8c5f-6843f73d512d.png)   ``` ChromeOptions options = new ChromeOptions(); options.addArguments(""--disable-  ???? "");","closed","","sgrillon14","2019-06-25T11:45:10Z","2019-08-14T07:09:43Z"
"","7268","Issues installing the IDE ?","## 💬 Questions and Help  I tried to install this and I am getting wrong java I/O version.   Can someone assist ?","closed","","mmotahar","2019-06-07T03:53:05Z","2019-08-14T09:09:41Z"
"","7733","Unable to take screenshot in Selenium GRID 3.141.0 when executing on IE browser","## 💬 Questions and Help  I have been using explicit wait for clicking element via WebDriverWait method. I am receiving  org.openqa.selenium.ElementClickInterceptedException: Element not clickable at point (0,0), after catching the exception I wanted to take a screenshot and failing at this step.  org.openqa.selenium.ElementClickInterceptedException: Element not clickable at point (0,0). Other element would receive the click:  (elementsFromPoint index -1) Build info: version: '3.141.0', revision: '2ecb7d9a', time: '2018-10-31T20:09:30' System info: host: 'VDI-DD-E6864', ip: '10.4.172.151', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_191' Driver info: org.openqa.selenium.remote.RemoteWebDriver Capabilities {acceptInsecureCerts: false, browserName: internet explorer, browserVersion: 11, javascriptEnabled: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:ieOptions: {browserAttachTimeout: 0, elementScrollBehavior: 0, enablePersistentHover: true, ie.browserCommandLineSwitches: , ie.ensureCleanSession: false, ie.fileUploadDialogTimeout: 3000, ie.forceCreateProcessApi: false, ignoreProtectedModeSettings: false, ignoreZoomSetting: false, initialBrowserUrl: http://localhost:12178/, nativeEvents: true, requireWindowFocus: false}, setWindowRect: true, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webdriver.remote.sessionid: 09553dd0-c35f-4f4a-b29a-502...} Session ID: 09553dd0-c35f-4f4a-b29a-5020d42e99fc 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552) 	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285) 	at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51) 	at com.sun.proxy.$Proxy8.click(Unknown Source) 	at reusables.BASFBase.clickElement(BASFBase.java:457) 	at testscripts.AccessIT.TC2_Address_Search_Validation(AccessIT.java:28) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85) 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639) 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816) 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124) 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125) 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108) 	at org.testng.TestRunner.privateRun(TestRunner.java:774) 	at org.testng.TestRunner.run(TestRunner.java:624) 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359) 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354) 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312) 	at org.testng.SuiteRunner.run(SuiteRunner.java:261) 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86) 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215) 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140) 	at org.testng.TestNG.run(TestNG.java:1048) 	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:282) 	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:83) 	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:114) 	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:286) 	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:240) 	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)","closed","","santu11454","2019-10-31T15:11:38Z","2019-11-30T17:09:35Z"
"","6920","Query : Help needed building MSI using setuptools","## 💬 Questions and Help  I am trying to build an MSI from source, but noticed that the source does not have setup.py. Is there any way?   OS : Windows 10 Python  : 3.6  Sorry, had to ask this question here as there is no slackshannel on herokuapp and there's no one in IRC node.","closed","","pradeeps","2019-02-08T16:34:18Z","2019-08-14T22:09:46Z"
"","7751","Does anybody know how can I commit Documentation Translation?","## 💬 Questions and Help  Hi I'm looking forward to translate selenium documents to Korean. But, I'm not sure I can participate with in.  https://github.com/SeleniumHQ/seleniumhq.github.io/tree/master/documentation  This repsoitory gives translated version of documentation, but can I commit and PR to it?  Does anybody know about it? No pr exitst in there so, I'm not sure about it. If anybody know please comment me.  Thanks :)","closed","","lionking6792","2019-11-06T16:04:29Z","2019-12-06T18:28:51Z"
"","7605","How to launch chrome with performance logging using Ruby and Selenium Capybara","## 💬 Questions and Help  After I try to launch ` Capybara.register_driver(:selenium_mobile) do |app|   options = Selenium::WebDriver::Chrome::Options.new   options.add_emulation(device_name: 'iPhone X')   options.add_option(:perfLoggingPrefs, {enableNetwork: true})   cps = Selenium::WebDriver::Remote::Capabilities.chrome(loggingPrefs: {browser: 'ALL'},                                                            perfLoggingPrefs: {enableNetwork: true}     )   Capybara::Selenium::Driver.new(app, browser: :chrome, desired_capabilities: cps, options: options) end ` to start logging in Chrome session, but i got message:  Selenium::WebDriver::Error::InvalidArgumentError: invalid argument: entry 0 of 'firstMatch' is invalid from invalid argument: perfLoggingPrefs specified, but performance logging was not enabled  I have tried plenty of different variants, but any of them can fix this issue. Is there any way to luanch ruby with enabled Chrome logging of Network tab?","closed","","glebsonik","2019-09-26T15:13:30Z","2019-10-26T16:45:18Z"
"","6962","What is driver.controlFlow function?","## 💬 Questions and Help  ### When I try using eyes.selenium which is AI based selenium test Tool. I met follow message in eyes.open API.  ""UnhandledPromiseRejectionWarning: TypeError: driver.controlFlow is not a function""  There are using controlFlow method after bulid.   I can't find this method in selenium doc. Is method deprecated?   applitools guide : (https://applitools.com/tutorials/selenium-javascript.html#quick-start)  Please help me about this.  Thank you.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","C-nodejs,","pwsses","2019-02-22T07:39:10Z","2019-08-14T09:09:44Z"
"","7157","Unable to start a WebDriver session in CI","## 💬 Questions and Help  ### When I run tests in Travis Ci, my tests are not passes all.  Using pacakges: **protractor-flake: ""3.3.0"",** **protractor"": ""^5.4.2""**  geckodriver v.0.24  My Firefox config file: ``` exports.config = {   seleniumAddress: 'http://127.0.0.1:4444/wd/hub',    allScriptsTimeout: 11000,   SELENIUM_PROMISE_MANAGER: false,   framework: 'jasmine2',   jasmineNodeOpts: {     showColors: true,     defaultTimeoutInterval: 240000   }, capabilities:     {       browserName: 'firefox',       shardTestFiles: true,       maxInstances: 4,       acceptInsecureCerts: true,        'moz:firefoxOptions': {         args: [           '--width=1920',           '--height=1080',           '--private',           '--headless'         ],         prefs: {           'browser.download.folderList': 2,           'browser.download.dir': pathDownloads,           'pref.downloads.disable_button.edit_actions': true,           'services.sync.prefs.sync.browser.download.useDownloadDir': true,           'browser.download.useDownloadDir': true,           'browser.download.manager.alertOnEXEOpen': false,           'browser.download.manager.closeWhenDone': true,           'browser.download.manager.focusWhenStarting': false,           'browser.download.manager.showWhenStarting': false,           'browser.helperApps.alwaysAsk.force': false,           'browser.download.manager.showAlertOnComplete': false,           'browser.download.manager.useWindow': false,           'browser.download.panel.removeFinishedDownloads': false,           'browser.download.useToolkitUI': false,           'browser.helperApps.neverAsk.saveToDisk': 'application/pdf',           'browser.helperApps.neverAsk.openFile': 'application/pdf',           'pdfjs.disabled': true, //not show ask window to save pdf           'plugin.disable_full_page_plugin_for_types': 'application/pdf',           'browser.download.forbid_open_with': true,         },       },       log: {         level: 'trace'       }     }, ... } ```  Commands to run job: ``` webdriver-manager update --versions.standalone=3.14.0 ``` ```webdriver-manager start --versions.standalone=3.14.0 --detach --quiet``` ```npm test```  In this case my 4 tests run simultaneously, an as I can see - all is going good, but after passing several tests the next tests cannot be run by selenium. When suite with tests is not large, it is going good without any error. Could somebody help me to cope with this issue? Here is the part of log from Travis: ![c93056208d](https://user-images.githubusercontent.com/24752690/56948980-719e8480-6b3a-11e9-909d-8c76fc4f2282.jpg)","closed","","murcraft","2019-04-30T08:25:42Z","2019-08-14T12:09:48Z"
"","7004","Problem with grid in standalone with firefox","## 💬 Questions and Help  ### Please note that this issue tracker is not a help form and this issue will be closed.  Start tests in selenium-standalone with error  Environment: OS- linux  selenium-java.version - 3.141.5 geckodriver - 0.23.0 firefox - 65.0.1  Get error when up standalone by command with grid:  Error: POST /session/2db823d0-93f7-4d66-a105-6d31b01476f8/moveto did not match a known command (POST /session/2db823d0-93f7-4d66-a105-6d31b01476f8/moveto did not match a known command)     at new RuntimeError (/portal/portal/node_modules/hermione/node_modules/@gemini-testing/webdriverio/build/lib/utils/ErrorHandler.js:143:12)     at Request._callback (/portal/portal/node_modules/hermione/node_modules/@gemini-testing/webdriverio/build/lib/utils/RequestHandler.js:318:39)     at Request.self.callback (/portal/portal/node_modules/request/request.js:185:22)     at Request.emit (events.js:160:13)     at Request. (/portal/portal/node_modules/request/request.js:1161:10)     at Request.emit (events.js:160:13)     at IncomingMessage. (/portal/portal/node_modules/request/request.js:1083:12)     at Object.onceWrapper (events.js:255:19)     at IncomingMessage.emit (events.js:165:20)     at endReadableNT (_stream_readable.js:1101:12)     at process._tickCallback (internal/process/next_tick.js:152:19)  And get succes result when start with comand where dont use grid.","closed","","Anyazinovyeva","2019-03-06T12:27:56Z","2019-08-14T20:09:48Z"
"","7750","Selenium webdriver c# the chrome browser open without the url","## 💬 Questions and Help  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","hoh112","2019-11-06T14:50:06Z","2019-12-06T15:28:31Z"
"","7451","JAVA excludeSwitches Convertion DOTNET","## 💬 Questions and Help  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group Start the Google drive, the browser enter 'window.navigator.webdriver' JAVA: Option = ChromeOptions () Option. Add_experimental_option (' excludeSwitches' [' enable - automation ']) Driver = Chrome(options = option) So how should C# be added?I need some help. Thanks","closed","","ImQdf","2019-07-30T09:10:08Z","2019-08-29T15:09:34Z"
"","7346","duplicated text sent by actionchains send_keys when integrating in for loop python","## 💬 Questions and Help  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group 0   I try to send_keys to textarea so I use actionchains to send keys. I used this code:  ``` url='https://translate.google.com/?hl=vi' browserdriver.get(url) list_test=['product description 1','product description 2'] for i in range (0,2):        try:         body_text=list_test[i]         browserdriver.execute_script(""window.scrollTo(0, document.body.scrollHeight)"")               item = WebDriverWait(browserdriver, 10).until(EC.presence_of_element_located((By.TAG_NAME, ""textarea"")))                 actions.move_to_element(item).send_keys(body_text).perform()                 time.sleep(1)     except:         pass print(""done"") ``` And the result of text was sent to Google Translate as below:  `product description 1product description 1product description 2` You can see that is so weird that it should be like this:  `product description 1product description 2` I also inserted print() to utils.py in source code of actionchains in order to know what typing text is sent to send_keys function:  ``` def keys_to_typing(value):     """"""Processes the values that will be typed in the element.""""""     typing = []     for val in value:         if isinstance(val, Keys):             typing.append(val)         elif isinstance(val, int):             val = str(val)             for i in range(len(val)):                 typing.append(val[i])         else:             for i in range(len(val)):                 typing.append(val[i])         print(typing)#this is a code line that I inserted     return typing ``` and the output console of keys_to_typing is:  ``` ['p', 'r', 'o', 'd', 'u', 'c', 't', ' ', 'd', 'e', 's', 'c', 'r', 'i', 'p', 't', 'i', 'o', 'n', ' ', '1'] ['p', 'r', 'o', 'd', 'u', 'c', 't', ' ', 'd', 'e', 's', 'c', 'r', 'i', 'p', 't', 'i', 'o', 'n', ' ', '1']  ['p', 'r', 'o', 'd', 'u', 'c', 't', ' ', 'd', 'e', 's', 'c', 'r', 'i', 'p', 't', 'i', 'o', 'n', ' ', '2'] ['p', 'r', 'o', 'd', 'u', 'c', 't', ' ', 'd', 'e', 's', 'c', 'r', 'i', 'p', 't', 'i', 'o', 'n', ' ', '2'] ``` And this is the send_keys function in actionchains sourcecode:  ``` def send_keys(self, keys_to_send):         """"""         Sends keys to current focused element.          :Args:          - keys_to_send: The keys to send.  Modifier keys constants can be found in the            'Keys' class.         """"""         typing = keys_to_typing(keys_to_send)         if self._driver.w3c:             for key in typing:                 self.key_down(key)                 self.key_up(key)         else:             self._actions.append(lambda: self._driver.execute(                 Command.SEND_KEYS_TO_ACTIVE_ELEMENT, {'value': typing}))         return self ``` Pls help me to explain this weird situation? I do not know why in loop for, actionchains.send_keys send duplicated content? thanks!","closed","","huynh-stack","2019-06-30T04:00:39Z","2019-08-14T06:10:04Z"
"","6905","execute_async_script timeout but execut_script works?","## 💬 Questions and Help  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group  The following code works exactly as I intended. The web driver will scroll to the bottom of the page  ``` while new_height != last_height:             new_height = last_height             driver.execute_script(""window.scrollTo(0, document.body.scrollHeight);"")             last_height = driver.execute_script(""return document.body.scrollHeight"")             time.sleep(1) ```   In an attempt to get rid of the sleeping time, I thought it would be a good idea to use execute_async_script and just block until the script finishes running. However, the code below timeout and said something about never receiving a result for async script  ``` while new_height != last_height:             new_height = last_height             driver.execute_async_script(""window.scrollTo(0, document.body.scrollHeight);"")             last_height = driver.execute_async_script(""return document.body.scrollHeight"") ``` Below is the image of the error ![image](https://user-images.githubusercontent.com/20074651/52101149-4bebf880-25a8-11e9-96e9-aad5f2c432dd.png)","closed","","anthonypan08","2019-02-01T03:30:02Z","2019-08-14T22:09:55Z"
"","7056","grid hub is not responding to remote node","## 💬 Questions and Help  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group  HI, i am using version 3.141.59 of stand alone jar file.  I did run the jar file on machine-A with role as hub. I could see that hub is started.  on Machine A (windows 10) ran the hub with this command:  ""java -jar selenium-server-standalone-.jar -role hub"".  Verified  whether hub is stared or not by accessing grid console web page.  ""http://192.168.0.21:4444/grid/console"".   Now when i try accessing the ""http://192.168.0.21:4444/grid/console"" from machine-B (ubuntu 16.04), hub is not responding.  On the machine A i could see two TCP connection request packets from machine B. But no response is generated.  Now question do i need to add any options when starting hub on machine A? . why hub not responding to TCP connection request ?","closed","","kvbhaskar79","2019-03-26T00:17:56Z","2019-08-14T17:10:01Z"
"","7453","proxy authentication with Selenium browser none-headless and headless","## 💬 Questions and Help  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group   Hi,  I've seen many thread around proxy authentication with Selenium but none of them provide a simple and straight forward answer that will work for **both none-headless and headless** mode of the browser. **This is really a showstopper for implementing Selenium for some customer.**  Is there someone that has a working example that he could share with the community. Will Selenium 4.x handle nicely this feature ?  Thanks a lot for your help,  Regards,  Viseth","closed","","viseth","2019-07-30T11:20:00Z","2019-08-29T14:09:38Z"
"","7621","Unable to select multple elements using Actions class or selenium sendKeys.","## 💬 Questions and Help  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","santu11454","2019-09-30T16:04:33Z","2019-10-30T17:45:10Z"
"","7220","What Capabilities of chrome driver is used to show latency in the network or set offline mode?","## 💬 Questions and Help  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","Nehakatqa","2019-05-20T06:01:52Z","2019-08-14T10:09:50Z"
"","7180","Exception in thread ""main"" java.lang.IllegalStateException: The path to the driver executable must be set by the webdriver.chrome.driver system property; for more information, see https://github.com/SeleniumHQ/selenium/wiki/ChromeDriver. The latest version can be downloaded from http://chromedriver.storage.googleapis.com/index.html","## 💬 Questions and Help  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","haritha801","2019-05-07T07:06:17Z","2019-08-14T11:09:54Z"
"","7179","I'm getting this issue even i upgraded my google chrome version to 74&also used same chrome exe file set property.     Exception in thread ""main"" java.lang.IllegalStateException: The path to the driver executable must be set by the webdriver.chrome.driver system property; for more information, see https://github.com/SeleniumHQ/selenium/wiki/ChromeDriver. The latest version can be downloaded from http://chromedriver.storage.googleapis.com/index.html","## 💬 Questions and Help  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","haritha801","2019-05-07T06:55:34Z","2019-08-14T11:09:56Z"
"","7177","TRACE","## 💬 Questions and Help  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","ctrast","2019-05-06T18:39:54Z","2019-08-14T11:10:02Z"
"","7176","TRace","## 💬 Questions and Help  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","ctrast","2019-05-06T18:39:47Z","2019-08-14T11:09:59Z"
"","7175","TRACE","## 💬 Questions and Help  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","ctrast","2019-05-06T18:39:28Z","2019-08-14T11:10:00Z"
"","7095","Please advise me a solution on the following errors when i run selenium code in using google chrome.  Exception in thread ""main"" org.openqa.selenium.WebDriverException: Timed out waiting for driver server to start.","## 💬 Questions and Help  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","Rmalepatal","2019-04-10T16:24:48Z","2019-08-14T16:09:44Z"
"","7069","Getting Error while launching chrome through Selenium Webdriver using IntelliJ Idea while same code is working fine in Eclipse.","## 💬 Questions and Help  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","mayank-testing-pool","2019-03-29T13:13:37Z","2019-08-14T16:09:41Z"
"","7067","IEDriverServer","## 💬 Questions and Help  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","etoperman","2019-03-28T17:56:01Z","2019-08-14T17:09:51Z"
"","7041","Flash Application testing using","## 💬 Questions and Help  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","kayanidbest","2019-03-18T17:36:56Z","2019-08-14T19:09:44Z"
"","7040","Flash Application testing using","## 💬 Questions and Help  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","kayanidbest","2019-03-18T17:36:55Z","2019-08-14T19:09:43Z"
"","7020","'Illegal character "" at index 0 when trying to build selenium on ""python buckw build"" call","## 💬 Questions and Help  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","Zjonas1995","2019-03-11T17:05:08Z","2019-08-14T19:10:02Z"
"","6981","[Java] How to deal with the IE zoom level not 100% problem?","## 💬 Questions and Help  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","hakuyou","2019-03-01T08:00:58Z","2019-08-14T21:09:35Z"
"","7786","target frame detached","## 💬 Questions and Help  ### Please note that this issue tracker is not a help form and this issue will be closed.  **I don't understand the error message that ""selenium.common.exceptions.WebDriverException: Message: target frame detached"" and not solution found about it，Would you please advise?**   ![image](https://user-images.githubusercontent.com/41558924/68846327-dd77c180-0707-11ea-9776-980a337ab6eb.png)  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","LuanShiZhiJian","2019-11-14T09:56:51Z","2019-12-18T10:51:13Z"
"","7675","java: org.openqa.selenium.remote.RemoteWebDriver cannot be cast to org.openqa.selenium.interactions.HasTouchScreen","## 💬 Questions and Help  ### java 1.8 ### selenium 3.141.0 ### docker-selenium-chrome: 3.141.0  `WebDriver driver = new RemoteWebDriver(webURL, cap)` `TouchActions action = new TouchActions(driver);` `action.build();` `action.scroll(autoDriverAtion.getWebElement(), xOffSet,0).perform();`  ### ERROR  org.openqa.selenium.remote.RemoteWebDriver cannot be cast to org.openqa.selenium.interactions.HasTouchScreen  ## An error occurred while I was executing the script. Can you tell me how to solve it? Thanks","closed","","gitjayzhen","2019-10-11T09:16:44Z","2019-11-10T10:07:54Z"
"","7286","'ValueError: source code string cannot contain null bytes' while importing webdriver","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one. ![Screenshot (15)](https://user-images.githubusercontent.com/43112185/59402939-3391b300-8dbe-11e9-971c-fd6c1f116147.png)  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","thisisanurag","2019-06-13T04:02:59Z","2019-08-14T08:10:01Z"
"","7822","port","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","ayojoshi","2019-11-28T09:57:25Z","2019-12-28T11:36:20Z"
"","7781","Exception in thread ""main"" java.lang.Error: Unresolved compilation problem:","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","amyachwad","2019-11-13T13:53:34Z","2019-12-17T14:29:48Z"
"","7719","androiddriver","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","sideshowbarker","2019-10-29T05:42:48Z","2019-11-28T06:08:51Z"
"","7718","click and hold","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","leonardoschwartz","2019-10-27T21:59:54Z","2019-11-27T08:08:42Z"
"","7699","chrome driver not working","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","tulasimg","2019-10-21T14:35:50Z","2019-12-10T20:15:07Z"
"","7602","Pro-UI unable to download file in --headless  mode.","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","ashokbhosale","2019-09-25T14:53:29Z","2019-10-25T15:30:42Z"
"","7595","setprofile didnot work for me","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","hackonehit","2019-09-24T09:04:32Z","2019-10-24T11:23:38Z"
"","7585","gateway timeout","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","lacell75","2019-09-20T11:43:43Z","2019-10-20T12:23:35Z"
"","7575","proxy","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","sandeepraina-lenze","2019-09-18T13:07:30Z","2019-10-18T14:09:45Z"
"","7560","firefox driver","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","tipejn","2019-09-13T07:59:27Z","2019-10-13T09:09:36Z"
"","7547","How to run chrome to translate ""zh-CN"" to ""en""? What is command-line?","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","SamuelMurphy12","2019-09-07T10:59:49Z","2019-10-07T13:09:37Z"
"","7535","Unable to start phantomjs with","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","page500","2019-09-03T08:12:17Z","2019-10-03T09:09:37Z"
"","7524","How do I set the ChromeDriver path when doing a Azure build and my selenium script is in Azure Repo itself.What is the ChromeDriver path that is to be set when we are doing System.SetProperties...     Moreover how do I use the ChromeDriver preinstalled on Hosted Agent pools  like in vs2017","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","BhagyashreeMishra","2019-08-28T11:18:54Z","2019-09-27T12:09:35Z"
"","7523","selenium python issues-> Traceback (most recent call last):   File ""C:/Users/mdarpana/PycharmProjects/python/example.py"", line 5, in      driver = webdriver.Chrome(executable_path='\Program Files\Python37\Lib\site-packages\selenium\webdriver\chromedriver.exe')   File ""C:\Users\mdarpana\PycharmProjects\python\venv\lib\site-packages\selenium\webdriver\chrome\webdriver.py"", line 73, in __init__     self.service.start()   File ""C:\Users\mdarpana\PycharmProjects\python\venv\lib\site-packages\selenium\webdriver\common\service.py"", line 83, in start     os.path.basename(self.path), self.start_error_message) selenium.common.exceptions.WebDriverException: Message: 'chromedriver.exe' executable needs to be in PATH. Please see https://sites.google.com/a/chromium.org/chromedriver/home","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","Darpana10","2019-08-28T10:44:19Z","2019-09-27T13:09:35Z"
"","7514","Unhandled Exception: OpenQA.Selenium.DriverServiceNotFoundException: The PhantomJS.exe file does not exist in the current directory or in a directory on the PATH environment variable.","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","bmarsha72","2019-08-22T15:55:53Z","2019-09-21T17:09:35Z"
"","7490","screenshot","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","fdemir45","2019-08-13T00:06:44Z","2019-09-12T02:09:38Z"
"","7474","Drag and drop not working properly","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","eljivarughese","2019-08-07T04:00:03Z","2019-09-06T05:09:35Z"
"","7457","selenium help","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","feroline","2019-08-01T13:54:41Z","2019-08-31T14:09:35Z"
"","7392","tested","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","YounesAlt","2019-07-15T16:29:02Z","2019-08-14T17:09:34Z"
"","7383","Chrome","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","newbasilis","2019-07-10T06:39:06Z","2019-08-14T06:09:42Z"
"","7381","ddd","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","DGQWEF","2019-07-09T14:48:45Z","2019-08-14T06:09:44Z"
"","7366","NoClassDefFoundError","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","Lucarnosky","2019-07-08T09:34:41Z","2019-08-14T06:09:52Z"
"","7320","android-server","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","sunshine-1234","2019-06-24T05:57:03Z","2019-08-14T07:09:50Z"
"","7297","frame","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","Cesarezz","2019-06-17T08:26:45Z","2019-08-14T08:09:51Z"
"","7296","frame","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","Cesarezz","2019-06-17T08:26:37Z","2019-08-14T08:09:50Z"
"","7293","node js examples selenium testing of chrome","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","graniteproqual","2019-06-14T17:54:57Z","2019-08-14T08:09:52Z"
"","7279","Error retrieving window with handle current","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","bhargavi6776","2019-06-11T06:27:54Z","2019-08-14T09:09:35Z"
"","7240","IE","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","huang199408","2019-05-28T09:49:00Z","2019-08-14T10:09:35Z"
"","7226","it is nice","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","renzhongzhizha","2019-05-22T13:49:11Z","2019-08-14T10:09:45Z"
"","7204","iframe","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","sunnamed","2019-05-14T11:58:02Z","2019-08-14T11:09:36Z"
"","7201","http://code.google.com/p/selenium/downloads/detail?name=selenium-server-standalone-2.39.0.jar","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","lgebra1","2019-05-12T23:42:10Z","2019-08-14T11:09:37Z"
"","7199","Exception in thread ""main"" java.lang.IllegalStateException: The path to the driver executable must be set by the webdriver.chrome.driver system property; for more information, s","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","saranyagks","2019-05-10T19:24:19Z","2019-08-14T11:09:41Z"
"","7192","timeout","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","staniere","2019-05-09T12:59:56Z","2019-08-14T11:09:46Z"
"","7149","firefox driver logs","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","bettesn","2019-04-28T12:00:16Z","2019-08-14T12:09:56Z"
"","7112","global.By","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","claudiutrk","2019-04-17T08:23:40Z","2019-08-14T14:09:58Z"
"","7105","flakiness","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","ramsesh18","2019-04-16T04:36:30Z","2019-08-14T15:09:39Z"
"","7087","protractor is not stable to handle hidden pop up in virtual machine for some times","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","dhanraj002","2019-04-04T20:45:03Z","2019-08-14T16:09:56Z"
"","7045","profile","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","songhuicheng","2019-03-19T20:32:30Z","2019-08-14T19:09:38Z"
"","7024","fileupload with sendkeys not working","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","gk10gk","2019-03-13T07:20:09Z","2019-08-14T19:09:59Z"
"","6998","selenium","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","saodius","2019-03-05T18:43:15Z","2019-08-14T20:09:58Z"
"","6990","download","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","Toihd-Bitnemo","2019-03-04T03:55:04Z","2019-08-14T20:10:01Z"
"","6972","path","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","Usede","2019-02-26T13:46:02Z","2019-08-14T21:09:39Z"
"","6900","git st","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","DevinChenTinkLabs","2019-01-30T10:16:43Z","2019-08-14T22:09:59Z"
"","6892","chrome","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","sukhjeetmangat","2019-01-28T21:20:04Z","2019-08-14T22:10:01Z"
"","6852","555j7h","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","hoangquyit","2019-01-15T01:57:30Z","2019-08-15T00:09:34Z"
"","6970","on linux, if port 1024 is occupied, can this be improved?","## 💬 Questions and Help   my port config range is [1024, 65535], so if port 1024 is occupied, then find ephemeral port will fail. Why return to 1024 directly? can we use random port? ```shell #shell 1 root@/tmp# cat /proc/sys/net/ipv4/ip_local_port_range 1024	65535 root@/tmp# nc -l 1024 ....  #shell 2 Caused by: java.lang.RuntimeException: Unable to find a free port 	at org.openqa.selenium.net.PortProber.findFreePort(PortProber.java:67) ``` [org.openqa.selenium.net.PortProber.createAcceptablePort](https://github.com/SeleniumHQ/selenium/blob/83b2736806139c3a5ebe5f4b883422ed64b157d0/java/client/src/org/openqa/selenium/net/PortProber.java#L79)   I find [this](https://github.com/SeleniumHQ/selenium/issues/4920#issue-267325853) and [this](https://github.com/SeleniumHQ/selenium-google-code-issue-archive/issues/3868#issue-138324933), but there is not solve my problem.","closed","R-awaiting answer,","fzhyzamt","2019-02-26T07:44:44Z","2019-08-14T17:09:56Z"
"","7028","ChromeDriver 74 out before actual Chrome 74 is out","## 💬 Latest Chrome version 73* latest ChromeDriver version 74*  Forgive me if it's a silly question but how can we have the situation as described in the title? Since WebDriver manager gets latest version of ChromeDriver but there is no compatible Chrome out there yet, all tests fail.","closed","","flisowski","2019-03-13T16:03:44Z","2019-08-14T19:09:56Z"
"","6936","Combine several Selenium Grids","## 💬 Combine or integrate several Selenium Grids  Is it possible to integrate a Selenium Grid into another one. E.g. trying to extend an existing grid by a second one, is it possible to call the second grid's hub node like a node in the first grid?","closed","I-enhancement,","mahula","2019-02-14T09:41:40Z","2021-09-05T08:27:33Z"
"","6894","geckoDriverService new session is immediately removed in selenium-standalone > 3.14 when grid -timeout set to 0","## 💥 Regression Report Newly created selenium grid session is immediately closed and browser killed. This issue can be reproduced only with RemoteWebDriver. When grid -timeout is set to 0 (This means do not release session and remove timeout if stale). If driver initialized as new FirefoxDriver(url, capas) everything works fine.  Quoting from docs: -timeout 30 (300 is default) The timeout in seconds before the hub automatically releases a node that hasn't received any requests for more than the specified number of seconds. After this time, the node will be released for another test in the queue. This helps to clear client crashes without manual intervention. To remove the timeout completely, specify -timeout 0 and the hub will never release the node.  Trace log: ``` [root@centos_grid1 commonConfig]# 14:07:00.841 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: firefox, marionette: true, moz:firefoxOptions: {args: [], log: {level: trace}, prefs: {}}} 14:07:00.850 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=4d85a74a-e7f2-4c2a-b76e-6c40abc84362, seleniumProtocol=WebDriver, browserName=firefox, maxInstances=1, platformName=LINUX, platform=LINUX} 14:07:01.048 INFO [ActiveSessionFactory.apply] - Capabilities are: {   ""acceptInsecureCerts"": true,   ""browserName"": ""firefox"",   ""marionette"": true,   ""moz:firefoxOptions"": {     ""args"": [     ],     ""log"": {       ""level"": ""trace""     },     ""prefs"": {     }   } } 14:07:01.057 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.firefox.GeckoDriverService) 1548767221261   mozrunner::runner       INFO    Running command: ""/bin/firefox"" ""-marionette"" ""-foreground"" ""-no-remote"" ""-profile"" ""/tmp/rust_mozprofile.9KbHcKyGmIuH"" 1548767221265   geckodriver::marionette DEBUG   Waiting 60s to connect to browser on 127.0.0.1:37193 1548767222426   addons.webextension.screenshots@mozilla.org     WARN    Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons 1548767222428   addons.webextension.screenshots@mozilla.org     WARN    Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/ 1548767222428   addons.webextension.screenshots@mozilla.org     WARN    Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader* 1548767222819   Marionette      TRACE   Received observer notification profile-after-change 1548767222923   Marionette      TRACE   Received observer notification command-line-startup 1548767222923   Marionette      TRACE   Received observer notification nsPref:changed 1548767222923   Marionette      DEBUG   Init aborted (running=false, enabled=true, finalUIStartup=false) 1548767223158   Marionette      TRACE   Received observer notification toplevel-window-ready 1548767226284   Marionette      TRACE   Received observer notification sessionstore-windows-restored 1548767226284   Marionette      TRACE   Waiting until startup recorder finished recording startup scripts... 1548767226709   Marionette      TRACE   All scripts recorded. 1548767226710   Marionette      DEBUG   Setting recommended pref apz.content_response_timeout to 60000 1548767226710   Marionette      DEBUG   Setting recommended pref browser.contentblocking.introCount to 99 1548767226710   Marionette      DEBUG   Setting recommended pref browser.download.panel.shown to true 1548767226711   Marionette      DEBUG   Setting recommended pref browser.newtabpage.enabled to false 1548767226711   Marionette      DEBUG   Setting recommended pref browser.pagethumbnails.capturing_disabled to true 1548767226712   Marionette      DEBUG   Setting recommended pref browser.search.update to false 1548767226712   Marionette      DEBUG   Setting recommended pref browser.tabs.disableBackgroundZombification to false 1548767226712   Marionette      DEBUG   Setting recommended pref browser.tabs.warnOnCloseOtherTabs to false 1548767226712   Marionette      DEBUG   Setting recommended pref browser.tabs.warnOnOpen to false 1548767226713   Marionette      DEBUG   Setting recommended pref browser.usedOnWindows10.introURL to  1548767226713   Marionette      DEBUG   Setting recommended pref browser.urlbar.suggest.searches to false 1548767226714   Marionette      DEBUG   Setting recommended pref datareporting.policy.dataSubmissionPolicyAccepted to false 1548767226714   Marionette      DEBUG   Setting recommended pref dom.disable_beforeunload to true 1548767226714   Marionette      DEBUG   Setting recommended pref dom.disable_open_during_load to false 1548767226715   Marionette      DEBUG   Setting recommended pref dom.file.createInChild to true 1548767226715   Marionette      DEBUG   Setting recommended pref dom.max_chrome_script_run_time to 0 1548767226715   Marionette      DEBUG   Setting recommended pref dom.max_script_run_time to 0 1548767226724   Marionette      DEBUG   Setting recommended pref extensions.getAddons.cache.enabled to false 1548767226724   Marionette      DEBUG   Setting recommended pref extensions.webservice.discoverURL to http://%(server)s/dummy/discoveryURL 1548767226725   Marionette      DEBUG   Setting recommended pref network.http.prompt-temp-redirect to false 1548767226725   Marionette      DEBUG   Setting recommended pref network.http.speculative-parallel-limit to 0 1548767226725   Marionette      DEBUG   Setting recommended pref security.fileuri.strict_origin_policy to false 1548767226725   Marionette      DEBUG   Setting recommended pref security.notification_enable_delay to 0 1548767226726   Marionette      DEBUG   Setting recommended pref signon.autofillForms to false 1548767226726   Marionette      DEBUG   Setting recommended pref signon.rememberSignons to false 1548767226726   Marionette      DEBUG   Setting recommended pref toolkit.cosmeticAnimations.enabled to false 1548767226843   Marionette      INFO    Listening on port 37193 1548767226844   Marionette      DEBUG   Remote service is active 1548767226889   geckodriver::marionette DEBUG   Connection established on 127.0.0.1:37193. Waiting for Marionette handshake 1548767226897   Marionette      DEBUG   Accepted connection 0 from 127.0.0.1:38802 1548767226903   geckodriver::marionette DEBUG   Connected to Marionette 1548767226908   Marionette      DEBUG   0 -> [0,1,""WebDriver:NewSession"",{""acceptInsecureCerts"":true,""browserName"":""firefox""}] 1548767226909   Marionette      WARN    TLS certificate errors will be ignored for this session 1548767227022   Marionette      TRACE   [4294967297] Frame script loaded 1548767227043   Marionette      TRACE   [4294967297] Frame script registered 1548767227055   Marionette      DEBUG   0  [0,2,""Marionette:Quit"",{""flags"":[""eForceQuit""]}] 1548767227295   Marionette      INFO    Stopped listening on port 37193 JavaScript error: resource://activity-stream/lib/ActivityStreamPrefs.jsm, line 23: NS_ERROR_ILLEGAL_VALUE: Component returned failure code: 0x80070057 (NS_ERROR_ILLEGAL_VALUE) [nsIPrefBranch.removeObserver] 1548767227432   Marionette      TRACE   Received observer notification quit-application 1548767227443   Marionette      DEBUG   0  [0,3,""Marionette:Quit"",{""flags"":[""eForceQuit""]}] 1548767227946   Marionette      DEBUG   0","closed","C-grid,","dawe11","2019-01-29T13:39:02Z","2021-09-05T08:10:37Z"
"","7089","java.lang.NoSuchMethodError try to update from 3.0.1 to 3.141.59","## 💥 Regression Report In my project i removed the old dependece selenium-server-standalone-3.0.1.jar and i putted the new selenium-server-standalone-3.141.59.jar but i got this error:  `Exception in thread ""main"" java.lang.NoSuchMethodError: com.google.common.base.Preconditions.checkState(ZLjava/lang/String;Ljava/lang/Object;)V 	at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:146) 	at org.openqa.selenium.firefox.GeckoDriverService.access$000(GeckoDriverService.java:44) 	at org.openqa.selenium.firefox.GeckoDriverService$Builder.usingFirefoxBinary(GeckoDriverService.java:160) 	at org.openqa.selenium.firefox.FirefoxDriver.toExecutor(FirefoxDriver.java:187) 	at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:147) 	at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:125) 	at X.Main.main(Main.java:24) `  Line 24: `WebDriver driver = new FirefoxDriver();`  ![image](https://user-images.githubusercontent.com/34103646/55689455-dffd8600-5984-11e9-9e68-7b0be483f96f.png)  OS: Windows 10 Browser: Firefox Browser version: 66.0.2 Browser Driver version: geckodriver 0.24.0 Language Bindings version:  Selenium Grid version (if applicable): e.g.: 3.141.59","closed","","Patatone","2019-04-07T20:24:03Z","2019-08-14T16:09:42Z"
"","7665","element.text significantly slower in IEDriverServer >= 3.14","## 💥 Regression Report `element.text` seems to have gotten significantly slower between IEDriverServer 3.13 and 3.14. While it still gives the right results, it can take several minutes to do so in some cases when it previously would take under a second.  The time taken for the `elem[0].text` call in the code example below, in my setup, for different versions of IEDriverServer is: 3.13: 0.2 seconds 3.14: 21 seconds 3.141: 18 seconds  Using `http://google.com/search?q=testing` instead (just as a random example of another page with lots of text), the timings are: 3.13: 1 second 3.14: 1m28s 3.141: 2m13s  so it looks like `elem.text` got significantly slower (100x or so, for these pages) between versions `3.13` and `3.14` (and possibly also between `3.14` and `3.141`). For pages with very little text, the difference is far less pronounced. It looks like there were some changes to obscured element checks between those versions (e.g. commit f16c6b2c2e809cb16746d8961717097e0a296005) which I expect are related--but it also looks like those commits made the check more accurate. I'm not sure if there's any way to keep the check accurate while also not regressing performance so significantly, but I'm hoping there is!  ## Last working Selenium version  Worked up to version: 3.13.0  Stopped working in version: 3.14.0  ## To Reproduce  Detailed steps to reproduce the behavior: on a Windows machine with IE11, and Python, and Selenium, run the script below.  ## Expected behavior The `elem[0].text` call should be relatively fast--on the order of a second or less.  ## Test script reproducing this issue (when applicable)  ``` from selenium import webdriver from selenium.webdriver.common.by import By from datetime import datetime  wd = webdriver.Ie(executable_path=""IEDriverServer_3.141.0.exe"") wd.get(""https://www.seleniumhq.org"") elem = wd.find_elements(By.XPATH, ""/HTML"") now = datetime.now() result = ""Selenium"" in elem[0].text print datetime.now() - now wd.close() ```  ## Environment  OS: Windows 10 version 1709 Browser: Internet Explorer Browser version: 11.1331.16299.0 Browser Driver version: IEDriverServer; multiple versions. (I have been mostly using the 32-bit version, but tested with the 64-bit version of `3.141.59` and it seems to happen there as well.) Language Bindings version: Selenium Python bindings, version 3.141.0 Selenium Grid version (if applicable): N/A","closed","I-stale,","mrwright","2019-10-08T21:45:56Z","2021-12-03T00:06:43Z"
"","7587","Actions of selenium Select fail with chrome driver 76","## 💥 Regression Report  With chromedriver upgrade with 76.0.3809.100 I faced below issue when performing selectByVisibleText andselectByValue actions.  **NOTE:** During further analysis we observed this is not happening with all Select elements, but with Select elements which have **_prototype.js_**. `","closed","R-awaiting answer,","BathiyaL","2019-09-21T13:19:38Z","2019-10-29T09:45:10Z"
"","6963","Selenium doesn't works with Chromium v72 (works with v70)","## 💥 Regression Report  When trying to capture a page with Selenium + Chromium (72.0.3626.96 built on Debian 9.8) + ChromeDriver (72.0.3626.96), an error occurs:  ``` Error while capturing page: unknown error: Chrome failed to start: exited abnormally   (unknown error: DevToolsActivePort file doesn't exist)   (The process started from chrome location /usr/bin/chromium is no longer running, so ChromeDriver is assuming that Chrome has crashed.)   (Driver info: chromedriver=72.0.3626.96,platform=Linux 4.9.0-8-amd64 x86_64) (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 191 milliseconds Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53' System info: host: 'xxx', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '4.9.0-8-amd64', java.version: '1.8.0_181' Driver info: driver.version: unknown ```  ``` 15:08:48.899 INFO [GridLauncherV3.parse] - Selenium server version: 3.141.59, revision: e82be7d358 15:08:48.965 INFO [GridLauncherV3.lambda$buildLaunchers$3] - Launching a standalone Selenium Server on port 4444 2019-02-22 15:08:49.009:INFO::main: Logging initialized @253ms to org.seleniumhq.jetty9.util.log.StdErrLog 15:08:49.161 INFO [WebDriverServlet.] - Initialising WebDriverServlet 15:08:49.230 INFO [SeleniumServer.boot] - Selenium Server is up and running on port 4444 15:08:58.973 INFO [ActiveSessionFactory.apply] - Capabilities are: {   ""browserName"": ""chrome"",   ""chromeOptions"": {     ""binary"": ""\u002fusr\u002fbin\u002fchromium"",     ""args"": [       ""--headless""     ]   } } 15:08:58.974 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) Starting ChromeDriver 72.0.3626.96 on port 21621 Only local connections are allowed. Please protect ports used by ChromeDriver and related test frameworks to prevent access by malicious code. ``` The PHP code:  ``` $host = 'http://localhost:4444/wd/hub';  $options = new ChromeOptions(); $options->addArguments(['--headless']); $options->setBinary('/usr/bin/chromium');  $capabilities = DesiredCapabilities::chrome(); $capabilities->setCapability(ChromeOptions::CAPABILITY, $options);  $driver = RemoteWebDriver::create($host, $capabilities, 5000); $driver->get('http://xxx'); ```  When downgrade to Chromium v70 + ChromeDriver v2.46, it works well.  Try with `--headless`, `--no-sandbox` and `--disable-dev-shm-usage` arguments without success.  Can you help?  Thanks!  ## Environment  OS: Debian 9.8 Browser: Chromium Browser version: 72.0.3626.96 Browser Driver version: ChromeDriver 72.0.3626.96 Language Bindings version: Java 1.8.0_181 Selenium Grid version: 3.141.59","closed","","dreamon11","2019-02-22T15:13:02Z","2019-08-14T16:10:03Z"
"","7691","[Regression] Form submit does not seems to wait for target page load anymore","## 💥 Regression Report  We just upgraded from Selenium 2.44.0 to 3.141.59 (yes big jump...).  In previous version the following code was waiting for the page load but it's not the case anymore:  https://github.com/xwiki/xwiki-platform/blob/xwiki-platform-11.8.1/xwiki-platform-core/xwiki-platform-extension/xwiki-platform-extension-test/xwiki-platform-extension-test-pageobjects/src/main/java/org/xwiki/extension/test/po/SimpleSearchPane.java#L104  `searchInput` is an `` in a `` and clicking ENTER submit the form to the target page (in this case the current page). Problem is that Selenium does not seems to have any special handling of ENTER key anymore in the case of a form input and `#searchInput` returns immediately.  I tried also calling #submit() on the `` and on the `` WebElements but it has the same behavior (not waiting).  ## Last working Selenium version  Worked up to version: 2.44 with Firefox 32.0  Stopped working in version: 3.141.59 with Firefox 69.0.2  (Did not really tested the versions in between so not really sure when the behavior change really started)  ## To Reproduce  Detailed steps to reproduce the behavior:  * have some dynamic HTML page with a `` * access a string input of that form as a WebElement * call #sendKeys(Keys.ENTER) on it * assert something the resulting target page must contain  -> ENTER key work as expected and submit the form but the assert is executed before the target page get a chance to finish loading.  ## Expected behavior  `#sendKeys` wait until the page is reloaded  ## Environment  OS: Ubuntu 19.04 Browser: Firefox Browser version: 69.0.2 Browser Driver version: GeckoDriver 0.26.0 (trough https://github.com/bonigarcia/webdrivermanager) Language Bindings version: Java 3.141.59","closed","R-awaiting answer,","tmortagne","2019-10-16T16:09:28Z","2019-12-04T12:19:55Z"
"","7497","Cannot open any URL (chromedriver & C#)","## 💥 Regression Report  Using latest webdriver library and chromedriver 76 , i wasn't able to open any URL in Chrome in C# , the command prompt and chrome window are shown but nothing happens. Check my code below.  ``` IWebDriver drv = new ChromeDriver(); drv.Url = ""http://google.com""; ``` I also tried to disable W3C mode but this time only the command prompt window is shown without Chrome window.  ``` ChromeOptions op = new ChromeOptions(); op.UseSpecCompliantProtocol = false; IWebDriver drv = new ChromeDriver(op); drv.Url = ""http://google.com""; ```     ## Last working Selenium version  Worked up to version: Selenium 3.141.59  Stopped working in version: selenium-4.0.0-alpha-2   ## Environment  OS: Windows 10 Browser: Chrome Browser version: 76.0.3809.100 Browser Driver version: ChromeDriver 76.0.3809.68","closed","","mahmoud-hassan-911","2019-08-15T14:44:22Z","2019-10-01T19:09:36Z"
"","7194","Incorrect duration unit for `nodeStatusCheckTimeout` option","## 💥 Regression Report  There seems to be a duration-unit (ms / sec) regression on the `nodeStatusCheckTimeout` configuration option. The option is currently documented as having milliseconds (`ms`) units, and a default of `5000`:  https://github.com/SeleniumHQ/selenium/blob/38d5e4440b2c866a78a1ccb2a18d9795a1bdeafd/java/server/src/org/openqa/grid/internal/utils/configuration/GridNodeConfiguration.java#L132-L135  https://github.com/SeleniumHQ/selenium/blob/38d5e4440b2c866a78a1ccb2a18d9795a1bdeafd/java/server/src/org/openqa/grid/internal/cli/GridNodeCliOptions.java#L126-L133  https://github.com/SeleniumHQ/selenium/blob/38d5e4440b2c866a78a1ccb2a18d9795a1bdeafd/java/server/src/org/openqa/grid/common/defaults/DefaultNodeWebDriver.json#L35  However, it is being used as a `Duration.ofSeconds` in the `HttpClient` builder:  https://github.com/SeleniumHQ/selenium/blob/38d5e4440b2c866a78a1ccb2a18d9795a1bdeafd/java/server/src/org/openqa/grid/internal/BaseRemoteProxy.java#L468-L469  https://github.com/SeleniumHQ/selenium/blob/38d5e4440b2c866a78a1ccb2a18d9795a1bdeafd/java/server/src/org/openqa/grid/internal/BaseRemoteProxy.java#L458-L461  https://github.com/SeleniumHQ/selenium/blob/38d5e4440b2c866a78a1ccb2a18d9795a1bdeafd/java/server/src/org/openqa/grid/internal/BaseGridRegistry.java#L63-L69  This causes connection/read timeouts related to node status checks to be 1000 times longer than expected (effectively useless).  Possibly related to #4891, #5218.  A workaround is to configure the option as seconds instead of milliseconds (e.g., set `-nodeStatusCheckTimeout 1` to expect a status-check timeout of 1 second).  I could provide additional reproduction steps / build info etc. if needed, but hopefully this regression should be clear enough through the lines of code quoted above.","closed","C-grid,","wjordan","2019-05-10T01:07:51Z","2020-05-20T21:24:07Z"
"","7614","driver.manage().getCookies() does not return cookies for active iframe, returning cookies from defaultContent()","## 💥 Regression Report  Selenium ignores selected iframe and always returns cookies for the document itself: According to this ticket, it used to work in the past: https://github.com/seleniumhq/selenium-google-code-issue-archive/issues/7799  ## Steps to reproduce  Open a site with iframe, switch to the iframe, get the list of cookies.  Current behavior: get_cookies() returns cookies for the default content.  Expected behavior: get_cookies() is expected to return cookies for the active content (iframe).  ## Script to reproduce  ```python from selenium import webdriver from selenium.webdriver.common.keys import Keys  browser = webdriver.Chrome()  browser.get(""https://service.nemid.nu/dk-en/#log_paa_selvbetjening"") input(""(page loaded) Press any key"")  print(browser.get_cookies())  # OK - cookies for DefaultContent  elem = browser.find_element_by_id('nemid_iframe')  browser.switch_to.frame('nemid_iframe') # or frame(elem)  print(browser.get_cookies()) # ERROR - cookies for DefaultContent. Expected iframe cookies ```` I expected to see JSESSIONID for domain 'applet.danid.dk' among the cookies, but it never appeared.   ## Environment  OS:  Windows 10 Browser: Chrome, Firefox Browser version: Chrome 77.0.3865.90, Firefox 69.0.1,  Browser Driver version: ChromeDriver 77.0.3865.40, GeckoDriver 0.25.0 Language Bindings version: Python 3.141.0, ..Net Selenium.WebDriver 3.141.0, Selenium.WebDriver 3.11.0","closed","","evgenybf","2019-09-28T13:52:24Z","2019-11-04T20:07:48Z"
"","7461","MoveToElement no longer calculates offset from top-left corner","## 💥 Regression Report  In the past, selenium v3.8.1  would correctly calculate the offset from the top-left corner of an element. Since selenium v3.14 this is no longer the case and the offset is being calculated from the center of the web element. Furthermore, the element is no longer scrolled into view either.  From my research it seems like this is caused by change in the chrome and gecko drivers. In that case selenium should ideally keep the API consistent or at the very least update the documentation:  https://seleniumhq.github.io/selenium/docs/api/java/org/openqa/selenium/interactions/Actions.html#moveToElement-org.openqa.selenium.WebElement-int-int-  Moves the mouse to an offset from the **top-left corner of the element**. The element is scrolled into view and its location is calculated using getBoundingClientRect.","closed","C-java,","old-profile","2019-08-02T08:42:36Z","2019-09-17T21:09:35Z"
"","7747","IWebElement.GetAttribute() and IWebElement.Displayed throw exception on selenium github version, works fine on NuGet version.","## 💥 Regression Report  If you try to query these commands, an exception will be thrown if you are using the library cloned from github and built from visual studio. The resources ""get-attribute.js"" and ""is-displayed.js"" do not exist where they do in the NuGet version.  The reason I am using this version is that this one implements socksVersion property on the Proxy class, where the NuGet version does not, also had to modify the source myself to change the delay when executing actions from 250ms to 0, I really dont understand these inconsistencies in the code base.    ## Last working Selenium version  Worked up to version: All nuget versions  Stopped working in version: Not sure but probably all github versions, it doesnt look like these resources are included  ## To Reproduce    Just get a reference to any WebElement on the page and try to GetAttribute on it.  ## Expected behavior  Expected these commands to run normally like they do in the NuGet version.  ## Test script reproducing this issue (when applicable)  IWebElement element = null; // ANY ELEMENT HERE var attribute = element.GetAttribute(""outerHTML""); var displayed = element.Displayed;  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS: Windows 10 Browser: Chrome Browser version: 78 Browser Driver version: from 2019-10-21 20:40:10 Language Bindings version: C# ? Selenium Grid version (if applicable):","closed","","KardoseR","2019-11-05T15:49:21Z","2019-11-05T19:01:47Z"
"","6890","org.openqa.selenium.security.UserAndPassword not found on v3.141.59, is it deprecated?","## 💥 Regression Report  I was using org.openqa.selenium.security.UserAndPassword in my project, After updating to Selenium v3.141.59 it is not found. Please help to correct my code.","closed","","anasfahumy","2019-01-28T10:42:33Z","2019-08-14T22:09:36Z"
"","6889","org.openqa.selenium.os.WindowsUtils is depricated, what is the alternative?","## 💥 Regression Report  I am using org.openqa.selenium.os.WindowsUtils; for killing processes.   WindowsUtils.killPID(app) WindowsUtils.killByName()","closed","","anasfahumy","2019-01-28T05:57:37Z","2019-08-14T22:10:02Z"
"","6865","I can't change browser.link.open_newwindow pref if I need use profile","## 💥 Regression Report  Hi.  **Meta -**  OS: MacOS X, Linux, Windows  Selenium Version: 3.141.59  Browser: Firefox (geckodriver)  Browser Version: 64,63,62,61,60 (64 bits)  **Expected Behavior**  **_browser.link.open_newwindow_** preference always set to 3  **Actual Behavior** Exception in thread ""main"" java.lang.IllegalArgumentException: Preference browser.link.open_newwindow may not be overridden: frozen value=2, requested value=3   **Scenario:** `FirefoxProfile profile = new FirefoxProfile(); FirefoxOptions options = new FirefoxOptions().setProfile(profile); options.addPreference(""browser.link.open_newwindow"", 3)  //or options.addPreference(""browser.link.open_newwindow"", 1) desiredCapabilities.merge(options); WebDriver driver1 = new RemoteWebDriver(new URL(""http://localhost:4444/wd/hub""), desiredCapabilities);`   but if I send custom profile with ""browser.link.open_newwindow"" = 3 in pref.js, so I don't get exception. I get browser with ""browser.link.open_newwindow"" = 2 Why???","closed","C-java,","azapevalov","2019-01-18T16:10:13Z","2019-08-14T16:09:35Z"
"","7819","Uploading a file to remote does not work on Firefox & Selenium Grid","## 💥 Regression Report  File upload does not work on Firefox when using Selenium Grid, `remote.FileDetector` and a file stored locally: ``` WebDriverError: HTTP method not allowed at parseHttpResponse ([...]/node_modules/selenium-webdriver/lib/http.js:580:11)     at Executor.execute ([...]/node_modules/selenium-webdriver/lib/http.js:489:26)     at process._tickCallback (internal/process/next_tick.js:68:7) ```  This is occurs after sending `uploadFile` command.  But it works without any problems when switching to old Selenium Server Standalone. For me it looks like the FileDetector is not doing what it should or it does it incorrectly because when I use a path to the file stored on remote machine (`fileInput.sendKeys('C:\\test.txt')`) then it works on both servers.  ## Last working  Worked up to: `selenium-server-standalone-3.141.59.jar` Stopped working in: `selenium-server-4.0.0-alpha-3.jar`  ## To Reproduce  - Start geckodriver on remote: `C:\geckodriver-v0.26.0-win64\geckodriver.exe --host=0.0.0.0 --port=4444 --log trace` - Start Selenium Grid on remote: `java -jar selenium-server-4.0.0-alpha-3.jar standalone --host 0.0.0.0 --port 4445` - Start Selenium Server Standalone on remote: `java -jar selenium-server-standalone-3.141.59.jar -host 0.0.0.0 -port 4446 -role standalone --debug` - Create `test.html` file and make it accessible via test vhost `my-host.test`: ```                  ``` - Add `my-host.test` vhost with correct IP to `C:\Windows\System32\drivers\etc\hosts` file - Create `test.txt` file with some contents (for example: `test`) and make it available relatively to the `test.js` file: `data/files-to-upload/test.txt` - The same text file should be available on remote too: `C:\test.txt`  ## Expected behavior  The input present on the test page should receive a path to the `test.txt` file.  ## Test script reproducing this issue  ``` const { Builder, By, Browser } = require('selenium-webdriver'); const remote = require('selenium-webdriver/remote');  (async () => {   const builder = new Builder()     .forBrowser(Browser.FIREFOX);    // Connecting to Selenium Grid (4.*)   builder.usingServer('http://192.168.0.132:4445');    const driver = builder.build();   driver.setFileDetector(new remote.FileDetector());    await driver.get('http://my-host.test/test.html');    //const filePath = 'C:\\test.txt'; // Uploading locally stored file works.   // File transferred from local to remote does not work.   const filePath = `${__dirname}/../data/files-to-upload/test.txt`;   const fileInput = await driver.findElement(By.id('file'));   await fileInput.sendKeys(filePath); })(); ```  ## Test which confirms that the same works on old server  ``` const { Builder, By, Browser } = require('selenium-webdriver'); const remote = require('selenium-webdriver/remote');  (async () => {   const builder = new Builder()     .forBrowser(Browser.FIREFOX);    // Connecting to Selenium Server Standalone (3.*)   builder.usingServer('http://192.168.0.132:4446/wd/hub');    const driver = builder.build();   driver.setFileDetector(new remote.FileDetector());    await driver.get('http://my-host.test/test.html');    // File transferred from local to remote.   const filePath = `${__dirname}/../data/files-to-upload/test.txt`;   const fileInput = await driver.findElement(By.id('file'));   await fileInput.sendKeys(filePath); })(); ```  ## Environment  ### Remote: OS: Windows 10 Pro 64bit PL Browser: Firefox 64bit Browser version: 70.0.1 Browser Driver version: GeckoDriver 0.26 Language Bindings version: JavaScript 4.0.0-alpha.5 https://www.npmjs.com/package/selenium-webdriver/v/4.0.0-alpha.5 Java: OpenJDK Runtime Environment (build 13.0.1+9) Selenium Server Standalone version: 3.141.59 Selenium Grid version: 4.0.0 alpha 3","closed","","wskorodecki","2019-11-27T12:59:30Z","2019-12-27T20:53:30Z"
"","7534","System.InvalidOperationException : Session [(null externalkey)] not available and is not among the last 1000 terminated sessions. Active sessions are...","## 💥 Regression Report  As already described in issues #6436, #4585 and #3448 there's an error when trying to connect appium server (V 1.14.2) to Selenium Grid (V 3.141.59). I first thought this is an issue of the appium server but recognized that the error does not occur when using an older Selenium Grid version (V 3.6 and older). So imho this is really an issue related to the Selenium Grid.  The appium server successfully registered on the Selenium Grid (V 3.141.59) and I was able to install my app on an Android or iOS device. But any further command is not being executed due to this error: System.InvalidOperationException : Session [(null externalkey)] not available and is not among the last 1000 terminated sessions. Active sessions are [....].   When I tried the same with Selenium Grid (V3.6) it worked well.  ## Last working Selenium version  Worked up to version: 3.6  Stopped working in version: 3.11  ## To Reproduce  Detailed steps to reproduce the behavior: 1. Start the Selenium Grid (e.g. V 3.141.59) 2. Start the Appium server (e.g. V1.14.2) 3. Start test script (I created a Xamarin.Forms demo app with some basic UI tests using [Appium.WebDriver nuget](https://www.nuget.org/packages/Appium.WebDriver/). 4. After installing the demo app on the device connected to the Appium server, the test is crashing due to following error: System.InvalidOperationException : Session [(null externalkey)] not available and is not among the last 1000 terminated sessions. Active sessions are [....].   ## Expected behavior  It is expected that the test is being executed on Step 4.  ## Environment  OS: OSX  Mojave Appium server: 1.14.2 Selenium Grid version (if applicable): 3.141.59","closed","R-awaiting answer,","RST90","2019-09-03T07:23:42Z","2021-09-05T10:02:40Z"
"","7568","IEDriverServer 3.150.0 cannot connect when screen is locked","## 💥 Regression Report  A clear and concise description of what the regression is.  When the screen is locked, or when running on a remote PC with no RDP sessions active, when trying to create a new driver object the exception ""The HTTP request to the remote WebDriver server for URL http://localhost:16357/session timed out after 60 seconds."" is thrown.  ## Last working Selenium version  Worked up to version:  IEDriverServer.exe version 3.14.0  Stopped working in version:  IEDriverServer.exe version 3.141.59  *note* different errors in the versions in between, but still does not function at higher than 3.14.0  ## To Reproduce    Lock your screen, or run on a remote PC with no active RDP session.  While the screen is locked create a driver instance of InternetExplorerDriver.  The constructor will throw an exception for the timeout.  Note, I have tried a number of different IE driver configuration settings as well as configurations of IE itself without anything causing different behaviour.  Detailed steps to reproduce the behavior:  ## Expected behavior  The driver will be created, and will function, like it does when the screen is not locked, or when there is an active RDP session.  ## Test script reproducing this issue (when applicable)  in C#: `var driver = new InternetExplorerDriver(     InternetExplorerDriverService.CreateDefaultService(driversDir),     new InternetExplorerOptions     {         InitialBrowserUrl = @""https://github.com/SeleniumHQ/selenium""      }, TimeSpan.FromSeconds(60));  driver.Manage().Timeouts().PageLoad = TimeSpan.FromSeconds(time); driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(time); `  ## Environment  OS: Windows 10 Browser: Internet Explorer Browser version: e.g.: 11.950.17134.0 Browser Driver version: 3.150  Language Bindings version: C# 3.141.0  Selenium Grid version (if applicable):  NA","closed","D-IE,","JoshuaHillerup","2019-09-16T14:36:58Z","2021-09-05T08:10:36Z"
"","7299","The script EXPORT in selenium ide is broken!!","## 💥 Regression Report  A clear and concise description of what the regression is.    ## Last working Selenium version  Worked up to version:  Stopped working in version:  ## To Reproduce    Detailed steps to reproduce the behavior:  ## Expected behavior  A clear and concise description of what you expected to happen.  ## Test script reproducing this issue (when applicable)  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:   Selenium Grid version (if applicable):","closed","","Vmudugonda","2019-06-17T16:27:26Z","2019-08-14T08:09:47Z"
"","7281","Performance regression for mouse movements when w3c compliance is active","## 💥 Regression Report   In w3c mode, pointer actions incur a 250 ms overhead. Mouse movement is then extremely slow.  Setting  [DEFAULT_MOVE_DURATION ](https://github.com/SeleniumHQ/selenium/blob/selenium-3.14.0/py/selenium/webdriver/common/actions/pointer_input.py#L26) from 250 to 0 in the PointerInput class fixes the problem.  For the ruby bindings, the possibility to change the duration was [added](https://github.com/SeleniumHQ/selenium/blob/65804eae63a2f54d8d30bf1c8a66dd1a2b4b2280/rb/CHANGES#L215).    See also https://bugs.chromium.org/p/chromedriver/issues/detail?id=2948#c4   ## Last working Selenium version  Stopped working in version: Selenium 3.3.0  Regression introduced in this commit: https://github.com/SeleniumHQ/selenium/commit/b33a3c9f330bafec15b06b325b4120b2140acf88#diff-52a5fc90be38d4c3455748e21d70b1d4  ## To Reproduce  Use the latest chrome/chromedriver >= 75, w3c is now the default mode.  ```python from selenium.webdriver.common.action_chains import ActionChains from selenium import webdriver   # chrome_options = webdriver.ChromeOptions() # chrome_options.add_experimental_option('w3c', True) # driver =  webdriver.Chrome(options=chrome_options)  driver =  webdriver.Chrome() driver.get('https://www.google.com/') action = ActionChains(driver) for i in range(0, 50):     action.move_by_offset(i, i) action.perform() ```  ## Expected behavior  This should be fast. But takes a lot of time.  ## Environment  OS: Windows 10, x64 Browser: Chrome Browser version: Version 75.0.3770.80 (Official Build) (64-bit) Browser Driver version: ChromeDriver 75.0.3770.8 (681f24ea911fe754973dda2fdc6d2a2e159dd300-refs/branch-heads/3770@{#40}) Language Bindings version: Python 3.141.0","closed","D-chrome,","emily-d","2019-06-11T12:37:17Z","2022-01-26T00:09:49Z"
"","7062","Unable to set window size in FireFox","## 🐛 Unable to set window size in FireFox  When trying to set the Window size in using intern with geckodriver on FireFox, an UnknownCommand error is generated.  ## To Reproduce  Detailed steps to reproduce the behavior:  An HTML document is not needed. Used Intern test case:  ``` /* jshint browser: false, node: true, esnext: true */  const intern = require('intern').default; const { registerSuite } = intern.getInterface('object');  registerSuite('test', { 	tests: { 		'test': function() { 			return this.remote 				.setWindowSize(400, 800) 			; 		}, 	} }); ```  ## Expected behavior  FireFox should open, resize to 400x800 and close again.  ## Test script or set of commands reproducing this issue  Run this script using Intern 4.4.2  This returns the following error in Intern.  ```     UnknownCommand: [GET http://localhost:4444/wd/hub/session/6954a593-10a4-4052-9406-b671e625ccf8/window/rect] GET /session/6954a593-10a4-4052-9406-b671e625ccf8/window/rect     Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53'     System info: host: 'MVGUITESTER', ip: '192.168.129.174', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_201'     Driver info: driver.version: unknown       at Server.get @ ..\..\..\packages\tools\intern-4.4.2-mv0\node_modules\src\Server.ts:353:16       at runRequest @ ..\..\..\packages\tools\intern-4.4.2-mv0\node_modules\src\Session.ts:132:10       at common_1.Task.cancelled @ ..\..\..\packages\tools\intern-4.4.2-mv0\node_modules\src\Session.ts:164:42       at new e @ ..\..\..\packages\tools\intern-4.4.2-mv0\node_modules\@theintern\common\index.js:16:5076       at InitializedProxiedSession.Session._delegateToServer @ ..\..\..\packages\tools\intern-4.4.2-mv0\node_modules\src\Session.ts:110:11       at InitializedProxiedSession.Session.serverGet @ ..\..\..\packages\tools\intern-4.4.2-mv0\node_modules\src\Session.ts:170:16       at InitializedProxiedSession.Session.getWindowRect @ ..\..\..\packages\tools\intern-4.4.2-mv0\node_modules\src\Session.ts:811:16       at getWindowPosition_1 @ ..\..\..\packages\tools\intern-4.4.2-mv0\node_modules\src\Session.ts:918:13       at InitializedProxiedSession.Session.getWindowPosition @ ..\..\..\packages\tools\intern-4.4.2-mv0\node_modules\src\Session.ts:923:15       at setWindowSize_1 @ ..\..\..\packages\tools\intern-4.4.2-mv0\node_modules\src\Session.ts:708:13       at Command._callSessionMethod @ ..\..\..\packages\tools\intern-4.4.2-mv0\node_modules\src\Command.ts:733:11       at Command.setWindowSize @ ..\..\..\packages\tools\intern-4.4.2-mv0\node_modules\src\Command.ts:1030:34       at Test.test @ tests\functional\test.js:26:6       @ ..\..\..\packages\tools\intern-4.4.2-mv0\src\lib\Test.ts:263:51       @ ..\..\..\packages\tools\intern-4.4.2-mv0\node_modules\@theintern\common\index.js:16:7182       @ anonymous       at process._tickCallback @ internal\process\next_tick.js:160:7 ``` This returns the following selenium log  [selenium_out.txt](https://github.com/SeleniumHQ/selenium/files/3013186/selenium_out.txt)  This was originally reported with geckodriver as [#1528](https://github.com/mozilla/geckodriver/issues/1528)  ## Environment  OS: Windows 10 Browser: Firefox Browser version: 66.0 Browser Driver version: GeckoDriver 0.24.0 Language Bindings version: Node 9.3.0, JAVA 1.8.0_201  Selenium Grid version (if applicable): 3.141.59  Intern 4.4.2","closed","","GARMBoshouwers","2019-03-27T12:56:14Z","2019-08-14T17:09:49Z"
"","7209","Selenium v3 cannot bind to a port on the Public IP using ""host"" in an Openstack Environment","## 🐛 Problem A Win 10 Openstack VM cannot bind to any given port using the ""host"" parameter using selenium v3.141.59.   This does work on the same VM for selenium v2.53.1 -- something broke this in selenium v3.  ``` c:\selenium>java -jar selenium-v3.jar -role node -hub ""http://135.121.105.203:4445"" -nodeConfig nodeconfig-v3.json  14:01:15.982 INFO [GridLauncherV3.parse] - Selenium server version: 3.141.59, revision: e82be7d358 14:01:16.272 INFO [GridLauncherV3.lambda$buildLaunchers$7] - Launching a Selenium Grid node on port 5555 2019-05-15 14:01:16.824:INFO::main: Logging initialized @1496ms to org.seleniumhq.jetty9.util.log.StdErrLog 14:01:17.391 INFO [WebDriverServlet.] - Initialising WebDriverServlet 14:01:17.585 ERROR [BaseServer.start] - Port 5555 is busy, please choose a free port and specify it using -port option Exception in thread ""main"" java.lang.RuntimeException: java.net.BindException: Cannot assign requested address: bind         at org.openqa.selenium.grid.server.BaseServer.start(BaseServer.java:221)         at org.openqa.selenium.remote.server.SeleniumServer.boot(SeleniumServer.java:131)         at org.openqa.grid.internal.utils.SelfRegisteringRemote.startRemoteServer(SelfRegisteringRemote.java:119)         at org.openqa.grid.selenium.GridLauncherV3.lambda$buildLaunchers$7(GridLauncherV3.java:284)         at org.openqa.grid.selenium.GridLauncherV3.lambda$launch$0(GridLauncherV3.java:86)         at java.util.Optional.map(Unknown Source)         at org.openqa.grid.selenium.GridLauncherV3.launch(GridLauncherV3.java:86)         at org.openqa.grid.selenium.GridLauncherV3.main(GridLauncherV3.java:70) Caused by: java.net.BindException: Cannot assign requested address: bind         at sun.nio.ch.Net.bind0(Native Method)         at sun.nio.ch.Net.bind(Unknown Source)         at sun.nio.ch.Net.bind(Unknown Source)         at sun.nio.ch.ServerSocketChannelImpl.bind(Unknown Source)         at sun.nio.ch.ServerSocketAdaptor.bind(Unknown Source)         at org.seleniumhq.jetty9.server.ServerConnector.openAcceptChannel(ServerConnector.java:339)         at org.seleniumhq.jetty9.server.ServerConnector.open(ServerConnector.java:307)         at org.seleniumhq.jetty9.server.AbstractNetworkConnector.doStart(AbstractNetworkConnector.java:80)         at org.seleniumhq.jetty9.server.ServerConnector.doStart(ServerConnector.java:235)         at org.seleniumhq.jetty9.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)         at org.seleniumhq.jetty9.server.Server.doStart(Server.java:395)         at org.seleniumhq.jetty9.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)         at org.openqa.selenium.grid.server.BaseServer.start(BaseServer.java:202)         ... 7 more ```  The nodeConfig contains this configuration  ```""proxy"": ""org.openqa.grid.selenium.proxy.DefaultRemoteProxy"",     ""maxSession"": 3,     ""register"": true,     ""registerCycle"": 5000,     ""port"": 5555,     ""host"": ""135.228.149.0"",      ""cleanUpCycle"": 10000,     ""browserTimeout"": 300,     ""timeout"": 300 ```  ## Workaround Steps 1. Connect node to the hub using selenium 2.53.1 with host=, and port=5555 2. Kill selenium on node once registered to grid 3. While hub still has reference to node, restart selenium using v3.141.59 on port 5555 (**not as a node, and do not specify host**) 4. Hub will be able to reconnect to PUBLIC_IP:5555 and will keep it registered in /grid/console, showing the selenium version to be 3.141.59   ## Environment  OS: Windows 10 in Openstack Browser: N/A Browser version: N/A Browser Driver version: N/A Language Bindings version: Java 3.141.0 Selenium Grid version (if applicable): 3.141.59","closed","R-awaiting answer,","bonjonbovi87","2019-05-15T18:28:04Z","2021-09-05T10:20:20Z"
"","6908","Browser test fails because of cygwin internal path","## 🐛 Bug Report: Browser test fails because of cygwin internal path  When trying to run a browser test on firefox written in ruby (capybara, selenium webdriver), I get the following error: ``` Failures:    1) logging in is possible      Failure/Error: super(url)       Selenium::WebDriver::Error::SessionNotCreatedError:        Failed to start browser /firefox/firefox.exe: no such file or directory      # /home/bjanoska/.rvm/gems/ruby-2.5.3/gems/selenium-webdriver-3.11.0/lib/selenium/webdriver/remote/response.rb:69:in `assert_ok'      # /home/bjanoska/.rvm/gems/ruby-2.5.3/gems/selenium-webdriver-3.11.0/lib/selenium/webdriver/remote/response.rb:32:in `initialize'      # /home/bjanoska/.rvm/gems/ruby-2.5.3/gems/selenium-webdriver-3.11.0/lib/selenium/webdriver/remote/http/common.rb:81:in `new'      # /home/bjanoska/.rvm/gems/ruby-2.5.3/gems/selenium-webdriver-3.11.0/lib/selenium/webdriver/remote/http/common.rb:81:in `create_response'      # /home/bjanoska/.rvm/gems/ruby-2.5.3/gems/selenium-webdriver-3.11.0/lib/selenium/webdriver/remote/http/default.rb:104:in `request'      # /home/bjanoska/.rvm/gems/ruby-2.5.3/gems/selenium-webdriver-3.11.0/lib/selenium/webdriver/remote/http/common.rb:59:in `call'      # /home/bjanoska/.rvm/gems/ruby-2.5.3/gems/selenium-webdriver-3.11.0/lib/selenium/webdriver/remote/bridge.rb:164:in `execute'      # /home/bjanoska/.rvm/gems/ruby-2.5.3/gems/selenium-webdriver-3.11.0/lib/selenium/webdriver/remote/bridge.rb:97:in `create_session'      # /home/bjanoska/.rvm/gems/ruby-2.5.3/gems/selenium-webdriver-3.11.0/lib/selenium/webdriver/firefox/marionette/driver.rb:50:in `initialize'      # /home/bjanoska/.rvm/gems/ruby-2.5.3/gems/selenium-webdriver-3.11.0/lib/selenium/webdriver/firefox/driver.rb:31:in `new'      # /home/bjanoska/.rvm/gems/ruby-2.5.3/gems/selenium-webdriver-3.11.0/lib/selenium/webdriver/firefox/driver.rb:31:in `new'      # /home/bjanoska/.rvm/gems/ruby-2.5.3/gems/selenium-webdriver-3.11.0/lib/selenium/webdriver/common/driver.rb:52:in `for'      # /home/bjanoska/.rvm/gems/ruby-2.5.3/gems/selenium-webdriver-3.11.0/lib/selenium/webdriver.rb:85:in `for'      # /home/bjanoska/.rvm/gems/ruby-2.5.3/gems/capybara-2.18.0/lib/capybara/selenium/driver.rb:24:in `browser'      # /home/bjanoska/.rvm/gems/ruby-2.5.3/gems/capybara-2.18.0/lib/capybara/selenium/driver.rb:50:in `visit'      # /home/bjanoska/.rvm/gems/ruby-2.5.3/gems/capybara-2.18.0/lib/capybara/session.rb:274:in `visit'      # /home/bjanoska/.rvm/gems/ruby-2.5.3/gems/capybara-2.18.0/lib/capybara/dsl.rb:50:in `block (2 levels) in ' ```  The problem seems to be, that when selenium is trying to locate firefox.exe, it is using the cygwin relative path (/firefox/firefox.exe) instead of the absolute windows path (C:/cygwin64/firefox/firefox.exe). I'm assuming this would cause a problem with other browsers as well.   Since the code will not run firefox inside of the cygwin platform itself, but on windows, it needs to get the windows absolute path to kick off the browser.  #### Proposed solution:  https://github.com/SeleniumHQ/selenium/blob/master/rb/lib/selenium/webdriver/common/platform.rb line 124 in function `cygwin_path` ` ``` `cygpath #{flags.join ' '} ""#{path}""`.strip ``` be changed to  ``` `cygpath -d #{flags.join ' '} ""#{path}""\`.strip ```  ## To Reproduce  To reproduce, execute any browser test that is written in ruby and powered by selenium from the cygwin console. Test should fail with   ``` Selenium::WebDriver::Error::SessionNotCreatedError:        Failed to start browser : no such file or directory ```  Detailed steps to reproduce the behavior:  ## Expected behavior  Expecting the browser to open when running a browser test.  ## Test script or set of commands reproducing this issue  Sadly, I'm working with company code, so I can't paste examples  ## Environment  OS: Windows 10 Browser: Mozilla Firefox Browser version: 65.0 (64bit) Browser Driver version:  GeckoDriver 0.24 Language Bindings version: ruby 2.5.3p105 (2018-10-18 revision 65156) [x86_64-cygwin] Selenium Grid version (if applicable): -","closed","C-rb,","Grandmagic13","2019-02-01T15:35:59Z","2019-08-14T20:09:45Z"
"","7147","Selenium tests fail to run due to TestNG errors - duplicate of #7146  but I cannot reopen it","## 🐛 Bug Report - duplicate of #7146  but I cannot reopen it  A clear and concise description of what the bug is.  After Selenium upgrade to version 3.141.59, the tests fail to run with TestNG 16.4.3 on Jenkins v2.138.3 errors like: TestNGClassFinder: Warning: Can't link and determine methods of class.... TestNGClassFinder: Unable to read methods on class ... -unable to resolve class reference org/apache/http/HttpRequest Eclipse : when trying to run the tests from Eclipse 2019-03 , I get a message that either TestNG cannot find class in classpath or that No tests were found and nothing was run ## To Reproduce check screenshots  Detailed steps to reproduce the behavior:  ## Expected behavior  After Selenium upgrade to version 3.141.59, the tests are successfully run from Jenkins v2.138.3 as they used to run with lower Selenium version  ## Test script or set of commands reproducing this issue  check screenshots  ## Environment  OS: Windows 7 Browser: Internet Explorer, Chrome Browser version: Internet Explorer 11.0.9600.19002, Chrome 74.0.3729.108 Browser Driver version: IEWebDriver 3.14 for 32 bit Windows IE, ChromeDriver 74.0.3729.6 Language Bindings version: Java 11.0.2 Selenium Grid version (if applicable): 3.141.59 ![Java_class](https://user-images.githubusercontent.com/30794708/56847946-2e9aa200-68eb-11e9-854e-1b671b54a3b7.PNG) ![TestNG_error](https://user-images.githubusercontent.com/30794708/56847947-2e9aa200-68eb-11e9-8382-3509d4f92b8f.PNG)","closed","","hnestorova","2019-04-27T09:49:58Z","2019-08-14T10:10:00Z"
"","7200","Wrong element selected when trying to get parent element by tagName.","## 🐛 Bug Report When trying to get the parent element using element.findElement(By.xpath(""{xpathExpression}"")), method returns parent's sibling element. ## To Reproduce  * Go to 6pm.com * Filter any product ( for example hover ""Accessories"" and click on ""Oval"" ) * Select any input field in filters section. F. e.  `WebElement searchInput = driver.findElement(By.xpath(""//input[contains(@placeholder,'Search Color')]"")); ` * Select parent ""section element `WebElement parentSec = searchInput.findElement(By.xpath(""//ancestor::section"")); ` ## Expected behavior The first parent should be selected with tag ""section"", but actually selected first ""section"" element in HTML, which is sibling of searchInput's parent ""section"" element. P. S. Right section is selected when trying to find element by searching `WebElement searchResult = driver.findElement(By.xpath(""//input[contains(@placeholder,'Search Color')]//ancestor::section""));` ## Environment  OS: Windows 10 Browser: Chrome Browser version: 74.0.3729.131 Browser Driver version: ChromeDriver 74.0.3729.6 Java version: Java 8","closed","","David91","2019-05-12T08:21:21Z","2019-08-14T11:09:38Z"
"","7403","When running a WebDriven Firefox with a prepared profile, extensions get stopped after some seconds","## 🐛 Bug Report When running selenium with a prepared profile, extensions browser actions get disappeard after some seconds. They also stop working.  1. fx starts 2. all actions are visible and work 3. suddenly they disappear 4. they are still enabled in about:addons, but not working.  Workaround:  ```python def newTab(fx, url=""about:blank""): 	wnd = fx.execute(selenium.webdriver.common.action_chains.Command.NEW_WINDOW) 	handle = wnd[""value""][""handle""] 	fx.switch_to.window(handle) 	fx.get(url) # changes handle 	return fx.current_window_handle  def retoggleAllTheAddons(fx): 	""""""FF has some glitch - I don't see addons actions in the panel and it is unclear if they still work or broken"""""" 	initialHandlesCount = len(fx.window_handles) 	addonsTabHandle = newTab(fx, ""about:addons"") 	fx.execute_script("""""" 		let hb = document.getElementById(""html-view-browser""); 		let al = hb.contentWindow.window.document.getElementsByTagName(""addon-list"")[0]; 		let cards = al.getElementsByTagName(""addon-card""); 		for(let card of cards){ 			card.addon.disable(); 			card.addon.enable(); 		} 	"""""") 	if len(fx.window_handles) != 1: 		fx.switch_to.window(addonsTabHandle) 		fx.close() ```  It is a regression. I remember that some versions ago (I don't remember the dates and exact versions) everything was ok.  ## To Reproduce Start a fx with a profile with some extensions.  ## Expected behavior They should not be stopped.  ## Environment  OS: Win 7 Browser: Firefox Browser version: 69.0b5 Browser Driver version: geckodriver 0.24.0 Language Bindings version: python, 4.0.0a1","closed","","KOLANICH","2019-07-17T15:54:17Z","2019-08-16T21:09:34Z"
"","7852","Unable to run Chrome Driver in Windows 10. Shows Mixed Content Error","## 🐛 Bug Report When I try to run any https url e.g. https://api.whatsapp.com/send?phone=91XXXXXX&text=%20hi%20  Error I got: mixed content: the page at was loaded over https, but requested an insecure resource selenium chrome  ## To Reproduce When I try to run any https url e.g. https://api.whatsapp.com/send?phone=91XXXXXX&text=%20hi%20  Run Chrome Driver  OS: Windows 10: Browser: Chrome Browser version: Version 78.0.3904.108 (Official Build) (64-bit) Browser Driver version: 3.141.0 Language: C#","closed","","Shyam200408","2019-12-08T06:58:40Z","2020-01-07T19:47:27Z"
"","7489","Consecutive file uploads in firefox repeats previous uploads","## 🐛 Bug Report When doing consecutive uploads on firefox, the previous uploads are repeated;  ## To Reproduce Tested on selenium + python geckodriver version: 0.24 firefox versions: 61.0.1 and 68.0.1 (assuming issue would reproduce also on versions between these 2)  Detailed steps to reproduce the behavior: 1. Search for an input webelement of type file 2. Send keys to upload file1 3. Send keys to upload file2  ## Expected behavior  file1 and file2 are successfully uploaded one time  ## Actual behavior  file1 is uploaded two times file2 is uploaded one time  For each new upload, the previous uploaded files are uploaded again","closed","","marius-uncrop","2019-08-12T12:25:27Z","2019-09-20T18:09:35Z"
"","7529","Instance is null on proxy failure, yet window is open.","## 🐛 Bug Report When creating a instance of FirefoxDriver / ChromeDriver and proxy fails, it will throw a WebDriverException and null the variable. So you end up with a open browser window, without being able to close it.   ## To Reproduce  Detailed steps to reproduce the behavior:  1. Make a webdriver instance. 2. Catch the web driver exception. 3. Try closing the window. It will be null.  ## Expected behavior  It is expected to be able to atleast kill it so you dont end up with a ghost window, unkillable.  ## Test script or set of commands reproducing this issue  	System.setProperty(""webdriver.gecko.driver"", ""driver/geckodriver.exe""); 	try { 		FirefoxOptions firefoxOptions = new FirefoxOptions(); 		firefoxOptions.setBinary(binary); 		driver = new FirefoxDriver(firefoxOptions); 		 		Proxy proxy = new Proxy(); 		proxy.setAutodetect(false); 		proxy.setHttpProxy(proxyData); 		firefoxOptions.setProxy(selProxy); 	} catch(WebDriverException e) { 		e.printStackTrace(); 		if(driver != null) 			driver.quit(); 	} ## Environment  OS: Windows 10 Browser: Firefox (But happeneds to chrome as well) Browser version: 68.0.2 Browser Driver version: geckodriver v0.24.0 Language Bindings version: 1.8.0_221 Selenium Grid version (if applicable): 3.141.59","closed","C-java,","Kalkonen","2019-08-29T20:36:03Z","2020-01-13T22:49:48Z"
"","7174","Network conditions cannot modified for remote chrome browser with capybara","## 🐛 Bug Report We use a combination of docker-compose, rails and selenium to perform integration/system testing. The Capybara/rspec environment is supposed to send commands to a remote chrome container:  ```yaml chrome:     image: selenium/standalone-chrome     volumes:       - ./spec/fixtures/files:/app/spec/fixtures/files ```  This is how we setup the driver: ```ruby Capybara.register_driver :headless_chrome do |app|   capabilities = Selenium::WebDriver::Remote::Capabilities.chrome(       chromeOptions: {           args: %W[no-sandbox                    disable-dev-shm-usage                    no-default-browser-check                    start-maximized                    headless                    disable-gpu]}   )   Capybara::Selenium::Driver.new(app,                                  url: ""http://#{ENV['SELENIUM_HOST']}/wd/hub"",                                  browser: :chrome,                                  desired_capabilities: capabilities) end ```  This setup works completely fine.  Capybara connects to the hub and successfully runs our integration tests.   In order to enhance our tests, we need to make use of the `network_conditions` selenium endpoint to test the application in an offline setup. This seems not to be officially documented, but it can be achieved using this call:  ```ruby page.driver.browser.network_conditions = {offline: false} ```  Instead of returning a success, the call throws an exception: ``` *** Selenium::WebDriver::Error::WebDriverError Exception: unexpected response, code=404, content-type=""text/html""                          var json = Object.freeze('{""consoleLink"": ""\u002fwd\u002fhub"",""type"": ""Standalone"",""class"": ""org.openqa.grid.web.servlet.DisplayHelpHandler$DisplayHelpServletConfig"",""version"": ""3.141.59""}');                    Selenium  v.                   Whoops! The URL specified routes to this help page.                 For more information about Selenium  please see the       docs and/or visit the wiki.                Or perhaps you are looking for the Selenium  console.                        Happy Testing!          ```    ## To Reproduce  You can reproduce the issue by using a custom remote host in the Rails application.   ## Expected behavior The expected behavior is a successful call for   ```ruby page.driver.browser.network_conditions = {offline: false} ```  The call expects a json response from `POST http://:4444/wd/hub/session/e1fa22b0aaac7e5207d7bbe497673f57/chromium/network_conditions`  ``` {   sessionId: ""e1fa22b0aaac7e5207d7bbe497673f57"",   status: 13,   value: {     message: ""unknown error: network conditions must be set before it can be retrieved (Session info: chrome=74.0.3729.108) (Driver info: chromedriver=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}),platform=Linux 4.9.125-linuxkit x86_64)""   } } ```  I suspect the issue to be a problem of absolute and relative url paths in the chrome bride: https://github.com/SeleniumHQ/selenium/blob/master/rb/lib/selenium/webdriver/chrome/bridge.rb#L27  Other calls to the api (like for creating a new session) do not have a `/` appended. It seems that the call is going to `POST http://:4444/session/e1fa22b0aaac7e5207d7bbe497673f57/chromium/network_conditions`  ## Test script or set of commands reproducing this issue  See above  ## Environment  OS: Linux 4.9.125-linuxkit / Docker Browser: chrome Browser version: chromedriver=74.0.3729.6 Browser Driver version:  Language Bindings version: Ruby 2.5.2","closed","C-rb,","nikriek","2019-05-06T13:25:20Z","2019-08-14T11:09:40Z"
"","6899","[javascript] HttpClient: Cannot read property 'forEach' of undefined","## 🐛 Bug Report To make a API request through httpClient without `headers` object in request object results in error `Cannot read property 'forEach' of undefined`   ## To Reproduce  Import `httpClient` and  try making an api request with below kind of request object which should not have a headers object  ```javascript const localHttpClient = new HttpClient('http://localhost'); const postRequest = {     method: 'POST',     path: '/path/',     data: {         ""Key"": ""value""     } };  localHttpClient.send(postRequest) ```   ## Expected behavior  API request should have been executed without error `Cannot read property 'forEach' of undefined`  ## Fix Issue is fixed in this [pull request](https://github.com/SeleniumHQ/selenium/pull/6882)","closed","","Darth-koder007","2019-01-30T08:29:22Z","2019-08-14T22:09:54Z"
"","7570","C# FindElementsByTagName doesn't work with namespace prefixed tags","## 🐛 Bug Report The By.TagName and FindElementsByTag no longer work for namespace prefixed tags like the following:   This is because the search by tag name does a css search and css does not allow the "":"" character.  This is exacerbated by the inability to get the ChromeOptions.UseSpecCompliantProtocol setting to properly be set in the bindings; it now always defaults to true with ChromeDriver versions greater than v74.  see: https://bugs.chromium.org/p/chromedriver/issues/detail?id=2952 for additional detail","closed","C-dotnet,","csjturbine","2019-09-16T18:24:42Z","2021-09-05T08:31:32Z"
"","7275","Test run on remote IE node connected to grid is failing with ""No active session with ID""","## 🐛 Bug Report Test run against IE node, connected to Grid fails **randomly** with Session terminated due to BROWSER_TIMEOUT or SO_TIMEOUT  Sometimes it fails on first test, sometimes it fails after several tests.  **Following error is observed in selenium log:** `org.openqa.selenium.NoSuchSessionException: No active session with ID 063e8685-acce-4d00-bf17-8eb707f038cd Build info: version: 'unknown', revision: 'unknown', time: 'unknown' System info: host: 'UKC9VM0005574', ip: '10.185.139.53', os.name: 'Windows Server 2016', os.arch: 'x86', os.version: '10.0', java.version: '1.8.0_211' Driver info: org.openqa.selenium.remote.RemoteWebDriver Capabilities {acceptInsecureCerts: false, browserName: internet explorer, browserVersion: 11, javascriptEnabled: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:ieOptions: {browserAttachTimeout: 0, elementScrollBehavior: 0, enablePersistentHover: false, ie.browserCommandLineSwitches: , ie.ensureCleanSession: true, ie.fileUploadDialogTimeout: 3000, ie.forceCreateProcessApi: false, ignoreProtectedModeSettings: true, ignoreZoomSetting: true, initialBrowserUrl: http://localhost:1033/, nativeEvents: true, requireWindowFocus: true}, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webdriver.remote.sessionid: 063e8685-acce-4d00-bf17-8eb...} Session ID: 063e8685-acce-4d00-bf17-8eb707f038cd *** Element info: {Using=id, value=username}`  `org.openqa.selenium.WebDriverException: Session [063e8685-acce-4d00-bf17-8eb707f038cd] was terminated due to BROWSER_TIMEOUT`  `org.openqa.selenium.WebDriverException: Session [aef91cca-3458-481f-b874-7af1d479f6c3] was terminated due to SO_TIMEOUT`   ## Configuration **I use following command to start selenium-server-standalone:** `""C:\Program Files (x86)\Java\jdk1.8.0_211\bin\java.exe"" -jar ""C:\Program Files (x86)\Selenium\grid\selenium-server-standalone.jar"" -role node -hub http://localhost:4444/grid/register/ -port 51622 -browserTimeout 300 -timeout 240 -debug -browser browserName=""internet explorer"",version=11.2906,platform=windows,maxInstances=5,maxSession=5`  **Remote driver capabilities** ``` BrowserType.IE: 	capability = new InternetExplorerOptions(); 	capability.setCapability(""requireWindowFocus"", true); 	capability.setCapability(""ignoreZoomSetting"", true); 	capability.setCapability(InternetExplorerDriver.INTRODUCE_FLAKINESS_BY_IGNORING_SECURITY_DOMAINS, true); 	capability.setCapability(CapabilityType.ACCEPT_SSL_CERTS, true); 	capability.setCapability(InternetExplorerDriver.IE_ENSURE_CLEAN_SESSION, true); 	break; ```       ## Environment  OS - node: Windows 10, Windows Server 2016 OS - grid: Windows Server 2016, Cent OS 7 Browser: IE 11 Browser version: IE 11 (32 and 64 bit) Browser Driver version: IEDriver 3.141.59 (32 and 64 bit) Java: 1.8.0_211 (32 and 64 bit) Selenium Grid version (if applicable): 3.141.59  ## NOTE  - NOT reproducible with Chrome-driver - NOT reproducible with local IE-driver - Reproduced even when IE-node and Hub are running on same Windows Server 2016","closed","R-awaiting answer,","mgrozdeva","2019-06-10T16:08:06Z","2019-08-14T07:10:00Z"
"","7626","Selenium-webdriver js Bindings doesn't print all stack trace on error","## 🐛 Bug Report Selenium-webdriver js bindings doesn't print all stack trace on error  ## To Reproduce ``` (async ()=>{     try {         const driver = new Builder().forBrowser('chrome').build();         await driver.get('https://www.google.com/');         await driver.findElement(By.css('nonexistent'));     } catch (e) {         console.log(e.stack)     } })(); ``` ## Expected behavior  Error stack points at line ```await driver.findElement(By.css('nonexistent'));```  it worked well in version 3.x.x  ## Environment  OS: Windows 10 Browser: Chrome Browser version: 77.0.3865.90 Browser Driver version: ChromeDriver 77 Language Bindings version: Node js 4.0.0-alpha.5","closed","C-nodejs,","niyarlatotep","2019-10-01T14:46:29Z","2021-12-06T00:07:03Z"
"","7093","Selenium WebDriver typing very slow(one by one character) in text field on IE browser in grid node","## 🐛 Bug Report Selenium WebDriver typing very slow(one by one character) in text field on IE browser in grid node   issue: .The text are typing very slow in text field for IE browser in GRID node(both 32 bit and 64 bit).It is typing one by one character .So getting timeOut error. It is running and typing text fast in Local machine. It was working fine for 3.12 earlier . Due to IE version update it is not working .   ## Environment  OS: Windows 10(1803 version) Browser: Internet explorer Browser version: 11.648.17134.0 Browser Driver version: 3.14.0  Language Bindings version: : Java 3.141.59  Selenium Grid version: : 3.141.59,","closed","D-IE,","Elakkiyaab","2019-04-09T12:02:06Z","2019-08-14T07:09:59Z"
"","7417","Selenium Webdriver fails to open chrome browser  in C#","## 🐛 Bug Report Selenium Webdriver fails to open chrome browser  in C#   ## To Reproduce Run the below test script using 'dotnet test' in Visual Studio Code  ## Expected behavior  Open new chrome browser  ## Test script or set of commands reproducing this issue using System; using OpenQA.Selenium; using OpenQA.Selenium.Chrome; using NUnit.Framework; using SeleniumExtras.PageObjects;  namespace NAS {     [TestFixture]     class Program     {         public static IWebDriver driver;          [OneTimeSetUp]     		public void startBrowser()         {             //System.Environment.SetEnvironmentVariable(""webdriver.chrome.driver"",""C:\\Program Files\\Selenium"");             ChromeOptions opt = new ChromeOptions();             opt.BinaryLocation = @""C:\ProgramData\Microsoft\AppV\Client\Integration\520B8677-106E-430B-8927-6F9261C56329\Root\VFS\ProgramFilesX86\Google\Chrome\Application\chrome.exe"";                   driver = new ChromeDriver(@""C:\Progra~1\Selenium"", opt);                          driver.Navigate().GoToUrl(""http://www.goto.com"");                         //driver.Manage().Window.Maximize();         }          [Test] 		public void testLogin()         {             Console.WriteLine(""test running.."");             Console.WriteLine(""test"");                 }          [OneTimeTearDown] 		public void closeBrowser()         {             //driver.Quit();         }      } }  ## Environment  OS: Windows 10 Browser: Google Chrome Browser version: Version 74.0.3729.131 (Official Build) (64-bit) Browser Driver version: ChromeDriver 74.0.3729.6 Language Bindings version: C#  ## Test Output Starting test execution, please wait... SetUp failed for test fixture NAS.Program OpenQA.Selenium.WebDriverException : unknown error: Chrome failed to start: crashed   (unknown error: DevToolsActivePort file doesn't exist)   (The process started from chrome location C:\ProgramData\Microsoft\AppV\Client\Integration\520B8677-106E-430B-8927-6F9261C56329\Root\VFS\ProgramFilesX86\Google\Chrome\Application\chrome.exe is no longer running, so ChromeDriver is assuming that Chrome has crashed.)   (Driver info: chromedriver=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}),platform=Windows NT 10.0.14393 x86_64)    at OpenQA.Selenium.Remote.RemoteWebDriver.UnpackAndThrowOnError(Response errorResponse)    at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)    at OpenQA.Selenium.Remote.RemoteWebDriver.StartSession(ICapabilities desiredCapabilities)    at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(ICommandExecutor commandExecutor, ICapabilities desiredCapabilities)    at OpenQA.Selenium.Chrome.ChromeDriver..ctor(ChromeDriverService service, ChromeOptions options, TimeSpan commandTimeout)    at NAS.Program.startBrowser() in C:\NAS\Program.cs:line 28 Failed   testLogin Error Message:  OneTimeSetUp: OpenQA.Selenium.WebDriverException : unknown error: Chrome failed to start: crashed   (unknown error: DevToolsActivePort file doesn't exist)   (The process started from chrome location C:\ProgramData\Microsoft\AppV\Client\Integration\520B8677-106E-430B-8927-6F9261C56329\Root\VFS\ProgramFilesX86\Google\Chrome\Application\chrome.exe is no longer running, so ChromeDriver is assuming that Chrome has crashed.)   (Driver info: chromedriver=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}),platform=Windows NT 10.0.14393 x86_64)   Total tests: 1. Passed: 0. Failed: 1. Skipped: 0. Test Run Failed. Test execution time: 8.4633 Seconds","closed","","kshigli","2019-07-21T22:18:55Z","2019-10-01T19:09:39Z"
"","7097","Random permission problem when trying to obtain a free port","## 🐛 Bug Report Selenium tests fail randomly with ""listen EACCES: permission denied 0.0.0.0:54347"" (port number varies). This is quite infrequent, roughly 1% of the time.  ## To Reproduce Run any tests multiple times over and over again on Windows with JS bindings. Sorry!  ## Expected behavior  IMHO this permission problem should not be visible to user unless it's persistent.  This can be fixed by modifying javascript/node/selenium-webdriver/net/portprober.js#152 to include a check for EACCES: `if (e.code === 'EADDRINUSE' || e.code === 'EACCES') {`. Maybe error message in line 184 should include a note about possible permission problem.  With that fix (and some logging) I was able to see that on the second try a free port was obtained.  ## Environment  OS: Windows 10, 1809, Build 17763.379 Browser: Chrome Browser version: 73.0.3683.75 Browser Driver version: ChromeDriver 2.46.0 Language Bindings version: selenium-webdriver 4.0.0-alpha.1 Test runner: Jest 23.6.0","closed","C-nodejs,","tapioko","2019-04-12T09:38:50Z","2019-11-03T09:07:43Z"
"","7723","Keys.chord(Keys.CONTROL,Keys.SHIFT,""N"") is not working","## 🐛 Bug Report OS: windows 10 Selenium Version: 3.141.59, IntelliJ 2018.2.5 Browser: Chrome Browser Version: Version 78.0.3904.70 (64bit) Chromedriver Version: 78.0.3904.70  Expected Behavior Key.chord(Keys.CONTROl, Keys.SHIFT,""N"") should launch incognito window for current running chrome instance I tried with webelement.sendkeys(Keys.chord(Keys.CONTROL,Keys.SHIFT,""N"")) and also tried with  Actions actions = new Actions(driver); actions.sendKeys(Keys.chord(Keys.CONTROL, Keys.SHIFT, ""N"")).build().perform();  Actual Behavior it does nothing, no error in log Same happening for both Chrome and Firefox  Steps to reproduce: System.setProperty(""webdriver.chrome.driver"", ""./src/main/resources/chromedriver.exe""); Webdriver driver = new ChromeDriver(); driver.get(""https://www.google.com/"");  driver.findElement(By.xpath(""//body"")).sendKeys(Keys.chord(Keys.CONTROL,Keys.SHIFT,""N""));","closed","","VenkataSaiAnnam","2019-10-30T07:53:03Z","2019-11-29T08:08:37Z"
"","7380","Unable to set cookies for domain names started from dot "".my.domain.com""","## 🐛 Bug Report It is not possible to set the cookies for domains like "".my.domain.com"". When we set domain="".my.domain.com"", selenium saves it like ""my.domain.com"". And we are loosing ""."" before the domain name, and it can affect authorization on some websites.  ## Steps To Reproduce  1) Open a browser with selenium and navigate to the website google.com 2) Set cookies with JS:       cmd = 'document.cookie=""username=testUser; path=/; domain=.google.com;"";'     driver.execute_script(cmd)  3) Get all cookies from the browser:      print(driver.get_cookies())   ## Expected Behavior Selenium will save and return the cookies for domain "".google.com""  ## Actual Behaviour  Selenium saves and returns cookies for domain ""google.com"", without a dot at the beginning of the domain name.  ## Environment  OS: Linux Browser: Chrome 75 Browser version: 75 Browser Driver version: PyTest + selenium-1.16.0 Language Bindings version: Python 3.5.3","closed","","TimurNurlygayanov","2019-07-09T06:09:18Z","2019-08-14T06:09:46Z"
"","7630","Change chromedriver download links from Google Sites to actual domain link?","## 🐛 Bug Report In many places in the code, both in comments and in error messages, links are made to https://sites.google.com/a/chromium.org/chromedriver. It seems as though it would be more sensible to link to the actual Chromium website for this at https://chromedriver.chromium.org/, in case the chromedriver host changes and the URL is no longer valid. **I would be more than happy to fix and PR this but I want to check that it wouldn't be better to keep it as it is.**  ## To Reproduce n/a  ## Expected behavior Links should be made to https://chromedriver.chromium.org/, rather than https://sites.google.com/a/chromium.org/chromedriver  ## Test script or set of commands reproducing this issue https://github.com/SeleniumHQ/selenium/search?q=sites.google.com&unscoped_q=sites.google.com  ## Environment n/a","closed","","pbeart","2019-10-01T17:55:59Z","2019-11-02T19:07:43Z"
"","7479","IEDriverServer should ignore 'unknown extension capability'.","## 🐛 Bug Report IEDriverServer should ignore 'unknown extension capability' and not reject them if provided. This behaviour would match ChromeDriver and would still be complaint with w3c webdriver specifications.  ## To Reproduce I'm using the [Jenkins Selenium Plugin](https://wiki.jenkins.io/display/JENKINS/Selenium+Plugin) that creates a Selenium Grid with custom capabilities  implemented in their own [JenkinsCapabilityMatcher](https://github.com/jenkinsci/selenium-plugin/blob/master/src/main/java/hudson/plugins/selenium/JenkinsCapabilityMatcher.java) with `jenkins:label` and `jenkins:nodeName` capabilities to direct a newSession request to a specific node.  Attached [replication code](https://github.com/SeleniumHQ/selenium/files/3479608/SeleniumBug.java.txt) triggers the issue with a local IEDriverServer.  ### Expected/Actual Behavior When I sent a remote web driver request to the grid with desired capabilities `jenkins:label` it routes that request to the correct selenium grid node however the IEDriverServer on that node fails to start IE. * Expect: IE Driver to ignore unknown/unhandled capabilities. (same behaviour as ChromeDriver) * Actual: Sending a desired extension capability causes an error:   ```   Exception in thread ""main"" org.openqa.selenium.SessionNotCreatedException: No matching capability sets found.   Unable to match capability set 0: jenkins:label is an unknown extension capability for IE   ```  ### Environment OS: Windows 8.1 Selenium Version: selenium-java latest (3.141.59) IEDriverServer Version(s) - Win32 3.14.0 (and prerelease 3.141.59.3) Browser: Internet Explorer Browser Version: 11.0.9600.19356  ## Analysis Trying different values for the capablities  * :heavy_check_mark: IEDriverServer doesn't fail with unknown capabilities (eg 'foo')  * :heavy_check_mark: IEDriverServer doesn't fail with test extension capabilities (eg 'test:foo')    *this appears to be a special case in the code, but indicates that the unrecognised extension capabilities won't cause and issue* * :x: IEDriverServer does fail with unknown extension capabilities (eg 'foo:bar') * :information_source: Same code doesn't fail with other drivers (eg Chrome) using both unknown capabilities and unknown extension capabilities.  As far as I can tell the w3c specification should allow unmatched extension capabilities to succeed.  #### Matching capabilities  w3c specification for [matching](https://w3c.github.io/webdriver/#dfn-matching-capabilities) includes wording to suggest endpoint node can Optionally include extension capabilities, and if the extension capability does not match it is not a failure.  > When matching capabilities with JSON Object argument capabilities, an endpoint node must take the following steps: > ... > 2. Optionally add extension capabilities as entries to matched capabilities. The values of these may be elided, and *there is no requirement that all extension capabilities be added.* > ... > 3. For each name and value corresponding to capability’s own properties: >   1. Run the substeps of the first matching name: >      ... >      Otherwise If name is the key of an extension capability, let value be the result of trying implementation-specific steps to match on name with value. *If the match is not successful, return success with data null.*  #### Validate Capabilities  Note: The [NewSessionCommandHandler::ValidateCapabilities](https://github.com/SeleniumHQ/selenium/blob/selenium-3.141.59/cpp/iedriver/CommandHandlers/NewSessionCommandHandler.cpp#L932) already correctly allows other extension capability to pass through.  See specification for [validating capiblities](https://w3c.github.io/webdriver/#dfn-validate-capabilities) > name is the key of an extension capability > Let deserialized be the result of trying to deserialize value in an implementation-specific way.  ```cpp if (capability_name.find("":"") != std::string::npos) {   LOG(DEBUG)","closed","I-stale,","JonathanHallKJR","2019-08-08T02:47:43Z","2022-07-25T00:12:32Z"
"","6870","Python driver.quit() throwing BadStatusLine error","## 🐛 Bug Report I'm using Selenium with Python and Chrome. When I'm calling driver.quit() the following error occurs: https://gist.github.com/bioneyez/45fa305a0dda2d2b97511223b8e8872d Here is the chromedriver log I got:  [qc1.log](https://github.com/SeleniumHQ/selenium/files/2782599/qc1.log)  ## To Reproduce Simple example code: https://gist.github.com/bioneyez/34cfa8290b80ed2dbfd3e277dc3e5898  ## Expected behavior Chrome opens google, then closes without any errors.  ## Environment  OS: Windows 10 Browser: Chrome Browser version: 71.0.3578.98 Browser Driver version: Chromedriver 2.45.615291 Language Bindings version: Python 2.7.12 Selenium: 3.141.0","closed","C-py,","bioneyez","2019-01-22T11:49:47Z","2020-04-25T08:18:35Z"
"","7269","Chrome custom profile - cannot propely logout","## 🐛 Bug Report I'm using custom profile for Chrome in my tests, and in one test suite i have to logout from app, quit browser and then run following tests which starts with logging into app. When I log into app, i recieve a token (that gives me permission to access the app) which is stored in localStorage. After logout token is set to null. The problem is - when i run following test that starts with opening the login site  (or just simply re-run the previous one, which also starts with logging in app), it turns out that... i am already logged in. What is more, the token i've mentioned at the beggining is set to value from previous session while it should be null after logout.  ## To Reproduce  Detailed steps to reproduce the behavior: 1. Prepare script that loggs into app, does some stuff and logout. 2. Run the script for the first time 3. Check result - script should log in, test sth and logout without any issues 4. Re-run the same test 5. Bug appears - after driver.get('login_page_url'), im already logged in  ## Expected behavior  After reruning the test that loggs out of app, I expect to be actually logged out when i start a new session.  ## Test script or set of commands reproducing this issue  Simplified code script: ```driver = webdriver.Chrome() driver.implicity_wait(10) driver.maximize_window() login_page_url = ""https://app.pushpushgo.com/login"" driver.get(login_page_url) print(driver.execute_script(""return window.localStorage.getItem('__pushpushgo')""))  # This is where token is stored. It should return null now.  lp = LoginPage(driver)  # page with locators and methods for login/logout lp.login('email', 'password')  # use method print(driver.execute_script(""return window.localStorage.getItem('__pushpushgo')""))  # Token value should be set # Skip tests, because its all about login/logout lp.logout() print(driver.execute_script(""return window.localStorage.getItem('__pushpushgo')""))  # Token should be null again ```  Print outputs after first run: 1 print - token: null 2 print - token: ""value for current session"" 3 print - token: null  After second run: 1 print - token: ""value from previous session"" Im already logged in, code fails  ## Environment  OS: Windows 10 Browser: Chrome Browser version: 75.0.3770.80 Browser Driver version: ChromeDriver 75.0.3770.8 Language Bindings version: Python 3.7.1  Selenium Grid version (if applicable): 3.141.0","closed","D-chrome,","amarose","2019-06-07T08:41:28Z","2020-05-20T18:57:30Z"
"","7577","driver.page_source hangs after running driver.switch_to.window","## 🐛 Bug Report I updated from ChromeDriver 76 to ChromeDriver 77.  Now, selenium hangs on the first driver command after switching to a new window with switch_to.window(). The command that runs after switch_to.window doesn't have to be driver.page_source (I just used page_source as an example in the test script). The test hangs in the same way if you use driver.title, or driver.get_screenshot_as_png() instead.  ## To Reproduce    Detailed steps to reproduce the behavior:  Selenium test script: ``` import time import sys from selenium import webdriver from selenium.webdriver.common.by import By from selenium.webdriver.common.desired_capabilities import DesiredCapabilities from selenium.webdriver.support import expected_conditions as EC from selenium.webdriver.support.ui import WebDriverWait   def test_switch_to() -> None:     options = webdriver.ChromeOptions()     options.add_argument('--headless')     options.add_argument('--no-sandbox')      driver = webdriver.Chrome(options=options, desired_capabilities=DesiredCapabilities.CHROME)     driver.get('file:///bugreport/page.html')      print('opened page and clicking on link')     sys.stdout.flush()      link = WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.ID, 'NewWin')))     link.click()      print('clicked link and waiting for window handle')     sys.stdout.flush()      while len(driver.window_handles) != 2:         pass     new_tab = driver.window_handles[1]      print('handles available,')     sys.stdout.flush()     time.sleep(1)     print('switching')     sys.stdout.flush()      driver.switch_to.window(new_tab)      print('done switching,')     sys.stdout.flush()     time.sleep(1)     print('using driver,')     sys.stdout.flush()      driver.page_source     print('done test') ``` page.html: ``` Testing   open new window           function popupnewwin() { // simplified $.ajax(blah) to setTimeout()            setTimeout(function(){             myWindow=window.open('','');             myWindow.document.write('NewHi');             myWindow.focus();           }, 1000)         }     ```  ## Expected behavior  Run with `pytest -s test_switch_to.py --fulltrace` and the test passes.  Actual behavior: operator runs out of patience after a few minutes and hits ctrl-C.  ## Test script or set of commands reproducing this issue  Please see preformatted text in reproduce steps.   ## Environment  OS: Linux, Debian (Docker image FROM marketplace.gcr.io/google/debian9) Browser: Chrome Browser version: google-chrome-stable 77.0.3865.75-1 Browser Driver version: ChromeDriver 77.0.3865.40 Language Bindings version: Python 3.6.8, selenium 3.141.0 Selenium Grid version (if applicable):     Note: I just rebuilt my docker image with ChromeDriver 76.0.3809.68 (still using Chrome 77) and the test passed.","closed","","peiranguo","2019-09-18T15:21:38Z","2019-10-23T16:23:41Z"
"","7744","element is dragged correctly but not dropped at the specified target instead, displayed with the mouse pointer","## 🐛 Bug Report I am using Actions class for doing drag and drop via below methods: dragAndDrop(From, To); dragAndDropBy(From, X, Y); clickAndHold(From).moveToElement(To).build().perform();  Source element is dragged correctly but not dropped at the locations specified by ""To"" / ""X,Y""  Mac:Chrome: Dragged item is displayed along with the mouse pointer. Win: Chrome: Nothing is displayed (Drag / drop)   ## Video of script execution with audio, please check https://monosnap.com/file/28tj483msnno2lwMCZKZvvTdarGNEI  ## To Reproduce Please find below script code  ## Test script or set of commands reproducing this issue System.setProperty(""webdriver.chrome.driver"", ""driver78""); driver = new ChromeDriver(); driver.get(""https://www.seleniumeasy.com/test/drag-and-drop-demo.html""); From = driver.findElement(By.xpath(""//div[@id='todrag']//span[text()='Draggable 1']"")); To = driver.findElement(By.xpath(""//div[@id='mydropzone']""));  AppLibrary.sleep(3000); Actions act = new Actions(driver); act.dragAndDrop(From, To).build().perform();  AppLibrary.sleep(3000); Actions act1 = new Actions(driver); act1.clickAndHold(From).moveToElement(To).build().perform();   ## Environment  OS: Win, OS X Browser: Chrome 77-78, FireFox 70 Language Bindings version:","closed","","Nishant-Taksande","2019-11-05T12:32:50Z","2021-09-05T08:18:59Z"
"","6928","Instantiating a ChromeDriver doesn't work on .NET Core on Mac","## 🐛 Bug Report I am attempting to use Visual Studio for Mac and I can't instantiate a ChromeDriver, or any driver for that matter. I get this exception even though the driver is clearly in the directory:  _Test method Tests.UnitTest1.TestMethod1 threw exception:  OpenQA.Selenium.DriverServiceNotFoundException: The file /Users/nikolay/Downloads/demo-csharp-master/SauceExamples/Web.Tests/Tests/bin/Debug/netcoreapp2.1/chromedriver does not exist. The driver can be downloaded at http://chromedriver.storage.googleapis.com/index.html_   ## To Reproduce  Detailed steps to reproduce the behavior: 1. Download [this solution](https://github.com/nadvolod/dotnet-core) that has a simple test that tries to instantiate a ChromeDriver() 2. Try to run TestMethod1() on Mac, it doesn't work and we get error _Test method Tests.UnitTest1.TestMethod1 threw exception:  OpenQA.Selenium.DriverServiceNotFoundException_  ## Expected behavior  I tried the same code on Windows in Visual Studio and it worked just fine. I expect that this will start a Chrome browser and open the url. chromedriver.exe is here in my folder: http://prntscr.com/mjtnlu  ## Test script or set of commands reproducing this issue  https://github.com/nadvolod/dotnet-core  ## Environment  OS: MacOS Mojave Browser: Chrome Browser version: latest Browser Driver version: ChromeDriver 2.45.0 Language Bindings version: C# 3.141.0  Image of all versions: http://prntscr.com/mjtoeu","closed","","nadvolod","2019-02-12T00:45:24Z","2019-08-28T04:09:34Z"
"","7853","geckodriver executable needs to be in path","## 🐛 Bug Report https://stackoverflow.com/questions/40048940/geckodriver-executable-needs-to-be-in-path/40448974 Firefox - 70 gecko_driver - 0.26 python 3.7  ```Message: 'geckodriver' executable needs to be in PATH.``` There doesn't seem to be an issue when you downgrade to pip install selenium==2.53.6, but then i hate to miss on new features, for example headless does not work on 2.53, also you get errors like  ```selenium.common.exceptions.WebDriverException: Message: Can't load the profile. Profile Dir: /tmp/tmpjtz2dzvw If you specified a log_file in the FirefoxBinary constructor, check it for details.```","closed","","ikp4success","2019-12-08T12:23:14Z","2020-01-07T15:33:38Z"
"","7364","Available logs should not return an empty list when not supported","## 🐛 Bug Report https://github.com/SeleniumHQ/selenium/commit/1156fbc60277cb0a241809c022221541e118ab28 related to https://github.com/SeleniumHQ/selenium/issues/5842  This leads to hours spent trying to figure out why the list is empty; I realize that the goal was to prevent the null reference exception however the code verifies it is not supported and then hides this from the user by returning an empty list.  ## Expected behavior  A NotSupportedException is thrown instead https://docs.microsoft.com/en-us/dotnet/api/system.notsupportedexception?view=netframework-4.8  After all, what you are trying to do is not supported. This provides the user with the information they need to either work around it or remove the calls.","closed","I-stale,","BasHamer","2019-07-06T17:41:22Z","2021-12-04T00:06:37Z"
"","7616","Safari switch_to_window_handles not working in safari 13.0.1","## 🐛 Bug Report Getting webdriver exception at the below command.         driver.switch_to.window(handles) Configuration details: Selenium version = 3.141.0 Safari version = 13.0.1 MacOS version = mojave 10.14.6","closed","R-awaiting answer,","jagruthim","2019-09-28T19:08:49Z","2019-11-09T21:07:54Z"
"","7776","Remove ""prompts.tab_modal.enabled"" from Java's default Firefox preferences","## 🐛 Bug Report For the Java bindings the preference [prompts.tab_modal.enabled](https://github.com/SeleniumHQ/selenium/blob/8a0691f55df5868b518e0f53c3c90b6251607dd4/third_party/js/selenium/webdriver.json#L38) gets set to false. This should not be done anymore given that this is an unsupported mode in Firefox. For a very long time this preference already defaults to `true` in Firefox, and when disabling it as done here for the FirefoxProfile in Java unexpected side-effects can happen with geckodriver. See https://github.com/mozilla/geckodriver/issues/1623 as example.  @shs96c or @barancev could you both please have a look at it? I would kinda appreciate if we can get this removed. If you can't please let us know why exactly. Thanks.","closed","C-java,","whimboo","2019-11-12T14:48:01Z","2021-09-05T09:12:42Z"
"","7766","Using webdriver.get() twice yields not the same as using it only second time","## 🐛 Bug Report Consider the code:  from selenium import webdriver browser = webdriver.Chrome(executable_path=r'D:\chromedriver.exe') \# browser.get('https://www.flashscore.com/match/Wd0t1Cq9/#odds-comparison;1x2-odds;full-time') browser.get('https://www.flashscore.com/match/AmZv2fcT/#odds-comparison;1x2-odds;full-time') onextwo = browser.find_element_by_id('odds_1x2') print('\nOkay')  It outputs ""Okay"" with no exceptions thrown. However, uncommenting first ""get"" gives me the following mistake:  NoSuchElementException: Message: no such element: Unable to locate element: {""method"":""id"",""selector"":""odds_1x2""}   (Session info: chrome=78.0.3904.97)   (Driver info: chromedriver=78.0.3904.70 (edb9c9f3de0247fd912a77b7f6cae7447f6d3ad5-refs/branch-heads/3904@{#800}),platform=Windows NT 6.1.7601 SP1 x86_64) Second page seems to be loaded normally though.  Similar thing happens with Firefox and Ie drivers.   ## Environment  OS: Windows 7 64bit Browser version: 78.0.3904.97 Browser Driver version: 78.0.3904.70 Language Bindings version: Python 3.7.4   Selenium Grid version (if applicable):","closed","","BorelConstruction","2019-11-10T17:31:45Z","2019-12-17T16:32:07Z"
"","7574","Selenium::WebDriver::Error::WebDriverError (unable to connect to chromedriver 127.0.0.1:9515)","## 🐛 Bug Report Attempt to start Automaton test in chrome is showing error unable to connect to chromedriver 127.0.0.1:9515""  Detailed steps to reproduce the behaviour:  1.Installed ruby ""Ruby+Devkit 2.6.4-1 (x64)"" from the site https://rubyinstaller.org/downloads/ on the windows10 machine with 64-bit. 2.The output of ruby -v is perfect: C:\Users\smadadi>ruby -v ruby 2.6.4p104 (2019-08-28 revision 67798) [x64-mingw32] 3.Then installed the gems from the command line : gem install selenium-webdriver gem install selenium-cucumber  list of gems are available at the bottom 4. Downloaded the compatible chromedriver_win32.zip verion  77.0.3865.40 for the chrome browser version 77.0.3865.75 (Official Build) (64-bit)  5.Extracted the chromedriver file and placed in the path ""C:\Ruby26-x64\bin""  6.Opened command prompt ""chromedriver -v exits without giving any output and error.  7.Opened the command prompt and opened irb & given the below commands:  C:\Users\smadadi>irb irb(main):001:0> require 'selenium-webdriver' => true irb(main):002:0> driver = Selenium::WebDriver.for :chrome Traceback (most recent call last):        13: from C:/Ruby26-x64/bin/irb.cmd:31:in `'        12: from C:/Ruby26-x64/bin/irb.cmd:31:in `load'        11: from C:/Ruby26-x64/lib/ruby/gems/2.6.0/gems/irb-1.0.0/exe/irb:11:in `'        10: from (irb):2         9: from C:/Ruby26-x64/lib/ruby/gems/2.6.0/gems/selenium-webdriver-3.142.4/lib/selenium/webdriver.rb:88:in `for'         8: from C:/Ruby26-x64/lib/ruby/gems/2.6.0/gems/selenium-webdriver-3.142.4/lib/selenium/webdriver/common/driver.rb:46:in `for'         7: from C:/Ruby26-x64/lib/ruby/gems/2.6.0/gems/selenium-webdriver-3.142.4/lib/selenium/webdriver/common/driver.rb:46:in `new'         6: from C:/Ruby26-x64/lib/ruby/gems/2.6.0/gems/selenium-webdriver-3.142.4/lib/selenium/webdriver/chrome/driver.rb:40:in `initialize'         5: from C:/Ruby26-x64/lib/ruby/gems/2.6.0/gems/selenium-webdriver-3.142.4/lib/selenium/webdriver/common/driver.rb:303:in `service_url'         4: from C:/Ruby26-x64/lib/ruby/gems/2.6.0/gems/selenium-webdriver-3.142.4/lib/selenium/webdriver/common/service.rb:108:in `start'         3: from C:/Ruby26-x64/lib/ruby/gems/2.6.0/gems/selenium-webdriver-3.142.4/lib/selenium/webdriver/common/socket_lock.rb:41:in `locked'         2: from C:/Ruby26-x64/lib/ruby/gems/2.6.0/gems/selenium-webdriver-3.142.4/lib/selenium/webdriver/common/service.rb:111:in `block in start'         1: from C:/Ruby26-x64/lib/ruby/gems/2.6.0/gems/selenium-webdriver-3.142.4/lib/selenium/webdriver/common/service.rb:200:in `connect_until_stable' Selenium::WebDriver::Error::WebDriverError (unable to connect to chromedriver 127.0.0.1:9515)   ## Expected behavior  The command ""driver = Selenium::WebDriver.for :chrome"" should open the chrome window without above errors  ## Test script or set of commands reproducing this issue irb commands: require 'selenium-webdriver' driver = Selenium::WebDriver.for :chrome ## Environment  OS:  Windows 10 64 bit Browser:  Chrome Browser version: 77.0.3865.75 Browser Driver version:  ChromeDriver 77.0.3865.40 Language Bindings version:   ruby 2.6.4p104 (2019-08-28 revision 67798) [x64-mingw32] Selenium Grid version (if applicable):  selenium-cucumber (3.1.5) selenium-webdriver (3.142.4)    Please find the gem list and screenshot attached","closed","R-awaiting answer,","SnehaReddyM","2019-09-18T06:00:51Z","2019-10-19T08:23:35Z"
"","6914","IE Driver shift key confusion","## 🐛 Bug Report A string sent to a text input field will have the numbers or characters that are typed while holding shift and a number are transposed. For example `test@example.com` becomes `test2example.com` and `member10186@example.com` becomes `member!)!*^@example.com`  This only appears to happen when I attempt to enter text into the username field on a log-in screen at the beginning of my tests.   ## To Reproduce Cannot consistently reproduce. I'll update here if I get the OK to share video of the test.  ## Expected behavior  The string sent via sendKeys should be reflected accurately in the input field  ## Test script or set of commands reproducing this issue   ## Environment  OS: Windows 10 Browser: IE Browser version: 11.0 Browser Driver version: IE Driver 3.9.0 BrowserStack: 7.2","closed","D-IE,","kirk-clover","2019-02-06T02:53:35Z","2021-09-05T08:08:26Z"
"","7713","Cannot resolve Selenium Java Bindings artifacts as modules (JPMS) in JDK 11","## 🐛 Bug Report **UPDATE:** I just tried my reproducible in a Windows 10 VM with a fresh install of OpenJDK 11 (Red Hat build) and Maven 3.6.2 and I get the exact same issue. This doesn't seem to be a problem with my system and more so a compatibility issue with Java 11 JPMS and Selenium?  Firstly, this is going to sound like an issue with the IDE and tools I'm using but I'm only trying to illustrate my experience. Since the issue seems to be happening throughout all tools I'm assuming it's an issue with my system environment and install of Selenium Java bindings.  Whenever I add a `module-info.java` to my project (either handwritten or generated by IDE), my IDE and build tools are unable to resolve the Selenium dependencies as Java modules. When I require other library modules, e.g. Guice, I do not get module not found errors on those other libraries. When I remove my module-info.java, turning it into a standard Java application w/o JPMS I get no static analysis, compile time, or run time issues. Everything works.  Maven (at compile time), Eclipse, and VS Code (Java Extension Pack extensions enabled) all have issues resolving the Selenium artifacts as modules on my system. As a consequence I also get linter errors in my Java files. I've nuked my local maven repository and re-downloaded artifacts many times already, and I've ensured my environment variables point to the right JDK.  In my real project, I'm able to get Eclipse to run my application (but Maven doesn't compile) if I set my requires to ``` requires org.openqa.selenium.chrome; requires org.openqa.selenium.core; requires org.openqa.selenium.firefox; requires org.openqa.selenium.ie; requires org.openqa.selenium.remote; requires selenium.support; ``` and Maven compiles (but Eclipse won't run and I get linter errors) if I set my requires to: ``` requires selenium.chrome.driver; requires selenium.firefox.driver; requires selenium.ie.driver; requires selenium.remote.driver; requires selenium.api; requires selenium.support; ``` In both cases VS Code Java extensions just cannot resolve imports at all.  Removing require statements entirely results in the expected `type not accessible` errors when you have not defined a dependency in your module-info.java. For now, I can remove my module-info and just write my project as is but I'd really like to modularize it in the future.  To reproduce I've created a mini-project with a similar POM and app structure below.  ## To Reproduce  Tested on Linux (Fedora 30) & Windows 10: [https://github.com/bavibm/selenium-java-issue-reproducible](https://github.com/bavibm/selenium-java-issue-reproducible)  In this project, my issue is actually worse, Eclipse and Maven spit out errors no matter what my requires statements say.  ## Expected behavior  All the modules should be resolvable and I should be able to package and run my program.  ## Test script or set of commands reproducing this issue  ```terminal git clone https://github.com/bavibm/selenium-java-issue-reproducible cd selenium-java-issue-reproducible/selenium-issue mvn clean package ```  ## Environment  OS: Linux, Fedora 30 & Windows 10 Browser: not applicable, program works when I remove module-info.java Browser version: not applicable Browser Driver version: not applicable Language Bindings version: Java 3.14.59 and also tried it on 4.0.3-Alpha Selenium Grid version (if applicable): not applicable","closed","C-java,","bavibm","2019-10-24T20:58:10Z","2021-09-05T08:10:47Z"
"","6878","A socket ResourceWarning in Selenium Python WebDriver","## 🐛 Bug Report  You get a `ResourceWarning` for a socket from Selenium Python WebDriver.    ## To Reproduce    Save as ""resourcewarning.py"": ```python #!/usr/bin/env python3 import sys from selenium import webdriver   def main():     driver = webdriver.Firefox()     try:         driver.get(""https://www.google.com/"")     finally:         driver.quit()   if __name__ == ""__main__"":     sys.exit(main()) ```  And run it: ```cmd C:\>python -Wd -X tracemalloc=25 resourcewarning.py sys:1: ResourceWarning: unclosed  Object allocated at (most recent call last):   File ""resourcewarning.py"", lineno 15     sys.exit(main())   File ""resourcewarning.py"", lineno 7     driver = webdriver.Firefox()   File ""\lib\site-packages\selenium\webdriver\firefox\webdriver.py"", lineno 174     keep_alive=True)   File ""\lib\site-packages\selenium\webdriver\remote\webdriver.py"", lineno 157     self.start_session(capabilities, browser_profile)   File ""\lib\site-packages\selenium\webdriver\remote\webdriver.py"", lineno 252     response = self.execute(Command.NEW_SESSION, parameters)   File ""\lib\site-packages\selenium\webdriver\remote\webdriver.py"", lineno 319     response = self.command_executor.execute(driver_command, params)   File ""\lib\site-packages\selenium\webdriver\remote\remote_connection.py"", lineno 374     return self._request(command_info[0], url, body=data)   File ""\lib\site-packages\selenium\webdriver\remote\remote_connection.py"", lineno 397     resp = self._conn.request(method, url, body=body, headers=headers)   File ""\lib\site-packages\urllib3\request.py"", lineno 72     **urlopen_kw)   File ""\lib\site-packages\urllib3\request.py"", lineno 150     return self.urlopen(method, url, **extra_kw)   File ""\lib\site-packages\urllib3\poolmanager.py"", lineno 323     response = conn.urlopen(method, u.request_uri, **kw)   File ""\lib\site-packages\urllib3\connectionpool.py"", lineno 600     chunked=chunked)   File ""\lib\site-packages\urllib3\connectionpool.py"", lineno 354     conn.request(method, url, **httplib_request_kw)   File ""\python37\Lib\http\client.py"", lineno 1229     self._send_request(method, url, body, headers, encode_chunked)   File \python37\Lib\http\client.py"", lineno 1275     self.endheaders(body, encode_chunked=encode_chunked)   File ""\python37\Lib\http\client.py"", lineno 1224     self._send_output(message_body, encode_chunked=encode_chunked)   File ""\python37\Lib\http\client.py"", lineno 1016     self.send(msg)   File ""\python37\Lib\http\client.py"", lineno 956     self.connect()   File ""\lib\site-packages\urllib3\connection.py"", lineno 181     conn = self._new_conn()   File ""\lib\site-packages\urllib3\connection.py"", lineno 159     (self._dns_host, self.port), self.timeout, **extra_kw)   File ""\lib\site-packages\urllib3\util\connection.py"", lineno 61     sock = socket.socket(af, socktype, proto) ```  ## Expected behavior  I expect this script to exit with no output, but it spits out a `ResourceWarning`.  ## Analysis This is caused by not calling [`clear`](https://urllib3.readthedocs.io/en/latest/reference/index.html#urllib3.poolmanager.PoolManager.clear) on the [`urllib3.PoolManager`](https://urllib3.readthedocs.io/en/latest/reference/index.html#urllib3.poolmanager.PoolManager) created at: https://github.com/SeleniumHQ/selenium/blob/cac262f20d02cc216af2fe4fd9d6b7d32cf234cc/py/selenium/webdriver/remote/remote_connection.py#L140  ## Environment  OS: Windows 10.0.17763.253 x64 Browser: Firefox Browser version: 64.0.2 (64-bit) Browser Driver version: GeckoDriver 0.23.0 Language Bindings version: Python 3.141.0","closed","C-py,","segevfiner","2019-01-24T10:52:07Z","2019-09-07T05:09:35Z"
"","7361","HTTPonly cookies are invisible","## 🐛 Bug Report  With the function `get_cookies ()` no _HTTPonly_ cookies can be retrieved. I know that these will be blocked, but you can also use Python to get cookies in other ways, and I think the best options should be taken out of the program.  ### Possible solution The cookies are stored in a sqlite3 file from which it is possible to read these cookies and decrypten. _For example:_ ``` import sqlite3 conn = sqlite3.connect('selenium/Default/Cookies') c = conn.cursor() c.execute(""SELECT encrypted_value FROM 'cookies' WHERE name = 'httponlycookie'"") val = c.fetchall() ``` I know the value is still encrypted, but it's possible to decrypten it because the key is stored on the same device.  I hope someone knows better than me and can solve the problem with selenium to get _HTTPonly_ cookies.  ## Environment OS: Windows 10, OSX Browser: Chrome Browser version: 75.0.3770.100 Language Bindings version: Python 3.7","closed","D-chrome,","tomtactom","2019-07-05T13:05:00Z","2019-10-03T21:09:42Z"
"","7300","Performance log for Chrome doesn't work in 4.0.0-alpha.3","## 🐛 Bug Report  With Chrome 75/Chromedriver 75 and NodeJS Selenium 4.0.0-alpha.3 getting the Chrome performance log fails. I think it was introduced in https://github.com/SeleniumHQ/selenium/commit/8edc13bdf0e0ca081f5ee8cb1e822a71298cad26 together with the Chromedriver switch to have w3c compliant as default.  This works with Selenium 3.6.0  ## To Reproduce  Run the following code + use Chromedriver 75 in the same dir and have Chrome 75 installed. ``` const chrome = require('selenium-webdriver/chrome'); const { Builder, logging } = require('selenium-webdriver');  const options = new chrome.Options(); const logPrefs = new logging.Preferences(); logPrefs.setLevel(logging.Type.PERFORMANCE, logging.Level.ALL);  const perfLogConf = { enableNetwork: true, enablePage: true };  options.setPerfLoggingPrefs(perfLogConf); options.setLoggingPrefs(logPrefs);  const service = new chrome.ServiceBuilder()   .loggingTo('./chromedriver.log')   .enableVerboseLogging()   .build(); chrome.setDefaultService(service);  const driver = new Builder()   .forBrowser('chrome')   .setChromeOptions(options)   .build();  driver.get(   'https://seleniumhq.github.io/selenium/docs/api/javascript/module/selenium-webdriver/chrome_exports_Driver.html' ); ``` ## Expected behavior The code should not return any error.  It generates an error:  **InvalidArgumentError: invalid argument: perfLoggingPrefs specified, but performance logging was not enabled**. However the log is enabled.  Checking the Chromedriver log we can see that the loggingPrefs is filtered out in the ""always match part"" (since it's only w3c compliant fields).  ``` [1560795572.228][INFO]: Starting ChromeDriver 75.0.3770.90 (a6dcaf7e3ec6f70a194cc25e8149475c6590e025-refs/branch-heads/3770@{#1003}) [1560795572.228][INFO]: Please protect ports used by ChromeDriver and related test frameworks to prevent access by malicious code. [1560795572.251][INFO]: [8580073239e9346564a93f6dfcbd2cae] COMMAND InitSession {    ""capabilities"": {       ""alwaysMatch"": {          ""browserName"": ""chrome"",          ""goog:chromeOptions"": {             ""perfLoggingPrefs"": {                ""enableNetwork"": true,                ""enablePage"": true             }          }       }    },    ""desiredCapabilities"": {       ""browserName"": ""chrome"",       ""goog:chromeOptions"": {          ""perfLoggingPrefs"": {             ""enableNetwork"": true,             ""enablePage"": true          }       },       ""loggingPrefs"": {          ""performance"": ""ALL""       }    } } [1560795572.251][INFO]: [8580073239e9346564a93f6dfcbd2cae] RESPONSE InitSession ERROR invalid argument: perfLoggingPrefs specified, but performance logging was not enabled [1560795572.251][DEBUG]: Log type 'driver' lost 1 entries on destruction ```  Is this a Chromedriver error or Selenium or both? It works in 3.6.0 :)  ## Environment  OS: OSX Browser: Chrome  Browser version: 75 Browser Driver version: Chromedriver 75.0.3770.90 Language Bindings version: NodeJs 4.0.0-alpha.3","closed","D-chrome,","soulgalore","2019-06-17T18:40:13Z","2019-08-19T10:09:34Z"
"","7456","C# : Unable to switch to window in remotewebdriver using windowhandle : OpenQA.Selenium.WebDriverException: missing field `handle` at line 3 column 1","## 🐛 Bug Report  While trying to switch to window using windowhandles, I am seing exception as   OpenQA.Selenium.WebDriverException: missing field `handle` at line 3 column 1 Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:13:22.693Z' System info: host: 'SYS-LAPTOP-299', ip: 'aaaaaa', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_172' Driver info: driver.version: unknown Workd well if i use chromedriver instead of remotewebdriver Browser : chrome 76 Chromdriver 76 Selenium version 3.14.0  ## To Reproduce  ``` using System; using Microsoft.VisualStudio.TestTools.UnitTesting; using OpenQA.Selenium.Remote; using OpenQA.Selenium.Chrome; namespace Tests {     [TestClass]     public class UnitTest1     {         [TestMethod]         public void TestMethod1()         {             var cap = new ChromeOptions();             cap.AddArgument(""disable-popup-blocking"");             var wd = new RemoteWebDriver(new Uri(""http://localhost:4444/wd/hub""),cap);             wd.Url = ""https://www.google.com/"";             var handles = wd.WindowHandles;             foreach (var item in handles)             {                 var title=wd.SwitchTo().Window(item);//getting exception when this line executes             }         }         [TestMethod]         public void TestMethod2()         {             var wd = new ChromeDriver(@""D:\libs"");             wd.Url = ""https://www.google.com/"";             var handles = wd.WindowHandles;             foreach (var item in handles)             {                 var title = wd.SwitchTo().Window(item).Title;             }         }     } }  ``` TestMethod1->fails with above exception TestMethod2->passes  ## Environment  OS: Windows 10 Browser: Chrome Browser version: 76 Browser Driver version:76 Language Bindings version: C# 3.11  Selenium Grid version (if applicable): 3.14.0","closed","D-chrome,","saiparth","2019-08-01T11:28:14Z","2021-09-05T09:36:35Z"
"","7271","Chrome 74 hangs when passing Chrome Extension","## 🐛 Bug Report  While executing the test on Chrome 74 the following exception is thrown-  `timeout (Session info: chrome=74.0.3729.131) (Driver info: chromedriver=74.0.3729.6`  The same test works on Chrome 73 and lower browsers as expected.  ## To Reproduce :recycle:  1. Start the Selenium JAR in Standalone mode 2. Provide Chrome Extension in the ChromeOptions 3. Run the test on Chrome 74  ## Expected behavior :eight_spoked_asterisk:  The Chrome browser should open the URL and should NOT throw the timeout exception.  ## Test script or set of commands reproducing this issue :cd:  **GIST to replicate the issue-** https://gist.github.com/ckzgraphics/660fbc0b086b504fd2ba3a7059f84f8a  ## Environment  **OS-** Windows 10 **Browser-** Chrome **Browser version-** 74 **Browser Driver version-** 74.0.3729.108 **Language Bindings version-** Java 3.14.0 **Selenium Grid version-** 3.14.0  ## Failed Session | Chrome 74 | :sos:  **Session ID-** https://automate.browserstack.com/builds/dc03f2ef4188580b1aecf0ae6ec06dbded367de4/sessions/1d7fdd92f1e81e2f8b9e6bfa4f020cb8ee4f866b?auth_token=b252c140d27b977073a127fe950dc51cd0796aeaa1680d601ae6b75e340795ee **Selenium Logs-** https://gist.github.com/ckzgraphics/953d8cfea127c8520d9479b9490873f9 **Video Logs-** https://drive.google.com/file/d/1vAfwYELfzwWRCkYOmsGeKxn514DpEwH9/view?usp=sharing  :movie_camera:  ## Passed Session | Chrome 73 | :white_check_mark:  **Session ID-** https://automate.browserstack.com/builds/dc03f2ef4188580b1aecf0ae6ec06dbded367de4/sessions/6f25762dfe045cd3b83fc9f8124aa37a98897021?auth_token=7de9c50464f82d89d359635fae3a9befc71950d3692e7460b9eb084e97406bdb **Selenium Logs-** https://gist.github.com/ckzgraphics/790dec479e3dbd6d0ac39d9a8070b938 **Video Logs-** https://drive.google.com/file/d/1GnLiZXr-cBBmKr2k2msd4V0fwoOaq2Lz/view?usp=sharing  :movie_camera:","closed","","ckzgraphics","2019-06-07T17:12:14Z","2019-08-14T09:09:40Z"
"","6975","Command getLocation throwing Null Pointer Exception [Safari 12]","## 🐛 Bug Report  While executing the getLocation command on Safari 12 OS X Mojave, **java.lang.NullPointerException** is thrown.  **Exception-**  ``` Exception in thread ""main"" java.lang.NullPointerException 	at org.openqa.selenium.remote.RemoteWebElement.getLocation(RemoteWebElement.java:331) ```  ## To Reproduce  1. Create Safari driver instance 2. Open URL 3. Find an element 4. Execute getLocation command  ## Expected behavior  Point object shold be returned (for step 4) and Null pointer exception should not thrown.  ## Test script or set of commands reproducing this issue  GIST =>  [Safari_getLocation_Test.java](https://gist.github.com/krish63/9add9cc119bf106ca5c4bc7846a8a5fb)  ## Environment  OS: MacOS Mojave 10.14.3 (Darwin 18.2.0) Browser: Safari Browser version: 12.0.3 (14606.4.5) Java Verison: Java v1.8 Selenium-Java Binding Version: Java 3.14","closed","","krish63","2019-02-27T11:42:17Z","2019-08-14T17:09:48Z"
"","7314","Deprecation warning on `driver.switch_to.alert.text` call","## 🐛 Bug Report  While calling `driver.switch_to.alert.text` on page without alert - there will be deprecation warning about `Selenium::WebDriver::Error::NoAlertPresentError`   ## To Reproduce 1. Create test.rb ``` require 'selenium-webdriver' driver = Selenium::WebDriver.for :chrome driver.navigate.to('https://google.com') driver.switch_to.alert.text ```  2. Run `ruby test.rb`  Outputs  ``` 2019-06-21 15:16:49 WARN Selenium [DEPRECATION] Selenium::WebDriver::Error::NoAlertPresentError is deprecated. Use Selenium::WebDriver::Error::NoSuchAlertError (ensure the driver supports W3C WebDriver specification) instead. ``` But `NoAlertPresentError` was never used in my code, so I don't think deprecation warning should be shown  ## Environment  OS: Ubuntu 18.04 Browser: Chrome Browser version: 75.0.3770.100 Browser Driver version: chromedriver 75.0.3770.8 Language Bindings version: Ruby 'selenium-webdriver', '3.142.3'","closed","","ShockwaveNN","2019-06-21T12:29:12Z","2019-08-14T07:09:51Z"
"","7270","driver.manage.logs.get(:browser) fails on chromedriver 75.0.3770.8","## 🐛 Bug Report  While accessing `driver.manage.logs.get(:browser)` on chromedriver 75.0.3770.8 - it cause error ``` undefined method `log' for # (NoMethodError) ``` Works fine on 74.0.3729.6  ## To Reproduce  Just run test script  ## Test script or set of commands reproducing this issue  ```ruby require 'selenium-webdriver' driver = Selenium::WebDriver.for(:chrome, driver_path: '/tmp/chromedriver_74.0.3729.6') puts driver.manage.logs.get(:browser) driver = Selenium::WebDriver.for(:chrome, driver_path: '/tmp/chromedriver_75.0.3770.8') puts driver.manage.logs.get(:browser) ``` will cause ``` /home/user/.rvm/gems/ruby-2.5.3/gems/selenium-webdriver-3.142.3/lib/selenium/webdriver/common/logs.rb:32:in `get': undefined method `log' for # (NoMethodError) ``` on last line, 74 works fine  ## Environment  OS: Ubuntu 18.04 Browser: Chrome Browser version: `75.0.3770.80 ` Browser Driver version: chromedriver 75.0.3770.8 Language Bindings version: `Ruby 'selenium-webdriver', '3.142.3'`","closed","","ShockwaveNN","2019-06-07T11:09:46Z","2019-08-14T08:09:58Z"
"","7003","ExpectedConditions.elementToBeClicable() for Java not working as expected","## 🐛 Bug Report  When using WebDriverWait(driver, timeout) to wait until expected condition ExpectedConditions.elementToBeClickable(...) is met, it looks like timeout is not applied. Method until() just executes without waiting for element to became clickable.  elementToBeClickable() documentation: An expectation for checking an element is visible and **enabled** such that you can click it.  ## To Reproduce  Please use below test script to reproduce.  ## Expected behavior  Timeout should be applied and wait.until(...) would wait for 5 seconds, as declared in WebDriverWait constructor.  I have put one print at end of test to show actual duration of wait.  ## Test script or set of commands reproducing this issue      private static final String DRIVER_PROPERTY = ""webdriver.chrome.driver"";     private static final String DRIVER_PATH = ""/home/username/drivers/chromedriver"";      private static final String TEST_URL = ""https://demos.telerik.com/kendo-ui/button/index"";     private static final String DISABLED_BUTTON = ""//a[@id='primaryDisabledButton'][@aria-disabled='true'][contains(text(), 'Disabled Primary Button')]"";      @Test     public void waitUntillOnDisabledButton() throws InterruptedException {  	System.setProperty(DRIVER_PROPERTY, DRIVER_PATH);  	WebDriver driver = new ChromeDriver(); 	driver.get(TEST_URL); 	driver.manage().window().maximize(); 	TimeUnit.SECONDS.sleep(3);  	WebElement disabledButton = driver.findElement(By.xpath(DISABLED_BUTTON)); 	WebDriverWait wait = new WebDriverWait(driver, 5000l);  	long start = System.currentTimeMillis(); 	wait.until(ExpectedConditions.elementToBeClickable(disabledButton));  	System.out.println(String.format(""Waited %s miliseconds for element to be clickable (enabled)!"", 		System.currentTimeMillis() - start));  	disabledButton.click();     }  ## Environment  OS: Linux Ubuntu 16.04 Browser: Chrome Browser version: 72.0.3626.109 (64-bit) Browser Driver version: ChromeDriver 2.46 Language Bindings version: 3.141.59","closed","D-chrome,","IvanMarkovicIske","2019-03-06T10:32:38Z","2019-08-14T16:09:43Z"
"","7258","Selenium Grid + IE11","## 🐛 Bug Report  When using IEDriver on selenium grid, the response is missing the status property. Works when run locally using same versions.  ## To Reproduce  Webdriver 3.141.59 IE Driver 3.141.59 (tried both 32 and 64bit) Nightwatch 1.1.11  I am unable to run nightwatch against my selenium grid using IE11. FF and Chrome work fine. In verbose mode I noticed the response from the server was missing the status property:  ```    Request POST http://x.x.x.x:4444 /wd/hub/session/95853095-1a54-477d-b54c-fff8a31ba969/elements     { using: 'css selector', value: '#username' }     Response 200 POST http://x.x.x.x:4444/wd/hub/session/95853095-1a54-477d-b54c-fff8a31ba969/elements (275ms)     { value:       [ { 'element-6066-11e4-a52e-4f735466cecf': '4fa461d3-3821-492f-8412-fa6007445eb2' } ] } ```  When I run it locally, the response has `status: 0` as expected.  ## Expected behavior  Response will include status property  ## Environment  OS: Client is Windows 10, Selenium grid is running on Windows 2016 Server Browser: Internet Explorer Browser version: 11.576.14393.0 Browser Driver version: IEDriver 3.141.59 Language Bindings version: Javascript (nightwatch 1.1.11) Selenium Grid version (if applicable): 3.141.59","closed","D-IE,","lpanger","2019-06-03T21:47:41Z","2021-09-05T10:02:41Z"
"","7697","WebElement#getCssValue does not return rgba value in case of hexa color","## 🐛 Bug Report  When using `WebElement#getCssValue` the returned value is not necessarily a rgba value when the requested color is in fact an hexadecimal value, contrarily to what's explained in the WebElement javadoc: https://github.com/SeleniumHQ/selenium/blob/master/java/client/src/org/openqa/selenium/WebElement.java#L246-L265  Now I've not been able to track down in the W3C WebDriver specification if the color values should be systematically rgba or not, so maybe it's just a javadoc issue.  ## To Reproduce  Detailed steps to reproduce the behavior: Request the CSS color value of an element containing an hexadecimal color.  ## Expected behavior  The color is returned as an RGBA value.  ## Test script or set of commands reproducing this issue  ``` WebDriver driver = new FirefoxDriver(); driver.get(""http://www.google.com""); // The ""connection"" button, cf the following gif WebElement element = driver.findElement(By.id(""gb_70"")); // expected to be RGBA according to the javadoc String color = element.getCssValue(""border-top-color""); System.out.println(""Color CSS value: "" + color); driver.quit(); ```  ![google-button-border-color](https://user-images.githubusercontent.com/1478232/67192046-1b2c4780-f3f3-11e9-833a-ccd4b410f56a.gif)  ## Environment  OS: Linux Browser: Firefox Browser version: 69.0.3 Browser Driver version: GeckoDriver 0.25.0 Language Bindings version: Java 3.141.59","closed","C-java,","surli","2019-10-21T09:10:14Z","2021-09-05T08:08:46Z"
"","7369","TimeoutException - Failed to execute DevTools commands in CDP Listener","## 🐛 Bug Report  When trying to send DevTools commands inside a DevTools ""Listener"" context, web socket requests always timing out.  ## To Reproduce  past the below code as a test case in ChromeDevToolsNetworkTest. You will see that the response body is never printed. if you will set a break point in RealWebSocket:211 you will see that there is always a TimeoutException when trying to perform devTools operation inside Consumer#accept()  ``` @Test   public void failToSendDataInEventListener() {      devTools.send(enable(Optional.empty(), Optional.empty(), Optional.empty()));      devTools.addListener(loadingFinished(), new Consumer() {       @Override       public void accept(LoadingFinished loadingFinished) {         ResponseBody responseBody = devTools.send(getResponseBody(loadingFinished.getRequestId()));         System.out.println(responseBody.getBody());       }     });      chromeDriver.get(appServer.whereIs(""js/skins/lightgray/content.min.css""));  } ```  ## Expected behavior  DevTools commands should return successfully inside a ""Listener"".  ## Environment  OS: OSX Browser: Chrome Browser version: 75 Browser Driver version: 75 Language Bindings version: 4.0.0-alpha-2","closed","D-chrome,","adiohana","2019-07-08T12:38:20Z","2021-09-05T08:08:44Z"
"","7323","NullReferenceException exception thrown when getting browser logs","## 🐛 Bug Report  When trying to get AvailableLogTypes from logs. the NullReferenceException is thrown.  Same happens on Chrome and Firefox. Basically same issue as reported while ago https://github.com/SeleniumHQ/selenium/issues/5842.  ## To Reproduce Try to get log types `driver.Manage().Logs.AvailableLogTypes` or browser logs directly `driver.Manage().GetLog(LogType.Browser)`  ## Expected behavior Do not throw an exception.  ## Test script or set of commands reproducing this issue  ``` ChromeOptions chromeOptions = new ChromeOptions(); chromeOptions.SetLoggingPreference(LogType.Browser, LogLevel.All); _driver = new ChromeDriver(chromeOptions); _driver.Url = ""https://github.com""; var logs = _driver.Manage().Logs; var logTypes = logs.AvailableLogTypes; //NullReferenceException thrown here ```  ## Environment  OS: Windows 10 Browser: Chrome, Firefox Browser version: Chrome 75.0.3770.100, Firefox 67.0.2 Browser Driver version: ChromeDriver 75.0.3770.90, GeckoDriver 0.24 Language Bindings version: C# 3.141","closed","","richja","2019-06-24T16:54:47Z","2019-08-14T05:09:50Z"
"","7840","FindElement on Firefox & .NET Core very slow","## 🐛 Bug Report  When targeting `netcoreapp*.*` e.g. `netcoreapp2.2` and using `FirefoxDriver`, most actions are incredibly slow. When targeting `net***` e.g. `net461` and performing the same actions, the speed is as-expected (in the tens of milliseconds)  When targeting either framework, the speed of Chrome remains low & consistent.  This _appears_ to be related to a number of issues (#6597, #5676, #4988) however all these relate to use of localhost, whereas my problem occurrs when using google.com.  SSCCE: https://github.com/fraser-lowndes/selenium-issue-7840  Example output when targeting `netcoreapp2.2`:  ``` ... [firefox driver init] ... FirefoxDriver FindElement time: 2033.2775ms FirefoxDriver Element.Displayed time: 2076.6096ms ... [chrome driver init] ... ChromeDriver FindElement time: 16.7848ms ChromeDriver Element.Displayed time: 57.7246ms ```  OS: Windows 10 build 18362.476 Browser: Firefox Browser version: 70.0.1 Browser Driver version: Firefox.WebDriver 0.26.0 Language Bindings version: C# 3.141.0","closed","D-firefox,","fraser-lowndes","2019-12-03T17:44:53Z","2020-01-02T18:50:51Z"
"","7550","Altitude is null despite set in LocationContext (Java)","## 🐛 Bug Report  When setting the `Location` via `LocationContext` with a non-null altitude, subsequent calls to `geolocation.getCurrentPosition` provide a null altitude value.  ## To Reproduce  Detailed steps to reproduce the behavior:  ```java Location location = new Location(1.0, 1.0, 1.0); ChromeDriver driver = new ChromeDriver(); driver.setLocation(location); ```  Then, opening a page with this script:  ```javascript navigator.geolocation.getCurrentPosition(position => {     position.coords.latitude === 1.0 // true, correct     position.coords.longitude === 1.0 // true, correct     position.coords.altitude === 1.0 // false, it's null! }); ```  ## Expected behavior  It's expected that `position.coords.altitude` to have the correct value.  ## Test script or set of commands reproducing this issue  See code above.  ## Environment  OS: macOS Browser: Chrome Browser version: 76.0.3809.132  Browser Driver version: 76.0.3809.132 Language Bindings version: Java 3.141.59","closed","R-awaiting answer,","heruan","2019-09-10T10:28:26Z","2019-10-20T18:23:38Z"
"","7649","Selenium clicks below elements when running on Apple Mac/Safari 13.0.1","## 🐛 Bug Report  When Selenium tests that click on elements are run, the clicking is visibly below the actual element.  This happens for all elements tested and for all tests on which we tried this.    It only happens on Apple Mac/Safari 13.0.1.  Was not tested on iOS devices.  Same Apple Mac machine runs tests correctly on Chrome.  Other Macs running Safari 12.x also run correctly.  We tested this with Selenium 3.141.59 and 4.0.0 alpha-2 - bug reproduces identically on both versions, when browser is Safari 13.0.1.  ## To Reproduce  Detailed steps to reproduce the behavior:  1. Use any Selenium test that involves clicking an element (button, etc) that is sufficiently narrow. 2. Run on Apple Mac, Safari v13.0.1.  selenium-standalone-server.jar v3.141.59 or v4.0.0 alpha-2. 3. Clicking will visibly occur below the element.  All clicking seems to be off expected location by a constant offset.  ## Expected behavior  When clicking an element, clicking should occur within that element, such that it is clicked.  ## Test script or set of commands reproducing this issue  ## Environment  OS:  Browser: Safari  Browser version: 13.0.1 (14608.2.11.1.11) Browser Driver version: safaridriver 'Included with Safari 13.0.1' (same version as browser) Selenium Grid version (if applicable): N/A","closed","","RonKalian","2019-10-04T17:03:15Z","2020-03-10T19:25:28Z"
"","7831","Selenium hangs indefinitely on html5 video page","## 🐛 Bug Report  When selenium redirects to a page with nothing but a direct video file (html video tag, opening an html5 video player), selenium stops execution on the button click line that triggered the redirect.  ![image](https://user-images.githubusercontent.com/7407478/69911236-35f5d100-1421-11ea-92b0-27c4e0e7a359.png) I can't share this link because the video expires in a few hours, however any html5 video link will work, such as this one: https://media.w3.org/2010/05/sintel/trailer.mp4  I have tested this with two different kinds of direct html5 video content page provider servers. One has Partial Content enabled and the other doesn't. This doesn't matter but it was a personal finding. The result does not change.    ## To Reproduce    I tried setting the time-out for both page load and script load, and those DID throw time-out exceptions which is what I wanted, however, I cannot retrieve the direct url anymore, calling driver.getDirectUrl() throws a timeout exception. So after timing out, there is no way to access the page information.  ```java driver.manage().timeouts().setScriptTimeout(5, TimeUnit.SECONDS); driver.manage().timeouts().pageLoadTimeout(5, TimeUnit.SECONDS); ```  I tried something a little hacky to try getting around it as follows:  ```java 		try { 			Thread thread = new Thread(() -> { 				driver.findElement(By.id(""surfbtn"")).click(); 			}); 			thread.run(); 			Thread.sleep(5000); 		} catch (Exception e) { 			e.printStackTrace(); 		} 		final String url = driver.getCurrentUrl(); ``` What this does it is click the button on a separate thread and get the direct url while the driver is working anyways. This failed so I ran out of ideas.  ## Expected behavior  I expected after the page finished loading that execution continued. It does not, it hangs on the .click() method indefinitely. I also expected getDirectURL to return the url instead of throw a timeout exception.  ## Test script or set of commands reproducing this issue  There is no solid test script I can provide. It is, however, very simple to reproduce. Simply acquire a direct html5 video page like the following: ``` https://media.w3.org/2010/05/sintel/trailer.mp4 ``` and use driver.get() on it  ```java 		WebDriver driver = new ChromeDriver();  		driver.get(""https://media.w3.org/2010/05/sintel/trailer.mp4""); ``` ANYTHING after driver.get will NOT run. Even after the page loads completely and the video finishes playing.   ## Environment  OS: Windows 10 Browser: Chrome Browser version: Version 78.0.3904.108 (Official Build) (64-bit) Language Bindings version: Java 8 (update 101) Selenium version: 4.0.0-alpha-3","closed","R-awaiting answer,","SwissCheese5","2019-12-01T08:13:00Z","2020-01-11T14:53:15Z"
"","7025","Error forwarding the new session Error forwarding the request org.seleniumhq.jetty9.io.EofException","## 🐛 Bug Report  When running tests in parallel under the Internet Explorer after some time I have a queue at the hub, and the number of queue items is much more than the running tests. The node accumulates a browser with a start page of about: blank. After session timeout hub kills hung sessions and starting new sessions from queue and the situation repeats until the nodes fall off by OutOfMemoryException.  ### nodeconfig.json _{   ""capabilities"":       [         {           ""browserName"": ""firefox"",           ""maxInstances"": 10,           ""seleniumProtocol"": ""WebDriver""         },         {           ""browserName"": ""chrome"",           ""maxInstances"": 10,           ""seleniumProtocol"": ""WebDriver""         },         {           ""browserName"": ""internet explorer"",           ""maxInstances"": 5,           ""seleniumProtocol"": ""WebDriver""         }       ],   ""proxy"": ""org.openqa.grid.selenium.proxy.DefaultRemoteProxy"",   ""maxSession"": 20,   ""port"": 5563,   ""host"": ""[protected]"",   ""register"": true,   ""hub"": ""[protected]"",   ""nodeStatusCheckTimeout"": 5000,   ""registerCycle"": 5000,   ""nodePolling"": 5000,   ""role"": ""node"",   ""unregisterIfStillDownAfter"": 60000,   ""downPollingLimit"": 2,   ""debug"": true,   ""log"" : ""lognode.txt"",   ""servlets"" : [],   ""withoutServlets"": [],   ""custom"": {} }_  ##hubconfig.json _{   ""port"": 4441,   ""newSessionWaitTimeout"": -1,   ""servlets"" : [],   ""withoutServlets"": [],   ""custom"": {},   ""capabilityMatcher"": ""org.openqa.grid.internal.utils.DefaultCapabilityMatcher"",   ""throwOnCapabilityNotPresent"": true,   ""cleanUpCycle"": 5000,   ""role"": ""hub"",   ""debug"": true,   ""log"": ""loghub.txt"",   ""browserTimeout"": 0,   ""timeout"": 1800 }_  ## Expected behavior  Grid Hub correctly works with sessions queue and node successfully finishes all sessions.  ## Actual behavior  A large number of errors on the grid hub something like that:  ``` 06:55:38.426 INFO [RequestHandler.process] - Error forwarding the new session Error forwarding the request org.seleniumhq.jetty9.io.EofException org.openqa.grid.internal.exception.NewSessionException: Error forwarding the request org.seleniumhq.jetty9.io.EofException 	at org.openqa.grid.web.servlet.handler.RequestHandler.forwardNewSessionRequestAndUpdateRegistry(RequestHandler.java:94) 	at org.openqa.grid.web.servlet.handler.RequestHandler.process(RequestHandler.java:114) 	at org.openqa.grid.web.servlet.DriverServlet.process(DriverServlet.java:85) 	at org.openqa.grid.web.servlet.DriverServlet.doPost(DriverServlet.java:69) 	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707) 	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790) 	at org.seleniumhq.jetty9.servlet.ServletHolder.handle(ServletHolder.java:860) 	at org.seleniumhq.jetty9.servlet.ServletHandler.doHandle(ServletHandler.java:535) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:143) 	at org.seleniumhq.jetty9.security.SecurityHandler.handle(SecurityHandler.java:548) 	at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:190) 	at org.seleniumhq.jetty9.server.session.SessionHandler.doHandle(SessionHandler.java:1595) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:188) 	at org.seleniumhq.jetty9.server.handler.ContextHandler.doHandle(ContextHandler.java:1253) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:168) 	at org.seleniumhq.jetty9.servlet.ServletHandler.doScope(ServletHandler.java:473) 	at org.seleniumhq.jetty9.server.session.SessionHandler.doScope(SessionHandler.java:1564) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:166) 	at org.seleniumhq.jetty9.server.handler.ContextHandler.doScope(ContextHandler.java:1155) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:141) 	at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132) 	at org.seleniumhq.jetty9.server.Server.handle(Server.java:530) 	at org.seleniumhq.jetty9.server.HttpChannel.handle(HttpChannel.java:347) 	at org.seleniumhq.jetty9.server.HttpConnection.onFillable(HttpConnection.java:256) 	at org.seleniumhq.jetty9.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:279) 	at org.seleniumhq.jetty9.io.FillInterest.fillable(FillInterest.java:102) 	at org.seleniumhq.jetty9.io.ChannelEndPoint$2.run(ChannelEndPoint.java:124) 	at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:247) 	at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.produce(EatWhatYouKill.java:140) 	at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:131) 	at org.seleniumhq.jetty9.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:382) 	at org.seleniumhq.jetty9.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:708) 	at org.seleniumhq.jetty9.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:626) 	at java.lang.Thread.run(Unknown Source) Caused by: org.openqa.grid.common.exception.ClientGoneException: org.seleniumhq.jetty9.io.EofException 	at org.openqa.grid.internal.TestSession.writeRawBody(TestSession.java:492) 	at org.openqa.grid.internal.TestSession.forward(TestSession.java:286) 	at org.openqa.grid.web.servlet.handler.RequestHandler.forwardNewSessionRequestAndUpdateRegistry(RequestHandler.java:91) 	... 34 more Caused by: org.seleniumhq.jetty9.io.EofException 	at org.seleniumhq.jetty9.io.ChannelEndPoint.flush(ChannelEndPoint.java:292) 	at org.seleniumhq.jetty9.io.WriteFlusher.flush(WriteFlusher.java:429) 	at org.seleniumhq.jetty9.io.WriteFlusher.write(WriteFlusher.java:322) 	at org.seleniumhq.jetty9.io.AbstractEndPoint.write(AbstractEndPoint.java:372) 	at org.seleniumhq.jetty9.server.HttpConnection$SendCallback.process(HttpConnection.java:788) 	at org.seleniumhq.jetty9.util.IteratingCallback.processing(IteratingCallback.java:241) 	at org.seleniumhq.jetty9.util.IteratingCallback.iterate(IteratingCallback.java:224) 	at org.seleniumhq.jetty9.server.HttpConnection.send(HttpConnection.java:528) 	at org.seleniumhq.jetty9.server.HttpChannel.sendResponse(HttpChannel.java:778) 	at org.seleniumhq.jetty9.server.HttpChannel.write(HttpChannel.java:834) 	at org.seleniumhq.jetty9.server.HttpOutput.write(HttpOutput.java:234) 	at org.seleniumhq.jetty9.server.HttpOutput.write(HttpOutput.java:218) 	at org.seleniumhq.jetty9.server.HttpOutput.write(HttpOutput.java:535) 	at java.io.OutputStream.write(Unknown Source) 	at org.openqa.grid.internal.TestSession.writeRawBody(TestSession.java:490) 	... 36 more Caused by: java.io.IOException: An established connection was aborted by the software in your host machine 	at sun.nio.ch.SocketDispatcher.writev0(Native Method) 	at sun.nio.ch.SocketDispatcher.writev(Unknown Source) 	at sun.nio.ch.IOUtil.write(Unknown Source) 	at sun.nio.ch.SocketChannelImpl.write(Unknown Source) 	at org.seleniumhq.jetty9.io.ChannelEndPoint.flush(ChannelEndPoint.java:272) 	... 50 more ```  and started blank IE browser on node with command:  ``` 06:55:38.426 DEBUG [RemoteWebDriver.log] - Executing: newSession [null, newSession {desiredCapabilities=Capabilities {acceptInsecureCerts: false, browserName: internet explorer, browserVersion: 11, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:ieOptions: {browserAttachTimeout: 0, elementScrollBehavior: 0, enablePersistentHover: false, ie.browserCommandLineSwitches: , ie.ensureCleanSession: true, ie.fileUploadDialogTimeout: 3000, ie.forceCreateProcessApi: false, ignoreProtectedModeSettings: true, ignoreZoomSetting: false, initialBrowserUrl: about:blank, nativeEvents: false, requireWindowFocus: false}, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}}]  06:55:38.426 DEBUG [RemoteWebDriver.log] - Executed: [null, newSession {desiredCapabilities=Capabilities {acceptInsecureCerts: false, browserName: internet explorer, browserVersion: 11, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:ieOptions: {browserAttachTimeout: 0, elementScrollBehavior: 0, enablePersistentHover: false, ie.browserCommandLineSwitches: , ie.ensureCleanSession: true, ie.fileUploadDialogTimeout: 3000, ie.forceCreateProcessApi: false, ignoreProtectedModeSettings: true, ignoreZoomSetting: false, initialBrowserUrl: about:blank, nativeEvents: false, requireWindowFocus: false}, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}}]  06:55:38.426 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session d9219771-ef2e-4ef8-a163-cb9e948aed09 (org.openqa.selenium.ie.InternetExplorerDriverService) ```  ## Test script or set of commands reproducing this issue  1) Start grid hub; 2) Start node. 3) Running tests that using IEDriverServer through Grid Hub.  ## Environment  OS: Windows 10 Browser: IE 11 Browser version: 11.321.14393.0 Browser Driver version: 3.141.0 Language Bindings version: java 1.8.0_201. Selenium Grid version:  3.141.0","closed","","ghost","2019-03-13T08:57:04Z","2019-08-14T18:09:49Z"
"","7557","ChromeDriver please protect ports issue,","## 🐛 Bug Report  When running my selenium test script , i get an please protect chromedriver ports issue , I am using the latest Chromedriver. The driver open to URL but will not do any actions such as sendkeys to the username field , password or click sign in.","closed","","ronnyfly23","2019-09-11T20:04:07Z","2019-10-12T14:09:36Z"
"","6967","Selenium Grid servers resolve 'localhost' to a non-functional IP address in VPN configurations","## 🐛 Bug Report  When running in VPN configurations, the method used by Selenium Grid Server to resolve the IP address of `localhost` returns a non-functional result. Consequently, local Grid instances do not work in VPN configurations.   This is an issue in both Grid 2 and Grid 3. My code is able to communicate with the Hub and Node servers, but the Node can't communicate with the Hub. The core issue appears to be in the method being use to determine the IP address of `localhost`. I don't know is this is a bug in the Java HTTP stack, but the typical implementation fails gloriously when running in a VPN configuration. The code I use to get the IP address of `localhost` looks like this:  ``` /**  * Get Internet protocol (IP) address for the machine we're running on.  *   * @return IP address for the machine we're running on (a.k.a. - 'localhost')  */ public static String getLocalHost() {     try (final DatagramSocket socket = new DatagramSocket()) {         // use Google Public DNS to discover preferred local IP         socket.connect(InetAddress.getByName(""8.8.8.8""), 10002);         return socket.getLocalAddress().getHostAddress();     } catch (SocketException | UnknownHostException eaten) {         return ""localhost"";     } } ``` As indicated by the code comment, this implementation uses Google Public DNS to acquire the IP address of `localhost`. In my current configuration. this code reports the IP address of `localhost` as 10.228.225.83 (Ethernet adapter), but the Selenium Grid servers insist on trying to use IP address 100.64.24.68 (wireless LAN adapter). With a browser, I'm able to open pages with the IP address I generate with this code. The IP address reported by the Grid servers themselves is non-functional.  If I disconnect from VPN, the local Grid servers work as expected.  ## To Reproduce  Download `selenium-server-standalone`.    ### Non-VPN Configuration: * Launch `selenium-standalone-server` ``` $ java -jar selenium-server-standalone-3.141.59.jar -role hub 10:18:36.120 INFO [GridLauncherV3.parse] - Selenium server version: 3.141.59, revision: e82be7d358 10:18:36.232 INFO [GridLauncherV3.lambda$buildLaunchers$5] - Launching Selenium Grid hub on port 4444 2019-02-25 10:18:36.668:INFO::main: Logging initialized @816ms to org.seleniumhq.jetty9.util.log.StdErrLog 10:18:37.306 INFO [Hub.start] - Selenium Grid hub is up and running 10:18:37.307 INFO [Hub.start] - Nodes should register to http://100.64.24.68:4444/grid/register/ 10:18:37.307 INFO [Hub.start] - Clients should connect to http://100.64.24.68:4444/wd/hub ``` * Start a browser and open http://100.64.24.68:4444/grid/console * You should see the Grid Console page  ### VPN Configuration * Launch `selenium-standalone-server` ``` $ java -jar selenium-server-standalone-3.141.59.jar -role hub 10:29:04.669 INFO [GridLauncherV3.parse] - Selenium server version: 3.141.59, revision: e82be7d358 10:29:04.797 INFO [GridLauncherV3.lambda$buildLaunchers$5] - Launching Selenium Grid hub on port 4444 2019-02-25 10:29:05.177:INFO::main: Logging initialized @766ms to org.seleniumhq.jetty9.util.log.StdErrLog 10:29:05.842 INFO [Hub.start] - Selenium Grid hub is up and running 10:29:05.842 INFO [Hub.start] - Nodes should register to http://100.64.24.68:4444/grid/register/ 10:29:05.842 INFO [Hub.start] - Clients should connect to http://100.64.24.68:4444/wd/hub ``` * Start a browser and open http://100.64.24.68:4444/grid/console * `Your Internet access is blocked` * Open http://10.228.225.146:4444/grid/console (my current Ethernet adapter IP) * Grid Console page appears  ## Expected behavior  The IP address selected for `localhost` should be functional in VPN configurations.  ## Test script or set of commands reproducing this issue  See the `To Reproduce` section above  ## Environment  * Virtual Private Network * Local grid * Either Grid 2 or Grid 3  ## Workaround  This issue can be avoided by adding the `-host` option to the command line, specifying the IP address returned by the `getLocalHost()` method shown above. For example:  ``` $ java -jar selenium-server-standalone-3.141.59.jar -role hub -host 10.228.225.146 09:17:10.837 INFO [GridLauncherV3.parse] - Selenium server version: 3.141.59, revision: e82be7d358 09:17:10.981 INFO [GridLauncherV3.lambda$buildLaunchers$5] - Launching Selenium Grid hub on port 4444 2019-02-27 09:17:11.438:INFO::main: Logging initialized @910ms to org.seleniumhq.jetty9.util.log.StdErrLog 09:17:11.983 INFO [Hub.start] - Selenium Grid hub is up and running 09:17:11.984 INFO [Hub.start] - Nodes should register to http://10.228.225.146:4444/grid/register/ 09:17:11.984 INFO [Hub.start] - Clients should connect to http://10.228.225.146:4444/wd/hub ``` * Start a browser and open http://10.228.225.146:4444/grid/console * You should see the Grid Console page","closed","R-awaiting answer,","sbabcoc","2019-02-25T18:42:58Z","2019-08-14T07:09:39Z"
"","7159","Selenium does not scroll element high enough if there is a navigation bar with position: fixed","## 🐛 Bug Report  When page contains a navigation bar, which type `position: fixed` and page contains lots of elements, so that Selenium scrolls the element in view, before the element is clicked. Then Selenium does not scroll the element high enough in the browser window so that it could successfully click the element.   Instead Selenium will scroll the element to the edge of the browser window, but because there is navigation bar, which type position: fixed, the element is behind the navigation bar. Therefore Selenium will raise an error: ``` Traceback (most recent call last):   File ""selenium_test.py "", line 7, in      element.click()   File ""/usr/local/lib/python3.7/dist-packages/selenium/webdriver/remote/webelement.py"", line 80, in click     self._execute(Command.CLICK_ELEMENT)   File ""/usr/local/lib/python3.7/dist-packages/selenium/webdriver/remote/webelement.py"", line 633, in _execute     return self._parent.execute(command, params)   File ""/usr/local/lib/python3.7/dist-packages/selenium/webdriver/remote/webdriver.py"", line 321, in execute     self.error_handler.check_response(response)   File ""/usr/local/lib/python3.7/dist-packages/selenium/webdriver/remote/errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element ... is not clickable at point (628, 713). Other element would receive the click: ...   (Session info: chrome=74.0.3729.108)   (Driver info: chromedriver=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}),platform=Linux 4.15.0-48-generic x86_64) ```  ## To Reproduce https://gist.github.com/aaltat/bff3d0511e306abb2abb9c8373343eed#file-page-html https://gist.github.com/aaltat/bff3d0511e306abb2abb9c8373343eed#file-selenium_test-py  ## Expected behavior I did expect element to be scrolled in view and the click to be successful.  ## Test script or set of commands reproducing this issue See the gist in above.   ## Environment  OS: Ubuntu 18.04 LTS Browser: Chrome and Firefoc Browser version: Chrome:  74.0.3729.108, Firefox: 66.0.3 Browser Driver version: ChromeDriver 74.0.3729.6, geckodriver 0.24.0 ( 2019-01-28) Language Bindings version: Python 3.7.1 Selenium Grid version (if applicable): Not used.","closed","","aaltat","2019-04-30T21:42:13Z","2019-08-14T12:09:44Z"
"","7435","org.openqa.selenium.WebDriverException: TypeError: Expected an element or WindowProxy, got: [object Text] {}","## 🐛 Bug Report  When I'm trying find Text element using findElements in context of WebElement, then I'm getting error: TypeError: Expected an element or WindowProxy, got: [object Text] {} issue is with Firefox GeckoDriver but in browser this Xpath working as expected  ## To Reproduce  List txtBefore = someWebElement.findElements(By.xpath(""./preceding-sibling::text()""))  Detailed steps to reproduce the behavior:  ## Expected behavior  it should find all Text elements  ## Environment  OS: Windows 10 Browser: Firefox Quantum  Browser version: 60.8.0esr (32bits) Browser Driver version: geckodriver-v0.24.0-win64 Language Bindings version: java amazon-corretto-8.212.04.2-windows-x64 Selenium Grid version (if applicable): 3.141.59","closed","","Ad-a-m","2019-07-26T23:50:48Z","2019-08-28T10:09:34Z"
"","7324","Safari hard crash on click","## 🐛 Bug Report  When I'm running my selenium scripts, I will get a hard crash when I run the Safari web browser if I click certain links.  For most click actions the Safari Webdriver is fine, but if I preform a 'webElement.click()' or '.actions.clickAndHold).perform()' The driver will crash.  This only happens for web elements that are footer jump links (like, when a user clicks on the link the page will scroll down to the footer).  Also, this only happens in Safari. Chrome, Firefox, etc. are all fine.  Has anyone run into something like this, and if so are there work arounds (like maybe some other way to click a web element)?  This started with the newly released Safari 12.1.1 browser (it was working fine before)  I _think_ this is the section of the Javascript on the webpage that is causing the crash:  `$.each(t, function(n, t) {             var i = $(t)               , r = p(i);             r && r.not(""[tabindex],input,textarea"").attr(""tabindex"", -1);             r && (i.data(""anchor"") ? console.warn(""%c attr [data-anchor] is deprecated; use [href] or [data-jump-target] instead"", ""background: #222; color: #7fda55; font-size: 14px; padding: 4px"", i[0]) : i.is("".jumpLink, .anchor-link, .superscript-link"") && console.warn('%c classes .jumpLink, .anchor-link, .superscript-link for anchors are deprecated; use  or  instead', ""background: #222; color: #7fda55; font-size: 12px; padding: 2px"", i[0]))         });`  and this is the crash dump from safari:  `Process:               Safari [24240] Path:                  /Applications/Safari.app/Contents/MacOS/Safari Identifier:            com.apple.Safari Version:               12.1.1 (14607.2.6.1.1) Build Info:            WebBrowser-7607002006001001~3 Code Type:             X86-64 (Native) Parent Process:        ??? [1] Responsible:           Safari [24240] User ID:               502  Date/Time:             2019-06-21 15:16:23.521 -0600 OS Version:            Mac OS X 10.14.5 (18F203) Report Version:        12 Bridge OS Version:     3.5 (16P5200) Anonymous UUID:        56C84AF4-983B-688C-12EB-52065287562D  Sleep/Wake UUID:       6B696843-31A9-4795-B29B-E3D128CE40A4  Time Awake Since Boot: 57000 seconds Time Since Wake:       720 seconds  System Integrity Protection: enabled  Crashed Thread:        0  Dispatch queue: com.apple.main-thread  Exception Type:        EXC_BAD_INSTRUCTION (SIGILL) Exception Codes:       0x0000000000000001, 0x0000000000000000 Exception Note:        EXC_CORPSE_NOTIFY  Termination Signal:    Illegal instruction: 4 Termination Reason:    Namespace SIGNAL, Code 0x4 Terminating Process:   exc handler [24240]  Thread 0 Crashed:: Dispatch queue: com.apple.main-thread 0   com.apple.WebKit                0x00007fff49065320 WTF::Function::CallableWrapper::call(WTF::Optional, WTF::Optional) + 346 1   com.apple.WebKit                0x00007fff49053bd6 WTF::Function::operator()(WTF::Optional, WTF::Optional) const + 72 2   com.apple.WebKit                0x00007fff4905a707 WebKit::WebAutomationSession::didComputeElementLayout(unsigned long long, WebCore::IntRect, WTF::Optional, bool, WTF::String const&) + 1283 3   com.apple.WebKit                0x00007fff49161b12 void IPC::callMemberFunctionImpl(WebKit::WebAutomationSession*, void (WebKit::WebAutomationSession::*)(unsigned long long, WebCore::IntRect, WTF::Optional, bool, WTF::String const&), std::__1::tuple&&, std::__1::integer_sequence) + 91 4   com.apple.WebKit                0x00007fff491615f0 void IPC::handleMessage(IPC::Decoder&, WebKit::WebAutomationSession*, void (WebKit::WebAutomationSession::*)(unsigned long long, WebCore::IntRect, WTF::Optional, bool, WTF::String const&)) + 99 5   com.apple.WebKit                0x00007fff48e0e9b6 IPC::MessageReceiverMap::dispatchMessage(IPC::Connection&, IPC::Decoder&) + 64'`  ## Environment  OS: Mac OS Mojave 10.14.5 Browser: Safari Browser version: 12.1.1 Browser Driver version: Built in Mac Selenium Driver Language Bindings version: Java 12","closed","R-awaiting answer,","LJENKNS","2019-06-24T17:31:02Z","2021-09-05T10:02:41Z"
"","7122","IEDriverServer.exe crashes when trying to add a cookie","## 🐛 Bug Report  When I try to add a cookie to the cookie container, IEDriverServer.exe crashes.  ## To Reproduce  See the test below.  ## Expected behavior  I expected the cookie to be added to the cookie container.  ## Test script or set of commands reproducing this issue  ``` using System; using Microsoft.VisualStudio.TestTools.UnitTesting; using OpenQA.Selenium; using OpenQA.Selenium.IE;  [TestClass] public class UnitTest1 {     [TestMethod]     public void TestMethod1()     {         var explorerOptions = new InternetExplorerOptions         {             EnsureCleanSession = true,             IntroduceInstabilityByIgnoringProtectedModeSettings = false         };          var internetExplorerDriverService = InternetExplorerDriverService.CreateDefaultService();         internetExplorerDriverService.HideCommandPromptWindow = false;         internetExplorerDriverService.LoggingLevel = InternetExplorerDriverLogLevel.Trace;         internetExplorerDriverService.LogFile = @""C:\selenium.log"";         InternetExplorerDriver driver = new InternetExplorerDriver(internetExplorerDriverService, explorerOptions);          driver.Url = ""http://www.seleniumhq.org"";         driver.Navigate();         var cookieContainer = driver.Manage().Cookies;          Cookie cookie = new Cookie(             ""test"",             ""0"",             null,             ""/"",             DateTime.MaxValue);          var currentCookie = cookieContainer.GetCookieNamed(cookie.Name);         if (currentCookie != null)         {             cookieContainer.DeleteCookieNamed(cookie.Name);         }         cookieContainer.AddCookie(cookie);     } } ```  Exception ``` OpenQA.Selenium.WebDriverException: A exception with a null response was thrown sending an HTTP request to the remote WebDriver server for URL http://localhost:4726/session/87e938dd-0509-48b4-a884-18a50685ade8/cookie. The status of the exception was ReceiveFailure, and the message was: The underlying connection was closed: An unexpected error occurred on a receive. ---> System.Net.WebException: The underlying connection was closed: An unexpected error occurred on a receive. ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host. ---> System.Net.Sockets.SocketException: An existing connection was forcibly closed by the remote host ```  StackTrace ``` at System.Net.Sockets.Socket.Receive(Byte[] buffer, Int32 offset, Int32 size, SocketFlags socketFlags)    at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size) --- End of inner exception stack trace ---     at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)    at System.Net.PooledStream.Read(Byte[] buffer, Int32 offset, Int32 size)    at System.Net.Connection.SyncRead(HttpWebRequest request, Boolean userRetrievedStream, Boolean probeRead) --- End of inner exception stack trace ---     at System.Net.HttpWebRequest.GetResponse()    at OpenQA.Selenium.Remote.HttpCommandExecutor.MakeHttpRequest(HttpRequestInfo requestInfo) --- End of inner exception stack trace ---     at OpenQA.Selenium.Remote.HttpCommandExecutor.MakeHttpRequest(HttpRequestInfo requestInfo)    at OpenQA.Selenium.Remote.HttpCommandExecutor.Execute(Command commandToExecute)    at OpenQA.Selenium.Remote.DriverServiceCommandExecutor.Execute(Command commandToExecute)    at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)    at OpenQA.Selenium.Remote.RemoteCookieJar.AddCookie(Cookie cookie)    at TestMethod1() in UnitTest1.cs:line 42 ```  Windows Application Event Log Entry ``` Faulting application name: IEDriverServer.exe, version: 3.141.0.0, time stamp: 0x5bd9ea9a Faulting module name: IEDCAE7.tmp, version: 3.141.0.0, time stamp: 0x5bd9ea91 Exception code: 0xc0000409 Fault offset: 0x000d89c5 Faulting process id: 0x1354 Faulting application start time: 0x01d4f725833dde76 Faulting application path: C:\Users\rami.abughazaleh\Documents\Visual Studio 2017\Projects\UnitTestProject5\bin\Debug\IEDriverServer.exe Faulting module path: C:\Users\RAMI~1.ABU\AppData\Local\Temp\IEDCAE7.tmp Report Id: 46754b0e-5605-477c-b949-c807dc6a23c5 Faulting package full name:  Faulting package-relative application ID:  ```  [selenium.log](https://github.com/SeleniumHQ/selenium/files/3099868/selenium.log)   ## Environment  OS: Windows 10 Browser: IE Browser version: 11.437.17763.0 Browser Driver version: 3.141.0 Language Bindings version: C# .NET 4.7.1  It works in Chrome without issues.  Thank you.  **Edit** I changed `IntroduceInstabilityByIgnoringProtectedModeSettings` to `false` and uploaded selenium.log.","closed","","icnocop","2019-04-20T03:13:16Z","2019-08-14T13:09:47Z"
"","6917","'java.lang.Long cannot be cast to java.lang.Integer' when using socksVersion","## 🐛 Bug Report  When I send the socksVersion field to the server, I get the following error:  `java.lang.Long cannot be cast to java.lang.Integer`  The data payload is the following:  ```json {    ""capabilities"":{       ""alwaysMatch"":{          ""browserName"":""chrome"",          ""goog:chromeOptions"":{           },          ""proxy"":{             ""proxyType"":""manual"",             ""socksProxy"":""172.18.0.2"",             ""socksVersion"":5          }       }    },    ""desiredCapabilities"":{       ""browserName"":""chrome"",       ""chromeOptions"":{        },       ""goog:chromeOptions"":{        },       ""proxy"":{          ""proxyType"":""manual"",          ""socksProxy"":""172.18.0.2"",          ""socksVersion"":5       }    } } ```  I'm using my own fork of the golang package https://github.com/tebeka/selenium   ## To Reproduce    1. Download my issues repo and go to this issue dir. ```shell git clone git@github.com:dsmontoya/issues.git cd issues/selenium/socks-version ``` 2. Run the selenium containers ```shell docker-compose up ``` 3. Source the env vars ```shell source .env ``` 4. Run the socks-version file or build it by yourself ```shell ./socks-version ```  ## Expected behavior  It should open a new chrome window configured with a socks5 proxy.  ## Test script or set of commands reproducing this issue All the source code is provided in https://github.com/dsmontoya/issues/tree/master/selenium/socks-version  ## Environment ### Docker images: * selenium/node-chrome:3.141.59 * selenium/hub:3.141.59","closed","C-java,","dsmontoya","2019-02-06T19:22:24Z","2019-08-14T12:09:47Z"
"","7429","Namespace problem with the latest chromedriver","## 🐛 Bug Report  When I get my web page source with selenium 3.141.59  and latest chromedriver, no namespace (I am expecting xmlns=""http://www.w3.org/1999/xhtml"") returns. But I am able to get namespace while I was using chromedriver 2.46.  So, in my XSL file, I am getting ""The source document is in no namespace, but the template rules all expect elements in a namespace"". I don't want to change all of my XSL files and remove namespace declarations. What can be the reason of that difference?  ## Environment  OS: Windows 10 Browser: Chrome Browser version: 75.xx Browser Driver version: ChromeDriver 2.46 and latest Language Bindings version: java 8 Selenium Grid version (if applicable):","closed","","rdonuk","2019-07-24T12:36:10Z","2019-08-23T13:09:37Z"
"","7125","Deprecation warning for driver_path","## 🐛 Bug Report  When I execute `bundle exec rspec` and I have at least one expectation written I got: ``` WARN Selenium [DEPRECATION] Selenium::WebDriver::Chrome#driver_path= is deprecated. Use Selenium::WebDriver::Chrome::Service#driver_path= instead. WARN Selenium [DEPRECATION] Selenium::WebDriver::Chrome#driver_path= is deprecated. Use Selenium::WebDriver::Chrome::Service#driver_path= instead. ```    ## To Reproduce  You can clone my repo and reproduce the bug by yourself: https://github.com/ChidaCompany/dockerized-rails-stack/tree/warn/selenium-webdriver   Just make sure you do everything within the branch `warn/selenium-webdriver `:  ``` $ git clone git@github.com:ChidaCompany/dockerized-rails-stack.git $ git fetch $ git checkout warn/selenium-webdriver $ docker-compose build $ docker-compose run web rails db:create db:migrate $ docker-compose up $ docker exec -it rails bash # within rails container bash $ bundle exec rspec ```   ## Expected behavior  Specs should run without any warning  ## Test script or set of commands reproducing this issue ``` bundle exec rspec ```  ## Environment  OS: dockerized linux Browser: N/A Browser version: N/A Browser Driver version: N/A Language Bindings version: N/A Selenium Grid version (if applicable): N/A","closed","","javierojeda94","2019-04-21T08:54:26Z","2019-08-14T12:09:53Z"
"","7748","ChromeDriver becomes ""zombie"" after initialization failure in C# project","## 🐛 Bug Report  When creating a new Driver using the C# bindings on windows (Specifically in this case Chrome) when initialization fails, the application exits with the chromedriver continuing to run. (This combined with execution managed by gitlab results in a runner which does not complete)  ## To Reproduce  The best example of this requires an incorrectly setup environment. Specifically, Install Chrome and Provide an incompatible version of the ChromeDriver  If you install Chrome 78, then install chromedriver 76.  Execute a C# application which initializes a ChromeDriver https://stackoverflow.com/questions/58665122/stop-driver-process-after-session-not-created-this-version-of-chromedriver-on  UPDATED Example Workaround from comments:  ```csharp IWebDriver driver = null; ChromeDriverService service = ChromeDriverService.CreateDefaultService(); try {     driver = new ChromeDriver(service); } catch (Exception) {     service.Dispose(); } ```  ## Expected behavior  chromedriver.exe will not be in the process list.  ## Environment  OS: Windows Server 2016 Browser: Chrome (may happen for others) Browser version: 78 (and previous versions) Browser Driver version: ChromeDriver 76 (because it should not match) Language Bindings version: C# - 3.141.0 Selenium Grid version (if applicable): (No Grid Utilized)","closed","I-stale,","JesseKPhillips","2019-11-05T21:40:54Z","2021-12-03T00:06:46Z"
"","7762","Zombie Chrome process after creating failed for chromedriver","## 🐛 Bug Report  When creating a new Driver using the C# bindings on windows (Specifically in this case Chrome) when initialization fails, a chrome process is created without a chromedriver process. The error is `OpenQA.Selenium.WebDriverException: unknown error: failed to wait for extension background page to load` ## To Reproduce The error happens when I am running 40-50 chromedrivers in parallel. It doesnt happen if I use small number of chromedrivers like 5 or 10. The more chromedrivers I use, the faster that error happens.  Detailed steps to reproduce the behavior:  ## Expected behavior  The chrome process is not created when creating chromedriver failed  ## Environment  OS:  Windows 10 Browser: Chrome Browser version: 77.0.3865.75 Browser Driver version: ChromeDriver 77.0.3865.40 Language Bindings version: C# 4.0.30319 Selenium Grid version (if applicable): No","closed","D-chrome,","vovanluan","2019-11-08T23:36:33Z","2020-04-04T11:50:49Z"
"","7658","iframe that covers full screen causes hover to not work on a visible element outside iframe","## 🐛 Bug Report  When attempting to mouse hover over an element where there is an iframe that covers the entire screen, hovering will not work. The element is not within the iframe - it is within the main document. The element has a high z-index to force it to the very top layer so that it is visible. Hovering on manual testing works, but not when using Capybara + Selenium.   ## To Reproduce Using ruby, Capybara + Rspec + Selenium  Create an html document with an iframe which covers the full screen.  Create an element on the main document (outside the iframe) which triggers some other element to pop into view (opacity from 0 to 1) upon hovering. Give the element a high z-index to ensure it is at the top layer.  Manually test to verify that the hover element is visible and hovering works on it.  Write automation test using ruby, capybara and selenium, using chrome driver. Hover over the hover-element. Tell ruby to sleep for a few seconds so you can see that hover is not being triggered.   Example can be found here:  https://jsfiddle.net/pwo7zuL2/1/   ## Expected behavior If manual hovering works, hovering using selenium should also work.   ## Test script or set of commands reproducing this issue visit link  find(""#next"").hover  sleep(10)  ## Environment  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:   Selenium Grid version (if applicable):","closed","","LiChoi","2019-10-06T16:40:31Z","2019-11-05T21:07:48Z"
"","7393","When standalone server converts OSS click to W3C actions, button info is lost","## 🐛 Bug Report  When an OSS-protocol client app uses Selenium standalone server to connect to a W3C-protocol WebDriver implementation (e.g., ChromeDriver 75 and above), the standalone server converts OSS protocol requests to W3C format. When some mouse related commands (e.g., [`/session/:sessionId/click`](https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#sessionsessionidclick)) are converted, the specified `button` property is ignored, and `button: 0` is sent to the WebDriver.  ## To Reproduce  Run the following shell commands from a Linux command prompt:  Start Selenium standalone server, configure ChromeDriver location, and enable ChromeDriver logging:      java -Dwebdriver.chrome.driver=/usr/local/bin/chromedriver -Dwebdriver.chrome.logfile=chromedriver.log -jar selenium-server-standalone-3.141.59.jar &  Send OSS-format request to start a new session, and extract the session ID.      SESSION_ID=`curl -s -XPOST http://localhost:4444/wd/hub/session -d '{""desiredCapabilities"":{""browserName"":""chrome""}}' | jq -r .sessionId`  Try to click the right mouse button:      curl -XPOST http://localhost:4444/wd/hub/session/$SESSION_ID/click -d '{""button"":2}'  Open the generated `chromedriver.log` file, and observe that the above click command has been converted into the following Perform Actions command, with `button` property of 0 instead of 2:      ""actions"": [ {        ""actions"": [ {           ""button"": 0,           ""type"": ""pointerDown""        }, {           ""button"": 0,           ""type"": ""pointerUp""        } ],        ""id"": ""mouse"",        ""parameters"": {           ""pointerType"": ""mouse""        },        ""type"": ""pointer""     } ]  ## Expected behavior  The converted Perform Actions command should have `""button"": 2`.  This issue was originally reported by a ChromeDriver user at https://crbug.com/chromedriver/2967. The user's app uses a version of Protractor that only supports OSS protocol.  OS: All Browser: Chrome Browser version: 75.0.3770.100 Browser Driver version: ChromeDriver 75.0.3770.140 used in the repro, but should apply to any W3C compliant driver Language Bindings version: N/A Selenium standalone server version (if applicable): 3.141.59","closed","R-awaiting answer,","JohnChen0","2019-07-15T20:33:06Z","2019-12-01T21:11:52Z"
"","6918","Large grids (~30 nodes) can encounter lock-ups and NullPointerExceptions when registering nodes","## 🐛 Bug Report  When a bunch of concurrent requests to /grid/register are made, there is a chance that the following exception will occur: ``` java.lang.NullPointerException 	at java.base/java.util.TreeMap.rotateRight(TreeMap.java:2240) 	at java.base/java.util.TreeMap.fixAfterInsertion(TreeMap.java:2272) 	at java.base/java.util.TreeMap.put(TreeMap.java:580) 	at org.openqa.selenium.AbstractCapabilities.setCapability(AbstractCapabilities.java:98) 	at org.openqa.selenium.MutableCapabilities.setCapability(MutableCapabilities.java:100) 	at org.openqa.grid.internal.utils.configuration.GridNodeConfiguration.lambda$fixUpCapabilities$12(GridNodeConfiguration.java:402) 	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:441) 	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:442) 	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1654) 	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) 	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) 	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913) 	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) 	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578) 	at org.openqa.grid.internal.utils.configuration.GridNodeConfiguration.fixUpCapabilities(GridNodeConfiguration.java:410) 	at org.openqa.grid.common.RegistrationRequest.(RegistrationRequest.java:92) 	at org.openqa.grid.common.RegistrationRequest.(RegistrationRequest.java:59) 	at org.openqa.grid.common.RegistrationRequest.(RegistrationRequest.java:48) 	at org.openqa.grid.common.RegistrationRequest.fromJson(RegistrationRequest.java:123) 	at org.openqa.grid.web.servlet.RegistrationServlet.process(RegistrationServlet.java:100) 	at org.openqa.grid.web.servlet.RegistrationServlet.doPost(RegistrationServlet.java:70) ```  When this exception occurs, all further attempts to register fail, regardless of which node makes the registration attempt.  ## To Reproduce  Start a hub, and then have a large number (~30) of nodes connect at once to the hub.     Detailed steps to reproduce the behavior:  Like the above says, once the hub is started, connect a large amount of nodes at the same time (we started seeing it happen with around 20-30 nodes). We've observed this behavior both in a Docker stack that starts the nodes all at once, and in the attached script when run locally sans Docker.  It happens maybe once every 20 times the hub and nodes are started up.  ## Expected behavior  The nodes are expected to connect to the hub without issue, and show up in the /grid/console.  ## Test script or set of commands reproducing this issue  ``` nohup java -jar selenium-server-standalone-3.141.59.jar -role hub >hub.log &2>1 & sleep 10 nohup java -jar selenium-server-standalone-3.141.59.jar -role node -port 5555 -browser browserName=chrome,maxInstances=1 -host 127.0.0.1 -hub http://127.0.0.1:4444/grid/register >node1.log &2>1 & nohup java -jar selenium-server-standalone-3.141.59.jar -role node -port 5554 -browser browserName=chrome,maxInstances=1 -host 127.0.0.1 -hub http://127.0.0.1:4444/grid/register >/dev/null &2>1 & nohup java -jar selenium-server-standalone-3.141.59.jar -role node -port 5553 -browser browserName=chrome,maxInstances=1 -host 127.0.0.1 -hub http://127.0.0.1:4444/grid/register >/dev/null &2>1 & nohup java -jar selenium-server-standalone-3.141.59.jar -role node -port 5552 -browser browserName=chrome,maxInstances=1 -host 127.0.0.1 -hub http://127.0.0.1:4444/grid/register >/dev/null &2>1 & nohup java -jar selenium-server-standalone-3.141.59.jar -role node -port 5551 -browser browserName=chrome,maxInstances=1 -host 127.0.0.1 -hub http://127.0.0.1:4444/grid/register >/dev/null &2>1 & nohup java -jar selenium-server-standalone-3.141.59.jar -role node -port 5550 -browser browserName=chrome,maxInstances=1 -host 127.0.0.1 -hub http://127.0.0.1:4444/grid/register >/dev/null &2>1 & nohup java -jar selenium-server-standalone-3.141.59.jar -role node -port 5549 -browser browserName=chrome,maxInstances=1 -host 127.0.0.1 -hub http://127.0.0.1:4444/grid/register >/dev/null &2>1 & nohup java -jar selenium-server-standalone-3.141.59.jar -role node -port 5548 -browser browserName=chrome,maxInstances=1 -host 127.0.0.1 -hub http://127.0.0.1:4444/grid/register >/dev/null &2>1 & nohup java -jar selenium-server-standalone-3.141.59.jar -role node -port 5547 -browser browserName=chrome,maxInstances=1 -host 127.0.0.1 -hub http://127.0.0.1:4444/grid/register >/dev/null &2>1 & nohup java -jar selenium-server-standalone-3.141.59.jar -role node -port 5546 -browser browserName=chrome,maxInstances=1 -host 127.0.0.1 -hub http://127.0.0.1:4444/grid/register >/dev/null &2>1 & nohup java -jar selenium-server-standalone-3.141.59.jar -role node -port 5545 -browser browserName=chrome,maxInstances=1 -host 127.0.0.1 -hub http://127.0.0.1:4444/grid/register >/dev/null &2>1 & nohup java -jar selenium-server-standalone-3.141.59.jar -role node -port 5544 -browser browserName=chrome,maxInstances=1 -host 127.0.0.1 -hub http://127.0.0.1:4444/grid/register >/dev/null &2>1 & nohup java -jar selenium-server-standalone-3.141.59.jar -role node -port 5543 -browser browserName=chrome,maxInstances=1 -host 127.0.0.1 -hub http://127.0.0.1:4444/grid/register >/dev/null &2>1 & nohup java -jar selenium-server-standalone-3.141.59.jar -role node -port 5542 -browser browserName=chrome,maxInstances=1 -host 127.0.0.1 -hub http://127.0.0.1:4444/grid/register >/dev/null &2>1 & nohup java -jar selenium-server-standalone-3.141.59.jar -role node -port 5541 -browser browserName=chrome,maxInstances=1 -host 127.0.0.1 -hub http://127.0.0.1:4444/grid/register >/dev/null &2>1 & nohup java -jar selenium-server-standalone-3.141.59.jar -role node -port 5540 -browser browserName=chrome,maxInstances=1 -host 127.0.0.1 -hub http://127.0.0.1:4444/grid/register >/dev/null &2>1 & nohup java -jar selenium-server-standalone-3.141.59.jar -role node -port 5539 -browser browserName=chrome,maxInstances=1 -host 127.0.0.1 -hub http://127.0.0.1:4444/grid/register >/dev/null &2>1 & nohup java -jar selenium-server-standalone-3.141.59.jar -role node -port 5538 -browser browserName=chrome,maxInstances=1 -host 127.0.0.1 -hub http://127.0.0.1:4444/grid/register >/dev/null &2>1 & nohup java -jar selenium-server-standalone-3.141.59.jar -role node -port 5537 -browser browserName=chrome,maxInstances=1 -host 127.0.0.1 -hub http://127.0.0.1:4444/grid/register >/dev/null &2>1 & nohup java -jar selenium-server-standalone-3.141.59.jar -role node -port 5536 -browser browserName=chrome,maxInstances=1 -host 127.0.0.1 -hub http://127.0.0.1:4444/grid/register >/dev/null &2>1 & nohup java -jar selenium-server-standalone-3.141.59.jar -role node -port 5535 -browser browserName=chrome,maxInstances=1 -host 127.0.0.1 -hub http://127.0.0.1:4444/grid/register >/dev/null &2>1 & nohup java -jar selenium-server-standalone-3.141.59.jar -role node -port 5534 -browser browserName=chrome,maxInstances=1 -host 127.0.0.1 -hub http://127.0.0.1:4444/grid/register >/dev/null &2>1 & nohup java -jar selenium-server-standalone-3.141.59.jar -role node -port 5533 -browser browserName=chrome,maxInstances=1 -host 127.0.0.1 -hub http://127.0.0.1:4444/grid/register >/dev/null &2>1 & nohup java -jar selenium-server-standalone-3.141.59.jar -role node -port 5532 -browser browserName=chrome,maxInstances=1 -host 127.0.0.1 -hub http://127.0.0.1:4444/grid/register >/dev/null &2>1 & nohup java -jar selenium-server-standalone-3.141.59.jar -role node -port 5531 -browser browserName=chrome,maxInstances=1 -host 127.0.0.1 -hub http://127.0.0.1:4444/grid/register >/dev/null &2>1 & nohup java -jar selenium-server-standalone-3.141.59.jar -role node -port 5530 -browser browserName=chrome,maxInstances=1 -host 127.0.0.1 -hub http://127.0.0.1:4444/grid/register >/dev/null &2>1 & nohup java -jar selenium-server-standalone-3.141.59.jar -role node -port 5529 -browser browserName=chrome,maxInstances=1 -host 127.0.0.1 -hub http://127.0.0.1:4444/grid/register >/dev/null &2>1 & nohup java -jar selenium-server-standalone-3.141.59.jar -role node -port 5528 -browser browserName=chrome,maxInstances=1 -host 127.0.0.1 -hub http://127.0.0.1:4444/grid/register >/dev/null &2>1 & nohup java -jar selenium-server-standalone-3.141.59.jar -role node -port 5527 -browser browserName=chrome,maxInstances=1 -host 127.0.0.1 -hub http://127.0.0.1:4444/grid/register >/dev/null &2>1 & nohup java -jar selenium-server-standalone-3.141.59.jar -role node -port 5526 -browser browserName=chrome,maxInstances=1 -host 127.0.0.1 -hub http://127.0.0.1:4444/grid/register >/dev/null &2>1 & nohup java -jar selenium-server-standalone-3.141.59.jar -role node -port 5525 -browser browserName=chrome,maxInstances=1 -host 127.0.0.1 -hub http://127.0.0.1:4444/grid/register >/dev/null &2>1 & ```  ## Environment  OS: Amazon Linux, macOS Browser: Chrome, Firefox Browser version: Various Browser Driver version: Various Language Bindings version: Unknown Selenium Grid version (if applicable): 3.141.59","closed","C-grid,","gsfraley","2019-02-07T18:24:45Z","2019-08-14T21:09:46Z"
"","7130","python UnexpectedAlertPresentException doesn't contain alert_text string","## 🐛 Bug Report  When `UnexpectedAlertPresentException` is raised the exception attribute `alert_text` is None.  The `alert_text` message _can_ be found within the `msg` attribute but it's a pain to parse out the original alert text string from the rest of the exception message.  It would be nice if the `alert_text` attribute contained the original alert text.  Is this possible on the selenium side of things or is this something chromedriver must remedy?  ## To Reproduce    Raise and catch `UnexpectedAlertPresentException` in python   ## Expected behavior  The `UnexpectedAlertPresentException` attribute `alert_text` should contain the alert.text string.  ## Test script or set of commands reproducing this issue    ## Environment  OS: OSX Browser: Chrome Browser version: 73.0.3683.103 Browser Driver version: chromedriver=2.38.552518 Language Bindings version: python 3.7 Selenium Grid version (if applicable): 3.141.0","closed","","bandophahita","2019-04-23T21:40:19Z","2019-08-14T13:09:43Z"
"","7494","FluentWait might never complete","## 🐛 Bug Report  When `Function` passed to `until` never returns then FluentWait never completes.  ## To Reproduce 1. Set a timeout value (e.g.: 1 second),  2. Pass in a function to until that takes more time then timeout value set in previous step (e.g.: 2 sec).  ## Expected behavior  `FluentWait` throws timeout exception after timeout value set for it has passed.  ## Test script or set of commands reproducing this issue  ```         long start = System.currentTimeMillis();         String actual = new FluentWait(driver)                 .withTimeout(ofSeconds(1))                 .pollingEvery(ofMillis(450))                 .withMessage(""I got bored waiting for this function to complete"")                 .until($ -> {                     try {                         SECONDS.sleep(5);                         return ""I'm done"";                     } catch (InterruptedException e) {                         throw new RuntimeException(e);                     }                 });          long end = System.currentTimeMillis();         assert end - start < 2000; ```","closed","C-java,","utamas","2019-08-14T13:32:03Z","2020-12-21T08:31:02Z"
"","7676","Error at java11 when new drive cause by module","## 🐛 Bug Report  WebDriver driver = new ChromeDriver();  produce an exception at runtime:  ``` Caused by: java.util.ServiceConfigurationError: org.openqa.selenium.remote.session.CapabilitiesFilter: module org.seleniumhq.selenium.remote_driver does not declare `uses` 	at java.base/java.util.ServiceLoader.fail(ServiceLoader.java:588) 	at java.base/java.util.ServiceLoader.checkCaller(ServiceLoader.java:574) 	at java.base/java.util.ServiceLoader.(ServiceLoader.java:503) 	at java.base/java.util.ServiceLoader.load(ServiceLoader.java:1691) 	at org.seleniumhq.selenium.remote_driver/org.openqa.selenium.remote.NewSessionPayload.(NewSessionPayload.java:125) 	at org.seleniumhq.selenium.remote_driver/org.openqa.selenium.remote.NewSessionPayload.create(NewSessionPayload.java:101) 	at org.seleniumhq.selenium.remote_driver/org.openqa.selenium.remote.NewSessionPayload.create(NewSessionPayload.java:94) 	at org.seleniumhq.selenium.remote_driver/org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:69) 	at org.seleniumhq.selenium.remote_driver/org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:139) 	at org.seleniumhq.selenium.remote_driver/org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.seleniumhq.selenium.remote_driver/org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:576) 	at org.seleniumhq.selenium.remote_driver/org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:210) 	at org.seleniumhq.selenium.remote_driver/org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:130) 	at org.seleniumhq.selenium.chromium_driver/org.openqa.selenium.chromium.ChromiumDriver.(ChromiumDriver.java:75) 	at org.seleniumhq.selenium.chrome_driver/org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:163) 	at org.seleniumhq.selenium.chrome_driver/org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:150) 	at org.seleniumhq.selenium.chrome_driver/org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:105) ```  ## To Reproduce  java11 project with maven, >         >            org.seleniumhq.selenium >            selenium-java >            4.0.0-alpha-3 >          module-info.java ```         requires org.seleniumhq.selenium.api;     requires org.seleniumhq.selenium.chrome_driver; ```      when running to following code ```          WebDriver driver = new ChromeDriver(); ```  >Starting ChromeDriver 77.0.3865.40 (f484704e052e0b556f8030b65b953dce96503217-refs/branch-heads/3865@{#442}) on port 44634 Only local connections are allowed. Please protect ports used by ChromeDriver and related test frameworks to prevent access by malicious code.  Then a Exception since the service cannot start.        ## Expected behavior  Exception is from java.base/java.util.ServiceLoader.checkCaller(ServiceLoader.java:574)  ```         // If the caller is in a named module then it should ""uses"" the         // service type         if (!callerModule.canUse(svc)) {             fail(svc, callerModule + "" does not declare `uses`"");         } ```  The problem is at org.seleniumhq.selenium.remote_driver/org.openqa.selenium.remote.NewSessionPayload.(NewSessionPayload.java:125)  ```             ServiceLoader var10000 = ServiceLoader.load(CapabilitiesFilter.class); ```      but java.util.ServiceLoader unable to load class which haven't define uses at module-info.java. Adding  ```         uses org.openqa.selenium.remote.session.CapabilitiesFilter; ```     to module-info of org.seleniumhq.selenium.remote_driver should solve the problem.  ## Environment  OS: Windows 10 Browser:  Browser version:  Browser Driver version:  Language Bindings version: Java 4.0.0-alpha-3  Selenium Grid version (if applicable):","closed","C-java,","baha2046","2019-10-11T09:36:40Z","2019-12-17T20:36:57Z"
"","7624","OutOfMemoryError on session creation caused by large JSON","## 🐛 Bug Report  We run Selenium tests in Maven using Junit and RemoteWebDriver, and sometimes it fails with OutOfMemory error. We got a heap dump of one of the failed builds, and Eclipse Memory Analyzer shows that heap space is 95+% occupied by two char arrays. These two arrays look like this:  ``` {\u000a  ""desiredCapabilities"": {\u000a    ""acceptInsecureCerts"": true,\u000a    ""browserName"": ""firefox"",\u000a    ""enableLog"": false,\u000a    ""enableVNC"": true,\u000a    ""loggingPrefs"": {\u000a      ""browser"": ""ALL""\u000a    },\u000a    ""enableLog"": false,\u000a    ""enableVNC"": true,\u000a    ""loggingPrefs"": {\u000a      ""browser"": ""ALL""\u000a    },\u000a    ""enableLog"": false,\u000a    ""enableVNC"": true,\u000a    ""loggingPrefs"": {\u000a      ""browser"": ""ALL""\u000a    },\u000a    ""enableLog"": false,\u000a    ""enableVNC"": true,\u000a    ""loggingPrefs"": {\u000a      ""browser"": ""ALL""\u000a    },\u000a    ""enableLog"": false,\u000a    ""enableVNC"": true,\u000a    ""loggingPrefs"": {\u000a      ""browser"": ""ALL""\u000a    },\u000a    ""enableLog"": false,\u000a    ""enableVNC"": true,\u000a    ""loggingPrefs"": {\u000a      ""browser"": ""ALL""\u000a    },\u000a    ""enableLog"": false,\u000a    ""enableVNC"": true,\u000a    ""loggingPrefs"": {\u000a      ""browser"": ""ALL""\u000a    },\u000a    ""enableLog"": false,\u000a    ""enableVNC"": true,\u000a    ""loggingPrefs"": {\u000a      ""browser"": ""ALL""\u000a    },\u000a    ""enableLog"": false,\u000a    ""enableVNC"": true,\u000a    ""loggingPrefs"": {\u000a      ""browser"": ""ALL""\u000a    },\u000a    ""enableLog"": false,\u000a    ""enableVNC"": ... ```  and contain both around 300M characters (Xmx is 1024m).   [Here ](https://gist.github.com/aekrylov/3517bd168845d3dd96515c8cffa389e4) is a gist with relevant Java code and thread stacktrace from the dump  ## To Reproduce  This happens randomly, looks like mostly with Firefox and not Chrome. Capabilities are set up like this:  ```java @RunWith(Parameterized.class) public abstract class BaseTest {   protected static final String gridUrl = System.getProperty(""selenium.grid.url"");   protected final WebDriver browser;   protected final DesiredCapabilities capability;    public BaseTest(DesiredCapabilities capability) throws MalformedURLException {     this.capability = capability;     LoggingPreferences logPrefs = new LoggingPreferences();     logPrefs.enable(LogType.BROWSER, Level.ALL);       capability.setCapability(CapabilityType.LOGGING_PREFS, logPrefs);       capability.setCapability(""enableLog"", System.getProperty(""enableLog"") != null);       capability.setCapability(""enableVNC"", System.getProperty(""enableVNC"") != null);      RemoteWebDriver remoteDriver = new RemoteWebDriver(new URL(gridUrl), capability);      browser = new Augmenter().augment(remoteDriver);   }    @Parameterized.Parameters(name = ""{index}: {0}"")   public static LinkedList getBrowsers() {     LinkedList browsers = new LinkedList();       browsers.add(new DesiredCapabilities[] {DesiredCapabilities.chrome()});       browsers.add(new DesiredCapabilities[] {DesiredCapabilities.firefox()});     return browsers;   } } ```  ## Environment  OS: Debian 9.9 stretch Browser: Firefox Browser version: 69.0 Browser Driver version: GeckoDriver 0.24.0 Language Bindings version: Java 3.141.0","closed","C-java,","aekrylov","2019-10-01T09:15:33Z","2020-04-18T22:16:50Z"
"","7536","Chrome browser launched through C# selenium is not able to login to our application having azure authentication","## 🐛 Bug Report  We are using c# selenium for automating our scripts in chrome browser. The browser launched through the scripts were working as expected before two weeks. But suddenly the chrome browser is not able to login to my application using azure authentication.  ## To Reproduce string url = """"  ChromeOptions options = new ChromeOptions(); options.AddAdditionalCapability(""useAutomationExtension"", false);  options.AddArgument(""-no-sandbox""); driver = new ChromeDriver(options); driver.Navigate().GoToUrl(url); driver.Manage().Window.Maximize();  We are running the above script and providing the user name for azure authentication. After providing the username and click Next,it is throwing an error message and not allowing us to proceed. PFA the screenshot. We have tried with enabling and disabling addins,but same result. ![chrome login](https://user-images.githubusercontent.com/26160703/64242019-6ad9b100-cf22-11e9-95f2-c4c4e9a7c8fd.jpg)  --------------------------------------- We had discussed the same with the IT team and their response- ""The issue that needs to be raised to Selenium is that when applications (specifically chrome with the windows 10 accounts addin enabled) are run through their automation engine they lose the ability to use hybrid device registration/modern authentication to authenticate to Azure applications.  This causes our conditional access rules to block access to those hosted applications""    OS: Windows 10 Browser: Chrome Browser version: 76.0.3809 Browser Driver version:  ChromeDriver 75.0.3770.140 Language Bindings version: C# through visual studio Selenium Grid version (if applicable): No","closed","","VinitGopee","2019-09-04T09:14:08Z","2019-10-16T18:09:44Z"
"","7787","Returned value cannot be converted to Boolean: {} on isDisplayed() method.","## 🐛 Bug Report  Using the isDisplayed() method is returning this error: Returned value cannot be converted to Boolean: {} I find that this happens on several elements on the site I test.  ## To Reproduce  Run the test on the attached project from the repo I made to reproduce the issue.  ## Expected behavior  isDisplayed() should return true or false.  ## Test script or set of commands reproducing this issue  https://github.com/Julioevm/selenium_java_error  ## Environment  OS: Ubuntu 18.04 Browser: Chrome Browser version: 78.0.3904.70 Browser Driver version: ChromeDriver 78.0.3904.70 Language Bindings version: Java 3.141.59","closed","","Julioevm","2019-11-14T12:05:16Z","2019-12-17T16:32:09Z"
"","7513","Documentation: missing template for selenium grid node/hub configs","## 🐛 Bug Report  using selenium-server-standalone-3.141.59.jar from cli: `java -jar selenium-server-standalone-3.141.59.jar -role node -nodeConfig seleniumNode.json` gives me this error: `Exception in thread ""main"" org.openqa.grid.common.exception.GridConfigurationException: Deprecated -nodeConfig file encountered. Please update the file to work with Selenium 3. See https://github.com/SeleniumHQ/selenium/wiki/Grid2#configuring-the-nodes-by-json for more details.`  the documentation on the above page (https://github.com/SeleniumHQ/selenium/wiki/Grid2#configuring-the-nodes-by-json)  states: A sample nodeconfig file for server version 3.x.x (>= beta4) can be seen at https://github.com/SeleniumHQ/selenium/blob/master/java/server/src/org/openqa/grid/common/defaults/DefaultNodeWebDriver.json  the link points to 404 and i was not able to find any DefaultNodeWebDriver.json in the selenium project (using github's find file)  attaching the sample .json (github won't allow .json, so it's .txt instead) [seleniumNode.txt](https://github.com/SeleniumHQ/selenium/files/3529500/seleniumNode.txt)  OS: any Browser: n/a Browser version: n/a Browser Driver version: n/a Language Bindings version: n/a **Selenium Grid version (if applicable):  3.141.59**","closed","C-docs,","dvasilev86","2019-08-22T09:53:59Z","2020-05-20T22:41:54Z"
"","7148","Selenium operations malfunction with Outlook on Chrome","## 🐛 Bug Report  Using Selenium with Outlook on Chrome results in prolonged response times (approximately five minutes) for each element search.  To reproduce the behavior any set of simple actions would suffice (our repo is to complex to include here), e.g. waiting for an element to be displayed, click an element, etc.  ## Environment  OS: Windows 10  Browser: Chrome Browser version:  73.0.3683.103 Browser Driver version: ChromeDriver 2.46.628402 Language Bindings version: Python 2.7.13 Selenium Grid version: 3.141.0","closed","","v-shakur","2019-04-28T10:15:08Z","2019-08-14T12:09:54Z"
"","7515","moveToElement on Firefox throws MoveTargetOutOfBoundsException","## 🐛 Bug Report  Using Selenium 3.141.59 on JDK11, moveToElement using FirefoxDriver (Firefox 68.0.2, Geckodriver 0.24.0) throws a MoveTargetOutOfBoundsException. Same code works when using ChromeDriver.   ## To Reproduce  Compile and run the attached Java code  ## Expected behavior  The selected element is scrolled into view and clicked  ## Test script or set of commands reproducing this issue ```Java public class BugDemo { 	public static void main(String[] args) { 		WebDriver driver =  new FirefoxDriver(); 		try { 			driver.manage().timeouts().implicitlyWait(3, TimeUnit.SECONDS); 			driver.manage().window().maximize(); 			driver.navigate().to(""http://automationpractice.com""); 			 			var rootElement = driver.findElements(By.className(""ajax_block_product"")).stream() 			        .filter(e->e.findElement(By.className(""product-name"")).getText().equalsIgnoreCase(""Printed Summer Dress"")) 			        .findFirst() 			        .orElseThrow(); 			 			// To click the product first it needs to be scrolled into view 			// The JavascriptExecutor is required here because geckodriver doesn't 			// execute moveToElement correctly 			// ((JavascriptExecutor) driver).executeScript(""arguments[0].scrollIntoView(true);"", rootElement); 			new Actions(driver).moveToElement(rootElement).build().perform(); 			rootElement.findElement(By.className(""quick-view"")).click(); 		} finally { 			driver.quit(); 		} 	} } ``` ## Environment  OS: macOS 10.14.6 Browser: Firefox Browser version: 68.0.2 Browser Driver version: Geckodriver 0.24.0 Language Bindings version: Java 3.141.59","closed","","jflorez","2019-08-23T05:07:17Z","2019-09-23T04:09:35Z"
"","7000","ActionsChains key_action.pause causes ""exception 'value' must be a single unicode point"" in Appium Webview or Chromium","## 🐛 Bug Report  Using python in Appium with an Android device running a hybrid app or the chrome browser: I was attempting to execute: ActionChains(driver).move_to_element(element).click().perform() when I got the exception: 'value' must be a single unicode point  I created an issue against appium: https://github.com/appium/appium/issues/12255 You can see from that discussion that it led to selenium ActionChains. While playing with the code I found the problem is with the code self.w3c_actions.key_action.pause() 2 questions:   1. Why are there 2 key_action.pause() lines? 2. Throughout this class, could the key_action.pause() be replaced with pointer_action.pause(), which does not cause the error?      def click(self, on_element=None):         """"""         Clicks an element.          :Args:          - on_element: The element to click.            If None, clicks on current mouse position.         """"""         if on_element:             self.move_to_element(on_element)         if self._driver.w3c:             self.w3c_actions.pointer_action.click()             self.w3c_actions.key_action.pause()             self.w3c_actions.key_action.pause()         else:             self._actions.append(lambda: self._driver.execute(                                  Command.CLICK, {'button': 0}))         return self   ## To Reproduce  You need to be running Appium Version 1.11.1. (version 1.11.0 returns a different error)  ## Test script or set of commands reproducing this issue from appium import webdriver from selenium.webdriver.common.action_chains import ActionChains from selenium.webdriver.common.actions.action_builder import ActionBuilder  import time import traceback  desired_caps = {} desired_caps['platformName'] = 'Android' desired_caps['platformVersion'] = '8.1' desired_caps['deviceName'] = 'XXXXX' desired_caps['newCommandTimeout'] = '300' desired_caps['automationName'] = 'UIAutomator2' desired_caps['browserName'] = 'Chrome' driver = webdriver.Remote('http://localhost:4723/wd/hub', desired_caps)  try: action = ActionBuilder(driver)     action.key_action.pause()     action.perform()     print('The key_action.pause worked') except Exception:     print('key_action.pause failed')     print(traceback.format_exc())  	 try:     action = ActionBuilder(driver)     action.pointer_action.pause()     action.perform()     print('The pointer_action.pause worked') except Exception:     print('pointer_action.pause failed')     print(traceback.format_exc())  	 time.sleep(5) driver.close_app()  Results: key_action.pause failed Traceback (most recent call last):   File ""W3CActionChainsFailure2.py"", line 20, in      action.perform()   File ""C:\Program Files\Python37\lib\site-packages\selenium\webdriver\common\actions\action_builder.py"", line 76, in perform     self.driver.execute(Command.W3C_ACTIONS, enc)   File ""C:\Program Files\Python37\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 321, in execute     self.error_handler.check_response(response)   File ""C:\Program Files\Python37\lib\site-packages\appium\webdriver\errorhandler.py"", line 29, in check_response     raise wde   File ""C:\Program Files\Python37\lib\site-packages\appium\webdriver\errorhandler.py"", line 24, in check_response     super(MobileErrorHandler, self).check_response(response)   File ""C:\Program Files\Python37\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.InvalidArgumentException: Message: invalid argument from invalid argument: 'value' must be a single unicode point   (Session info: chrome=72.0.3626.105)   (Driver info: chromedriver=2.45.615291 (ec3682e3c9061c10f26ea9e5cdcf3c53f3f74387),platform=Windows NT 6.1.7601 SP1 x86_64)   The pointer_action.pause worked   Appium logs shows: [HTTP] --> POST /wd/hub/session/9dbc8b78-dad3-4401-a929-3df051d26aa4/actions [HTTP] {""actions"":[{""type"":""key"",""id"":""key"",""actions"":[{""type"":""pause"",""duration"":0}]}],""sessionId"":""9dbc8b78-dad3-4401-a929-3df051d 26aa4""} [W3C (9dbc8b78)] Driver proxy active, passing request on via HTTP proxy [debug] [WD Proxy] Matched '/wd/hub/session/9dbc8b78-dad3-4401-a929-3df051d26aa4/actions' to command name 'performActions' [debug] [WD Proxy] Proxying [POST /wd/hub/session/9dbc8b78-dad3-4401-a929-3df051d26aa4/actions] to [POST http://127.0.0.1:8000/wd/hu b/session/0c5d3edc1d5b4eb9d1e6b62914a0ec97/actions] with body: {""actions"":[{""type"":""key"",""id"":""key"",""actions"":[{""type"":""pause"",""dura tion"":0}]}],""sessionId"":""9dbc8b78-dad3-4401-a929-3df051d26aa4""} [debug] [WD Proxy] Got response with status 200: {""sessionId"":""0c5d3edc1d5b4eb9d1e6b62914a0ec97"",""status"":61,""value"":{""message"":""inv alid argument\nfrom invalid argument: 'value' must be a single unicode point\n  (Session info: chrome=72.0.3626.105)\n  (Driver info : chromedriver=2.45.615291 (ec3682e3c9061c10f26ea9e5cdcf3c53f3f74387),platform=Windows NT 6.1.7601 SP1 x86_64)""}} [WD Proxy] Got an unexpected response: {""sessionId"":""0c5d3edc1d5b4eb9d1e6b62914a0ec97"",""status"":61,""value"":{""message"":""invalid argum ent\nfrom invalid argument: 'value' must be a single unicode point\n  (Session info: chrome=72.0.3626.105)\n  (Driver info: chromedr iver=2.45.615291 (ec3682e3c9061c10f26ea9e5cdcf3c53f3f74387),platform=Win... [debug] [W3C (9dbc8b78)] Encountered internal error running command: ProxyRequestError: Could not proxy command to remote server. Or iginal error: The request to /wd/hub/session/9dbc8b78-dad3-4401-a929-3df051d26aa4/actions has failed [debug] [W3C (9dbc8b78)]     at JWProxy.proxy (C:\Users\laors\AppData\Roaming\npm\node_modules\appium\node_modules\appium-base-drive r\lib\jsonwp-proxy\proxy.js:180:13) [debug] [MJSONWP] Matched JSONWP error code 61 to InvalidArgumentError [HTTP]  POST /wd/hub/session/9dbc8b78-dad3-4401-a929-3df051d26aa4/actions [HTTP] {""actions"":[{""type"":""pointer"",""parameters"":{""pointerType"":""mouse""},""id"":""mouse"",""actions"":[{""type"":""pause"",""duration"":0}]}],"" sessionId"":""9dbc8b78-dad3-4401-a929-3df051d26aa4""} [W3C (9dbc8b78)] Driver proxy active, passing request on via HTTP proxy [debug] [WD Proxy] Matched '/wd/hub/session/9dbc8b78-dad3-4401-a929-3df051d26aa4/actions' to command name 'performActions' [debug] [WD Proxy] Proxying [POST /wd/hub/session/9dbc8b78-dad3-4401-a929-3df051d26aa4/actions] to [POST http://127.0.0.1:8000/wd/hu b/session/0c5d3edc1d5b4eb9d1e6b62914a0ec97/actions] with body: {""actions"":[{""type"":""pointer"",""parameters"":{""pointerType"":""mouse""},""i d"":""mouse"",""actions"":[{""type"":""pause"",""duration"":0}]}],""sessionId"":""9dbc8b78-dad3-4401-a929-3df051d26aa4""} [debug] [WD Proxy] Got response with status 200: {""sessionId"":""0c5d3edc1d5b4eb9d1e6b62914a0ec97"",""status"":0,""value"":null} [WD Proxy] Replacing sessionId 0c5d3edc1d5b4eb9d1e6b62914a0ec97 with 9dbc8b78-dad3-4401-a929-3df051d26aa4 [HTTP]  POST /wd/hub/session/9dbc8b78-dad3-4401-a929-3df051d26aa4/appium/app/close [HTTP] {""sessionId"":""9dbc8b78-dad3-4401-a929-3df051d26aa4""} [debug] [W3C (9dbc8b78)] Calling AppiumDriver.closeApp() with args: [""9dbc8b78-dad3-4401-a929-3df051d26aa4""]  ## Environment  OS: Window 7 Browser: Android 8.1 Chrome Browser version: 72.0.3626.105 Browser Driver version: ChromeDriver 2.45.615291 Language Bindings version: Python 3.7.2 Selenium Grid version (if applicable):  3.141.0 Appium Version 1.11.1.  (version 1.11.0 returns a different error)","closed","","jvanyo","2019-03-05T21:57:51Z","2019-08-14T20:09:55Z"
"","7520","IE11 actions in bridge mode move pointer failure","## 🐛 Bug Report  Using driver.actions({bridge:true}) from nodejs module will internally run a script to convert offsets when an requesting a mouse move relative to an element. In Internet Explorer, this script (INTERNAL_COMPUTE_OFFSET_SCRIPT) will return [NaN, NaN], ultimately causing the mouse moveto command to fail.  ## To Reproduce  Create a new IE session and use the action sequence to move the mouse relative to an element.  When the script is executed in the browser, an example selenium response is: ` {""state"":""success"", ""sessionId"":""c89af058-149e-4b4a-b215-493f7586a12e"", ""hCode"":30810529, ""value"":[""-nan(ind)"", ""-nan(ind)""], ""class"":""org.openqa.selenium.remote.Response"", ""status"":0} `  ## Expected behavior  The mouse should be moved to the specified offset and the hover state of the button should be visible.  If the values are NaN, it's suggested to at least honor the original values instead of adding the returned values to the offsets which results in sending a legacy moveto command with: `{""element"":""0"",""xoffset"":""0-nan(ind)"",""yoffset"":""0-nan(ind)""}`  ## Test script or set of commands reproducing this issue   `      let driver = await new webdriver.Builder()                     .forBrowser('internet explorer')                     .build();          try {         await driver.get('http://www.google.com/ncr');         let button = await driver.findElement(By.name('btnK')); //Google Search button                  let actions = driver.actions({bridge: true});         let mouse = actions.mouse();         await actions.move({                  origin: button,                  x: 10,                  y: 5            }).perform();     }      finally {         await driver.quit();     } ` Also, running the INTERNAL_COMPUTE_OFFSET_SCRIPT directly in IE console produces the same 'NaN' result.    ## Environment  OS:  Windows 10 Browser:  Internet Explorer  Browser version: 11 Browser Driver version: NA Language Bindings version: Javascript (NodeJs module)","closed","I-stale,","lkende","2019-08-27T20:56:46Z","2021-12-04T00:06:43Z"
"","7855","Single Actions object with chained actions works differently than separate Actions objects (ClickAndHold with MoveByOffset)","## 🐛 Bug Report  Using **separate Action objects** to perform actions on selenium yields to different results than using **one Action object** with the actions chained, in my case tested with **ClickAndHold** and **MoveByOffset** actions.    ## To Reproduce    - Create a project with the selenium library from Nuget - Instantiate ChromeDriver and navigate to https://www.seleniumeasy.com/test/basic-first-form-demo.html, after that just type something on the textbox. - Get the position for the element ""//input[@id='user-message']"" - Move the mouse to the element with an offset - ClickAndHold on the element - MoveByOffset to select the text inside  -Then try the same with separate actions object, it won't work.  ## Expected behavior  Using both single Actions object with chained actions and separate Actions objects with one action per object should yield the same result   ## Test script or set of commands reproducing this issue  `                     var driver = new ChromeDriver();                      driver.Navigate().GoToUrl(""https://www.seleniumeasy.com/test/basic-first-form-demo.html"");                     Console.ReadLine(); 		    driver.FindElement(By.XPath(""//input[@id='user-message']"")).SendKeys(""dhduUhdsauhduahsduhsaduha"");                      Point pos = driver.FindElement(By.XPath(""//input[@id='user-message']"")).Location; 		                         //Single Actions object with chained actions                     new Actions(driver).MoveByOffset(pos.X + 100, pos.Y + 5).ClickAndHold().MoveByOffset(-50, 0).Perform();                      Console.ReadLine();                     driver.Quit();                     driver = new ChromeDriver();                      driver.Navigate().GoToUrl(""https://www.seleniumeasy.com/test/basic-first-form-demo.html"");                     Console.ReadLine();                      driver.FindElement(By.XPath(""//input[@id='user-message']"")).SendKeys(""dhduUhdsauhduahsduhsaduha""); 		     		    //Separate Action objects                     new Actions(driver).MoveByOffset(pos.X + 100, pos.Y + 5).Perform();                     new Actions(driver).ClickAndHold().Perform();                     new Actions(driver).MoveByOffset(-50, 0).Perform();`  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS: Windows 10 Browser: Chrome Browser version: Latest Browser Driver version: ChromeDriver 78.0.3904.105 Language Bindings version: 3.141.0 Selenium Grid version (if applicable):","closed","","KardoseR","2019-12-08T18:26:01Z","2020-01-14T12:12:38Z"
"","7506","Unable to parse commercial hub URLs using urllib3 >= 1.25","## 🐛 Bug Report  urllib3 >= 1.25 can not parse Selenium Hub URLs that are from commercial Selenium platforms e.g. Cross Browser Testing. Please lock urllib3 to versions lower than 1.25  ## To Reproduce  1. Install selenium `pip install selenium` which installs the latest v1.25.3 of urllib3 2. Install requests `pip install requests`  run following ```python import unittest from selenium import webdriver import requests   class BasicTest(unittest.TestCase):     def setUp(self):          # Put your username and authey below         # You can find your authkey at crossbrowsertesting.com/account         self.username = ""test@nowhere.com""         self.authkey = ""examplekey""          self.api_session = requests.Session()         self.api_session.auth = (self.username, self.authkey)          self.test_result = None          caps = {}          caps['name'] = 'Basic Test Example'         caps['build'] = '1.0'         caps['browserName'] = 'Firefox'         caps['version'] = '65x64'         caps['platform'] = 'Windows 10'         caps['screenResolution'] = '1920x1080'          # start the remote browser on our server         self.driver = webdriver.Remote(             desired_capabilities=caps,             command_executor=""http://%s:%s@hub.crossbrowsertesting.com:80/wd/hub"" % (self.username, self.authkey)         )          self.driver.implicitly_wait(20)      def test_CBT(self):         # We wrap this all in a try/except so we can set pass/fail at the end         try:             # load the page url             print('Loading Url')             self.driver.get('http://crossbrowsertesting.github.io/selenium_example_page.html')              # maximize the window - DESKTOPS ONLY             # print('Maximizing window')             # self.driver.maximize_window()              # check the title             print('Checking title')             self.assertEqual(""Selenium Test Example Page"", self.driver.title)              # if we are still in the try block after all of our assertions that             # means our test has had no failures, so we set the status to ""pass""             self.test_result = 'pass'          except AssertionError as e:              # if any assertions are false, we take a snapshot of the screen, log             # the error message, and set the score to ""during tearDown()"".              snapshot_hash = self.api_session.post(                 'https://crossbrowsertesting.com/api/v3/selenium/' + self.driver.session_id + '/snapshots').json()[                 'hash']             self.api_session.put(                 'https://crossbrowsertesting.com/api/v3/selenium/' + self.driver.session_id + '/snapshots/' + snapshot_hash,                 data={'description': ""AssertionError: "" + str(e)})             self.test_result = 'fail'             raise      def tearDown(self):         print(""Done with session %s"" % self.driver.session_id)         self.driver.quit()         # Here we make the api call to set the test's score.         # Pass it it passes, fail if an assertion fails, unset if the test didn't finish         if self.test_result is not None:             self.api_session.put('https://crossbrowsertesting.com/api/v3/selenium/' + self.driver.session_id,                                  data={'action': 'set_score', 'score': self.test_result})   if __name__ == '__main__':     unittest.main() ```  The following error is generated:  ```python   File ""/Users/name/Documents/quick-tests/cbt/env/lib/python2.7/site-packages/urllib3/request.py"", line 72, in request     **urlopen_kw)   File ""/Users/name/Documents/quick-tests/cbt/env/lib/python2.7/site-packages/urllib3/request.py"", line 150, in request_encode_body     return self.urlopen(method, url, **extra_kw)   File ""/Users/name/Documents/quick-tests/cbt/env/lib/python2.7/site-packages/urllib3/poolmanager.py"", line 314, in urlopen     u = parse_url(url)   File ""/Users/name/Documents/quick-tests/cbt/env/lib/python2.7/site-packages/urllib3/util/url.py"", line 234, in parse_url     raise LocationParseError(url) LocationParseError: Failed to parse: http://test@nowhere.com:examplekey@216.37.72.238:80/wd/hub/session ```  ## Expected behavior  Install an older version of urllib3: `pip install urllib3==1.24.3`  Run the same test file again. The error will change to incorrect auth which is expected behavior.  ## Environment  OS: OSX Browser: Firefox Browser version: 65 Browser Driver version: 0.24 Language Bindings version: Python 3.141.0 and 3.14.0","closed","","j7an","2019-08-20T17:47:57Z","2019-09-22T14:09:35Z"
"","7219","3.142.2 can't find Firefox on FreeBSD","## 🐛 Bug Report  Upgrading to 3.142.2 made selenium-webdriver lose its interest in running my examples and depress me with throwing ""`page.current_path` raised exception: #Selenium::WebDriver::Error::SessionNotCreatedError: Expected browser binary location, but unable to find binary in default location, no 'moz:firefoxOptions.binary' capability provided, and no binary flag set on the command line"" exceptions.  ## To Reproduce  1. Upgrade selenium-webdriver from 3.141.0 to 3.142.2 2. Try running your examples  ## Expected behavior  Selenium finds firefox.  ## Environment  FreeBSD 11.2-RELEASE-p10, more or less default install on multiple servers Normal firefox install (pkg install firefox): firefox-66.0.5,1 Rails 5.2.3 Capybara 3.20.1  I don’t have firefox’ path set in my suite because I had never needed it to be set. I had no similar issue before 3.142.2.  3.142.2 works on MacOS Mojave 3.141.0 works on my FreeBSD CI servers (as well as on MacOS) 3.142.2 doesn’t work on FreeBSD.  The firefox binary (/usr/local/bin/firefox) is in the path.","closed","C-rb,","PeterMozesMerl","2019-05-18T01:29:39Z","2019-08-14T10:09:48Z"
"","7039","UnsupportedCommandException: mouseMoveTo  on Selenium 3.6.0 FF 55.0","## 🐛 Bug Report  UnsupportedCommandException: mouseMoveTo  on Selenium 3.6.0 FF 55.0  I have tried with all combinations of Selenium version and FF Version  -Dsauce.selenium.version=3.6.0 -Dbrowser.version=55.0 -Dsauce.selenium.version=3.6.0 -Dbrowser.version=60.0 -Dsauce.selenium.version=3.5.3 -Dbrowser.version=55.0 -Dsauce.selenium.version=3.6.0 -Dbrowser.version=65.0  -Dsauce.selenium.version=3.7.0 -Dbrowser.version=65.0 -Dsauce.selenium.version=3.8.0 -Dbrowser.version=65.0  I am getting same error for all the above combinations. I tired with gecko version 0.18 and 0.23   ## To Reproduce  Detailed steps to reproduce the behavior:  ## Expected behavior  SendKeys should work with Action  ## Test script or set of commands reproducing this issue          Actions builder = new Actions(pages.getCurrentPage().getDriver());         WebElement element = pages.getCurrentPage().getElementByName(elementName);         builder.sendKeys(element, text).perform();  org.openqa.selenium.UnsupportedCommandException: mouseMoveTo Build info: version: '3.6.0', revision: '6fbf3ec767', time: '2017-09-27T16:15:40.131Z' System info: host: 'WIN-SB3ER6JQ6ME', ip: '172.20.49.113', os.name: 'Windows 10', os.arch: 'x86', os.version: '10.0', java.version: '1.8.0_91' Driver info: driver.version: unknown Command duration or timeout: 0 milliseconds  org.openqa.selenium.UnsupportedCommandException: mouseMoveTo Build info: version: '3.6.0', revision: '6fbf3ec767', time: '2017-09-27T16:15:40.131Z' System info: host: 'WIN-SB3ER6JQ6ME', ip: '172.20.49.113', os.name: 'Windows 10', os.arch: 'x86', os.version: '10.0', java.version: '1.8.0_91' Driver info: driver.version: unknown Command duration or timeout: 0 milliseconds 	(reflection-construct) 	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214) 	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166) 	at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40) 	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:82) 	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:45) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:164) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:586) 	at org.jbehave.web.selenium.RemoteWebDriverProvider$ScreenshootingRemoteWebDriver.execute(RemoteWebDriverProvider.java:134) 	at org.openqa.selenium.remote.RemoteExecuteMethod.execute(RemoteExecuteMethod.java:35) 	at org.openqa.selenium.remote.RemoteMouse.mouseMove(RemoteMouse.java:89) 	at org.openqa.selenium.remote.RemoteMouse.moveIfNeeded(RemoteMouse.java:52) 	at org.openqa.selenium.remote.RemoteMouse.click(RemoteMouse.java:57) 	at org.openqa.selenium.interactions.internal.KeysRelatedAction.focusOnElement(KeysRelatedAction.java:49) 	at org.openqa.selenium.interactions.SendKeysAction.perform(SendKeysAction.java:51) 	at org.openqa.selenium.interactions.CompositeAction.perform(CompositeAction.java:36) 	at org.openqa.selenium.interactions.Actions$BuiltAction.perform(Actions.java:641) 	at org.openqa.selenium.interactions.Actions.perform(Actions.java:594)   ## Environment  OS:  Windows 10  Browser: Firefox  Browser version: 55.0 Browser Driver version: GeckoDriver 0.18 Language Bindings version: Java 1.8.0_91","closed","","saleethmohd","2019-03-18T07:29:53Z","2019-08-14T19:09:45Z"
"","7440","Unable to load webpage when a link on webpage results CORS error","## 🐛 Bug Report  Unable to load webpage when a link on webpage results CORS error [site has been blocked on the requested resource]   ## To Reproduce    Detailed steps to reproduce the behavior: Navigate to saiglobal.com and open Infostore section from the login dropdown value  ## Expected behavior  I am expecting it should navigate to the clicked site from home page. This is working fine when navigated manually  ## Test script or set of commands reproducing this issue  driver.get(""https://www.saiglobal.com/""); WebElement el1 = driver.findElement(By.xpath(""//div[@class='desktop-login']"")); WebElement el2 = driver.findElement(By.xpath(""//div[@class='desktop-login']/ul/li[1]"")); Actions action = new Actions(driver); action.moveToElement(el1).pause(1000).perform(); action.moveToElement(el2).click().perform();  ## Environment  OS:  Mac OS 10.14.6 Browser:  Chrome, Firefox Browser version:  Chrome 75, Firefox 67.0.4 Browser Driver version:  Gecko 0.24, Chrome 75 Language Bindings version:  3.141.59 Selenium Grid version (if applicable):","closed","C-java,","pradeepnyk","2019-07-28T18:09:59Z","2019-08-28T14:09:35Z"
"","7775","Unable to load Chrome extension (crx file) using Chrome Options on Chrome 78","## 🐛 Bug Report  Unable to load extension(crx file) using chrome options in selenium  ## To Reproduce Gist- https://gist.github.com/RohanImmanuel/460110f0a49b50b9a466bc379b0772e9  ## Expected behavior Extension should load in the browser. Driver quits after a 10-second delay   ## Test script or set of commands reproducing this issue Gist- https://gist.github.com/RohanImmanuel/460110f0a49b50b9a466bc379b0772e9  ## Environment Google Chrome- 78.0.3904.97 (Official Build) (64-bit) Revision- 021b9028c246d820be17a10e5b393ee90f41375e-refs/branch-heads/3904@{#859} OS- macOS Version 10.14.6 (Build 18G95) JavaScript- V8 7.8.279.23 ChromeDriver- ChromeDriver 78.0.3904.11 (eaaae9de6b8999773fa33f92ce1e1bbe294437cf-refs/branch-heads/3904@{#86}) Java Selenium Client bindings- 3.9.1  ## Error Stacktrace: ``` Driver info: driver.version: ChromeDriver remote stacktrace: 0   chromedriver78                      0x0000000101041309 chromedriver78 + 3748617 1   chromedriver78                      0x0000000100fd5943 chromedriver78 + 3307843 2   chromedriver78                      0x0000000100d6544f chromedriver78 + 750671 3   chromedriver78                      0x0000000100cc4243 chromedriver78 + 90691 4   chromedriver78                      0x0000000100cc50ad chromedriver78 + 94381 5   chromedriver78                      0x0000000100cc25ba chromedriver78 + 83386 6   chromedriver78                      0x0000000100cf1217 chromedriver78 + 274967 7   chromedriver78                      0x0000000100cee3e3 chromedriver78 + 263139 8   chromedriver78                      0x0000000100cc8d8d chromedriver78 + 109965 9   chromedriver78                      0x0000000100cc9d25 chromedriver78 + 113957 10  chromedriver78                      0x00000001010043ef chromedriver78 + 3498991 11  chromedriver78                      0x0000000101010fed chromedriver78 + 3551213 12  chromedriver78                      0x0000000101010d78 chromedriver78 + 3550584 13  chromedriver78                      0x0000000100fe3499 chromedriver78 + 3363993 14  chromedriver78                      0x0000000101011848 chromedriver78 + 3553352 15  chromedriver78                      0x0000000100ff7ea7 chromedriver78 + 3448487 16  chromedriver78                      0x0000000101027404 chromedriver78 + 3642372 17  chromedriver78                      0x00000001010470f7 chromedriver78 + 3772663 18  libsystem_pthread.dylib             0x00007fff7b7872eb _pthread_body + 126 19  libsystem_pthread.dylib             0x00007fff7b78a249 _pthread_start + 66 20  libsystem_pthread.dylib             0x00007fff7b78640d thread_start + 13  	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) 	at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$new$0(W3CHandshakeResponse.java:57) 	at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$getResponseFunction$2(W3CHandshakeResponse.java:104) 	at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:123) 	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) 	at java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958) 	at java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:126) 	at java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:499) 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:486) 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472) 	at java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:152) 	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) 	at java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:464) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:126) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:73) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:138) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:219) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:142) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:181) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:168) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:157) 	at com.noserver.ChromeExtensionTest.main(ChromeExtensionTest.java:25) ```","closed","","RohanImmanuel","2019-11-12T10:44:06Z","2021-09-05T08:36:05Z"
"","7196","Unable to download Java","## 🐛 Bug Report  Unable to download Java from https://docs.seleniumhq.org/download/  When I navigate to https://docs.seleniumhq.org/download/  ""Selenium Client & WebDriver Language Bindings"" section. And click on ""Download"" next to Java.  Then ""This site can’t be reached"" error message is appearing","closed","","MalenaMiller","2019-05-10T12:13:23Z","2019-08-14T11:09:44Z"
"","7788","Not working using chromium on Ubuntu 19.10 (snaps package)","## 🐛 Bug Report  Ubuntu 19.10 installs chromium/chomedriver as snap package.  Chrome running in snaps has a separate /tmp directory and does not share the /tmp directory with the system. Therefore, the browser cannot see the profile that was created in /tmp when using the default webdriver. Ubuntu provides a patched webdriver.  ## To Reproduce  Use Ubuntu 19.10 ```bash apt-get install chromium-browser chromium-chromedriver ``` Run a java program: ```java System.setProperty(""webdriver.chrome.driver"", ""/snap/bin/chromium.chromedriver""); new ChromeDriver(); ```  ## Expected behavior  It should work start a new chrome browser  ## Actual behavior  The process fails to start with the error message: ``` Error: unknown flag `port' Nov. 14, 2019 2:06:43 NACHM. org.openqa.selenium.os.OsProcess checkForError SEVERE: org.apache.commons.exec.ExecuteException: Process exited with an error: 1 (Exit value: 1) Timed out waiting for driver server to start. ```  The problem is, that the driver service resolves the symlink from /snap/bin/chromium.chromedriver to /usr/bin/snap: ```java this.executable = executable.getCanonicalPath(); ```  It then executes the command: ```bash /usr/bin/snap --port=… ```  snap attempts to find out which program acutally got called by examining the command line (args[0]), does not find chromedriver there and can therefore not start the chromedriver  ## Workaround  ```java  		new ChromeDriver( 				(ChromeDriverService)(new ChromeDriverService.Builder() { 					@Override 					protected File findDefaultExecutable() { 						if (new File(""/snap/bin/chromium.chromedriver"").exists()) { 							return new File(""/snap/bin/chromium.chromedriver"") { 								@Override 								public String getCanonicalPath() throws IOException { 									return this.getAbsolutePath(); 								} 							}; 						} else { 							return super.findDefaultExecutable(); 						} 					} 				}).build() /*, options */); ```  ## Environment  OS: Ubuntu 19.10 (amd64) Browser: Chromium Browser version: Chromium 78.0.3904.97 snap Browser Driver version: ChromeDriver 78.0.3904.97 (021b9028c246d820be17a10e5b393ee90f41375e-refs/branch-heads/3904@{#859}) Language Bindings version: '4.0.0-alpha-3', revision: '8c567de6dc' Java version: '11.0.2'","closed","OS-linux,","michaelzangl","2019-11-14T14:17:12Z","2022-02-06T01:52:56Z"
"","7053","./go build results in ClassNotFoundException: com.facebook.buck.cli.bootstrapper.filesystem.BuckFileSystemProvider","## 🐛 Bug Report  Trying to `./go build` results in an early `ClassNotFoundException: com.facebook.buck.cli.bootstrapper.filesystem.BuckFileSystemProvider` error using Java 8 and Java 10 on Ubuntu 18.04. Tested with latest master and tag selenium-3.141.59.     Full trace for Java 8  ```shell $ ./go build --trace Parsing cpp/build.desc Parsing cpp/iedriverserver/build.desc Parsing javascript/build.desc Parsing javascript/atoms/build.desc Parsing javascript/atoms/fragments/build.desc Parsing javascript/chrome-driver/build.desc Parsing javascript/watir-atoms/build.desc Parsing javascript/android-atoms/build.desc Parsing javascript/selenium-atoms/build.desc Parsing javascript/ie-driver/build.desc Parsing javascript/jsunit/build.desc Parsing javascript/firefox-driver/build.desc Parsing javascript/selenium-core/build.desc Parsing javascript/node/build.desc Parsing javascript/safari-driver/build.desc Parsing javascript/remote/build.desc Parsing javascript/webdriver/build.desc Parsing javascript/webdriver/atoms/build.desc Parsing javascript/webdriver/atoms/inject/build.desc Parsing javascript/webdriver/atoms/fragments/build.desc Parsing javascript/webdriver/atoms/fragments/inject/build.desc Parsing py/build.desc Parsing rb/build.desc Parsing third_party/closure/build.desc Parsing third_party/jruby/build.desc Parsing third_party/firebug/build.desc Parsing third_party/js/wgxpath/build.desc Parsing third_party/js/sizzle/build.desc ** Invoke build (first_time) ** Invoke all (first_time) ** Invoke selenium-java (first_time) ** Invoke //java/client/src/org/openqa/selenium:selenium (first_time) ** Execute //java/client/src/org/openqa/selenium:selenium ./buckw kill Downloading Buck. This may take some time [==================================================] ./buckw build --stamp-build=detect --deep //java/client/src/org/openqa/selenium:selenium Not using buckd because watchman isn't installed. Error: A JNI error has occurred, please check your installation and try again Exception in thread ""main"" java.lang.Error: java.lang.ClassNotFoundException: com.facebook.buck.cli.bootstrapper.filesystem.BuckFileSystemProvider 	at java.base/java.nio.file.FileSystems$DefaultFileSystemHolder.getDefaultProvider(FileSystems.java:141) 	at java.base/java.nio.file.FileSystems$DefaultFileSystemHolder.access$100(FileSystems.java:102) 	at java.base/java.nio.file.FileSystems$DefaultFileSystemHolder$1.run(FileSystems.java:111) 	at java.base/java.nio.file.FileSystems$DefaultFileSystemHolder$1.run(FileSystems.java:109) 	at java.base/java.security.AccessController.doPrivileged(Native Method) 	at java.base/java.nio.file.FileSystems$DefaultFileSystemHolder.defaultFileSystem(FileSystems.java:109) 	at java.base/java.nio.file.FileSystems$DefaultFileSystemHolder.(FileSystems.java:103) 	at java.base/java.nio.file.FileSystems.getDefault(FileSystems.java:190) 	at java.base/java.io.File.toPath(File.java:2290) 	at java.base/java.util.zip.ZipFile$Source.get(ZipFile.java:1220) 	at java.base/java.util.zip.ZipFile$CleanableResource.(ZipFile.java:727) 	at java.base/java.util.zip.ZipFile$CleanableResource.get(ZipFile.java:845) 	at java.base/java.util.zip.ZipFile.(ZipFile.java:245) 	at java.base/java.util.zip.ZipFile.(ZipFile.java:175) 	at java.base/java.util.jar.JarFile.(JarFile.java:341) 	at java.base/jdk.internal.loader.URLClassPath$JarLoader.getJarFile(URLClassPath.java:815) 	at java.base/jdk.internal.loader.URLClassPath$JarLoader.access$900(URLClassPath.java:701) 	at java.base/jdk.internal.loader.URLClassPath$JarLoader$1.run(URLClassPath.java:760) 	at java.base/jdk.internal.loader.URLClassPath$JarLoader$1.run(URLClassPath.java:753) 	at java.base/java.security.AccessController.doPrivileged(Native Method) 	at java.base/jdk.internal.loader.URLClassPath$JarLoader.ensureOpen(URLClassPath.java:752) 	at java.base/jdk.internal.loader.URLClassPath$JarLoader.(URLClassPath.java:727) 	at java.base/jdk.internal.loader.URLClassPath$3.run(URLClassPath.java:495) 	at java.base/jdk.internal.loader.URLClassPath$3.run(URLClassPath.java:478) 	at java.base/java.security.AccessController.doPrivileged(Native Method) 	at java.base/jdk.internal.loader.URLClassPath.getLoader(URLClassPath.java:477) 	at java.base/jdk.internal.loader.URLClassPath.getLoader(URLClassPath.java:446) 	at java.base/jdk.internal.loader.URLClassPath.getResource(URLClassPath.java:312) 	at java.base/jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(BuiltinClassLoader.java:697) 	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:623) 	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581) 	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:190) 	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:499) 	at java.base/java.lang.Class.forName0(Native Method) 	at java.base/java.lang.Class.forName(Class.java:374) 	at java.base/sun.launcher.LauncherHelper.loadMainClass(LauncherHelper.java:650) 	at java.base/sun.launcher.LauncherHelper.checkAndLoadMain(LauncherHelper.java:547) Caused by: java.lang.ClassNotFoundException: com.facebook.buck.cli.bootstrapper.filesystem.BuckFileSystemProvider 	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:583) 	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:190) 	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:499) 	at java.base/java.lang.Class.forName0(Native Method) 	at java.base/java.lang.Class.forName(Class.java:374) 	at java.base/java.nio.file.FileSystems$DefaultFileSystemHolder.getDefaultProvider(FileSystems.java:131) 	... 36 more Exception `RuntimeError' at /home/user/src/selenium/rake-tasks/buck.rb:52 - ./buckw build --stamp-build=detect --deep //java/client/src/org/openqa/selenium:selenium failed with exit code: 1 Exception `#' at /home/user/src/selenium/rake-tasks/buck.rb:52 - ./buckw build --stamp-build=detect --deep //java/client/src/org/openqa/selenium:selenium failed with exit code: 1 Exception `#' at /home/user/src/selenium/rake-tasks/buck.rb:52 - ./buckw build --stamp-build=detect --deep //java/client/src/org/openqa/selenium:selenium failed with exit code: 1 Exception `#' at /home/user/src/selenium/rake-tasks/buck.rb:52 - ./buckw build --stamp-build=detect --deep //java/client/src/org/openqa/selenium:selenium failed with exit code: 1 Exception `#' at /home/user/src/selenium/rake-tasks/buck.rb:52 - ./buckw build --stamp-build=detect --deep //java/client/src/org/openqa/selenium:selenium failed with exit code: 1 go aborted! ./buckw build --stamp-build=detect --deep //java/client/src/org/openqa/selenium:selenium failed with exit code: 1 /home/user/src/selenium/rake-tasks/buck.rb:52:in `block in buck_cmd' uri:classloader:/META-INF/jruby.home/lib/ruby/stdlib/open3.rb:212:in `popen_run' uri:classloader:/META-INF/jruby.home/lib/ruby/stdlib/open3.rb:102:in `popen3' /home/user/src/selenium/rake-tasks/buck.rb:36:in `buck_cmd' /home/user/src/selenium/rake-tasks/buck.rb:227:in `block in (root)' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:240:in `block in execute' org/jruby/RubyArray.java:1735:in `each' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:235:in `execute' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:179:in `block in invoke_with_call_chain' uri:classloader:/META-INF/jruby.home/lib/ruby/stdlib/monitor.rb:214:in `mon_synchronize' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:172:in `invoke_with_call_chain' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:201:in `block in invoke_prerequisites' org/jruby/RubyArray.java:1735:in `each' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:199:in `invoke_prerequisites' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:178:in `block in invoke_with_call_chain' uri:classloader:/META-INF/jruby.home/lib/ruby/stdlib/monitor.rb:214:in `mon_synchronize' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:172:in `invoke_with_call_chain' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:201:in `block in invoke_prerequisites' org/jruby/RubyArray.java:1735:in `each' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:199:in `invoke_prerequisites' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:178:in `block in invoke_with_call_chain' uri:classloader:/META-INF/jruby.home/lib/ruby/stdlib/monitor.rb:214:in `mon_synchronize' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:172:in `invoke_with_call_chain' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:201:in `block in invoke_prerequisites' org/jruby/RubyArray.java:1735:in `each' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:199:in `invoke_prerequisites' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:178:in `block in invoke_with_call_chain' uri:classloader:/META-INF/jruby.home/lib/ruby/stdlib/monitor.rb:214:in `mon_synchronize' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:172:in `invoke_with_call_chain' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:165:in `invoke' uri:classloader:/gems/rake-10.5.0/lib/rake/application.rb:150:in `invoke_task' uri:classloader:/gems/rake-10.5.0/lib/rake/application.rb:106:in `block in top_level' org/jruby/RubyArray.java:1735:in `each' uri:classloader:/gems/rake-10.5.0/lib/rake/application.rb:106:in `block in top_level' uri:classloader:/gems/rake-10.5.0/lib/rake/application.rb:115:in `run_with_threads' uri:classloader:/gems/rake-10.5.0/lib/rake/application.rb:100:in `top_level' uri:classloader:/gems/rake-10.5.0/lib/rake/application.rb:78:in `block in run' uri:classloader:/gems/rake-10.5.0/lib/rake/application.rb:176:in `standard_exception_handling' uri:classloader:/gems/rake-10.5.0/lib/rake/application.rb:75:in `run' uri:classloader:/gems/rake-10.5.0/bin/rake:33:in `' org/jruby/RubyKernel.java:973:in `load' uri:classloader:/META-INF/jruby.home/bin/rake:1:in `' Tasks: TOP => build => all => selenium-java => //java/client/src/org/openqa/selenium:selenium ```   ## To Reproduce  `git clone https://github.com/SeleniumHQ/selenium.git` `./go build`  ## Expected behavior  Build completes without errors.   ## Environment  OS: Ubuntu 18.04.2 LTS, Linux 4.15.0-46-generic x86_64 Python: 2.7.15rc1 (2.7.15~rc1-1)  Java 8: - openjdk version ""1.8.0_191"" - OpenJDK Runtime Environment (build 1.8.0_191-8u191-b12-2ubuntu0.18.04.1-b12) - OpenJDK 64-Bit Server VM (build 25.191-b12, mixed mode)  Java 10: - openjdk version ""10.0.2"" 2018-07-17 - OpenJDK Runtime Environment (build 10.0.2+13-Ubuntu-1ubuntu0.18.04.4) - OpenJDK 64-Bit Server VM (build 10.0.2+13-Ubuntu-1ubuntu0.18.04.4, mixed mode)  ## Notes  If this is actually a problem with buck, I would appreciate pointers on how to narrow the issue down, so I can report it to them. Thanks!","closed","","stoically","2019-03-22T16:32:15Z","2019-08-14T18:10:00Z"
"","7834","ERROR unexpected alert open: Interstitial popups not supported","## 🐛 Bug Report  Try to login using  ""https://login.microsoftonline.com/"". The chromedriver throw an exception when try to handle the login alert. ## To Reproduce  The log: ``` [1575292159.007][INFO]: Done waiting for pending navigations. Status: ok [1575292159.007][INFO]: [d37bc508d460fa85d6d08d56feef02d7] RESPONSE GetAlertMessage ERROR no such alert   (Session info: chrome=78.0.3904.108) [1575292170.996][INFO]: [d37bc508d460fa85d6d08d56feef02d7] COMMAND GetAlertMessage {  } [1575292170.996][DEBUG]: DevTools WebSocket Event: Page.frameScheduledNavigation AA22BF04E772DB54C00E7CDCD23AF4B7 {    ""delay"": 0,    ""frameId"": ""AA22BF04E772DB54C00E7CDCD23AF4B7"",    ""reason"": ""scriptInitiated"",    ""url"": ""https://xxxxxxx/adfs/ls/?client-request-id=xxxxxxxx&wa=wsignin1.0&wtrealm=urn%3afederation%3aMicrosoftOnline&wctx=LoginOptions%3D3%26estsredirect%3d2%26est..."" } [1575292170.996][DEBUG]: DevTools WebSocket Event: Page.frameRequestedNavigation AA22BF04E772DB54C00E7CDCD23AF4B7 {    ""frameId"": ""AA22BF04E772DB54C00E7CDCD23AF4B7"",    ""reason"": ""scriptInitiated"",    ""url"": ""https://xxxxxxxx/adfs/ls/?client-request-id=2xxxxxxxxxxxx&wa=wsignin1.0&wtrealm=urn%3afederation%3aMicrosoftOnline&wctx=LoginOptions%3D3%26estsredirect%3d2%26est..."" } [1575292170.996][DEBUG]: DevTools WebSocket Event: Page.frameStartedLoading AA22BF04E772DB54C00E7CDCD23AF4B7 {    ""frameId"": ""AA22BF04E772DB54C00E7CDCD23AF4B7"" } [1575292170.996][DEBUG]: DevTools WebSocket Event: Page.frameClearedScheduledNavigation AA22BF04E772DB54C00E7CDCD23AF4B7 {    ""frameId"": ""AA22BF04E772DB54C00E7CDCD23AF4B7"" } [1575292170.996][DEBUG]: DevTools WebSocket Event: Page.interstitialShown AA22BF04E772DB54C00E7CDCD23AF4B7 {  } [1575292170.996][DEBUG]: DevTools WebSocket Command: Page.stopLoading (id=278) AA22BF04E772DB54C00E7CDCD23AF4B7 {  } [1575292170.996][INFO]: [d37bc508d460fa85d6d08d56feef02d7] RESPONSE GetAlertMessage ERROR unexpected alert open: Interstitial popups not supported   (Session info: chrome=78.0.3904.108) ```  ## Expected behavior  To be able to handle the alert generated by the login process.  ## Test script or set of commands reproducing this issue `                    WebDriver.Navigate().GoToUrl(startUrl);                    WebDriver.FindElement(By.XPath(""//input[@type='email']"")).SendKeys(email);                    WebDriver.FindElement(By.XPath(""//input[@value='Next']""),Click();                     Thread.Sleep(2000);                     //Switch to the alert                     IAlert alertHandler = WebDriver.SwitchTo().Alert();                     alertHandler.SetAuthenticationCredentials(""email"", ""psw"");                     WebDriver.SwitchTo().DefaultContent(); ` ## Environment  OS:  Windows 10  Browser: Chrome Browser version: 78.0.3904.108  Browser Driver version: Selenium.WebDriver.ChromeDriver 78.0.3904.7000 Language Bindings version: c# Selenium.WebDriver.ChromeDriver 78.0.3904.7000","closed","R-awaiting answer,","cosminPintea","2019-12-02T13:38:01Z","2020-04-18T22:16:20Z"
"","6863","Element.clear() doesn't work on React elements","## 🐛 Bug Report  The WebElement clear() command doesn't work on certain inputs.  I believe it is related to React Components.    ## To Reproduce Run the following script  ``` from selenium import webdriver from time import sleep   driver = webdriver.Chrome() #Can be Firefox as well driver.get('https://reactjs.org/')  name_field = driver.find_element_by_id(""algolia-doc-search"") print(name_field.get_property('value'))  name_field.send_keys('hello') print(name_field.get_property('value'))  sleep(1)  name_field.clear() print(name_field.get_property('value'))  driver.close() ```    Run the script. It will type 'hello' into the search bar, pause, and then send the clear command. The search bar will remain filled.  ## Expected behavior  clear() should empty the search bar.  ## Test script or set of commands reproducing this issue `python tmp.py`  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment OS: Linux pop-os 4.18.0-13-generic Browser: Chrome Browser version: 71.0.3578.98 (64-bit) Browser Driver version: ChromeDriver 2.45 Language Bindings version: Python 3.141.0  -- or --  OS: Linux pop-os 4.18.0-13-generic Browser: Firefox Browser version: 64.0 Browser Driver version: GeckoDriver 0.23.0 Language Bindings version: Python 3.141.0","closed","","jklingen92","2019-01-17T19:07:15Z","2019-08-14T23:09:50Z"
"","7350","Standalone server using vulnerable jetty 9.4.12.v20180830","## 🐛 Bug Report  The used Jetty v9.4.12.v20180830 is containing vulnerabilities please upgrade to 9.4.17+","closed","","iherbak","2019-07-02T11:03:08Z","2019-08-14T06:09:39Z"
"","7672","NullPointerException in RemoteWebElement.isSelected()","## 🐛 Bug Report  The stack trace clearly shows the NPE:  ```java java.lang.NullPointerException 	at org.openqa.selenium.remote.RemoteWebElement.isSelected(RemoteWebElement.java:149) ```  ## To Reproduce It's hard to reproduce this issue. It happens very rarely.","closed","","asolntsev","2019-10-10T19:22:40Z","2019-11-10T07:07:54Z"
"","7338","Not working at WSL Ubuntu (WebDriverError: unknown error: cannot find Chrome binary (chorme is set on path))","## 🐛 Bug Report  The selenium webdriver (4.0.0-alpha.4) were giving an error on build at Node.js v10.15.3  ## To Reproduce  Run the code above at wsl ubuntu on Windows  ```javascript (async () => {      //@ts-ignore     const chromedriver = require('chromedriver')     const { Builder, Capabilities } = require('selenium-webdriver')      await startChromeDriver()     console.log('1');      const driver = await buildDrivers();     console.log('2');     // @ts-ignore     console.log(driver)      driver.get('https://www.google.com.br')     console.log('3');      await stopChromeDriver()      async function buildDrivers() {         const chromeOptions = { args: [] }          if (process.env.DRIVER_ENABLE_GPU !== 'true') {             chromeOptions.args.push('--disable-gpu')             chromeOptions.args.push('--headless')         }          return Promise.resolve(new Builder().withCapabilities(Capabilities.chrome().set('chromeOptions', chromeOptions)).build())     }      async function startChromeDriver() {         // @ts-ignore         await chromedriver.start([`--port=${process.env.CHROME_DRIVER_PORT || 9515}`], true)     }      async function stopChromeDriver() {         // @ts-ignore         await chromedriver.stop()     } })() ```  ## Environment  OS: Ubuntu 18.04.1 LTS (WSL Windows 10) Browser: Chrome Browser version: 75.0.0 Browser Driver version: 75.0.0","closed","OS-linux,","ericoloewe","2019-06-28T12:22:49Z","2021-09-05T08:06:38Z"
"","7134","Python: Cleaning up ErrorInResponseException?","## 🐛 Bug Report  The Python implementation of Selenium uses an exception class called 'ErrorInResponseException'. However, it seems like this exception isn't used for anything useful anymore :  - [It is only assigned to a variable once right before an if-elif-else block where the variable is always assigned a new value.](https://github.com/SeleniumHQ/selenium/blob/master/py/selenium/webdriver/remote/errorhandler.py#L140) - [A bit later, an if-statement checks whether the value of the aforementioned variable is still ErrorInResponseException, which will never be True.](https://github.com/SeleniumHQ/selenium/blob/master/py/selenium/webdriver/remote/errorhandler.py#L206) - [And the program does the same thing a couple of lines later.]( https://github.com/SeleniumHQ/selenium/blob/master/py/selenium/webdriver/remote/errorhandler.py#L233) - ErrorInResponse is not used anywhere else.  Git blame shows that the code was added 9 years ago. It seems to me like this exception class, and the code that I mentiond, can be removed.","closed","","alanverresen","2019-04-24T11:36:39Z","2019-08-14T13:09:38Z"
"","7785","ChromeDriver tests are not included in Bazel build","## 🐛 Bug Report  The new bazel build doesn't build the ChromeDriver tests in java/client/test/org/openqa/selenium/chrome/  ## To Reproduce  run bazel build java/... The Chrome*Test.classes are not built or added to any jar.  We have a PR to add the Chrome tests.","closed","C-build,","TriciaCrichton","2019-11-14T01:02:45Z","2021-09-05T08:19:07Z"
"","7558","""view source"" links in documentation incorrect for JS bindings","## 🐛 Bug Report  The links to the source code from the [JS API documentation](https://seleniumhq.github.io/selenium/docs/api/javascript/index.html) seem to be incorrect. They point to the right repository, but the files and lines they reference are often incorrect.  Thanks for looking into this!  ## To Reproduce  Go to https://seleniumhq.github.io/selenium/docs/api/javascript/module/selenium-webdriver/index_exports_By.html (e.g.) and click on ""view source"". The linked line is not related to `By`.  ## Expected behavior  In this particular example I'd expect a link like https://github.com/SeleniumHQ/selenium/blob/fcc43e2f64cc3bcd8839afb0f0097d8d8adf0ffb/javascript/node/selenium-webdriver/lib/by.js#L116 or https://github.com/SeleniumHQ/selenium/blob/fcc43e2f64cc3bcd8839afb0f0097d8d8adf0ffb/javascript/node/selenium-webdriver/lib/by.js#L121  ## Test script or set of commands reproducing this issue  Not applicable.  ## Environment  OS: any Browser: any Browser version: any Browser Driver version: not applicable Language Bindings version: JS any Selenium Grid version (if applicable): not applicable","closed","C-nodejs,","camilstaps","2019-09-12T06:57:20Z","2021-11-09T00:06:32Z"
"","7169","Possible inconsistent log level regarding node server exception","## 🐛 Bug Report  The level (`INFO`) of this log statement may not be consistent with its context (exception being thrown):  https://github.com/SeleniumHQ/selenium/blob/490f2d5ae0f6fb6f8fe23e6ea87197f80091032a/java/server/src/org/openqa/selenium/grid/node/httpd/NodeServer.java#L146-L148","closed","","khatchad","2019-05-03T22:16:57Z","2019-08-14T11:09:52Z"
"","7835","chromedriver failed to connect to localhost while executing","## 🐛 Bug Report  The issue happened only in Windows 10, never in Windows 7, using the same script and chrome of same version.  The chrome can be launched normally using chromedriver, but failed connect to during excution, with error information: WebDriverException java.net.ConnectException: Failed to connect to localhost/0:0:0:0:0:0:0:1:11454. And the chrome browser can not be closed.     ## To Reproduce  The issue can not be Reproduced  ## Environment  OS: Windows 10 Browser: Chrome Browser version: 68 Browser Driver version: 2.41 Language Bindings version:  Java 1.8 Selenium Grid version (if applicable):","closed","","zhuxysun","2019-12-03T07:24:17Z","2020-01-02T09:37:42Z"
"","7857","[Py] Condition `invisibility_of_element` doesn't work for EventFiringWebElement","## 🐛 Bug Report  The issue exists for `EventFiringWebElement`, as it doesn't extends `WebElement`. Selenium has next bug: ``` class invisibility_of_element_located(object):     """""" An Expectation for checking that an element is either invisible or not     present on the DOM.      locator used to find the element     """"""     def __init__(self, locator):         self.target = locator      def __call__(self, driver):         try:             target = self.target             if not isinstance(target, WebElement):                 target = _find_element(driver, target)             return _element_if_visible(target, False)         except (NoSuchElementException, StaleElementReferenceException):             return True ```  When we pass `EventFiringWebElement` to the expected condition `invisibility_of_element(myEventFiringWebElement)` it goes to: ```             if not isinstance(target, WebElement):                 target = _find_element(driver, target) ``` And fails with ```  def _find_element(driver, by):         """"""Looks up an element. Logs and re-raises ``WebDriverException``         if thrown.""""""         try: >           return driver.find_element(*by) E           TypeError: find_element() argument after * must be an iterable, not EventFiringWebElement ```  ## Environment  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:","closed","I-stale,","vhryhorchuk-amplify","2019-12-09T10:28:11Z","2022-03-16T00:09:41Z"
"","7090","The IE webdriver is stuck when failed to find id : :\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(911) Unable to find managed browser with id","## 🐛 Bug Report  The IE webdriver is stuck and no responding forever unless kill the script when closed a windows by press the customize button on the webpage.     ## To Reproduce    Detailed steps to reproduce the behavior:  ## Expected behavior  Exception thrown or something that webdriver can catch   ## Test script or set of commands reproducing this issue ........ self.click_close_full_screen_button() self.select_current_window() ........  IE webdriver capabilities              caps[""ignoreProtectedModeSettings""] = 1             caps[""browserFocus""]= True             caps[""INTRODUCE_FLAKINESS_BY_IGNORING_SECURITY_DOMAINS""] = True             caps['ignoreProtectedModeSettings'] = True             caps[""IntroduceInstabilityByIgnoringProtectedModeSettings""] = True             caps[""ignoreZoomSetting""] = True             caps[""nativeEvents""] = True             caps[""requireWindowFocus""] = True             caps[""unexpectedAlertBehaviour""] = ""ignore""   ie.log:  T 2019-04-08 11:15:39:100 c:\projects\webdriver\cpp\iedriver\browser.cpp(56) Entering Browser::OnQuit W 2019-04-08 11:15:39:100 c:\projects\webdriver\cpp\iedriver\browser.cpp(58) This instance of Internet Explorer is exiting without an explicit request to close it. Unless you clicked a link that specifically attempts to close the page, that likely means a Protected Mode boundary has been crossed (either entering or exiting Protected Mode). It is highly likely that any subsequent commands to this driver instance will fail. THIS IS NOT A BUG IN THE IE DRIVER! Fix your code and/or browser configuration so that a Protected Mode boundary is not crossed. T 2019-04-08 11:15:39:100 c:\projects\webdriver\cpp\iedriver\documenthost.cpp(277) Entering DocumentHost::PostQuitMessage T 2019-04-08 11:15:39:100 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(295) Entering IECommandExecutor::OnBrowserQuit T 2019-04-08 11:15:39:100 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(829) Entering IECommandExecutor::IsAlertActive T 2019-04-08 11:15:39:100 c:\projects\webdriver\cpp\iedriver\browser.cpp(714) Entering Browser::GetActiveDialogWindowHandle T 2019-04-08 11:15:39:100 c:\projects\webdriver\cpp\iedriver\browser.cpp(218) Entering Browser::GetContentWindowHandle D 2019-04-08 11:15:39:101 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(843) No alert handle is found T 2019-04-08 11:15:39:101 c:\projects\webdriver\cpp\iedriver\browser.cpp(312) Entering Browser::DetachEvents T 2019-04-08 11:15:39:161 c:\projects\webdriver\cpp\iedriver\script.cpp(554) Entering Script::ConvertResultToJsonValue T 2019-04-08 11:15:39:163 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(418) Entering IECommandExecutor::OnScriptWait T 2019-04-08 11:15:39:163 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(890) Entering IECommandExecutor::GetCurrentBrowser T 2019-04-08 11:15:39:163 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(896) Entering IECommandExecutor::GetManagedBrowser W 2019-04-08 11:15:39:163 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(911) Unable to find managed browser with id 52cae60d-0ab7-45cf-a38f-e77b18f68e69     ## Environment  OS: Window10  Browser: IE 11 Browser version:11.1029.16299.0  Browser Driver version: 3.14.0.0.(32 bit)  Language Bindings version: Python 3  Selenium Grid version (if applicable):","closed","D-IE,","150170410","2019-04-08T15:30:27Z","2019-08-14T07:09:57Z"
"","6911","[minor] Unused variable in capabilities#merge()","## 🐛 Bug Report  The function [`capabilities#merge`](https://github.com/SeleniumHQ/selenium/blob/master/javascript/node/selenium-webdriver/lib/capabilities.js#L332) has a step where we convert the input into a `Map` before copying the entries over. The first part of this sets the variable `map` -- presumably intended to be used in the second part -- but the second part ignores the variable:  ```javascript   merge(other) {     if (!other) {       throw new TypeError('no capabilities provided for merge');     }      let map;     if (other instanceof Capabilities) {       map = other.map_;     } else if (other instanceof Map) {       map = other;     } else {       other = toMap(other);  //","closed","C-nodejs,","gangeli","2019-02-03T23:07:08Z","2019-08-14T15:09:39Z"
"","7579","Options.addCookie() signals UnableToSetCookieException when using chromedriver 77 but works when using chromedriver 2.44","## 🐛 Bug Report  The following test works when using chromedriver 2.44, but when using chromedriver 77, the `addCookie` call signals an `UnableToSetCookieException`:  ``` public void testAddCookie() { 	driver = new RemoteWebDriver(new ChromeOptions()); 	driver.get(""http://localhost:8080/test""); 	Date expiry = new Date(2030, 1, 1); 	Cookie addedCookie = new Cookie(""testcookie"", ""testvalue"", ""localhost:8080"", ""/"", expiry, false, false); 	/* ... (see full test in zip file for assertions) */ 	driver.manage().addCookie(addedCookie); 	Cookie retrievedCookie = driver.manage().getCookieNamed(""testcookie""); 	/* ... (see full test in zip file for assertions) */ } ```  I'm not quite sure whether this is a problem in selenium or in chromedriver; it's also unclear why the cookie cannot be set (the chromedriver log just says `RESPONSE AddCookie ERROR unable to set cookie`).  ZIP file with runnable test case: [Test_AddCookie_Java.zip](https://github.com/SeleniumHQ/selenium/files/3630971/Test_AddCookie_Java.zip)  Use `ant -Dchromedriverversion=2.44` to run the test case with chromedriver 2.44, or `ant` to use chromedriver 77.0.3865.40. Pass `-Dchromedriverplatform=…` to use `linux64` or `win32` if not using `mac64`.  ## Environment  OS: macOS 10.13.6 Browser: Chrome Browser version: 77.0.3865.90 Browser Driver version: chromedriver 2.44 and 77.0.3865.40 Language Bindings version: selenium-java-3.141.59","closed","","Rinzwind","2019-09-19T11:35:37Z","2019-10-19T15:23:35Z"
"","7566","Actions.sendKeys does not keep SHIFT key pressed when using chromedriver 77","## 🐛 Bug Report  The following test works when using chromedriver 2.44, but fails when using chromedriver 77.0.3865.40:  ``` driver = new RemoteWebDriver(new ChromeOptions()); driver.get(""https://en.wikipedia.org""); WebElement element = driver.findElementById(""searchInput""); element.click(); (new Actions(driver)).sendKeys(""foo"" + Keys.SHIFT + ""bar"").sendKeys(""baz"").perform(); (new Actions(driver)).sendKeys(""qux"").perform(); assertEquals(""fooBARBAZQUX"", element.getAttribute(""value"")); ```  When using chromedriver 77, the `value` attribute of the element is `foobarbazqux`. Looking at the chromedriver log, this seems to be because the `PerformActions` command that is sent to the driver includes a `keyUp` after the `keyDown` for the SHIFT key, so the key is not held.  In the following case, the test does have the same result using chromedriver 77 as when using chromedriver 2.44:  ``` driver = new RemoteWebDriver(new ChromeOptions()); driver.get(""https://en.wikipedia.org""); WebElement element = driver.findElementById(""searchInput""); element.click(); element.sendKeys(""foo"" + Keys.SHIFT + ""bar""); element.sendKeys(""baz""); assertEquals(""fooBARbaz"", element.getAttribute(""value"")); ```  ZIP file with runnable test cases: [Test SendKeys with SHIFT Java.zip](https://github.com/SeleniumHQ/selenium/files/3610831/Test.SendKeys.with.SHIFT.Java.zip)  Use `ant -Dchromedriverversion=2.44` to run the test cases with chromedriver 2.44, or `ant` to use chromedriver 77.0.3865.40. Pass `-Dchromedriverplatform=…` to use `linux64` or `win32` if not using `mac64`.  ## Environment  OS: macOS 10.13.6 Browser: Chrome Browser version: 77.0.3865.75 Browser Driver version: chromedriver 2.44 and 77.0.3865.40 Language Bindings version: selenium-java-3.141.59","closed","I-stale,","Rinzwind","2019-09-13T16:13:44Z","2021-12-04T00:06:44Z"
"","6857","Selenium 3.14.0 - ""element not clickable at point.."" when trying to interact with elements further up the page (scrolling required)","## 🐛 Bug Report  The following issue appears in both Firefox and Chrome on different OS (linux, win) and different browser/browserdriver versions:   When locating and interacting with elements further down a page, WebDriver auto-scrolls to the element's location. However, if current location is down the page but next element to be located and interacted with would require scrolling up, test crashes saying ""... is not clickable at point (x,y). Other element would receive the click (...)"" The element is enabled/displayed and not covered/overlayed by other elements/animations etc, only thing required is to scroll up.  Fun fact, a millisecond before crashing, it actually does scroll up but still fails with said exception message (I can tell because I've both monitored and created test reports with screenshots to see what actually causes the tests to fail). I've also implemented WebDriverEventListener and added waits to every method (I know, it isn't pretty) just to see if it made any difference - it didn't.  The only thing where Firefox and Chrome differ: WebDriverEventListener.beforeClickOn() - when adding a check if WebElement.isDisplayed() - if not, scroll to element by executing javascript : ((JavascriptExecutor)driver).executeScript(""arguments[0].scrollIntoView();"", element);  Firefox behavior: - element: not displayed, executes javascript and successfully scrolls up the page  Chrome behavior: - element: displayed, ignores script - also ignores script if you tell it to do it each time beforeClickOn or changeValueOf etc (tried tons of variations here)  Note: getting coordinate of WebElement and using javascript window.scrollTo(x,y) is ignored by Chrome as well.    While I know I could enforce clicks with javascript, in my eyes that's not the point of testing ""real"" interactions on a website, for this way I won't know if real users were actually able to click on/write in said element. I also only discovered this issue by accident when testing with testcontainers framework (resolution in containers used seems to be lower, hence more scrolling is required).   ## To Reproduce  Detailed steps to reproduce the behavior:  Go to URL of your choice, locate WebElement further down on the page (WebDriver scrolls down then interacts with WebEelement). Locate WebElement further up the page (WebElement is not in viewport of current location, so scrolling up would be required) and try to click on it. Instead of doing so, browser closes and test crashes with a stacktrace like this:  org.openqa.selenium.WebDriverException: unknown error: Element ... is not clickable at point (163, 16). Other element would receive the click: ...   (Session info: chrome=71.0.3578.98)   (Driver info: chromedriver=2.42.591071 (0b695ff80972cc1a65a5cd643186d2ae582cd4ac),platform=Linux 3.10.0-957.1.3.el7.x86_64 x86_64) (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 0 milliseconds Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z' System info: host: 'digip-build03.inverso.local', ip: '192.168.2.62', os.name: 'Linux', os.arch: 'amd64', os.version: '3.10.0-957.1.3.el7.x86_64', java.version: '10.0.2' Driver info: org.openqa.selenium.remote.RemoteWebDriver Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.42.591071 (0b695ff80972cc..., userDataDir: /tmp/.org.chromium.Chromium...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:42320}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 71.0.3578.98, webStorageEnabled: true, webdriver.remote.sessionid: d500b85187db807617a20879a94...} Session ID: d500b85187db807617a20879a94c1dc1 	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:488) 	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214) 	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166) 	at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40) 	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80) 	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548) 	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:276) 	at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:83) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.base/java.lang.reflect.Method.invoke(Method.java:564) 	at org.openqa.selenium.support.events.EventFiringWebDriver$EventFiringWebElement.lambda$new$0(EventFiringWebDriver.java:403) 	at com.sun.proxy.$Proxy9.click(Unknown Source) 	at org.openqa.selenium.support.events.EventFiringWebDriver$EventFiringWebElement.click(EventFiringWebDriver.java:416) (...) 	at java.base/java.lang.reflect.Method.invoke(Method.java:564) 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124) 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:583) 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719) 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989) 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125) 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109) 	at org.testng.TestRunner.privateRun(TestRunner.java:648) 	at org.testng.TestRunner.run(TestRunner.java:505) 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:455) 	at org.testng.SuiteRunner.access$000(SuiteRunner.java:40) 	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489) 	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52) 	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135) 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) 	at java.base/java.lang.Thread.run(Thread.java:844)   ## Expected behavior  WebDriver locating element, scrolling up to it, then interacting with it like it would if WebElement were located down the page.  ## Test script or set of commands reproducing this issue  I can't provide the actual code due to compliancy policies, but the issue can be reproduced on any site long enough where scrolling up/down a page is required.  ## Environment  OS: Windows 8.1, Linux CentOS7, testcontainers: 1.10.2 (unknown OS) Browser: Chrome, Firefox Browser version: several versions Browser Driver version: several versions Selenium Grid version (if applicable): 3.14.0","closed","R-awaiting answer,","chickenZ42","2019-01-16T09:44:20Z","2019-08-14T23:09:33Z"
"","7542","driver.getKeyboard.sendKeys(…) throws an UnsupportedCommandException when using chromedriver 76.0.3809.126","## 🐛 Bug Report  The following example using `sendKeys` works when using chromedriver 2.44, but throws an `UnsupportedCommandException` exception when using chromedriver 76.0.3809.126:  ``` driver = new RemoteWebDriver(new ChromeOptions()); driver.get(""http://en.wikipedia.org/""); driver.findElementById(""searchInput"").click(); driver.getKeyboard().sendKeys(""Search string""); assertEquals(driver.findElementById(""searchInput"").getAttribute(""value""), ""Search string""); ```  I'm not quite sure whether this is the expected behavior, due to the W3C protocol not supporting `/session/:sessionId/keys` as in the Json Wire protocol, or whether this is a bug with the `sendKeys` not being correctly mapped to the W3C protocol.  ZIP file with a runnable test case: [Test Keyboard SendKeys Java.zip](https://github.com/SeleniumHQ/selenium/files/3582912/Test.Keyboard.SendKeys.Java.zip)  When executed using chromedriver 76.0.3809.126 (execute using `ant`), the test has an error (`org.openqa.selenium.UnsupportedCommandException: sendKeysToActiveElement`); it works when using chromedriver 2.44 (execute using `ant -Dchromedriverversion=2.44`) (pass `-Dchromedriverplatform=…` to use `linux64` or `win32` if not using `mac64`).  ## Environment  OS: macOS 10.13.6 Browser: Chrome Browser version: 76.0.3809.132 Browser Driver version: chromedriver 2.44 and 76.0.3809.126 Language Bindings version: selenium-java-3.141.59","closed","","Rinzwind","2019-09-06T08:17:35Z","2019-10-20T18:23:36Z"
"","6883","Output stream in GeckoDriverService is never closed","## 🐛 Bug Report  The file output stream provided to GeckoDriverService via its static builder class is never closed.  I am running some JUnit tests using Selenium, which will log the browser output to a log file in a folder foo/ . After running the tests, the contents of foo/ are zipped and copied to another folder, passed/ or failed/ , and the foo/ folder is force deleted.  This delete operation is unsuccessful because the log output stream held by the GeckoDriverService isn't closed.  ## To Reproduce  Detailed steps to reproduce the behavior:  Create a FirefoxDriver as below:  `System.setProperty(BROWSER_LOGFILE, ""/path/to/my/log/file.log"");` `return new FirefoxDriver(firefoxOptions);`  After running the test, and having the FirefoxDriver write output to the file given above,  `org.apache.commons.io.FileUtils.forceDelete(new File(""/path/to/my/log/""));`  ## Expected behavior  The directory ""/path/to/my/log/"" and all contents are deleted.  ## Test script or set of commands reproducing this issue  See above.  ## Environment  OS: Windows 10 Browser: Firefox Browser version: 60.3 Browser Driver version: GeckoDriver 0.23 Language Bindings version: Java 3.13","closed","C-java,","benrebak","2019-01-25T11:32:20Z","2019-08-14T22:09:34Z"
"","7795","Empty classifier in selenium-remote-driver et all lead to problems with sbt-launcher","## 🐛 Bug Report  The empty `clarrifier` tags in the generated `pom` file of this project lead to artifacts not being copied to the classpath by `sbt-launcher`  ## To Reproduce  Create an application that depends on `selenium-remote-driver` version `3.141.59` (or any other 3.x version).  ## Expected behavior  Expect jar files to be copied on to the classpath, but none are. If you manually modify the `pom` and comment out the `classifier` elements, everything works as expected.  ## Environment  Selenium Grid version (if applicable): 3.141.59  Note: the empty tags have been creating problems before: https://github.com/SeleniumHQ/selenium/issues/6200","closed","","hvesalai","2019-11-18T19:28:47Z","2019-12-19T14:31:46Z"
"","7083","DesiredCapabilities still uses deprecated feature PLATFORM","## 🐛 Bug Report  The DesireCapabilities class still uses CapabilityType.PLATFORM which is deprecated, instead of CapabilityType.PLATFORM. This is inconsistent and at a certain point, we have to set up both capabilities making sure they're all passed in. We're also not sure the intention of why PLATFORM is @deprecated.     Detailed steps to reproduce the behavior:  ## Expected behavior  When setting up something alike capabilities.put(""platformName"", ""iOS""), it should be passed correctly in DesiredCapabilities.","closed","help wanted,","ZozoZoeLi","2019-04-03T08:43:21Z","2022-01-26T00:09:46Z"
"","6915","The basic project's tests fail from scratch: ./go clean test","## 🐛 Bug Report  The basic project's tests fail from scratch.  ## To Reproduce  Detailed steps to reproduce the behavior: - fork `selenium` repo - run `./go clean test`  ## Actual behavior  Tests fail with [such trace](https://gist.github.com/CrispusDH/3cc7283ef3eddae3d08723aa75316f6f)  ## Expected behavior  Tests pass  ## Environment  OS: macOS Mojave v. 10.14.2","closed","I-enhancement,","CrispusDH","2019-02-06T09:34:07Z","2019-08-14T16:09:40Z"
"","7413","DevTools Network.responseReceived() does not return the timing property","## 🐛 Bug Report  The `responseReceived.getResponse().getTiming()` method always returns `null`.    ## To Reproduce    See below.  ## Expected behavior  `responseReceived.getResponse().getTiming()` returns the value.  ## Test script or set of commands reproducing this issue  ```java   @Test   void testNetworkTraffic() {     try (DevTools devTools = driver.getDevTools()) {       devTools.createSession();       devTools.addListener(Network.responseReceived(), (responseReceived -> {         assertNotNull(responseReceived);         assertNotNull(responseReceived.getResponse());         assertNotNull(responseReceived.getResponse().getTiming());  // failed       }));       devTools.send(Network.enable(Optional.empty(), Optional.empty(), Optional.empty()));       driver.get(""https://www.seleniumhq.org/"");     }   } ```  ## Environment  OS: macOS Mojave Browser: Chrome Browser version: 75 Browser Driver version: ChromeDriver 75.0.3770.8 Language Bindings version:  Java 4.0.0-alpha-2 Selenium Grid version (if applicable):","closed","C-java,","takeya0x86","2019-07-20T14:48:02Z","2019-10-16T14:09:36Z"
"","7354","java.lang.NumberFormatException: when ephemeral port file contains multiple whitespaces","## 🐛 Bug Report  The [LinuxEphemeralPortRangeDetector](https://github.com/SeleniumHQ/selenium/blob/selenium-3.141.59/java/client/src/org/openqa/selenium/net/LinuxEphemeralPortRangeDetector.java) is failing when the file _/proc/sys/net/ipv4/ip_local_port_range_ contains multiple whitespace.  ``` java.lang.NumberFormatException: For input string: """" at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)  ~[na:1.8.0_191] at java.lang.Integer.parseInt(Integer.java:592)  ~[na:1.8.0_191] at java.lang.Integer.parseInt(Integer.java:615)  ~[na:1.8.0_191] at org.openqa.selenium.net.LinuxEphemeralPortRangeDetector.(LinuxEphemeralPortRangeDetector.java:51)  ~[selenium-remote-driver-3.141.59.jar!/:na] at org.openqa.selenium.net.LinuxEphemeralPortRangeDetector.getInstance(LinuxEphemeralPortRangeDetector.java:36)  ~[selenium-remote-driver-3.141.59.jar!/:na] at org.openqa.selenium.net.PortProber.(PortProber.java:44)  ~[selenium-remote-driver-3.141.59.jar!/:na] at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:351)  ~[selenium-remote-driver-3.141.59.jar!/:na] at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:94)  ~[selenium-chrome-driver-3.141.59.jar!/:na] at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:157) ```   ## To Reproduce  Add the following unit test in [LinuxEphemeralPortRangeDetectorTest](https://github.com/SeleniumHQ/selenium/blob/db1c2add0b47d845b7d0d7d67b65cee92d9bb323/java/client/test/org/openqa/selenium/net/LinuxEphemeralPortRangeDetectorTest.java)  ```   @Test   public void decodeEphemeralPortsWithWhitespaces() {     String range =""1234         65533"";     EphemeralPortRangeDetector ephemeralEphemeralPortDetector =       new LinuxEphemeralPortRangeDetector(new StringReader(range));     assertThat(ephemeralEphemeralPortDetector.getLowestEphemeralPort()).isEqualTo(1234);     assertThat(ephemeralEphemeralPortDetector.getHighestEphemeralPort()).isEqualTo(65533);   } ```  ## Expected behavior  All the whitespaces should be ignored.  ## Test script or set of commands reproducing this issue  See above  ## Environment  OS: Linux Browser: Chrome Browser version:  Browser Driver version:  Language Bindings version: Java 8 Selenium Grid version (if applicable): 3.141.59","closed","C-java,","nsotgui","2019-07-03T13:03:39Z","2019-08-17T11:09:34Z"
"","7538","UnhandledPromiseRejectionWarning: NoSuchSessionError: no such session","## 🐛 Bug Report  Tests written without async and not chained with `.then()`, which work fine with v3.6.0, throw a `UnhandledPromiseRejectionWarning: NoSuchSessionError: no such session` error with 4.0.0-alpha.4  ## To Reproduce Run the following test using selenium-webdriver v3.6.0, then again with v4.0.0-alpha.4. ``` const {Builder, By, Key, until} = require('selenium-webdriver'); const driver = new Builder().forBrowser('chrome').build();  driver.get('http://www.google.com'); driver.findElement(By.name('q')).sendKeys('webdriver', Key.RETURN) driver.wait(until.elementLocated(By.css('title')), 1000) driver.getTitle().then(function (title) {   if (title === 'webdriver - Google Search') {     console.log('Test passed');   } else {     console.log('Test failed');   } }); driver.quit(); ``` ## Expected behavior  I would expect the test to complete successfully. Please note that I could not find any documentation stating that tests written this way would not work with v4.0.0-alpha.4. With v3.6.0, I see _node_modules/selenium-webdriver/example/parallel_flows.js_ demonstrates the above test should work, but I do not see that example included with v4.0.0-alpha.4.   ## Environment  OS: OSX 10.13.6 Browser: Chrome Browser version: 76.0.3809.132 Selenium Grid version (if applicable): n/a","closed","C-nodejs,","betweenbrain","2019-09-05T10:12:27Z","2021-09-05T08:34:49Z"
"","7181","Path too long exception","## 🐛 Bug Report  Starting **FirefoxDriver** with **FirefoxProfile** leads to **Exception**:   > The specified path, file name, or both are too long. The fully qualified file name must be less than 260 characters, and the directory name must be less than 248 characters.  Catch: this is behavior for Windows User ""Administrator"", with shorter user name like ""xxxxx"" there is no such exception observed.  This behavior most likely depends on profile used - there are some addons installed (+-15) -  IMHO issue is that method _OpenQA.Selenium.Internal.FileUtilities.CopyDirectory(String sourceDirectory, String destinationDirectory)_  **doesn't expect long paths** - If LOCAL TEMP folder + anonymous.GUID.webdriver-profile folder from selenium + folder structure inside firefox profile are beyond the limit then Exception emerge.   _(In another project i use ZetaLongPaths to deal with such behavior, also .net 4.6.2+ seems to support long paths)_  **Stack Trace**  ``` at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath)    at System.IO.Directory.InternalCreateDirectory(String fullPath, String path, Object dirSecurityObj, Boolean checkHost)    at System.IO.DirectoryInfo.Create()    at OpenQA.Selenium.Internal.FileUtilities.CopyDirectory(String sourceDirectory, String destinationDirectory)    at OpenQA.Selenium.Internal.FileUtilities.CopyDirectory(String sourceDirectory, String destinationDirectory)    at OpenQA.Selenium.Internal.FileUtilities.CopyDirectory(String sourceDirectory, String destinationDirectory)    at OpenQA.Selenium.Internal.FileUtilities.CopyDirectory(String sourceDirectory, String destinationDirectory)    at OpenQA.Selenium.Internal.FileUtilities.CopyDirectory(String sourceDirectory, String destinationDirectory)    at OpenQA.Selenium.Internal.FileUtilities.CopyDirectory(String sourceDirectory, String destinationDirectory)    at OpenQA.Selenium.Internal.FileUtilities.CopyDirectory(String sourceDirectory, String destinationDirectory)    at OpenQA.Selenium.Firefox.FirefoxProfile.WriteToDisk()    at OpenQA.Selenium.Firefox.FirefoxProfile.ToBase64String()    at OpenQA.Selenium.Firefox.FirefoxOptions.GenerateFirefoxOptionsDictionary()    at OpenQA.Selenium.Firefox.FirefoxOptions.ToCapabilities()    at OpenQA.Selenium.Firefox.FirefoxDriver.ConvertOptionsToCapabilities(FirefoxOptions options)    at OpenQA.Selenium.Firefox.FirefoxDriver..ctor(FirefoxDriverService service, FirefoxOptions options, TimeSpan commandTimeout)  ``` ## To Reproduce with long enough user name + TEMP PATH + FF profile (in my case Ghostery addon have long inner folder path) ``` FirefoxProfile _FirefoxProfile = new FirefoxProfile(SeleniumFirefoxProfileDirectory); //""C:\\Temp\\FirefoxProfiles\\p2"" FirefoxDriverService driverService = FirefoxDriverService.CreateDefaultService(); FirefoxOptions options = new FirefoxOptions(); options.Profile = _FirefoxProfile;  IWebDriver driver = new FirefoxDriver(driverService,options,TimeSpan.FromMinutes(3)); ```  Detailed steps to reproduce the behavior:  ## Expected behavior  I would expect browser started with custom profile.   ## Test script or set of commands reproducing this issue  ---  ## Environment  OS: Windows 10 Browser: Firefox Browser version: 66.0.4 Browser Driver version: GeckoDriver 0.24 Language Bindings version: C# 4.0.0 alpha  Selenium Grid version (if applicable):","closed","C-dotnet,","mshot","2019-05-07T10:07:00Z","2022-06-19T00:12:04Z"
"","7239","UnsupportedCommandException in Firefox 67 at sendKeys() to BasicAuth Alert","## 🐛 Bug Report  Since Firefox 67.0 i'm getting UnsupportedCommandException (org.openqa.selenium.UnsupportedCommandException: User prompt of type promptUserAndPass is not supported) while invoking sendKeys() at a basic authentication alert.  Stacktrace: Exception in thread ""main"" org.openqa.selenium.UnsupportedCommandException: User prompt of type promptUserAndPass is not supported Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03' System info: host: 'DDEA0489', ip: '10.177.176.17', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_121' Driver info: org.openqa.selenium.firefox.FirefoxDriver Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 67.0, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20190516215225, moz:geckodriverVersion: 0.24.0, moz:headless: false, moz:processID: 12208, moz:profile: C:\Users\jfrommel\AppData\L..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, platformVersion: 6.1, rotatable: false, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify} Session ID: 67eb9e69-b2e9-4f31-b47f-b53c4a363a09 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552) 	at org.openqa.selenium.remote.RemoteWebDriver$RemoteAlert.sendKeys(RemoteWebDriver.java:963) 	at spielwiese.UseWebDriverDirectlyITCase10.main(UseWebDriverDirectlyITCase10.java:30)  ## To Reproduce  see: Test script  ## Expected behavior  i can enter username and password in alert, accept it and get the desired page loaded  ## Test script or set of commands reproducing this issue  System.setProperty(""webdriver.gecko.driver"", ""/geckodriver-v0.24.0-win64.exe"");  final FirefoxDriver ff = new FirefoxDriver(); ff.get(""https://www.httpwatch.com/httpgallery/authentication/"");  final WebElement displayImage = ff.findElement(By.id(""displayImage"")); displayImage.click();  final WebDriverWait wait = new WebDriverWait(ff, 10); final Alert alert = wait.until(ExpectedConditions.alertIsPresent()); alert.sendKeys(""httpwatch"" + Keys.TAB + ""httpwatch""); alert.accept();  ## Environment  OS: Windows 7 Browser: Firefox Browser version: 67.0 Browser Driver version: geckodriver-v0.24.0-win64.exe Language Bindings version: Java 1.8.0_121 Selenium Grid version (if applicable): not used","closed","","Testomat2018","2019-05-28T08:42:40Z","2019-08-14T06:10:06Z"
"","7330","Several Java typing tests incompatible with W3C spec","## 🐛 Bug Report  Several Java client test cases in TypingTest class rely on the prior selection range and/or text insertion caret position before calling sendKeys() method. This is incompatible with the current definition of Element Send Keys in W3C WebDriver spec. For a normal text input, the spec requires the following two steps as part of Element Send keys implementation:  1. Let current text length be the JavaScript string’s length of element’s API value. 2. Set the text insertion caret using set selection range using current text length for both the start and end parameters.  After executing these two steps, and prior selection range is gone, and the insertion caret would be placed at the end of existing text. This causes failures in the following five tests:  * TypingTest.testChordControlHomeShiftEndDelete * TypingTest.testChordReveseShiftHomeSelectionDeletes * TypingTest.testChordControlCutAndPaste * TypingTest.testDeleteAndBackspaceKeys * TypingTest.testShiftSelectionDeletes  The failures were observed with the latest builds of ChromeDriver, after it is updated to carry out the above two steps from the spec.","closed","G-w3c,","JohnChen0","2019-06-25T21:46:57Z","2020-04-25T08:19:30Z"
"","7790","Setting safari:automaticInspection raises a GridException","## 🐛 Bug Report  Setting `safari:automaticInspection` or `safari:automaticProfiling` raises a `GridException`. Also, I'm unsure if setting these capabilities has any effect on current Safari versions and if they should be removed.  ## To Reproduce  Using Karma with Selenium Grid and the following config fails: ``` [...]       SafariCIGrid: {         base: 'WebDriver',         browserName: 'safari',         config: webdriverConfig,         technologyPreview: true,         ""safari:automaticInspection"": true       }, [...] ``` This is the error message on the hub: ``` 17:46:37.329 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {base: WebDriver, browserName: safari, javascriptEnabled: true, safari:automaticProfiling: true, tags: [], technologyPreview: true, testName: Karma test, version: } 17:46:37.330 INFO [RequestHandler.process] - Error forwarding the new session cannot find : Capabilities {base: WebDriver, browserName: safari, javascriptEnabled: true, safari:automaticProfiling: true, tags: [], technologyPreview: true, testName: Karma test, version: } org.openqa.grid.common.exception.CapabilityNotPresentOnTheGridException: cannot find : Capabilities {base: WebDriver, browserName: safari, javascriptEnabled: true, safari:automaticProfiling: true, tags: [], technologyPreview: true, testName: Karma test, version: } 	at org.openqa.grid.internal.ProxySet.verifyAbilityToHandleDesiredCapabilities(ProxySet.java:153) 	at org.openqa.grid.internal.DefaultGridRegistry.addNewSessionRequest(DefaultGridRegistry.java:217) 	at org.openqa.grid.web.servlet.handler.RequestHandler.process(RequestHandler.java:111) 	at org.openqa.grid.web.servlet.DriverServlet.process(DriverServlet.java:85) 	at org.openqa.grid.web.servlet.DriverServlet.doPost(DriverServlet.java:69) 	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707) 	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790) 	at org.seleniumhq.jetty9.servlet.ServletHolder.handle(ServletHolder.java:865) 	at org.seleniumhq.jetty9.servlet.ServletHandler.doHandle(ServletHandler.java:535) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:146) 	at org.seleniumhq.jetty9.security.SecurityHandler.handle(SecurityHandler.java:548) 	at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:257) 	at org.seleniumhq.jetty9.server.session.SessionHandler.doHandle(SessionHandler.java:1595) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:255) 	at org.seleniumhq.jetty9.server.handler.ContextHandler.doHandle(ContextHandler.java:1340) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:203) 	at org.seleniumhq.jetty9.servlet.ServletHandler.doScope(ServletHandler.java:473) 	at org.seleniumhq.jetty9.server.session.SessionHandler.doScope(SessionHandler.java:1564) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:201) 	at org.seleniumhq.jetty9.server.handler.ContextHandler.doScope(ContextHandler.java:1242) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:144) 	at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132) 	at org.seleniumhq.jetty9.server.Server.handle(Server.java:503) 	at org.seleniumhq.jetty9.server.HttpChannel.handle(HttpChannel.java:364) 	at org.seleniumhq.jetty9.server.HttpConnection.onFillable(HttpConnection.java:260) 	at org.seleniumhq.jetty9.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:305) 	at org.seleniumhq.jetty9.io.FillInterest.fillable(FillInterest.java:103) 	at org.seleniumhq.jetty9.io.ChannelEndPoint$2.run(ChannelEndPoint.java:118) 	at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:333) 	at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:310) 	at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:168) 	at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:126) 	at org.seleniumhq.jetty9.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:366) 	at org.seleniumhq.jetty9.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:765) 	at org.seleniumhq.jetty9.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:683) 	at java.lang.Thread.run(Thread.java:748) 2019-11-14 17:46:37.379:WARN:osjs.HttpChannel:qtp811587677-15: /wd/hub/session java.io.IOException: org.openqa.grid.common.exception.GridException: Cannot extract a capabilities from the request:  ``` ## Expected behavior  The session should be created, which it is, if the offending parameter is removed.  ## Test script or set of commands reproducing this issue For example, `karma start --browsers SafariCIGrid`  ## Environment  OS: macOS 10.15.1 Browser: Safari Browser version: Version 13.0.3 (15608.3.10.1.4) and Technology Preview Release 95 (Safari 13.1, WebKit 15609.1.7) Browser Driver version: Built-in SafariDriver Language Bindings version: Karma Selenium Grid version (if applicable): 3.141.59","closed","C-grid,","neben","2019-11-14T19:11:05Z","2022-02-13T00:08:25Z"
"","7370","Sendkeys is typing one by one character in IE browser for Windows 10","## 🐛 Bug Report  Sendkeys is typing one by one character in text field in IE browser for Windows 10 when running through GRID node. It is typing entire text for windows 7 for the same version of IE driver and selenium grid version.    ## To Reproduce  Run the test script in windows 10 in IE browser for specified versions.   ## Expected behavior sendkeys should type entire word or text in a text field for IE browser in windows 10   ## Environment  OS: Windows 10 Browser: IE Browser version: 11.829.17134.0 Browser Driver version: IEDriverServer_x64_3.13.0 Language Bindings version: Java 3.13 Selenium Grid version (if applicable): 3.13.0","closed","D-IE,","Elakkiyaab","2019-07-08T14:27:50Z","2021-09-05T08:06:32Z"
"","7580","Safari The command 'GET /session/:sessionId/log/types' was not found","## 🐛 Bug Report  Selenium: 3.141.59  `The command 'GET /session/7AC1E560-B662-400E-B403-D2780E2B4FC0/log/types' was not found. Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03' System info: host: 'Pratish-Patel-Mac.local', ip: 'fe80:0:0:0:18f5:f9d9:4106:1738%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.13.6', java.version: '1.8.0_161' Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver Capabilities {acceptInsecureCerts: false, browserName: Safari, browserVersion: 12.1.2, javascriptEnabled: true, platform: MAC, platformName: MAC, safari:automaticInspection: false, safari:automaticProfiling: false, safari:diagnose: false, setWindowRect: true, strictFileInteractability: false, webkit:WebRTC: {DisableICECandidateFiltering: false, DisableInsecureMediaCapture: false}} Session ID: 7AC1E560-B662-400E-B403-D2780E2B4FC0 `   Getting error while running test in safari 12.1.2 Selenium version v3.141.59","closed","","Pratish89","2019-09-19T16:48:32Z","2019-10-20T20:23:35Z"
"","6854","`selenium.common.exceptions.SessionNotCreatedException` issue","## 🐛 Bug Report  selenium.common.exceptions.SessionNotCreatedException: Message: session not created from disconnected: unable to connect to renderer    ## To Reproduce    ``` from selenium import webdriver browser = webdriver.Chrome() browser.get('http://seleniumhq.org/') ```  $ python test.py Traceback (most recent call last):   File ""test.py"", line 2, in      browser = webdriver.Chrome()   File ""/usr/local/lib/python2.7/site-packages/selenium/webdriver/chrome/webdriver.py"", line 81, in __init__     desired_capabilities=desired_capabilities)   File ""/usr/local/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 157, in __init__     self.start_session(capabilities, browser_profile)   File ""/usr/local/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 252, in start_session     response = self.execute(Command.NEW_SESSION, parameters)   File ""/usr/local/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 321, in execute     self.error_handler.check_response(response)   File ""/usr/local/lib/python2.7/site-packages/selenium/webdriver/remote/errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.SessionNotCreatedException: Message: session not created from disconnected: unable to connect to renderer   (Session info: chrome=71.0.3578.98)   (Driver info: chromedriver=2.45.615355 (d5698f682d8b2742017df6c81e0bd8e6a3063189),platform=Mac OS X 10.13.6 x86_64)  ## Expected behavior  Should open the browser  ## Test script or set of commands reproducing this issue  Could not see the browser open.  ## Environment  OS: OSX Browser: Chrome Browser version: 71.0.3578.98 Browser Driver version: ChromeDriver 2.45 Language Bindings version: python 2 Selenium Grid version (if applicable):selenium==3.14.1","closed","","chenrui333","2019-01-15T22:27:47Z","2019-08-14T23:10:03Z"
"","7821","Selenium Node (4.0.0 alpha 3): Rejecting request with host","## 🐛 Bug Report  selenium-server-4.0.0-alpha-3.jar node - not working on remote machine with chromedriver(chrome) and msedgedriver(edge). But working with geckodriver(firefox).  HUB_IP=192.168.167.1 NODE_IP=192.168.167.3  java -jar selenium-server-4.0.0-alpha-3.jar hub --allow-cors --host HUB_IP --port 9999 java -jar selenium-server-4.0.0-alpha-3.jar node --allow-cors --host NODE_IP --port 8888 --detect-drivers --publish-events tcp://HUB_IP:4442 --subscribe-events tcp://HUB_IP:4443  Error from chromium: [1574923703.235][SEVERE]: Rejecting request with host: HUB_IP:9999 [1574923703.252][SEVERE]: Rejecting request with host: HUB_IP:9999 [1574923703.266][SEVERE]: Rejecting request with host: HUB_IP:9999 [1574923703.281][SEVERE]: Rejecting request with host: HUB_IP:9999 [1574923703.293][SEVERE]: Rejecting request with host: HUB_IP:9999  Why hub try start/work with browser? Node should work with browser.","closed","C-java,","kovalev007","2019-11-28T09:47:10Z","2021-09-05T09:12:41Z"
"","7302","Allow to change what IP address is registered to grid","## 🐛 Bug Report  selenium-node does not allow user to specify non-machine IP address to register    ## To Reproduce    Detailed steps to reproduce the behavior:  1. create selenium hub on one machine 2. create VM on another machine to run browsers in, set networking to NAT, make sure to tell your virtualisation env to listen to selenium node port and send it to VM 3. try to register browser in VM to selenium hub and set `-host` to IP address of VM's host machine address (this could even be changed to `-registrationhost` or whatever if it is going to be implemented)  ## Expected behavior  Node is registered to grid  ## Test script or set of commands reproducing this issue  ```yaml version: ""2.4"" services:   selenium:     image: selenium/hub     networks:      - selenium-network     ports:       - 4444:4444   windows_10: #this is the machine I am trying to register to grid     image: tianon/qemu     # Increase scale number if needed     networks:       - selenium-network     devices:       - ""/dev/kvm:/dev/kvm""     ports:       - 5900     volumes:       - ./config/windows/hda.qcow2:/tmp/hda.qcow2       - /usr/share/ovmf/OVMF.fd:/tmp/OVMF.fd:ro     command: start-qemu -bios /tmp/OVMF.fd -usbdevice tablet     environment:       - QEMU_HDA=/tmp/hda.qcow2       - QEMU_CPU=2       - QEMU_RAM=4096       - QEMU_PORTS=5555 4444  networks:   selenium-network: ```  ``` java -Dwebdriver.ie.driver=IEDriverServer.exe -jar selenium-server-standalone-3.141.59.jar -port 5555 -host windows_10. -role node -hub http://selenium.:4444/grid/register -browser ""browserName=internet explorer,version=11,platform=WINDOWS,maxInstances=10"" ``` ## Environment  OS: Linux (Docker but not OS dependant) Browser: Does not matter Browser version: No care Browser Driver version: Havent even gotten to this point Language Bindings version: Not even trying to run anything yet  Selenium Grid version (if applicable): v.3.141.59","closed","C-grid,","mikk150","2019-06-18T12:48:26Z","2019-08-14T07:10:02Z"
"","7647","selenium-4.0.0-alpha-3 has build error in Ubuntu 18.04","## 🐛 Bug Report  selenium-4.0.0-alpha-3 fails to build (using README instructions) on Ubuntu 18.04  ## To Reproduce  Detailed steps to reproduce the behavior:  1. download selenium-4.0.0-alpha-3.tar.gz from https://github.com/SeleniumHQ/selenium/releases/tag/selenium-4.0.0-alpha-3 2. extract it from tar.gz, follow instructions in README to install Bazel, etc. 3. my JDK version is:   `openjdk 11.0.4 2019-07-16 OpenJDK Runtime Environment (build 11.0.4+11-post-Ubuntu-1ubuntu218.04.3) OpenJDK 64-Bit Server VM (build 11.0.4+11-post-Ubuntu-1ubuntu218.04.3, mixed mode, sharing)` 4. `export $JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64/` 5. run `bazel build java/...` (tried with and without `sudo`)  Extracting Bazel installation... Starting local Bazel server and connecting to it... INFO: Invocation ID: 0c7c1394-489a-4ef3-8192-b2c5415e23e7 INFO: Analyzed 561 targets (294 packages loaded, 6663 targets configured). INFO: Found 561 targets... ERROR: /home/rk/.cache/bazel/_bazel_root/6bda101da7da8a5fadeb10e93885527f/external/bazel_tools/tools/jdk/BUILD:318:1: Action external/bazel_tools/tools/jdk/platformclasspath.jar failed (Exit 1) java failed: error executing command external/remotejdk11_linux/bin/java -XX:+IgnoreUnrecognizedVMOptions '--add-exports=jdk.compiler/com.sun.tools.javac.platform=ALL-UNNAMED' -cp ... (remaining 4 argument(s) skipped)  Use --sandbox_debug to see verbose messages from the sandbox Exception in thread ""main"" java.lang.IllegalArgumentException: external/local_jdk 	at jdk.compiler/com.sun.tools.javac.file.Locations$SystemModulesLocationHandler.isCurrentPlatform(Locations.java:1862) 	at jdk.compiler/com.sun.tools.javac.file.Locations$SystemModulesLocationHandler.update(Locations.java:1851) 	at jdk.compiler/com.sun.tools.javac.file.Locations$SystemModulesLocationHandler.handleOption(Locations.java:1798) 	at jdk.compiler/com.sun.tools.javac.file.Locations.handleOption(Locations.java:2062) 	at jdk.compiler/com.sun.tools.javac.file.BaseFileManager.handleOption(BaseFileManager.java:269) 	at jdk.compiler/com.sun.tools.javac.file.BaseFileManager$2.handleFileManagerOption(BaseFileManager.java:222) 	at jdk.compiler/com.sun.tools.javac.main.Option.process(Option.java:1138) 	at jdk.compiler/com.sun.tools.javac.main.Option.handleOption(Option.java:1086) 	at jdk.compiler/com.sun.tools.javac.file.BaseFileManager.handleOption(BaseFileManager.java:232) 	at jdk.compiler/com.sun.tools.javac.main.Arguments.doProcessArgs(Arguments.java:390) 	at jdk.compiler/com.sun.tools.javac.main.Arguments.processArgs(Arguments.java:347) 	at jdk.compiler/com.sun.tools.javac.main.Arguments.init(Arguments.java:246) 	at jdk.compiler/com.sun.tools.javac.api.JavacTool.getTask(JavacTool.java:185) 	at DumpPlatformClassPath.dumpJDK9AndNewerBootClassPath(DumpPlatformClassPath.java:106) 	at DumpPlatformClassPath.main(DumpPlatformClassPath.java:67) Caused by: java.nio.file.NoSuchFileException: external/local_jdk 	at java.base/sun.nio.fs.UnixException.translateToIOException(UnixException.java:92) 	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:111) 	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:116) 	at java.base/sun.nio.fs.UnixFileSystemProvider.isSameFile(UnixFileSystemProvider.java:333) 	at java.base/java.nio.file.Files.isSameFile(Files.java:1530) 	at jdk.compiler/com.sun.tools.javac.file.Locations$SystemModulesLocationHandler.isCurrentPlatform(Locations.java:1860) 	... 14 more INFO: Elapsed time: 41.413s, Critical Path: 1.23s INFO: 4 processes: 4 remote cache hit. FAILED: Build did NOT complete successfully  ## Environment  OS: Ubuntu 18.04   $ uname -a Linux  5.0.0-29-generic #31~18.04.1-Ubuntu SMP Thu Sep 12 18:29:21 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux","closed","C-build,","RonKalian","2019-10-04T14:05:51Z","2019-12-22T13:01:59Z"
"","7317","Choose Certificate hangs Selenium on Chrome","## 🐛 Bug Report  Selenium stops executing code after choose certificate pop-up. Even if i try to handle this window with other tools(Appuium,AutoIT) i simply can't, as no code will be executed pass moment when i click on link that triggers cert pop-up. When i set-up Chrome to auto accept certificate, pop-up won't show but code will still hangs in exact same moment.   ## To Reproduce public class TestChrome{ public static void main (string[] args){ System.setProperty(""webdriver.chrome.driver"", ""c:\\whatever\\chromedriver.exe""); WebDriver driver = new ChromeDriver(); driver.get(""http://www.webpage.com""); driver.findElementByName(""link to button that triggers cert pop-up"").click(); System.out.println(""This code won't execute or any other"");}}  ## Expected behavior  Code should execute further.  ## Environment  OS: Windows 7  Browser:  Chrome   Browser version:  75.0.3770.100 Browser Driver version: 75.0.3770.90  Language Bindings version:  Java 3.141.0  Selenium Grid version (if applicable): 3.141.59","closed","R-awaiting answer,","Hexploit85","2019-06-22T18:33:46Z","2019-08-14T06:09:55Z"
"","7021","Java 9,10 and 11 Support RoadMap","## 🐛 Bug Report  Selenium Standalone server hub and node not working with Java 11 and getting the org.openqa.selenium.WebDriverException: Cannot define class using reflection exception.  Could you please provide the Selenium Roadmap to support Java 11?  ## Environment  OS: Windows Browser: Chrome Browser version: 72 Browser Driver version: ChromeDriver Language Bindings version: java 11.0.2 Selenium Grid version (if applicable):  3.9","closed","R-awaiting answer,","SurPatidar","2019-03-12T05:57:22Z","2019-08-14T11:09:34Z"
"","7597","Selenium JAR v4.0.0-alpha-2 doesn't work with path specified in webdriver.edge.logfile","## 🐛 Bug Report  Selenium JAR v4.0.0-alpha-2 doesn't open EdgeHTML based Edge when `webdriver.edge.logfile` path is specified while running JAR.    ## To Reproduce When I try to open Microsoft Edge using MicrosoftWebDriver with Selenium JAR v4.0.0-alpha-2, and passing path of where it has to save Edge Driver logs(webdriver.edge.logfile), the driver doesn't run (Or Selenium JAR is unable to open MicrosoftWebDriver).    Detailed steps to reproduce the behaviour:  ## Expected behaviour  Let the path to MicrosoftWebDriver be _C:\path\to\driver\MicrosoftWebDriver.exe_. And let the path to Selenium v4.0.0-alpha-2 JAR be _C:\path\to\jar\selenium-server-standalone-4.0.0-alpha-2.jar_. Also, let the path where I want to save log be _C:\path\to\logfile\logfile.log_  Now, when I create a session using Selenium JAR with the following command:  :x: (Doesn't work as it is expected to)  `java -Dwebdriver.edge.driver=""C:\path\to\driver\MicrosoftWebDriver.exe"" -Dwebdriver.edge.logfile=""C:\path\to\logfile\logfile.log"" -jar C:\path\to\jar\selenium-server-standalone-4.0.0-alpha-2.jar`  and then try to create a session by sending a request for the same, the webdriver doesn't open the Edge(EdgeHTML) Browser as it was expected.  However, when I follow the same by removing the log file, it opens the browser as it was expected when sending a request to create a session.  ✅ (Works as expected to) `java -Dwebdriver.edge.driver=""C:\path\to\driver\MicrosoftWebDriver.exe"" -jar C:\path\to\jar\selenium-server-standalone-4.0.0-alpha-2.jar`  **The first command doesn't run the MicrosoftWebDriver and the second one after removing flag for logFile works smoothly as expected.**  Facing this issue in case of 4.0.0-alpha-2. It works file with 4.0.0-alpha-1. (Maybe because of support of Chromium Based Edge)  ## Test script or set of commands reproducing this issue  Not dependent on any test script.  ## Environment  OS:  Windows 10 Browser:  Edge (EdgeHTML) Browser version:  (tried on 41, 42, 43) Browser Driver version:  MicrosoftWebDriver.exe v6.17134 Language Bindings version:  Ruby 3.141.0 Selenium Grid version (if applicable):","closed","C-java,","abhijeetps","2019-09-24T14:10:42Z","2020-04-18T22:16:57Z"
"","6977","Unable to interact with element that is present and enabled","## 🐛 Bug Report  Selenium is unable to interact with an element that is visible on the screen and enabled: The element is an input text field. When retrieved, the element shows positive values on the rectangle: ![image](https://user-images.githubusercontent.com/531256/53518858-8e193480-3a97-11e9-9200-18a520eb15f1.png) Querying for `is_enabled()` returns `True` But querying for `is_displayed()` returns `False` Trying to send any action to the element throws an exception: `ElementNotVisible` It has a unique identifier and there are no other elements that match. I noticed that this started happening when 2 specific CSS properties were added to the container of that element: `overflow-y: auto;` `display: contents;` This was added in order to display the element properly on Edge, but it broke the interaction on Chrome.   ## To Reproduce Here is a short HTML with an example to reproduce the issue: https://jsfiddle.net/k594wjgu/2/  ```                    ```  Here is the code to reproduce (Uses Python selenium bindings) ``` from selenium import webdriver driver = webdriver.Chrome() driver.get(""https://jsfiddle.net/k594wjgu/2/"") driver.switch_to.frame(self.driver.find_element_by_name('result')) driver.find_element_by_name('first_name').is_enabled() # ^ Returns True driver.find_element_by_name('first_name').is_displayed() # ^ Returns False, however if either display: contents; or overflow-y: auto is removed from the form style #then the statement returns True and I can send click or send key actions driver.find_element_by_name('first_name').send_keys('Hello') # ^ Throws ElementNotVisibleException ```  ## Expected behavior  I would expect that I can send actions to any element that is displayed on the viewport and that is enabled  ## Environment  OS: MacOS Mojave 10.14.1 Browser: Chrome Browser version: 72 Browser Driver version: 2.46 Language Bindings version: Python selenium 3.141.0 Selenium Grid version (if applicable): NA","closed","D-atoms,","eduardoreynoso","2019-02-27T23:20:31Z","2019-08-14T17:09:41Z"
"","7305","Project Keeps needing to save as new file","## 🐛 Bug Report  Selenium IDE keeps wanting to save to new file after every change.   ## To Reproduce  1. Start new project 2. Save project 3. Make any sort of edit (add echo command) 4. Attempt to save  ## Expected behavior  File updates state and saves Normally  ## Test script or set of commands reproducing this issue any command is fine echo hello world  ## Environment  OS: Ubuntu Linux 18.04.2 LTS x86_64 Browser: Firefox Browser version: 67.0.3","closed","","panaman67","2019-06-19T17:04:32Z","2019-08-14T08:09:42Z"
"","7303","Selenium addExtensions hook fails to parse CRX3 extensions on ChromeDriver","## 🐛 Bug Report  Selenium (node.js bindings) provides an addExtensions hook to install CRX files into Chromedriver on launch. This hook works fine for CRX2 files, but the extension ID is incorrect when given an CRX3 file as the file is accidentally parsed in the CRX2 format. HOWEVER, the extension ID is CORRECTLY parsed if I drag&drop the exact same extension into the Chrome window created by Selenium.  https://github.com/SebastienGllmt/Chromedriver-Selenium-Bug for in-detailed explanation, reproduction steps and proof of root cause  I'm not sure who's bug this is, so I also [created an issue on ChromeDriver](https://bugs.chromium.org/p/chromedriver/issues/detail?id=2961)","closed","","SebastienGllmt","2019-06-18T20:51:22Z","2019-08-14T08:09:45Z"
"","7521","Cannot set UseSpecCompliantProtocol to false in C# binding in 3.141.0","## 🐛 Bug Report  See commit https://github.com/SeleniumHQ/selenium/commit/005a942a5ce0a63a5917c3eb7386c02a2de8700b#diff-36634a6252409cef3f673d98e220c5e8.  Since Chrome 75, the default setting of the w3c spec compliance has switched to true. However the C# binding only passes the option if it is set to true (assuming the deafult to be false). This means we cannot set it to false at all with the current stable C# binding.  ## Environment  Browser: Chrome Browser version: 75.x and higher Browser Driver version: ChromeDriver 75.x and higher Language Bindings version: C# 3.141.0","closed","D-chrome,","rhpijnacker","2019-08-28T07:30:44Z","2021-09-05T08:10:36Z"
"","7666","Ruby - Unable to upload file when w3c browser capability is set to true","## 🐛 Bug Report  Script is failing to upload with ""Selenium::WebDriver::Error::UnknownCommandError: unknown command: unknown command: session/xxxsession_idXXX/**se/file**"" error message. ## To Reproduce  Try uploading file to a file_feild in the below specified environment.  ## Expected behavior File should be uploaded successfully. But we are getting the below error. ``` Selenium::WebDriver::Error::UnknownCommandError: unknown command: unknown command: session/xxxsession_idXXX/se/file Backtrace:        Ordinal0 [0x00FDEB13+1501971]        Ordinal0 [0x00F5F6D1+980689]         Ordinal0 [0x00EE765F+489055]         Ordinal0 [0x00E9618E+156046]         Ordinal0 [0x00E95FF4+155636]         Ordinal0 [0x00E7220E+8718]   Ordinal0 [0x00E72626+9766]   Ordinal0 [0x00E72C10+11280]  Ordinal0 [0x00F78F37+1085239]        GetHandleVerifier [0x0107D7ED+503293]        GetHandleVerifier [0x0107D580+502672]        GetHandleVerifier [0x010846AC+531644]        GetHandleVerifier [0x0107DFFA+505354]        Ordinal0 [0x00F70606+1050118]        Ordinal0 [0x00F7047F+1049727]        Ordinal0 [0x00E7204B+8267]   Ordinal0 [0x00E71D7C+7548]   GetHandleVerifier [0x013CD83C+3976780]       BaseThreadInitThunk [0x755738F4+36]  RtlUnicodeStringToInteger [0x77375E13+595]   RtlUnicodeStringToInteger [0x77375DDE+542] ``` ## Test script or set of commands reproducing this issue @browser.file_field(xpath: ""//*[contains(text(), 'Upload')]/input[@type='file']"").set(@complete_path)  ## Environment  OS:  Windows 10  Browser: Chrome Browser version:  77 Browser Driver version:  ChromeDriver 77 Language Bindings version: Ruby 3.142.6  Original code: ![image](https://user-images.githubusercontent.com/52928428/66452785-dafeb980-ea2f-11e9-8660-6a6d9fca054c.png)   After removing `/se/` from the below line, file upload is working as expected without error message.  ![image](https://user-images.githubusercontent.com/52928428/66452741-b0146580-ea2f-11e9-9d67-8b7bec6bc3e6.png)  Please let us know if there is any other way to handle this.","closed","C-rb,","sridharUpputuri","2019-10-09T04:58:35Z","2020-04-25T08:19:11Z"
"","7005","Safari Technology Preview keeps scrolling up to the top","## 🐛 Bug Report  Safari Technology Preview keeps scrolling up to the top when I try to run javascript executor script for scrolling and the element does not get clicked.  --> ## Expected behavior  Browser should not scroll to the top and WebElement should be clicked  ## Test script or set of commands reproducing this issue ``` WebElement l = driver.findElement(By.id(""locator"")); JavascriptExecutor jse = (JavascriptExecutor)driver; Point p = l.getLocation(); int yaxis= p.getY()-250; jse.executeScript(""scroll(0,""+yaxis+"")""); l.click(); ``` HTML  ```                                ```  ## Environment  OS: Mac Mojave Browser: Safari Technology Preview Browser version: 76 Browser Driver version: inbuilt Language Bindings version: Java 3.141.0","closed","","riticar","2019-03-06T21:05:37Z","2019-08-14T20:09:38Z"
"","7816","webDriver.WebElement "".isDisplayed"" is not a function","## 🐛 Bug Report  Running selenium-webdriver JavaScript's driver with the following code and getting this error: #### ""TypeError: element.isDisplayed is not a function""  ### Code ``` ""use strict"" require(""chromedriver""); const {Builder, By, Key, until} = require(""selenium-webdriver"");  (async function () {     const driver = await new Builder().forBrowser(""chrome"").build();     try {         await driver.get(""http://domain.tld:8080"");         await driver.findElement(By.css(""div.buttons > button.accept"")).sendKeys(Key.ENTER);         const firstResult = await driver.wait(until.elementIsVisible(By.className(""widget"")), 10000);         console.log(firstResult);     } catch ( error ){       console.error( error )     } finally {         driver.quit();     } })(); ``` ### Stack trace: ``` TypeError: element.isDisplayed is not a function     at /Users/donsky/Projects/Testing/node_modules/selenium-webdriver/lib/until.js:303:20     at Promise (/Users/donsky/Projects/Testing/node_modules/selenium-webdriver/lib/webdriver.js:825:19)     at new Promise ()     at evaluateCondition (/Users/donsky/Projects/Testing/node_modules/selenium-webdriver/lib/webdriver.js:823:14)     at pollCondition (/Users/donsky/Projects/Testing/node_modules/selenium-webdriver/lib/webdriver.js:835:9)     at Promise (/Users/donsky/Projects/Testing/node_modules/selenium-webdriver/lib/webdriver.js:849:7)     at new Promise ()     at Driver.wait (/Users/donsky/Projects/Testing/node_modules/selenium-webdriver/lib/webdriver.js:832:18)     at example (/Users/donsky/Projects/Testing/server.js:14:42)     at process._tickCallback (internal/process/next_tick.js:68:7) ```  ## To Reproduce  run the code snippet with the packages listed at the top of the snippet, it will produce the above error & stack track   ## Expected behavior  The element with css selector `.widget` should be set as the 'firstResult' variable  ## Test script or set of commands reproducing this issue  `npm i chromedriver selenium-webdriver && node script.js`  ## Environment  OS: OSX 10.15.1 Browser Driver version: ChromeDriver:Latest NodeVersion: 10.16.3","closed","C-nodejs,","Donsky-Osano","2019-11-26T20:27:54Z","2020-05-05T21:22:30Z"
"","7274","SELENIUM 3.141.59 with FF 67.0.1 and GECKO driver 0.24","## 🐛 Bug Report  Runnin selenium as Windows service via nssm and the remotewebdriver is intiated and the connection is refused.      ## To Reproduce    Detailed steps to reproduce the behavior:  ## Expected behavior  I want the remote session in the nssm to open a valida firefox session and execute the test.  ## Test script or set of commands reproducing this issue  	    public static void main(String[] args) throws MalformedURLException, InterruptedException { 	    	System.setProperty(""webdriver.gecko.driver"",""C:\\Users\\Administrator\\Downloads\\geckodriver-v0.24.0-win64\\geckodriver.exe""); 	    	WebDriver driver = new FirefoxDriver(); 	    	 	    	FirefoxOptions firefoxOptions = new FirefoxOptions(); 	    	firefoxOptions.setAcceptInsecureCerts(true); 	    	firefoxOptions.setLogLevel(FirefoxDriverLogLevel.TRACE); 	    	FirefoxDriver firefoxDriver = new FirefoxDriver(firefoxOptions); 		     	    	 driver = new RemoteWebDriver(new URL(""http://localhost:5566""), firefoxOptions); 	    	    driver.navigate().to(""http://www.yahoo.com""); 	    		    	driver.get(""https://www.google.com""); 	    	driver.close(); 	    	driver.quit(); 	    }           ## Environment  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:   Selenium Grid version (if applicable):","closed","D-firefox,","atchuth23","2019-06-09T17:22:37Z","2020-04-18T22:16:28Z"
"","7158","Ruby persistent client fails with wrong number of arguments error","## 🐛 Bug Report  Ruby persistent client fails with wrong number of arguments error  This is a new issue introduced with 3.142.0 and does not affect 3.141.0  ## To Reproduce Instantiating the driver using the persistent client: ``` profile = Selenium::WebDriver::Firefox::Profile.new client = Selenium::WebDriver::Remote::Http::Persistent.new browser = Watir::Browser.new :firefox, profile: profile, http_client: client ``` Produces the error: ``` 12: from /var/lib/gems/2.5.0/gems/watir-6.16.5/lib/watir/browser.rb:46:in `initialize' 11: from /var/lib/gems/2.5.0/gems/selenium-webdriver-3.142.0/lib/selenium/webdriver.rb:88:in `for' 10: from /var/lib/gems/2.5.0/gems/selenium-webdriver-3.142.0/lib/selenium/webdriver/common/driver.rb:54:in `for' 9: from /var/lib/gems/2.5.0/gems/selenium-webdriver-3.142.0/lib/selenium/webdriver/firefox/driver.rb:33:in `new' 8: from /var/lib/gems/2.5.0/gems/selenium-webdriver-3.142.0/lib/selenium/webdriver/firefox/driver.rb:33:in `new' 7: from /var/lib/gems/2.5.0/gems/selenium-webdriver-3.142.0/lib/selenium/webdriver/firefox/marionette/driver.rb:44:in `initialize' 6: from /var/lib/gems/2.5.0/gems/selenium-webdriver-3.142.0/lib/selenium/webdriver/remote/bridge.rb:102:in `create_session' 5: from /var/lib/gems/2.5.0/gems/selenium-webdriver-3.142.0/lib/selenium/webdriver/remote/bridge.rb:167:in `execute' 4: from /var/lib/gems/2.5.0/gems/selenium-webdriver-3.142.0/lib/selenium/webdriver/remote/http/common.rb:64:in `call' 3: from /var/lib/gems/2.5.0/gems/selenium-webdriver-3.142.0/lib/selenium/webdriver/remote/http/default.rb:82:in `request' 2: from /var/lib/gems/2.5.0/gems/selenium-webdriver-3.142.0/lib/selenium/webdriver/remote/http/persistent.rb:54:in `response_for' 1: from /var/lib/gems/2.5.0/gems/selenium-webdriver-3.142.0/lib/selenium/webdriver/remote/http/default.rb:71:in `http' /var/lib/gems/2.5.0/gems/net-http-persistent-3.0.1/lib/net/http/persistent.rb:706:in `start': wrong number of arguments (given 0, expected 1) (ArgumentError) ```  ## Expected behaviour Should instantiate without error.  ## Environment  OS: Ubuntu bionic 64 bit Browser: Mozilla Firefox Browser version: 67.0b2 Browser Driver version: GeckoDriver 0.24 Language Bindings version: ruby 2.5.1p57 (2018-03-29 revision 63029) [x86_64-linux-gnu] Selenium Webdriver: 3.142.0 net-http-persistent: 3.0.1","closed","C-rb,","theDogOfPavlov","2019-04-30T13:00:05Z","2019-08-14T12:09:37Z"
"","7151","Ruby add_extension requires the addon ID to be provided in the manifest, but does not honour it","## 🐛 Bug Report  Ruby add_extension requires the addon ID to be provided in the manifest, but does not honour it.  related issues: https://github.com/SeleniumHQ/selenium/pull/6550 https://github.com/SeleniumHQ/selenium/issues/6471    ## To Reproduce   When adding an extension directly to firefox, if the addon ID is not provided in the manifest, then a temporary one is created and assigned.  Detailed steps to reproduce the behaviour in Ruby Selenium:  If the addon ID is not provided then an error is generated: ``` 1556528802974	addons.xpi	DEBUG	New add-on injector@1.0.0 in app-profile 1556528803006	addons.xpi-utils	DEBUG	New add-on injector@1.0.0 installed in app-profile 1556528803091	addons.xpi-utils	WARN	addMetadata: Add-on injector@1.0.0 is invalid: Error: Invalid addon ID: expected addon ID injector@1.0.0, found undefined in manifest(resource://gre/modules/addons/XPIDatabase.jsm:2357:15) JS Stack trace: addMetadata@XPIDatabase.jsm:2357:15 ```  If the addon ID is provided (in the recommended format) then an error is generated: ``` 1556532350039	addons.xpi	DEBUG	New add-on injector@1.0.0 in app-profile 1556532350071	addons.xpi-utils	DEBUG	New add-on injector@1.0.0 installed in app-profile 1556532350160	addons.xpi-utils	WARN	addMetadata: Add-on injector@1.0.0 is invalid: Error: Invalid addon ID: expected addon ID injector@1.0.0, found injector@injected.com in manifest(resource://gre/modules/addons/XPIDatabase.jsm:2357:15) JS Stack trace: addMetadata@XPIDatabase.jsm:2357:15  ```  If the addon ID is provided in the format preferred by selenium (name@version) then the extension is loaded: ``` 1556532773570	addons.xpi	DEBUG	New add-on injector@1.0.0 in app-profile 1556532773601	addons.xpi-utils	DEBUG	New add-on injector@1.0.0 installed in app-profile 1556532773767	addons.manager	DEBUG	Registering startup change 'installed' for injector@1.0.0 1556532773770	addons.xpi	DEBUG	Loading bootstrap scope from file:///tmp/rust_mozprofile.awdd2tQ6RVlm/extensions/injector@1.0.0/ 1556532773770	addons.xpi	DEBUG	Calling bootstrap method install on injector@1.0.0 version 1.0.0 1556532773770	addons.xpi-utils	DEBUG	Make addon app-profile:injector@1.0.0 visible 1556532773770	addons.xpi	DEBUG	Updating XPIState for {""id"":""injector@1.0.0"",""syncGUID"":""{bb2801d2-9ef5-44b4-a4a1-e4e3f5879bce}"",""version"":""1.0.0"",""type"":""extension"",""loader"":null,""updateURL"":null,""optionsURL"":null,""optionsType"":null,""optionsBrowserStyle"":true,""aboutURL"":null,""defaultLocale"":{""name"":""injector"",""creator"":null,""developers"":null,""translators"":null,""contributors"":null},""visible"":true,""active"":false,""userDisabled"":false,""appDisabled"":false,""installDate"":1556532763000,""updateDate"":1556532763000,""applyBackgroundUpdates"":1,""path"":""/tmp/rust_mozprofile.awdd2tQ6RVlm/extensions/injector@1.0.0"",""skinnable"":false,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":true,""strictCompatibility"":true,""locales"":[],""targetApplications"":[{""id"":""toolkit@mozilla.org"",""minVersion"":null,""maxVersion"":null}],""targetPlatforms"":[],""signedState"":-1,""seen"":true,""dependencies"":[],""incognito"":""spanning"",""userPermissions"":{""permissions"":[],""origins"":[""http://*/*"",""https://*/*""]},""icons"":{},""iconURL"":null,""blocklistState"":0,""blocklistURL"":null,""startupData"":null,""hidden"":false,""installTelemetryInfo"":{""source"":""app-profile"",""method"":""sideload""},""rootURI"":""file:///tmp/rust_mozprofile.awdd2tQ6RVlm/extensions/injector@1.0.0/"",""location"":""app-profile""} 1556532773774	addons.xpi	DEBUG	Updating XPIState for {""id"":""injector@1.0.0"",""syncGUID"":""{bb2801d2-9ef5-44b4-a4a1-e4e3f5879bce}"",""version"":""1.0.0"",""type"":""extension"",""loader"":null,""updateURL"":null,""optionsURL"":null,""optionsType"":null,""optionsBrowserStyle"":true,""aboutURL"":null,""defaultLocale"":{""name"":""injector"",""creator"":null,""developers"":null,""translators"":null,""contributors"":null},""visible"":true,""active"":true,""userDisabled"":false,""appDisabled"":false,""installDate"":1556532763000,""updateDate"":1556532763000,""applyBackgroundUpdates"":1,""path"":""/tmp/rust_mozprofile.awdd2tQ6RVlm/extensions/injector@1.0.0"",""skinnable"":false,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":true,""strictCompatibility"":true,""locales"":[],""targetApplications"":[{""id"":""toolkit@mozilla.org"",""minVersion"":null,""maxVersion"":null}],""targetPlatforms"":[],""signedState"":-1,""seen"":true,""dependencies"":[],""incognito"":""spanning"",""userPermissions"":{""permissions"":[],""origins"":[""http://*/*"",""https://*/*""]},""icons"":{},""iconURL"":null,""blocklistState"":0,""blocklistURL"":null,""startupData"":null,""hidden"":false,""installTelemetryInfo"":{""source"":""app-profile"",""method"":""sideload""},""rootURI"":""file:///tmp/rust_mozprofile.awdd2tQ6RVlm/extensions/injector@1.0.0/"",""location"":""app-profile""} 1556532773783	addons.xpi	DEBUG	Calling bootstrap method startup on injector@1.0.0 version 1.0.0 1556532774666	addons.xpi	DEBUG	Existing add-on injector@1.0.0 in app-profile ```   ## Expected behaviour  The extension import should work as it does directly in firefox, either creating a temporary ID for the session, or honouring the addon ID in the manifest. And once imported, becoming active by default.  ## Test script or set of commands reproducing this issue  manifest.json ``` {   ""manifest_version"": 2,   ""name"": ""injector"",   ""version"": ""1.0.0"",   ""applications"": {     ""gecko"": {       ""id"": ""injector@injected.com""     }   },   ""content_scripts"": [     {       ""matches"": [         ""http://*/*"",         ""https://*/*""       ],       ""js"": [         ""injector.js""       ]     }   ] } ```  injector.js ``` document.body.innerHTML = ""INJECTED!""; ```   ## Environment  OS: Ubuntu bionic 64 bit Browser: Mozilla Firefox Browser version: 67.0b2 Browser Driver version: GeckoDriver 0.24 Language Bindings version: ruby 2.5.1p57 (2018-03-29 revision 63029) [x86_64-linux-gnu] Selenium Webdriver: 3.141.0 (latest version has unrelated fatal error)","closed","C-rb,","theDogOfPavlov","2019-04-29T10:28:12Z","2019-08-14T12:09:37Z"
"","7492","Remote Connection __init__ removes Square bracket around IPV6 from the URL","## 🐛 Bug Report  Remote Connection __init__ removes Square bracket around IPV6 from the URL  ## To Reproduce Python Appium webdriver is called as below   driver = webdriver.Remote(             command_executor=""http://[xxxx:xxxx:xxx:xxxx:xxxx::xx]/slot11"",             desired_capabilities={                 'appPackage': 'xxxxxxx',                 'platformName': 'Android',                 'automationName': 'UIAutomator2',                 'platformVersion': ""9"",                 'deviceName': ""xxxxxxx"",                 'appActivity': 'xxxxxxx'                 'systemPort': 8223,                 'udid': ""cef7d2b4"",                 'uiautomator2ServerLaunchTimeout':60000             }) Throws below exception  Traceback (most recent call last):   File ""/Users/ajay.bukan/PycharmProjects/RCSATP/venv/TestFramework/TestBed.py"", line 335, in      TestConnection(rcs.APP)   File ""/Users/ajay.bukan/PycharmProjects/RCSATP/venv/TestFramework/TestBed.py"", line 283, in TestConnection     'uiautomator2ServerLaunchTimeout':60000   File ""/Users/ajay.bukan/PycharmProjects/RCSATP/venv/lib/python3.7/site-packages/appium/webdriver/webdriver.py"", line 144, in __init__     proxy   File ""/Users/ajay.bukan/PycharmProjects/RCSATP/venv/lib/python3.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 152, in __init__     self.start_session(capabilities, browser_profile)   File ""/Users/ajay.bukan/PycharmProjects/RCSATP/venv/lib/python3.7/site-packages/appium/webdriver/webdriver.py"", line 219, in start_session     response = self.execute(RemoteCommand.NEW_SESSION, parameters)   File ""/Users/ajay.bukan/PycharmProjects/RCSATP/venv/lib/python3.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 316, in execute     response = self.command_executor.execute(driver_command, params)   File ""/Users/ajay.bukan/PycharmProjects/RCSATP/venv/lib/python3.7/site-packages/selenium/webdriver/remote/remote_connection.py"", line 375, in execute     return self._request(command_info[0], url, body=data)   File ""/Users/ajay.bukan/PycharmProjects/RCSATP/venv/lib/python3.7/site-packages/selenium/webdriver/remote/remote_connection.py"", line 398, in _request     resp = self._conn.request(method, url, body=body, headers=headers)   File ""/Users/ajay.bukan/PycharmProjects/RCSATP/venv/lib/python3.7/site-packages/urllib3/request.py"", line 72, in request     **urlopen_kw)   File ""/Users/ajay.bukan/PycharmProjects/RCSATP/venv/lib/python3.7/site-packages/urllib3/request.py"", line 150, in request_encode_body     return self.urlopen(method, url, **extra_kw)   File ""/Users/ajay.bukan/PycharmProjects/RCSATP/venv/lib/python3.7/site-packages/urllib3/poolmanager.py"", line 314, in urlopen     u = parse_url(url)   File ""/Users/ajay.bukan/PycharmProjects/RCSATP/venv/lib/python3.7/site-packages/urllib3/util/url.py"", line 234, in parse_url     raise LocationParseError(url) urllib3.exceptions.LocationParseError: Failed to parse: http://xxxx:xxxx:xxx:xxxx:xxxx::xx/slot11/session  remote_connections.py seems to cause this URL is parsed and then while un parsing again only IPV6 is added back without square brackets  ## Environment  OS: Mac OS Appium Python Client: 0.46 Selenium :  4.0.0a1","closed","","bukanajay","2019-08-14T06:16:37Z","2019-09-13T07:09:35Z"
"","7851","Relative Locator ""near"" doesn't work in some case","## 🐛 Bug Report  Relative Locator ""near"" doesn't work in some case. I tried to find element near by ""second"" cell on this HTML (same of relative_locator_test.html).  ```html         1     2     3           4     5     6           7     8     9     ```  ```java driver.findElements(withTagName(""td"").near(By.id(""second""))) ```  I expected to find eight elements but actually found six elements. The ""center"" and ""eighth"" cell is missing. See below image, red is found cell.    ## To Reproduce    Add below test method to https://github.com/SeleniumHQ/selenium/blob/selenium-4.0.0-alpha-3/javascript/atoms/test/relative_locator_test.html .  And run FAILED.  ```javascript function testShouldBeAbleToFindAnElementNearSecond() {   var found = bot.locators.findElements({relative: {root: {tagName: 'td'}, filters: [{kind: ""near"", args: [{id: ""second""}]}]}});    assertEquals(8, found.length);   assertEquals(""first"", found[0].getAttribute(""id""));   // Note: an element is not near itself.   assertEquals(""third"", found[1].getAttribute(""id""));   assertEquals(""fourth"", found[2].getAttribute(""id""));   assertEquals(""center"", found[3].getAttribute(""id""));   assertEquals(""sixth"", found[4].getAttribute(""id""));   assertEquals(""seventh"", found[5].getAttribute(""id""));   assertEquals(""eighth"", found[6].getAttribute(""id""));   assertEquals(""ninth"", found[7].getAttribute(""id"")); } ```  ## Expected behavior  Find ALL of near elements.  ## Test script or set of commands reproducing this issue  See above.  ## Environment  OS: macOS Browser: Chrome Browser version: 78.0.3904.108 Browser Driver version: ChromeDriver 78.0.3904.105 Language Bindings version: 4.0.0-alpha-3 Selenium Grid version (if applicable):","closed","R-awaiting answer,","takeya0x86","2019-12-07T15:17:07Z","2021-09-05T08:06:49Z"
"","7071","not filled input with type= number in chrom version 73","## 🐛 Bug Report  recently for function testing i installed selenium plugin on Chrome version 73. in test excute i founded that selenium did not fill inputs with type=number. after changing type to text every thing worked perfectly.   Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS: Win 10 Browser: Chrome Browser version: Version 73.0.3683.86 (Offizieller Build) (64-Bit) Browser Driver version:  Language Bindings version:   Selenium IDE version (if applicable): 3.5.8","closed","","ghost","2019-03-29T16:28:44Z","2019-08-14T17:09:43Z"
"","7359","WebDriverException: Message: unknown error: bad inspector message","## 🐛 Bug Report  Problem is described in detail here https://stackoverflow.com/questions/56880164/selenium-parsing-unicode-problem-webdriverexception-message-unknown-error-ba?noredirect=1#comment100310339_56880164  Basically the problem is Selenium can't parse the HTML or text of the elements because the elements are invalid unicode characters.  I get the same error using any of: driver.page_source, element.text, element.get_attribute('innerHTML')  Error looks like   WebDriverException: Message: unknown error: bad inspector message: {""id"":327,""result"":{""result"":{""type"":""object"",""value"":{""status"":0,""value"":""Belle Nog\uD83D\uDC83\uD83C\uDFFC\u2708\uFE0F\uD83C\uDDE7\uD83C\uDDF7\uD83C\uDDEA\uD83C\uDDF8\uD83C\uDDFA\uD83C...""}}}}   (Session info: chrome=75.0.3770.100)   (Driver info: chromedriver=2.40.565386 (45a059dc425e08165f9a10324bd1380cc13ca363),platform=Mac OS X 10.14.0 x86_64)  The offending characters are somewhere around ""\uD83C\uDDF7\uD83C""  You can see at https://ibb.co/HtkzzPM the screen shot where the unicode characters (emojis) aren't rendering. The ""U"" and the ""?"" are actually flag emojis.      ## To Reproduce  It's hard to tell you how to reproduce because the page is behind a paywall","closed","D-chrome,","AxleMaxGit","2019-07-05T04:30:05Z","2020-01-25T22:59:16Z"
"","7235","Chromedriver hangs after quit","## 🐛 Bug Report  OS: 4.4.0-143-generic #169-Ubuntu SMP Thu Feb 7 07:56:38 UTC 2019 x86_64 GNU/Linux (Docker container) Browser: Chrome Browser version: 74.0.3729.169 Browser Driver version: Chromedriver 74.0.3729.6 Language Bindings version:  Ruby 2.6.2  I use Selenium with Chromedriver in my Docker container. I've noticed that after a job is finished and I invoke `driver.quit` the process is still hanging. I'm not using a selenium hub but I think it should work anyway. Here's what I have:  Dockerfile: ``` ... RUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \     && echo ""deb http://dl.google.com/linux/chrome/deb/ stable main"" >> /etc/apt/sources.list.d/google.list RUN apt-get update && apt-get -y install google-chrome-stable RUN wget -q https://chromedriver.storage.googleapis.com/74.0.3729.6/chromedriver_linux64.zip RUN unzip chromedriver_linux64.zip -d /usr/local/bin RUN rm -f chromedriver_linux64.zip ... ```  Example of a Sidekiq job execution: ```       def call         do_stuff       ensure         capybara.driver.quit # so it should quit the process       end ```  And if I type `ps aux` I can see a lot of processes like: ``` root      8085  0.0  0.2 102572 11768 ?        Sl   16:41   0:00 /usr/local/bin/chromedriver --port=9624 root      8107  0.2  0.0      0     0 ?        Z    16:41   0:00 [chrome]  root      8109  0.3  0.0      0     0 ?        Z    16:41   0:00 [chrome]  root      8120  0.0  0.0      0     0 ?        Z    16:41   0:00 [cat]  root      8121  0.0  0.0      0     0 ?        Z    16:41   0:00 [cat]  ```  Is it something already reported or should I add something particular to the configuration? In my `Capybara` config I already have `no-sandbox` and `headless` options available.","closed","","apollos124","2019-05-26T14:46:15Z","2019-08-14T10:09:39Z"
"","7061","ShadowJar can not be extracted","## 🐛 Bug Report  org.gradle.api.UncheckedIOException: Cannot create directory META-INF/versions/9 as it already exists, but is not a directory  ![image](https://user-images.githubusercontent.com/14109577/55067702-0d287980-50e5-11e9-8235-fe8e3a1ec897.png)   ## To Reproduce    Detailed steps to reproduce the behaviour:  1.Create a gradle project. 2.Depend on selenium 3.141.+ 3.Trigger shadow jar gradle task. 4.Find fat jar under build/libs folder. 5.Extract that fat jar.  ## Expected behavior  Shadow jar should be extracted successfully.  ## Test script or set of commands reproducing this issue  1. Project depends on selenium version large than 3.141.0: ext {     seleniumVersion = '3.141.+' }  dependencies {     compile ""org.seleniumhq.selenium:selenium-java:${seleniumVersion}""     compile ""org.seleniumhq.selenium:selenium-support:${seleniumVersion}"" }  2. Use  com.github.jengelman.gradle.plugins:shadow:4.0.3 to create a shadow jar  buildscript {     dependencies {         classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.3'     } } apply plugin: 'com.github.johnrengelman.shadow'  3. Extract shadow jar.  This bug is introduced by this pr:   [https://github.com/seleniumhq/selenium/commit/199f9388b3cf953ba5d3a79846dadd08a7dc2824?diff=unified](url)","closed","C-java,","kevinwee0712","2019-03-27T10:21:05Z","2019-08-14T17:09:40Z"
"","7525","Problem with opening and switching tabs in Firefox","## 🐛 Bug Report  Opening new tabs and using them behaves differently in Chrome & Firefox.  The problem happens with every website, not just google.com.  The provided code is only the relevant part, with additional lines missing.  The problem may be with how windows are handled.  Code works perfectly with Chrome, but in Firefox usually two new tabs are opened, before switching tabs.  ## Expected behavior  Steps: 1) Open google.com in current tab 2) Collect all links with tag ""a"" on google.com     **for each collected link:**     3) Open link in a new tab via CTRL + Left-Click         **if two tabs are open:**         4) Switch to second tab (= newly opened link)         5) Close second tab         6) Switch back to first tab (= google.com main page)  ## Test script or set of commands reproducing this issue  driver.get(""https://www.google.com/""); List\ allLinks = driver.findElements(By.tagName(""a""));  for (WebElement link : allLinks) { 	Actions action = new Actions(driver); 	action.keyDown(Keys.CONTROL).click(link).keyUp(Keys.CONTROL).perform();         ArrayList\ tabs = new ArrayList\(driver.getWindowHandles()); 	if (tabs.size() == 2) { 		driver.switchTo().window(tabs.get(1)); 		driver.close(); 		driver.switchTo().window(tabs.get(0));         } }   ## Environment  OS: Windows 10 Browser: Chrome & Firefox Browser version: Chrome 76.0.3809.132 & Firefox 68.0.2 Browser Driver version: ChromeDriver 76.0.3809.126 & GeckoDriver 0.24.0 Language Bindings version: Java Version 8 Update 221 (Build 1.8.0_221-b11) Selenium Grid version (if applicable): 3.141.59","closed","D-firefox,","ajust93","2019-08-28T13:32:55Z","2019-10-16T18:09:41Z"
"","6942","Reverse order of table columns","## 🐛 Bug Report  Open this demo web site: https://demo.nopcommerce.com  Given: Product 1 = ""Apple MacBook Pro 13-inch"" And : Product 2 = ""Asus N551JK-XO076H Laptop"" When : I search for product 1 and product 2 and add them to compare page respectively And : Go to  Then : I should see this image ![image](https://user-images.githubusercontent.com/20227574/52902302-96f84380-3217-11e9-8235-40e525a36d9e.png)  comparison functionality works fine, now I need to capture both Product 1 and Product 2 titles inside the table, I decided to work with Css selector where Product 1 css selector ""tr:nth-of-type(3) > td:nth-child(2) > a"" Product 2 css selector ""tr:nth-of-type(3) > td:nth-child(3) > a""  Both selectors work fine in Chrome console, but when I use page init with Selenium as below: ``` @FindBy(css = ""tr:nth-of-type(3) > td:nth-child(2) > a"")     WebElement FirstProductText      @FindBy(css = ""tr:nth-of-type(3) > td:nth-child(3) > a"")     WebElement SecondProductText ``` ## To Reproduce  In Groovy script I printed the text of each element using: ``` println( FirstProductText.getText() ) println (SecondProductText.getText() ) ``` ## Expected behavior  I should see the results as: > Apple MacBook Pro 13-inch > Asus N551JK-XO076H Laptop  ## But I see these value in reverse  order: > Asus N551JK-XO076H Laptop > Apple MacBook Pro 13-inch  ## Environment  OS: Windsows 8.1 Browser: Chrome Browser version: 73 Browser Driver version: 2.46","closed","","amado-saladino","2019-02-16T16:29:06Z","2019-08-14T21:10:01Z"
"","6978","Window not closed/quit","## 🐛 Bug Report  Open the page and close the browser window.   The page that I open for too long gives html (1-4 minutes), so it turns out timeout. The window does not close.  ## To Reproduce Run the script below   ## Expected behavior  Browser window should close  ## Test script or set of commands reproducing this issue  Webdriver: https://github.com/facebook/php-webdriver  ```php","closed","R-awaiting answer,","vebmaster","2019-02-28T08:31:13Z","2019-08-14T17:09:42Z"
"","6891","On Firefox presence_of_all_elements_located does not raise UnexpectedAlertPresentException","## 🐛 Bug Report  On Firefox waiting for `presence_of_all_elements_located` does not rise `UnexpectedAlertPresentException` when alert is shown.  Also it does not matter if alert is shown before or after page load. Does work on Chrome as expected.  ## To Reproduce  Load a page which shows an alert then wait for some element.  ## Expected behavior  `UnexpectedAlertPresentException` should be raised.  ## Test script or set of commands reproducing this issue **_before-page-load.html_** ```before-page-load.html               alert('Hello!');                   Test       ```  **_after-page-load.html_** ```after-page-load.html                	    window.onload = function(){ 	        setTimeout(function(){alert('Hello!');}, 0); 	    }                            Test       ```  **_test_unexpected_alert.py_** ```test_unexpected_alert.py from unittest import TestCase  from selenium import webdriver from selenium.common.exceptions import UnexpectedAlertPresentException from selenium.webdriver.common.by import By from selenium.webdriver.support.expected_conditions import presence_of_all_elements_located, presence_of_element_located from selenium.webdriver.support.wait import WebDriverWait  class UnexpectedAlertTestCase(TestCase):     def setUp(self):         self.driver = webdriver.Firefox()      def tearDown(self):         if hasattr(self, 'driver') and self.driver:             self.driver.quit()      def test_presence_all_alert_before_page_load(self):         # This test fails because it raises TimeoutException instead of UnexpectedAlertPresentException!         self.driver.get('https://laughing-beaver-1bd1b5.netlify.com/before-page-load.html')          wait = WebDriverWait(self.driver, 2)          with self.assertRaises(UnexpectedAlertPresentException):             wait.until(presence_of_all_elements_located((By.ID, 'test')))      def test_presence_all_alert_after_page_load(self):         # This test fails because wait returns the element instead of rising UnexpectedAlertPresentException!         self.driver.get('https://laughing-beaver-1bd1b5.netlify.com/after-page-load.html')          wait = WebDriverWait(self.driver, 2)          with self.assertRaises(UnexpectedAlertPresentException):             # Here the wait method returns the WebElement             wait.until(presence_of_all_elements_located((By.ID, 'test')))      def test_presence_single_before_page_load(self):         # This test is fine!         self.driver.get('https://laughing-beaver-1bd1b5.netlify.com/before-page-load.html')          wait = WebDriverWait(self.driver, 2)          with self.assertRaises(UnexpectedAlertPresentException):             wait.until(presence_of_element_located((By.ID, 'test')))      def test_presence_single_after_page_load(self):         # This test is fine!         self.driver.get('https://laughing-beaver-1bd1b5.netlify.com/after-page-load.html')          wait = WebDriverWait(self.driver, 2)          with self.assertRaises(UnexpectedAlertPresentException):             wait.until(presence_of_element_located((By.ID, 'test'))) ```  ## Environment  OS: Ubuntu 18.04.1 Browser: Firefox Browser version: 64.0.2 Browser Driver version: GeckoDriver 0.23 Language Bindings version: Python 3.141","closed","C-py,","avladevic","2019-01-28T13:07:10Z","2019-08-14T08:09:36Z"
"","7687","Not able to press Ctrl + F5 keys to do hard refresh using chromedriver and C# webdriver bindings","## 🐛 Bug Report  Not able to press Ctrl + F5 keys to do hard refresh using chromedriver and C# webdriver bindings  ## To Reproduce On any page, try to do hard refresh by pressing Ctrl and F5 keys together using any ONE of the following command variations (with or without any element on the page) Actions action = new Actions(element.Browser.WebDriver); action.KeyDown(Keys.Control).SendKeys(Keys.F5).KeyUp(Keys.Control).Perform();  action.KeyDown(Keys.Control).SendKeys(Keys.F5).KeyUp(Keys.Control).Build().Perform();  action.KeyDown(element.WebElement, Keys.Control).SendKeys(element.WebElement, Keys.F5).KeyUp(element.WebElement, Keys.Control).Build().Perform();  action.KeyDown(element.WebElement, Keys.Control).SendKeys(element.WebElement, Keys.F5).KeyUp(element.WebElement, Keys.Control).Perform());  action.SendKeys(Keys.Control + Keys.F5).Build().Perform();  ## Actual behavior Does not do anything on the page.  ## Expected behavior It should hard refresh the page. Looks like it was working for Java bindings in the past as mentioned at - https://stackoverflow.com/questions/12299960/browser-refresh-by-ctrlf5-in-webdriver-using-java  ## Environment  OS: Windows 10  Browser:  Chrome  Chrome Browser version: 78.0.3904.97 Chrome Driver version: 78.0.3904.7000 Language Bindings version:  C#  4.0.0-alpha03","closed","C-dotnet,","papatelst","2019-10-15T20:40:47Z","2021-09-05T09:02:49Z"
"","7471","newSessionWaitTimeout doesn't wpork","## 🐛 Bug Report  newSessionWaitTimeout for selenium grid doesn't work. The chrome-node hangs and is not released  ## To Reproduce  Following configuration is used: ``` {   ""host"": ""0.0.0.0"",   ""port"": 4444,   ""role"": ""hub"",   ""maxSession"": 5,   ""newSessionWaitTimeout"": 30,   ""capabilityMatcher"": ""org.openqa.grid.internal.utils.DefaultCapabilityMatcher"",   ""throwOnCapabilityNotPresent"": true,   ""jettyMaxThreads"": -1,   ""cleanUpCycle"": 5000,   ""browserTimeout"": 10,   ""timeout"": 1800,   ""debug"": false } ```  Detailed steps to reproduce the behavior:  Start selenium-hub and chrome-node. Run any test on it which doesn't close session / driver (or run any selenium test in debug mode and then stop it in the middle)  ## Expected behavior  node is released afer newSessionWaitTimeout  ## Actual behavior  Node hangs, no cleanup is performed on hub  ``` 12:55:31.061 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {browserName: chrome, goog:chromeOptio ns: {args: [], extensions: []}} 12:55:31.064 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=edd41d74-d084-4c09-83c1-cf 8d44d42f49, seleniumProtocol=WebDriver, browserName=chrome, maxInstances=1, platformName=LINUX, version=76.0.3809.87, applicationName=,  platform=LINUX} ```  ## Environment  Selenium Grid version (if applicable):  3.141.59","closed","","tillias","2019-08-06T13:09:14Z","2019-09-05T14:09:35Z"
"","7353","MoveByOffset not working when scrollbar is present","## 🐛 Bug Report  MoveByOffset is not working when scrollbar is present in Selenium.WebDriver 4.0.0-alpha01 (works well in 3.141.0).  ## To Reproduce  - Open some page where drag and drop is recorded (drawing tool) - Reduce window size (scrollbar have to be present) - Execute MoveByOffset action  ## Expected behavior  DragAndDrop works same as when performed manually by mouse move (something is drawn).  ## Actual behavior  Scrollbar is moved.  ## Test script or set of commands reproducing this issue  ```public class MoveByOffsetBugTest {         [Test]         public void RunTest()         {             var driver = NavigateToDrawing();             var canvas = driver.FindElement(By.Id(""catch""));                          DrawLine(driver, canvas); // does not work, scrollbar is moved                          driver.Manage().Window.Size = new Size(1500, 1080);                          DrawLine(driver, canvas); // works correctly, line is drawn in top left corner         }          static ChromeDriver NavigateToDrawing()         {             var chromeOptions = new ChromeOptions();             chromeOptions.AddArgument(""--window-size=100,1080"");                          var driver = new ChromeDriver(chromeOptions);             driver.Navigate().GoToUrl(""https://www.youidraw.com/apps/painter/""); // random drawing tool I found             return driver;         }          static void DrawLine(IWebDriver driver, IWebElement canvas)         {             new Actions(driver)                 .MoveToElement(canvas, 10, 10)                 .ClickAndHold()                 .MoveByOffset(50, 50)                 .Release()                 .Build()                 .Perform();         } } ```  ## Environment  OS: Windows 10 Browser: Chrome Browser version: 75.0.3770.100 Browser Driver version: ChromeDriver 74.0.0 Language Bindings version: C# 8","closed","I-stale,","Miky-10","2019-07-03T12:03:23Z","2021-12-04T00:06:36Z"
"","7216","IE resize/rerender Issue","## 🐛 Bug Report  Looks like the same issue like [6395](https://github.com/seleniumhq/selenium-google-code-issue-archive/issues/6395) but is not solved.  The main problem is that the behaviour is not uniform. How @lukeis write in the post above, in my opinion a screenshot is a screenshot not a image of the page.  If this is the case, please use ALL browsers, not only IE.  What would be much more important, however, is that the size is always uniform. Because currently the sizes of the screenshots on the same page differ by between 5 and 20 pixels. It seems that the screenshot is taken while the size is changing or that the stitching is working incorrectly. So the screenshot function is simply useless for IE, that the results are so EVERYTHING different and no serious image comparison is possible.  We URGTLY need a reliable solution where we can disable this. ie.enableFullPageScreenshot = false in the Capabilities doesn't work, no matter if we go with browserstack.ie.driver 2.53.1 to an old version or work with the current one.   The tool can only be used professionally if you get reliable and consistent results. False positives are fatal in automated testing.   ## To Reproduce Make a screenshot in IE  ## Expected behavior Identical screenshots of a unchanged page so that we can use the screenshots for image comparison in automated testing  ## Environment  OS: Windows  10 Browser: IE Browser version: All versions Browser Driver version: browserstack.ie.driver 2.53.1  ie.enableFullPageScreenshot false  os Windows  build IEFullpage  browser IE  os_version 10  browserstack.ie.driver 2.53.1  browser_version 11.0  resolution 1024x768  acceptSslCert false  detected_language selenium/3.14.0 (java mac)  browserstack.useChromeDriver true  browserstack.seleniumLogs true  browserstack.appiumLogs false  browserName IE","closed","D-IE,","AndreasKarz","2019-05-16T15:01:16Z","2019-08-14T08:09:54Z"
"","7140","Logging to file not working with Ruby and Geckodriver","## 🐛 Bug Report  Logging to file not working with Ruby and Geckodriver.  ## To Reproduce  ## Expected behavior  A log file to be created that includes the trace level output.  ## Test script or set of commands reproducing this issue  ``` profile = Selenium::WebDriver::Firefox::Profile.new( )  profile.log_file = File.expand_path( 'firefox.log' ) browser = Watir::Browser.new :firefox, profile: profile, log_level: :trace browser.goto( 'https://www.google.co.uk/' )  ```  ## Environment  OS: Ubuntu bionic 64 bit  Browser: Mozilla Firefox Browser version: 67.0b2 Browser Driver version: GeckoDriver 0.24 Language Bindings version: ruby 2.5.1p57 (2018-03-29 revision 63029) [x86_64-linux-gnu] Selenium Webdriver: 3.141.0 (latest version has unrelated fatal error)","closed","C-rb,","theDogOfPavlov","2019-04-25T13:21:35Z","2019-08-14T13:09:35Z"
"","7408","LocalFileDetector in combination with uploading multiple files not working as expected","## 🐛 Bug Report  LocalFileDetector in combination with uploading multiple files not working as expected. When elements are of the ""input[type=file]"" kind, Selenium supports sending paths to files with the sendKeys() method. This also works when you need to upload multiple files. This is done by sending multiple paths on different lines (in a single string with line breaks), i.e.(in Java 8):  element.sendKeys("" path/to/first/file path/to/second/file "");  However, when using a LocalFileDetector, this functionality is not working anymore. The error message is saying that one of the files is not found, whilst when I upload the files separately from the same folder, they can both be found.  ## To Reproduce Detailed steps to reproduce the behavior: 1. Search an ""input[type=file]"" WebElement 2. Use RemoteWebDriver with LocalFileDetector 3. Create a two-lined String with valid paths to two separate files 3. Use sendKeys() method on WebElement  to upload multiple files  ## Expected behavior 3. Both files are uploaded  ## Actual behavior 3. org.openqa.selenium.InvalidArgumentException: invalid argument: File not found: path/to/first/file  ## Test script or set of commands reproducing this issue WebDriver code: ``` private static WebDriver driver;  public static WebDriver getRemoteChromeDriver() {         ChromeOptions options = new ChromeOptions();         options.setExperimentalOption(""useAutomationExtension"", false);         options.addArguments(""start-maximized"");         options.addArguments(""--incognito"");         driver = null;         RemoteWebDriver remoteWebDriver = null;         System.out.println(""Connecting to Hub URL = "" + hubUrl);         try {             remoteWebDriver = new RemoteWebDriver(new URL(hubUrl), options);         } catch (MalformedURLException e) {             e.printStackTrace();         }         remoteWebDriver.setFileDetector(new LocalFileDetector());         driver = remoteWebDriver;         return driver;     } ```  Test code: ```     //Elements     @FindBy(css = ""input[type=file]"")     private WebElement uploadElement;  public void uploadMultipleFiles(List files) {         String multiPath = """";         for (File file : files) {             multiPath += file.getPath() + ""\n"";         }          //Remove latest \n character         multiPath = multiPath.substring(0, multiPath.length() - 1);         System.out.println(""These are all the files being uploaded:"");         System.out.println(multiPath);         uploadElement.sendKeys(multiPath);     }  ``` ## Environment OS: Host machine: MacOSX. Remote WebDriver machine: Windows 10 (The rest of the environment is all regarding Remote Machine) Browser: Chrome Browser version: 75.0.3770.142 Browser Driver version: ChromeDriver 75.0.3770.140 Language Bindings version: Java 1.8.0_191 Selenium Grid version (if applicable): 3.141.59  If you need anymore information, please let me know. Thanks.","closed","C-remote,","MaikelBruin","2019-07-19T08:34:34Z","2019-12-20T22:16:04Z"
"","7398","executeScript returns float number with e-notation as Long","## 🐛 Bug Report  JavascriptExecutor.executeScript() returns float numbers with e-notation as Long instead of Double  ## To Reproduce  Object ret = ((JavascriptExecutor) driver).executeScript(""return parseFloat('6.02214129e+23');"");  ## Expected behavior  ret has Double class with value 6.02214129e+23  ## Actual behavior  ret has Long class with value 9223372036854775807  ## Test script or set of commands reproducing this issue  See above, just one line  ## Environment  OS: Windows10 Browser: Chrome, Firefox, Internet Explorer Browser version: 75.0.3770.100, 68, 11  Browser Driver version: ChromeDriver 75.0.3770.90, GeckoDriver 0.24, InternetExplorerDriver 3.14.0 Language Bindings version: Java 1.8.0_201 Selenium Grid version (if applicable): 3.141.59","closed","C-java,","vkhromenkov","2019-07-16T16:33:10Z","2019-08-31T21:09:34Z"
"","7277","Javadoc for TakesScreenshot#getScreenshotAs() differ from w3c spec","## 🐛 Bug Report  Javadoc for `TakesScreenshot#getScreenshotAs()` :  > For WebDriver extending TakesScreenshot, this makes a best effort >  depending on the browser to return the following in order of preference: >    >     Entire page >      Current window >      Visible portion of the current frame >      The screenshot of the entire display containing the browser >      but [w3c spec](https://www.w3.org/TR/webdriver/#screen-capture) :  >  Take Screenshot command to capture the top-level browsing context’s initial viewport,  If `getScreenshotAs` method always return current viewport instead of entire page,  javadoc should fit this behavior.     ## To Reproduce    Detailed steps to reproduce the behavior:  ## Expected behavior  Javadoc and specs are match.  ## Environment  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:   Selenium Grid version (if applicable):","closed","C-java,","takeya0x86","2019-06-10T22:55:35Z","2019-08-14T06:10:04Z"
"","7503","WebDriver.close() closes the session","## 🐛 Bug Report  It is stated in various documentation that the difference between the close() and quit() methods is that the close() closes the currently active window, while the quit() closes all the windows while also closing the driver session. However, I made a test, which calls the driver.close() (leaving it with no open windows) after which it calls driver.quit() which then throws the NoSuchSessionException because it tried to execute the Quit command. The validation withing quit() checks if the sessionId is null, however it is not, because the close() method does not set it to null. However it seems that if there are no more windows open, the session is closed but the driver is not aware of it - since the session id is still set. It appears that if you call close() at any point and are left with no windows, you can't call quit() any longer.  ## To Reproduce  Create a Junit test, make a setup (@Before), destroy (@After) and the @Test methods. In the setup put the initialization of the driver, for example, for Firefox:  `@Before     public void setup() {         driver = new FirefoxDriver(new FirefoxOptions());     }`  In the @After method, put the quit() method call:  `@After     public void destroy() {         if (driver != null) {             driver.quit();         }     }`  In the @Test method call the close() method:  `@Test     public void testClosedDriver() {         driver.close();     }`  ## Expected behavior  The driver should either be aware of the fact that the session is closed, and not try and execute the command on quit(), or calling close() should not kill the session.  ## Test script or set of commands reproducing this issue  You should have a project with JUnit and Selenium. Create a new JUnit test and set it up as described in **ToReproduce** section. I've also attached the test to this ticket (had to rename it to .txt since it doesn't accept .java as an attachment). [WebDriverTest.java.txt](https://github.com/SeleniumHQ/selenium/files/3515232/WebDriverTest.java.txt)   ## Environment  OS: Windows 10 Browser: Firefox  Browser version: 68.0.2 (64 bit) Browser Driver version: GeckoDriver 0.24.0 (64 bit) Language Bindings version: Java 1.8.0_211 Selenium Grid version (if applicable): N/A","closed","C-java,","milosjak","2019-08-19T09:53:35Z","2021-09-05T08:34:49Z"
"","7631","isDisplayed throw Null Pointer - Chrome 77","## 🐛 Bug Report  isDisplayed method throws Null pointer exception sometimes which originates from RemoteWebDriver class. This issue specific to Chrome version 77.  There is no issue on Chrome version 76 and older.  #Reproduce: Open any web page. Call isDisplayed.  #Error Log: java.lang.NullPointerException 	at org.openqa.selenium.remote.RemoteWebElement.isDisplayed(RemoteWebElement.java:329) 	at eyethink.automation.bots.actionsfactory.type.Is$Web.isDisplayed(Is.java:122)  #Environment: OS: Windows 10/OSX Browser: Chrome Browser version: 77.0.3865.90  Browser Driver version: ChromeDriver 77 (mac) Language Bindings version: Java 3.141.59","closed","D-chrome,","Naumansh","2019-10-01T19:59:52Z","2019-12-06T16:28:32Z"
"","7044","NoSuchFrameError raised after clicking on div that opens a new window on Safari","## 🐛 Bug Report  Invoking `click` on an element located within an iFrame that has an onclick handler that opens a new window opens the new window but returns a ""No Such Frame"" error on Safari. Works fine on Chrome and FireFox.  Cross-posted with Apple Bug Reporter \#49027480  ## To Reproduce  Given two simple HTML pages:  `Parent.html`: ```html             Parent      ```  and `ClickMe.html`: ```html             Click Me   Broken   ```  Detailed steps to reproduce the behavior:  ## Expected behavior  Expected server to return no error since the click was successful and the new window was opened.  ## Test script or set of commands reproducing this issue  The following script will open a window but will raise a `Selenium::WebDriver::Error::NoSuchFrameError`: ```ruby require 'selenium-webdriver' d = Selenium::WebDriver.safari d.navigate.to 'https://yourhost.example.com/Parent.html' d.switch_to.frame 0 d.find_element( css: 'div' ).click ```  ## Environment  OS: OSX High Sierra 10.13.6 (17G5019) Browser: Safari Browser version: 12.0.3 (13606.4.5.3.1) Browser Driver version: N/A (provided by OS) Language Bindings version: JRuby selenium-webdriver (3.141.0)","closed","","JasonLunn","2019-03-19T18:21:40Z","2019-08-14T19:09:40Z"
"","6910","Ruby gem `selenium-webdriver` 3.141.0 install fails on ruby 2.6.0","## 🐛 Bug Report  Installing the ruby `selenium-webdriver` gem fails on ruby `2.6.0`  It throws an RDoc error, claiming that `lib/childprocess/tools/generator.rb` may not be properly documented. However, the core gem seems to install successfully.   If I retry the same with `ruby 2.5.1` it is successful, so it may be a problem with `2.6.0` specifically  ## To Reproduce  ``` #  alternatively use rbenv or any other ruby management tool $ rvm install 2.6.0   .....   $ which ruby /home/abhchand/.rvm/rubies/ruby-2.6.0/bin/ruby  $ gem install selenium-webdriver Fetching rubyzip-1.2.2.gem Fetching childprocess-0.9.0.gem Fetching selenium-webdriver-3.141.0.gem Fetching ffi-1.10.0.gem Successfully installed rubyzip-1.2.2 Building native extensions. This could take a while... Successfully installed ffi-1.10.0 Successfully installed childprocess-0.9.0 Successfully installed selenium-webdriver-3.141.0 Parsing documentation for rubyzip-1.2.2 Installing ri documentation for rubyzip-1.2.2 Parsing documentation for ffi-1.10.0 Installing ri documentation for ffi-1.10.0 Parsing documentation for childprocess-0.9.0 Before reporting this, could you check that the file you're documenting has proper syntax:    /home/abhchand/.rvm/rubies/ruby-2.6.0/bin/ruby -c lib/childprocess/tools/generator.rb  RDoc is not a full Ruby parser and will fail when fed invalid ruby programs.  The internal error was:    (NoMethodError) undefined method `[]' for nil:NilClass  ERROR:  While executing gem ... (NoMethodError)     undefined method `[]' for nil:NilClass ```  ## Expected behavior  Successful completion of `gem install selenium-webdriver`  ## Test script or set of commands reproducing this issue  See above  ## Environment  OS: Ubuntu 18.04 LTS Browser: n/a Browser version: n/a Browser Driver version: n/a Language Bindings version: Ruby 3.141.0 Selenium Grid version (if applicable): n/a","closed","C-rb,","abhchand","2019-02-03T19:44:49Z","2019-08-14T22:09:51Z"
"","7080","Trying to install an extension through selenium, not working in firefox","## 🐛 Bug Report  Installation of modheader extension in firefox through selenium (using below code) not working:  ```groovy         def profile = new FirefoxProfile()         URL url = this.getClass().getResource(System.getProperty(""user.dir"") + ""/src/test/resources/extensions/modheader-2.2.5-an+fx.xpi"")         def modifyHeaders = new File(url.toURI())         try {             profile.addExtension(modifyHeaders)         } catch (IOException e) {             e.printStackTrace()         }         profile.setPreference(""extensions.modify_headers.currentVersion"", ""2.2.5-an+fx"")         profile.setPreference(""modifyheaders.headers.count"", 1)         profile.setPreference(""modifyheaders.headers.action0"", ""Add"")         profile.setPreference(""modifyheaders.headers.name0"", ""X-Nitra-Side"")         profile.setPreference(""modifyheaders.headers.value0"", ""passive"")         profile.setPreference(""modifyheaders.headers.enabled0"", true)         profile.setPreference(""modifyheaders.config.active"", true)         profile.setPreference(""modifyheaders.config.alwaysOn"", true)          def capabilities = new DesiredCapabilities()         capabilities.setBrowserName(""firefox"")         capabilities.setPlatform(org.openqa.selenium.Platform.ANY)         capabilities.setCapability(FirefoxDriver.PROFILE, profile)          driver = { new FirefoxDriver(capabilities) } ``` However if I try to install through browser, I am able to install it successfully.   ## To Reproduce  Just add above code in GebConfig.groovy while setting up firefox driver.  ## Expected behavior  Should be able to see the addon installed and request header added.  ## Environment  OS: MacOS 10.13.06 Browser: Firefox  Browser version: 66.0.2 Browser Driver version: GeckoDriver 0.24 Language Bindings version: Java 8  Selenium Grid version (if applicable): 3.141.59","closed","D-firefox,","vivekprm","2019-04-02T06:36:30Z","2019-08-14T13:09:53Z"
"","6869","InsecureRequestWarning even when SSL is valid","## 🐛 Bug Report  InsecureRequestWarning is issued even when the Remote end has valid SSL.  ## To Reproduce  Run a test against a Remote endpoint that has valid SSL.  ## Expected behavior  Test runs without any warnings.  ## Test script or set of commands reproducing this issue  Test script [here](https://gist.github.com/BeyondEvil/5c639fb2bc882c11e3d8a03ec3ca9f67)  ## Environment  OS: OSX 10.12.6 (also happens on core OS so it's unlikely a OS issue) Browser: Firefox (also happens with IE, again, unlikely this is a browser issue) Browser version: 64 Browser Driver version: GeckoDriver 0.23 Language Bindings version: 3.141.0 Selenium Grid version (if applicable): 3.14.0  I ran the script in a virtual env and the warning is repeated for every wire-call.  ``` /Users/jimbrannlund/.local/share/virtualenvs/dpo-automation-NuB7OARD/lib/python3.7/site-packages/urllib3/connectionpool.py:847: InsecureRequestWarning: Unverified HTTPS request is being made. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings   InsecureRequestWarning) ```  Virtual env contents and python version: ``` (dpo-automation) bash-3.2$ pip freeze selenium==3.141.0 urllib3==1.24.1 (dpo-automation) bash-3.2$ python --version Python 3.7.0 ```  [SSL report](https://www.ssllabs.com/ssltest/analyze.html?d=hub.testingbot.com)","closed","C-py,","BeyondEvil","2019-01-21T13:32:07Z","2021-09-05T08:12:23Z"
"","7606","Allow usage of rubyzip 1.3.0 and 2.0.0","## 🐛 Bug Report  In this moment requires rubyzip 1.2.x that has security problems.   ## To Reproduce  Include the gem in a project that requires a recent rubyzip and run bundle install  ## Expected behavior  Allow using recent rubyzip  ## Test script or set of commands reproducing this issue  In same Gemfile use: ``` gem 'rubyzip', '>= 1.3' gem 'selenium-webdriver' ```  And run: ``` bundle update ``` It produces ``` Bundler could not find compatible versions for gem ""rubyzip"":   In Gemfile:     rubyzip (>= 2.0)  ... selenium-webdriver (>= 4.0.0.alpha3) was resolved to 4.0.0.alpha3, which depends on       rubyzip (~> 1.2, >= 1.2.2) ``` ## Environment  OS: Any Browser: Any Browser version: Any Browser Driver version:Any Language Bindings version: Any  Selenium Grid version (if applicable): Any","closed","C-rb,","vtamara","2019-09-26T16:50:35Z","2019-10-31T09:07:40Z"
"","7365","selenium-webdriver RubyGem: can't modify frozen String","## 🐛 Bug Report  In the `selenium-webdriver` RubyGem (branch `rb-3.x`), certain files [use the ""shovel operator"" (` require 'selenium-webdriver' >> FileUtils.touch('foo') >> FileUtils.chmod('+x', 'foo') >> Selenium::WebDriver::Firefox::Binary.path=('foo') >> FileUtils.rm_rf('foo') >> Selenium::WebDriver::Firefox::Binary.path FrozenError: can't modify frozen String ```  ## Expected behavior  `Selenium::WebDriver::Firefox::Binary.path` should raise the appropriate error message instead:  ``` Could not find Firefox binary (os=#{Platform.os}). Make sure Firefox is installed or set the path manually with #{self}.path= ```  ## Test script or set of commands reproducing this issue  See above.  ## Environment  OS: Debian (testing) Browser: N/A Browser version: N/A Browser Driver version: N/A Language Bindings version: 3.142.3 Selenium Grid version (if applicable): N/A  ## Note  FWIW my preferred style for long strings is to use a heredoc:  ```ruby raise Error::WebDriverError,","closed","C-rb,","rlue","2019-07-08T05:24:47Z","2019-12-20T22:16:07Z"
"","7516","Unable to launch remote session getting ProtocolHandshake error","## 🐛 Bug Report  In order perform parallel execution, I just ran selenium grid and triggered script couple of times. For any single grid call the script executed properly in remote PC, but if I try to execute more than 1 iteration getting ProtocolHandshare exception.  ## Environment  OS: Windows 10 Browser: MS Edge Browser version:  Microsoft Edge 42.17134.1.0 Microsoft EdgeHTML 17.17134  Browser Driver version:  [Release 17134](https://download.microsoft.com/download/F/8/A/F8AF50AB-3C3A-4BC4-8773-DC27B32988DD/MicrosoftWebDriver.exe)  Language Bindings version: Ruby 2.5.5 Selenium version : selenium-webdriver-3.142.3.gem Selenium Grid version: selenium-server-standalone-3.141.59.jar  ## To Reproduce ## Test script:  ``` require 'selenium-webdriver'  remoteBrowser = ""MicrosoftEdge"" Selenium::WebDriver::Edge::Service.driver_path = ""C:/Webdriver/MicrosoftWebDriver.exe"" #remoteBrowser = ""internet explorer"" #Selenium::WebDriver::IE::Service.driver_path = ""C:/Webdriver/IEDriverServer.exe"" @browser = Selenium::WebDriver.for :remote,  url: ""http://10.74.40.198:5555/wd/hub"",    desired_capabilities: Selenium::WebDriver::Remote::Capabilities.new(    {       browser_name: remoteBrowser,       platform: ""WIN10"",    }) @browser.get(""https://www.google.com"") sleep 5 @browser.find_element(xpath: ""//input[@name='q']"").send_keys(""ruby software download\n"") sleep 5 @browser.find_elements(partial_link_text: 'ruby').each do |ele|    p ele.text    sleep 2 end  @browser.close ```  ## Grid commands:  ## For Launching Hub: `java -jar selenium-server-standalone-3.141.59.jar -role hub -port 5555 --debug`  `java -jar selenium-server-standalone-3.141.59.jar -role node -hub http://10.74.40.198:5555/grid/register/ -port 1112 -browser browserName=""MicrosoftEdge"",maxInstances=5,platform=""WIN10"",platformName=""WIN10"" --debug`  `java -Dwebdriver.edge.driver=""MicrosoftWebDriver.exe"" -jar selenium-server-standalone-3.141.59.jar -role node -hub http://10.74.40.198:5555/grid/register/ -port 1112 -browser browserName=""MicrosoftEdge"",maxInstances=5,platform=""WIN10"",platformName=""WIN10"" --debug`  ## Expected behavior  Selenium grid should execute multiple instances without any exceptions  ## Actual Behavior  Getting ProtocolHandshake error.  Error:  `[remote server] org.openqa.selenium.remote.ProtocolHandshake(ProtocolHandshake.java):115:in 'createSession': Unable to parse remote response: Unknown error (Selenium::WebDriver::Error::UnknownError) 	from [remote server] org.openqa.selenium.remote.ProtocolHandshake(ProtocolHandshake.java):74:in 'createSession' 	from [remote server] org.openqa.selenium.grid.session.remote.RemoteSession$Factory(RemoteSession.java):147:in 'performHandshake' 	from [remote server] org.openqa.selenium.grid.session.remote.ServicedSession$Factory(ServicedSession.java):161:in 'apply' 	from [remote server] org.openqa.selenium.remote.server.ActiveSessionFactory(ActiveSessionFactory.java):180:in 'lambda$apply$12'`   Node Log collected from remote server PC: [nodeLog.log](https://github.com/SeleniumHQ/selenium/files/3533238/nodeLog.log)  Hub Log collected from remote execution PC: [hubLog.log](https://github.com/SeleniumHQ/selenium/files/3533239/hubLog.log)  Script Log collected at Local script triggered PC: [ProtocolHandshakeError.txt](https://github.com/SeleniumHQ/selenium/files/3533242/ProtocolHandshakeError.txt)","closed","D-edge,","evnraja32","2019-08-23T07:21:19Z","2020-02-28T07:12:27Z"
"","7639","call to move_to_element_with_offset in action_chains.py causes TypeError: unsupported operand type(s) for +: 'float' and 'str'","## 🐛 Bug Report  In my code I make a call to move_to_element_with_offset to mouse down on the x,y coordinates of an element. ActionChains(driver).move_to_element_with_offset(element, x, y).click_and_hold().perform() The x and y variables in my code could be strings or integers.  This code used to work earlier this year, but I'm guessing that was before all the w3c work was done, because if I start chrome with add_experimental_option('w3c',False) the code works without errors.  So the w3c driver is triggering code in move_to_element_with_offset in actions_chains.py and move_to in pointer_actions.py that I think has a bug.  ## To Reproduce Create a driver that is a chrome browser. element is a valid locator.  x, y are strings such as '10' and '20'  ActionChains(driver).move_to_element_with_offset(element, x, y).click_and_hold().perform()   File ""c:\python 3.6.5\lib\site-packages\selenium\webdriver\common\action_chains.py"", line 291, in move_to_element_with_offset     self.w3c_actions.pointer_action.move_to(to_element, xoffset, yoffset)   File ""c:\python 3.6.5\lib\site-packages\selenium\webdriver\common\actions\pointer_actions.py"", line 47, in move_to     left = -left_offset + (x or 0) TypeError: unsupported operand type(s) for +: 'float' and 'str'  ## Test script or set of commands reproducing this issue Looking at the selenium code, I see where the issue is: In move_to_element_with_offset    def move_to_element_with_offset(self, to_element, xoffset, yoffset):         """"""         Move the mouse by an offset of the specified element.            Offsets are relative to the top-left corner of the element.          :Args:          - to_element: The WebElement to move to.          - xoffset: X offset to move to.          - yoffset: Y offset to move to.         """"""         if self._driver.w3c:             self.w3c_actions.pointer_action.move_to(to_element, xoffset, yoffset)             self.w3c_actions.key_action.pause()         else:             self._actions.append(                 lambda: self._driver.execute(Command.MOVE_TO, {                     'element': to_element.id,                     'xoffset': int(xoffset),                     'yoffset': int(yoffset)}))         return self  Then in pointer_actions.py      def move_to(self, element, x=None, y=None):         if not isinstance(element, WebElement):             raise AttributeError(""move_to requires a WebElement"")         if x is not None or y is not None:             el_rect = element.rect             left_offset = el_rect['width'] / 2             top_offset = el_rect['height'] / 2             left = -left_offset + (x or 0)             top = -top_offset + (y or 0)         else:             left = 0             top = 0         self.source.create_pointer_move(origin=element, x=int(left), y=int(top))         return self  I see where w3c calls different code and why my code used to work: Question: Should the call to self.w3c_actions.pointer_action.move_to cast the xoffset and yoffset to integers like it does in the old code?  Because the code in move_to_element_with_offset did not cast x,y to int, my string parameter is used in the (x or 0) code causing my TypeError.  So should they be cast to int here or in the calling function?  I realize that I can fix my issue by changing my code to make sure the parameters are integers, but looking at other code in action_chains and pointer_actions, they appear to handle strings or int just fine.  ## Environment  OS: Windows 10 Browser: Chrome Browser version: 77.0.3865.90 Browser Driver version: ChromeDriver 77.0.3865.40 Language Bindings version: Python 3.6.5","closed","C-py,","jvanyo","2019-10-02T19:52:25Z","2021-09-05T10:02:49Z"
"","7251","Documentation on By.js is Incorrect","## 🐛 Bug Report  In Javascript an expression (eg. `1 + 1`) and a statement (eg. `const a = 1 + 1;` or `return a;`) are different things, but the documentation for By.js refers to it requiring an ""expression"" when it actually requires a statement (specifically a `return` statement).  ## To Reproduce  1. Go to https://seleniumhq.github.io/selenium/docs/api/javascript/module/selenium-webdriver/lib/by_exports_By.html#By.js 2. Try to follow the instructions: provide a ""a JavaScript expression"" 3. Receive a (difficult to debug) `TypeError: Custom locator did not return a WebElement` 4.  Change the ""Javascript expression"" to instead be the *statement* of: `return *whatever expression you had before*` 5. Get your expected element  ## Expected behavior  The documentation should be changed from:  >Locates an elements by evaluating a JavaScript expression. The result of this expression must be an element or list of elements.  to:  >Locates elements by evaluating a JavaScript return statement. The value returned from this statement must be an element or list of elements.  >Example: >driver.findElement({ js: ""return document.querySelectorAll('button')"" }))  Arguably a much better solution would be to make this function *actually* expect an expression.  There's really no reason to make devs provide:      return document.querySelector('foo')`  when they could just provide:      `document.querySelector('foo')`  ... but I'm guessing it's easier to avoid breaking things by just fixing the documentation :)  OS: Any Browser:Any Browser version: Any Browser Driver version: Current (documentation for version at https://seleniumhq.github.io/selenium/docs/api/javascript/module/selenium-webdriver/lib/by_exports_By.html#By.js) Language Bindings version: Javascript Selenium Grid version (if applicable): n/a","closed","","machineghost","2019-05-30T15:45:44Z","2019-08-14T09:09:36Z"
"","7854","Selenium separate actions objects work differently than single actions object with procedures","## 🐛 Bug Report  If you instantiate an **Actions** object and build your Actions chain normally like  **new Actions(driver).ClickAndHold().MoveByOffset(10,10).Perform();**  This will work differently than   **new Actions(driver).ClickAndHold().Perform();**  **new Actions(driver).MoveByOffset(10,10).Perform();**  The ClickAndHold() Action will be cancelled on MoveByOffset()  Is this normal?     ## To Reproduce    Detailed steps to reproduce the behavior:  ## Expected behavior  Both scenarios should work the same (i guess?)  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:   Selenium Grid version (if applicable):","closed","","KardoseR","2019-12-08T15:06:12Z","2020-01-07T17:40:51Z"
"","7509","WebDriverProxy EPROTO wrong version number","## 🐛 Bug Report  If the selenium server uses the https protocol and the webDriverProxy uses the http protocol, an EPROTO error is thrown.   ```bash ➜  selenium-webdriver git:(master) ✗ node script.js (node:863) UnhandledPromiseRejectionWarning: Error: EPROTO write EPROTO 140076306990912:error:1408F10B:SSL routines:ssl3_get_record:wrong version number:../deps/openssl/openssl/ssl/record/ssl3_record.c:332:      at ClientRequest. (/selenium-webdriver/node_modules/selenium-webdriver/http/index.js:258:15)     at ClientRequest.emit (events.js:198:13)     at TLSSocket.socketErrorListener (_http_client.js:392:9)     at TLSSocket.emit (events.js:198:13)     at errorOrDestroy (internal/streams/destroy.js:107:12)     at onwriteError (_stream_writable.js:436:5)     at onwrite (_stream_writable.js:461:5)     at _destroy (internal/streams/destroy.js:49:7)     at TLSSocket.Socket._destroy (net.js:613:3)     at TLSSocket.destroy (internal/streams/destroy.js:37:8) (node:863) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 1) (node:863) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code. (node:863) UnhandledPromiseRejectionWarning: Error: EPROTO write EPROTO 140076306990912:error:1408F10B:SSL routines:ssl3_get_record:wrong version number:../deps/openssl/openssl/ssl/record/ssl3_record.c:332:      at ClientRequest. (/selenium-webdriver/node_modules/selenium-webdriver/http/index.js:258:15)     at ClientRequest.emit (events.js:198:13)     at TLSSocket.socketErrorListener (_http_client.js:392:9)     at TLSSocket.emit (events.js:198:13)     at errorOrDestroy (internal/streams/destroy.js:107:12)     at onwriteError (_stream_writable.js:436:5)     at onwrite (_stream_writable.js:461:5)     at _destroy (internal/streams/destroy.js:49:7)     at TLSSocket.Socket._destroy (net.js:613:3)     at TLSSocket.destroy (internal/streams/destroy.js:37:8) (node:863) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 3) ```  ## To Reproduce Gist : https://gist.github.com/theredfish/23c1cfebde99ec1d9827184b1fe47495  ``` # start nginx docker-compose up -d # then run the script npm install --save selenium-webdriver node script.js ``` This test case reproduce the error. Now if you want a passing test case replace `https://a-real-selenium-grid/wd/hub` by `http://a-fake-selenium-grid/wd/hub`. Note the **http** protocol : it works because it's the same protocol.  ## Expected behavior HTTPS requests (e.g selenium commands) can go through a HTTP proxy.  ## Environment  OS: ANY Browser: ANY Browser version: ANY Browser Driver version: ANY Language Bindings version: Javascript / Node v10.16.2 Selenium Grid version (if applicable): ANY  ## Related issues - https://github.com/axios/axios/issues/925  I can provide a pull request - But I will need some help to know where to make the changes.","closed","C-nodejs,","theredfish","2019-08-21T07:59:34Z","2020-02-22T09:46:26Z"
"","6912","InternetExplorerDriverService.LogFile doesn't wrap path with quotes to support paths with spaces","## 🐛 Bug Report  If I pass the `InternetExplorerDriverService.LogFile` property a path containing spaces, the log file path is not passed to `IEDriverServer.exe` correctly.  ## To Reproduce  Set the `LogFile` property of the `InternetExplorerDriverService` instance to a path with spaces.  ## Expected behavior  I expected the log file to be created at the path I specified to the `LogFile` property.  ## Actual behavior  The log file is created at the path before the first space.  ## Test script or set of commands reproducing this issue ```     [TestClass]     public class UnitTest1     {         [TestMethod]         public void TestMethod1()         {             var explorerOptions = new InternetExplorerOptions             {                 EnsureCleanSession = true,                 IntroduceInstabilityByIgnoringProtectedModeSettings = true             };              var internetExplorerDriverService = InternetExplorerDriverService.CreateDefaultService();             internetExplorerDriverService.HideCommandPromptWindow = false;             internetExplorerDriverService.LoggingLevel = InternetExplorerDriverLogLevel.Trace;             internetExplorerDriverService.LogFile = @""C:\My Path With Spaces\selenium.log"";             InternetExplorerDriver driver = new InternetExplorerDriver(internetExplorerDriverService, explorerOptions);              driver.Url = ""http://www.seleniumhq.org"";             driver.Navigate();         }     } ```  In this case, the log file is created at ""C:\My""  ## Environment  OS: Windows 10 Browser: IE Browser version: 11.253.17763.0 Browser Driver version: 3.14.0.0 Language Bindings version: C# .NET 4.5  By quickly scanning the code, this issue also seems to happen with the Chrome and Opera driver services.  Thank you.","closed","","icnocop","2019-02-05T02:10:15Z","2019-08-14T22:09:50Z"
"","7085","[Ruby] `element.get_text` ignore rlm symbol","## 🐛 Bug Report  If element contains text with [RLM](https://unicode-table.com/en/200F/) symbol `element.text` will return only text, without that symbol    ## To Reproduce  1. Create `/tmp/rtl_symbol.html` as shown below 2. Run `tmp.rb`  ## Expected behavior outputs ``` true true ``` ## Test script or set of commands reproducing this issue  ``` cat /tmp/rtl_symbol.html    Test‏    ``` tmp.rb ``` require 'selenium-webdriver' driver = Selenium::WebDriver.for :chrome driver.navigate.to('file:////tmp/rtl_symbol.html') div = driver.find_element(:xpath, '//div') puts div.text.include?('Test') puts div.text.include?('‏') # https://unicode-table.com/en/200F/ symbol in quotes ``` returns ``` true false ```  Also this symbol is visible in Chrome Debuuger ![image](https://user-images.githubusercontent.com/668524/55551505-a4905c80-56e3-11e9-95be-2e15435f8b3c.png)  ## Environment  OS: Ubuntu 18.04 Browser: Chrome Browser version: Version 73.0.3683.86 (Official Build) (64-bit) Browser Driver version: 73.0.3683.20 Language Bindings version: selenium-webdriver (3.141.0)","closed","D-atoms,","ShockwaveNN","2019-04-04T11:12:56Z","2019-08-14T16:09:55Z"
"","6858","Selenium IDE: 'Execute Script' command fails if the variable has a line break","## 🐛 Bug Report  I'm using Selenium IDE v3.4.4 in Chrome. I'm using the 'store text' command to store an address (with line breaks) as a variable then running 'execute script' on that variable I get the error: Failed: Invalid or unexpected token  Html example is like:  ```    Address        ""Unit 1""          ""South Street""          ""London""          ```  //I get the text value Command: store text target: xpath=//tr[td='Address']/td[2]/span value: custAdd  //I do any javascript command and I get the error Command: execute script target: return ${custAdd}.replace(String.fromCharCode(10),' ') Value: custAdd  I get the error. Failed: Invalid or unexpected token  What does work:  Without doing the 'execute script' I can use the variable with the 'type' command to type the stored address into another field.  I can do the 'execute script' command on any stored variable that has no line breaks.  I would expect this to work (it has done in an old version of selenium 2.9.1 on firefox).  OS: Windows 10 Browser: Chrome Browser version:  71.0.3578.98 Browser Driver version: Selenium IDE 3.4.4","closed","","Andy802","2019-01-16T16:27:12Z","2019-08-14T23:09:45Z"
"","7690","Unable to spawn Edge browser with WebDriverException: Message: Unknown error","## 🐛 Bug Report  I'm unable to launch Edge in Selenium with Python. When trying to create the driver I get: ``` Traceback (most recent call last):   File """", line 1, in    File ""C:\Python\Python37-32\lib\site-packages\selenium\webdriver\edge\webdriver.py"", line 66, in __init__     desired_capabilities=capabilities)   File ""C:\Python\Python37-32\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 157, in __init__     self.start_session(capabilities, browser_profile)   File ""C:\Python\Python37-32\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 252, in start_session     response = self.execute(Command.NEW_SESSION, parameters)   File ""C:\Python\Python37-32\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 321, in execute     self.error_handler.check_response(response)   File ""C:\Python\Python37-32\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 208, in check_response     raise exception_class(value) selenium.common.exceptions.WebDriverException: Message: Unknown error ```  Windows version: Windows 10 Pro, 1809, 17763.805, running in Azure Selenium version: 3.141.0 Python version: 3.7.4 64-bit (the one from here: https://www.python.org/downloads/release/python-374/) Java version: 1.8.0_221 EdgeDriver version: 10.0.17763.1 (from `MicrosoftWebDriver.exe --version`)  ## To Reproduce    Detailed steps to reproduce the behavior:  Install Python, Java. Add EdgeDriver to Windows via: PC Settings -> Search ""optional features"" -> Add a feature -> Install Microsoft WebDriver. Then reboot to make it appear in `C:\Windows\System32\`.  Then inside command prompt: ``` cmd> pip install selenium cmd> python >>> from selenium import webdriver >>> driver = webdriver.Edge() Traceback (most recent call last):   File """", line 1, in    File ""C:\Program Files\Python37\lib\site-packages\selenium\webdriver\edge\webdriver.py"", line 66, in __init__     desired_capabilities=capabilities)   File ""C:\Program Files\Python37\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 157, in __init__     self.start_session(capabilities, browser_profile)   File ""C:\Program Files\Python37\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 252, in start_session     response = self.execute(Command.NEW_SESSION, parameters)   File ""C:\Program Files\Python37\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 321, in execute     self.error_handler.check_response(response)   File ""C:\Program Files\Python37\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 208, in check_response     raise exception_class(value) selenium.common.exceptions.WebDriverException: Message: Unknown error  >>> driver = webdriver.Edge(executable_path=""C:\\Windows\\System32\\MicrosoftWebDriver.exe"") Traceback (most recent call last):   File """", line 1, in    File ""C:\Program Files\Python37\lib\site-packages\selenium\webdriver\edge\webdriver.py"", line 66, in __init__     desired_capabilities=capabilities)   File ""C:\Program Files\Python37\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 157, in __init__     self.start_session(capabilities, browser_profile)   File ""C:\Program Files\Python37\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 252, in start_session     response = self.execute(Command.NEW_SESSION, parameters)   File ""C:\Program Files\Python37\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 321, in execute     self.error_handler.check_response(response)   File ""C:\Program Files\Python37\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 208, in check_response     raise exception_class(value) selenium.common.exceptions.WebDriverException: Message: Unknown error ```  I've also checked in Task Manager that no instances of Edge (as I know it doesn't have multiple profiles) or MicrosoftWebDriver are already running. If any were, I killed them off.  ## Expected behavior  Edge launches as all the other browsers I've tried do and I can then drive it via my `driver` instance.  ## Test script or set of commands reproducing this issue  See detailed steps to reproduce above.  ## Environment  OS: Windows 10 Pro, 1809, 17763.805, running in Azure Browser: Edge Browser version: Microsoft Edge 44.17763.771.0 Browser Driver version: 10.0.17763.1 (from `MicrosoftWebDriver.exe --version`) Language Bindings version: Python 3.7.4 64-bit  Selenium version (if applicable): 3.141.0","closed","","Jamie-","2019-10-16T14:05:37Z","2019-11-27T18:09:03Z"
"","7081","Calling Action second time in the page- No action takes place on the page for Firefox browser","## 🐛 Bug Report  I'm trying to hover the mouse using Action on the navigation tabs on the webpage to reveal the dropdown with links. It works perfectly for the first time. When trying to again mouse over to click on an another link in the navigation tab's dropdown, the dropdown just doesn't open.  ## Steps to reproduce:  Hover the mouse on the navigation menu --> Click on a link in the menu --> Again hover the mouse on the navigation menu --> Click on another link in the menu   ## Expected Behaviour:  The Action should work for the second time too and should click on the link in the menu.  No error after performing Action for the second time: 1554278436604	Marionette	DEBUG	0  [0,75,""WebDriver:FindElements"",{""using"":""link text"",""value"":""Charcoal Grills""}] 1554278470912	Marionette	DEBUG	0","closed","R-awaiting answer,","ravimidathala","2019-04-03T08:17:52Z","2019-08-14T07:09:56Z"
"","6921","[Firefox] Selenium::WebDriver::Error::WebDriverError when trying to have an HTTP and HTTPS proxy","## 🐛 Bug Report  I'm trying to have an HTTP and HTTPS proxy when running selenium with capybara. I looked at the various gist/SO answers and the documentation but I'm getting`Selenium::WebDriver::Error::WebDriverError` on the most probably to work code I have.  ## To Reproduce  ``` require 'selenium-webdriver' require 'capybara/dsl'  Capybara.register_driver :selenium do |app|   profile = Selenium::WebDriver::Firefox::Profile.new   proxy = Selenium::WebDriver::Proxy.new(http: ""localhost:8080"", ssl: ""localhost:8080"")   profile.proxy = proxy   options = Selenium::WebDriver::Firefox::Options.new(profile: profile)   Capybara::Selenium::Driver.new(app, browser: :firefox, options: options) end  Capybara.current_driver = :selenium ```  ## Expected behavior  Firefox should open and the HTTP and HTTPS requests should go through the proxy.  ## Environment  OS: OSX Browser: Firefox Browser version: 65.0 Browser Driver version: geckodriver 0.23.0 Language Bindings version: Ruby 2.5.0 with Capybara  Thanks","closed","C-rb,","localhostdotdev","2019-02-08T17:38:20Z","2019-08-14T21:10:03Z"
"","7454","Unable to identify specific browser when using multiCapabilities","## 🐛 Bug Report  I'm new to a automation project and we have selenium running to test a web environment  now i want to test different viewpoints and browsers. But the site requires the browser to login.  Due to concurrency i cant test with a single user.   Please make a way to identify specify browsers when using the multiCapabilities.   Perhaps there is an possibility but i asked on the internet several times no reply.","closed","","Bram-diederik","2019-07-31T11:15:20Z","2019-09-20T08:09:35Z"
"","7410","Debugger.setPauseOnExceptions passed to ChromeDevTools using execute_cdp_cmd() have no effect","## 🐛 Bug Report  I was trying to set[ `Debugger.setPauseOnExceptions`](https://chromedevtools.github.io/devtools-protocol/tot/Debugger#method-setPauseOnExceptions) as `""state"": ""all""` using [`execute_cdp_cmd()`](https://seleniumhq.github.io/selenium/docs/api/py/webdriver_chrome/selenium.webdriver.chrome.webdriver.html#selenium.webdriver.chrome.webdriver.WebDriver.execute_cdp_cmd) method through Selenium Python Clients. But it seems `Debugger.setPauseOnExceptions` passed to ChromeDevTools using `execute_cdp_cmd()` have no effect.  ## Code Block:  	from selenium import webdriver  	chrome_options = webdriver.ChromeOptions()  	chrome_options.add_argument(""start-maximized"") 	chrome_options.add_argument(""disable-infobars"") 	chrome_options.add_argument(""--auto-open-devtools-for-tabs"") 	chrome_options.add_argument(""--remote-debugging-port=0"") 	driver = webdriver.Chrome(options=chrome_options, executable_path=r'C:\Utility\BrowserDrivers\chromedriver.exe') 	driver.execute_cdp_cmd(""Debugger.enable"", {}) 	driver.execute_cdp_cmd(""Debugger.setPauseOnExceptions"", {""state"": ""all""}) 	driver.get(""https://protonmail.com/"")  Result: Despite using `""state"": ""all""` I am still not able to _PauseOnExceptions_.  Detailed steps to reproduce the behavior:  ## Expected behavior  Where as manually turning **ON** _Pause on exception_ correctly pauses the execution.  Screenshot of _Pause on exception_ when turned **ON** manually:  paused_on_exception ![paused_on_exception](https://user-images.githubusercontent.com/26503213/61528288-fe6f2500-aa3b-11e9-867f-2d0e15145a0c.png)  ## Actual behavior:  Screenshot of error on ChromeDevTools Console tab:  Console ![Console](https://user-images.githubusercontent.com/26503213/61528352-26f71f00-aa3c-11e9-8c68-4958fb2be2e3.png)   Screenshot of error on ChromeDevTools Sources tab where _Pause on exception_ is not selected:  Sources ![Sources](https://user-images.githubusercontent.com/26503213/61528371-2eb6c380-aa3c-11e9-8bb7-eb99ae758b11.png)   ## Environment  OS: Windows 8 Selenium version: 3.141.0 Browser: Google Chrome Browser version: 75.0 Browser Driver version: ChromeDriver v75.0 Language Bindings version: Python  Selenium Grid version (if applicable): N/A","closed","D-chrome,","Debanjan-B","2019-07-19T10:23:58Z","2020-04-25T08:17:47Z"
"","7485","javascript error: Cannot read property 'getAttribute' of null with ChromeDriver 76","## 🐛 Bug Report  I updated ChromeDriver from 74 -> 76 and got this error when started e2e tests of Chrome extension:  ```      JavascriptError: javascript error: Cannot read property 'getAttribute' of null   (Session info: chrome=76.0.3809.100)       at Object.throwDecodedError (node_modules/selenium-webdriver/lib/error.js:550:15)       at parseHttpResponse (node_modules/selenium-webdriver/lib/http.js:560:13)       at Executor.execute (node_modules/selenium-webdriver/lib/http.js:486:26)       at process._tickCallback (internal/process/next_tick.js:68:7) ```  The error appears immediately on Chrome web driver build here https://github.com/poanetwork/nifty-wallet/blob/fix-gasprice-estimation/test/e2e/func.js#L56-L69, that is called by https://github.com/poanetwork/nifty-wallet/blob/fix-gasprice-estimation/test/e2e/nw.spec.js#L38-L43  There was no error with ChromeDriver 74.x  ## To Reproduce  The same scenario as in test script section below ⬇️   Clone repository -> install dependencies -> start e2e tests  ## Expected behavior  There shouldn't be error  ## Test script or set of commands reproducing this issue  ``` git clone https://github.com/poanetwork/nifty-wallet -b fix-gasprice-estimation npm i npm run test:e2e:chrome ```  ## Environment  OS: OSX 10.14.6 Browser: Chrome Browser version: 76.0.3809.100 Browser Driver version: ChromeDriver 76.0.0 Language Bindings version: Node js v10.16.0, `""selenium-webdriver"": ""^4.0.0-alpha.4""`","closed","","vbaranov","2019-08-09T18:00:14Z","2019-09-29T13:09:36Z"
"","7528","By.Classname does not work properly when having classnames with trailing spaces","## 🐛 Bug Report  I test a website where some classnames have trailing spaces (that's another story) I found out that there was a change between chromedriver version 74 to 75  Since version 75 the elements could not be found anymore using the following statement: `webDriver.findElements(By.className(""Section__title-box ""))` Chromedriver 73, 74 and firefox works fine!   ### Html-code: \ \ Documents\\  \\My requests\\  ### Tested different drivers/browsers Firefox 68 finds two elements ✔ Chromedriver 73 & 74 finds one element  Chromedriver >75 does not find any element ❗  If changing the statement to  `webDriver.findElements(By.className(""Section__title-box""))` Firefox 68 finds two elements ✔ Chromedriver 73 & 74 finds two elements ✔ Chromedriver 75 & 76 finds one element   ### Workarounds Using By.xpath with contains(@class,'Section__title-box ')   ## Deep Analyse: In my option, the following code seems to work differently in the driver versions  By.java:404 `private String containingWord(String attribute, String word)  {             return ""contains(concat(' ',normalize-space(@"" + attribute + ""),' '),' "" + word + "" ')"";         }`  ## Environment  OS: Linux Browser: Chromium Browser version: 75.latest & 76.latest Browser Driver version:  chromedriver 75.0.3770.140 & chromedriver 76.0.3809.126 Language Bindings version: Java 3.141.0   I'm not sure if that behavior is correct or not, because I think trailing spaces are not ok.","closed","C-java,","boris779","2019-08-29T12:41:45Z","2019-12-19T18:37:26Z"
"","7023","Unable to install selenium server standalone 3.8.0","## 🐛 Bug Report  I started having problem when installing selenium-server-standalone-3.8.0.jar from npm this afternoon. Can someone help, please?  ## To Reproduce We are pulling selenium-server-standalone from npm and install to local and aws instance with a clean build, which mean no node_modules folder. Below is the error > selenium-standalone installation starting >  > selenium install: > from: https://selenium-release.storage.googleapis.com/3.8/selenium-server-standalone-3.8.0.jar > to: /Users/weiming.chen/Projects/AD-PracticeOnline-Automation-Tests/node_modules/selenium-standalone/.selenium/selenium-server/3.8.0-server.jar >  > chrome install: > from: https://chromedriver.storage.googleapis.com/2.37/chromedriver_mac64.zip > to: /Users/weiming.chen/Projects/AD-PracticeOnline-Automation-Tests/node_modules/selenium-standalone/.selenium/chromedriver/2.37-x64-chromedriver >  > firefox install: > from: https://github.com/mozilla/geckodriver/releases/download/v0.23.0/geckodriver-v0.23.0-macos.tar.gz > to: /Users/weiming.chen/Projects/AD-PracticeOnline-Automation-Tests/node_modules/selenium-standalone/.selenium/geckodriver/0.23.0-x64-geckodriver > /Users/weiming.chen/Projects/AD-PracticeOnline-Automation-Tests/node_modules/selenium-standalone/bin/selenium-standalone:111 >         throw err; >         ^ >  > Error: Could not download https://selenium-release.storage.googleapis.com/3.8/selenium-server-standalone-3.8.0.jar >     at Request. (/Users/weiming.chen/Projects/AD-PracticeOnline-Automation-Tests/node_modules/selenium-standalone/lib/install.js:373:21) >     at emitOne (events.js:116:13) >     at Request.emit (events.js:211:7) >     at Request.onRequestResponse (/Users/weiming.chen/Projects/AD-PracticeOnline-Automation-Tests/node_modules/request/request.js:1066:10) >     at emitOne (events.js:116:13) >     at ClientRequest.emit (events.js:211:7) >     at HTTPParser.parserOnIncomingClient [as onIncoming] (_http_client.js:551:21) >     at HTTPParser.parserOnHeadersComplete (_http_common.js:117:23) >     at TLSSocket.socketOnData (_http_client.js:440:20) >     at emitOne (events.js:116:13)  ## Environment  OS:  Browser Driver version:","closed","","weiming-myob","2019-03-13T04:23:50Z","2019-08-14T19:09:55Z"
"","6947","Could not convert 'text' to string on Firefox","## 🐛 Bug Report  I started getting the error `Could not convert 'text' to string` on Firefox. I know there is an old issue about this but I have updated version of the selenium web driver and I am still getting this error (just from today).   ## To Reproduce  Use a script `ElementFinder.sendKeys(""somevalue"")` and execute it on browser stack in firefox  ## Expected behavior  Script should work  ## Test script or set of commands reproducing this issue  `ElementFinder.sendKeys()`  ## Environment  Platform	 Windows 10 Browser	 Firefox 65.0 Browserstack  ## Observations  When I changed the following piece of code on `lib/webdriver.js`  ```javascript     if (!this.driver_.fileDetector_) {       return this.schedule_(           new command.Command(command.Name.SEND_KEYS_TO_ELEMENT).               setParameter('text', keys.then(keys => keys.join(''))).               setParameter('value', keys),           'WebElement.sendKeys()');     } ```  to  ```javascript     if (!this.driver_.fileDetector_) {       return this.schedule_(           new command.Command(command.Name.SEND_KEYS_TO_ELEMENT).               setParameter('text', keys.then(keys => keys.join(''))).               setParameter('value', keys.then(keys => keys.join(''))),           'WebElement.sendKeys()');     } ``` made it work","closed","C-nodejs,","dparne","2019-02-19T04:37:50Z","2019-08-14T21:09:52Z"
"","7833","IEDriver (v 3.150.1) errors out while opening a page in Internet Explorer (v11.55)","## 🐛 Bug Report  I just upgraded the IEDriver version to 3.150.1, and it works as expected on Internet Explorer version 11.47. However, on Internet Explorer version 11.55, it throws a timeout error while opening a webpage (https://www.google.com). Note that it successfully opens the page, but also raises timeout exception.   ## To Reproduce * Download IEDriver 3.150.1. * Use the Internet Explorer browser version 11.55. * Open https://www.google.com. * You can see that the page was opened but the function call raises exception as shown below.  > OpenQA.Selenium.WebDriverException: 'The HTTP request to the remote WebDriver server for URL http://localhost:62280/session/05fb2284-8409-4ab3-9120-c35b7ca20b8b/url timed out after 60 seconds.'   ## Expected behavior  The given url (google) should be loaded successfully and the function call to selenium should return without any error.  ## Test script or set of commands reproducing this issue ``` using System; using OpenQA.Selenium; using OpenQA.Selenium.IE;  namespace ReproduceBug {     class Program     {         static void Main(string[] args)         {             IWebDriver webDriver = new InternetExplorerDriver();             webDriver.Navigate().GoToUrl(""https://www.google.com"");             webDriver.Quit();         }     } } ```   ## Environment  OS: Windows 10  Browser:  Internet Explorer Browser version: 11.55 Browser Driver version: IEDriver 3.150.1 Language Bindings version:  Selenium Webdriver .net bindings 3.141.0 Selenium Grid version (if applicable):  -","closed","C-dotnet,","viggywork96","2019-12-02T11:11:36Z","2021-09-05T08:08:25Z"
"","7564","Issue with Latest Chrome Driver Version 77 on Android mobile devices.","## 🐛 Bug Report  I have updated my chrome driver version to 77 and my samsung s8 device chrome to 77 to run appium tests in my local. Its all working until I had 76 chrome version on that mobile. I can see now it fails and complaints about 77 version.  ## Environment Appium version (or git revision) that exhibits the issue: 1.15.0-beta.1 Last Appium version that did not exhibit the issue (if applicable): Release Node.js version (unless using Appium.app|exe): v12.8.1 Npm or Yarn package manager: npm Mobile platform/version under test: 8.0 Real device or emulator/simulator: Samsung S8 Appium CLI or Appium.app|exe: Appium CLI Mobile Chrome Version : 77 $  chromedriver --version ChromeDriver 77.0.3865.40 (f484704e052e0b556f8030b65b953dce96503217-refs/branch-heads/3865@{#442}) $ which chromedriver /usr/local/bin/chromedriver  ## Details  > [Chromedriver] Error: No Chromedriver found that can automate Chrome '77.0.3865'. See https://github.com/appium/appium/blob/master/docs/en/writing-running-appium/web/chromedriver.md for more details. You could also try to enable automated chromedrivers download server feature >  > [debug] [WD Proxy] Got response with status 200: {""sessionId"":""fdac66f928757106b922daaff342f4aa"",""status"":13,""value"":{""message"":""unknown error: Failed to forward ports to device ce10182a6065d91a03: . unknown error: The adb command failed. Extra response: .\n (Driver info: chromedriver=77.0.3865.40 (f484704e052e0b556f8030b65b953dce96503217-refs/branch-heads/3865@{#442}),platform=Mac OS X 10.14.6 x86_64)""}}  ## Logs  https://gist.github.com/skumar1122/2a90ac58c53130e49ef2194dfc6748aa","closed","","skumar1122","2019-09-13T13:03:53Z","2019-11-16T17:08:03Z"
"","7782","Actions class methods for dragging and dropping does not work","## 🐛 Bug Report  I have faced with an issue that drag and drop does not work for logic in my application.  I am using C# for triggering the tests. To verify if it is issue with my project or with WebDriver I have created simple project that tries to drag and drop in https://www.seleniumeasy.com/test/drag-and-drop-demo.html site. It is reproducible for Chrome, IE, FF (in Chrome and FF it makes draggable element yellow but nothing happen, in IE - nothing happens. The code is below: ``` var driver = new ChromeDriver();             driver.Navigate().GoToUrl(""https://www.seleniumeasy.com/test/drag-and-drop-demo.html"");             var from = driver.FindElementByXPath(""//div[@id='todrag']/span"");             var to = driver.FindElementById(""mydropzone"");             Actions action = new Actions(driver);              action.DragAndDrop(from, to).Perform();              action.ClickAndHold(from).MoveToElement(to).Build().Perform();             action.ClickAndHold(from).MoveToElement(to).Release().Build().Perform();              action.DragAndDropToOffset(from, to.Location.X, to.Location.Y).Build().Perform(); ``` All these combinations does not work. If not moving mouse to browser it throws OpenQA.Selenium.WebDriverException: 'The HTTP request to the remote WebDriver server for URL http://localhost:63069/session/abde98f8ab6a2015869e043c17fcc285/actions timed out after 60 seconds.'  ## To Reproduce  Detailed steps to reproduce the behavior: 1. Create a console project from scratch 2. Add Selenium NuGet package 3. Add code from above 4. Run it  ## Expected behavior  Element should be dragged and dropped to droppable zone.  ## Test script or set of commands reproducing this issue  ``` var driver = new ChromeDriver();             driver.Navigate().GoToUrl(""https://www.seleniumeasy.com/test/drag-and-drop-demo.html"");             var from = driver.FindElementByXPath(""//div[@id='todrag']/span"");             var to = driver.FindElementById(""mydropzone"");             Actions action = new Actions(driver);              action.DragAndDrop(from, to).Perform();              action.ClickAndHold(from).MoveToElement(to).Build().Perform();             action.ClickAndHold(from).MoveToElement(to).Release().Build().Perform();              action.DragAndDropToOffset(from, to.Location.X, to.Location.Y).Build().Perform(); ```  ## Environment  OS: Windows 10 Browser: Chrome (latest), FF (latest), IE Browser version: 78.0.3904.97 Browser Driver version: 78.0.3904.7000 Language Bindings version: C# Selenium Grid version (if applicable): -","closed","","olezhlviv","2019-11-13T15:09:50Z","2020-04-18T22:16:12Z"
"","6932","""unknown error: call function result missing 'value'"" when return a jQuery object in an execute_script","## 🐛 Bug Report  I get this error when executing javascript that uses jQuery and returns a jQuery object.  Interesting thing is ignoring the error is fine.  ## Expected behavior  Just works, removes the header or just ignores if there is no header.  ## Test script or set of commands reproducing this issue  ``` require 'selenium-webdriver' require 'capybara/dsl'  class C   extend Capybara::DSL end  Capybara.current_driver = :selenium_chrome Capybara.default_max_wait_time = 5  C.visit(""https://getbootstrap.com/"") C.execute_script(""$('#header').remove()"") ```  ## Environment  OS: macOS Browser: Chrome Browser version: 72.0.3626.96 (Official Build) (64-bit) Browser Driver version: ChromeDriver 2.34.522932 (4140ab217e1ca1bec0c4b4d1b148f3361eb3a03e) Language Bindings version: Ruby 3.141.0 (selenium-wedriver)","closed","C-rb,","localhostdotdev","2019-02-13T02:08:07Z","2019-08-14T22:09:41Z"
"","7340","selenium with edge and Internet Explorer 11 - Javascript client","## 🐛 Bug Report  I create this issue so that people with difficulties can find it when searching.  I explain here how I made it to work to run tests for ie11 (internet explorer 11) and Microsoft Edge using latest versions on June 28 2019. I use the Javascript client selenium-webdriver.  webdriver starts the ie or edge driver on its own.  I assume you know how to set up a test suite. I only document here how to configure edge and ie.  ## To Reproduce  see below  ## Expected behavior  see below  ## Test script or set of commands reproducing this issue  see below  ## Environment  OS: Windows 10 pro for internet explorer you need IEDriverServer.exe on your path use an absolute path with $env:PATH += ';path_to_file' version 3.9 had a bug but 3.8 worked  for edge, you must install the driver version that suits you. for version 18 (edge html and edge chrome have 2 versions versions in one same browser) that I had, a powershell command is needed. Then the MicrosoftWebDriver.exe is reachable in a new powershell. Running the driver manually on the command line gave me which port I need for the config.      let driver;     switch (browserForWebdriver) {       case 'internet explorer':         // const capabilitiesIE = webdriver.Capabilities.ie();         // the internet explorer driver does not allow the option below         // for self-signed certificates         // capabilitiesIE.set('acceptInsecureCerts', true);         driver = (           new webdriver.Builder()           // .withCapabilities(capabilitiesIE) // set by default to ie with forBrowser()             .forBrowser(browserForWebdriver)             .build()         );         break;       case 'MicrosoftEdge':         {           /*             we need a custom solution for edge because the             default session does not uses the right port             the code below was taken from an example given in selenium-webdriver/lib/edge.js           */           // eslint-disable-next-line global-require           const edge = require('selenium-webdriver/edge');            const service = new edge.ServiceBuilder()             .setPort(17556)             .build();            const options = new edge.Options();           /*             invalid certificate unsupported in the doc             https://docs.microsoft.com/en-us/microsoft-edge/webdriver             Accept Insecure TLS Certificates      ""acceptInsecureCerts""   Not Supported   N/A           */           // options.set('acceptInsecureCerts', true);            driver = edge.Driver.createSession(options, service);         }         break;       default:         driver = (           new webdriver.Builder()             .withCapabilities({ acceptInsecureCerts: true })             .forBrowser(browserForWebdriver)             .build()         );         break;     }","closed","","MagicPoulp","2019-06-28T15:17:12Z","2019-08-14T07:09:35Z"
"","7792","JsonException when trying to read console from firefox","## 🐛 Bug Report  I cannot retrieve the firefox console logs, I get the following JsonException when I try to do so: ``` Exception in thread ""main"" org.openqa.selenium.json.JsonException: Unable to determine type from: H. Last 1 characters read: H Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03' System info: host: 'vivat', ip: '127.0.0.1', os.name: 'Linux', os.arch: 'amd64', os.version: '5.3.10-arch1-1', java.version: '1.8.0_232' Driver info: driver.version: RemoteWebDriver 	at org.openqa.selenium.json.JsonInput.peek(JsonInput.java:122) 	at org.openqa.selenium.json.JsonTypeCoercer.lambda$null$6(JsonTypeCoercer.java:140) 	at org.openqa.selenium.json.JsonTypeCoercer.coerce(JsonTypeCoercer.java:126) 	at org.openqa.selenium.json.Json.toType(Json.java:69) 	at org.openqa.selenium.json.Json.toType(Json.java:55) 	at org.openqa.selenium.json.Json.toType(Json.java:50) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:87) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552) 	at org.openqa.selenium.remote.RemoteExecuteMethod.execute(RemoteExecuteMethod.java:35) 	at org.openqa.selenium.remote.RemoteLogs.getRemoteEntries(RemoteLogs.java:81) 	at org.openqa.selenium.remote.RemoteLogs.get(RemoteLogs.java:77)  ```  After debugging on W3CHttpResponseCode#decode, it seems that the exception is thrown because the content of the response is not a JSON but a text/plain that only contains ""HTTP method not allowed"".   When checking what request has been sent, it seems that the following POST request is performed: > POST /session/81a0b1fc-cc58-468e-9976-3d783c18f1db/log  So I guess there is two issues:   - the command is wrong for Firefox   - the error is not parsed correctly  I don't reproduce on Chrome, only on Firefox.  ## To Reproduce  Here's the Java method I'm using to reproduce:  ``` // GeckoDriver v0.26.0 System.setProperty(""webdriver.gecko.driver"", ""/home/urli/geckodriver/geckodriver""); FirefoxOptions firefoxOptions = new FirefoxOptions(); LoggingPreferences logPrefs = new LoggingPreferences(); logPrefs.enable(LogType.BROWSER, Level.ALL);  firefoxOptions.setCapability(CapabilityType.LOGGING_PREFS, logPrefs);  WebDriver driver = new FirefoxDriver(firefoxOptions); driver.get(""https://developer.mozilla.org/fr/docs/Web/API/console""); for (LogEntry logEntry : driver.manage().logs().get(LogType.BROWSER)) {    System.out.println(String.format(""[%s] [%s]"", logEntry.getLevel(), logEntry.getMessage())); } driver.quit(); ```  Detailed steps to reproduce the behavior:  ## Expected behavior  I expect to see the browser console logs.  ## Environment  OS: ArchLinux Browser: Firefox Browser version: 70.0.1 Browser Driver version: GeckoDriver 0.26.0 Language Bindings version: Java 3.141.59","closed","C-java,","surli","2019-11-15T15:21:01Z","2019-12-17T17:34:51Z"
"","7351","Python: Proxy connection doesn't work","## 🐛 Bug Report  I can't connect using proxies via Selenium Firefox WebDriver.  ## To Reproduce There are two ways to connect to a proxy server, none of them work.  1. ``` profile = webdriver.FirefoxProfile() profile.set_preference('network.proxy.type', 1) profile.set_preference('network.proxy.http', '93.41.248.119') profile.set_preference('network.proxy.http_port', 8080) profile.update_preferences() #binary = FirefoxBinary('/home/johnjackson/code/scraping/spotify/geckodriver') browser = webdriver.Firefox(firefox_profile=profile) browser.get(""http://whatismyipaddress.com"") ```  2. ``` proxy_to_use= ""93.41.248.119:8080"" desired_capability = webdriver.DesiredCapabilities.FIREFOX desired_capability['proxy'] = {     'proxyType': ""manual"",     'httpProxy': proxy_to_use         } browser = webdriver.Firefox(capabilities=desired_capability) browser.get(""http://whatismyipaddress.com"") ``` ## Expected behavior  Show proxy IP address  ## Environment  OS: Ubuntu 19.04 Browser: Firefox Browser version: 67.0.4 (64-bit) Browser Driver version: 0.24.0 Language Bindings version: Python 3.7.3 Selenium Grid version (if applicable):","closed","","saitam1","2019-07-02T16:56:04Z","2019-08-14T06:09:54Z"
"","7195","selenium.common.exceptions.WebDriverException: Message: Unrecognized command: POST (Remote webdriver)","## 🐛 Bug Report  I am working with authenticated page. Using Remote webdriver to handle manually authenticated Firefox browser with passing executor_url. With new selenium session it working well;  with Python 2.7.10, geckodriver 0.24.0, Firefox 52.7.1, selenium 3.8.0 ``` >>from selenium import webdriver >>from selenium.webdriver.common.desired_capabilities import DesiredCapabilities     >>cap = DesiredCapabilities().FIREFOX >>cap[""marionette""] = False >>driver = webdriver.Firefox(capabilities=cap) >>driver.execute_script(""return myBalance"") [{u'currency': u'USD', u'balance': 1000.01}] ``` But when I handle it from webdriver.Remote for reuse authenticated browser;  ``` >>from selenium import webdriver >>from selenium.webdriver.common.desired_capabilities import DesiredCapabilities >>cap = DesiredCapabilities().FIREFOX >>cap[""marionette""] = False >>new_driver = webdriver.Remote(command_executor=executor_url, desired_capabilities=cap) >>driver.execute_script(""return myBalance"")  /python/venv/lib/python2.7/site-packages/selenium/webdriver/remote/errorhandler.py"", line 208, in check_response     raise exception_class(value) selenium.common.exceptions.WebDriverException: Message: Unrecognized command: POST /session/89792e61-b195-3d45-8fad-8cdffa7b5a44/execute/sync ```    ## Environment  OS: macos mojave Browser: Firefox Browser version: 52.7.1 Browser Driver version: geckodriver 0.24.0 Selenium: selenium 3.8.0","closed","C-py,","saimneftci","2019-05-10T09:21:26Z","2019-08-14T08:09:41Z"
"","7797","Cannot convert from AppiumOptions to DriverOptions() error when creating new AndroidDriver","## 🐛 Bug Report  I am using the [documentation here](https://github.com/appium/appium-dotnet-driver/wiki/How-to-start-an-AppiumDriver-when-the-server-is-launched-remotely-or-locally) to try and instantiate an AndroidDriver. However, I'm getting a compiler error saying ""Cannot convert from AppiumOptions to DriverOptions() error when creating new AndroidDriver""  ## To Reproduce  ``` using OpenQA.Selenium.Remote; using OpenQA.Selenium.Appium; using OpenQA.Selenium.Appium.Android;  DesiredCapabilities capabilities = new DesiredCapabilities();  capabilities.SetCapability(""deviceName"", ""Android Emulator""); capabilities.SetCapability(""platformName"", ""Android""); capabilities.SetCapability(""app"", """");  AppiumDriver driver = new AndroidDriver(                            new Uri(""http://127.0.0.1:4723/wd/hub""),                                 capabilities); ```  ## Expected behavior  For the code to compile and work.  ## Environment  OS: Windows 10 Language Bindings version: 4.1.1","closed","","nadvolod","2019-11-19T17:23:19Z","2019-12-19T18:37:23Z"
"","7476","Selenium 3.5.3 Chrome options issue with chrome driver 76","## 🐛 Bug Report  I am using selenium 3.5.3 version and the chrome driver version is 76.0.3809. I faced the same issue which is reported in [https://github.com/SeleniumHQ/selenium/issues/7469](url).  To workaround the issue i have tried the below snippet of code  `ChromeOptions options=new ChromeOptions();  options.addArguments(""--start-maximized""); DesiredCapabilities chrome = new DesiredCapabilities.Chrome(); chrome.setCapability(ChromeOptions.CAPABILITY,options); driver = new ChromeDrivers(chrome); driver.get(""https://Bing.com""); driver.quit(); `  The above code is running fine, but chrome options which I set is not working. Many of the users in my tool are using selenium 3.5.3 , can't immediately upgrade it to selenium 3.141.59. Can you please suggest me any workaround (or) fix to set the chrome options.    ## To Reproduce    Detailed steps to reproduce the behavior:  ![code](https://user-images.githubusercontent.com/27405093/62615014-1e528400-b92a-11e9-913a-a83a7d240d14.png)  **output**  ![repro](https://user-images.githubusercontent.com/27405093/62615182-725d6880-b92a-11e9-88f8-e830573ed9f3.png)    ## Expected behavior  The Chrome options should work find in latest chrome driver   ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS: Windows 10 Browser: Chrome  Browser version: 76 Browser Driver version: 76.0.3809 Language Bindings version: Selenium 3.5.3  Selenium Grid version (if applicable): NA    Thanks, Krishna","closed","C-java,","kumarkrish85","2019-08-07T10:17:06Z","2019-09-18T20:09:35Z"
"","6951","Safari 12.1 driver.findElement/WebDriverWait throws java.lang.nullpointerexception null","## 🐛 Bug Report  I am trying to run a java-maven selenium test on Mac OS High Sierra with Safari browser 12.2 version. The browser gets launched and the url is loaded but the test fails with java.lang.nullpointerexception null at driver.findElement(By.className(""Locator"")  I have set the java path in my profile using the information from http://www.sajeconsultants.com/how-to-set-java_home-on-mac-os-x/ I have also enabled Allow Remote Automation in the safari browser. I tried using various versions of selenium-java 3.14.0 / 3.141.59 through maven pom.xml I have updated the safari browser to 12.2 version. Also tried running the test on Safari Technology Preview 75 browser  This is only stack trace I am getting:  java.lang.NullPointerException: null at SafariTest.LoginUser(SafariTest.java:41) at SafariTest.test(SafariTest.java:150) -->  ## Expected behavior  No java.lang.NullPointerException to be encountered   ## Test script or set of commands reproducing this issue  WebDriver driver = new SafariDriver(); //Browser is maximized driver.manage().window().maximize(); //Browser navigates to the url driver.navigate().to(url); driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS); WebElement e = driver.findElement(By.className(""Locator"");  ## Environment  OS: Mac os high sierra Browser: Safari Browser version: 12.2 Browser: Safari Technology Preview Browser version: 75 Browser Driver version: Inbuilt safaridriver Language Bindings version: selenium-java 3.141.59","closed","","riticar","2019-02-19T23:14:39Z","2019-08-14T21:09:57Z"
"","7774","org.openqa.selenium.UnsupportedCommandException: sendKeysToActiveElement when using perform method of Actions class","## 🐛 Bug Report  I am getting UnsupportedCommandException when using the perform method of the action class  Chrome version : 78 Build info: version: '3.141.59'  ## To Reproduce  org.openqa.selenium.UnsupportedCommandException: sendKeysToActiveElement Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03' System info: host: 'DESKTOP-AHAMQL5', ip: '172.26.147.129', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_192' Driver info: driver.version: RemoteWebDriver 	at org.openqa.selenium.remote.http.AbstractHttpCommandCodec.encode(AbstractHttpCommandCodec.java:218) 	at org.openqa.selenium.remote.http.AbstractHttpCommandCodec.encode(AbstractHttpCommandCodec.java:117) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:152) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552) 	at org.openqa.selenium.remote.RemoteExecuteMethod.execute(RemoteExecuteMethod.java:35) 	at org.openqa.selenium.remote.RemoteKeyboard.sendKeys(RemoteKeyboard.java:38) 	at org.openqa.selenium.interactions.SendKeysAction.perform(SendKeysAction.java:56) 	at org.openqa.selenium.interactions.CompositeAction.perform(CompositeAction.java:34) 	at org.openqa.selenium.interactions.Actions$BuiltAction.perform(Actions.java:642) 	at org.openqa.selenium.interactions.Actions.perform(Actions.java:595)  Detailed steps to reproduce the behavior:  ## Expected behavior  Its working fir in chrome version 75  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS: Windows 10  Browser: Chrome  Browser version: 78.0.3904.97  Browser Driver version: ChromeDriver 78.0.3904.70","closed","R-awaiting answer,","Taqueem","2019-11-12T09:04:35Z","2020-04-19T06:52:02Z"
"","7739","Bug Issue","## 🐛 Bug Report  I am getting this error,   `Traceback (most recent call last):   File ""quickstart.py"", line 4, in      from quorapy import QuoraPy   File ""C:\Users\Farath Shba\Downloads\QuoraPy-master\quorapy\__init__.py"", line 1, in      from .quorapy import QuoraPy   File ""C:\Users\Farath Shba\Downloads\QuoraPy-master\quorapy\quorapy.py"", line 8, in      from .login_util import login_user   File ""C:\Users\Farath Shba\Downloads\QuoraPy-master\quorapy\login_util.py"", line 5, in      from selenium.webdriver.common.action_chains import ActionChains ImportError: No module named selenium.webdriver.common.action_chains`  ## To Reproduce  I am running a local script from Command Prompt from Windows 10 machine, which throws this error.   ## Expected behavior Script should run properly.  ## Test script or set of commands reproducing this issue  The issue is from https://github.com/socialbotspy/QuoraPy (quickstart.py in specific) where it throws the error.  ## Environment  OS: Windows 10 Browser: NIL Browser version: NIL Browser Driver version: NIL Language Bindings version: Python 2.7 Selenium Grid version (if applicable): NIL","closed","C-py,","farisoft","2019-11-04T06:43:46Z","2020-02-09T05:11:03Z"
"","7582","Error Value cannot be null. parameter name : Source","## 🐛 Bug Report  I am getting an error 'Value cannot be null. parameter name :source' after filling password filed and submitting the page through selenium script. But am not getting this error by doing manually. Following code is used for setting the password   ----------------------------------------- var passwordtxt=driver.FindElement(By.Id(""txtpassword"")); var JSexecutor= (IJavaScriptExecutor)driver; JSexecutor.ExecuteScript(""arguments[0].setAttribute('value',arguments[1])"",passwordtxt,""mypassword""); -----------------------------------------  ## Environment  OS:","closed","","VineethTV","2019-09-20T06:43:30Z","2019-10-20T07:23:35Z"
"","7573","Error when running Firefox tests on Windows","## 🐛 Bug Report  Hi, can you help me with following issue? [Manager](https://github.com/bonigarcia/webdrivermanager/) correctly gets the driver and then it fails when JVM cannot find class org/openqa/selenium/os/WindowsUtils. I tried to Google this class, but was not able to find out what Maven dependency am I missing.   ``` 2019-09-17 11:52:48 [main] DEBUG io.github.bonigarcia.wdm.Preferences - Preference found firefox69=0.25.0 (valid until 2019-09-18 11:21:47) 2019-09-17 11:52:48 [main] INFO  i.g.bonigarcia.wdm.WebDriverManager - Using geckodriver 0.25.0 (since Mozilla Firefox 69 is installed in your machine) 2019-09-17 11:52:48 [main] DEBUG i.g.bonigarcia.wdm.WebDriverManager - Driver geckodriver 0.25.0 found in cache 2019-09-17 11:52:48 [main] INFO  i.g.bonigarcia.wdm.WebDriverManager - Exporting webdriver.gecko.driver as C:\Users\kfrajtak\.m2\repository\webdriver\geckodriver\win64\0.25.0\geckodriver.exe  java.lang.NoClassDefFoundError: org/openqa/selenium/os/WindowsUtils 	at rg.openqa.selenium.firefox.FirefoxBinary.locateFirefoxBinariesFromPlatform(FirefoxBinary.java:403) 	at org.openqa.selenium.firefox.FirefoxBinary.(FirefoxBinary.java:109) 	at java.base/java.util.Optional.orElseGet(Optional.java:369) 	at org.openqa.selenium.firefox.FirefoxOptions.getBinary(FirefoxOptions.java:216) 	at org.openqa.selenium.firefox.FirefoxDriver.toExecutor(FirefoxDriver.java:165) 	at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:125) 	at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:103) 	at io.github.bonigarcia.wdm.test.FirefoxTest.setupTest(FirefoxTest.java:52) ``` Thanks, Karel    ## To Reproduce  Clone https://github.com/bonigarcia/webdrivermanager-examples project and run any Firefox test on Windows.  ## Expected behavior  I expect the FF test to finish.  ## Environment  OS: Windows10 Browser: Firefox Browser version: 69.0 (64-bit) Browser Driver version: 71.0.0.7191 (file version taken from geckodriver.exe properties dialog) Language Bindings version: Java 3.141.59 More env. details in log (see above)","closed","","kfrajtak","2019-09-17T12:31:49Z","2019-10-18T12:09:45Z"
"","7385","Single-color screenshots take 8 seconds in IEDriver","## 🐛 Bug Report  Hi there! 👋  I came across https://github.com/SeleniumHQ/selenium/pull/3758 while debugging performance issues with IEDriverServer for screenshots that are one-color (white in my case). The call to `takeElementScreenshot` takes roughly 8 seconds when an element is of a single color. This is what I have in the IEDriverServer.exe debug logs:   ``` D 2019-07-11 04:39:24:497 c:\projects\webdriver\cpp\iedriver\commandhandlers\screenshotcommandhandler.cpp(88) Failed to capture non single color browser image at 0 try D 2019-07-11 04:39:26:512 c:\projects\webdriver\cpp\iedriver\commandhandlers\screenshotcommandhandler.cpp(88) Failed to capture non single color browser image at 1 try D 2019-07-11 04:39:28:526 c:\projects\webdriver\cpp\iedriver\commandhandlers\screenshotcommandhandler.cpp(88) Failed to capture non single color browser image at 2 try D 2019-07-11 04:39:30:540 c:\projects\webdriver\cpp\iedriver\commandhandlers\screenshotcommandhandler.cpp(88) Failed to capture non single color browser image at 3 try D 2019-07-11 04:39:30:544 c:\projects\webdriver\cpp\iedriver\commandhandlers\screenshotcommandhandler.cpp(213) Size of screenshot image stream is 443 D 2019-07-11 04:39:30:548 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(804) Command execution for takeElementScreenshotcomplete ```  The retry-behavior was introduced in 48efdf94e355e0771cb5b0d9028e72118e65f60b in what I think is a workaround for an underlying IE issue. Here's what the commit message says:   ``` commit 48efdf94e355e0771cb5b0d9028e72118e65f60b Author: Eran Mes  Date:   Tue Apr 3 12:02:17 2012 +0000      EranMes: The screenshots taken by the IE driver are sometimes blank. Taking another  screenshot reduces the chance for a blank screenshot.      r16437 ```  ## To Reproduce  Create a single-color element, e.g.  ```  ``` then, use `takeElementScreenshot` to capture the element. Wait roughly 8 seconds to get the resulting base64 image.   ## Expected behavior  The time it takes to take a single-color screenshot should be comparable to screenshots that are of two or more colors.   ## Environment  OS: Windows 10 Browser: Internet Explorer 10 Browser version: 11.557.17763.0 Browser Driver version: IEDriverServer.exe, 3.141.0 (32 bit) Language Bindings version: selenium-webdriver@4.0.0-alpha.1","closed","I-stale,","trotzig","2019-07-11T12:27:49Z","2021-12-04T00:06:39Z"
"","7729","Cannot call non W3C standard command while in W3C mode","## 🐛 Bug Report  Hi my friends,  i have a automation web app for execute in mobile devices, i have the next error when i execute the project  Caused by: org.openqa.selenium.UnsupportedCommandException: unknown command: Cannot call non W3C standard command while in W3C mode  why is this error?   info: Android 9 appium 1.15.1 Serenity BDD Core 2.0.82 appium Client 7.2.0 Chrome Version 78.0.3904.62 chromeDriver 78.0.3904.70 Java 1.8 [appium-server-logs.txt](https://github.com/SeleniumHQ/selenium/files/3791132/appium-server-logs.txt) [Eclipselog.txt](https://github.com/SeleniumHQ/selenium/files/3791133/Eclipselog.txt)","closed","","apulido15","2019-10-30T21:07:05Z","2019-11-30T20:09:40Z"
"","7011","Problem when try to find a object into a document html","## 🐛 Bug Report  Hi Everyone,  I have a problme when try to find an object in a web page, I attached an image, like you see, the object that we try to automate is an input, but this is into a second html, I try to use the id, xpath, class, and all the properties of selector, but it can´t, always appears the same error: NoSuchElementException: Unable to find element with id..., so I work with waits, and sleeps, but it´s the same, do you know the way to build an xpath to find this objct, i know the structure of web page is weird but it´s what i has, so please, if you know how, let me know, thank you so much. ![helpgw](https://user-images.githubusercontent.com/28601971/53999780-c7464a00-4112-11e9-9ce5-8fa653f50c1e.png)   ## Environment  OS: Windows 10 Browser: Internet Explorer  Browser version: 7 Browser Driver version: IEDriverServer  Language Bindings version: Java 6","closed","","jyarlequefl","2019-03-08T00:54:27Z","2019-08-14T20:09:45Z"
"","6898","Click() on left handed mouse executing the wrong mouse button","## 🐛 Bug Report  Hi My mouse is configured for a left handed user (right and left click are reversed).  When using the click() option, it clicks on the wrong button.  Thanks  OS:  Windows 10 Browser: IE Browser version: 11.523","closed","D-IE,","AviFix","2019-01-30T07:55:51Z","2019-08-14T17:09:35Z"
"","7793","Zooming browsers using short cut keys such as ""CMD+"" does not work","## 🐛 Bug Report  Hello,  I am trying to use selenium to control a browser programatically. I would like to be able to send the keys ""CMD-"" (or ""CTRL-"") to zoom out. I have tried every different way I can think of of sending these keys with no luck. I have tested this on both chromedriver and geckodriver on my macbook, and on geckodriver on my raspberry pi.  It looks like this closed issue was reporting a similar bug: https://github.com/SeleniumHQ/selenium/issues/4244  ## To Reproduce  ## Expected behavior  I would expect that sending the `COMMAND` and `SUBTRACT` keys together would zoom out on mac. Or sending the `CONTROL` and `SUBTRACT` keys together would zoom out on windows/linux.  See the script below to see all the code I've used to try and get this functionality to happen.  ## Test script or set of commands reproducing this issue  Python script:  ```python from selenium import webdriver from selenium.webdriver.common.keys import Keys from selenium.webdriver import ActionChains import time  browser = webdriver.Chrome(     executable_path='/Users/nicholasgottschlich/Library/SeleniumWebdrivers/chromedriver') # browser = webdriver.Firefox( #     executable_path='/Users/nicholasgottschlich/Library/SeleniumWebdrivers/geckodriver')   def doit():     browser.get('https://google.com')      time.sleep(1)      print('start')     actions = ActionChains(browser)     # actions.send_keys(Keys.COMMAND).perform()     # actions.key_down(Keys.COMMAND).send_keys(Keys.SUBTRACT).perform()     # actions.key_down(Keys.COMMAND).send_keys('_').perform()     # actions.send_keys(Keys.COMMAND, Keys.SUBTRACT, Keys.NULL).perform()     # actions.key_down(Keys.COMMAND).send_keys(Keys.SUBTRACT, Keys.NULL).perform()     # actions.send_keys(Keys.COMMAND + Keys.SUBTRACT).perform()     # actions.send_keys(Keys.COMMAND + Keys.SUBTRACT + Keys.NULL).perform()     # html = browser.find_element_by_tag_name(""html"")     # body = browser.find_element_by_tag_name(""body"")     # print(html)     # html.send_keys(Keys.COMMAND, Keys.SUBTRACT, Keys.NULL)     # html.send_keys(Keys.COMMAND, '-')     # body.send_keys(Keys.COMMAND, Keys.SUBTRACT, Keys.NULL)     # html.send_keys(Keys.COMMAND + Keys.SUBTRACT + Keys.NULL)     print('finish')   if __name__ == '__main__':     doit() ```  ## Environment  OS: macOS Mojave 10.14.6, Raspbian for Raspberry Pi Browser + version: chromedriver (78.0.3904.97 (Official Build) (64-bit)) and geckodriver 70.0.1 (64-bit) Browser Driver version: geckodriver: https://github.com/mozilla/geckodriver/releases/tag/v0.26.0 chromedriver: 78.0.3904.70 Language Bindings version: Python 3.7.4","closed","","Nick-Gottschlich","2019-11-17T18:45:25Z","2021-09-05T08:36:06Z"
"","7436","Getting assembley reference exceptions in the WebDriver 4 Alpha2 version in DotNet bindings when using .NetStandard or .NetCore projects","## 🐛 Bug Report  Getting reference exception to these 2 packages: System.Private.CoreLib  System.Private.Uri  I manually installed these assembleys but still was having this exception Worked fined when downgraded to the alpha1 version   Even though the screenshot was taken on Mac, it also does happen on Windows platform.  Having this issue .NetCore and .NetStandard Works fine in .NetFramework -->  ## To Reproduce  1. Create .NetCore or .NetStandard class library project 2. Add Selenium.WebDriver, Selenium.Support alpha2 packages and latest nUnit package 3. Compile  Expected: compiles without the issues Actual: getting package reference exception even after adding those packages manually  ![1](https://user-images.githubusercontent.com/40716729/62001856-bd27e680-b0c7-11e9-9d78-44267c4f8907.png)","closed","C-dotnet,","okyrylenko","2019-07-28T03:39:44Z","2020-04-18T22:16:16Z"
"","7824","Getting ""UnreachableBrowserException"" exception when running multiple scripts in parrallel with 4.0.0-alpha-3 java bindings","## 🐛 Bug Report  Getting ""UnreachableBrowserException"" exception when running multiple scripts in parrallel with 4.0.0-alpha-3 java bindings  it works fine when I run scripts individually but failing when in parallel. Also, different scripts failing each time, there is no pattern on how they fail full exception: org.openqa.selenium.remote.UnreachableBrowserException: Error communicating with the remote browser. It may have died. Build info: version: '4.0.0-alpha-3', revision: '8c567de6dc' System info: host: 'removed', ip: 'removed', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_221' Driver info: driver.version: RemoteWebDriver Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 77.0.3865.120, chrome: {chromedriverVersion: 77.0.3865.40   ## Test script or set of commands reproducing this issue  download this repo and execute executeAllProd.xml file https://github.com/okyrylenko/JavaTestNGFramework","closed","R-awaiting answer,","okyrylenko","2019-11-28T16:07:49Z","2020-04-25T08:18:41Z"
"","7619","showModalDialog (IE) and isDisplayed() throws NullPointerException","## 🐛 Bug Report  For modal window that is opened by window.showModalDialog in IE (other browsers don't support it) it's possible to find WebElements, but calling isDisplayed() method throws NullPointerException. Other methods like getTagName() are ok. isDisplayed() is called in some ExpectedConditions, so it leads to problems with WebDriverWaits  ## To Reproduce  1. Open in IE html page with **""window.showModalDialog""** in javascript for this page. 2. Fire event to call this function (e.g. button click). 3. Switch to modal window. 4. Find any WebElement and call isDisplayed() method for it.  ## Expected behavior  isDisplayed() returns true/false, does not throw exception.  ## Test script or set of commands reproducing this issue  As jsfiddle and similar web-sites don't support IE. [https://jsbin.com/royexapiwo/1/edit](https://jsbin.com/royexapiwo/1/edit) can be used by click() need to be done manually.  ```html                function openWindow() {         var myArguments = new Object();         window.showModalDialog(""https://www.seleniumhq.org/"", '', '');       }                  Open window     ```  ``` java WebDriver driver = new InternetExplorerDriver();  driver.get(""https://jsbin.com/royexapiwo/1/edit""); //supports IE but click() need to be done manually  String mainWindowHandle = driver.getWindowHandle(); driver.switchTo().frame("""").switchTo().frame(""JS Bin Output ""); WebElement button = driver.findElement(By.tagName(""button"")); button.click();  List handles = new ArrayList(driver.getWindowHandles()); if(mainWindowHandle.equals(handles.get(0))) { 	driver.switchTo().window(handles.get(1)); } else { 	driver.switchTo().window(handles.get(0)); } System.out.println(driver.findElement(By.cssSelector("".downloadBox"")).getTagName()); //pass System.out.println(driver.findElement(By.cssSelector("".downloadBox"")).isDisplayed()); //fail ```  ## Environment  OS: Win7, Win10 Browser: Internet Explorer Browser version: 11.0.9600.19463 Browser Driver version: 3.14.0.0 Language Bindings version: Java 3.141.59  ## StackTrace  ``` java.lang.NullPointerException 	at org.openqa.selenium.remote.RemoteWebElement.isDisplayed(RemoteWebElement.java:329) 	at ModalTest.modalIE(ModalTest.java:31) ```  ## Failed method in Selenium  ```java     public boolean isDisplayed() {         Object value = this.execute(""isElementDisplayed"", ImmutableMap.of(""id"", this.id)).getValue();          try {             return (Boolean)value; //","closed","","Varro88","2019-09-30T08:39:45Z","2019-11-04T21:07:51Z"
"","7845","🐛 Bug Report: find_elements_by_xpath failing to get all elements for a given xpath or get_attribute failing to get attributes for every element","## 🐛 Bug Report  For a given xpath `find_elements_by_xpath` is only getting a fraction of the elements and neglecting others with the same xpath or `get_attribute` fails to get the attributes for a fraction of elements but not of others. Xpaths are correct and all elements including the missing ones or the ones whose attribute couldn't be retrieved are highlighted in devtools. The missing elements seems to be always the same but can't confirm and they're in normal latin script. Update: also fails for attribute ""title"" not just ""href"". Update: `find_elements_by_css_selector` is failing too but is getting more elements than `find_elements_by_xpath`. `find_elements_by_class_name` is failing too probably and other `find_elements_by` aren't getting every element.   ## To Reproduce  Detailed steps to reproduce the behavior:  1. Go to Instagram 2. Log in 3. Click on your following 4. Run the script to scroll and get your following, indeed it should get the following not once but several times because is redundant, nevertheless some accounts are missing 5. The list will be incomplete(probably the same happens for followers since the xpath is the same)                  ## Environment  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:","closed","R-awaiting answer,","jm-willy","2019-12-04T21:42:53Z","2020-01-13T17:55:34Z"
"","7745","Failed to reuse Remote Webdriver browser, for browser chrome it failed with Exception","## 🐛 Bug Report  Failed to reuse Remote Webdriver browser, for chrome options and it failed with Exception     ## To Reproduce  - Start the selenium server     - `[root@okhatavk Downloads]# java -jar selenium-server-standalone-3.141.59.jar  20:17:44.521 INFO [GridLauncherV3.parse] - Selenium server version: 3.141.59, revision: e82be7d358 20:17:44.611 INFO [GridLauncherV3.lambda$buildLaunchers$3] - Launching a standalone Selenium Server on port 4444 20:17:44.947 INFO [SeleniumServer.boot] - Selenium Server is up and running on port 4444 ` - Run Below Python Code   ``` python from selenium import webdriver  options = webdriver.ChromeOptions() prefs = {'download.prompt_for_download': False} options.add_experimental_option(""prefs"", prefs) options.add_argument('disable-web-security') options.add_argument(""--no-sandbox"") options.add_argument(""--disable-dev-shm-usage"") driver_1 = webdriver.Remote(desired_capabilities=options.to_capabilities()) driver_1.get('http://www.google.com') executor_url = driver_1.command_executor._url session_id = driver_1.session_id driver2 = webdriver.Remote(command_executor=executor_url, desired_capabilities={}) driver2.sessions_id = session_id ```    ### Exception  ``` WebDriverException: Message: Unable to create session from {   ""desiredCapabilities"": {   },   ""capabilities"": {     ""firstMatch"": [       {       }     ]   } } Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53' System info: host: 'okhatavk.pnq.csb', ip: '127.0.0.1', os.name: 'Linux', os.arch: 'amd64', os.version: '3.10.0-891.el7.x86_64', java.version: '1.8.0_171' Driver info: driver.version: unknown Stacktrace:     at org.openqa.selenium.remote.server.NewSessionPipeline.lambda$null$4 (NewSessionPipeline.java:76)     at java.util.Optional.orElseThrow (Optional.java:290)     at org.openqa.selenium.remote.server.NewSessionPipeline.lambda$createNewSession$5 (NewSessionPipeline.java:75)     at java.util.Optional.orElseGet (Optional.java:267)     at org.openqa.selenium.remote.server.NewSessionPipeline.createNewSession (NewSessionPipeline.java:73)     at org.openqa.selenium.remote.server.commandhandler.BeginSession.execute (BeginSession.java:65)     at org.openqa.selenium.remote.server.WebDriverServlet.lambda$handle$0 (WebDriverServlet.java:235)     at java.util.concurrent.Executors$RunnableAdapter.call (Executors.java:511)     at java.util.concurrent.FutureTask.run (FutureTask.java:266)     at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1149)     at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:624)     at java.lang.Thread.run (Thread.java:748)  ``` ## Expected behaviour  Webdriver driver_1 should be get attached driver_2  without exception   ## Environment  OS: Linux (Redhat) Browser:  (Chorme) Browser version:  (67) Browser Driver version:  Language Bindings version:  python 3.7 Selenium Grid version (if applicable):  Selenium 3.14","closed","C-py,","omkarkhatavkar","2019-11-05T14:56:53Z","2020-04-02T14:32:35Z"
"","7706","Exporting HAR file with Selenium triggers `Object.throwDecodedError` on some websites that can be loaded normally in Firefox web browser.","## 🐛 Bug Report  Exporting HAR file with Selenium triggers `Object.throwDecodedError` on some websites that can be loaded normally in Firefox web browser.  I could export the HAR file normally when visiting some common sites: `google.com`, `facebook.com`, etc. But, I currently encounter `Object.throwDecodedError` when crawling and export HAR for some specific sites, such as: `http://www.team.aero`, `http://bilimselbilisim.com`, and `http://jmlsg.org.uk`.  Note that all of these sites can be viewed/rendered normally in real Firefox browser.  The errors are shown as:  >     at Object.throwDecodedError (/usr/src/app/node_modules/selenium-webdriver/lib/error.js:550:15) >     at parseHttpResponse (/usr/src/app/node_modules/selenium-webdriver/lib/http.js:560:13) >     at Executor.execute (/usr/src/app/node_modules/selenium-webdriver/lib/http.js:486:26) >     at process._tickCallback (internal/process/next_tick.js:68:7)  Original bug was filed here: https://github.com/sitespeedio/browsertime/issues/636#issuecomment-544894687","closed","R-awaiting answer,","happywhitelake","2019-10-23T01:57:17Z","2020-04-18T22:16:36Z"
"","7689","IEDriverServer crashes when received an error object","## 🐛 Bug Report  Executing /session/session_ID/execute/sync, if the response is an object that contain an `error` attribute, it will crash the entire server.  ## To Reproduce  1. Start up IEDriverServer.exe  2. Start up a session by sending post request  3. Send an execute sync post request 4. Observe that the IEDriverServer.exe crash  ## Expected behavior  When received an error object, it should properly propagate back to the caller instead of crashing the entire IEDriverServer.exe  ![image](https://user-images.githubusercontent.com/16659123/66891912-d2544780-f01c-11e9-8878-06e70b3c283c.png)  ## Test script or set of commands reproducing this issue  **Start up IEDriverServer.exe** 1. `EDriverServer.exe --log-level='DEBUG'`  **Open up Postman** 2. Create new request and send.   - URL: http://localhost:5555/session   - Method: POST  3. Save the session ID received by the previous request 4. Send an execute sync request   - URL: http://localhost:5555/session/session_ID/execute/sync   - Method: POST   - Request Body: JSON ```json   {     ""script"" : ""return { error : { random : \""value\""} }; "",     ""args""   : []   } ```  ## Environment  OS: Windows 10 Browser: Internet Explorer Browser version: 11.805.17763.0 Browser Driver version(IEDriverServer.exe): 3.14.0.0","closed","I-stale,","jmtiong","2019-10-16T05:54:35Z","2021-12-03T00:06:44Z"
"","7362","W3C Endpoint for upload_file on Ruby Remote Web Driver.","## 🐛 Bug Report  errors when upload file in input file form in remote browsers - chrome v75 and firefox v60 and v65  ## Fix by change it: Edit Endpoint from upload_file: [:post, 'session/:session_id/se/file'] to upload_file: [:post, 'session/:session_id/file'] in line 150 https://www.rubydoc.info/gems/selenium-webdriver/Selenium/WebDriver/Remote/W3C/Bridge  ## To Reproduce Seleniod in Docker with selenoid/vnc:browser_ver Ruby with selenium-driver gem ver. 3.142.3 ## Expected behavior  Success uploads.  ## More details in  https://github.com/aerokube/selenoid-images/issues/169","closed","","dvgorod","2019-07-05T15:00:15Z","2019-08-14T06:09:56Z"
"","7709","WebDriver doesn't see and/or can't interact with elements inside element with attribute 'fragment'","## 🐛 Bug Report  Elements with attribute 'fragment' are not visible. Impossible to interact with child elements.  ## To Reproduce  JUST for example (from stackoverflow) https://stackoverflow.com/questions/54926023/documentfragment-elements-not-visible-for-webdriver/58523787#58523787  ```                      Login          Date: 28/02/2019     Time: 12:20           No additional information    ```  ## Actual behavior driver.findElement(By.xpath(""``````"")).isDisplayed(); - will return false; driver.findElement(By.cssSelector(""``````"")).isDisplayed(); - will return false;  any input into input elements will throw an error org.openqa.selenium.ElementNotInteractableException: element not interactable  ## Expected behavior driver.findElement(By.xpath(""``````"")).isDisplayed(); - returns true; driver.findElement(By.cssSelector(""``````"")).isDisplayed(); - returns true;  any input into input elements is success  ## Environment  OS:  Windows 10 x64 Browser: Chrome Browser version: 77 Browser Driver version: ChromeDriver 77 Language Bindings version: Java 3.141.59","closed","R-awaiting answer,","silverenio","2019-10-23T13:32:02Z","2020-04-18T22:16:39Z"
"","7702","Element Displayed check incorrect return value","## 🐛 Bug Report  Element Displayed property is not calculated correct when the element is not in viewport. --- Edit: ""Not calculated correct"" means that it is true, while the element checked is outside of the viewport.  ## To Reproduce  1.Locate an element on a page that is outside of the viewport 2.Check displayed property  ## Expected behavior  Comply with https://www.w3.org/TR/webdriver1/#element-displayedness  ## Test script or set of commands reproducing this issue  Please find few tests in the repo below: https://github.com/nikembala/SeleniumWebDriverTests/tree/test-displayed  ## Environment  OS: Windows 10 Browser: Chrome Browser version: 77.0.3865.120 (Official Build) (64-bit) Browser Driver version: ChromeDriver 77.0.3865.4000 Browser: Firefox Browser version: 70.0 (64-bit) Browser Driver version: GeckoDriver 0.26.0 Language Bindings version: .NetCore 3.0","closed","I-stale,","nikembala","2019-10-22T13:26:16Z","2021-12-29T00:07:04Z"
"","7048","Cannot Navigate to new window... OpenQA.Selenium.WebDriverException: unknown error: missing or invalid 'entry.level'","## 🐛 Bug Report  Driver opens main URL, but when clicking login button chrome driver can't switch to or can't open directly URL.   Throw an error  Message: Cannot Navigate to new window... OpenQA.Selenium.WebDriverException: unknown error: missing or invalid 'entry.level'   (Session info: chrome=73.0.3683.75)   (Driver info: chromedriver=2.29.461591 (62ebf098771772160f391d75e589dc567915b233),platform=Windows NT 10.0.17134 x86_64)    at OpenQA.Selenium.Remote.RemoteWebDriver.UnpackAndThrowOnError(Response errorResponse)    at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)    at OpenQA.Selenium.Remote.RemoteWebDriver.get_Title()    at TestInitalization.Initialization.get_Title() in C:\...\TestInitalization\Initialization.cs:line 58    at TestInitalization.Initialization.ChangeBrowserTab() in C:\...\TestInitalization\Initialization.cs:line 70   ## Test script or set of commands reproducing this issue     public class JoinTestCasesSteps     { public JoinTestCasesSteps() => Driver = Initialization.GetDriver;         public void OpenJoinTab()         {             page.Join.Click();             log.Info(""Clicking 'Join' Tab"");             Initialization.ChangeBrowserTab();          } }            public class Initialization     {   public static void Init(string baseURL, string browser, int sec, string xmlpath, string stand)         {              _stopWatch = Stopwatch.StartNew();             log.TestStart();              switch (browser)             {                 case ""IE"":                     WebDriver = new InternetExplorerDriver();                     break;                 case ""Firefox"":                     WebDriver = new FirefoxDriver();                                         break;                 case ""Edge"":                     WebDriver = new EdgeDriver();                     break;                 default:                                         WebDriver = new ChromeDriver();                     break;             }             ChangeBrowserTab();             //WebDriver.Manage().Window.Maximize();             Goto(baseURL, sec);             UpdateXMLFile(xmlpath, browser, stand, baseURL);         }         public static IWebDriver GetDriver         {             get { return WebDriver; }         }          public static void ChangeBrowserTab()         {             try             {                 GetDriver.SwitchTo().Window(GetDriver.WindowHandles.Last());                 string t = Title;             }             catch (Exception e)             {                 Assert.Fail(""Cannot Navigate to new window... "" + e);             }         }         public static void Goto(string url, int sec)         {             try             {                 WebDriver.Navigate().GoToUrl(url);                 //WebDriver.Url = url;                 WebDriver.Manage().Timeouts().PageLoad = TimeSpan.FromSeconds(sec);             }             catch (Exception e)             {                                  Assert.Fail(""Cannot open URL"" + e);             }         } }   ## Environment  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:   Selenium Grid version (if applicable):","closed","","manbadalyan","2019-03-20T12:54:06Z","2019-08-14T18:09:58Z"
"","7342","CapabilityType.LOGGING_PREFS is not valid for latest versions of Chrome (75+)","## 🐛 Bug Report  Currently String LOGGING_PREFS is set to ""loggingPrefs"": https://github.com/SeleniumHQ/selenium/blob/master/java/client/src/org/openqa/selenium/remote/CapabilityType.java#L52  I know, it was working in Chrome 71. But it doesn't work in Chrome 75. Chrome 75 only works when I manually use `'goog:loggingPrefs'` instead of `'loggingPrefs'`  ## To Reproduce  Here is Groovy code, which is working (returns browser logs) with Chrome 71, but returns nothing with Chrome 75: ```Groovy             ChromeOptions options = new ChromeOptions().addArguments(                     '--headless',                     '--no-sandbox',                     '--disable-extensions')             LoggingPreferences logPrefs = new LoggingPreferences()             logPrefs.enable(LogType.BROWSER, Level.ALL)             options.setCapability(CapabilityType.LOGGING_PREFS, logPrefs)             driver = new ChromeDriver(options)             driver.get(Endpoints.TAGGED_PAGE_URL)             LogEntries logs = driver.manage().logs().get(LogType.BROWSER)             for (LogEntry entry : logs) {                 log.info entry.message            } ``` ## Expected behavior if i replace one line in the example above, it works in Chrome 75: ```Groovy             options.setCapability('goog:loggingPrefs', logPrefs) ```  ## Environment  OS: Mac Os Mojave Browser: Chrome 75 Browser version: 75.0.3770.100  Browser Driver version: chromedriver 75.0.3770.8 Language Bindings version:  ```     compile 'org.seleniumhq.selenium:selenium-java:3.14.0'     compile 'org.seleniumhq.selenium:selenium-api:3.14.0'     compile 'org.seleniumhq.selenium:selenium-chrome-driver:3.14.0' ``` Selenium Grid version (if applicable): n/a, using local headless Chrome","closed","D-chrome,","SlavikCA","2019-06-28T18:48:55Z","2019-09-14T16:09:35Z"
"","7533","Firefox fails to start with large (file size) profile directory","## 🐛 Bug Report  Creating an instance of Firefox using a large (as in file size) profile directory errors out with:      Traceback (most recent call last):     File ""~/.venvs/headless/lib/python3.7/site-packages/urllib3/connectionpool.py"", line 603, in urlopen         chunked=chunked)     File ""~/.venvs/headless/lib/python3.7/site-packages/urllib3/connectionpool.py"", line 355, in _make_request         conn.request(method, url, **httplib_request_kw)     File ""~/.venvs/headless/lib/python3.7/http/client.py"", line 1229, in request         self._send_request(method, url, body, headers, encode_chunked)     File ""~/.venvs/headless/lib/python3.7/http/client.py"", line 1275, in _send_request         self.endheaders(body, encode_chunked=encode_chunked)     File ""~/.venvs/headless/lib/python3.7/http/client.py"", line 1224, in endheaders         self._send_output(message_body, encode_chunked=encode_chunked)     File ""~/.venvs/headless/lib/python3.7/http/client.py"", line 1055, in _send_output         self.send(chunk)     File ""~/.venvs/headless/lib/python3.7/http/client.py"", line 977, in send         self.sock.sendall(data)     OSError: [Errno 22] Invalid argument  Which ultimately becomes ``urllib3.exceptions.ProtocolError: ('Connection aborted.', OSError(22, 'Invalid argument'))``   ## To Reproduce      from selenium.webdriver import Firefox, FirefoxProfile      BIG_PROF_PATH = ""/path/to/large/profile/dir""      profile = FirefoxProfile(profile_directory=BIG_PROF_PATH)     driver = Firefox(executable_path=DRIVER_BIN, firefox_profile=profile)  Detailed steps to reproduce the behavior:  The above Py/FF/Se hello world is not particularly important; rather, it is the large profile directory as an init input. I cannot nail down an exact threshold for ""large"" (500mb seems to be enough much of the time and 1gb always is).   The failure takes quite a while and in the run up to it the python process' memory consumption balloons (e.g. a 600mb profile dir as input results in nearly 16+gb of memory usage prior to error.   This happens without any addons. If you just load up on cookies and browser cache that is sufficient.  Enabling python logging results in **vast** outputs (looks like the whole profile might be getting logged as base 64 or some such). The geckolog is empty (not a shock as FF never gets going).  ## Expected behavior  Expect Selenium controlled instance of FF to be able to load up from the same profile as my install of FF.   ## Test script or set of commands reproducing this issue  The, trivial, code above will reproduce the error. Getting a large enough input profile is the hard part. If you use FF as a high traffic daily driver ``about:profiles`` and copy your actual profile path is a reasonable starting point for ``BIG_PROF_PATH``. You can confirm with ``$ du -h BIG_PROF_PATH``.  ## Environment  OS: OSX Browser: FF Browser version: 68 Browser Driver version: GeckoDriver 0.24 Language Bindings version: Python 3.141 on Py3.7","closed","D-firefox,","sciatro","2019-09-02T02:30:03Z","2021-09-05T08:10:33Z"
"","7712","Actions: keydown CONTROL + click is executed as keydown CONTROL + contextClick","## 🐛 Bug Report  Creating an Action in Java that simulates a click on (an element) or multiple elements while holding down the Control key actually triggers context clicks instead of regular clicks in the browser.  ## To Reproduce Calling `new Actions(driver).keyDown(Keys.CONTROL).click(tableElement1).click(tableElement2).keyUp(Keys.CONTROL).build().perform()` to build and execute the action.  ## Expected behavior  In this case both elements are rows in a table and should be clicked and thereby selected.  ## Actual behavior  The browser performs context clicks on the elements.  ## Test script or set of commands reproducing this issue  Actual browser behavior has been observed by adding event listeners to the document: > document.addEventListener(""keydown"", function(event){console.log(event)}); document.addEventListener(""keyup"", function(event){console.log(event)}); document.addEventListener(""contextmenu"", function(event){console.log(event)});  Calling `new Actions(driver).keyDown(Keys.CONTROL).click(tableElement1).click(tableElement2).keyUp(Keys.CONTROL).build().perform()` results in this output: > keydown Control { target: div#ProductTypePopup.clearAll.v-button.v-widget , key: ""Control"", charCode: 0, keyCode: 17 } debugger eval code:1:62 contextmenu { target: td.v-grid-cell , buttons: 1, clientX: 305, clientY: 71, layerX: 218, layerY: 13 } debugger eval code:1:66 contextmenu { target: td.v-grid-cell , buttons: 1, clientX: 305, clientY: 206, layerX: 218, layerY: 13 } debugger eval code:1:66 keyup { target: div#query.productSelect.v-grid.v-widget, key: ""Control"", charCode: 0, keyCode: 17 }  Calling `new Actions(driver).keyDown(Keys.SHIFT).click(tableElement1).click(tableElement2).keyUp(Keys.CONSHIFT).build().perform()` results in this expected output: > keydown Shift { target: div#ProductTypePopup.clearAll.v-button.v-widget , key: ""Shift"", charCode: 0, keyCode: 16 } debugger eval code:1:62 click { target: td.v-grid-cell.v-grid-cell-focused , buttons: 0, clientX: 305, clientY: 71, layerX: 219, layerY: 13 } debugger eval code:1:60 click { target: td.v-grid-cell.v-grid-cell-focused , buttons: 0, clientX: 305, clientY: 206, layerX: 219, layerY: 13 } debugger eval code:1:60 keyup { target: div#query.productSelect.v-grid.v-widget, key: ""Shift"", charCode: 0, keyCode: 16 }  ## Environment  OS: Linux, Fedora 29 Browser: Firefox Browser version: 69.0 Browser Driver version: GeckoDriver 0.25 Language Bindings version: Java 3.141.59 Selenium Grid: 3.141.59","closed","","TheHaf","2019-10-24T16:13:11Z","2019-11-30T09:09:14Z"
"","7541","Not found matching IPv4/IPv6 settings","## 🐛 Bug Report  Could not start hub because not found matching IPv4/IPv6 settings.    ## To Reproduce **Start a Hub by source:**    **Start a Hub by built jar file:**  `$ java -jar selenium_server_deploy.jar hub`  **Result:** > 15:55:08.537 INFO [EventBusConfig.createBus] - Creating event bus: org.openqa.selenium.events.zeromq.ZeroMqEventBus > 15:55:08.701 INFO [BoundZmqEventBus.] - XPUB binding to [binding to tcp://*:4442, advertising as tcp://fe80:0:0:0:142f:99c:ee0:455b%en0:4442], XSUB binding to [binding to tcp://*:4443, advertising as tcp://fe80:0:0:0:142f:99c:ee0:455b%en0:4443] > 15:55:08.762 INFO [UnboundZmqEventBus.] - Connecting to tcp://fe80:0:0:0:142f:99c:ee0:455b%en0:4442 and tcp://fe80:0:0:0:142f:99c:ee0:455b%en0:4443 > Exception in thread ""main"" java.lang.IllegalArgumentException: Unable to find event bus class: org.openqa.selenium.events.zeromq.ZeroMqEventBus > 	at org.openqa.selenium.grid.server.EventBusConfig.createBus(EventBusConfig.java:74) > 	at org.openqa.selenium.grid.server.EventBusConfig.getEventBus(EventBusConfig.java:44) > 	at org.openqa.selenium.grid.commands.Hub.lambda$configure$0(Hub.java:103) > 	at org.openqa.selenium.grid.Main.launch(Main.java:123) > 	at org.openqa.selenium.grid.Main.main(Main.java:100) > Caused by: java.lang.reflect.InvocationTargetException > 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) > 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) > 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) > 	at java.lang.reflect.Method.invoke(Method.java:498) > 	at org.openqa.selenium.grid.server.EventBusConfig.createBus(EventBusConfig.java:69) > 	... 4 more > Caused by: org.zeromq.ZMQException: fe80:0:0:0:142f:99c:ee0:455b%en0 not found matching IPv4/IPv6 settings : errno 49 > 	at zmq.io.net.tcp.TcpAddress.resolve(TcpAddress.java:147) > 	at zmq.io.net.tcp.TcpAddress.(TcpAddress.java:40) > 	at zmq.io.net.Address.resolve(Address.java:93) > 	at zmq.SocketBase.connect(SocketBase.java:549) > 	at org.zeromq.ZMQ$Socket.connect(ZMQ.java:3069) > 	at org.openqa.selenium.events.zeromq.UnboundZmqEventBus.(UnboundEventBus.java:67) > 	at org.openqa.selenium.events.zeromq.BoundZmqEventBus.(BoundZmqEventBus.java:63) > 	at org.openqa.selenium.events.zeromq.ZeroMqEventBus.create(ZeroMqEventBus.java:35) > 	at org.openqa.selenium.events.zeromq.ZeroMqEventBus.create(ZeroMqEventBus.java:51) > 	... 9 more >    ## Expected behavior  Could start a hub normally. I researched how to config IPv4/IPv6 for Selenium, but seem like no description about it. But I've found the same error log of Selenium Grid Hub on Selenium Gist.  https://gist.github.com/seleniumgists/51dad712b2cb48213c4694371315145c https://gist.github.com/seleniumgists/4b042f7f9b3c09a58d22649f7ecf911b   ## Environment  OS: OSX Language Bindings version: Java 4.0.0-alpha-3 Selenium Grid version (if applicable): 4.0.0-alpha-3","closed","C-grid,","zcmgyu","2019-09-06T07:03:19Z","2020-03-21T20:18:44Z"
"","7472","Consecutive file uploads using SendKeys with Chrome v75 or later. (C#)","## 🐛 Bug Report  Consecutive file uploads to an Input[type=file] element with SendKeys duplicate files uploaded before in Chrome v75 or later. In Chrome v74 this didn't happen. Specifically uploaded a file will make all files be uploaded again. So a 4th file upload will unintentionally upload file 1, 2 and 3 again.   ## To Reproduce  Detailed steps to reproduce the behavior:  1. Search an ""input[type=file]"" WebElement 2. Use ChromeWebDriver with Chrome 76.0.3809.87 installed and Selenium.Chrome.WebDriver 76.0.0 and Selenium.WebDriver 3.141.0 3. Use SendKeys twice on the input element to send a file (NOTE: not two files at once but consecutively)  ## Expected behavior  The files are uploaded once each.  ## Actual behavior  The first file is uploaded twice, the second file once.   ## Test Code C#  ``` using Microsoft.VisualStudio.TestTools.UnitTesting; using OpenQA.Selenium; using OpenQA.Selenium.Chrome; using System; using System.IO; using System.Reflection;  namespace UnitTestProject1 {     [TestClass]     public class UnitTest1     {         [TestMethod]         public void TestMethod1()         {             var driver = new ChromeDriver(Directory.GetCurrentDirectory(), new ChromeOptions());              driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(15);              driver.Url = ""https://gofile.io/?t=uploadFiles"";              var path = Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location);             var pdfFile1 = $""{path}\\Files\\File1.pdf"";             var pdfFile2 = $""{path}\\Files\\File2.pdf"";              var input = driver.FindElementByXPath(""//input[@type='file']"");              input.SendKeys(pdfFile1);             input.SendKeys(pdfFile2);              Assert.AreEqual(2, driver.FindElementsByXPath(""//tbody//tr[@role='row']"").Count);         }     } }  ``` The two files are random PDFs in a folder called Files in the solution with ""Copy always to Output Directory""  ##Environment OS: Windows 7 64bits Browser: Chrome 76.0.3809.87 Selenium Webdriver: 3.141.0    ## Potential Workaround There is a potential workaround for not having to upload files consecutively by uploading them all at once by using SendKeys with one string with multiple filenames separated by ""\n"" but this does not work if you're using RemoteWebDriver with LocalFileDetector, see: https://github.com/SeleniumHQ/selenium/issues/7408","closed","I-stale,","werfmark","2019-08-06T14:35:54Z","2021-12-04T00:06:41Z"
"","6938","Cannot set SOCKS proxy in GeckoDriver","## 🐛 Bug Report  Cannot set socks proxy type in FirefoxOptions  throws `'InvalidArgumentError: Expected ""socksVersion"" to be a positive integer, got [object Undefined] undefined (SessionNotCreated)'`   ## To Reproduce Use FirefoxOptions with Socks proxy configured. For example  ``` FirefoxOptions options = new FirefoxOptions 	{ 		Profile = profile, 		PageLoadStrategy = PageLoadStrategy.Eager, 		BrowserExecutableLocation = browserExecutable, 		Proxy = new Proxy() 		{ 			Kind = ProxyKind.Manual, 			HttpProxy = ""127.0.0.1:8118"", 			SslProxy = ""127.0.0.1:8118"", 			SocksProxy = ""127.0.0.1:1080"", 		}, 	}; ```  ## Expected behavior  I think that field with SocksProxy version must exists in Proxy class  ## Test script or set of commands reproducing this issue  ``` 	var profile=""D:\\test-profile""; 	var browserExecutable=""C:\\Program Files\\Mozilla Firefox""; 	FirefoxOptions options = new FirefoxOptions 	{ 		Profile = profile, 		PageLoadStrategy = PageLoadStrategy.Eager, 		BrowserExecutableLocation = browserExecutable, 		Proxy = new Proxy() 		{ 			Kind = ProxyKind.Manual, 			HttpProxy = ""127.0.0.1:8118"", 			SslProxy = ""127.0.0.1:8118"", 			SocksProxy = ""127.0.0.1:1080"", 		}, 	}; 	_driver = new FirefoxDriver(Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location), options,System.Threading.Timeout.InfiniteTimeSpan); ```  ## Environment  OS: Windows 10 Browser: Firefox Browser version: Firefox 64 Browser Driver version: geckodriver-v0.24.0 Language Bindings version: C# 3.141.0","closed","C-py,","AlexeiScherbakov","2019-02-14T23:50:20Z","2019-08-14T08:09:39Z"
"","7732","by.Tagname is not working as, the tag selector is falsely prefixed with the css id selector","## 🐛 Bug Report  By.tagname() method is not working.  Chrome version(77.0.3865.120):- https://chromedriver.chromium.org/help   ## To Reproduce    Detailed steps to reproduce the behavior: 1. Logged in to the environment and selected a table via selenium web driver. 2. For rendering a column after row I was using (driver.findElement(By.tagName(locatorValue))) method.  ## Expected behavior  (driver.findElement(By.tagName(locatorValue))) method should have rendered to column accordingly with column tag.  ## Test script or set of commands reproducing this issue  (driver.findElement(By.tagName(locatorValue)))  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:","closed","R-awaiting answer,","asohail00","2019-10-31T13:36:22Z","2019-12-01T17:11:15Z"
"","7138","Ruby - cannot set socks proxy for remote Firefox","## 🐛 Bug Report  As per the [docs](https://github.com/SeleniumHQ/selenium/wiki/Ruby-Bindings#remote) I tried setting a proxy for a remote Firefox running in a Docker container on my local machine. This resulted in a `Net::ReadTimeout` error. Stack trace as follows:  ``` /home/me/.rbenv/versions/2.6.3/lib/ruby/2.6.0/net/protocol.rb:217:in `rbuf_fill': Net::ReadTimeout with # (Net::ReadTimeout)   from /home/me/.rbenv/versions/2.6.3/lib/ruby/2.6.0/net/protocol.rb:191:in `readuntil'   from /home/me/.rbenv/versions/2.6.3/lib/ruby/2.6.0/net/protocol.rb:201:in `readline'   from /home/me/.rbenv/versions/2.6.3/lib/ruby/2.6.0/net/http/response.rb:40:in `read_status_line'   from /home/me/.rbenv/versions/2.6.3/lib/ruby/2.6.0/net/http/response.rb:29:in `read_new'   from /home/me/.rbenv/versions/2.6.3/lib/ruby/2.6.0/net/http.rb:1509:in `block in transport_request'   from /home/me/.rbenv/versions/2.6.3/lib/ruby/2.6.0/net/http.rb:1506:in `catch'   from /home/me/.rbenv/versions/2.6.3/lib/ruby/2.6.0/net/http.rb:1506:in `transport_request'   from /home/me/.rbenv/versions/2.6.3/lib/ruby/2.6.0/net/http.rb:1479:in `request'   from /home/me/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/selenium-webdriver-3.142.0/lib/selenium/webdriver/remote/http/default.rb:129:in `response_for'   from /home/me/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/selenium-webdriver-3.142.0/lib/selenium/webdriver/remote/http/default.rb:82:in `request'   from /home/me/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/selenium-webdriver-3.142.0/lib/selenium/webdriver/remote/http/common.rb:64:in `call'   from /home/me/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/selenium-webdriver-3.142.0/lib/selenium/webdriver/remote/bridge.rb:167:in `execute'   from /home/me/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/selenium-webdriver-3.142.0/lib/selenium/webdriver/remote/bridge.rb:102:in `create_session'   from /home/me/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/selenium-webdriver-3.142.0/lib/selenium/webdriver/remote/bridge.rb:56:in `handshake'   from /home/me/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/selenium-webdriver-3.142.0/lib/selenium/webdriver/remote/driver.rb:39:in `initialize'   from /home/me/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/selenium-webdriver-3.142.0/lib/selenium/webdriver/common/driver.rb:58:in `new'   from /home/me/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/selenium-webdriver-3.142.0/lib/selenium/webdriver/common/driver.rb:58:in `for'   from /home/me/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/selenium-webdriver-3.142.0/lib/selenium/webdriver.rb:88:in `for'   from /home/me/selenium.rb:7:in `' ```  ## To Reproduce  Run Firefox in a docker container locally and try and instantiate a Selenium driver for the remote browser with a socks proxy set, in Ruby. My code tried to set the socks proxy so I can route traffic through Tor, but it is not necessary to actually run Tor to reproduce this error.  ## Expected behavior  I would expect the driver to be instantiated.  ## Test script or set of commands reproducing this issue  `$ docker run -d -p 4444:4444 -v /dev/shm:/dev/shm selenium/standalone-firefox`   ```ruby #!/usr/bin/env ruby require 'selenium-webdriver'  caps = Selenium::WebDriver::Remote::Capabilities.firefox(   proxy: Selenium::WebDriver::Proxy.new(socks: '127.0.0.1:9050') ) Selenium::WebDriver.for(:remote, desired_capabilities: caps) ```  ## Environment  OS: Ubuntu 18.04 Browser: Firefox  Browser version: 66.0.3 Browser Driver version: GeckoDriver 0.24.0 Language Bindings version: Ruby 3.142.0","closed","C-rb,","MatzFan","2019-04-25T11:57:03Z","2019-08-14T12:09:41Z"
"","7838","Click on mat-select dropdown inside mat-form-field","## 🐛 Bug Report  Angular Material Select (`mat-select`) inside Form Field (`mat-form-field`) ignores Selenium click  ## To Reproduce  [Part of DOM  in DevTools](https://i.gyazo.com/b7439a6a4460a491b23ed46b9f408729.png) When test runs, dropdown doesn't appear after click is made by Selenium. If it is made manually by me, test continues and passes. I also tried to use SelectElement class but it's not applicable since `mat-select` doesn't use any `select` elements  ## Expected behaviour  Dropdown appears after click is made.  ## Test script or set of commands reproducing this issue  public class Page definition: ``` [FindsBy(How = How.XPath, Using = ""//*[@id='form']//mat-form-field//*[@class='mat-form-field-flex' and .//*[@formcontrolname='network']]"")] // also tried all surrounding elements from DOM including mat-form-field and mat-select (look at attached screenshot) public IWebElement _formNetworkFormControl;  public bool IsFormNetworkFormControlComponentPresent() {     return ExtendedWebElementOperations.IsElementDisplayed(_formNetworkFormControl); }  // Click dropdown public void ClickFormNetworkFormControl(IWebDriver webdriver) {     // Wait is needed until data is loaded and select is enabled     WebDriverWait wait = new WebDriverWait(webdriver, timeout: TimeSpan.FromSeconds(15));     wait.Until(ExpectedConditions.ElementToBeClickable(_formNetworkFormControl));          _formNetworkFormControl.Click(); }  // To select option after dropdown click public void SelectByOptionName(IWebDriver webdriver, string optionName) {     string xpath = $""//mat-option[span[text()[contains(.,'{optionName}')]]]"";     WebDriverWait wait = new WebDriverWait(webdriver, timeout: TimeSpan.FromSeconds(5));     wait.Until(ExpectedConditions.ElementIsVisible(By.XPath(xpath)));      IWebElement optionNameSelect = webdriver.FindElement(By.XPath(xpath));      optionNameSelect.Click(); } ```  Test: ``` var testedPage = new Page(Driver);  testedPage.ClickAddRingTestFormNetworkFormControl(Driver); // click is made but dropdown doesn't appear testedPage.SelectByOptionName(Driver, networkName); // if select is clicked manually, this works great ```  ## Environment  OS: macOS 10.15 Browser: Chrome Browser version: 78.0.3904.108  Browser Driver version: ChromeDriver 2.44 Language Bindings version: C# (.NET Framework 4.6.2)","closed","","nikitalpopov","2019-12-03T10:26:05Z","2020-01-04T20:39:07Z"
"","7498","[Chromedriver 76] javascript error: Cannot read property 'left' of undefined","## 🐛 Bug Report  After upgrading to chromedriver 76, we are having an issue with dropdown elements in our scripts:  It seems to be an issue with the moveTo method in Selenium2Driver.php line 776 $this->wdSession->moveto(array('element' => $element->getID()));  ## Environment  OS: Windows 10 Browser: Chrome Browser version: 76.0.3809.100 Browser Driver version: Chromedriver 76 Language Bindings version: Java 12.0.1, PHP 7+ Selenium Webdriver: 3.141.59","closed","","CJMCT89","2019-08-15T16:53:55Z","2019-09-26T09:09:36Z"
"","7752","Selenium clicks above elements when running with ChromeDriver v.78","## 🐛 Bug Report  After the updating from the version of Chrome 77 to 78 and, accordingly, the updating to the 78 ChromeDriver, we noticed problems when clicking on the elements. Selenium clicks on an area that is a few pixels higher from the top border of the element. This problem does not reproduce for all elements. We did not find a pattern by which we could reproduce it for a specific set of elements. But if this problem is reproduced for any control, then this happens on an ongoing basis. We tested this with Selenium 3.11.0 and 3.141.59 - bug reproduces identically on both versions.  ## To Reproduce  Detailed steps to reproduce the behavior:  1. Use an Selenium test that involves clicking an element (button, table row etc) that is sufficiently narrow. 2. Run on Windows 10, Chrome v.78 selenium-java v.3.11.0 or v.3.141.59. 3. Clicking will be occur above the element. All clicking seems to be off expected location by a constant offset.  ## Expected behavior  When you click on an element, the click should occur in the center of this element so that it is clicked.  ## Test script or set of commands reproducing this issue  ## Environment  OS: Windows 10 (64-bit) Browser: Chrome Browser version: 78.0.3904.87 (Official Build) (64-bit) Browser Driver version: ChromeDriver 78.0.3904.70 Language Bindings version: Java v.1.8.0_192","closed","","nick8704","2019-11-06T16:04:30Z","2019-12-07T20:26:57Z"
"","6923","after is not defined [ Javascript Library ]","## 🐛 Bug Report  after is not defined node_modules/selenium-webdriver/testing/index.js:222:3  Apparently this syntax problem comes from an undefined variable or from an external library like mocha, I will explain how I did to reproduce  ## To Reproduce  ### Steps: 1 - npm install selenium-webdriver 2 - npm install selenium-standalone 3 - .selenium-standalone install && selenium-standalone start 4 - demo: [ save as index.js ] `      const {By, Key, until} = require('selenium-webdriver');      const {suite} = require('selenium-webdriver/testing');      suite(function(env) {        describe('Google Search', function() {          let driver;          before(async function() {            driver = await env.builder().build();          });           after(() => driver.quit());           it('demo', async function() {            await driver.get('http://www.google.com/ncr');             let q = await driver.findElement(By.name('q'));            await q.sendKeys('webdriver', Key.RETURN);            await driver.wait(                until.titleIs('webdriver - Google Search'), 1000);          });        });      });` 5 - SELENIUM_REMOTE_URL='http://localhost:4444/wd/hub' SELENIUM_BROWSER=chrome node index.js  ## Environment  OS: Linux Browser: Chrome Browser version: 71.0.3578.98 (Official Build) (64-bit) Browser Driver version: ChromeDriver 2.43 Language Bindings version: Nodejs v8.11.3 Selenium Grid version (if applicable): 3.141.0","closed","","vinigomescunha","2019-02-10T06:05:23Z","2019-08-14T22:09:42Z"
"","7721","AWS JAVA Selenium as dependencies corrupting shade jar","## 🐛 Bug Report  Adding the selenium dependencies to a lambda project (created through eclipse) corrupts the jar which causes AWS to not recognise it. Once the dependencies are removed, the lambda jar is not longer corrupted and accepted.   ## To Reproduce  Add any of the newest selenium dependencies to a lambda project and build into a shade jar. Click test (I used an empty test so '{}') and upload the jar to AWS to see a 'cannot unzip' error from AWS. ![image](https://user-images.githubusercontent.com/49036568/67777135-359c9b80-fa59-11e9-8871-cd68a9cf986a.png)  ## Expected behavior  The lambda should be uploaded and unzipped by aws. It should run on demand.  ## Test script or set of commands reproducing this issue  https://github.com/distologyProgrammer/MSP_Lambda  ## Environment  OS:  Browser: Chrome Browser version: Latest Browser Driver version: Latest Language Bindings version: Java 1.8 Selenium Grid version (if applicable): Latest","closed","C-java,","ghost","2019-10-29T14:39:06Z","2020-02-21T22:13:44Z"
"","7019","Headless mode chromium js output data","## 🐛 Bug Report  A clear and concise description of what the bug is. Websites with javascript enabled data loading, usually takes 1 (or) 2 seconds to load the pages. After a sleep timer, the html page data can be seen(after writing to a file) but when tried in headless mode couldn't get the complete html page data.  ## To Reproduce  import time from selenium import webdriver from selenium.webdriver.chrome.options import Options  options = Options() #options.add_argument(""--headless"") # Runs Chrome in headless mode. options.add_argument(""--start-maximized"")  driver = webdriver.Chrome(chrome_options=options, executable_path=""/path/to/chrome/driver"")  url = 'https://www.yahoo.co.jp/' driver.get(url) time.sleep(3)  file = open(""index.html"", ""w"") file.write(driver.page_source) driver.quit()  Code source - [Testing.zip](https://github.com/SeleniumHQ/selenium/files/2950509/Testing.zip)  Detailed steps to reproduce the behavior:  ## Expected behavior Case 1: In the above code, when run normally(without headless active),  1. Yahoo website 2. Loads the section data using their javascript 3. Get the driver.page_source data and save it to a html file  Everything works till this point. The data is loaded into file.   Case 2:  When I run this in headless mode, uncomment the `options.add_argument(""--headless"")` line and run the code.  I cannot see the javascript loaded data(html page is not loaded completely).   ## Test script or set of commands reproducing this issue  You can test by opening the saved html file and comparing it with the original website page(https://www.yahoo.co.jp/).  Case 1: Can load the news contents of the web page. Case 2: Cannot load the news content of the web page.  I suspect that some features in headless mode is being disabled(javascript engine?).   ## Environment  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:   Selenium Grid version :","closed","","sriramkumar1996","2019-03-11T03:03:09Z","2019-08-14T20:09:39Z"
"","7409","problems with button in 4.0.0.alpha01 and 4.0.0.alpha02","## 🐛 Bug Report  A clear and concise description of what the bug is. We have observed two problems with buttons: Case1. a Clear button does not become inactive again after a newly entered value in a field is cleared by pressing the Clear button in a pop-up window Case2. pressing an OK button in a pop-up window makes the button inactive but the window does not close  ## To Reproduce Detailed steps to reproduce the behavior: Case1: 1. We open up a pop-up window with an empty field 2. We set a value in the empty field with activates the Clear button in the pop-up 3. We press the Clear button, the value entered in the field is Cleared but the button itself remains active while it should again be disabled  Case2: 1. We open up a pop-up window with several items in it that can be selected 2. We select the check-box for one of the items which makes the OK button in the pop-up window become active 3. We press the OK button to confirm the selection and close the pop-up window. As a result, the selection is acknowledged and the user is redirected to another page. However, the pop-up does not close - only the OK appears as disabled. 4. As a result from Step 3, we repeat the selection from Step 2 and again press the OK button which this time closes the pop-up window  ## Expected behavior Case1: Button Clear becomes inactive when the newly entered values are cleared Case2: Pop-up window is closed after pressing the OK button   ## Environment  OS: Windows 7 Browser: Internet Explorer Browser version: Internet Explorer 11.0.9600.19002 Browser Driver version: IEWebDriver 3.141.59 for 32 bit Windows IE Language Bindings version: Java 11.0.2 Selenium Grid version (if applicable): 4.0.0.alpha01 and 4.0.0.alpha02","closed","D-IE,","hnestorova","2019-07-19T09:43:27Z","2019-08-18T16:09:34Z"
"","7202","Browser opened after starting a test and then immediately closed","## 🐛 Bug Report  A clear and concise description of what the bug is. After Selenium upgrade to version 3.141.59, the tests that I run from Eclipse 2019-03 using TestNG 16.4.3 towards a remote machine create a session and then, for some unknown reason, immediately close it. Attached is the web driver debug log   Detailed steps to reproduce the behavior:  ## Expected behavior  After Selenium upgrade to version 3.141.59, the tests are successfully run as they used to run with lower Selenium version  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually  [GRID-IE-DEBUG (2).txt](https://github.com/SeleniumHQ/selenium/files/3173505/GRID-IE-DEBUG.2.txt)  be closed.  ## Environment  OS: Windows 7 Browser: Internet Explorer  Browser version: Internet Explorer 11.0.9600.19002 Browser Driver version: IEWebDriver 3.141.59 for 32 bit Windows IE Language Bindings version: Java 11.0.2 Selenium Grid version (if applicable): 3.141.59","closed","","hnestorova","2019-05-13T14:56:52Z","2019-08-14T10:09:59Z"
"","6875","selenium.common.exceptions.TimeoutException during rendering of a page screenshoot","## 🐛 Bug Report  A clear and concise description of what the bug is. > OPS! I am aware there is a lot of ""similarish"" questions. But this is > not them.  Scrips bellow loads fine and gets HTML, its work with *most* of pages, but in case of https://medici.md/terms-of-service/ the screenshot rendering times out. I do realize that one of the reason can be due to the size of the screenshot   > Browser required_width 1200 , required_height 36417  so I wonder is there is a way to overcome this limitation. Clearly, setting the timeout on the get page does not work as this is an internal issue.  ```     import os     import uuid     import base64     import datetime          from selenium import webdriver     from selenium.webdriver.chrome.options import Options     from selenium.webdriver.common.desired_capabilities import DesiredCapabilities               def save_to_png(byte_code, filename):         with open(filename, ""wb"") as fh:             fh.write(base64.b64decode(byte_code))               def make_browser_2():         # config browser         chrome_options = Options()         _tmp_folder = '/tmp/{}'.format(uuid.uuid4())              if not os.path.exists(_tmp_folder):             os.makedirs(_tmp_folder)              if not os.path.exists(_tmp_folder + '/user-data'):             os.makedirs(_tmp_folder + '/user-data')              if not os.path.exists(_tmp_folder + '/data-path'):             os.makedirs(_tmp_folder + '/data-path')              if not os.path.exists(_tmp_folder + '/cache-dir'):             os.makedirs(_tmp_folder + '/cache-dir')              caps = DesiredCapabilities().CHROME         caps[""pageLoadStrategy""] = ""normal""         chrome_options.add_argument('--headless')         chrome_options.add_argument('--no-sandbox')         chrome_options.add_argument('--disable-setuid-sandbox')         chrome_options.add_argument('--dns-prefetch-disable')         chrome_options.add_argument(""--disable-dev-shm-usage"")         chrome_options.add_argument('--disable-gpu')         chrome_options.add_argument(""--window-size=1200x900"")         chrome_options.add_argument('--user-data-dir={}'.format(_tmp_folder + '/user-data'))         chrome_options.add_argument('--hide-scrollbars')         chrome_options.add_argument('--enable-logging')         chrome_options.add_argument('--log-level=0')         chrome_options.add_argument('--v=99')         chrome_options.add_argument('--single-process')         chrome_options.add_argument('--data-path={}'.format(_tmp_folder + '/data-path'))         chrome_options.add_argument('--ignore-certificate-errors')         chrome_options.add_argument('--homedir={}'.format(_tmp_folder))         chrome_options.add_argument('--disk-cache-dir={}'.format(_tmp_folder + '/cache-dir'))         chrome_options.add_argument('--user-agent=Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36')         chrome_options.binary_location = '/Applications/Google Chrome Canary.app/Contents/MacOS/Google Chrome Canary'         return webdriver.Chrome(desired_capabilities=caps, options=chrome_options)               def get_image_fullpage_screenshot(browser):         required_width = browser.execute_script('return document.body.parentNode.scrollWidth')         required_height = browser.execute_script('return document.body.parentNode.scrollHeight')         browser.set_window_size(required_width, required_height)         # yes, this is huge, so what?!         print(""Browser required_width %d , required_height %d"" % (required_width, required_height))         # driver.save_screenshot(path)  # has scrollbar         body_element = browser.find_element_by_tag_name('body')         # body_element.screenshot(filename)  # avoids scrollbar         try:             b64 = body_element.screenshot_as_base64         except Exception as e:             # got error try to save as screenshot             print(""Error {}"".format(e))             browser.save_screenshot(""on-error-screenshot.png"")         return b64               if __name__ == ""__main__"":         url1 = ""https://medici.md/terms-of-service/""              browser = make_browser_2()         now = datetime.datetime.now()              filename = 'screenshot-{}-{}.png'.format(             now.strftime('%Y%m%d'),             now.strftime('%H%M%S')         )         browser.get(url1)         print(browser.title)         print(browser.page_source)         filename = 'screenshot-{}-{}-1.png'.format(             now.strftime('%Y%m%d'),             now.strftime('%H%M%S')         )         # this works         browser.save_screenshot(""screenshot.png"")         #buhuuu         b64_data = get_image_fullpage_screenshot(browser)         save_to_png(b64_data, filename) ```  Error: ```     Browser required_width 1200 , required_height 36417     Error Message: timeout: Timed out receiving message from renderer: 10.000       (Session info: headless chrome=73.0.3667.0)       (Driver info: chromedriver=2.45.615355 (d5698f682d8b2742017df6c81e0bd8e6a3063189),platform=Mac OS X 10.14.1 x86_64)          Traceback (most recent call last):       File ""selenium_error.py"", line 67, in get_image_fullpage_screenshot         b64 = body_element.screenshot_as_base64       File ""/automation/ve/lib/python3.7/site-packages/selenium/webdriver/remote/webelement.py"", line 557, in screenshot_as_base64         return self._execute(Command.ELEMENT_SCREENSHOT)['value']       File ""/automation/ve/lib/python3.7/site-packages/selenium/webdriver/remote/webelement.py"", line 633, in _execute         return self._parent.execute(command, params)       File ""/automation/ve/lib/python3.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 321, in execute         self.error_handler.check_response(response)       File ""/automation/ve/lib/python3.7/site-packages/selenium/webdriver/remote/errorhandler.py"", line 242, in check_response         raise exception_class(message, screen, stacktrace)     selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 10.000       (Session info: headless chrome=73.0.3667.0)       (Driver info: chromedriver=2.45.615355 (d5698f682d8b2742017df6c81e0bd8e6a3063189),platform=Mac OS X 10.14.1 x86_64)               During handling of the above exception, another exception occurred:          Traceback (most recent call last):       File ""selenium_error.py"", line 95, in          b64_data = get_image_fullpage_screenshot(browser)       File ""selenium_error.py"", line 71, in get_image_fullpage_screenshot         browser.save_screenshot(""on-error-screenshot.png"")       File ""/automation/ve/lib/python3.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 1055, in save_screenshot         return self.get_screenshot_as_file(filename)       File ""/automation/ve/lib/python3.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 1032, in get_screenshot_as_file         png = self.get_screenshot_as_png()       File ""/automation/ve/lib/python3.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 1064, in get_screenshot_as_png         return base64.b64decode(self.get_screenshot_as_base64().encode('ascii'))       File ""/automation/ve/lib/python3.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 1074, in get_screenshot_as_base64         return self.execute(Command.SCREENSHOT)['value']       File ""/automation/ve/lib/python3.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 321, in execute         self.error_handler.check_response(response)       File ""/automation/ve/lib/python3.7/site-packages/selenium/webdriver/remote/errorhandler.py"", line 242, in check_response         raise exception_class(message, screen, stacktrace)     selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 5.718       (Session info: headless chrome=73.0.3667.0)       (Driver info: chromedriver=2.45.615355 (d5698f682d8b2742017df6c81e0bd8e6a3063189),platform=Mac OS X 10.14.1 x86_64) ``` ## Environment  OS: Mac OS X 10.14.1 x86_64 Browser: Chrome Browser version: headless chrome=73.0.3667.0 Browser Driver version: chromedriver=2.45.615355  Language Bindings version: python","closed","","Northshoot","2019-01-23T01:18:52Z","2019-08-14T22:09:39Z"
"","7813","System.NotImplementedException : mouseMoveTo","## 🐛 Bug Report  A clear and concise description of what the bug is.  When using RemoteWebDriver and Actions and Move, we get the following error System.NotImplementedException : mouseMoveTo  ## To Reproduce Simple App with the following class:  ```csharp using System; using NUnit.Framework; using OpenQA.Selenium; using OpenQA.Selenium.Chrome; using OpenQA.Selenium.Interactions; using OpenQA.Selenium.Remote;  namespace SeleniumBugRepro {     [TestFixture]     public class BugRepro     {         private Uri _gridUri = new Uri(""http:///wd/hub/"");          [Test]         public void Example()         {             // Arrange             using (var driver = new RemoteWebDriver(_gridUri, new ChromeOptions().ToCapabilities()))             {                 // Act                 driver.Navigate().GoToUrl(""https://www.bbc.com/news"");                 var element = driver.FindElement(By.Id(""brand""));                 var actions = new Actions(driver);                 actions.MoveToElement(element);                 actions.Perform();             }         }     } } ```  And the following project file:  ```xml          net472                       ```  Detailed steps to reproduce the behavior:  Run the test  ## Expected behavior  The test to pass which it does if you use ChromeDriver  ## Error  System.NotImplementedException : mouseMoveTo Build info: version: '3.4.0', revision: 'unknown', time: 'unknown' System info: host: 'SeleniumNode8', ip: '10.0.0.7', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_231' Driver info: driver.version: RemoteWebDriver    at OpenQA.Selenium.Remote.RemoteWebDriver.UnpackAndThrowOnError(Response errorResponse)    at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)    at OpenQA.Selenium.Remote.RemoteMouse.MouseMove(ICoordinates where)    at OpenQA.Selenium.Interactions.CompositeAction.Perform()    at SeleniumBugRepro.BugRepro.Example()  ## Environment Selenium Grid Console v.3.141.59","closed","R-awaiting answer,","AnthonyDewhirst","2019-11-25T13:13:31Z","2020-04-18T22:16:42Z"
"","7150","selenium inside a windows docker cotnainer fails with","## 🐛 Bug Report  A clear and concise description of what the bug is.  Reach out direct to me and I'll walk you through everything from scratch to build container.  Bit of a long run to a crash.  Github repo here - https://github.com/jhealy/aspnet45-docker-selenium .  Selenium C# webdriver inside a Windows container fails with 'HTTP request to the remote WebDriver server for URL http://localhost:49164/session timed out after 60 seconds. '.  Everything works fine locally or in a clean Windows Server 2016 with UI.  If I build a dockers container for windows and copy my tests in it fails with this message.  Consistent on ff and chrome drivers.     ## To Reproduce Reach out to me for a demo of the problem, it would be easy than trying to repro. Easy route is to provision up the docker file.  Location of docker file is https://hub.docker.com/r/jhealy62/devfish .  Git repo with source files here - https://github.com/jhealy/aspnet45-docker-selenium   run local asp.net 4.5 build out docker container using buildit.ps1 buildit.ps1 leaves you inside container cd \SeleniumTests # verify web server works curl http://localhost -UseBasicParsing # run our test .\SeleniumDockerTest.exe http://localhost Boom.  Consisten with chrome or ff tests inside docker.  Outside docker is fine.  Github repo with goodies - https://github.com/jhealy/devfish-shares/tree/master/docker-selenium-aspnet45   **Repro**  	docker build -f dockerfile -t aspnet45 . 	docker run -d --name aspnet45run -p 5000:80 aspnet45 Verify we are serving web pages 	Invoke-WebRequest http:\\localhost:5000 -UseBasicParsing Connect to container with interactive ps 	docker exec -it aspnet45run powershell Inside the container – make sure we can hit website 	Invoke-WebRequest http://localhost -UseBasicParsing Extract out firefox, which we copy in with the docker file  	Cd \seleniumtests\assets 	.\firefox_setup_66.0.3.exe -ms Run selenium console app, which works fine outside container 	Cd \ 	Cd  seleniumtests 	.\SeleniumDockerTests.exe http://localhost  Then I cry miserably cause I  get the network timeout.   Error dump below.  Same thing for Chrome and FF with variance on the namespaces.  DOCKERFILE # The `FROM` instruction specifies the base image. We are extending the `microsoft/aspnet` image. FROM microsoft/aspnet  RUN mkdir seleniumtests  RUN mkdir seleniumtests/assets  # COPY IN THE WEBSITE COPY ./MvcHelloWorld45/MvcHelloWorld45/bin/Publish/ /inetpub/wwwroot  # copy in the tests COPY ./SeleniumDockerTest/bin/Release/ /seleniumtests   # chromedriver is bundled into the official nuget # make sure geckodriver is there with the selenium tests COPY ./assets/geckodriver-v0.24.0-win64/ /seleniumtests  # COPY IN FF COPY ./assets/firefox /seleniumtests/assets  # choco chrome takes a bit RUN powershell -Command Install-PackageProvider -name chocolatey -Force RUN powershell -Command Set-PackageSource -Name chocolatey -Trusted RUN powershell -Command Get-PackageSource RUN echo 'Install Chrome via chocolatey...' RUN powershell -Command Install-Package GoogleChrome -MinimumVersion 74  TIMEOUT ERROR ## Chrome WebDriver Timeout Error  > [Target Url] =[http://localhost] > beginning chrome tests > [chrome options:] =[--headless --window-size=1920,1080 --disable-features=VizDisplayCompositor --disable-gpu] > Starting ChromeDriver 74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}) on port 49160 > Only local connections are allowed. > Please protect ports used by ChromeDriver and related test frameworks to prevent access by malicious code. > [0430/150246.015:ERROR:network_change_notifier_win.cc(156)] WSALookupServiceBegin failed with: 0 > [0430/150246.046:ERROR:audio_device_listener_win.cc(46)] RegisterEndpointNotificationCallback failed: 80070424 >  > DevTools listening on ws://127.0.0.1:49163/devtools/browser/853e1883-9876-4fad-9dcc-6bf74c060baf > [0430/150246.253:ERROR:network_change_notifier_win.cc(156)] WSALookupServiceBegin failed with: 0 > !!!!!!!!!!!!!!!!!!!!!!!!!!! > [exception caught] =[OpenQA.Selenium.WebDriverException: The HTTP request to the remote WebDriver server for URL http://localhost:49160/session timed out after 60 seconds. ---> System.Net.WebException: The operation has timed out >    at System.Net.HttpWebRequest.GetResponse() >    at OpenQA.Selenium.Remote.HttpCommandExecutor.MakeHttpRequest(HttpRequestInfo requestInfo) >    --- End of inner exception stack trace --- >    at OpenQA.Selenium.Remote.HttpCommandExecutor.MakeHttpRequest(HttpRequestInfo requestInfo) >    at OpenQA.Selenium.Remote.HttpCommandExecutor.Execute(Command commandToExecute) >    at OpenQA.Selenium.Remote.DriverServiceCommandExecutor.Execute(Command commandToExecute) >    at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters) >    at OpenQA.Selenium.Remote.RemoteWebDriver.StartSession(ICapabilities desiredCapabilities) >    at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(ICommandExecutor commandExecutor, ICapabilities desiredCapabilities) >    at OpenQA.Selenium.Chrome.ChromeDriver..ctor(ChromeDriverService service, ChromeOptions options, TimeSpan commandTimeout) >    at OpenQA.Selenium.Chrome.ChromeDriver..ctor(ChromeOptions options) >    at SeleniumDockerTest.Program.DoChromeTests() in C:\dev\docker-selenium-aspnet45.git\SeleniumDockerTest\Program.cs:line 53] > !!!!!!!!!!!!!!!!!!!!!!!!!!! > Hit any key to continue   ## Firefox web driver timeout error  > PS C:\seleniumtests> .\seleniumdockertest.exe http://localhost > [Target Url] =[http://localhost] > firefox tests commencing > BrowserExecutableLocation=C:\Program Files\Mozilla Firefox\firefox.exe > -headless > 1556651472894   mozrunner::runner       INFO    Running command: ""C:\\Program Files\\Mozilla Firefox\\firefox.exe"" ""-marionette"" ""-headless"" ""-foreground"" ""-no-remote"" ""-profile"" ""C:\\Users\\ContainerAdministrator\\AppData\\Local\\Temp\\rust_mozprofile.hlVVZVvFg66U"" > !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! > !!!error:OpenQA.Selenium.WebDriverException: The HTTP request to the remote WebDriver server for URL http://localhost:49158/session timed out after 60 seconds. ---> System.Net.WebException: The request was aborted: The operation has timed out. >    at System.Net.HttpWebRequest.GetResponse() >    at OpenQA.Selenium.Remote.HttpCommandExecutor.MakeHttpRequest(HttpRequestInfo requestInfo) >    --- End of inner exception stack trace --- >    at OpenQA.Selenium.Remote.HttpCommandExecutor.MakeHttpRequest(HttpRequestInfo requestInfo) >    at OpenQA.Selenium.Remote.HttpCommandExecutor.Execute(Command commandToExecute) >    at OpenQA.Selenium.Remote.DriverServiceCommandExecutor.Execute(Command commandToExecute) >    at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters) >    at OpenQA.Selenium.Remote.RemoteWebDriver.StartSession(ICapabilities desiredCapabilities) >    at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(ICommandExecutor commandExecutor, ICapabilities desiredCapabilities) >    at OpenQA.Selenium.Firefox.FirefoxDriver..ctor(FirefoxOptions options) >    at SeleniumDockerTest.Program.DoFirefoxTests() in C:\dev\docker-selenium-aspnet45.git\SeleniumDockerTest\Program.cs:line 150 > !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! > firefox tests completed > Hit any key to continue >   GOOGLE TEST         private static void DoChromeTests()         {             IWebDriver chromeDriver;             try             {                 ChromeOptions option = new ChromeOptions();                 option.AddArguments(""--headless"");                 // fix set from https://bugs.chromium.org/p/chromium/issues/detail?id=942023                 option.AddArguments(""--window-size=1920,1080"");                 option.AddArguments(""--disable-features=VizDisplayCompositor"");                 option.AddArguments(""--disable-gpu"");                 //option.AddArgument(""--no-sandbox"");                 //option.AddArgument(""--dns-prefetch-disable"");                   Console.WriteLine(""chrome options include --headless --dns-prefetch-disable --disablefeatures"");                 using (chromeDriver = new ChromeDriver(option))                 {                     chromeDriver.Navigate().GoToUrl(m_targetUrl);                      string msg = ""hello world"";                     Console.WriteLine($""CheckWebElements('{msg}')={CheckWebElements(msg,chromeDriver)}"");                     msg = ""Matias Bruno"";                     Console.WriteLine($""CheckWebElements('{msg}')={CheckWebElements(msg,chromeDriver)}"");                      chromeDriver.Close();                     chromeDriver.Quit();                 }             }             catch (Exception ex)             {                 Console.WriteLine(""!!!error:"" + ex.ToString());             }         }  FIREFOX TEST         private static void DoFirefoxTests()         {             Console.WriteLine(""firefox tests commencing"");             string fflocation = @""C:\Program Files\Mozilla Firefox\firefox.exe"";             Console.WriteLine(""BrowserExecutableLocation="" + fflocation);             IWebDriver firefoxDriver;             try             {                 FirefoxOptions options = new FirefoxOptions();                 options.BrowserExecutableLocation = fflocation;                                 options.AddArgument(""--headless"");                 Console.WriteLine(""--headless"");                  using (firefoxDriver = new FirefoxDriver(options))                 {                     firefoxDriver.Navigate().GoToUrl(m_targetUrl);                      string msg = ""hello world"";                     Console.WriteLine($""CheckWebElements('{msg}')={CheckWebElements(msg, firefoxDriver)}"");                     msg = ""Matias"";                     Console.WriteLine($""CheckWebElements('{msg}')={CheckWebElements(msg, firefoxDriver)}"");                      firefoxDriver.Close();                     firefoxDriver.Quit();                 }             }             catch (Exception ex)             {                 Console.WriteLine(""!!!error:"" + ex.ToString());             }             Console.WriteLine(""firefox tests completed"");         }  ## Expected behavior  Expect test to run and parse the website  ## Test script or set of commands reproducing this issue running test fails it.  kicks error out.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS: Docker windows container 10.0.1744 Browser: Chrome and Firefox  Browser version: Chrome 74, Firefox  66.0.3 Browser Driver version: nugets v3.141 Language Bindings version: C#, .net 4.5 Selenium Grid version (if applicable): n/a","closed","","jhealy","2019-04-28T23:01:47Z","2019-08-14T11:10:04Z"
"","6993","OpenJDK 11.0.2 does not seem to support maven download of selenium-java jars","## 🐛 Bug Report  A clear and concise description of what the bug is.  OpenJDK 11.0.2 does not seem to support maven download of selenium-java jars in Windows 10 OS.   ## To Reproduce 1.download openjdk 11.0.2 and set up environment variables. 2.make sure java environment is correctly setup by executing any java program. 3.create a new selenium maven project in windows 10 operating system. 4. add below dependency for selenium in valid maven pom.xml `              org.seleniumhq.selenium             selenium-java             3.141.59             test      `   5. Clean install the maven project.  Actual selenium jars are not downloaded.  User gets below errors in console. [ERROR] error reading C:\Users\\.m2\repository\org\seleniumhq\selenium\selenium-api\3.141.59\selenium-api-3.141.59.jar; zip END header not found [ERROR] error reading C:\Users\\.m2\repository\org\seleniumhq\selenium\selenium-remote-driver\3.141.59\selenium-remote-driver-3.141.59.jar; zip END header not found   ## Expected behavior  Selenium jars should be downloaded in local m2 folder.   ## Environment  OS:  Win 10 Browser:  Not applicable. Browser version:  Browser Driver version:  Language Bindings version:   Java 3.141.59 Selenium Grid version (if applicable):  Not applicable. @shs96c","closed","","formynet","2019-03-04T15:08:49Z","2019-08-14T20:09:56Z"
"","6931","org.openqa.selenium.ElementNotInteractableException: element not interactable with Sendkeys","## 🐛 Bug Report  A clear and concise description of what the bug is.  In both Firefox and Chrome, I'm getting ""org.openqa.selenium.ElementNotInteractableException: element not interactable"" error when trying to send text to input field with Sendkeys. Clicking on the same element works fine.    Below is the fragment of the java selenium code:  . . .     @FindBy(xpath=""//*[@id=\""title-prompt-text\""]"")     WebElement NewPostTitle;      @FindBy(xpath=""//*[@id=\""content\""]"")     WebElement NewPostContent;       public PostsPage(){         PageFactory.initElements(driver, this);     } . . . .       public boolean verifyNewPost() throws Exception{          AddNewBtn.click();         WFEC(By.xpath(""//*[@id=\""title-prompt-text\""]""));         NewPostTitle.click();         NewPostTitle.sendKeys(""TestTitle"");","closed","R-awaiting answer,","snovshadyan","2019-02-13T00:25:16Z","2019-08-14T18:09:48Z"
"","7487","PageLoadStrategy Error","## 🐛 Bug Report  A clear and concise description of what the bug is.  I am seeing this error when running selenium tests (using the open browser method) through RIDE in robot framework  Method not found: 'Void OpenQA.Selenium.DriverOptions.set_PageLoadStrategy(OpenQA.Selenium.PageLoadStrategy)'.  The Chrome version is 76.0.3809.100 chromedriver version is ChromeDriver 76.0.3809.68 Selenium version is 3.8.1  Thanks    ## To Reproduce    Detailed steps to reproduce the behavior:  ## Expected behavior  A clear and concise description of what you expected to happen.  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:   Selenium Grid version (if applicable):","closed","","VarunJoshi","2019-08-10T13:20:19Z","2019-09-29T15:09:36Z"
"","7237","WebDriverWait doesn't work for EventFiringWebDriver","## 🐛 Bug Report  A clear and concise description of what the bug is.   I wrapped the ChromeDriver with EventFiringWebDriver to capture screenshot when exception occurs , but found that the WebDriverWait() functionality is broken.  ## To Reproduce     Detailed steps to reproduce the behavior:  **Set up**  _driver = new ChromeDriver(options);  _driver = new EventFiringWebDriver(_driver);  Then, new WebDriverWait(_driver, TimeSpan.FromSeconds(10)).Until(d => d.FindElement(locator)); It returned immediately without waiting.  If I comment out the line ` _driver = new EventFiringWebDriver(_driver);`, it works.  ## Expected behavior  The WebDriverWait should also work for EventFiringWebDriver  ## Environment  OS: Windows 10 Browser: Chrome  Browser version:  74.0.3729.169 (Official Build) (64-bit) Browser Driver version: 3.141.0.0  Language Bindings version:  .Net framework 4.5   Selenium Grid version (if applicable):","closed","C-dotnet,","qszhuan","2019-05-27T02:00:40Z","2019-08-14T09:09:56Z"
"","7694","File upload through Selenium is not working in Safari","## 🐛 Bug Report  A clear and concise description of what the bug is.    ## To Reproduce  The file upload does not work for safari,    	public void uploadPhotoOnPhototrayOnCu4(String imgFilePath) { 		String imgFile = new File(System.getProperty(""user.dir""), imgFilePath).toString(); 		String js = ""arguments[0].classList.remove(\""css-nl68lj-inputStyles\"")""; 		JavascriptExecutor jse = new WebDriverTestBase().getDriver(); 		jse.executeScript(js, uploadPhotoButton); 		uploadPhotoButton.waitForVisible(); 		uploadPhotoButton.sendKeys(imgFile); 		CommonSteps.waitFor(15000);    **error**  fails at  sendkeys    org.openqa.selenium.UnsupportedCommandException: The command 'POST /session/BA450AE4-F231-4EDC-8F0B-375E87D1CD5B/file' was not found. Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'  ## Environment  OS: OSX Browser: Safari  Browser version: v13.0.2 Browser Driver version: SafariDriver  Language Bindings version:   Selenium Grid version (if applicable):  3.141.59","closed","C-java,","Pratish89","2019-10-18T17:49:29Z","2019-12-17T20:37:00Z"
"","7618","WebElement call takeScreenshot show UnsupportedOperationError","## 🐛 Bug Report  A clear and concise description of what the bug is.    ## To Reproduce    Detailed steps to reproduce the behavior:  //Test code: const cards =       await this.browser.findElementsByXpath('//div[@class=""elLayouts-ContentRegion elLayouts-ContentRegion-card""]');     expect(cards.length).equals(3);     await takeScreenshot(cards[0], '111');  //Function code: async function takeScreenshot(el: WebElement, name: string): Promise {   await el.takeScreenshot().then(async (png: any) => {     await saveImage(name, png);   }); }  //Error: UnsupportedOperationError: GET /session/483ce73f-9647-4d0e-bc98-8a8d1663af98/element/863fba10-dc17-4571-8e2c-3b391305363f/screenshot Build info: version: '3.7.1', revision: '8a0099a', time: '2017-11-06T21:07:36.161Z' System info: host: '476f8e4ac3c5', ip: '172.17.0.2', os.name: 'Linux', os.arch: 'amd64', os.version: '4.15.0-64-generic', java.version: '1.8.0_151' Driver info: driver.version: unknown       at Object.checkLegacyResponse (node_modules/selenium-webdriver/lib/error.js:546:15)       at parseHttpResponse (node_modules/selenium-webdriver/lib/http.js:509:13)       at /project/node_modules/selenium-webdriver/lib/http.js:441:30       at processTicksAndRejections (internal/process/task_queues.js:93:5)   From: Task: WebElement.takeScreenshot(false)       at thenableWebDriverProxy.schedule (node_modules/selenium-webdriver/lib/webdriver.js:807:17)       at WebElement.schedule_ (node_modules/selenium-webdriver/lib/webdriver.js:2010:25)       at WebElement.takeScreenshot (node_modules/selenium-webdriver/lib/webdriver.js:2379:17)       at Object.takeScreenshot (src/seleniumlib/utils.ts:44:12)       at LocalBackupToolsPage.checkModuleUx (src/pages/ssm/seaBackupToolsPage.ts:68:11)       at processTicksAndRejections (internal/process/task_queues.js:93:5)       at Context. (src/testcase/ssm/ssm-backupTools.ts:35:12)    ## Expected behavior  A clear and concise description of what you expected to happen.  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS:  root@guitest:/project# uname -a Linux guitest 4.15.0-64-generic #73-Ubuntu SMP Thu Sep 12 13:16:13 UTC 2019 x86_64 GNU/Linux  Browser:  selenium-standalone-firefox-debug bin  firefox-57.0  geckodriver-0.19.1  selenium  Browser version:  Browser Driver version:  geckodriver-0.19.1  Language Bindings version:   Selenium Grid version (if applicable):","closed","","wenJanus","2019-09-30T02:05:02Z","2019-10-30T05:45:10Z"
"","7693","Bug: 77.0.3865.40 chromedriver.exe return null for getAttribute(""href"") in Java","## 🐛 Bug Report  A clear and concise description of what the bug is.    ## To Reproduce    Detailed steps to reproduce the behavior:  ## Expected behavior  A clear and concise description of what you expected to happen.  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:   Selenium Grid version (if applicable):","closed","","vince-w-lee","2019-10-16T21:14:45Z","2019-11-16T14:08:01Z"
"","7674","IOError: [Errno 2] No such file or directory: '/usr/lib64/python2.7/site-packages/selenium-4.0.0a3-py2.7.egg/selenium/webdriver/remote/getAttribute.js'","## 🐛 Bug Report  A clear and concise description of what the bug is.    ## To Reproduce    Detailed steps to reproduce the behavior:  ## Expected behavior  A clear and concise description of what you expected to happen.  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:   Selenium Grid version (if applicable):","closed","","Nachtel","2019-10-11T04:01:54Z","2019-11-10T08:07:55Z"
"","7360","java.lang.NoSuchMethodError: org.openqa.selenium.support.ui.WebDriverWait.until(Ljava/util/function/Function;)Ljava/lang/Object;","## 🐛 Bug Report  A clear and concise description of what the bug is.    ## To Reproduce    Detailed steps to reproduce the behavior:  ## Expected behavior  A clear and concise description of what you expected to happen.  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:   Selenium Grid version (if applicable):","closed","R-awaiting answer,","Praveenroy05","2019-07-05T12:48:44Z","2019-08-14T06:09:39Z"
"","7290","Selenium 4.0.0a1 not managing browser headless mode.","## 🐛 Bug Report  A clear and concise description of what the bug is.    ## To Reproduce    Detailed steps to reproduce the behavior:  ## Expected behavior  A clear and concise description of what you expected to happen.  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:   Selenium Grid version (if applicable):","closed","","mbrozzi","2019-06-14T11:02:26Z","2019-08-14T08:09:56Z"
"","7188","MS Edge Chromium not fully supported","## 🐛 Bug Report  A clear and concise description of what the bug is.    ## To Reproduce    Detailed steps to reproduce the behavior:  ## Expected behavior  A clear and concise description of what you expected to happen.  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:   Selenium Grid version (if applicable):","closed","","teetime514","2019-05-08T20:13:44Z","2019-08-14T11:09:49Z"
"","7124","Get child element's attribute error","## 🐛 Bug Report  A clear and concise description of what the bug is.    ## To Reproduce    Detailed steps to reproduce the behavior:  ## Expected behavior  A clear and concise description of what you expected to happen.  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:   Selenium Grid version (if applicable):","closed","","lincan00","2019-04-21T06:03:11Z","2019-08-14T13:09:49Z"
"","7059","jenkins-2.164.1","## 🐛 Bug Report  A clear and concise description of what the bug is.    ## To Reproduce    Detailed steps to reproduce the behavior:  ## Expected behavior  A clear and concise description of what you expected to happen.  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:   Selenium Grid version (if applicable):","closed","","ajcrypto","2019-03-26T17:59:22Z","2019-08-14T17:09:59Z"
"","6944","rg.openqa.selenium.WebDriverException: Timed out waiting for driver server to start. with WebDriver 3.141.59","## 🐛 Bug Report  A clear and concise description of what the bug is.    ## To Reproduce    Detailed steps to reproduce the behavior:  ## Expected behavior  A clear and concise description of what you expected to happen.  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:   Selenium Grid version (if applicable):","closed","","subhashkiranchilka","2019-02-18T13:04:16Z","2019-08-14T21:09:59Z"
"","6864","Drag and Drop not working in ChromeDriver 2.45.615291 Selenium","## 🐛 Bug Report  A clear and concise description of what the bug is.    ## To Reproduce    Detailed steps to reproduce the behavior:  ## Expected behavior  A clear and concise description of what you expected to happen.  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:   Selenium Grid version (if applicable):","closed","","Pikkurthi","2019-01-18T08:45:35Z","2019-08-14T23:09:49Z"
"","7411","ExpectedConditions#elementToBeClickable(By) fails to locate web element using linkText","## 🐛 Bug Report  A clear and concise description of what the bug is.    ## SSCCE   String path = ""YOUR PATH"";  System.setProperty(""webdriver.chrome.driver"", path);  ChromeOptions options = new ChromeOptions();  options.addArguments(""enable-automation"");  options.addArguments(""--window-size=1920,1080"");  options.addArguments(""--no-sandbox"");  options.addArguments(""--disable-extensions"");  options.addArguments(""--dns-prefetch-disable"");  options.addArguments(""--disable-gpu"");  options.setPageLoadStrategy(PageLoadStrategy.NORMAL);  WebDriver driver = new ChromeDriver(options);  //By by = By.xpath(""//a[text()='LINK TEXT']"")","closed","","hfontanez1968","2019-07-19T15:24:40Z","2019-08-24T22:09:34Z"
"","7559","WebElement.findElement(By.js( ... )) throws a TypeError","## 🐛 Bug Report  `WebElement.findElement(By.js( ... ))` throws a `TypeError`.  ## To Reproduce  ```js var driver=new Builder().forBrowser('firefox').build(); driver.get('https://google.com'); driver.wait(until.elementLocated(By.js('return document.getElementById(""tsf"");'))).then(function(form){ 	form.findElement(By.js('return this.getElementsByName(""q"")[0];')); //","closed","C-nodejs,","camilstaps","2019-09-12T08:06:30Z","2021-11-09T00:06:30Z"
"","7405","Sockets to chromedriver left in CLOSE_WAIT after `driver.quit`","## 🐛 Bug Report  `Selenium::WebDriver::Chrome::Driver#quit` leaves sockets open to chromedriver in `CLOSE_WAIT` state. A long-running process that opens and quits drivers can reach the system's file descriptor limit, causing the system to become unresponsive.    ## To Reproduce    Detailed steps to reproduce the behavior:  In ruby:  ```rb puts ""pid: #{Process.pid}"" ```  In shell, confirm no TCP sockets are open from the ruby process:  ```sh lsof -p  ```  Back in ruby:  ```rb require 'selenium-webdriver'  def new_driver   driver_options = Selenium::WebDriver::Chrome::Options.new()   driver_capabilities = Selenium::WebDriver::Remote::Capabilities.chrome(loggingPrefs: {performance: 'ALL'})    Selenium::WebDriver.for :chrome,     listener: -> (event_name, *args) { puts ""heard #{event_name}, #{args}"" },     options: driver_options,     desired_capabilities: driver_capabilities end  10.times { new_driver.quit } ```  And back in the shell: ```sh lsof -p  ```  The output will vary in format and clarity, depending on the host system. For example, on Mac OS, this will produce lines like:  ``` ruby    20725 brian    9u   IPv4 0xe090a3bf8124a885        0t0      TCP localhost:58481->localhost:9516 (CLOSE_WAIT) ```  On Amazon Linux, it's more cryptic: ``` ruby    14866 ec2-user  413u  sock                0,8         0t0 2264485717 can't identify protocol ```  ## Expected behavior Sockets to chromedriver (e.g. TCP to remote port 9515) are closed on `quit`.  ## Test script or set of commands reproducing this issue  See above.  ## Environment  OS: Have reproduced this on Mac OS 10.14.5 and Amazon Linux 1, from MRI and JRuby. Browser version: 75.0.3770.142 (Official Build) (64-bit) Browser Driver version: ChromeDriver 74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}) Language Bindings version: Ruby gem `selenium-webdriver` 3.11.0 and 3.142.3","closed","C-rb,","bblack","2019-07-18T14:22:21Z","2021-09-05T08:25:05Z"
"","7144","Ruby bindings allow snake cased capabilities to be sent in firstMatch which is against w3c protocol","## 🐛 Bug Report  `firstMatch` contains snake cased capabilities because of [this](https://github.com/SeleniumHQ/selenium/blob/selenium-3.141.0/rb/lib/selenium/webdriver/remote/w3c/capabilities.rb#L157). Since W3C specification does not allow any of those snake cased capabilities, jar throws exception ```illegal key values seen in w3c capabilities```.  ## To Reproduce - Ruby bindings 3.141.0 ```ruby require 'selenium-webdriver' capabilities = { ""browserName"" => ""chrome"", ""browser_version"" => ""73.0"" } remote_url = 'http://localhost:4444/wd/hub' driver = Selenium::WebDriver::Remote::Driver.new(url: remote_url, desired_capabilities: capabilities) ```    Detailed steps to reproduce the behavior:  ### Prerequisites 1. java ""1.8.0"" or later 2. ruby ""2.3.0"" or later  ### Steps 1. Download selenium webdriver ruby bindings 3.141.0 2. Download selenium jar 3.13.0 3. Open a terminal and run ```java -jar selenium-server-standalone-3.13.0.jar```. 4. Now open a seperate terminal instance and run ```irb```. 5. Paste the code provided in `To Reproduce` section above.  ## Expected behavior  The payload which is sent in start session request should look like ```json {   ""desiredCapabilities"": {      ""browserName"": ""chrome"",      ""browser_version"": ""73.0""   },   ""capabilities"": {      ""firstMatch"": [{         ""browserName"": ""chrome"",         ""browserVersion"": ""73.0"" # Either `browser_version` should be omitted or converted to `browserVersion`      }],      ""alwaysMatch"": {      }   } } ``` But currently it looks like ```json {   ""desiredCapabilities"": {      ""browserName"": ""chrome"",      ""browser_version"": ""73.0""   },   ""capabilities"": {      ""firstMatch"": [{         ""browserName"": ""chrome"",         ""browser_version"": ""73.0""      }],      ""alwaysMatch"": {      }   } } ```  ## Test script or set of commands reproducing this issue  Provided a minimal script in `To Reproduce` section above.  ## Environment  OS: OS X (Mojave) Browser: Chrome Browser version: 73 Browser Driver version: chromedriver 2.45 Language Bindings version: ruby 3.141.0 Selenium Grid version (if applicable): 3.13.0","closed","C-rb,","ss3681755","2019-04-26T09:36:44Z","2019-08-14T12:10:05Z"
"","7390","Logs stopped working in ChromeDriver (c#)","## 🐛 Bug Report  `driver.Manage().Logs.GetLog(LogType.Browser)` throws this exception now.  `System.NotImplementedException: unknown command: unknown command: session/f3cbd0a8ba58e1fe3e1e6d36dbdaf28e/se/logs`  OS: Windows 10 Browser: Chrome Browser version: 75.0.3770.100 Browser Driver version: ChromeDriver 75.0.3770.140 Selenium.WebDriver: 4.0.0-alpha02","closed","D-chrome,","alex-jitbit","2019-07-15T14:46:19Z","2019-08-08T21:13:55Z"
"","7488","Error: Failed to import atoms module ./atoms/get-attribute.js.","## 🐛 Bug Report  ```ssh ┏ Electron -------------------    Error: Failed to import atoms module ./atoms/get-attribute.js. If running in dev mode, you need to run `bazel build //javascript/node/selenium-webdriver/lib/atoms:get-attribute.js` from the projectroot: Error: Cannot find module './atoms/get-attribute.js'       at requireAtom (webpack-internal:///./node_modules/selenium-webdriver/lib/http.js:56:13)       at eval (webpack-internal:///./node_modules/selenium-webdriver/lib/http.js:35:22)       at Object../node_modules/selenium-webdriver/lib/http.js (/Users/root/Documents/projects/argus/desktop/dist/main/main.js:1893:1)       at __webpack_require__ (/Users/root/Documents/projects/argus/desktop/dist/main/main.js:704:30)       at fn (/Users/root/Documents/projects/argus/desktop/dist/main/main.js:78:20)       at eval (webpack-internal:///./node_modules/selenium-webdriver/http/index.js:29:17)       at Object../node_modules/selenium-webdriver/http/index.js (/Users/root/Documents/projects/argus/desktop/dist/main/main.js:1774:1)       at __webpack_require__ (/Users/root/Documents/projects/argus/desktop/dist/main/main.js:704:30)       at fn (/Users/root/Documents/projects/argus/desktop/dist/main/main.js:78:20)       at eval (webpack-internal:///./node_modules/selenium-webdriver/chrome.js:133:14)  ┗ ---------------------------- ```  ## To Reproduce ### package.json ```json {   ...   ""main"": ""./dist/main/main.js"",   ""scripts"": {     ""start"": ""npm run start:renderer && npm run start:main"",     ""start:main"": ""electron-webpack dev"",     ""start:renderer"": ""cross-env APP_ROOT=src/renderer BROWSER=none umi dev""   },   ""devDependencies"": {     ""cross-env"": ""^5.1.1"",     ""electron"": ""^6.0.0"",     ""electron-builder"": ""^21.2.0"",     ""electron-debug"": ""^3.0.1"",     ""electron-webpack"": ""^2.7.4"",     ""html-webpack-plugin"": ""^3.2.0"",     ""husky"": ""^0.14.3"",     ""less-loader"": ""^4.1.0"",     ""less-vars-to-js"": ""^1.3.0"",     ""moment-locales-webpack-plugin"": ""^1.0.7"",     ""prettier"": ""1.17.0"",     ""uglifyjs-webpack-plugin"": ""^2.1.2"",     ""umi"": ""^2.8.16"",     ""umi-plugin-dll"": ""^1.5.2"",     ""umi-plugin-dva"": ""^1.7.7"",     ""umi-plugin-react"": ""^1.9.14"",     ""umi-plugin-routes"": ""^1.4.6"",     ""webpack"": ""~4.35.3"",     ""webpack-cli"": ""^3.3.2"",     ""webpack-merge"": ""^4.2.1"",     ""webpack-node-externals"": ""^1.7.2""   },   ""dependencies"": {     ""chromedriver"": ""^76.0.0"",     ""selenium-webdriver"": ""^4.0.0-alpha.4"",     ""source-map-support"": ""^0.5.12""   },   ""electronWebpack"": {     ""main"": {       ""sourceDirectory"": ""src/main""     },     ""renderer"": {       ""sourceDirectory"": null     }   } } ```  ### main.js ```javascript const webdriver = require('selenium-webdriver') const chrome = require('selenium-webdriver/chrome'); const chromePath = require('chromedriver').path;  const Options = chrome.Options; const service = new chrome.ServiceBuilder(chromePath).build(); chrome.setDefaultService(service);  ipcMain.on('backchannel', async (event, arg) => {     const driver = new webdriver.Builder()         .forBrowser('chrome')         .withCapabilities(webdriver.Capabilities.chrome())         .setChromeOptions(new Options().excludeSwitches([""ignore-certificate-errors"", chromePath]))         .build()     try {         await driver.get('https://www.baidu.com');         await driver.sleep(3000);     } catch (error) {         event.reply('backchannel-reply', error);         console.log(error)     } finally {         await driver.quit();     } }) ```  ### start main ```ssh node run start:main or yarn start:main ```  Detailed steps to reproduce the behavior:  ## Expected behavior open chromedriver dialog and visit baidu‘s homepage.  ## Environment  OS: macOS Mojave 10.14.6 Node: v11.6.0 Npm: 6.10.2 selenium-webdriver: ^4.0.0-alpha.4 chromedriver: ^76.0.0 electron: ^6.0.0 electron-webpack: ^2.7.4  ## Attempt 1. bazel ```ssh $ bazel build //javascript/node/selenium-webdriver/lib/atoms:get-attribute.js  ERROR: The 'build' command is only supported from within a workspace (below a directory having a WORKSPACE file). See documentation at https://docs.bazel.build/versions/master/build-ref.html#workspace WARNING: --batch mode is deprecated. Please instead explicitly shut down your Bazel server using the command ""bazel shutdown"". ```  2. rebuild project but not fixed. 3. I try to use simple electron's project, it works success.but not normal when use electron-webpack.","closed","","zhoumh1988","2019-08-12T04:08:12Z","2019-09-11T08:09:36Z"
"","6855","finding element from ""http://www.ewteacher.com"" raise WebDriverException: session deleted because of page crash/invalid session id/no such session","## 🐛 Bug Report  ``` browser=webdriver.Chrome() browser.get(""http://www.ewteacher.com"") #OK print(""titile=""+browser.title) #OK body=browser.find_element_by_tag_name(""body"")#raise WebDriverException: Message: unknown error: session deleted because of page crash/invalid session id/no such session ``` I have tested at 4 ubuntu machines，remote and local, headless and no headless, latest version and previous version. The fourth line code above will raise exception every time. It is 100% reproducible. **I have tested over 10000 sites, only this site will raise such exception.**  Yes I did only open only one chrome session at one time and it raise exception.  Codes work fine when I use firefox. I don't use Docker. Maybe it is chromedriver's problem, But I think friends here are more professional.   ## To Reproduce see codes below  ## Expected behavior  ``` Traceback (most recent call last):   File ""manage.py"", line 186, in      manager.run()   File ""/home/yonghu/wode/myproject/regpark/venv/lib/python3.5/site-packages/flask_script/__init__.py"", line 417, in run     result = self.handle(argv[0], argv[1:])   File ""/home/yonghu/wode/myproject/regpark/venv/lib/python3.5/site-packages/flask_script/__init__.py"", line 386, in handle     res = handle(*args, **config)   File ""/home/yonghu/wode/myproject/regpark/venv/lib/python3.5/site-packages/flask_script/commands.py"", line 216, in __call__     return self.run(*args, **kwargs)   File ""manage.py"", line 182, in test8     test.testewteacher()   File ""/home/yonghu/wode/myproject/regpark/app/main/test.py"", line 51, in testewteacher     body=browser.find_element_by_tag_name(""body"")   File ""/home/yonghu/wode/myproject/regpark/venv/lib/python3.5/site-packages/selenium/webdriver/remote/webdriver.py"", line 530, in find_element_by_tag_name     return self.find_element(by=By.TAG_NAME, value=name)   File ""/home/yonghu/wode/myproject/regpark/venv/lib/python3.5/site-packages/selenium/webdriver/remote/webdriver.py"", line 978, in find_element     'value': value})['value']   File ""/home/yonghu/wode/myproject/regpark/venv/lib/python3.5/site-packages/selenium/webdriver/remote/webdriver.py"", line 321, in execute     self.error_handler.check_response(response)   File ""/home/yonghu/wode/myproject/regpark/venv/lib/python3.5/site-packages/selenium/webdriver/remote/errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.WebDriverException: Message: unknown error: session deleted because of page crash from unknown error: cannot determine loading status from tab crashed   (Session info: chrome=71.0.3578.98)   (Driver info: chromedriver=2.45.615279 (12b89733300bd268cff3b78fc76cb8f3a7cc44e5),platform=Linux 4.4.0-117-generic x86_64)  ```   ## Test script or set of commands reproducing this issue  ``` options=ChromeOptions() options.add_argument(""--disable-dev-shm-usage"") #this flag can't solve the problem too. browser = webdriver.Remote(command_executor=my_specifice_executor, desired_capabilities=DesiredCapabilities.CHROME, options=options) #browser=webdriver.Chrome(options=ChromeOptions()) browser.get(""http://www.ewteacher.com"")#OK print(""titile=""+browser.title)#OK body=browser.find_element_by_tag_name(""body"")#raise webdriverexception print(body.text)  ``` ## Environment  OS: ubuntu 16.04 Browser: chrome Browser version: 71.0.3578.98 Browser Driver version: chromedriver=2.45.615279 Language Bindings version: Java 1.8.0_191 Selenium Grid version (if applicable):","closed","","lilin3","2019-01-16T08:16:23Z","2019-08-14T23:09:57Z"
"","6922","Clicking only works the first time, and fill_in doesn't work.","## 🐛 Bug Report  `.click(x: 0, y: 0)` (Firefox) and some `click_at` method I found (chrome-driver) only worked the first few clicks (from 1 to ~5) then didn't work anymore (returns `nil` but the clicks don't happen)  ``` Capybara::Node::Element.class_eval do   def click_at(x, y)     right = x - (native.size.width / 2)     top = y - (native.size.height / 2)     driver.browser.action.move_to(native).move_by(right.to_i, top.to_i).click.perform   end end ```  `fill_in` didn't work (I was getting some weird ""value"" ""recursive"" error from chrome driver), so I had to use:  ``` def hacked_fill_in(selector, value)   C.accept_confirm {     C.execute_script(""alert($('#{selector}').val('#{value}'))"")   } end ```  OS: OSX Browser: Firefox / Chrome Browser version: 65.0 / 72.0 Browser Driver version: geckodriver 0.23.0 / ChromeDriver 2.34.522932 Language Bindings version: Ruby 2.5.0 with Capybara  Sorry for filling multiple bugs. I have various more or less hacky workarounds.","closed","","localhostdotdev","2019-02-08T17:45:28Z","2019-08-14T22:09:44Z"
"","7623","Release 3.141.59 not available in PyPI","## 🐛 Bug Report  3.141.59 was released but it was not uploaded to PyPI  ## To Reproduce  https://github.com/SeleniumHQ/selenium/releases/tag/selenium-3.141.59 https://pypi.org/project/selenium/3.141.59/  ## Expected behavior  All stable releases (including bug fixes) are uploaded to PyPI.","closed","","gtirloni","2019-10-01T08:52:39Z","2019-10-31T11:07:39Z"
"","7695","java.lang.NoClassDefFoundError: org/openqa/selenium/net/PortProber -- After updating to version 4.0.0-alpha-3","## 🐛 Bug Report  **iSSUE** Updated to selenium version 4.0.0-alpha-3 and selenium server version 4.0.0-alpha-2 from Selenium 3.14.59. Everything works fine with 3.14.59 but right after updating to new version below exception is comming up on all browsers: **java.lang.NoClassDefFoundError: org/openqa/selenium/net/PortProber Caused by: java.lang.ClassNotFoundException: org.openqa.selenium.net.PortProber**  **Full Stack Trace** 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at cucumber.runtime.Utils$1.call(Utils.java:26) 	at cucumber.runtime.Timeout.timeout(Timeout.java:16) 	at cucumber.runtime.Utils.invoke(Utils.java:20) 	at cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:65) 	at cucumber.runner.HookDefinitionMatch.runStep(HookDefinitionMatch.java:16) 	at cucumber.runner.TestStep.executeStep(TestStep.java:65) 	at cucumber.runner.TestStep.run(TestStep.java:50) 	at cucumber.runner.TestCase.run(TestCase.java:50) 	at cucumber.runner.Runner.runPickle(Runner.java:50) 	at io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:146) 	at io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:68) 	at io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:23) 	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:330) 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:78) 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:328) 	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:65) 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:292) 	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:305) 	at org.junit.runners.ParentRunner.run(ParentRunner.java:412) 	at io.cucumber.junit.Cucumber.runChild(Cucumber.java:142) 	at io.cucumber.junit.Cucumber.runChild(Cucumber.java:65) 	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:330) 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:78) 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:328) 	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:65) 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:292) 	at io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:172) 	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:305) 	at org.junit.runners.ParentRunner.run(ParentRunner.java:412) 	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365) 	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273) 	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238) 	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159) 	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384) 	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345) 	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126) 	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)  **Options and service used for chrome** ChromeDriverService chromeService = new ChromeDriverService.Builder().usingAnyFreePort().usingAnyFreePort().build();          ChromeOptions chromeOptions = new ChromeOptions();         HashMap chromePrefs = new HashMap();         chromePrefs.put(""profile.default_content_settings.popups"", 0);         chromePrefs.put(""download.prompt_for_download"", ""false"");         chromePrefs.put(""download.directory_upgrade"", ""true"");         chromePrefs.put(""download.default_directory"", System.getProperty(""user.dir"") + File.separator + ""target"");         chromeOptions.setExperimentalOption(""prefs"", chromePrefs);         chromeOptions.addArguments(""--window-size=1920,1080"");         chromeOptions.setUnhandledPromptBehaviour(UnexpectedAlertBehaviour.IGNORE); this.driver = new ChromeDriver(chromeOptions);  **To Reproduce** Chrome version : 77 OS: Any Selenium version 4.0.0-alpha-3  It also appears that may be services is not a mandatory requirement to pass to chromeDriver constructor. However same exception is thrown with and without services.","closed","C-java,","Naumansh","2019-10-18T21:54:07Z","2019-12-17T20:37:03Z"
"","7755","TypeError: can't access dead object on firefox 70","## 🐛 Bug Report  **driver.findElements** is expected not to throw any exception even if the element is not present on page. However, with firefox if you have not yet switched to relevant iframe or default content and you try to validate element presence using **driver.findElements**, WebDriverException:TypeError: can't access dead object is thrown.  -->  ## To Reproduce  Detailed steps to reproduce the behavior:  1- be on any webpage. 2- do driver.findElements for any locator which is not in current context.  ## Expected behavior It should not throw any exception rather should return an empty arrayList if element is not present or locator is not correct.   ## Environment  OS: OSX Browser: Firefox Browser version: 70.0.1 Browser Driver version:  GeckoDriver 0.26  Language Bindings version: Java 3.141.59","closed","R-awaiting answer,","Naumansh","2019-11-07T18:26:03Z","2020-04-18T22:16:32Z"
"","7136","New version issue","## 🐛 Bug Report  **[09:48:23] Error: Invalid or corrupt jarfile /Users/jenkins/workspace/TestGate-DEV/node_modules/protractor/node_modules/webdriver-manager/selenium/selenium-server-standalone-4.0.0-alpha-1.zip.jar**  Getting this error in npm module of protractor today. Seems like quite a few people affected by this.  There is an error with newer version. Code base was working fine with our older version 3.14X     ## Environment Failing in local and jenkins","closed","","tejasbhosale","2019-04-24T23:47:36Z","2019-08-14T13:09:37Z"
"","6866","driver.title is WebElement object instead of string","## 🐛 Bug Report  ## To Reproduce  ## Expected behavior  ``` Traceback (most recent call last):   File ""manage.py"", line 229, in      manager.run()   File ""/home/yonghu/wode/myproject/regpark/venv/lib/python3.5/site-packages/flask_script/__init__.py"", line 417, in run     result = self.handle(argv[0], argv[1:])   File ""/home/yonghu/wode/myproject/regpark/venv/lib/python3.5/site-packages/flask_script/__init__.py"", line 386, in handle     res = handle(*args, **config)   File ""/home/yonghu/wode/myproject/regpark/venv/lib/python3.5/site-packages/flask_script/commands.py"", line 216, in __call__     return self.run(*args, **kwargs)   File ""manage.py"", line 219, in test9     test.testjtjyol()   File ""/home/yonghu/wode/myproject/regpark/app/main/test.py"", line 51, in testjtjyol     print(""titile=""+browser.title) TypeError: : Can't convert 'WebElement' object to str implicitly ```  ## Test script or set of commands reproducing this issue  ```     browser=webdriver.Chrome(options=ChromeOptions(),desired_capabilities=DesiredCapabilities.CHROME)     browser.get(""http://www.jtjyol.com"")     print(""titile=""+browser.title) ```  ## Environment  OS: ubuntu 16.04 Chrome=66.0.3359.139 + chromedriver=2.38.552522 Chrome=71.0.3578.98 + chromedriver=2.45.615279 tested too Language Bindings version: Selenium Grid version (if applicable):","closed","","lilin3","2019-01-20T04:26:44Z","2019-08-14T23:09:54Z"
"","6919","Google drive issue with chrome","## 🐛 Bug Report  ## Environment OS: Windows 10 Browser: Chrome Browser version: 72.0.3626.96 Browser Driver version: ChromeDriver 2.46 Selenium Grid version (if applicable):  3.141.59  ## Issue Hello,  I test Google Drive with Selenium and Chrome.  Since the last update of Google drive, some elements not appears on main page : https://drive.google.com/drive/my-drive after login.  But manually, all elements are loaded and visible.  We've got a unknown or not managed html tag  that not appear with Selenium.  I have tested with Firefox and all is working fine.  So i think is a Chrome issue.  Could you look and keep us informed please ?  Thanks in advance.  Regards.  Maialen Bachacou from Maltem Insight Performance company.","closed","","Mbachacou","2019-02-08T10:35:37Z","2019-08-14T22:09:47Z"
"","7827","Selenium Node (4.0.0 alpha 3): auto determine IP","## 🐛 Bug Report  ## Can we enable auto determine IP for nodes without parameter --host?  ## First configuration: Hub - aws linux 2 AMI Node - aws windows server 2016  Hub don't see node if I started node without parameter --host NODE_IP. All works when I started node with parameter --host NODE_IP.  After I start hub and node - I open http://HUB_IP:HUB_PORT/status in browser and don't see node in ""nodes"" array.  Part of the log from node with parameter: 01:53:31.916 INFO [AbstractConnector.doStart] - Started ServerConnector@15b204a1{HTTP/1.1,[http/1.1]}{**10.1.1.4**:8888} Part of the log from node without parameter: 01:56:19.943 INFO [AbstractConnector.doStart] - Started ServerConnector@309e345f{HTTP/1.1,[http/1.1]}{**0.0.0.0**:8888}  ## Second configuration (just for reference): Hub - windows 10 on local PC Node - windows 10 on virtualbox  Logs for nodes in this configuration same as logs for nodes in first configuration.  But when I open http://HUB_IP:HUB_PORT/status in browser I see node with following text """"uri"": ""http:\u002f\u002f**Best-Komp**:8899""""","closed","R-awaiting answer,","kovalev007","2019-11-29T02:17:11Z","2020-05-20T21:18:56Z"
"","7262","not able to use Appium capability ""allowTestPackages""","## 🐛 Bug Report  # Environment Selenium Hub: 3.141.59 Appium Server: 1.13.0 OS: Ubuntu  # Situation Connect Appium Server to Selenium Hub and run tests against Selenium Hub and set capability ""allowTestPackages"" to true.  # Current behaviour If you unset capability ""allowTestPackages"", it works fine. If you set capability ""allowTestPackages"" to true, it will fail and give this error message: ``` Caused by: java.lang.reflect.InvocationTargetException: null 10:58:03  	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 10:58:03  	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 10:58:03  	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 10:58:03  	at java.lang.reflect.Method.invoke(Method.java:498) 10:58:03  	at io.appium.java_client.remote.AppiumCommandExecutor$1.createSession(AppiumCommandExecutor.java:185) 10:58:03  	... 41 common frames omitted 10:58:03  Caused by: org.openqa.selenium.WebDriverException: Unable to parse remote response:  10:58:03   10:58:03   10:58:03  Error 500 Server Error 10:58:03   10:58:03  HTTP ERROR 500 ```  # Expected behaviour All capabilities that are defined in Appium should works through Selenium Hub. The list of Appium capabilities can be found [here](http://appium.io/docs/en/writing-running-appium/caps/)","closed","R-awaiting answer,","budtmo","2019-06-05T12:04:02Z","2020-05-20T20:53:35Z"
"","7165","selenium docker in windows container fails ff and chrome with 'session deleted because of page crash'","## 🐛 Bug Report  # DOCKER WITH SELENIUM AND ASP.NET 4.5 MVC  What am I trying to do?  Attempting to have a  docker image that does following.  Yes, I'm aware there are other ways to accomplish the end game here but I have a specific  request on this.  * Runs an ASP.NET MVC 4.5 web app * Has selenium driver via a c# console exe testing the code  Current status - when test is run in regular Windows 10 or Windows 2016 it runs fine.  When the test is run in a Windows docker container it blows out with ""***session deleted because of page crash***"".  Note I'm focusing on chrome tests but we get similar results using FireFox as well.  I turned on verbose debugging for selenium chrome and trapped out logfiles.  I have two logfiles.  [""goodrun_log.txt""](logs/goodrun_log.txt) is from a Windows 10 successful test.  [""docker_log.txt""](logs/docker_log.txt) is the log from a failed run inside a container.  About line 473 we can see the docker run fail.  Up to that point the log file is exactly the same as the good run.  Then boom.  So what are we missing that makes the docker container fail at that point?    ## SEEMS SIMILAR TO  * Docker issue (linux) on aug 11 2015 - /dev/shm sizing - https://github.com/elgalu/docker-selenium/issues/20 by kkochubey1 * Docker issue (linux) march 2018 - https://github.com/pranavgore09/fabric8-planner/pull/3 * ChromeDriver - https://github.com/rshf/chromedriver/issues/772 * Chromium bug (linux) - https://bugs.chromium.org/p/chromium/issues/detail?id=522853  ## THINGS I TRIED  * chrome flags (many more than this but...)  ```c# option.AddArgument(""--disable-dev-shm-usage""); // https://github.com/elgalu/docker-selenium/issues/20#issuecomment-407101358 ```  * driver retry like this https://github.com/electron/electron/issues/9369#issuecomment-312234465 * SHM mode. Command runs but did not resolve issue   ```powershell docker run -d --name aspnet48testsrun --shm-size=""1g"" -p 5000:80 aspnet48testsd ```  * memory  ``` docker run -d --name aspnet48testsrun -m inf --memory-swap inf -p 5000:80 aspnet48tests docker run -d --name aspnet48testsrun -m 2g -p 5000:80 aspnet48tests ```  ## DOCKER RUN FAIL   [1556732925.450][DEBUG]: DevTools WebSocket Event: DOM.documentUpdated 7FCEC12C5F4ADEA352BBA3DF3AF6075D {  } [1556732925.450][DEBUG]: DevTools WebSocket Command: DOM.getDocument (id=15) 7FCEC12C5F4ADEA352BBA3DF3AF6075D {  } [1556732925.451][DEBUG]: DevTools WebSocket Response: Runtime.evaluate (id=14) 7FCEC12C5F4ADEA352BBA3DF3AF6075D {    ""result"": {       ""type"": ""string"",       ""value"": ""http://localhost/""    } } [1556732925.531][DEBUG]: DevTools WebSocket Event: Inspector.targetCrashed 7FCEC12C5F4ADEA352BBA3DF3AF6075D {  } [1556732925.532][INFO]: Waiting for pending navigations... [1556732925.532][DEBUG]: DevTools WebSocket Command: Runtime.evaluate (id=16) 7FCEC12C5F4ADEA352BBA3DF3AF6075D {    ""expression"": ""1"" } [1556732925.532][INFO]: Done waiting for pending navigations. Status: unknown error: cannot determine loading status from tab crashed [1556732925.552][INFO]: [464b2b630c39434969f9b90e11b7aa37] RESPONSE Navigate ERROR unknown error: session deleted because of page crash from unknown error: cannot determine loading status from tab crashed   (Session info: headless chrome=74.0.3729.108) [1556732925.552][DEBUG]: Log type 'driver' lost 0 entries on destruction [1556732925.552][DEBUG]: Log type 'browser' lost 0 entries on destruction   ## WIN10 RUN GOOD   [1556733552.098][DEBUG]: DevTools WebSocket Event: DOM.documentUpdated 193B5CE9ACD5F7CE56919120C68276A7 {  } [1556733552.098][DEBUG]: DevTools WebSocket Command: DOM.getDocument (id=15) 193B5CE9ACD5F7CE56919120C68276A7 {  } [1556733552.104][DEBUG]: DevTools WebSocket Response: Runtime.evaluate (id=14) 193B5CE9ACD5F7CE56919120C68276A7 {    ""result"": {       ""type"": ""string"",       ""value"": ""http://localhost:29657/""    } } [1556733552.104][DEBUG]: DevTools WebSocket Response: DOM.getDocument (id=15) 193B5CE9ACD5F7CE56919120C68276A7 {    ""root"": {       ""backendNodeId"": 6,       ""baseURL"": ""http://localhost:29657/"",       ""childNodeCount"": 1,       ""children"": [ {          ""attributes"": [  ],          ""backendNodeId"": 7,          ""childNodeCount"": 2, ... lots more ...   ## SESSION DELETED BECAUSE OF PAGE CRASH   PS C:\seleniumtests> .\SeleniumDockerTest.exe http://localhost [chrome options:] =[--headless --no-sandbox --disable-gpu] Starting ChromeDriver 74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}) on port 49160 Only local connections are allowed. Please protect ports used by ChromeDriver and related test frameworks to prevent access by malicious code. [0501/120039.381:ERROR:network_change_notifier_win.cc(156)] WSALookupServiceBegin failed with: 0 [0501/120039.428:ERROR:audio_device_listener_win.cc(46)] RegisterEndpointNotificationCallback failed: 80070424  DevTools listening on ws://127.0.0.1:49163/devtools/browser/f33a8cd9-6411-46f5-a9ab-d69901cd53c1 [0501/120039.772:ERROR:network_change_notifier_win.cc(156)] WSALookupServiceBegin failed with: 0 [exception caught] =[OpenQA.Selenium.WebDriverException: unknown error: session deleted because of page crash from unknown error: cannot determine loading status from tab crashed   (Session info: headless chrome=74.0.3729.108)   (Driver info: chromedriver=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}),platform=Windows NT 10.0.17763 x86_64)    at OpenQA.Selenium.Remote.RemoteWebDriver.UnpackAndThrowOnError(Response errorResponse)    at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)    at OpenQA.Selenium.Remote.RemoteWebDriver.set_Url(String value)    at OpenQA.Selenium.Remote.RemoteNavigator.GoToUrl(String url)    at SeleniumDockerTest.Program.DoChromeTests() in C:\dev\docker-selenium-aspnet45.git\SeleniumDockerTest\Program.cs:line 60]   ## TRY IT YOURSELF  There is a docker image with Windows, IIS, Chrome, FF and some tests at https://cloud.docker.com/repository/docker/jhealy62/devfish .  Pull it down the repo and provision it  * docker pull jhealy62/devfish * docker run -d --name aspnettest -p 5000:80 jhealy62/devfish  Powershell into the container  * docker exec -it aspnettest powershell  Inside the docker container, see the web server working  * curl http://localhost -UseBasicParsing  See the seleniumtest failing:  * cd \ * cd \seleniumtests * .\SeleniumDockerTests.exe http://localhost  Cry with me!  ## NEXT STEPS  * POSTED ISSUE - Aspnet docker github - https://github.com/Microsoft/aspnet-docker/issues/181  ## WHAT HAPPENED TO THE PAGE TIMEOUT ISSUE?  WebDriver Timeout error resolved -Occurs with either FireFox or Chrome tests inside docker container.  FIX (requires both items below):  * Install websocket's into the docker container.  Excerpt from dockerfile:  ```powershell RUN powershell -Command Add-WindowsFeature Web-WebSockets ```  * Pass a very interesting set of options to the chromedriver.  ```C# option.AddArguments( ""--headless"",""--disable-gpu"", ""--no-sandbox"" ); ```","closed","","jhealy","2019-05-02T19:57:26Z","2019-08-14T12:09:35Z"
"","7711","java.lang.ExceptionInInitializerError for chrome 77.0.3865.120","## 🐛 Bug Report   Chrome version : 77.0.3865.120 and above   Chrome driver :  **Starting ChromeDriver 77.0.3865.10 (bc3579f611bbc73331171afe020ec7a45e6ccc55-refs/branch-heads/3865@{#93}) on port 38271 Only local connections are allowed. Please protect ports used by ChromeDriver and related test frameworks to prevent access by malicious code.**   java.lang.ExceptionInInitializerError   java.lang.ExceptionInInitializerError Caused by: org.openqa.selenium.WebDriverException:  unknown error: cannot create temp dir for user data dir Build info: version: '3.9.1', revision: '63f7b50', time: '2018-02-07T22:25:02.294Z' System info: host:  ',', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_162' Driver info: driver.version: ChromeDriver remote stacktrace: Backtrace: 	Ordinal0 [0x00FCEBD3+1502163] 	Ordinal0 [0x00F4F781+980865] 	Ordinal0 [0x00ED763F+489023] 	Ordinal0 [0x00E6B894+47252] 	Ordinal0 [0x00E897E0+169952] 	Ordinal0 [0x00E8940D+168973] 	Ordinal0 [0x00E878EB+162027] 	Ordinal0 [0x00E70AC7+68295] 	Ordinal0 [0x00E71B40+72512] 	Ordinal0 [0x00E71AD9+72409] 	Ordinal0 [0x00F68FE7+1085415] 	GetHandleVerifier [0x0106D8AD+503293] 	GetHandleVerifier [0x0106D640+502672] 	GetHandleVerifier [0x0107471C+531564] 	GetHandleVerifier [0x0106E0BA+505354] 	Ordinal0 [0x00F606B6+1050294] 	Ordinal0 [0x00F6052F+1049903] 	Ordinal0 [0x00F6B04B+1093707] 	Ordinal0 [0x00F6B1B3+1094067] 	Ordinal0 [0x00F6A145+1089861] 	BaseThreadInitThunk [0x77278674+36] 	RtlGetAppContainerNamedObjectPath [0x77BB5E17+311] 	RtlGetAppContainerNamedObjectPath [0x77BB5DE7+263]","closed","","kishor32","2019-10-24T07:53:16Z","2019-11-24T13:08:29Z"
"","6953","How can I run the testng.xml file with multiple external jars on Ubuntu terminal?","## 🐛 Bug Report   >  I want to run the kol.xml file with external jar  but I don't know the exact command to run the XML file with external jar  NOTE- this jar file are required to take the screenshot of the webpage  and I have added all jars including external jar  in the libs folder External jar files -commons-io-2.5.jar, commons-io-2.6.jar, commons-io-2.6-javadoc.jar, commons-io-2.6-sources.jar, and commons-io-2.6-tests.jar ## Expected behavior kol.xml should run with external jars on ubuntu terminal  ## Test script or set of commands reproducing this issue  [java -cp /home/dev2/eclipse-workspace/cmdd/bin:/home/dev2/eclipse-workspace/cmdd/libs/* org.testng.TestNG kol.xml] please suggest how can i add external jars to this command   ## Environment  OS:  Browser:  Browser version:  Browser Driver version:   Selenium Grid version (if applicable):","closed","","marufsayyed","2019-02-20T05:33:22Z","2019-08-14T21:09:55Z"
"","7740","This version of ChromeDriver only supports Chrome version 75","## 🐛 Bug Report   #0 0x557c5a4526e9 : session not created: This version of ChromeDriver only supports Chrome version 75 (Selenium::WebDriver::Error::SessionNotCreatedError)  An error occurs when starting the test Reinstalling and uninstalling programs did not help  ## To Reproduce  ruby test.sh  ``` require ""selenium-webdriver""  # driver = Selenium::WebDriver.for :chrome options = Selenium::WebDriver::Chrome::Options.new options.add_argument('--ignore-certificate-errors') options.add_argument('--disable-popup-blocking') options.add_argument('--disable-translate') driver = Selenium::WebDriver.for :chrome, options: options  driver.navigate.to ""http://google.com""  element = driver.find_element(name: 'q') element.send_keys ""Hello WebDriver!"" element.submit  puts driver.title  driver.quit ``` ## Environment  OS: Ubuntu 18.04 Browser: Chrome Browser version:  78.0.3904.87 Browser Driver version: ChromeDriver 75.0.3770.90 Language Bindings version:gem 'webdrivers', '~> 3.0' Selenium Grid version (if applicable): 3.141.59","closed","","urkazan16","2019-11-04T11:36:38Z","2019-12-04T12:19:52Z"
"","7651","mouse hover is not working in safari ,selenium web driver","## 🐛 Bug Report    OS: OXs Browser: Safari Browser version: Version 13.0.1  Browser Driver version: Safari Language Bindings version:   Selenium Grid version (if applicable):   v  3.141.59 -","closed","","Pratish89","2019-10-04T23:38:49Z","2019-11-04T17:07:48Z"
"","7046","Content Security Policy error results in invalid SAML","## 🐛 Bug Report    ## To Reproduce I'm using chromedriver `2.46.628411` with default options to test SAML authentication against Amazon Web Services  ```         ChromeOptions options = new ChromeOptions();         WebDriverManager.chromedriver().setup();         ChromeDriver browser = new ChromeDriver(options);         browser.get(testUrl);         WebElement username = browser.findElementById(USERNAME_FIELD);         WebElement password = browser.findElementById(PASSWORD_FIELD);         username.sendKeys(this.realUsername);         password.sendKeys(this.realPassword);         password.submit(); ```  SAML authentication works, but then the chrome instance spawned by my Selenium test returns this error on the console: ``` The source list for Content Security Policy directive 'default-src' contains an invalid source: ''none''. It will be ignored. Note that 'none' has no effect unless it is the only expression in the source list. ``` and AWS webpage returns an error: `Your request included an invalid SAML response.`  ## Expected behavior The SAML assertion goes through like in my regular browser without CSP errors resulting into an invalid SAML  ## Environment Browser Driver version:  chromedriver `2.46.628411` Java 8 with: - org.seleniumhq.selenium selenium-chrome-driver 3.141.59 - io.github.bonigarcia webdrivermanager 3.3.0  - selenium-java 3.141.59","closed","","Ghilteras","2019-03-19T22:36:17Z","2019-08-14T19:09:39Z"
"","7749","Support ie broken in selenium 4.0.0a3","## 🐛 Bug Report       driver = webdriver.Ie(capabilities=cap, executable_path=ie11_driver_path,options=ie11_options)  File ""C:\Program Files (x86)\Microsoft Visual Studio\Shared\Python36_64\lib\site-packages\selenium\webdriver\ie\webdriver.py"", line 93, in __init__     service = Service() TypeError: __init__() missing 1 required positional argument: 'executable_path'   ``` ie11_driver_path = Ie11Factory.get_driver_path() ie11_options = Ie11Factory.build_ie11_options() cap = DesiredCapabilities().INTERNETEXPLORER cap['version'] = ""11"" cap['nativeEvents'] = False cap['requireWindowFocus'] = True ie11_options.executable_path = ie11_driver_path driver = webdriver.Ie(capabilities=cap, executable_path=ie11_driver_path,options=ie11_options) ```  ## Environment  Windows 10 x64 Browser: Internet explorer 11 Language Bindings version: selenium 4.0.0a3","closed","C-py,","ivan-kulikov-dev","2019-11-06T09:27:26Z","2020-04-15T07:49:30Z"
"","6874","Chrome version exception after update windows package","## To Reproduce  ``` E:\Archive\Tool\NetAuth>python e:\Archive\Tool\NetAuth\auth.py [0123/085057.182:ERROR:gpu_process_transport_factory.cc(1007)] Lost UI shared context.  DevTools listening on ws://127.0.0.1:2775/devtools/browser/356fb785-1b82-4465-93da-1eeb6d20e745 Traceback (most recent call last):   File ""e:\Archive\Tool\NetAuth\auth.py"", line 17, in      browser = webdriver.Chrome('./chromedriver', chrome_options=chrome_options)   File ""D:\Python36\lib\site-packages\selenium\webdriver\chrome\webdriver.py"", line 81, in __init__     desired_capabilities=desired_capabilities)   File ""D:\Python36\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 157, in __init__     self.start_session(capabilities, browser_profile)   File ""D:\Python36\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 252, in start_session     response = self.execute(Command.NEW_SESSION, parameters)   File ""D:\Python36\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 321, in execute     self.error_handler.check_response(response)   File ""D:\Python36\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome version must be between 70 and 73   (Driver info: chromedriver=2.45.615291 (ec3682e3c9061c10f26ea9e5cdcf3c53f3f74387),platform=Windows NT 10.0.17763 x86_64)  E:\Archive\Tool\NetAuth>wmic datafile where name=""C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe"" get Version /value  Version=71.0.3578.98 ```  ## Environment  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:     After uninstall these update then fix this problem but not sure which one caused KB4480056 (probably) KB4480116","closed","","rickywu","2019-01-23T00:54:24Z","2019-08-14T23:09:52Z"
"","7161","[Ruby] Unable to init chromedriver in 4.0.0.alpha1 version","## Steps To Reproduce ``` comparison of Integer with :warn failed (ArgumentError) ``` ![](https://i.imgur.com/JhGgyYb.png)  ## Test script ``` @driver = Selenium::WebDriver.for :chrome ``` or ``` caps = Selenium::WebDriver::Remote::Capabilities.chrome(""chromeOptions"" => {""args"" => [ ""disable-infobars"" ]}) @driver = Selenium::WebDriver.for :chrome, desired_capabilities: caps ```  ## Environment  OS:  Browser: Chrome Browser version: Version 73.0.3683.86 (Official Build) (64-bit) Browser Driver version: ChromeDriver 2.45.615355  Language Bindings version: selenium-webdriver 4.0.0.alpha1","closed","","prashanth-sams","2019-05-01T11:40:55Z","2019-08-14T12:09:41Z"
"","7807","java.lang.IllegalAccessError: tried to access method com.google.common.util.concurrent.SimpleTimeLimiter.(Ljava/util/concurrent/ExecutorService;)V from class org.openqa.selenium.net.UrlChecker","## Last working Selenium version  Worked up to version: Not exactly known  Stopped working in version: 3.141.59  ## Expected behavior  The chrome browser should be open.  ## Actual behavior   Throwing the above-mentioned error  ## Issue I found  This can be fixed by downgrading to guava version 22.0 But if we upgrade to the later versions of guava then it throws the above-mentioned error   ## Environment  OS: Windows 10 Browser: Chrome Browser version: Version 78.0.3904.97 (Official Build) (64-bit) Browser Driver version: Chromedriver 78.0.3904.105 Language Bindings version: Java 1.8 Selenium Grid version (if applicable): 3.141.59","closed","R-awaiting answer,","cankush625","2019-11-23T06:17:17Z","2020-04-25T08:18:51Z"
"","7170","Rejuvenate log levels","## Introduction  We are in the process of evaluating our [research prototype Eclipse plug-in](https://github.com/ponder-lab/Logging-Level-Evolution-Plugin) that ""rejuvenates"" log statement levels based on how ""interesting"" the enclosing methods are to the developers. We hypothesize that portions of a system that are worked on more and more recently should have higher log levels (e.g., `INFO` as compared to `FINEST`) and vice-versa. This places event logs related to tasks that are currently more important to the forefront while pushing event logs pertaining to tasks worked on in the past to the background. The goal is to reduce information overload, bring more relevant events to developers' attention, and alleviate developers from manually making log level changes.  The transformation decision is made by analyzing the ""degree of interest"" (DOI) values of enclosing methods for logging invocations. DOI value is a kind of real number for a program element which shows how developers are interested in it. It is computed from the interaction events between developer and program elements, such as edits. In this project, we calculate the DOI using the project's git history.  ## Feedback Request  We are looking for feedback on our tool from developers. If you can, we would appreciate if you can comment on *each* of the transformations (if possible) in the case that this PR is not accepted. If there there are too many transformations to review, letting us know where you left off would be helpful. Of course, we would also love to contribute to your project if you wish.  ## Settings  We have several analysis settings. We can vary these settings and rerun if you desire. The settings we are using in this pull request are:  1. Treat CONFIG levels as a category and not a traditional level, i.e., our tool ignores these log levels. 1. Never lower the logging level of logging statements within catch blocks. 1. Never lower the logging level of logging statements within if statements. 1. Never lower the logging level of logging statements containing certain (important) keywords. 1. Avoid log wrapping by disregarding logging statements contained in if statements mentioning log levels. 1. The greatest number of commits from HEAD evaluated: 1000.  The head at time of analysis was: 8389311401473048c215f0885dc5dc5488a311eb  ## Notes  We found one very interesting tranformation that the tool did automatically where [a log statement associated with an exception had its level changed from `INFO` to `SEVERE`](https://github.com/ponder-lab/selenium/blob/105c622aed268f60c142279be416040565f354d5/java/server/src/org/openqa/selenium/grid/node/httpd/NodeServer.java#L146):  ```diff diff --git a/java/server/src/org/openqa/selenium/grid/node/httpd/NodeServer.java b/java/server/src/org/openqa/selenium/grid/node/httpd/NodeServer.java index 732433d..121c8a6 100644 --- a/java/server/src/org/openqa/selenium/grid/node/httpd/NodeServer.java +++ b/java/server/src/org/openqa/selenium/grid/node/httpd/NodeServer.java @@ -143,7 +143,7 @@ public Executable configure(String... args) {            () -> {              HealthCheck.Result check = node.getHealthCheck().check();              if (!check.isAlive()) { -              LOG.info(""Node is not alive: "" + check.getMessage()); +              LOG.severe(""Node is not alive: "" + check.getMessage());                // Throw an exception to force another check sooner.                throw new UnsupportedOperationException(""Node cannot be registered"");              } ```  We filed [an issue](https://github.com/SeleniumHQ/selenium/issues/7169) to alert you of a possible inconsistency with the level, as the log seems important.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/7170)","closed","C-java,","khatchad","2019-05-03T22:17:31Z","2019-10-16T14:56:38Z"
"","7500","We are Unable to perform maximize browser for edge browser in ruby","## Environment OS: Windows 10 Ruby Version: 2.5.5 Selenium-webdriver : 3.142.3 Edge Broser Version: Microsoft Edge 44.17763.1.0 Microsoft EdgeHTML 18.17763 Edge Driver Version : 10.0.17763.652 (On Demand Driver)  ## Steps to reproduce: ``` require 'selenium-webdriver'  Selenium @browser = Selenium::WebDriver.for :edge @browser.get ""https://www.google.com/"" begin    @browser.manage.window.maximize rescue => e    puts e.message    puts e.backtrace ensure    @browser.close end ```  ## Expected outcome: Browser should be maximized  ## Actual outcome: ``unexpected response, code=500, content-type=""text/plain""  Unknown error  C:/Ruby25-x64/lib/ruby/gems/2.5.0/gems/selenium-webdriver-3.142.3/lib/selenium/webdriver/remote/http/common.rb:98:in 'create_response' C:/Ruby25-x64/lib/ruby/gems/2.5.0/gems/selenium-webdriver-3.142.3/lib/selenium/webdriver/remote/http/default.rb:114:in 'request' C:/Ruby25-x64/lib/ruby/gems/2.5.0/gems/selenium-webdriver-3.142.3/lib/selenium/webdriver/remote/http/common.rb:64:in 'call' C:/Ruby25-x64/lib/ruby/gems/2.5.0/gems/selenium-webdriver-3.142.3/lib/selenium/webdriver/remote/bridge.rb:167:in 'execute' C:/Ruby25-x64/lib/ruby/gems/2.5.0/gems/selenium-webdriver-3.142.3/lib/selenium/webdriver/remote/w3c/bridge.rb:567:in 'execute' C:/Ruby25-x64/lib/ruby/gems/2.5.0/gems/selenium-webdriver-3.142.3/lib/selenium/webdriver/edge/bridge.rb:70:in 'maximize_window' C:/Ruby25-x64/lib/ruby/gems/2.5.0/gems/selenium-webdriver-3.142.3/lib/selenium/webdriver/common/window.rb:143:in 'maximize' C:/Users/ELLURV/Documents/NetBeansProjects/FutureTestFrameworks/lib/no_code_ui_automation/script.rb:17:in '' ``","closed","C-rb,","evnraja32","2019-08-19T07:14:22Z","2020-02-28T07:12:30Z"
"","7450","set_page_load_timeout fails for value of more than about 10minutes (600sec)","## Environment  OS: windows7 Browser: chrome Browser version: 75.0.3770.142 Browser Driver version: ChromeDriver 75.0.3770.140 Language Bindings version: python 3.7 Selenium Grid version (if applicable): 3.141.0  Chromedriver set_page_load_timeout works for timeout value less than about 10min, but the script will timeout after about 10 minutes even if the timeout value is set to -1 or 1800, for example.  The issue occurs while trying to perform automatic download on a webpage which, after a button on the webpage is clicked, calls a javascript function and loads for about an hour before a download file is prompted and auto-downloaded (using chrome).  Here's the code I used.  driver.set_page_load_timeout(72000) driver.set_script_timeout(72000) run = driver.find_element_by_id('iisform:_idJsp131') driver.execute_script(""arguments[0].click()"", run)  I expected the driver to timeout after 72000 seconds yet only after 10 minutes the driver times out.  Here's the error message.  File ""C:/Users/liheng_zhao/Desktop/T3 File Downloader/T3_File_Downloader.py"", line 413, in dl_iwf_events     driver.execute_script(""arguments[0].click()"", run)   File ""C:\ProgramData\Anaconda3\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 636, in execute_script     'args': converted_args})['value']   File ""C:\ProgramData\Anaconda3\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 321, in execute     self.error_handler.check_response(response)   File ""C:\ProgramData\Anaconda3\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.TimeoutException: Message: timeout   (Session info: chrome=75.0.3770.142)  Unfortunatly since the website is a local corporate database, I currently have no idea on how to reproduce the error. Will surely update if found a way to achieve that.","closed","C-py,","DanielGuir","2019-07-30T08:20:05Z","2019-08-31T16:09:35Z"
"","6945","selenium.common.exceptions.SessionNotCreatedException: Message: Unable to find a matching set of capabilities","## Environment  OS: Ubunut 18.04 Browser: Firefox Developer 66.0b8 (64-bit) Browser version:  Firefox Developer 66.0b8 (64-bit) Browser Driver version: geckodriver-v0.24.0-linux64 Language Bindings version: Python 3.6.7 Selenium Grid version (if applicable): not sure what you mean. But I installed it using: python3 -m pip install -U selenium  The Firefox Developer edition is installed in this path: /home/e/Documents/ff_extension/firefox (where firefox.exe is inside the directory firefox).  I am sorry for the duplicate post but tried several solution none have worked. I am trying to run Selenium using python 3. I want it to work with Firefox Developer 66.0b8 (64-bit). When I run this simple example which I found in a previous post for similar problem: ``` capabilities = webdriver.DesiredCapabilities().FIREFOX capabilities[""marionette""] = False binary = FirefoxBinary('/home/e/Documents/ff_extension/firefox')  fp = webdriver.FirefoxProfile() driver = webdriver.Firefox(firefox_binary=binary,  firefox_profile=fp,capabilities=capabilities) ```  I get the error: `selenium.common.exceptions.SessionNotCreatedException: Message: Unable to find a matching set of capabilities `  Can you please suggest any solution to me? I have a stable Firefox (non Developer) installed, but I want to use the Developer edition for testing purposes.","closed","","ealashwali","2019-02-18T20:56:50Z","2019-08-14T21:09:54Z"
"","7228","[rb] Remove unnecessary code in the test","## Changes  Removed code that is not relevant to test validation. Since it is verified by `expect ()`, I think that the subsequent (I deleted) code is unnecessary. Applicable code is included in [this commit](https://github.com/SeleniumHQ/selenium/commit/bc301ee873553704e728365a7a77f573765ea0d6#diff-f8ddf8051137d162a2c487726df96115).  Test passes have been verified with Travis CI results.       - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","RustyNail","2019-05-23T23:39:19Z","2019-05-24T04:17:32Z"
"","7206","Selenium click on button functionality does not work consistently on Safari (Safari 12.1) browser on MAC (Macos Sierra 10.12.6)","## :bug: Bug Report Locator: //button[@name='Close']  self.objDriverWait.until(exp_cond.element_to_be_clickable(locator_value) obj_element =self.objDriverWait.until(exp_cond.presence_of_all_elements_located(locator_value)) obj_element[0].click()  Button is present / visible / clickable still it through an exception ({ElementNotInteractableException}Message :)   Same element is working fine on **Chrome and Firefox**  I have tried with **""execute_script""**, it doesn't through an exception but element was not clicked  if self.is_clickable(locator_value, locator_name):     obj_element = self.objDriver.find_elements(*locator_value)     self.objDriver.execute_script(""arguments[0].click();"", obj_element[0])  ## Expected behavior  It should perform click operation  ## Environment  OS: MAC (Macos Sierra 10.12.6) Browser:  Safari Browser version: 12.1 Selenium Grid version (if applicable): 3.141.59.jar Python: 3.6 Selenium: 3.141.0","closed","R-awaiting answer,","sajid90","2019-05-15T09:57:02Z","2019-08-14T20:09:37Z"
"","7078","30s Idle time between 2 handlers","##  30s Idle time between 2 handlers  Hi , I integrated selenium with our app. However, there always 30s idle time between 'begin session service' and 'ServicedSession' This is the screenshot for it: 10:40:59.696 ---> 10:41:35.282  I also observed it in our recorder video (that is another process after test running) What is remote driver doing during this 30s?  Context: I am working on improving test automation performance now. ![Screen Shot 2019-04-01 at 9 40 32 AM](https://user-images.githubusercontent.com/24535640/55344669-ce871c00-5462-11e9-8ee1-830aa6f16bb0.png)  Thank you.","closed","","mengyingdu","2019-04-01T16:45:05Z","2019-08-14T16:10:04Z"
"","7186","Selenium for Python ~ Random StaleElementReferenceException in select.select_by_visible_text","# Description  I am getting random `StaleElementReferenceExceptions` when calling `select.select_by_visible_text`. This happens even though I am only finding the element right before calling `select.select_by_visible_text`.  # Code Sample  ``` select = Select(element = driver.find_element_by_xpath(searchString)) select.select_by_visible_text(str(entry)) ```  # Env  * Selenium for Python * Chrome Driver 74  # Workaround  I used the following Try-Catch Ribbon, and this successfully handles the bug on the first or second iteration 80%, and has never reached the maxIterations yet.  ``` while True:     maxIterations = 10     try:         select = Select(element = driver.find_element_by_xpath(searchString))         select.select_by_visible_text(str(entry))         break     except StaleElementReferenceException:         maxIterations -= 1         if maxIterations == 0:             throw ```","closed","R-awaiting answer,","KiraResari","2019-05-08T11:47:33Z","2019-08-14T07:09:58Z"
"","7437","Unable to launch Edge browser","![selenium edgebrowser](https://user-images.githubusercontent.com/51488902/62005643-e42bfa00-b153-11e9-96ef-5717a44e01f1.jpg) ## 💬 Questions and Help Dear Team,  I have tried a lot to launch edge browser during our script execution with selenium C# but it is giving exception error and unable to launch edge browser with any url because I didn’t get ‘MicrosoftWebDriver.exe’ release file according to my OS build number(17763.404).When I user latest ‘MicrosoftWebDriver.exe’ release(17134), it is throwing exception error while executing edge driver instance line. Kindly go through below my os detail  and help me to assist/guide me whether we have any alternative solution for launching edit browser with url .  OS detail :-          Code :-                  EdgeOptions options = new EdgeOptions();             this.Driver = new EdgeDriver(""C:\Drivers\MicrosoftWebDriver.exe"" , options);                 this.Driver.Manage().Window.Maximize();               //   options.PageLoadStrategy = EdgePageLoadStrategy.Eager;                 //this.Driver = new EdgeDriver();                 //  this.Driver = new EdgeDriver(ConfigurationManager.AppSettings[""EdgeDriverPath""]); Error :-","closed","","amitstudent2006","2019-07-28T10:49:47Z","2019-08-27T12:09:34Z"
"","7146","Selenium tests fail to run due to TestNG errors","![Java_class](https://user-images.githubusercontent.com/30794708/56846695-cfcd2c80-68da-11e9-94df-30504ecb820e.PNG) ![TestNG_error](https://user-images.githubusercontent.com/30794708/56846696-cfcd2c80-68da-11e9-9a98-935992c39ec2.PNG)  ## 🐛 Bug Report  A clear and concise description of what the bug is After Selenium upgrade to version 3.141.59, the tests fail to run with TestNG 16.4.3 on Jenkins v2.138.3 errors like: TestNGClassFinder: Warning: Can't link and determine methods of class.... TestNGClassFinder: Unable to read methods on class ... -unable to resolve class reference org/apache/http/HttpRequest Eclipse : when trying to run the tests from Eclipse 2019-03 , I get a message that either TestNG cannot find class in classpath or that No tests were found and nothing was run  ## To Reproduce  Detailed steps to reproduce the behavior:  ## Expected behavior  After Selenium upgrade to version 3.141.59, the tests are successfully run from Jenkins v2.138.3 as they used to run with lower Selenium version  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS: Windows 7 Browser: Internet Explorer, Chrome Browser version: Internet Explorer 11.0.9600.19002, Chrome 74.0.3729.108 Browser Driver version: IEWebDriver 3.14 for 32 bit Windows IE, ChromeDriver 74.0.3729.6 Language Bindings version: Java 11.0.2  Selenium Grid version (if applicable): 3.141.59","closed","","hnestorova","2019-04-27T07:04:10Z","2019-08-14T12:09:56Z"
"","7337","Error in class invisibility_of_element","![image](https://user-images.githubusercontent.com/3139609/60330807-d6a11a00-99c5-11e9-80a9-c875878204c2.png) this __init function should be  `__init__()`?","closed","C-py,","mazl","2019-06-28T08:58:41Z","2019-09-09T15:09:35Z"
"","7641","ChromeDriver version 77 throws null reference exception on accessing Displayed and LocationOnScreenOnceScrolledIntoView properties","![CHromeDriverBug](https://user-images.githubusercontent.com/55020518/66121729-294e2b80-e5de-11e9-8d94-dbb7b28c214e.png)  See attached screenshot! The same code, same element with exactly the same locator works perfectly fine with earlier versions, but now it throws null reference exception.   I've tried to use different locators, webdriver finds them, but throws these exceptions nevertheless all the time.    ## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","Szesan","2019-10-03T11:05:55Z","2019-11-04T21:07:48Z"
"","7118","driver.findElements(by) method couldn't locate element which present in DOM","![1](https://user-images.githubusercontent.com/30462178/56371890-a4757e00-6206-11e9-93cf-500c10dd9f0c.png) ## 🐛 Bug Report  driver.findElements(by); method couldn't locate element which present in DOM    ## To Reproduce    Detailed steps to reproduce the behavior:  ## Expected behavior  A clear and concise description of what you expected to happen.  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS:  OSX Browser: Chrome Browser version: Version 73.0.3683.103 Browser Driver version:  ChromeDriver  2.46 Language Bindings version:  jdk1.8.0_161 Selenium Grid version (if applicable):","closed","","slymanAktas","2019-04-18T15:25:14Z","2019-08-14T13:09:55Z"
"","7772","Migrate ruby build to bazel","","closed","C-build,","shs96c","2019-11-11T21:36:57Z","2021-09-05T08:25:10Z"
"","7704","WIP: Adding sonar sources for java,rb,py","","closed","C-build,","ddavison","2019-10-22T19:10:22Z","2020-06-17T11:46:56Z"
"","7389","java v3.141.59:TemporaryFilesystem.setTemporaryDirectory() invalid","","closed","","LiqiNew","2019-07-15T12:10:16Z","2019-08-14T13:09:34Z"
"","7304","Value must be a string/element is not attached to the page document","","closed","","intjuma","2019-06-18T20:59:00Z","2019-08-14T08:09:44Z"
"","7232","Can I convert a tag in the string type into webelement?","","closed","","Ganofins","2019-05-24T15:45:34Z","2019-08-14T10:09:41Z"
"","7033","Need `addCustomRequestHeaders` capabilities for ChromeOptions to handle basic auth popup","","closed","","mkvidyarthi","2019-03-15T07:21:34Z","2019-08-14T19:09:48Z"