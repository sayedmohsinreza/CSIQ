"#","No","Issue Title","Issue Details","State","Labels","User name","created","Updated"
"","8822","http://localhost:/status calls","üí¨ Question:  Hi,  I'm new to Selenium but managed to get everything working under .net core 3.1. (Using Selenium.Support & Selenium.WebDriver packages = Version: 4.0.0-alpha05)  I have a web app deployed at Azure in a Linux docker container and this web app  is using the ChromeDriver (using packages chromium-chromedriver & chromium in my Alpine 3.12 docker image) to get data from certain external URLs. This is all working fine.  However, I see that my Azure logs are flooded with: `http://localhost:/status` calls which result in 'Failure'. The `` is different for every call I see in the log.  It looks like that Selenium is trying to reach its own status page which it can't since my web app is not allowing incoming ""http"" requests. Only ""https"" is allowed.   Is there a way to disable this status check at all?  Thx a lot.  **FYI:**  I don't use Selenium remotely.  **Details on how I configure the driver I use:**  ``` ChromeOptions options = new ChromeOptions();  options.AddArgument(""--headless""); options.AddArgument(""--disable-gpu""); options.AddArgument(""--disable-infobars""); options.AddArgument(""--disable-extensions""); options.AddArgument(""--disable-dev-shm-usage""); options.AddArgument(""--no-sandbox"");  options.AddArgument(""--blink-settings=imagesEnabled=false""); options.AddArgument(""--whitelisted-ips="");  options.PageLoadStrategy = PageLoadStrategy.Normal;  options.Proxy = null;  ChromeDriverService service = ChromeDriverService.CreateDefaultService(""/usr/bin""); service.SuppressInitialDiagnosticInformation = true; service.HideCommandPromptWindow = true;  IWebDriver driver = new ChromeDriver(service, options, TimeSpan.FromSeconds(120)); ```","closed","","JMan7777","2020-10-28T01:42:36Z","2021-09-05T08:33:55Z"
"","8465","Error: argument --profile requires a path","üêõ Bug Report (bugs found in a recent release)  Geckodriver Version: 0.26.0 (e9783a644016 2019-10-10 13:38 +0000) Platform: Windows 10 WSL Ubuntu Firefox: 77.0.1 (64-bit) Selenium: 3.141.0  Copying issue [#1738 from submitted mozilla/geckodriver/issues](https://github.com/mozilla/geckodriver/issues/1738), since I now believe this related to my Selenium webdriver configs...  I am getting this error from my geckodriver.log files, indicating a PATH is required for my --profile argument (which it is clearly showing in the command line statement):  ``` 1593268331229	mozrunner::runner	INFO	Running command: ""/mnt/c/Program Files/Mozilla Firefox/firefox.exe"" ""-marionette"" ""-headless"" ""-foreground"" ""-no-remote"" ""-profile"" ""/tmp/rust_mozprofileBErRMS"" 1593268331231	geckodriver::marionette	DEBUG	Waiting 60s to connect to browser on 127.0.0.1:2828 *** You are running in headless mode. Error: argument --profile requires a path ```  However, I **am definitely** supplying a valid FirefoxProfile option with a path to my FF ""selenium"" profile...  ```binary =  FirefoxBinary('/mnt/c/Program Files/Mozilla Firefox/firefox.exe') profile = FirefoxProfile('/mnt/c/Users/User/AppData/Roaming/Mozilla/Firefox/Profiles/random.selenium') options = FirefoxOptions()  print(""*** Using profile: {}"".format(profile))  def run_test():     options.headless = True     options.log.level = ""trace""     options.profile = profile     options.binary = binary          driver = webdriver.Firefox(         options=options,         capabilities=capabilities,         executable_path=""/usr/bin/geckodriver"",         service_args=[""--marionette-port"", ""2828""]) ```  Description of my options.profile attribute:  ``` {     ""default_preferences"": ""{'browser.dom.window.dump.enabled': True, 'browser (<<<---truncated at 50 chars)"",     ""extensionsDir"": ""/tmp/tmpkv88gje1/webdriver-py-profilecopy/extensions"",     ""profile_dir"": ""/tmp/tmpkv88gje1/webdriver-py-profilecopy"",     ""tempfolder"": ""/tmp/tmpkv88gje1"",     ""userPrefs"": ""/tmp/tmpkv88gje1/webdriver-py-profilecopy/user.js"" } ```  Thanks for the support - not sure what Im missing...","closed","","rbed23","2020-06-27T15:56:40Z","2021-09-05T09:36:34Z"
"","7998","Drag and drop of an element between top window and iframe is not working.","üêõ Bug Report A Drag and drop an element between top window and iframe is not working.   **To Reproduce** Unable to drag an element from top window and drop on another element present within an iframe. Mouse is holding that draggable element but not dropping on the droppable element. Below I mention OS and Browser information.  **Environment** OS: MacOS Catalina Browser: Safari  Browser version: 13.0.3 (15608.3.10.1.4) Browser Driver version: selenium-safari-driver-3.141.59.jar  Let me know if you need more details.","closed","","chowdhur","2020-02-04T15:20:17Z","2020-03-10T19:31:44Z"
"","8710","IE Driver Server Crashes When Trying to Get Cookies","üêõ Bug Report **Config** OS: Windows 10 Enterprise (64 bit) Version 1909 Build: 18363.1016  Selenium Version: 3.141.59  Browser: Internet Explorer  Browser Version: 11.1016.18362.0  iedriverVersion: 3.141.0 3.150.1  Same issue on the following SauceLabs configuration: Browser: iexplore Browser Version: 11.285.17134.0. Server OS: Windows 10 iedriverVersion: 3.141.0 3.150.1  **Expected Behavior -** IE Driver Server successfully gets the cookies for the current session and a specific cookie can be retrieved.  **Actual Behavior -** While the specific line of code to get the cookies from the current browser session appears to work, upon trying to get a specific cookie from said collection, the IE Driver Server executable crashes.   Steps to reproduce - Our tests get cookies out from browser session to perform some API calls on the background for additional verification. Tests are able to get cookies in Chrome, FF, Safari and also in Safari on IOS, Chrome on Android, but tests are failed on IE  Code: ```  public static Set getCookies() {         return Browser.getWebDriver().manage().getCookies();     } ```  Issue is reproducible running tests on SL, and locally   part of Log.json from SL:  {     ""screenshot"": null,     ""suggestion_values"": [],     ""start_time"": 1600341800.56,     ""request"": null,     ""result"": ""{here page title goes}"",     ""duration"": 0.031000137329101562,     ""path"": ""title"",     ""hide_from_ui"": false,     ""between_commands"": 0.06200003623962402,     ""visual_command"": false,     ""HTTPStatus"": 200,     ""suggestion"": null,     ""in_video_timeline"": 201.55999994277954,     ""method"": ""GET"",     ""statusCode"": 0   },   {     ""screenshot"": null,     ""suggestion_values"": [],     ""start_time"": 1600341800.638,     ""request"": null,     ""result"": ""https:{here url goes}"",     ""duration"": 0.04699993133544922,     ""path"": ""url"",     ""hide_from_ui"": false,     ""between_commands"": 0.04699993133544922,     ""visual_command"": false,     ""HTTPStatus"": 200,     ""suggestion"": null,     ""in_video_timeline"": 201.6380000114441,     ""method"": ""GET"",     ""statusCode"": 0   } {     ""screenshot"": null,     ""suggestion_values"": [],     ""start_time"": 1600341800.748,     ""request"": null,     ""result"": {       ""message"": ""java.net.ConnectException: Connection refused: connect"",       ""error"": ""unknown error"",       ""stackTrace"": [         {           ""className"": ""org.openqa.selenium.remote.server.WebDriverServlet"",           ""lineNumber"": 240,           ""methodName"": ""lambda$handle$0"",           ""fileName"": ""WebDriverServlet.java""         },         {           ""className"": ""java.util.concurrent.Executors$RunnableAdapter"",           ""lineNumber"": -1,           ""methodName"": ""call"",           ""fileName"": null         },         {           ""className"": ""java.util.concurrent.FutureTask"",           ""lineNumber"": -1,           ""methodName"": ""run"",           ""fileName"": null         },         {           ""className"": ""java.util.concurrent.ThreadPoolExecutor"",           ""lineNumber"": -1,           ""methodName"": ""runWorker"",           ""fileName"": null         },         {           ""className"": ""java.util.concurrent.ThreadPoolExecutor$Worker"",           ""lineNumber"": -1,           ""methodName"": ""run"",           ""fileName"": null         },         {           ""className"": ""java.lang.Thread"",           ""lineNumber"": -1,           ""methodName"": ""run"",           ""fileName"": null         }       ]     },     ""duration"": 34.54200005531311,     ""path"": ""cookie"",     ""hide_from_ui"": false,     ""between_commands"": 0.06299996376037598,     ""visual_command"": false,     ""HTTPStatus"": 500,     ""suggestion"": null,     ""in_video_timeline"": 201.74799990653992,     ""method"": ""GET"",     ""statusCode"": 13   }  part from server-log from SL: 11:23:20.748 DEBUG [WebDriverServlet.handle] - Found handler: 7743021c-237f-4bdf-b8c7-45a8f01f756a (org.openqa.selenium.ie.InternetExplorerDriverService) 11:23:20.748 DEBUG [WebDriverServlet.lambda$handle$0] - Handler thread for session 7743021c-237f-4bdf-b8c7-45a8f01f756a (internet explorer): Executing GET on /session/7743021c-237f-4bdf-b8c7-45a8f01f756a/cookie (handler: ServicedSession) 11:23:20.748 DEBUG [HttpURLConnection.writeRequests] - sun.net.www.MessageHeader@4619b118 pairs: {GET /session/7743021c-237f-4bdf-b8c7-45a8f01f756a/cookie HTTP/1.1: null}{Accept: application/json;charset=UTF-8}{Content-Type: application/json;charset=UTF-8}{Cache-Control: no-cache}{Pragma: no-cache}{User-Agent: Java/1.8.0_131}{Host: localhost:33590}{Connection: keep-alive} 11:23:55.352 DEBUG [WebDriverServlet.handle] - Found handler: 7743021c-237f-4bdf-b8c7-45a8f01f756a (org.openqa.selenium.ie.InternetExplorerDriverService)   there was a similar issue before: https://github.com/SeleniumHQ/selenium/issues/5054  I have tried to downgrade IE driver to version 3.11.1 but have faced the same issue.","closed","","ylupinov","2020-09-17T11:57:28Z","2021-09-05T08:34:59Z"
"","8688","selenium.click failed","ÊàëÊÉ≥Ë¶ÅÁà¨Âèñ‰∏Ä‰∏™ÁΩëÁ´ôÁöÑÊï∞ÊçÆ ‰ΩÜÊòØÁÇπÂáªÂßãÁªàÂ§±Ë¥• ÊàëÊ£ÄÊü•‰∫ÜÂÆö‰ΩçË¶ÅÁ¥†ÊòØÂØπÁöÑ ÊòØÂõ†‰∏∫selenium‰∏çËÉΩÁÇπÂáªtableË¶ÅÁ¥†Âêó  ‰ª•‰∏ã‰∏∫Âéü‰ª£Á†Å   from  selenium import webdriver from selenium.webdriver.common.keys import Keys from selenium.webdriver.common.action_chains import ActionChains from  selenium.webdriver.support.ui import Select dr = webdriver.Edge(r'E:\I love study\python\msedgedriver.exe')#ÂæóÂà∞Êìç‰ΩúÂØπË±° dr.implicitly_wait(10) dr.get('https://db.cei.cn/') dr.find_element_by_css_selector('.bg>.main_out  h1').click() dr.find_element_by_css_selector('#jtrk').click() dr.find_element_by_css_selector('.bg>.main_out  h1').click() dr.find_element_by_css_selector('#treeDB_3_span').click() # dr.find_element_by_css_selector('.mini-button-text  mini-button-icon icon-ok').click() #dr.implicitly_wait(100) dr.find_element_by_css_selector('[method=""post""] span[id=""treeDB_4_span""]').click() a = dr.find_element_by_xpath('/html/body/form/div[4]/div/div/div[4]/div[2]/div/table/tbody/tr/td[2]/div[2]/div[1]/table/tbody/tr/td[1]/div/div/div[2]/div[4]/div[2]/div/table/tbody/tr[3]/td[2]/div') print(a.get_attribute('outerHTML')) dr.execute_script(""arguments[0].click();"",a)","closed","","Ming-Q-py","2020-09-11T07:18:41Z","2021-09-05T08:36:00Z"
"","8352","‚ÄúOpen in new tab‚Äù, this works with chrome fine on Mac. But with Safari we are unable to open the links with COMMAND+CLICK (Context menu > Open in New Tab)","‚ÄúOpen in new tab‚Äù, this works with chrome fine on Mac. But with Safari we are unable to open the links with COMMAND+CLICK (Context menu > Open in New Tab)","closed","","jemishgopani","2020-05-27T19:23:05Z","2021-09-05T09:43:58Z"
"","8506","Rb server toggle","~This relies on #8504, so this PR is in draft until I get that merged/rebased~   1. Using go for a remote test will build the latest server 2. If the latest server is found, this code will use it, unless `ENV['DOWNLOAD_SERVER']` is set, then it will download and use latest 3. Syntax for starting server is different between 3.x/2.x and 4.x so I'm parsing; we need this even after 4.x is released since someone may pass in a 3.x jar 4. STP should be toggled by the new browser name, which makes the code more simple, but also current STP is broken on both 3.x and 4.x servers (#6791) 5. And I'm undoing the removal of remote as a build library since we need the server to get built in `deps`, but that doesn't work in a test; so remote is only being called from remote tests, not from any of the libs and not for building the gem.","closed","C-rb,","titusfortner","2020-07-11T20:19:25Z","2020-07-15T20:20:58Z"
"","8834","Fixed issue with Firefox browserName camelCasing","~Rudimentary fix by copying the legit behaviour. Can try use a more generic fix if we're happy to refactor the Common::Options class.~  After further diving, found out firefox worked all along, but because `{a_b_c: 123}` responds to as_json, and returns `self`, the clever camelCasing logic never got ran.  On ChromeOptions the hash check was first. So if we simply re-order the checks, everything slots into place perfectly.  Have also refactored the chrome one in-line with titus' suggestion.  cc / @p0deje","closed","C-rb,","luke-hill","2020-11-03T14:19:57Z","2020-11-09T08:22:35Z"
"","8140","xfail_marionette instructions are ignored when we run python tests using bazel","xfail_marionette instructions (and other similar ones) are ignored when we run python tests using bazel","closed","C-build,","barancev","2020-03-27T21:32:44Z","2020-05-05T21:23:51Z"
"","8411","WIP: Py cdp","WIP for adding CDP to python","closed","","AutomatedTester","2020-06-10T16:00:11Z","2020-07-16T19:48:02Z"
"","8523","Message: Can not connect to the Service geckodriver","When trying to use Selenium with the geckodriver for Firefox, this issue occurred:  Traceback (most recent call last):   File ""selenium_test.py"", line 7, in      browser=webdriver.Firefox()   File ""/home/pi/.local/lib/python3.7/site-packages/selenium/webdriver/firefox/webdriver.py"", line 164, in __init__     self.service.start()   File ""/home/pi/.local/lib/python3.7/site-packages/selenium/webdriver/common/service.py"", line 104, in start     raise WebDriverException(""Can not connect to the Service %s"" % self.path) selenium.common.exceptions.WebDriverException: Message: Can not connect to the Service geckodriver   My code is:   `#_*_coding:` utf-8_*_  from selenium import webdriver import time  # start web browser browser=webdriver.Firefox()  # get source code browser.get(""https://en.wikipedia.org"") html = browser.page_source time.sleep(2) print(html)  # close web browser browser.close()` (Code copied from tutorial so I could just test selenium)  OS: Raspbian (Debian 10) Does anybody know how to resolve this?","closed","","jethr0-1","2020-07-14T10:54:40Z","2021-09-05T09:12:26Z"
"","8501","cant run my testcase","when m running this test case on firefox browser version 78.0.1 below error r raised  FAILED CONFIGURATION: @BeforeTest OpenBrowser org.openqa.selenium.WebDriverException: java.net.ConnectException: Failed to connect to localhost/127.0.0.1:29905  Driver info: driver.version: FirefoxDriver 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:92) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:212) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:130) 	at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:125) 	at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:103) 	at excercises.ExtractNewProducts.OpenBrowser(ExtractNewProducts.java:25) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) 	at java.lang.reflect.Method.invoke(Unknown Source) 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84) 	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564) 	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213) 	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138) 	at org.testng.TestRunner.beforeRun(TestRunner.java:641) 	at org.testng.TestRunner.run(TestRunner.java:609) 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334) 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329) 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291) 	at org.testng.SuiteRunner.run(SuiteRunner.java:240) 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86) 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224) 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149) 	at org.testng.TestNG.run(TestNG.java:1057) 	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126) 	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137) 	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58) Caused by: java.net.ConnectException: Failed to connect to localhost/127.0.0.1:29905 	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:242) 	at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:160) 	at okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:257) 	at okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:135) 	at okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:114) 	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121) 	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121) 	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:126) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121) 	at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200) 	at okhttp3.RealCall.execute(RealCall.java:77) 	at org.openqa.selenium.remote.internal.OkHttpClient.execute(OkHttpClient.java:105) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:101) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:73) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	... 28 more Caused by: java.net.ConnectException: Connection refused: connect 	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method) 	at java.net.DualStackPlainSocketImpl.socketConnect(Unknown Source) 	at java.net.AbstractPlainSocketImpl.doConnect(Unknown Source) 	at java.net.AbstractPlainSocketImpl.connectToAddress(Unknown Source) 	at java.net.AbstractPlainSocketImpl.connect(Unknown Source) 	at java.net.PlainSocketImpl.connect(Unknown Source) 	at java.net.SocksSocketImpl.connect(Unknown Source) 	at java.net.Socket.connect(Unknown Source) 	at okhttp3.internal.platform.Platform.connectSocket(Platform.java:129) 	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:240)","closed","","sandip225","2020-07-10T10:54:26Z","2021-09-05T09:12:30Z"
"","8406","Download in mode headless not is working","When I need to do several downloads for example 5 pdfs (sequencial). In --headless It's working only at 1st download ,the others no happenned nothing. If test with browser opened, works very well.  Configuration with headless ``` Map prefs = new HashMap(); prefs.put(""behavior"", ""allow""); prefs.put(""cmd"", ""Page.setDownloadBehavior""); ChromeOptions options = new ChromeOptions(); options.addArguments(""--headless""); options.setExperimentalOption(""prefs"", prefs); driver = new ChromeDriver(options); ``` In --headless It's working only at 1st download:  ``` Actions actions = new Actions(driver); WebElement element = driver.findElement(By.id(""downloadPDF""));  actions.moveToElement(element).click().perform(); ```   ## Environment  OS: Windows 10 Pro Browser: Chrome Browser version: 83.0.4103.97 64 bits Browser Driver version: ChromeDriver 83 Language Bindings version: Java 1.8.0_241-b07 Selenium Grid version  **3.141.59**","closed","","molina-henrique","2020-06-09T14:45:18Z","2021-09-05T09:36:48Z"
"","8027","ChromeDriver does not fully quit when using Selenium for java of 4+ version","When I create a ChromeDriver instance and then call close() and quit() on it (or just quit()) some threads continue to be running and hanging the program.  ## Code to reproduce: ```     public static void main(String[] args) {         ChromeDriver browser = new ChromeDriver();         browser.close();         browser.quit();     } ``` The same code finishes absolutely fine with selenium < 4.0.0  Maven dependencies used: ```                      org.seleniumhq.selenium             selenium-java             4.0.0-alpha-4                               org.seleniumhq.selenium             selenium-remote-driver             4.0.0-alpha-4          ``` ## Hanging threads dump ``` ""OkHttp ConnectionPool@2578"" daemon prio=5 tid=0x16 nid=NA waiting   java.lang.Thread.State: WAITING 	  at java.lang.Object.wait(Object.java:-1) 	  at java.lang.Object.wait(Object.java:462) 	  at okhttp3.internal.Util.waitMillis(Util.kt:536) 	  at okhttp3.internal.Util.lockAndWaitNanos(Util.kt:522) 	  at okhttp3.internal.connection.RealConnectionPool$cleanupRunnable$1.run(RealConnectionPool.kt:49) 	  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) 	  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) 	  at java.lang.Thread.run(Thread.java:834) ``` ``` ""OkHttp Dispatcher@2848"" prio=5 tid=0x19 nid=NA waiting   java.lang.Thread.State: WAITING 	  at jdk.internal.misc.Unsafe.park(Unsafe.java:-1) 	  at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234) 	  at java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:462) 	  at java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:361) 	  at java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:937) 	  at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1053) 	  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114) 	  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) 	  at java.lang.Thread.run(Thread.java:834) ``` ``` ""UrlChecker-2@1969"" daemon prio=5 tid=0x12 nid=NA waiting   java.lang.Thread.State: WAITING 	  at jdk.internal.misc.Unsafe.park(Unsafe.java:-1) 	  at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234) 	  at java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:462) 	  at java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:361) 	  at java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:937) 	  at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1053) 	  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114) 	  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) 	  at java.lang.Thread.run(Thread.java:834) ``` ## Environment  OS: Linux Mint 19.2 Cinnamon Java version: 11.03 Selenium version: 4.0.0-alpha-4","closed","","insticore","2020-02-14T05:57:05Z","2020-03-17T14:06:43Z"
"","8608","Not ABLE TO NAVIGATE TO PDF URLs","When I am trying to navigate to any PDF URLs then chrome headless is not working. I am able to navigate in firefoxHeadless mode.","closed","","miaskadu","2020-08-05T08:34:47Z","2021-09-05T09:02:44Z"
"","8429","Bug Report A input element where type = 'checkbox' is not clickable using Selenium and Java","When an input tag type attribute is Checkbox, then unable to click the element. Getting Element not intractable Exception.  HTML:   Code: WebElement check = driver.findElement(By.xPath(""//input[@type='checkbox']"")); check.click();  Exception: org.openqa.selenium.ElementNotInteractableException : element not interactable","closed","","DUMAD8585","2020-06-16T11:10:45Z","2021-09-05T09:36:45Z"
"","7861","Clear() adding extra characters","We‚Äôve discovered an unusual problem with the ChromeDriver since version 78. We use CKEditor (https://ckeditor.com/) as the main text editor on our site.  In a nutshell the steps are:  Get a text area `IWebElement`  Call `.Clear()` on it  Call `.SendText(‚ÄúLINK HERE‚Äù)`  Regularly, we‚Äôre finding that `Clear()` is adding seven `‚Äã` and the `SendText(‚Äú‚Ä¶‚Äù)` adds the contents after it.     ![image](https://user-images.githubusercontent.com/21170243/70718012-59edc800-1ce7-11ea-97b0-750708142386.png)   Often this isn‚Äôt a problem because these extra characters aren‚Äôt visible on screen to end users, and when Selenium reads the text back out, these characters are also stripped out. On the other hand, CK Editor doesn‚Äôt necessarily strip them out. When we perform some custom operations on this text, CK Editor will grab the text (‚ÄúLINK HERE‚Äù, characters stripped out) and the current length (26, characters included).  Once it‚Äôs performed it‚Äôs operation, it tries to put the new text back in the place of the old text, but crashes due to a ""length mismatch when restoring a text selection"" because the text it's returning doesn't contain all the extra characters that are currently in the text area.  So far as we can tell, the problem originates in the `Clear()` method adding those seven extra characters.  I can confirm that this is an issue in v78 and the current v79 beta.  Is there something that can be done with this?  Thanks,  Mike","closed","D-chrome,","mkj0","2019-12-12T13:59:28Z","2020-04-15T07:38:56Z"
"","8512","rb specific rakefile","Well, atoms built from trunk have diverged (not sure how substantially) from what is cached, so we should probably delete them or update them.  I thought deleting them and then making a way to auto-update them as needed was a good way to go.  (I tried to implement something for both Windows & Mac, but I couldn't get it to work on Windows)","closed","C-rb,","titusfortner","2020-07-13T06:12:21Z","2020-07-14T17:17:24Z"
"","8126","Proxy CDP traffic through the Grid","We should be able to proxy CDP traffic through the Grid, exposing the ultimate end point that users should connect to at each stage.  ## Motivation  We want people to not be tied to their local machine when testing.","closed","I-enhancement,","shs96c","2020-03-21T10:24:30Z","2021-09-05T09:44:04Z"
"","7877","[Python] action_chains.py does not play nicely with EventFiringWebDriver","Various actions of the Actions capabilities (action_chains.py) do not play nicely with an EventFiringWebDriver implementation, for example:  ```     def move_to_element_with_offset(self, to_element, xoffset, yoffset):         """"""         Move the mouse by an offset of the specified element.            Offsets are relative to the top-left corner of the element.          :Args:          - to_element: The WebElement to move to.          - xoffset: X offset to move to.          - yoffset: Y offset to move to.         """"""         if self._driver.w3c:             self.w3c_actions.pointer_action.move_to(to_element, xoffset, yoffset)             self.w3c_actions.key_action.pause()         else:             self._actions.append(                 lambda: self._driver.execute(Command.MOVE_TO, {                     'element': to_element.id,                     'xoffset': int(xoffset),                     'yoffset': int(yoffset)}))         return self ```  When using an EF wrapped driver, it will attempt such actions by default with a type of:  ```  (Pdb) type(ele)  ```  I propose we do an isinstance check for EventFiringWebElement here?  If this is deemed a valid bug and you think its a worthy fix or use case (or perhaps it is intentional by design) then please assign it to me and I will open a PR this weekend to address it.  as currently it will do the following:  ``` AttributeError: move_to requires a WebElement ```  My proposed solution is to check if it is an instance of EventFiringWebElement and use .wrapped_element if so, thoughts?  I would like to contribute, so if its suitable - I will take this one.","closed","C-py,","symonk","2019-12-20T10:29:18Z","2021-09-05T09:43:57Z"
"","8244","Fix the meaning of utf8 when generating atom files","utf8 format should mean char instead of wchar_t.    ### Description Update the Bazel script so that when utf8 is True, use char and string; when it's False (default), use wchar_t and wstring.  ### Motivation and Context Currently, setting utf8 to True generates atom files with wchar_t and wstring. This is the opposite of what one would expect.  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","JohnChen0","2020-04-26T04:01:50Z","2020-04-27T15:17:35Z"
"","8872","com.google.common.collect.ImmutableList.toImmutableList()Ljava/util/stream/Collector; at org.openqa.selenium.chrome.ChromeOptions.asMap(ChromeOptions.java:292)","Using clj-webdriver with seleniumhq libs and still getting this issue.  Exception in thread ""main"" java.lang.NoSuchMethodError: com.google.common.collect.ImmutableList.toImmutableList()Ljava/util/stream/Collector; 	at org.openqa.selenium.chrome.ChromeOptions.asMap(ChromeOptions.java:292) 	at org.openqa.selenium.MutableCapabilities.merge(MutableCapabilities.java:73) 	at org.openqa.selenium.remote.DesiredCapabilities.merge(DesiredCapabilities.java:107) 	at org.openqa.selenium.remote.DesiredCapabilities.merge(DesiredCapabilities.java:33) 	at org.openqa.selenium.MutableCapabilities.setCapability(MutableCapabilities.java:96)        ...  It says it cannot find method from com.google.guava but I can see that guava-25.0-jre.jar is fetched in project dependencies but it is somehow ignored. Also weird thing is that from stacktrace ChromeOptions.asMap() is refering to line 292 in ChromeOptions.java but when I check that class there's no such line so it looks like it is refering to different version of selenium-chrome-driver but again in deps there's 3.141.59 version. Checked all the dependencies and cannot seem to find place where old guava or old selenium-chrome-driver should live.  Dependencies looks like:    :dependencies [                  [org.seleniumhq.selenium/selenium-java ""3.141.59""]                  [org.clojure/clojure ""1.10.1""]                  [clj-webdriver ""0.7.2"" :exclusions [                                                      [org.seleniumhq.selenium/selenium-server]                                                      [org.seleniumhq.selenium/selenium-java]                                                      [org.seleniumhq.selenium/selenium-remote-driver]                                                      [com.codeborne/phantomjsdriver]]]                  [org.seleniumhq.selenium/htmlunit-driver ""2.44.0""]                  [com.google.guava/guava ""25.0-jre""]                  [clj-http ""3.10.3""]                  [cheshire ""5.10.0""]                  [clj-time ""0.15.2""]]  I spent on this like whole day and running out of ideas.  Any ideas why this error appears?","closed","","DarkPetan","2020-11-13T23:15:26Z","2021-09-05T08:31:27Z"
"","8498","Message: 'geckodriver' executable may have wrong permissions.","Traceback (most recent call last):   File ""./brut3k1t"", line 87, in      main()   File ""./brut3k1t"", line 76, in main     w.execute()   File ""/home/sbarasa77/brut3k1t/core/web.py"", line 39, in execute     if self.usercheck(self.username, self.service) == 1:   File ""/home/sbarasa77/brut3k1t/core/web.py"", line 48, in usercheck     driver = webdriver.Firefox()   File ""/usr/local/lib/python2.7/dist-packages/selenium-4.0.0a6.post2-py2.7.egg/selenium/webdriver/firefox/webdriver.py"", line 181, in __init__     self.service.start()   File ""/usr/local/lib/python2.7/dist-packages/selenium-4.0.0a6.post2-py2.7.egg/selenium/webdriver/common/service.py"", line 88, in start     os.path.basename(self.path), self.start_error_message) selenium.common.exceptions.WebDriverException: Message: 'geckodriver' executable may have wrong permissions.","closed","","sbarasa777","2020-07-10T10:15:37Z","2021-09-05T09:12:31Z"
"","8343","This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.","This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.  _Originally posted by @lock in https://github.com/SeleniumHQ/selenium/issues/5073#issuecomment-631677348_","closed","","cy33hc","2020-05-25T21:47:19Z","2020-06-24T23:01:30Z"
"","8020","Support GraphQL for querying the Grid","This should make it easier for us to build a nice front end by not having to guess the shape of all the data we're going to try and collect.","closed","selenium-4,","shs96c","2020-02-11T15:20:02Z","2021-09-05T08:34:05Z"
"","8511","[rb] update guards to minimize unnecessary execution and allow messages","This should actually be more accurate and less contentious than #8497 to solve #7400 and executes the idea I had in #5074 that I dropped.  4 different guards: 1. `:only` - there's a bug in all configurations not specified, and we'll verify them 2. `:except` - there's a bug in all configurations specified, and we'll verify them 3. `:exclude` - there's a bug in all configurations specified, and we can't verify them 4. `:exclusive` - this test only applies to this configuration so there's no reason to even run the others  I've also added the ability to add `:message` because I really think we should be tracking why things are guarded. Guarding doesn't matter if it lets us ignore the results. If no message is specified the results say so.  Note that each item in the array can have its own message, so we might need to change something like this:  ```ruby it 'does something', except: {browser: %i[chrome ie]}} do end ```  to something like this:  ```ruby it 'does something', except: {[{browser: :chrome, message: 'bug 1'}, {browser: :ie, message: 'bug 2'}]} do end  ```  Also! Specs!","closed","C-rb,","titusfortner","2020-07-13T02:32:18Z","2020-07-15T04:57:16Z"
"","8364","Chrome driver not able to parse certain characters","This returns a WebDriverException: Message: unknown error: bad inspector  from selenium import webdriver from selenium.webdriver.chrome.options import Options from selenium.webdriver.common.keys import Keys from selenium.webdriver.support import expected_conditions as EC from selenium.webdriver.common.by import By from selenium.webdriver.support.ui import WebDriverWait as wait from selenium.webdriver.common.action_chains import ActionChains import re import json  unique_usernames = ['riooshima']  opts = Options() opts.add_argument(""user-agent=Googlebot"") opts.add_argument(""--headless"")  driver = webdriver.Chrome(options=opts) for username in unique_usernames:     print(username)     driver.get('https://www.tiktok.com/@'+username+'?lang=en')  Using Firefox with geckodriver works fine:  from selenium import webdriver from selenium.webdriver.firefox.options import Options as FirefoxOptions from selenium.webdriver.common.keys import Keys from selenium.webdriver.support import expected_conditions as EC from selenium.webdriver.common.by import By from selenium.webdriver.support.ui import WebDriverWait as wait from selenium.webdriver.common.action_chains import ActionChains import re import json  unique_usernames = ['riooshima']  opts = FirefoxOptions() opts.add_argument(""executable_path=/usr/local/bin/geckodriver"") opts.add_argument(""user-agent=Googlebot"") opts.add_argument(""--headless"")  driver = webdriver.Firefox(options=opts) for username in unique_usernames:     print(username)     driver.get('https://www.tiktok.com/@'+username+'?lang=en')  _Originally posted by @diemol in https://github.com/SeleniumHQ/selenium/issues/7359#issuecomment-508937370_","closed","","Daryl149","2020-05-29T14:34:14Z","2021-09-05T09:43:55Z"
"","8547","create_no_window option for chrome webdriver process","This new option will be helpful when we use selenium with a GUI application. Using the usual code; ``` driver = webdriver.Chrome() ``` a new terminal/command-prompt window opens up. And in case of console application, it shared the same stdout.  With this added feature, we are able to run chromedriver process in the background; ``` driver = webdriver.Chrome(create_no_window=True) # Opens chromedriver in background ```  What this actually does, is that it sets the **creationflags** of the subprocess as **CREATE_NO_WINDOW**.","closed","C-py,","ali-sajjad-rizavi","2020-07-18T18:19:04Z","2020-07-30T12:11:09Z"
"","8016","EC.frame_to_be_available_and_switch_to_it is not working with Chromedriver v80.","This morning, I use Chrome79 and ChromeDriver78 and everything works just fine. Then I upgrade Chrome to version 80, then i had to upgrade ChromeDriver to v80 as well. Then my scripts stopped working.....  I use selenium to automate a job. The webpage has 3 iframes, i need to switch to the second one. code below works on ChromeDriver78/79, but not on version 80. ```         WebDriverWait(self.driver, 160, 0.5).until(EC.frame_to_be_available_and_switch_to_it(             (By.CSS_SELECTOR,""iframe[name^=canvas]"")),             ""TimeOutError: 160s, frame_to_be_available_and_switch_to_it(canvas iframe)""         ) ```  I then tried to switch to iframe directly, failed as well, this is expected because iframe may need time to be ready to switch to. `self.driver.switch_to.frame(self.driver.find_elements_by_tag_name(""iframe"")[1])`  ``` Traceback (most recent call last):   File ""C:/Users/huangjie/PycharmProjects/ETautomation/module/web_check.py"", line 515, in      c.login()   File ""C:/Users/huangjie/PycharmProjects/ETautomation/module/web_check.py"", line 106, in login     self.driver.switch_to.frame(self.driver.find_elements_by_tag_name(""iframe"")[1])   File ""C:\Python\Python35\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 546, in find_elements_by_tag_name     return self.find_elements(by=By.TAG_NAME, value=name)   File ""C:\Python\Python35\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 1007, in find_elements     'value': value})['value'] or []   File ""C:\Python\Python35\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 321, in execute     self.error_handler.check_response(response)   File ""C:\Python\Python35\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.NoSuchWindowException: Message: no such window   (Session info: chrome=80.0.3987.87) ``` I then choose to sleep 60s before switch to the iframe directly. It works then!!!!! ***Here comes the question:*** In the EC(expected condition, the original pieces of code), I gave it 160 second!!! I tried many times, all failed. What's more, there also times this switch to doesnot throw any error, but the next step, another operationÔºàusing expected conditions to make sure one element is displayed, it has 600secondsÔºâ on that iframe shows error ""No Such Window"". ***Obviously,  it throw error immediately instead of waiting and continue trying for 160s or 600s.*** ``` Traceback (most recent call last):   File ""C:\Users\niulx2\Documents\ETautomation\bin\bin.py"", line 71, in      c.login()   File ""C:\Users\niulx2\Documents\ETautomation\module\web_check.py"", line 106, in login     WebDriverWait(self.driver, 600,0.5).until(   File ""C:\Users\niulx2\AppData\Local\Programs\Python\Python38\lib\site-packages\selenium\webdriver\support\wait.py"", line 71, in until     value = method(self._driver)   File ""C:\Users\niulx2\AppData\Local\Programs\Python\Python38\lib\site-packages\selenium\webdriver\support\expected_conditions.py"", line 297, in __call__     element = visibility_of_element_located(self.locator)(driver)   File ""C:\Users\niulx2\AppData\Local\Programs\Python\Python38\lib\site-packages\selenium\webdriver\support\expected_conditions.py"", line 128, in __call__     return _element_if_visible(_find_element(driver, self.locator))   File ""C:\Users\niulx2\AppData\Local\Programs\Python\Python38\lib\site-packages\selenium\webdriver\support\expected_conditions.py"", line 415, in _find_element     raise e   File ""C:\Users\niulx2\AppData\Local\Programs\Python\Python38\lib\site-packages\selenium\webdriver\support\expected_conditions.py"", line 411, in _find_element     return driver.find_element(*by)   File ""C:\Users\niulx2\AppData\Local\Programs\Python\Python38\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 976, in find_element     return self.execute(Command.FIND_ELEMENT, {   File ""C:\Users\niulx2\AppData\Local\Programs\Python\Python38\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 321, in execute     self.error_handler.check_response(response)   File ""C:\Users\niulx2\AppData\Local\Programs\Python\Python38\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.NoSuchWindowException: Message: no such window   (Session info: chrome=80.0.3987.87)  ``` code: ```         WebDriverWait(self.driver, 600,0.5).until(             EC.element_to_be_clickable((                 By.CSS_SELECTOR,                 ""#overviewItemsRepeater > div.repeater-footer.repeater-viewport-subtrahend > div.repeater-footer-left > div > div > button""             )),             ""TimeOutError: 600s, element_to_be_clickable(pager button)""         ) ```  I suspect this is related to ChromeDriver release, please advise this fix should be on ChromeDriver or Selenium. ### ChromeDriver 80 release https://chromedriver.chromium.org/downloads :  ChromeDriver 80.0.3987.16 Supports Chrome version 80 Fixed Load page was aborted when using a proxy. ***Chromedriver now waits for Current frame to load.*** ChromeDriver log will include the port used by the driver. Enabled SetGeoLocation for w3c mode. Added missing Alert text for UnexpectedAlertOpen status. Improved message when CRX2 Extension is loaded. Fixed a potential race condition in ExecuteGetPageSource. ChromeDriver will add --ignore-certificate-errors flag when acceptInsecureCerts capability is true Updated the error message and return status for no such execution context Fixed: ChromeDriver may block indefinitely while waiting for pending navigation. Added SameSite attribute to AddCookie and GetCookie. For more details, please see the release notes.  Steps to reproduce : switch to any iframe on a webpage.    -----Other helpful tips: Attach your chromedriver log with verbose logging enabled: Done. See ChromeDriver log: [qc1.log](https://github.com/SeleniumHQ/selenium/files/4179928/qc1.log)","closed","","h888866j","2020-02-10T09:41:55Z","2020-03-11T11:08:27Z"
"","8015","EC.frame_to_be_available_and_switch_to_it not working after Chrome upgraded to version 80.","This morning, I use Chrome79 and ChromeDriver78 and everything works just fine. Then I upgrade Chrome to version 80, then i had to upgrade ChromeDriver to v80 as well. Then my scripts stopped working.....  I use selenium to automate a job. The webpage has 3 iframes, i need to switch to the second one. code below works on ChromeDriver78/79, but not on version 80. ```         WebDriverWait(self.driver, 160, 0.5).until(EC.frame_to_be_available_and_switch_to_it(             (By.CSS_SELECTOR,""iframe[name^=canvas]"")),             ""TimeOutError: 160s, frame_to_be_available_and_switch_to_it(canvas iframe)""         ) ```  I then tried to switch to iframe directly, failed as well, this is expected because iframe may need time to be ready to switch to. `self.driver.switch_to.frame(self.driver.find_elements_by_tag_name(""iframe"")[1])`  ``` Traceback (most recent call last):   File ""C:/Users/huangjie/PycharmProjects/ETautomation/module/web_check.py"", line 515, in      c.login()   File ""C:/Users/huangjie/PycharmProjects/ETautomation/module/web_check.py"", line 106, in login     self.driver.switch_to.frame(self.driver.find_elements_by_tag_name(""iframe"")[1])   File ""C:\Python\Python35\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 546, in find_elements_by_tag_name     return self.find_elements(by=By.TAG_NAME, value=name)   File ""C:\Python\Python35\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 1007, in find_elements     'value': value})['value'] or []   File ""C:\Python\Python35\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 321, in execute     self.error_handler.check_response(response)   File ""C:\Python\Python35\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.NoSuchWindowException: Message: no such window   (Session info: chrome=80.0.3987.87) ``` I then choose to sleep 60s before switch to the iframe directly. It works then!!!!! ***Here comes the question:*** In the EC(expected condition, the original pieces of code), I gave it 160 second!!! I tried many times, all failed. What's more, there also times this switch to doesnot throw any error, but the next step, another operationÔºàusing expected conditions to make sure one element is displayed, it has 600secondsÔºâ on that iframe shows error ""No Such Window"". ***Obviously,  it throw error immediately instead of waiting and continue trying for 160s or 600s.*** ``` Traceback (most recent call last):   File ""C:\Users\niulx2\Documents\ETautomation\bin\bin.py"", line 71, in      c.login()   File ""C:\Users\niulx2\Documents\ETautomation\module\web_check.py"", line 106, in login     WebDriverWait(self.driver, 600,0.5).until(   File ""C:\Users\niulx2\AppData\Local\Programs\Python\Python38\lib\site-packages\selenium\webdriver\support\wait.py"", line 71, in until     value = method(self._driver)   File ""C:\Users\niulx2\AppData\Local\Programs\Python\Python38\lib\site-packages\selenium\webdriver\support\expected_conditions.py"", line 297, in __call__     element = visibility_of_element_located(self.locator)(driver)   File ""C:\Users\niulx2\AppData\Local\Programs\Python\Python38\lib\site-packages\selenium\webdriver\support\expected_conditions.py"", line 128, in __call__     return _element_if_visible(_find_element(driver, self.locator))   File ""C:\Users\niulx2\AppData\Local\Programs\Python\Python38\lib\site-packages\selenium\webdriver\support\expected_conditions.py"", line 415, in _find_element     raise e   File ""C:\Users\niulx2\AppData\Local\Programs\Python\Python38\lib\site-packages\selenium\webdriver\support\expected_conditions.py"", line 411, in _find_element     return driver.find_element(*by)   File ""C:\Users\niulx2\AppData\Local\Programs\Python\Python38\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 976, in find_element     return self.execute(Command.FIND_ELEMENT, {   File ""C:\Users\niulx2\AppData\Local\Programs\Python\Python38\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 321, in execute     self.error_handler.check_response(response)   File ""C:\Users\niulx2\AppData\Local\Programs\Python\Python38\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.NoSuchWindowException: Message: no such window   (Session info: chrome=80.0.3987.87)  ``` code: ```         WebDriverWait(self.driver, 600,0.5).until(             EC.element_to_be_clickable((                 By.CSS_SELECTOR,                 ""#overviewItemsRepeater > div.repeater-footer.repeater-viewport-subtrahend > div.repeater-footer-left > div > div > button""             )),             ""TimeOutError: 600s, element_to_be_clickable(pager button)""         ) ```  I suspect this is related to ChromeDriver release, please advise this fix should be on ChromeDriver or Selenium. ### ChromeDriver 80 release https://chromedriver.chromium.org/downloads :  ChromeDriver 80.0.3987.16 Supports Chrome version 80 Fixed Load page was aborted when using a proxy. ***Chromedriver now waits for Current frame to load.*** ChromeDriver log will include the port used by the driver. Enabled SetGeoLocation for w3c mode. Added missing Alert text for UnexpectedAlertOpen status. Improved message when CRX2 Extension is loaded. Fixed a potential race condition in ExecuteGetPageSource. ChromeDriver will add --ignore-certificate-errors flag when acceptInsecureCerts capability is true Updated the error message and return status for no such execution context Fixed: ChromeDriver may block indefinitely while waiting for pending navigation. Added SameSite attribute to AddCookie and GetCookie. For more details, please see the release notes.  Steps to reproduce : switch to any iframe on a webpage.    -----Other helpful tips: Attach your chromedriver log with verbose logging enabled: Done. See ChromeDriver log: [qc1.log](https://github.com/SeleniumHQ/selenium/files/4179928/qc1.log)","closed","","h888866j","2020-02-10T09:36:50Z","2020-03-11T11:08:30Z"
"","8188","Bug Report:  flatpak firefox - unable to find a matching set of capabilities","This may be a bug related to previous bugs from a couple years ago not looking in enough places to find firefox.  Either way, I recently updated my manjaro system to use the new flatpak version of firefox.  When running: browser = webdriver.Firefox()  I get: File """", line 1, in      browser = webdriver.Firefox()   File ""/usr/lib/python3.8/site-packages/selenium/webdriver/firefox/webdriver.py"", line 170, in __init__     RemoteWebDriver.__init__(   File ""/usr/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py"", line 157, in __init__     self.start_session(capabilities, browser_profile)   File ""/usr/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py"", line 252, in start_session     response = self.execute(Command.NEW_SESSION, parameters)   File ""/usr/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py"", line 321, in execute     self.error_handler.check_response(response)   File ""/usr/lib/python3.8/site-packages/selenium/webdriver/remote/errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.SessionNotCreatedException: Message: Unable to find a matching set of capabilities    I'm assuming because this doesn't know where the flapak version of firefox is located (i'm not entirely sure either) - but I feel like this should work.  Any guidance for additional steps or if this is in fact a bug would be welcomed.  Thanks!","closed","","yyhmsg","2020-04-09T18:57:27Z","2020-05-20T22:37:25Z"
"","8187","""Unable to find a matching set of capabilities"" - flatpak firefox","This may be a bug related to previous bugs from a couple years ago not looking in enough places to find firefox.  Either way, I recently updated my manjaro system to use the new flatpak version of firefox.  When running: browser = webdriver.Firefox()  I get: File """", line 1, in      browser = webdriver.Firefox()   File ""/usr/lib/python3.8/site-packages/selenium/webdriver/firefox/webdriver.py"", line 170, in __init__     RemoteWebDriver.__init__(   File ""/usr/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py"", line 157, in __init__     self.start_session(capabilities, browser_profile)   File ""/usr/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py"", line 252, in start_session     response = self.execute(Command.NEW_SESSION, parameters)   File ""/usr/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py"", line 321, in execute     self.error_handler.check_response(response)   File ""/usr/lib/python3.8/site-packages/selenium/webdriver/remote/errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.SessionNotCreatedException: Message: Unable to find a matching set of capabilities    I'm assuming because this doesn't know where the flapak version of firefox is located (i'm not entirely sure either) - but I feel like this should work.  Any guidance for additional steps or if this is in fact a bug would be welcomed.  Thanks!","closed","","yyhmsg","2020-04-09T18:54:24Z","2020-05-20T22:39:43Z"
"","7969","Add support for proxying websockets","This is needed to allow CDP to work properly on the Grid. This will also need us to rewrite the URL of the chrome connection, or expose it in some way.","closed","","shs96c","2020-01-28T08:58:51Z","2020-02-28T07:11:57Z"
"","8497","Run Ruby tests with IDE","This is my solution for #7400   1. Removed some redundancies and rearranged some things in build.desc  2. Removed the cached atoms (they are out of date)  3. Test updates: Created chromium directory for integration tests that apply to both Chrome & Edge and moved integration tests to unit tests as necessary  4. Option mismatch: raise Exception if the browser name of the Options instance does not match the browser name of the test (this was the major problem; You start a new browser and pass in Chrome Options, it doesn't matter what browser is being tested, it will open & pass in Chrome, and fail the pending guard)  5. I added a Rakefile in `rb`. Some of it is a little hacky (any suggestions more than welcome), *but* it lets me run rake tasks to dynamically create and pull in the atoms and the new generated devtools files and the selenium server (the code to actually use the server is in an upcoming PR). If there is a better way to do this, let me know. I hate switching back and forth between the build directory & the regular directory when I'm developing. This allows for users to execute rake tasks from the IDE directly and/or command line rake tasks; no need to use `selenium/go` directly.","closed","C-rb,","titusfortner","2020-07-10T09:47:49Z","2020-07-13T02:15:28Z"
"","8751","Py devtools","This is a work in progress.","closed","","AutomatedTester","2020-09-30T19:37:21Z","2020-10-02T11:54:35Z"
"","8504","Ruby Edge Chrome Fixes","This gets the tests working for the latest version of MicrosoftEdge on both Mac & Windows.  I just merged to trunk other updates to guards related to windows & mac tests and code to get Safari/STP working correctly. I'm doing this as a PR instead of a commit to trunk so we're on the same page with a couple changes here.  1. `Edge` is now aliased to `EdgeChrome` and not `EdgeHtml`; and `Capabilities#edge` returns values for `EdgeChrome` 2. We have unit tests for both `EdgeChrome` & `EdgeHtml` with those classes specifically, but we're only running integration tests for `Edge` 3. Removed build/task for remote-edge-test since 3.x server doesn't work with Edge Chrome (I'll make it all correct with a Selenium 4 server PR) 4. The rest of this is just updating the guards for things that work now with the Chrome implementation.","closed","C-rb,","titusfortner","2020-07-11T15:55:44Z","2020-07-14T20:37:28Z"
"","8150","Py highlight","This flash method will highlight the element and set back the original element style. It will high light the element n times (default value is 5). The only new library imported is `time` to make sure there is delay between each time the script highlight the element.  Added line# 24, 775 - 813  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ X ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ X ] I have updated the documentation accordingly. - [ X ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","sridharUpputuri","2020-03-31T15:16:00Z","2020-03-31T16:46:08Z"
"","8647","Added new argument creationflags in Service class for common, chrome, and firefox","This feature was only needed for windows users. There will be no need to do this in Unix like operating systems. Let's suppose we have a GUI program (.pyw) which uses selenium. ``` from selenium import webdriver  driver = webdriver.Chrome() ``` When the `subprocess.Popen(...)` opens the chromedriver, a new console window will open up on windows system. To avoid this, we can use `CREATE_NO_WINDOW` creation flag (or possibly some other flags). This will call `subprocess.Popen(...,creationflags=self.creationflags)`.  After the added feature, we will be able to do something like this: ``` from selenium import webdriver from selenium.webdriver.chrome.service import Service as ChromeService # Similar thing for firefox also! from subprocess import CREATE_NO_WINDOW # This flag will only be available in windows  chrome_service = ChromeService('chromedriver', creationflags=CREATE_NO_WINDOW) driver = webdriver.Chrome(service=chrome_service) # No longer console window opened, niether will chromedriver output ```  I had done this directly inside the WebDriver class but the seniors asked to do this inside `Service` or `Options` class. So here I am again! Anyway, I am open to alternatives you suggest and commit again, and eventually I will do better code contribution after learning the structure of project more.  **Question:** If this is okay, can I also proceed with the same strategy for other browsers as well?","closed","","ali-sajjad-rizavi","2020-08-25T21:27:46Z","2020-09-15T10:53:38Z"
"","7935","Secure websocket proxying","There should be no need to use an insecure protocol for websocket proxying.","closed","selenium-4,","shs96c","2020-01-14T15:36:07Z","2021-09-05T09:02:44Z"
"","7994","selenium-3.141.59 is missing in PyPI","There is no selenium-3.141.59 in PyPI. Please add","closed","","kamikaze","2020-02-04T09:06:47Z","2020-03-10T19:40:55Z"
"","7879","WebDriverEventListener - Extend to cover additional events","The WebDriverEventListener is very useful however limited in the types of events it supports. It would be useful to add this functionality other events including but not limited to:   - driver.close() - driver.quit() - element.submit() - switchTo() - element.getAttribute(); - element.getTagName() - Actions - key board and mouse actions  Ideally these before and after methods will have a way to grab the details of the action being performed.","closed","","a-mcd","2019-12-20T23:25:29Z","2020-01-24T11:56:54Z"
"","8434","Message: unknown error: cannot parse capability: goog:chromeOptions from unknown error: unrecognized chrome option: debuggerAddress","The test code is very simple, as follows: ``` from selenium import webdriver options = webdriver.ChromeOptions() options.add_experimental_option('androidPackage', 'com.android.chrome') options.debugger_address = ""192.168.1.12:10112"" driver = webdriver.Chrome('chromedriver', options=options) driver.get('http://www.google.cn/') print(driver.page_source) driver.quit() ``` The script throws an exception as belows: ``` Exception has occurred: WebDriverException Message: unknown error: cannot parse capability: goog:chromeOptions from unknown error: unrecognized chrome option: debuggerAddress   (Driver info: chromedriver=2.31.488763 (092de99f48a300323ecf8c2a4e2e7cab51de5ba8),platform=Windows NT 10.0.17134 x86_64)   File ""F:\project\traverHtml\chrome.py"", line 13, in      driver = webdriver.Chrome('chromedriver', options=options) ``` EnvironmentÔºö python : 3.7.4 Operation System: windows 10 selenium : 3.141.0  The scripts works fine when i remove the line options.debugger_address = ""192.168.1.12:10112"". But I have to add this flag to debug remote browser base on blink kernel.","closed","","masterliuf","2020-06-18T00:51:21Z","2021-09-05T09:36:42Z"
"","8558","New Session Request Queue","the queue of incoming ‚Äúnew session‚Äù requests. This queue may be weighted, but could be a simple FIFO queue.  New Session Queuer: a specialised node (possibly a cloud function or aws lambda?) that can take an incoming new session request, normalise it, and push it into the New Session Request Queue and awaits the response. Because starting a new session may be time consuming, these should be stateless and easy to scale horizontally.","closed","","AutomatedTester","2020-07-21T10:35:10Z","2021-09-05T08:25:03Z"
"","8125","Enable Grid to be configured by config files","The new Grid should be able to consume its own config files, and (optionally) provide converters for those of Grid 3 and Selenoid.","closed","I-enhancement,","shs96c","2020-03-21T10:22:19Z","2021-09-05T09:44:03Z"
"","8681","Standalone Server jQuery is 3.1.1 outdated","The latest stable version 3.141.59 comes with jQuery 3.1.1 built-in (`http://localhost:4444/assets/jquery-3.1.1.min.js`) , which has some XSS vulnerabilities that were fixed in [3.5.0](https://www.infoq.com/news/2020/04/jquery-35-xss-vulnerability-fix/). I'm not sure if Selenium is impacted at all by this vulnerability, but some of our customers have expressed concerns about the outdated jQuery, which is why I have filed this issue.  Would it be possible to have a minor release that has the latest jQuery version builtin (3.5.1), or maybe a patch? Thank you.","closed","","chibicitiberiu","2020-09-08T09:28:21Z","2021-09-05T08:36:02Z"
"","8837","Chromebrowser failed to connect localhost/0:0:0:0:0:0:0:1:6581 while executing multiple UI Test Jobs through Jenkins","The issue Observed only in Jenkins during parallel UI test jobs execution  The chrome can be launched normally using chromedriver, but failed connect to during excution, with error information: org.openqa.selenium.WebDriverException: java.net.ConnectException: Failed to connect to localhost/0:0:0:0:0:0:0:1:6581,   ## Environment OS:  Windows 10 Browser:  Chrome Browser version: Version 86.0.4240.111 (Official Build) (64-bit) Browser Driver version: ChromeDriver 86.0.4240.22 Language Bindings version: 1.8 Selenium version (if applicable): 3.14","closed","","Shankar1386","2020-11-04T03:51:49Z","2021-09-05T08:33:51Z"
"","7987","Avoid deadlock when tests are run on XUnit","The fix solves a problem with deadlock on Selenium 4.x. The requirement is that we cannot change HttpClient to something else + we cannot make other methods async, that's why I believe the only possible way to solve it is to use TaskFactory workaround.      ### Description This fix solves #7916   ### Motivation and Context It's required because on XUnit, we get a deadlock (when parallelism is used).  Similar case is discussed here: https://github.com/xunit/xunit/issues/88  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","C-dotnet,","macpak","2020-02-03T12:04:38Z","2021-03-26T03:33:26Z"
"","8461","Update docs to use setMobileEmulation properly","The custom config is wrapped in a ""deviceMetrics"" object    **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","helen3141","2020-06-26T03:58:11Z","2020-06-29T07:33:31Z"
"","7884","Removed CLA reference and updated numbering","The Contributor Licence Agreement is no longer required so removed other remaining reference.  Reindexed the following step title descriptions to correct the numbering for the following contribution guidance.    **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description Minor changes to address typos in the CONTRIBUTING.md.  ### Motivation and Context Reduce developer friction by removing references to CLA which is no longer needed.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change) - [x] Documentation cleanup.  ### Checklist   - [ x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","dakkad","2019-12-23T13:22:49Z","2020-03-13T03:27:12Z"
"","8736","[atoms] Fix getText atom for unicode charater middle of word","The change to getText atom by commit c065ddaeb6c5cf91ebf797c242128604e38b79e1 does not handle case when unicode character is in the middle of a word, and unicode character will be incorrectly capitalized (see https://bugs.chromium.org/p/chromedriver/issues/detail?id=3611). The problem is \b mark the boundary between word character and unicode character as a boundary. This is fixed by explicitly using unicode flag and specifying unicode character and unicode symbol in the regex.    **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","D-atoms,","k7z45","2020-09-25T17:34:10Z","2020-10-20T23:18:48Z"
"","7903","Fix a bug in Ruby mouse movement","The `origin` parameter should always be `""pointer""` or `""viewport""`. so it's never appropriate to pass the element in.  I've set a sensible default of `""pointer""`.  Fixes this bug: ```      Failure/Error: page.driver.browser.action.move_to(element).perform       Selenium::WebDriver::Error::InvalidArgumentError:        invalid argument        from invalid argument: if 'origin' is a string, it must be either 'viewport' or 'pointer'          (Session info: headless chrome=79.0.3945.88)      # 0   chromedriver                        0x000000010b71ee29 chromedriver + 3817001      # 1   chromedriver                        0x000000010b6b2f33 chromedriver + 3374899      # 2   chromedriver                        0x000000010b4338bf chromedriver + 755903      # 3   chromedriver                        0x000000010b3ce58a chromedriver + 341386      # 4   chromedriver                        0x000000010b3ce9da chromedriver + 342490      # 5   chromedriver                        0x000000010b3bc192 chromedriver + 266642      # 6   chromedriver                        0x000000010b3c8c1b chromedriver + 318491      # 7   chromedriver                        0x000000010b3bc4a3 chromedriver + 267427      # 8   chromedriver                        0x000000010b395c0d chromedriver + 109581      # 9   chromedriver                        0x000000010b396ba5 chromedriver + 113573      # 10  chromedriver                        0x000000010b6e0f6f chromedriver + 3563375      # 11  chromedriver                        0x000000010b6ede3a chromedriver + 3616314      # 12  chromedriver                        0x000000010b6edbf7 chromedriver + 3615735      # 13  chromedriver                        0x000000010b6c0699 chromedriver + 3430041      # 14  chromedriver                        0x000000010b6ee692 chromedriver + 3618450      # 15  chromedriver                        0x000000010b6d4e17 chromedriver + 3513879      # 16  chromedriver                        0x000000010b703fe4 chromedriver + 3706852      # 17  chromedriver                        0x000000010b724fc7 chromedriver + 3841991      # 18  libsystem_pthread.dylib             0x00007fff64b67e65 _pthread_start + 148      # 19  libsystem_pthread.dylib             0x00007fff64b6383b thread_start + 15      # ./.bundle/gems/selenium-webdriver-3.142.6/lib/selenium/webdriver/remote/response.rb:72:in `assert_ok'      # ./.bundle/gems/selenium-webdriver-3.142.6/lib/selenium/webdriver/remote/response.rb:34:in `initialize'      # ./.bundle/gems/selenium-webdriver-3.142.6/lib/selenium/webdriver/remote/http/common.rb:88:in `new'      # ./.bundle/gems/selenium-webdriver-3.142.6/lib/selenium/webdriver/remote/http/common.rb:88:in `create_response'      # ./.bundle/gems/selenium-webdriver-3.142.6/lib/selenium/webdriver/remote/http/default.rb:114:in `request'      # ./.bundle/gems/selenium-webdriver-3.142.6/lib/selenium/webdriver/remote/http/common.rb:64:in `call'      # ./.bundle/gems/selenium-webdriver-3.142.6/lib/selenium/webdriver/remote/bridge.rb:167:in `execute'      # ./.bundle/gems/selenium-webdriver-3.142.6/lib/selenium/webdriver/remote/w3c/bridge.rb:567:in `execute'      # ./.bundle/gems/selenium-webdriver-3.142.6/lib/selenium/webdriver/remote/w3c/bridge.rb:363:in `send_actions'      # ./.bundle/gems/selenium-webdriver-3.142.6/lib/selenium/webdriver/common/w3c_action_builder.rb:164:in `perform' ```","closed","C-rb,","elliotcm","2019-12-31T18:48:12Z","2020-01-03T15:25:29Z"
"","8878","[3.141.59] Malformed documentation for ChromeDriver class","Steps to reproduce: 1. Navigate to ChromeDriver class Actual: {code}   ...    {@literal @Test}    public void testGoogleSearch() {      driver.get(""http://www.google.com"");      WebElement searchBox = driver.findElement(By.name(""q""));      searchBox.sendKeys(""webdriver"");      searchBox.quit();      assertEquals(""webdriver - Google Search"", driver.getTitle());    }  } ... {code}  Expected: removed searchBox.quit()    ...    {@literal @Test}    public void testGoogleSearch() {      driver.get(""http://www.google.com"");      WebElement searchBox = driver.findElement(By.name(""q""));      searchBox.sendKeys(""webdriver"");      assertEquals(""webdriver - Google Search"", driver.getTitle());    }  } ...","closed","","naz1719","2020-11-16T18:37:19Z","2021-09-05T08:31:25Z"
"","8847","Login not working on safari-selenium. ""ERROR webdriver: Request failed with status 500 due to unknown error: unknown error""","Steps to reproduce:  Clone the repo  https://github.com/suchitrak/webdriverio Execute npm run test ERROR webdriver: Request failed with status 500 due to unknown error: unknown error  Environment: MAC OS Catalina - 10.15.7 Safari 14  Steps to enable Safari: https://developer.apple.com/documentation/webkit/testing_with_webdriver_in_safari Follow the steps in above link  safaridriver --enable /usr/bin/safaridriver --port 4444 What is working:  The same above script works fine on chrome the other example scripts in the repo works fine on Safari 14 too. ONLY the Login to Box.com is not working on Safari 14. But Login to Box.com works fine when executed on browserstack that has Safari 13.  The issue has already been logged on https://github.com/webdriverio/webdriverio/issues/6077","closed","","suchitrak","2020-11-06T18:29:08Z","2021-09-05T08:31:35Z"
"","8265","Fix SameSite JSON key for Cookie to `sameSite` to align with WebDriver spec","spec https://w3c.github.io/webdriver/#dfn-table-for-cookie-conversion    **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","gjyalpha","2020-05-01T21:50:21Z","2020-05-05T16:33:14Z"
"","7901","Add: Adding new cookie sameSite (c-nodejs)","Signed-off-by: Sri Harsha   **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  ### Description Adding new cookie support 'sameSite' to c-nodejs  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","C-nodejs,","harsha509","2019-12-30T13:54:46Z","2020-03-04T15:20:38Z"
"","8261","acceptInsecureCerts capability is ignored","Setting `acceptInsecureCerts` to `False` is ignored by geckodriver. The same pattern works with ChromeDriver.  We need to disable `acceptInsecureCerts` in order to better simulate an actual person's experience browsing the Web. (People are unlikely to go past insecure cert warnings.)  In the following example, the `unhandledPromptBehavior` setting is respected, while `acceptInsecureCerts` remains set to `True`.  ```python             caps = DesiredCapabilities.FIREFOX.copy()             caps['acceptInsecureCerts'] = False;             caps['unhandledPromptBehavior'] = ""ignore"";              self.driver = webdriver.Firefox(firefox_profile=profile,                                             firefox_binary=self.firefox_path,                                             options=opts,                                             desired_capabilities=caps,                                             service_log_path=os.path.devnull) ```  (The above code is from [badger-sett/crawler.py](https://github.com/EFForg/badger-sett/blob/47a6eda45ac1f887e0acaaa1f609cbd002bf0b5f/crawler.py#L317-L325))  I originally filed this as https://github.com/mozilla/geckodriver/issues/1718.  ## System  * Version: 0.26.0 * Platform: Ubuntu Linux 16.04 * Firefox: 75 * Selenium: Python bindings version 3.141.0","closed","C-py,","ghostwords","2020-04-30T14:22:12Z","2021-09-05T10:02:45Z"
"","8341","Unable to create firefox session in VM getting org.openqa.selenium.SessionNotCreatedException: Cannot establish new session","Selenium:-3.8.1 Geko:--0.26.0 Code:- DesiredCapabilities firefoxCapabilities = DesiredCapabilities.firefox();  firefoxCapabilities.setPlatform(Platform.fromString(platform)); 				firefoxCapabilities.setCapability(""marionette"", true); 				fp = new ProfilesIni().getProfile(""Admin""); 				firefoxCapabilities.setCapability(FirefoxDriver.PROFILE, fp); 				firefoxCapabilities.setCapability(""browser.download.useDownloadDir"", true); 				firefoxCapabilities.setCapability(""browser.download.folderList"",2); //Use for the default download directory the last folder specified for a download 				firefoxCapabilities.setCapability(""browser.helperApps.neverAsk.saveToDisk"", ""application/pdf""); //list of MIME types to save to disk without asking what to use to open the file 				firefoxCapabilities.setCapability(""pdfjs.disabled"", true); 				firefoxCapabilities.setCapability(""browser.helperApps.neverAsk.openFile"", ""text/csv,application/pdf, application/octet-stream, application/x-winzip, application/x-pdf, application/x-gzip""); 	 				driver = new RemoteWebDriver(hubURL, firefoxCapabilities); Note:- Following specification is working in Physical machine only not working in VM  Trace:-  org.openqa.selenium.SessionNotCreatedException: Cannot establish new session Build info: version: '3.8.1', revision: '6e95a6684b', time: '2017-12-01T19:05:32.194Z' System info: host: 'ASPBS-121', ip: '172.x.x.x', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_144' Driver info: driver.version: unknown Command duration or timeout: 53.00 seconds at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source) at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source) at java.lang.reflect.Constructor.newInstance(Unknown Source) at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214) at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166) at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$new$0(JsonWireProtocolResponse.java:53) at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$getResponseFunction$2(JsonWireProtocolResponse.java:91) at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:123) at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source) at java.util.Spliterators$ArraySpliterator.tryAdvance(Unknown Source) at java.util.stream.ReferencePipeline.forEachWithCancel(Unknown Source) at java.util.stream.AbstractPipeline.copyIntoWithCancel(Unknown Source) at java.util.stream.AbstractPipeline.copyInto(Unknown Source) at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source) at java.util.stream.FindOps$FindOp.evaluateSequential(Unknown Source) at java.util.stream.AbstractPipeline.evaluate(Unknown Source) at java.util.stream.ReferencePipeline.findFirst(Unknown Source) at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:126) at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:73) at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:142) at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601) at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:219) at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:142) at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:155) at com.imm.esignplus.support.WebDriverFactory.get(WebDriverFactory.java:392) at com.imm.esignplus.support.WebDriverFactory.get(WebDriverFactory.java:201) at com.imm.esignplus.testscripts.Process.ProcessSession.verifyLockUnlockFeatureInSessionDetailsPage(ProcessSession.java:978) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) at java.lang.reflect.Method.invoke(Unknown Source) at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108) at org.testng.internal.Invoker.invokeMethod(Invoker.java:661) at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869) at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193) at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126) at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109) at org.testng.TestRunner.privateRun(TestRunner.java:744) at org.testng.TestRunner.run(TestRunner.java:602) at org.testng.SuiteRunner.runTest(SuiteRunner.java:380) at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375) at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340) at org.testng.SuiteRunner.run(SuiteRunner.java:289) at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86) at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301) at org.testng.TestNG.runSuitesLocally(TestNG.java:1226) at org.testng.TestNG.runSuites(TestNG.java:1144) at org.testng.TestNG.run(TestNG.java:1115) at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114) at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251) at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)","closed","","Revanth2020","2020-05-25T04:33:28Z","2020-06-24T18:31:13Z"
"","8657","selenium unable to open chrome Intermittently","selenium unable to open chrome Intermittently.  Error:  ‚óè Test suite failed to run     WebDriverError: unknown error: unable to discover open pages       (Driver info: chromedriver=72.0.3626.7 (efcef9a3ecda02b2132af215116a03852d08b9cb),platform=Windows NT 10.0.14393 x86_64)","closed","","v-bachal","2020-08-31T09:28:53Z","2021-09-05T08:37:16Z"
"","8010","Automate RemoteConnection subclass selection (1)","Select an appropriate RemoteConnection subclass based on specified capabilities while instantiating WebDriver (aka Remote) class.  Add a new field ""brower_name"" to RemoteConnection class. Field can be overridden in RemoteConnection subclasses that wish to handle connections to specific browsers.  Related #7959    **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","abdelrahman-t","2020-02-07T23:02:54Z","2020-02-14T22:47:46Z"
"","8568","s","s","closed","","anuradhapalakurthiTR","2020-07-23T21:08:48Z","2021-09-05T09:02:55Z"
"","7888","Set ACCEPT_INSECURE_CERTS capability for test","Resolves the todo that the capability needs to be set for the testShouldBeAbleToAccessPagesWithAnInsecureSslCertificate.  ### Description testShouldBeAbleToAccessPagesWithAnInsecureSslCertificate fails in ChromeDriver 79+, because the required capability is not set.  ### Types of changes - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [/] I have added tests to cover my changes. (this changes fixes a broken test) - [X] All new and existing tests passed.","closed","C-java,","TriciaCrichton","2019-12-24T00:11:52Z","2020-03-24T18:31:21Z"
"","7925","Add response to RemoteWebDriver's client log level","Replaced log 'command' with 'response' in RemoteDriver.setLogLevel  Fixes #7632    **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","vijay44","2020-01-10T07:39:29Z","2020-02-15T13:37:26Z"
"","8772","‰∏∫‰ªÄ‰πàÊàëÁöÑseleniumÊúâÂá†ÁéáËøîÂõûÈîôËØØÁªìÊûúÔºüwhy my selenium returns the result which is not my respect randomlyÔºü","python selenium Á®ãÂ∫èËÉΩÊ£ÄÊµãÂà∞È™åËØÅÁ†ÅÁ™óÂè£Ôºå‰ΩÜÊòØÊúâÂá†ÁéáÊ£ÄÊµã‰∏çÂà∞ÔºåÊØîÂ¶ÇËØ¥6Ê¨°‰∏≠Â∞±Êúâ‰∏ÄÊ¨°Ê£ÄÊµã‰∏çÂà∞Ôºå‰∏çÁü•ÈÅì‰ªÄ‰πàÂéüÂõ†„ÄÇÊò®ÊôöÈÅáÂà∞ËøáÔºå‰ªäÂ§©ÊúâÂá∫Áé∞‰∫ÜËøôÁßçÊÉÖÂÜµÔºåË∞ÅÊúâÁ©∫Â∏ÆÊàëÁúãÁúãÂïäÔºüÁΩëÂùÄÊòØ http://xkz.cbirc.gov.cn/jr/ÔºåÂà∑Êñ∞Âá†Ê¨°Â∞±‰ºöÂºπÂá∫È™åËØÅÁ†Å ![ÂõæÁâá](https://user-images.githubusercontent.com/25223652/95668724-644c4d00-0baa-11eb-9bc7-5f1c4268270b.png)","closed","","ewwerpm","2020-10-11T02:13:36Z","2021-09-05T08:34:05Z"
"","8722","Fix for documentation of ‚ÄòActions.moveToElement‚Äô","Pull request as suggested by @diemol ( https://github.com/SeleniumHQ/selenium/issues/4847#issuecomment-691981122 ).  This replaces ‚Äúcenter of the element‚Äù in the documentation of `Actions.moveToElement` with ‚Äúelement‚Äòs in-view center point‚Äù to match the W3C spec.  The section on ‚Äúpointer actions‚Äù in the spec says the offsets are from the element‚Äôs in-view center point, not its center:  ![WebDriver 2020-09-22 12-05-25](https://user-images.githubusercontent.com/1611248/93869405-0b387a00-fccc-11ea-8652-d03b238eec29.png)  The in-view center point is defined as follows:  ![WebDriver 2020-09-22 12-08-06](https://user-images.githubusercontent.com/1611248/93869589-49ce3480-fccc-11ea-89fc-d1db9215d1db.png)","closed","","Rinzwind","2020-09-22T10:08:45Z","2020-09-22T15:15:57Z"
"","8642","hascode() method in org.openqa.selenium.Cookie doesn't take cookie domain into account","Problem:  org.openqa.selenium.manage().getCookies returns a Set of org.openqa.selenium.Cookie. the hashCode() method of org.openqa.selenium.Cookie only takes the cookie name, but not the domain name into account. Thus, two separate cookies with the same name, but different domains overwrite each other in the set.  Proposal:  hashCode should also take the domain name into account","closed","","hankstenberg","2020-08-24T15:57:24Z","2021-09-05T08:37:21Z"
"","8190","Complex XPATH is not found by Python Selenium","Problem summary:  Selenium does not find elements with ""too complex"" XPATH  This is the HTML document to reproduce the problem: `        	 	   	 	¬†¬†¬† 	  		 			Company type: Private Limited Company  			Company number: 123456789  			Company status: Active  		 		 			country of origin: United Kingdom  			incorporation date: 2020.01.01 			has UK establishment:  No    			has appointments:  Yes    			in liquidation:  No   		  		Nature of Business: 		 			 				82990 - Other business support service activities not elsewhere classified 			 					 	    `  My aim is to locate element with text ""Private Limited Company"". According to both Chrome and Firefox Dev tools, its xpath is the following: `//*[@id=""tabs-info""]/div[4]/div[1]/text()[1]` Javascript does not find this xpath in runtime, however the very similar xpath is found: `//*[@id=""tabs-info""]/div[4]/div[1]/text()[2]` I opened tickets against the respective browsers about inconsistency between Dev Tools and Javascript engine. However Selenium does not find any of them (NoSuchElementException is raised). The element can be also located by xpath based on a class selector: `//div[contains(@class,""subject company_info"")]/div[1]/text()[2]` Javascript finds it. Selenium does not find it, too.  This is my Python code to invoke Selenium: ` from selenium import webdriver  driver = webdriver.PhantomJS() driver.set_window_size(1120, 550) driver.get(url=""file:///home/user/test.html"") path1 = '//*[@id=""tabs-info""]/div[4]/div[1]/text()[2]' path2 = '//div[contains(@class,""subject company_info"")]/div[1]/text()[2]' e1 = driver.find_element(By.XPATH, path1) print(""Path #1: "" + e1.text) e2 = driver.find_element(By.XPATH, path2) print(""Path #2: "" + e2.text) driver.quit() `   Tested with Firefox and Chrome on Linux. Also Selenium IDE playback fails with such kinds of xpath in both Firefox and Chrome on Windows 10.","closed","","GBR-613","2020-04-10T11:23:18Z","2020-05-20T22:32:35Z"
"","8192","Invalid argument error when navigating to a url without 'http[s]'","Probably related to #7789   I am testing the EdgeDriver version 4.0.0-alpha05 and noticed that when trying to navigate to non fully qualified url then I receive the Invalid argument exception.  `driver.Navigate().GoToUrl(url);`  Url: www.google.com gives the error. Url: https://www.google.com works fine.","closed","","Telavian","2020-04-10T21:53:13Z","2020-05-20T22:27:24Z"
"","8340","Please make proxies work with authentication (python)","please make selenium to work with proxies with authentication","closed","","cybermicheal47","2020-05-23T18:49:49Z","2021-11-08T16:13:30Z"
"","8490","Question: Selenium C# open 2 web-browser, I want only 1, how to do?","Please help me answer the question:  https://stackoverflow.com/questions/62792198/selenium-why-run-2-instances-of-firefox","closed","","donhuvy","2020-07-08T11:14:52Z","2021-09-05T09:12:36Z"
"","8339","proxies not working with authentication","please do somehing about this proxies with auth doesn't work on selenium in python","closed","","cybermicheal47","2020-05-23T18:46:06Z","2020-06-24T19:12:06Z"
"","8449","Add browsername capabilities to Grid","Partial-PR: https://github.com/SeleniumHQ/selenium/issues/8020   **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","shucon","2020-06-22T18:16:27Z","2020-06-24T09:58:52Z"
"","8448","Fix URL to URI","Partial-PR: https://github.com/SeleniumHQ/selenium/issues/8020    **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [x] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","shucon","2020-06-22T14:34:37Z","2020-06-22T16:33:34Z"
"","8445","Add maxSession info to nodes","Partial-PR: https://github.com/SeleniumHQ/selenium/issues/8020  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","shucon","2020-06-20T19:40:58Z","2020-06-22T17:13:29Z"
"","8454","Add Draining capability to node status","Partial-PR: #8020 In continuation to : https://github.com/SeleniumHQ/selenium/pull/8442   **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","shucon","2020-06-24T11:10:30Z","2020-09-24T10:34:08Z"
"","8522","Change getCapabilities output","Partial-PR: #8020   **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","shucon","2020-07-14T10:53:03Z","2020-07-22T09:05:37Z"
"","8474","Add SessionMap data","Partial-PR: #8020  ### Testing Instructions * Build the Grid by `bazel build selenium-server-standalone` * Start the Selenium Grid by `java -jar selenium_server_deploy.jar standalone` * Start querying using curl commands like : `curl -X POST -H ""Content-Type: application/json"" --data '{""query"": ""{ grid { nodes { id, uri, status, maxSession, capabilities, sessions {id, capabilities, startTime} }, uri, totalSlots, usedSlots, sessionCount } }""}' -s http://localhost:4444/graphql` * Open new sessions using a Java file opening RemoteDrivers * Start querying again using curl commands and notice the difference in the queries due to new sessions. ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","shucon","2020-07-01T16:57:41Z","2020-08-21T13:43:52Z"
"","8576","IE throws ""Command line server for the IE driver has stopped working"" error on Click","OS: Windows Server 2019 Selenium Version: selenium-server-standalone-3.141.59 Browser: Internet Explorer 11 Browser Version: 11.1282.17763.0 Driver: IE Driver Server x32 v3.150.1.0 Java: 1.8.0_251  Expected Behavior Click/Upload should be error-free.  Actual Behavior ""Command line server for the IE driver has stopped working"" error. ![IE_error](https://user-images.githubusercontent.com/31615407/88656598-2fbe0e80-d0ee-11ea-93d8-208f137d7aba.JPG)","closed","","prasadjshimpi","2020-07-28T10:50:07Z","2021-09-05T09:02:53Z"
"","8002","get IE console log","OS: Window 10 selenium 3.14.0  I want get Ie console logs by Java , But is not Support  This is My code:  public static void main(String[] args) {         System.setProperty(""webdriver.ie.driver"", "".\\Tools\\\\IEDriverServer.exe"");           /**          * default:          * browserName -> internet explorer          * ensureCleanSession -> true          * platform -> WINDOWS          * version ->          *          */          InternetExplorerOptions options = new InternetExplorerOptions();         options.setCapability(""logFile"",""d:/log.log"");         options.setCapability(""logLevel"",""TRACE""); //        options.setCapability(""extractPath"",""d:/path/""); //        options.setCapability(""silent"",true);           WebDriver driver = new InternetExplorerDriver(options);     //        driver.get(""http://www.baidu.com"");         driver.get(""http://127.0.0.1:8080/index.html"");         driver.manage().window().maximize();         driver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);             try {              LogEntries logEntries = driver.manage().logs().get(LogType.BROWSER);              List all = logEntries.getAll();              if(!all.isEmpty()){                 for (LogEntry entry:logEntries){                     System.out.println(entry.getMessage());                 }             }         }catch (Exception e){             e.printStackTrace();              return;         }    //        JavascriptExecutor javascriptExecutor = (JavascriptExecutor)driver; //        javascriptExecutor.executeScript(""document.getElementById('submit').click();""); //        Object o = javascriptExecutor.executeScript(""function a(){return '12'};return a();""); //        javascriptExecutor.executeScript(""function a(){new Haha()};a();""); //        System.out.println(o);  //        String pageSource = driver.getPageSource(); //        System.out.println(""pageSource:""+pageSource);  //        Object o = javascriptExecutor.executeScript(""var myConsole = window.console;return myConsole.trace;""); //        System.out.println(o);           try {             TimeUnit.SECONDS.sleep(10000);         }catch (Exception e){             e.printStackTrace();         }          driver.close();       }","closed","","aaafenghao","2020-02-06T01:56:14Z","2020-03-10T19:27:25Z"
"","8517","Capybara giving error when executing in firefox using selenium WebDriver as 'Net::ReadTimeout: Net::ReadTimeout '","OS - Windows 10 Firefox version - 78.0.2   gem installed   source 'http://rubygems.org'  gem 'capybara', '~> 3.13', '>= 3.13.2' # Released: January 24, 2019 gem 'rspec', '~> 3.8' # Released: August 4, 2018 gem 'rubocop', '~> 0.65.0' # Released: Feb 19, 2019 gem 'selenium-webdriver', '~> 3.141' # Released: November 1, 2018 gem 'launchy', '~> 2.4', '>= 2.4.3' # Released November 3, 2014 gem 'webdrivers', '~> 4.1.0' # Released October 7, 2019 gem 'ffi', '~> 1.11', '>= 1.11.3' gem 'cucumber' gem 'cucumber-core' gem 'cucumber-tag_expressions' gem 'report_builder' gem 'capybara-screenshot'     creating a cucumber BDD Test Cases and executing in firefox using capybara code    env.rb file as    require 'bundler/setup' Bundler.require  require 'capybara/cucumber' require 'rspec' include Capybara::DSL require 'capybara/dsl' require 'rspec/core' require 'rspec/expectations' include RSpec::Matchers require 'selenium/webdriver' require 'report_builder' require 'capybara-screenshot/cucumber'     Capybara.configure do |config|   config.run_server = false   config.default_driver = :selenium #:selenium_chrome   config.app_host = ""https://parabank.parasoft.com/""   config.save_path = ""./FailedSnapshots/""   config.default_max_wait_time=10    Capybara.register_driver :selenium do |app|     options = {         :js_errors => false,     }     Capybara::Selenium::Driver.new(app, :browser => :firefox)     #options = Selenium::WebDriver::Firefox::Options.new(args: %w[--headless])     options = Selenium::WebDriver::Firefox::Options.new     capabilities = Selenium::WebDriver::Remote::Capabilities.firefox(         acceptInsecureCerts: true,         )      Capybara::Selenium::Driver.new(         app,         browser: :firefox,         options: options,         desired_capabilities: capabilities     )    end end  Firefox is launched but test case gives error  ![image](https://user-images.githubusercontent.com/53390794/87386934-48430a80-c5bf-11ea-843b-e4da2b8989dc.png)   and same properly run with chrome browser","closed","","AbhijayGhadyale","2020-07-14T05:16:50Z","2021-09-05T09:12:27Z"
"","8564","org.openqa.selenium.WebDriverException: TypeError: Expected an element or WindowProxy, got: [object Text] {}","org.openqa.selenium.WebDriverException: TypeError: Expected an element or WindowProxy, got: [object Text] {} _  Originally posted by @barancev in https://github.com/SeleniumHQ/selenium/issues/7435#issuecomment-515652421_  Any update on this as I am also facing this issue","closed","","vishal013","2020-07-23T12:42:04Z","2021-09-05T09:02:55Z"
"","8305","c# OpenQA.Selenium.WebDriverException:‚ÄúThe HTTP request to the remote WebDriver server for URL http://localhost:55241/session timed out after 60 seconds.‚Äù","OpenQA.Selenium.WebDriverException:‚ÄúThe HTTP request to the remote WebDriver server for URL http://localhost:55241/session timed out after 60 seconds.‚Äù  string chromedir = @""D:\Program Files\Chrome\chrome\chrome.exe"";             ChromeOptions options = new ChromeOptions();             options.BinaryLocation = chromedir;             options.AddArgument(""no-sandbox"");             options.AddArgument(""proxy-server='direct://'"");             options.AddArgument(""proxy-bypass-list=*"");             IWebDriver webDriver = new ChromeDriver(options);             webDriver.Navigate().GoToUrl(""https://www.baidu.com"");","closed","","wpyok500","2020-05-14T03:55:33Z","2021-09-05T10:02:51Z"
"","8602","Gets the element value null in headless mode","Null when I use headless mode to get the td value in the third tr in the tbodyÔºåNo headless mode is normal The page element structure of a web page is the three tr groups in the tBody tag  Part of the code That I wroteÔºö     a=WebDriverWait(driver,20).until(EC.presence_of_element_located((By.XPATH,'//a[text()=""music""]//..//..//td[contains(@class,""current"")]'))).text b =  WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.XPATH, '//a[text()=""live""]//..//..//td[contains(@class,""current"")]'))).text c = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.XPATH, '//a[text()=""person""]//..//..//td[contains(@class,""current"")]'))).text print(a) print(b) print(c)  A and B can get values, c can'tÔºåI tried to increase the waiting time, but it didn't workÔºåThe third td on the page is valuable I got it right when I removed the headless mode","closed","","vvanglro","2020-08-04T12:47:49Z","2021-09-05T09:02:46Z"
"","8422","Cannot run IE browser","npm selenium-webdriver version: 4.0.0-alpha.7  Here is the error message:  ``` Unable to create new session.  SessionNotCreatedError: Unable to create session from {   ""desiredCapabilities"": {     ""browserName"": ""internet explorer""   },   ""capabilities"": {     ""firstMatch"": [       {         ""browserName"": ""internet explorer""       }     ]   } } Build info: version: '4.0.0-alpha-1', revision: 'd1d3728cae', time: '2019-04-24T16:15:24' System info: host: 'DESKTOP-T1V8VJB', ip: '192.168.56.1', os.name: 'Windows 10', os.arch: 'x86', os.version: '10.0', java.version: '1.8.0_251' Driver info: driver.version: unknown ```  When using  ``` await new webdriver.Builder().forBrowser('internet explorer').setIeOptions(new IEOptions()).usingServer('http://localhost:4444/wd/hub').build() ```  Is there a way to fix this?  Also, if there's no `usingServer`, the error is ```  Error: ECONNREFUSED connect ECONNREFUSED 127.0.0.1:57607            at ClientRequest. (C:\Users\neil\Desktop\clicksend\test-integration\node_modules\selenium-webdriver\http\index.js:262:15)            at ClientRequest.emit (events.js:315:20)            at Socket.socketErrorListener (_http_client.js:426:9)            at Socket.emit (events.js:315:20)            at emitErrorNT (internal/streams/destroy.js:92:8)            at emitErrorAndCloseNT (internal/streams/destroy.js:60:3)            at processTicksAndRejections (internal/process/task_queues.js:84:21)  ```","closed","","neilpalima","2020-06-15T07:02:44Z","2021-09-05T09:36:46Z"
"","8489","WIP: [Build] Updating rules_nodejs to v2","Not to be merged until we move to full release of the `rules_nodejs`","closed","","AutomatedTester","2020-07-07T15:36:41Z","2022-06-09T07:44:48Z"
"","8210","wiki suggestion for IE 11 configuration","May I suggest some enhancements to the 2nd and 3rd paragraphs found at https://github.com/SeleniumHQ/selenium/wiki/InternetExplorerDriver#required-configuration?  This is the original text: -On IE 7 or higher on Windows Vista or Windows 7, you must set the Protected Mode settings for each zone to be the same value. The value can be on or off, as long as it is the same for every zone. To set the Protected Mode settings, choose ""Internet Options..."" from the Tools menu, and click on the Security tab. For each zone, there will be a check box at the bottom of the tab labeled ""Enable Protected Mode"". -Additionally, ""Enhanced Protected Mode"" must be disabled for IE 10 and higher. This option is found in the Advanced tab of the Internet Options dialog.  Here is a suggestion, add one more bullet (in bold): -On IE 7 or higher on Windows Vista or Windows 7, you must set the Protected Mode settings for each zone to be the same value. The value can be on or off, as long as it is the same for every zone. **-On Windows 10, you must set the Protected Mode for each zone to be disabled.**  To set the Protected Mode settings, choose ""Internet Options..."" from the Tools menu, and click on the Security tab. For each zone, there will be a check box at the bottom of the tab labeled ""Enable Protected Mode"".  -Additionally, ""Enhanced Protected Mode"" must be disabled for IE 10 and higher. This option is found in the Advanced tab of the Internet Options dialog.","closed","","jpratt2","2020-04-17T22:59:28Z","2020-05-20T19:01:28Z"
"","8619","Update ExpectedConditions.java","Making the class constructor public so that this can be extended and custom Expected Conditions can be defined    **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","ghost","2020-08-09T13:32:44Z","2020-08-15T17:03:36Z"
"","7984","Unable to enable extension for firefox browser using selenium java script or java","Machine Details: Windows 10 64 bit version Firefox version: 72.0.2 AddOn: Cors-Everywhere  Java Code ```  System.setProperty(""webdriver.gecko.driver"", ""/Users/Arnav/Documents/geckodriver"");         FirefoxProfile profile = new FirefoxProfile();         profile.addExtension(new File(""/Users/Arnav/Library/Application Support/Firefox/Profiles/virapghz.default/extensions/cors-everywhere@spenibus.xpi""));         profile.setPreference(""extensions.cors-everywhere"", true);         FirefoxOptions options = new FirefoxOptions();         options.setProfile(profile);         WebDriver driver = new FirefoxDriver(options);         driver.get(""https://10.5.9.69:8080/app"");         System.out.println(driver.getTitle());         Thread.sleep(5000);          driver.quit(); ```    JavaScript Code  ``` require('geckodriver'); var FirefoxProfile = require('firefox-profile'); const assert = require('assert'); const webDriver = require('selenium-webdriver'); firefox = require(""selenium-webdriver/firefox""); describe('Checkout Google.com', function () {     let driver;     before(async function() {         let options = new firefox.Options();         options.addExtensions(""C:/Users/Arnav/AppData/Roaming/Mozilla/Firefox/Profiles/z099fmyo.default/extensions/cors-everywhere@spenibus.xpi"");         driver = new webDriver.Builder().forBrowser('firefox').setFirefoxOptions(options).build();     });     it('Search on Google', async function() {         await driver.get('https://google.com'); 		await driver.sleep(5000); 		await driver.findElement(By.name('q')).click();         await driver.findElement(By.name('q')).sendKeys('dalenguyen', Key.RETURN);         // await driver.wait(until.titleIs('dalenguyen - Google Search'), 1000);         await driver.wait(until.elementLocated(By.id('rcnt')), 50000);         await driver.findElement(By.name('q')).clear(); 		let title = await driver.getTitle();         assert.equal(title, 'dalenguyen - Google Search');                   });     after(() => driver && driver.quit()); }) ```   Observed behaviour  The CORS everywhere plugin is loaded when the firefox browser is opened using selenium but it is not enabled.    Desired behaviour  Need the CORS everwhere plugin to be enabled when launching firefox browser.  Do not mind method for a way to enable it using it in javascript or java. Any help will be appreciated.","closed","","arnavchh","2020-01-31T10:06:03Z","2020-03-10T19:50:43Z"
"","8157","Log level severe but I still get warnings in my test.","LogEntries logEntries = driver.manage().logs().get(LogType.BROWSER);         List errorLogs = logEntries.filter(Level.SEVERE);","closed","","PinkyPanda","2020-04-03T12:41:48Z","2020-05-05T21:18:15Z"
"","8592","Relax childprocess dependency","Latest version of Childprocess gem is 4.0, raise the dependency.  ### Description Newly capped at `< 5.0` (previously `< 4.0`).   ### Motivation and Context We'd like to upgrade to Childprocess 4.0 In Fedora. Fedora does not support multiple versions of gems packaged in same Fedora version.  ### Types of changes - [ ] ~~Bug fix (non-breaking change which fixes an issue)~~ - [ ] ~~New feature (non-breaking change which adds functionality)~~ - [ ] ~~Breaking change (fix or feature that would cause existing functionality to change)~~  ### Checklist - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] ~~My change requires a change to the documentation.~~ - [ ]  ~~I have updated the documentation accordingly.~~ - [ ]  ~~I have added tests to cover my changes.~~ - [ ]  All new and existing tests passed.","closed","","pvalena","2020-07-31T14:07:36Z","2020-08-02T02:32:57Z"
"","8161","Feature to generate HAR without proxy","kindly provide support to generate HAR withhout using proxy","closed","","GayuRenga","2020-04-04T09:18:18Z","2020-05-05T21:13:16Z"
"","8456","Action Class_dragAndDrop & clickAndHold with release for Draggable And Drop can't be performed in Selenium","Java Language 1. act.clickAndHold(source).pause(2000).moveToElement(target).release().build().perform(); 2.act.dragAndDrop(fromElement, toElement).build().perform();","closed","","SVallianal","2020-06-25T09:42:16Z","2021-09-05T09:36:36Z"
"","8120","Python webdriver methods not working on Edge Chromium","I‚Äôm getting an ‚Äúinvalid locator‚Äù error from the selenium webdriver when running tests on Edge Chromium. I‚Äôm using the python webdriver, the browser opens fine and goes to a page, just using google.co.uk to test.  The test works when using the XPath to find the search bar, but when I try to use the element name ‚Äòq‚Äô, the test fails and gives me this:  selenium.common.exceptions.InvalidArgumentException: Message: invalid argument: invalid locator  Edge version: 80.0.361.66  With relevant msedgedriver from https://developer.microsoft.com/en-us/microsoft-edge/tools/webdriver/  This method works: .find_element_by_xpath(self.query_field_name)  This method does not work: .find_element_by_name(‚Äòq‚Äô)  The same method works fine when I choose to run on Chrome. Is this a known issue with the new Edge browser?  Thanks.","closed","","simon-crooks","2020-03-18T16:05:40Z","2021-09-05T10:20:36Z"
"","8826","It's FileHandler.copy(File, File) now.","It's FileHandler.copy(File, File) now.  _Originally posted by @barancev in https://github.com/SeleniumHQ/selenium/issues/4919#issuecomment-338317975_  Thanks It is working now","closed","","smaranikasahu","2020-10-29T07:03:12Z","2021-09-05T08:33:54Z"
"","8825","It's FileHandler.copy(File, File) now.","It's FileHandler.copy(File, File) now.  _Originally posted by @barancev in https://github.com/SeleniumHQ/selenium/issues/4919#issuecomment-338317975_  FileHandler.copy is not working for my  I am using Selenium 3.14 JArs","closed","","smaranikasahu","2020-10-29T06:56:40Z","2021-09-05T08:33:54Z"
"","8696","Update action_chains.py","It will help user to drag from x & y coordinates and drop at under target node    **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","C-py,","Ashok-Kakade","2020-09-14T10:45:49Z","2021-01-25T14:30:04Z"
"","7934","Add support for insecure websocket proxying","It should be possible to use the Router to proxy websocket traffic to and from the node. This proxying needs to support both binary and text-based frames, since we'll use this for handling VNC traffic as well as CDP requests.","closed","I-enhancement,","shs96c","2020-01-14T15:36:01Z","2021-09-05T09:44:02Z"
"","8451","when using version 4.0.0-alpha-6ÔºåI find a problem saying that Error:java: java.lang.NoClassDefFoundError: com/google/common/graph/Traverser","Info: Information:javac 1.8.0_111 was used to compile java sources Information:2020/6/23 16:45 - Compilation completed with 1 error and 0 warnings in 2s 646ms Error:java: java.lang.NoClassDefFoundError: com/google/common/graph/Traverser dependencyÔºö                      org.seleniumhq.selenium             selenium-java             4.0.0-alpha-6","closed","","ZhunterTop1","2020-06-23T09:03:03Z","2021-09-05T09:36:38Z"
"","8452","Error:java: java.lang.NoClassDefFoundError: com/google/common/graph/Traverser","Info: Information:javac 1.8.0_111 was used to compile java sources Information:2020/6/23 16:45 - Compilation completed with 1 error and 0 warnings in 2s 646ms Error:java: java.lang.NoClassDefFoundError: com/google/common/graph/Traverser dependencyÔºö  org.seleniumhq.selenium selenium-java 4.0.0-alpha-6","closed","","ZhunterTop1","2020-06-23T09:08:23Z","2021-09-05T09:36:38Z"
"","8336","Selenium loads an URL using a HTTP POST request POST /session/:sessionId/url but in doc it is written as GET","In official selenium [doc](https://www.javadoc.io/doc/org.seleniumhq.selenium/selenium-api/latest/org/openqa/selenium/WebDriver.html#get(java.lang.String)), for get() method below is written :-  Load a new web page in the current browser window. This is done using an HTTP GET operation, and the method will block until the load is complete (with the default 'page load strategy'.    I think it is a type mistake as per [GitHub ](https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#sessionsessionidurl )page, it should be a POST and that works as well.","closed","","amodmahajan2016","2020-05-23T04:17:47Z","2020-06-24T20:54:25Z"
"","7975","Active Element and Window Handle","Im using WebDriver and Chrome  Let's say that I have 3 chrome windows opened.  How do I go about finding out the WindowHandle associated to the current active element of the web driver. I am looking at the window handles and they look like gibberish to me.","closed","","danielricci","2020-01-28T14:06:14Z","2020-03-10T19:47:05Z"
"","7973","How to associate a window handle to an active element","Im using WebDriver and Chrome  Let's say that I have 3 chrome windows opened.  How do I go about finding out the WindowHandle associated to the current active element of the web driver. I am looking at the window handles and they look like gibberish to me.","closed","","danielricci","2020-01-28T14:03:32Z","2020-02-28T07:12:18Z"
"","7972","How to associate a window handle to an active element","Im using WebDriver and Chrome  Let's say that I have 3 chrome windows opened.  How do I go about finding out the WindowHandle associated to the current active element of the web driver. I am looking at the window handles and they look like gibberish to me.","closed","","danielricci","2020-01-28T13:52:13Z","2020-02-28T07:12:22Z"
"","8353","Update README: Bazel is one of the requirements","If I'm not mistaken Bazel is a requirement, isn't it?  I was trying to build with `./go selenium-java` but I was getting the error  > at org/jruby/RubyProcess.java:1567 - No such file or directory - bazel","closed","","alb-i986","2020-05-27T23:09:09Z","2020-05-28T14:40:26Z"
"","8708","SessionNotCreatedException: with firefox 80.0+","I've upgraded firefox to 80.0 and now to 80.0.1 and started to receive error:  ``` >>> from selenium import webdriver >>> webdriver.Firefox() Traceback (most recent call last):   File """", line 1, in    File ""/home/peter/.local/lib/python3.7/site-packages/selenium/webdriver/firefox/webdriver.py"", line 191, in __init__     keep_alive=True)   File ""/home/peter/.local/lib/python3.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 184, in __init__     self.start_session(capabilities, browser_profile)   File ""/home/peter/.local/lib/python3.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 281, in start_session     response = self.execute(Command.NEW_SESSION, parameters)   File ""/home/peter/.local/lib/python3.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 350, in execute     self.error_handler.check_response(response)   File ""/home/peter/.local/lib/python3.7/site-packages/selenium/webdriver/remote/errorhandler.py"", line 240, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.SessionNotCreatedException: Message: Unable to find a matching set of capabilities  ```  My distribution is Gentoo Linux while I found similar reports for Debian: https://stackoverflow.com/questions/63820763/debian-10-selenium-firefox-driver-incompatible-with-firefox-esr/63934063  I've tried selenium 3.141.0-r1 and now I built from git, selenium-4.0.0.a6-py2.py3-none-any.whl, and still have the same problem.  I've tried to update geckodriver to 0.27.0, still same issue (binary from https://github.com/mozilla/geckodriver/releases).  FF downgrade to 68.12.0 fixed this problem.   OS: Gentoo Linux, Debian 10 Browser: Firefox  Browser version: 80.0.1 geckodriver 0.26.0 Language Bindings version: python 3.7","closed","","pva","2020-09-17T09:56:53Z","2021-09-05T08:34:59Z"
"","8141","Small refactoring to RemoteWebDriver: remove code duplication in a constructor","I've just noticed this small code duplication, and thought to open a PR.  I haven't had the chance to run the tests unfortunately. I followed the setup instructions for bazel but had some troubles. I'm on osx 10.10, which is deprecated, so maybe that's the problem.  Cheers  ### Description Clean code: small refactoring to RemoteWebDriver to remove code duplication in the constructor that takes only a Capabilities object.  ### Types of changes   - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change) - [x] Refactoring  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","C-java,","alb-i986","2020-03-27T22:09:28Z","2021-04-03T22:54:05Z"
"","8611","http.client.RemoteDisconnected: Remote end closed connection without response error using driver.quit() of Selenium Python","I'm using:  - Python 3.8 - Selenium 3.141.0 - Windows 10 - Chrome:84.0.4147.105 - Chromedriver:84.0.4147.30  Here is my code:  ``` from selenium import webdriver  driver = webdriver.Chrome(""D:/webdriver/chromedriver.exe"") driver.get(""https://github.com"") driver.quit() ``` When executing `driver.quit()`, the exception raise:  ``` Traceback (most recent call last):   File ""C:/Users/taiping/Desktop/data_test/selenium_test.py"", line 5, in      driver.quit()   File ""D:\python3.8\lib\site-packages\selenium\webdriver\chrome\webdriver.py"", line 158, in quit     self.service.stop()   File ""D:\python3.8\lib\site-packages\selenium\webdriver\common\service.py"", line 151, in stop     self.send_remote_shutdown_command()   File ""D:\python3.8\lib\site-packages\selenium\webdriver\common\service.py"", line 127, in send_remote_shutdown_command     url_request.urlopen(""%s/shutdown"" % self.service_url)   File ""D:\python3.8\lib\urllib\request.py"", line 222, in urlopen     return opener.open(url, data, timeout)   File ""D:\python3.8\lib\urllib\request.py"", line 525, in open     response = self._open(req, data)   File ""D:\python3.8\lib\urllib\request.py"", line 542, in _open     result = self._call_chain(self.handle_open, protocol, protocol +   File ""D:\python3.8\lib\urllib\request.py"", line 502, in _call_chain     result = func(*args)   File ""D:\python3.8\lib\urllib\request.py"", line 1379, in http_open     return self.do_open(http.client.HTTPConnection, req)   File ""D:\python3.8\lib\urllib\request.py"", line 1354, in do_open     r = h.getresponse()   File ""D:\python3.8\lib\http\client.py"", line 1332, in getresponse     response.begin()   File ""D:\python3.8\lib\http\client.py"", line 303, in begin     version, status, reason = self._read_status()   File ""D:\python3.8\lib\http\client.py"", line 272, in _read_status     raise RemoteDisconnected(""Remote end closed connection without"" http.client.RemoteDisconnected: Remote end closed connection without response ``` But this code has no error on my Macbook. What's the problem?  I open the debugger and found that every `HTTPConnection` object have been set the system wide http proxy. And the `driver.quit` method will send `http://localhost:59717/shutdown` to chrome to perform quit. So I guess the shutdown url is actually sent to the proxy server, not the local browser.  And I try to use fiddler to check the request informations. There is another problem that I can not decode the https requests because of some certificates configs. So I change the argument of `driver.get()` to an internal web url of my company. The result is : If I close fiddler, `RemoteDisconnected` error raise again. And if I open fiddler, all works.  What happened? I know fiddler set the proxy to 127.0.0.1:8888, so I think there could be something wrong with the proxy settings. But I can not fix it.  Am I right? And how to fix this problem?","closed","","mrd2242","2020-08-05T13:20:27Z","2021-09-05T08:37:33Z"
"","8223","upload file selenium python without input","I'm trying to upload files using selenium, but there is no input on the website that I want to upload files to. is there is another way to upload the files? and if the input is hidden, how I can get it from inspect?   I can't attach the website, because it needs a user name and password to log in.","closed","","Yousef1986","2020-04-21T10:05:50Z","2021-09-05T10:20:34Z"
"","8650","Setting Chrome flags with headless doesn't seem to work","I'm trying to set the flags `same-site-by-default-cookies@2` and `cookies-without-same-site-must-be-secure@2` as the defaults recently changed, causing some of my tests to fail.  If I do:  ```ruby Capybara.register_driver :headless_chrome do |app|   capabilities = Selenium::WebDriver::Remote::Capabilities.chrome(     'goog:chromeOptions' => {         args: ['verbose', 'disable-gpu', 'no-sandbox', 'disable-dev-shm-usage', 'window-size=1400,1400'],         # Turn off SameSite cookies requirement as that requires HTTPS.         localState: { ""browser.enabled_labs_experiments"" => ['same-site-by-default-cookies@2','cookies-without-same-site-must-be-secure@2'] },     },     'goog:loggingPrefs' => { browser: 'ALL' },   )    Capybara::Selenium::Driver.new app,                                  browser: :chrome,                                  desired_capabilities: capabilities end ```  Then it works. If I go to chrome:flags, I can see they have been changed. However, if if I use headless mode:  ```ruby Capybara.register_driver :headless_chrome do |app|   capabilities = Selenium::WebDriver::Remote::Capabilities.chrome(     'goog:chromeOptions' => {         args: ['verbose', 'disable-gpu', 'no-sandbox', 'disable-dev-shm-usage', 'window-size=1400,1400', 'headless'],         # Turn off SameSite cookies requirement as that requires HTTPS.         localState: { ""browser.enabled_labs_experiments"" => ['same-site-by-default-cookies@2','cookies-without-same-site-must-be-secure@2'] },     },     'goog:loggingPrefs' => { browser: 'ALL' },   )    Capybara::Selenium::Driver.new app,                                  browser: :chrome,                                  desired_capabilities: capabilities end ```  Then changing the flags doesn't seem to take effect; I get the same result in my test as before I added the flags. (Not sure how to demonstrate the flags aren't applied in headless mode.)  ## Environment  OS: Ubuntu 20.04 Browser: Chrome Browser version: 85.0.4183.83 Browser Driver version: ChromeDriver 85.0.4183.83 Language Bindings version: Ruby 2.6.6","closed","","JasonBarnabe","2020-08-27T15:13:29Z","2021-09-05T08:37:18Z"
"","8639","Send Selenium emoji with C # project","I'm trying to send emojis through Selenium, but I can't.  My Project is C #, Selenium webdriver, Chromedriver.  My code:   string Message = ""üòÄüëç"";  driver.FindElement(By.XPath(""//*[@id='_glo']/div"")).SendKeys(Message);","closed","","MillesC","2020-08-22T12:12:40Z","2021-09-05T08:37:22Z"
"","8254","Selenium Message: no such element: Unable to locate element:","I'm solving this for 1 week from now, it's challenge to me to locate 1 button in the website that I want to access. I had tried many ways xpath, actionchains, none of them works. anyone to help me.","closed","","ron51593","2020-04-28T07:45:03Z","2021-09-05T10:20:23Z"
"","8416","Devtools Network.setRequestInterception Times out? C#","I'm intercepting images using the Network.setRequestInterception command in the protocol. After a while, chrome will just stop intercepting the images. It works perfectly for the first while. Is there anything that I could do to fix this? Is there an event I can capture to reinstate the connection? If I do the same with Fetch.enable, I get the same results except it doesn't stop capturing after a while. But Fetch.enable isn't in the C# devtools selenium library. Thank you.","closed","","Zanga1","2020-06-13T02:15:55Z","2021-09-05T08:06:40Z"
"","8307","Get the locator from IWebElement","I'm doing the following:  ``` var locators = new ByChained(By.XPath(""//div[@id='historyModal']//div[@class='modal-body']"", By.ClassName(""historyItem"")); var historyValues = WebDriver.FindElements(locators);       foreach (var historyValue in historyValues) {       if (!TrySelectHistory(historyValue))       {            // do something       } }       private bool TrySelectHistory(IWebElement historyValue) {     var historyValueChildren = historyValue.FindElements(By.XPath(""./*""));          if (historyValueChildren.Count < 2) return false;           var selectButton = historyValueChildren[1].FindElement(By.TagName(""button"")); // would be great if I could get the locator of this element           TestHelper.WaitForLoading(element: selectButton); // so I would pass the locator here instead of the element           TestHelper.JavaScriptClick(element: selectButton); // so I would pass the locator here instead of the element           return true; } ```  As can be seen in the code, the `selectButton` I get from nested sequence of previous `By`. I would like to get the locator for this element, in order to prevent `StaleElementReferenceException`. Because in Selenium once a WebElement goes stale, it always stays stale, however, a locator could be used to keep trying to find the element until it gets a non-stale element.","closed","","onkarjit","2020-05-14T14:45:57Z","2021-09-05T10:02:51Z"
"","7985","selenium web-driver with electron","I'm creating a bot with selenium web-driver to automate firefox. and I'm using electron js to create the desktop app.  I know that selenium can only control a window in focus. but I have noticed that selenium doesn't click some buttons sometimes after I minimize the application - not firefox-  I don't know why? is this a bug in selenium web-driver or electron?  if you know anything about this please leave a comment.","closed","","rachidelaid","2020-02-01T10:09:05Z","2020-03-10T19:48:58Z"
"","8026","Open Firefox On Android Device","I want to invoke firefox browser in Android device, i wrote following code but it is invoking my desktop browser. Instead i want to open mobile firefox browser.  FirefoxOptions options = new FirefoxOptions(); options.SetPreference(""platformName"", ""android"");  options.SetPreference(""deviceName"", ""LG8IA0GE822I8G6A"");  options.SetPreference(CapabilityType.Version, ""7.0"");  options.SetPreference(""androidPackage"", ""org.mozilla.firefox"");  IWebDriver driverOne = new FirefoxDriver(@""Path to gecko Driver"", options, TimeSpan.FromSeconds(120));  driver.Navigate().GoToUrl(""http://www.google.com"");","closed","","mulanirubi","2020-02-14T04:59:09Z","2020-03-17T14:06:58Z"
"","8148","Cannot open URL when doing in headless mode.","I want to deploy my Python script on Ubuntu server and call it via cron. On my local Windows machine, I tried headless and it is working perfectly fine, I can even take screenshots in it. But running the script on the server results in errors like the element cannot be found.   Error Reproduced: ``` File ""DomainScraper.py"", line 30, in      login = driver.find_element_by_xpath('//a[@href=""'+login_url+'""]').click()   File ""/home/ubuntu/.local/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py"", line 394, in find_element_by_xpath     return self.find_element(by=By.XPATH, value=xpath)   File ""/home/ubuntu/.local/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py"", line 978, in find_element     'value': value})['value']   File ""/home/ubuntu/.local/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py"", line 321, in execute     self.error_handler.check_response(response)   File ""/home/ubuntu/.local/lib/python3.6/site-packages/selenium/webdriver/remote/errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {""method"":""xpath"",""selector"":""//a[@href=""https://account.domaintools.com/log-in/?r=https%3A%2F%2Freversewhois.domaintools.com%2F%3Frefine""]""}   (Session info: headless chrome=81.0.4044.17) ```  Actual code deployed ``` #imports...  options = Options() options.add_argument('--incognito') options.add_argument('--headless') options.add_argument('--no-sandbox') options.add_argument('--disable-extensions') options.add_argument('--disable-infobars') options.add_argument('--allow-running-insecure-content') driver = webdriver.Chrome(options=options) driver.delete_all_cookies()  driver.implicitly_wait(3) url = ""https://reversewhois.domaintools.com/?refine#q=%5B%5B%5B%22whois%22%2C%222%22%2C%22VerifiedID%40SG-Mandatory%22%5D%5D%5D"" driver.get(url) driver.save_screenshot(""sample.png"") login_url = 'https://account.domaintools.com/log-in/?r=https%3A%2F%2Freversewhois.domaintools.com%2F%3Frefine' login = driver.find_element_by_xpath('//a[@href=""'+login_url+'""]').click()  #if you want to test if the URL, you can skip this part here username = driver.find_element_by_id(""username"") password = driver.find_element_by_id(""password"") username.send_keys(""**********************"") password.send_keys(""***************"") # time.sleep(5) driver.find_element_by_id(""password"").send_keys(Keys.ENTER)  pageNumber = 0 while True:     driver.implicitly_wait(3)     driver.get('https://reversewhois.domaintools.com/?ajax=mReverseWhois&call=ajaxGetPreviewPage&q=%5B%5B%5B%22whois%22%2C%222%22%2C%22VerifiedID%40SG-Mandatory%22%5D%5D%5D&o='+str(pageNumber))     time.sleep(3)     pre = driver.find_element_by_tag_name(""pre"").text     data = json.loads(pre)     if data['body']:         table = data['body']         tables = pd.read_html(table,skiprows=1)         df = tables[-1]         df.to_csv('Domains.csv', mode='a', sep=',',index=False)         print(df.to_string(index=False))         pageNumber += 1         # print(pageNumber)         continue     else:         break ```  I also tried installing  ``` sudo apt install -y xvfb pip install pyvirtualdisplay ```  And added this ``` from pyvirtualdisplay import Display  display = Display(visible=0, size=(800, 600)) display.start() ```  And when I took a screenshot, this is what i got. ![image](https://user-images.githubusercontent.com/38340124/77976875-c17c6180-7330-11ea-8e78-d056e0ab2c92.png)","closed","","VinceSanityyy","2020-03-31T01:20:15Z","2020-05-05T21:23:00Z"
"","8677","npm WARN tar EPERM: operation not permitted, open ...","I use **protractor** in my project that uses **selenium-webdriver** dependency. The problem is when I try to install project dependencies on Windows 10 x64 OS I get errors:   ``` npm WARN tar EPERM: operation not permitted, open 'C:\Users\...\node_modules\.staging\selenium-webdriver-6ef0540e\safari.js' npm WARN tar EPERM: operation not permitted, open 'C:\Users\...\node_modules\.staging\selenium-webdriver-6ef0540e\opera.js' npm WARN tar EPERM: operation not permitted, open 'C:\Users\...\node_modules\.staging\@types\selenium-webdriver-0bde18a7\opera.d.ts' npm WARN tar EPERM: operation not permitted, open 'C:\Users\...\node_modules\.staging\@types\selenium-webdriver-0bde18a7\safari.d.ts' ``` And later when I tried to build production version of my project it fails again saying it can't find these scripts: **opera.js** and **safari.js**.  I tried to remove and reinstall `node_modules`, run **cmd.exe** with Administrator rights, I even reinstalled a whole **Node.js** but a nothing helped. I asked for help on [StackOverflow.com](https://stackoverflow.com/questions/63744320/cannot-find-module-opera-or-safari-or-its-corresponding-type-declaration), there is more details about my problem.  Where can the problem be? Or how can I fix it without a manual deleting of all imports of these scripts?","closed","","ghostman2013","2020-09-07T10:02:43Z","2021-09-05T08:36:04Z"
"","8589","selenium.common.exceptions.SessionNotCreatedException: Message: Unable to find a matching set of capabilities","i tryed this one:  ``` from selenium import webdriver from selenium.webdriver.firefox.firefox_binary import FirefoxBinary binary = FirefoxBinary('/usr/lib/firefox-esr/firefox-bin') driver = webdriver.Firefox(executable_path=""/usr/local/bin/geckodriver"") driver.get(""http://www.google.com"") print(driver.title) ```  after i tryed this one:  ``` from selenium import webdriver  driver = webdriver.Firefox() driver.get('https://google.com') ```  whatever i do i get this error:  ``` Traceback (most recent call last):   File ""/home/azamet/Belgeler/Projelerim/main.py"", line 4, in      driver = webdriver.Firefox(executable_path=""/usr/local/bin/geckodriver"")   File ""/home/azamet/.local/lib/python3.8/site-packages/selenium/webdriver/firefox/webdriver.py"", line 158, in __init__     RemoteWebDriver.__init__(   File ""/home/azamet/.local/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py"", line 154, in __init__     self.start_session(desired_capabilities, browser_profile)   File ""/home/azamet/.local/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py"", line 243, in start_session     response = self.execute(Command.NEW_SESSION, parameters)   File ""/home/azamet/.local/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py"", line 312, in execute     self.error_handler.check_response(response)   File ""/home/azamet/.local/lib/python3.8/site-packages/selenium/webdriver/remote/errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.SessionNotCreatedException: Message: Unable to find a matching set of capabilities ```  i tryed selenium 3.11.0 but result same! this is Mozilla Firefox 68.10.0esr which was working everytime but after fresh installing linux this happens to me :( i also tryed to fresh install the linux twice :D but nothing changes ... now my selenium version is: 4.0.0a1 geckodriver version: geckodriver 0.27.0","closed","","azamet90","2020-07-31T00:50:11Z","2021-09-05T09:02:49Z"
"","8596","is this an issue or question i dont know?","i tryed everything i did many researches and what i tryed was: proxy user agent geckodriver ( is no more working after update i dont know why thats the reson im now on chromedriver) and yeah chromedriver...  if i try to register discord.com using chromedriver the recaptcha audio download button is giving me 404 on audio download page :-/ im new on python thats the reason im not so good on solving problems like you people and im asking here how i can fix this problem? thanks!","closed","","azamet90","2020-08-03T12:19:45Z","2021-09-05T09:02:48Z"
"","8397","zoom out is not working in selenium.","I tried to zoom out in selenium using different key combination but it's not working at. Any idea?  I tried below options OS:mac Browser :Chrome(83) ChromeDriver: 83 Selenium: 4 from selenium.webdriver.common.keys import Keys from selenium.webdriver.common.action_chains import ActionChains import time webdriver = webdriver.Chrome()  webdriver.get(""https://google.com"") #option 1 el = webdriver.find_element_by_tag_name('body') el.send_keys(Keys.COMMAND + Keys.SHIFT +'+') el.send_keys(Keys.COMMAND+'+')  time.sleep(5) #option 2 action = ActionChains(webdriver) action.send_keys(Keys.COMMAND).send_keys(Keys.SHIFT).send_keys('+').perform() action.key_down(Keys.COMMAND).send_keys('+').release().perform()  #option 3 ActionChains(webdriver).key_down(Keys.COMMAND).send_keys('+').key_up(Keys.COMMAND).perform()","closed","","aditya123456","2020-06-07T19:10:38Z","2021-09-11T00:05:15Z"
"","8432","chrome does not save the downloaded file to specified location","I tried the below code, but the zip file is still getting saved to the downloads folder:  var chromeCapabilities = webdriver.Capabilities.chrome(); var chromeOptions = {     'prefs': {""download.default_directory"":""C:/Raksha""} }; chromeCapabilities.set('chromeOptions', chromeOptions); var driver = new webdriver.Builder()       .withCapabilities(chromeCapabilities)       .build();","closed","","raksha92","2020-06-17T12:27:49Z","2021-09-05T09:36:43Z"
"","8273","Expected to read a START_MAP but instead have: END. Last 0 characters","I ran hub and node like this `java -jar selenium-server-standalone-3.141.59.jar -role hub -debug` `java -jar selenium-server-standalone-3.141.59.jar -role node  -nodeConfig nodeConfig1.json -hub http://localhost:4444/grid/register`  nodeConfig1.json ```json {   ""capabilities"": [     {       ""browserName"": ""android"",       ""maxInstances"": 1,       ""deviceName"": ""Pixel2"",       ""version"": ""9.0"",       ""udid"": ""emulator-5554"",       ""platform"": ""MAC""     }   ],   ""cleanUpCycle"": 2000,   ""timeout"": 30000,   ""port"": 24487,   ""host"": ""192.168.1.9"",   ""register"": true,   ""hubPort"": 4444,   ""maxSession"": 5 } ```  and here is setup.js ```javascript /* eslint-disable */ require(""colors""); const webDriver = require(""wd""); const expect = require(""chai"").expect; const chai = require('chai'); const {assert} = chai; const asserts = webDriver.asserters; const emulatorDriver = webDriver.remote('http://localhost:4444/wd/hub', 'promiseChainRemote');  const DEFAULT_WAIT_TIME = 20000; const SHORT_TIME = 1000; require(""./logging"").configure(emulatorDriver); const emulatorConfiguration = {     ""platformName"": ""Android"",      ""browserName"": ""android"",       ""maxInstances"": 1,       ""deviceName"": ""Pixel2"",       ""udid"": ""emulator-5554"",       ""platform"": ""MAC"",       ""app"": ""test-app.apk"" };  module.exports = { emulatorConfiguration } ```  and emulatorConfiguration used like this  ```javascript await emulatorDriver.init(emulatorConfiguration); ``` I got this error  ``` Cannot extract a capabilities from the request:  ``` and here is the complete log  ``` 17:39:33.499 DEBUG [ActiveTestSessions.getExistingSession] - Session [timeouts] not available and is not among the last 1000 terminated sessions. Active sessions are[] 17:39:33.499 DEBUG [ActiveTestSessions.getExistingSession] - Session [orientation] not available and is not among the last 1000 terminated sessions. Active sessions are[] 17:39:33.506 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {app: /Users/doaa/projects/NIS-e2..., browserName: android, deviceName: Pixel_ASHTAR_HPEmulator, maxInstances: 1, platform: MAC, platformName: android, udid: emulator-5554} 17:39:33.506 DEBUG [ProxySet.getNewSession] - Available nodes: [http://192.168.1.9:24487] 17:39:33.506 DEBUG [BaseRemoteProxy.getNewSession] - Trying to create a new session on node http://192.168.1.9:24487 17:39:33.507 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=7898bc45-ba44-4ce9-ac12-b3b3ed44e103, seleniumProtocol=WebDriver, browserName=android, maxInstances=1, platformName=MAC, udid=emulator-5554, deviceName=Pixel_ASHTAR_HPEmulator, version=9.0, platform=MAC} 17:39:33.517 DEBUG [ActiveTestSessions.getExistingSession] - Session [element] not available and is not among the last 1000 terminated sessions. Active sessions are[a7fc0958-31ab-4261-9536-efe9d36a0072 (int. key, remote not contacted yet.)] 17:39:33.517 DEBUG [ActiveTestSessions.getExistingSession] - Session [element] not available and is not among the last 1000 terminated sessions. Active sessions are[a7fc0958-31ab-4261-9536-efe9d36a0072 (int. key, remote not contacted yet.)] 17:39:33.535 DEBUG [ActiveTestSessions.getExistingSession] - Session [orientation] not available and is not among the last 1000 terminated sessions. Active sessions are[a7fc0958-31ab-4261-9536-efe9d36a0072 (int. key, remote not contacted yet.)] 17:39:33.535 DEBUG [ActiveTestSessions.getExistingSession] - Session [timeouts] not available and is not among the last 1000 terminated sessions. Active sessions are[a7fc0958-31ab-4261-9536-efe9d36a0072 (int. key, remote not contacted yet.)] 17:39:33.539 DEBUG [ActiveTestSessions.getExistingSession] - Session [element] not available and is not among the last 1000 terminated sessions. Active sessions are[a7fc0958-31ab-4261-9536-efe9d36a0072 (int. key, remote not contacted yet.)] 17:39:33.544 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {app: /Users/doaa/projects/NIS-e2..., browserName: android, deviceName: Pixel_ASHTAR_HPEmulator, maxInstances: 1, platform: MAC, platformName: android, udid: emulator-5554} 17:39:33.545 DEBUG [ActiveTestSessions.getExistingSession] - Session [appium] not available and is not among the last 1000 terminated sessions. Active sessions are[a7fc0958-31ab-4261-9536-efe9d36a0072 (int. key, remote not contacted yet.)] 2020-05-05 17:39:33.545:WARN:osjs.HttpChannel:qtp473581465-46: /wd/hub/session java.io.IOException: org.openqa.grid.common.exception.GridException: Cannot extract a capabilities from the request:  17:39:33.545 DEBUG [ProxySet.getNewSession] - Available nodes: [http://192.168.1.9:24487] 17:39:33.545 DEBUG [BaseRemoteProxy.getNewSession] - Trying to create a new session on node http://192.168.1.9:24487 17:39:33.560 DEBUG [ActiveTestSessions.getExistingSession] - Session [timeouts] not available and is not among the last 1000 terminated sessions. Active sessions are[a7fc0958-31ab-4261-9536-efe9d36a0072 (int. key, remote not contacted yet.)] 17:39:33.560 DEBUG [ActiveTestSessions.getExistingSession] - Session [orientation] not available and is not among the last 1000 terminated sessions. Active sessions are[a7fc0958-31ab-4261-9536-efe9d36a0072 (int. key, remote not contacted yet.)] 17:39:33.562 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {app: /Users/doaa/projects/NIS-e2..., browserName: android, deviceName: Pixel_ASHTAR_HPEmulator, maxInstances: 1, platform: MAC, platformName: android, udid: emulator-5554} 17:39:33.562 DEBUG [ActiveTestSessions.getExistingSession] - Session [appium] not available and is not among the last 1000 terminated sessions. Active sessions are[a7fc0958-31ab-4261-9536-efe9d36a0072 (int. key, remote not contacted yet.)] 17:39:33.563 DEBUG [ProxySet.getNewSession] - Available nodes: [http://192.168.1.9:24487] 17:39:33.564 DEBUG [BaseRemoteProxy.getNewSession] - Trying to create a new session on node http://192.168.1.9:24487 17:39:33.564 DEBUG [ProxySet.getNewSession] - Available nodes: [http://192.168.1.9:24487] 17:39:33.564 DEBUG [BaseRemoteProxy.getNewSession] - Trying to create a new session on node http://192.168.1.9:24487 17:39:33.566 DEBUG [ActiveTestSessions.getExistingSession] - Session [element] not available and is not among the last 1000 terminated sessions. Active sessions are[a7fc0958-31ab-4261-9536-efe9d36a0072 (int. key, remote not contacted yet.)] 17:39:33.573 DEBUG [ActiveTestSessions.getExistingSession] - Session [appium] not available and is not among the last 1000 terminated sessions. Active sessions are[a7fc0958-31ab-4261-9536-efe9d36a0072 (int. key, remote not contacted yet.)] 2020-05-05 17:39:33.573:WARN:osjs.HttpChannel:qtp473581465-227: /wd/hub/session java.io.IOException: org.openqa.grid.common.exception.GridException: Cannot extract a capabilities from the request:  17:39:33.573 DEBUG [ActiveTestSessions.getExistingSession] - Session [timeouts] not available and is not among the last 1000 terminated sessions. Active sessions are[a7fc0958-31ab-4261-9536-efe9d36a0072 (int. key, remote not contacted yet.)] 17:39:33.573 DEBUG [ActiveTestSessions.getExistingSession] - Session [element] not available and is not among the last 1000 terminated sessions. Active sessions are[a7fc0958-31ab-4261-9536-efe9d36a0072 (int. key, remote not contacted yet.)] 17:39:33.574 DEBUG [ActiveTestSessions.getExistingSession] - Session [orientation] not available and is not among the last 1000 terminated sessions. Active sessions are[a7fc0958-31ab-4261-9536-efe9d36a0072 (int. key, remote not contacted yet.)] 17:39:33.574 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {app: /Users/doaa/projects/NIS-e2..., browserName: android, deviceName: Pixel_ASHTAR_HPEmulator, maxInstances: 1, platform: MAC, platformName: android, udid: emulator-5554} 17:39:33.575 DEBUG [ProxySet.getNewSession] - Available nodes: [http://192.168.1.9:24487] 17:39:33.575 DEBUG [BaseRemoteProxy.getNewSession] - Trying to create a new session on node http://192.168.1.9:24487 17:39:33.575 DEBUG [ProxySet.getNewSession] - Available nodes: [http://192.168.1.9:24487] 17:39:33.575 DEBUG [BaseRemoteProxy.getNewSession] - Trying to create a new session on node http://192.168.1.9:24487 17:39:33.575 DEBUG [ProxySet.getNewSession] - Available nodes: [http://192.168.1.9:24487] 17:39:33.575 DEBUG [BaseRemoteProxy.getNewSession] - Trying to create a new session on node http://192.168.1.9:24487 17:39:33.606 DEBUG [ActiveTestSessions.getExistingSession] - Session [appium] not available and is not among the last 1000 terminated sessions. Active sessions are[a7fc0958-31ab-4261-9536-efe9d36a0072 (int. key, remote not contacted yet.)] 17:39:33.606 DEBUG [ActiveTestSessions.getExistingSession] - Session [appium] not available and is not among the last 1000 terminated sessions. Active sessions are[a7fc0958-31ab-4261-9536-efe9d36a0072 (int. key, remote not contacted yet.)] 2020-05-05 17:39:33.606:WARN:osjs.HttpChannel:qtp473581465-227: /wd/hub/session java.io.IOException: org.openqa.grid.common.exception.GridException: Cannot extract a capabilities from the request:  17:39:33.622 DEBUG [ActiveTestSessions.getExistingSession] - Session [timeouts] not available and is not among the last 1000 terminated sessions. Active sessions are[a7fc0958-31ab-4261-9536-efe9d36a0072 (int. key, remote not contacted yet.)] 17:39:33.622 DEBUG [ActiveTestSessions.getExistingSession] - Session [orientation] not available and is not among the last 1000 terminated sessions. Active sessions are[a7fc0958-31ab-4261-9536-efe9d36a0072 (int. key, remote not contacted yet.)] 17:39:33.622 DEBUG [ActiveTestSessions.getExistingSession] - Session [element] not available and is not among the last 1000 terminated sessions. Active sessions are[a7fc0958-31ab-4261-9536-efe9d36a0072 (int. key, remote not contacted yet.)] 17:39:33.623 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {app: /Users/doaa/projects/NIS-e2..., browserName: android, deviceName: Pixel_ASHTAR_HPEmulator, maxInstances: 1, platform: MAC, platformName: android, udid: emulator-5554} 17:39:33.623 DEBUG [ProxySet.getNewSession] - Available nodes: [http://192.168.1.9:24487] 17:39:33.623 DEBUG [BaseRemoteProxy.getNewSession] - Trying to create a new session on node http://192.168.1.9:24487 17:39:33.623 DEBUG [ProxySet.getNewSession] - Available nodes: [http://192.168.1.9:24487] 17:39:33.623 DEBUG [BaseRemoteProxy.getNewSession] - Trying to create a new session on node http://192.168.1.9:24487 17:39:33.623 DEBUG [ProxySet.getNewSession] - Available nodes: [http://192.168.1.9:24487] 17:39:33.623 DEBUG [BaseRemoteProxy.getNewSession] - Trying to create a new session on node http://192.168.1.9:24487 17:39:33.624 DEBUG [ProxySet.getNewSession] - Available nodes: [http://192.168.1.9:24487] 17:39:33.624 DEBUG [BaseRemoteProxy.getNewSession] - Trying to create a new session on node http://192.168.1.9:24487 2020-05-05 17:39:33.632:WARN:osjs.HttpChannel:qtp473581465-200: /wd/hub/session java.io.IOException: org.openqa.grid.common.exception.GridException: Cannot extract a capabilities from the request:  17:39:33.631 DEBUG [ActiveTestSessions.getExistingSession] - Session [appium] not available and is not among the last 1000 terminated sessions. Active sessions are[a7fc0958-31ab-4261-9536-efe9d36a0072 (int. key, remote not contacted yet.)] 17:39:33.632 DEBUG [ActiveTestSessions.getExistingSession] - Session [appium] not available and is not among the last 1000 terminated sessions. Active sessions are[a7fc0958-31ab-4261-9536-efe9d36a0072 (int. key, remote not contacted yet.)] 17:39:33.645 DEBUG [ActiveTestSessions.getExistingSession] - Session [timeouts] not available and is not among the last 1000 terminated sessions. Active sessions are[a7fc0958-31ab-4261-9536-efe9d36a0072 (int. key, remote not contacted yet.)] 17:39:33.645 DEBUG [ActiveTestSessions.getExistingSession] - Session [orientation] not available and is not among the last 1000 terminated sessions. Active sessions are[a7fc0958-31ab-4261-9536-efe9d36a0072 (int. key, remote not contacted yet.)] 17:39:33.645 DEBUG [ActiveTestSessions.getExistingSession] - Session [element] not available and is not among the last 1000 terminated sessions. Active sessions are[a7fc0958-31ab-4261-9536-efe9d36a0072 (int. key, remote not contacted yet.)] 17:39:33.646 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {app: /Users/doaa/projects/NIS-e2..., browserName: android, deviceName: Pixel_ASHTAR_HPEmulator, maxInstances: 1, platform: MAC, platformName: android, udid: emulator-5554} 17:39:33.646 DEBUG [ProxySet.getNewSession] - Available nodes: [http://192.168.1.9:24487] 17:39:33.646 DEBUG [BaseRemoteProxy.getNewSession] - Trying to create a new session on node http://192.168.1.9:24487 17:39:33.646 DEBUG [ProxySet.getNewSession] - Available nodes: [http://192.168.1.9:24487] 17:39:33.646 DEBUG [BaseRemoteProxy.getNewSession] - Trying to create a new session on node http://192.168.1.9:24487 17:39:33.646 DEBUG [ProxySet.getNewSession] - Available nodes: [http://192.168.1.9:24487] 17:39:33.646 DEBUG [BaseRemoteProxy.getNewSession] - Trying to create a new session on node http://192.168.1.9:24487 17:39:33.646 DEBUG [ProxySet.getNewSession] - Available nodes: [http://192.168.1.9:24487] 17:39:33.647 DEBUG [BaseRemoteProxy.getNewSession] - Trying to create a new session on node http://192.168.1.9:24487 17:39:33.647 DEBUG [ProxySet.getNewSession] - Available nodes: [http://192.168.1.9:24487] 17:39:33.647 DEBUG [BaseRemoteProxy.getNewSession] - Trying to create a new session on node http://192.168.1.9:24487 17:39:33.659 DEBUG [ActiveTestSessions.getExistingSession] - Session [appium] not available and is not among the last 1000 terminated sessions. Active sessions are[a7fc0958-31ab-4261-9536-efe9d36a0072 (int. key, remote not contacted yet.)] 17:39:33.659 DEBUG [ActiveTestSessions.getExistingSession] - Session [appium] not available and is not among the last 1000 terminated sessions. Active sessions are[a7fc0958-31ab-4261-9536-efe9d36a0072 (int. key, remote not contacted yet.)] 2020-05-05 17:39:33.661:WARN:osjs.HttpChannel:qtp473581465-246: /wd/hub/session java.io.IOException: org.openqa.grid.common.exception.GridException: Cannot extract a capabilities from the request:  17:39:33.671 DEBUG [ProxySet.getNewSession] - Available nodes: [http://192.168.1.9:24487] 17:39:33.672 DEBUG [BaseRemoteProxy.getNewSession] - Trying to create a new session on node http://192.168.1.9:24487 17:39:33.672 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=7898bc45-ba44-4ce9-ac12-b3b3ed44e103, seleniumProtocol=WebDriver, browserName=android, maxInstances=1, platformName=MAC, udid=emulator-5554, deviceName=Pixel_ASHTAR_HPEmulator, version=9.0, platform=MAC} 17:39:33.672 DEBUG [ProxySet.getNewSession] - Available nodes: [http://192.168.1.9:24487] 17:39:33.673 DEBUG [BaseRemoteProxy.getNewSession] - Trying to create a new session on node http://192.168.1.9:24487 17:39:33.673 DEBUG [ProxySet.getNewSession] - Available nodes: [http://192.168.1.9:24487] 17:39:33.673 DEBUG [BaseRemoteProxy.getNewSession] - Trying to create a new session on node http://192.168.1.9:24487 17:39:33.673 DEBUG [ProxySet.getNewSession] - Available nodes: [http://192.168.1.9:24487] 17:39:33.673 DEBUG [BaseRemoteProxy.getNewSession] - Trying to create a new session on node http://192.168.1.9:24487 17:39:33.673 DEBUG [ProxySet.getNewSession] - Available nodes: [http://192.168.1.9:24487] 17:39:33.673 DEBUG [BaseRemoteProxy.getNewSession] - Trying to create a new session on node http://192.168.1.9:24487 17:39:33.707 DEBUG [ProxySet.getNewSession] - Available nodes: [http://192.168.1.9:24487] 17:39:33.708 DEBUG [BaseRemoteProxy.getNewSession] - Trying to create a new session on node http://192.168.1.9:24487 17:39:33.708 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=7898bc45-ba44-4ce9-ac12-b3b3ed44e103, seleniumProtocol=WebDriver, browserName=android, maxInstances=1, platformName=MAC, udid=emulator-5554, deviceName=Pixel_ASHTAR_HPEmulator, version=9.0, platform=MAC} 17:39:33.708 DEBUG [ProxySet.getNewSession] - Available nodes: [http://192.168.1.9:24487] 17:39:33.708 DEBUG [BaseRemoteProxy.getNewSession] - Trying to create a new session on node http://192.168.1.9:24487 17:39:33.709 DEBUG [ProxySet.getNewSession] - Available nodes: [http://192.168.1.9:24487] 17:39:33.709 DEBUG [BaseRemoteProxy.getNewSession] - Trying to create a new session on node http://192.168.1.9:24487 17:39:33.709 DEBUG [ProxySet.getNewSession] - Available nodes: [http://192.168.1.9:24487] 17:39:33.709 DEBUG [BaseRemoteProxy.getNewSession] - Trying to create a new session on node http://192.168.1.9:24487 17:39:33.710 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {app: /Users/doaa/projects/NIS-e2..., browserName: android, deviceName: Pixel_ASHTAR_HPEmulator, maxInstances: 1, platform: MAC, platformName: android, udid: emulator-5554} 17:39:33.710 DEBUG [ProxySet.getNewSession] - Available nodes: [http://192.168.1.9:24487] 17:39:33.710 DEBUG [BaseRemoteProxy.getNewSession] - Trying to create a new session on node http://192.168.1.9:24487 17:39:33.710 DEBUG [ProxySet.getNewSession] - Available nodes: [http://192.168.1.9:24487] 17:39:33.710 DEBUG [BaseRemoteProxy.getNewSession] - Trying to create a new session on node http://192.168.1.9:24487 17:39:33.711 DEBUG [ProxySet.getNewSession] - Available nodes: [http://192.168.1.9:24487] 17:39:33.711 DEBUG [BaseRemoteProxy.getNewSession] - Trying to create a new session on node http://192.168.1.9:24487 17:39:33.711 DEBUG [ActiveTestSessions.getExistingSession] - Session [timeouts] not available and is not among the last 1000 terminated sessions. Active sessions are[ca601718-6002-48cb-b5b7-7e246b0925f0 (int. key, remote not contacted yet.)] 17:39:33.711 DEBUG [ProxySet.getNewSession] - Available nodes: [http://192.168.1.9:24487] 17:39:33.711 DEBUG [BaseRemoteProxy.getNewSession] - Trying to create a new session on node http://192.168.1.9:24487 17:39:33.712 DEBUG [ActiveTestSessions.getExistingSession] - Session [element] not available and is not among the last 1000 terminated sessions. Active sessions are[ca601718-6002-48cb-b5b7-7e246b0925f0 (int. key, remote not contacted yet.)] 17:39:33.712 DEBUG [ActiveTestSessions.getExistingSession] - Session [orientation] not available and is not among the last 1000 terminated sessions. Active sessions are[ca601718-6002-48cb-b5b7-7e246b0925f0 (int. key, remote not contacted yet.)] 17:39:33.731 DEBUG [ActiveTestSessions.getExistingSession] - Session [appium] not available and is not among the last 1000 terminated sessions. Active sessions are[ca601718-6002-48cb-b5b7-7e246b0925f0 (int. key, remote not contacted yet.)] 17:39:33.731 DEBUG [ActiveTestSessions.getExistingSession] - Session [appium] not available and is not among the last 1000 terminated sessions. Active sessions are[ca601718-6002-48cb-b5b7-7e246b0925f0 (int. key, remote not contacted yet.)] 2020-05-05 17:39:33.731:WARN:osjs.HttpChannel:qtp473581465-200: /wd/hub/session java.io.IOException: org.openqa.grid.common.exception.GridException: Cannot extract a capabilities from the request:  17:39:33.733 DEBUG [ProxySet.getNewSession] - Available nodes: [http://192.168.1.9:24487] 17:39:33.733 DEBUG [BaseRemoteProxy.getNewSession] - Trying to create a new session on node http://192.168.1.9:24487 17:39:33.733 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=7898bc45-ba44-4ce9-ac12-b3b3ed44e103, seleniumProtocol=WebDriver, browserName=android, maxInstances=1, platformName=MAC, udid=emulator-5554, deviceName=Pixel_ASHTAR_HPEmulator, version=9.0, platform=MAC} 17:39:33.734 DEBUG [ProxySet.getNewSession] - Available nodes: [http://192.168.1.9:24487] 17:39:33.734 DEBUG [BaseRemoteProxy.getNewSession] - Trying to create a new session on node http://192.168.1.9:24487 17:39:33.734 DEBUG [ProxySet.getNewSession] - Available nodes: [http://192.168.1.9:24487] 17:39:33.734 DEBUG [BaseRemoteProxy.getNewSession] - Trying to create a new session on node http://192.168.1.9:24487 17:39:33.734 DEBUG [ProxySet.getNewSession] - Available nodes: [http://192.168.1.9:24487] 17:39:33.734 DEBUG [BaseRemoteProxy.getNewSession] - Trying to create a new session on node http://192.168.1.9:24487 17:39:33.745 DEBUG [ActiveTestSessions.getExistingSession] - Session [timeouts] not available and is not among the last 1000 terminated sessions. Active sessions are[d235f5c1-b9ff-4a18-9798-ebd2c42b5874 (int. key, remote not contacted yet.)] 17:39:33.745 DEBUG [ActiveTestSessions.getExistingSession] - Session [element] not available and is not among the last 1000 terminated sessions. Active sessions are[d235f5c1-b9ff-4a18-9798-ebd2c42b5874 (int. key, remote not contacted yet.)] 17:39:33.745 DEBUG [ActiveTestSessions.getExistingSession] - Session [orientation] not available and is not among the last 1000 terminated sessions. Active sessions are[d235f5c1-b9ff-4a18-9798-ebd2c42b5874 (int. key, remote not contacted yet.)] 17:39:33.746 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {app: /Users/doaa/projects/NIS-e2..., browserName: android, deviceName: Pixel_ASHTAR_HPEmulator, maxInstances: 1, platform: MAC, platformName: android, udid: emulator-5554} 17:39:33.746 DEBUG [ProxySet.getNewSession] - Available nodes: [http://192.168.1.9:24487] 17:39:33.747 DEBUG [BaseRemoteProxy.getNewSession] - Trying to create a new session on node http://192.168.1.9:24487 17:39:33.747 DEBUG [ProxySet.getNewSession] - Available nodes: [http://192.168.1.9:24487] 17:39:33.747 DEBUG [BaseRemoteProxy.getNewSession] - Trying to create a new session on node http://192.168.1.9:24487 17:39:33.747 DEBUG [ProxySet.getNewSession] - Available nodes: [http://192.168.1.9:24487] 17:39:33.747 DEBUG [BaseRemoteProxy.getNewSession] - Trying to create a new session on node http://192.168.1.9:24487 17:39:33.747 DEBUG [ProxySet.getNewSession] - Available nodes: [http://192.168.1.9:24487] 17:39:33.747 DEBUG [BaseRemoteProxy.getNewSession] - Trying to create a new session on node http://192.168.1.9:24487 17:39:33.755 DEBUG [ActiveTestSessions.getExistingSession] - Session [element] not available and is not among the last 1000 terminated sessions. Active sessions are[d235f5c1-b9ff-4a18-9798-ebd2c42b5874 (int. key, remote not contacted yet.)] 17:39:33.756 DEBUG [ProxySet.getNewSession] - Available nodes: [http://192.168.1.9:24487] 17:39:33.756 DEBUG [BaseRemoteProxy.getNewSession] - Trying to create a new session on node http://192.168.1.9:24487 17:39:33.756 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=7898bc45-ba44-4ce9-ac12-b3b3ed44e103, seleniumProtocol=WebDriver, browserName=android, maxInstances=1, platformName=MAC, udid=emulator-5554, deviceName=Pixel_ASHTAR_HPEmulator, version=9.0, platform=MAC} 17:39:33.756 DEBUG [ProxySet.getNewSession] - Available nodes: [http://192.168.1.9:24487] 17:39:33.756 DEBUG [BaseRemoteProxy.getNewSession] - Trying to create a new session on node http://192.168.1.9:24487 17:39:33.756 DEBUG [ProxySet.getNewSession] - Available nodes: [http://192.168.1.9:24487] 17:39:33.757 DEBUG [BaseRemoteProxy.getNewSession] - Trying to create a new session on node http://192.168.1.9:24487 17:39:33.757 DEBUG [ProxySet.getNewSession] - Available nodes: [http://192.168.1.9:24487] 17:39:33.757 DEBUG [BaseRemoteProxy.getNewSession] - Trying to create a new session on node http://192.168.1.9:24487 17:39:33.770 DEBUG [ProxySet.getNewSession] - Available nodes: [http://192.168.1.9:24487] 17:39:33.770 DEBUG [BaseRemoteProxy.getNewSession] - Trying to create a new session on node http://192.168.1.9:24487 17:39:33.770 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=7898bc45-ba44-4ce9-ac12-b3b3ed44e103, seleniumProtocol=WebDriver, browserName=android, maxInstances=1, platformName=MAC, udid=emulator-5554, deviceName=Pixel_ASHTAR_HPEmulator, version=9.0, platform=MAC} 17:39:33.771 DEBUG [ProxySet.getNewSession] - Available nodes: [http://192.168.1.9:24487] 17:39:33.771 DEBUG [BaseRemoteProxy.getNewSession] - Trying to create a new session on node http://192.168.1.9:24487 17:39:33.771 DEBUG [ProxySet.getNewSession] - Available nodes: [http://192.168.1.9:24487] 17:39:33.771 DEBUG [BaseRemoteProxy.getNewSession] - Trying to create a new session on node http://192.168.1.9:24487 17:39:33.783 DEBUG [ProxySet.getNewSession] - Available nodes: [http://192.168.1.9:24487] 17:39:33.783 DEBUG [BaseRemoteProxy.getNewSession] - Trying to create a new session on node http://192.168.1.9:24487 17:39:33.783 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=7898bc45-ba44-4ce9-ac12-b3b3ed44e103, seleniumProtocol=WebDriver, browserName=android, maxInstances=1, platformName=MAC, udid=emulator-5554, deviceName=Pixel_ASHTAR_HPEmulator, version=9.0, platform=MAC} 17:39:33.784 DEBUG [ProxySet.getNewSession] - Available nodes: [http://192.168.1.9:24487] 17:39:33.784 DEBUG [BaseRemoteProxy.getNewSession] - Trying to create a new session on node http://192.168.1.9:24487 17:39:33.797 DEBUG [ProxySet.getNewSession] - Available nodes: [http://192.168.1.9:24487] 17:39:33.797 DEBUG [BaseRemoteProxy.getNewSession] - Trying to create a new session on node http://192.168.1.9:24487 17:39:33.797 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=7898bc45-ba44-4ce9-ac12-b3b3ed44e103, seleniumProtocol=WebDriver, browserName=android, maxInstances=1, platformName=MAC, udid=emulator-5554, deviceName=Pixel_ASHTAR_HPEmulator, version=9.0, platform=MAC} 17:55:35.001 DEBUG [RegistrationServlet.process] - getting the following registration request  :  2020-05-05 17:55:35.001:WARN:osjs.HttpChannel:qtp473581465-61: /grid/register org.openqa.selenium.json.JsonException: Expected to read a START_MAP but instead have: END. Last 0 characters read: |Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53'|System info: host: 'doaa.local', ip: 'fe80:0:0:0:e0:98a0:5a23:4586%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.3', java.version: '1.8.0_232'|Driver info: driver.version: unknown 	at org.openqa.selenium.json.JsonInput.expect(JsonInput.java:290) 	at org.openqa.selenium.json.JsonInput.beginObject(JsonInput.java:220) 	at org.openqa.selenium.json.MapCoercer.lambda$apply$1(MapCoercer.java:64) 	at org.openqa.selenium.json.JsonTypeCoercer.lambda$null$6(JsonTypeCoercer.java:145) 	at org.openqa.selenium.json.JsonTypeCoercer.coerce(JsonTypeCoercer.java:126) 	at org.openqa.selenium.json.Json.toType(Json.java:69) 	at org.openqa.selenium.json.Json.toType(Json.java:55) 	at org.openqa.selenium.json.Json.toType(Json.java:50) 	at org.openqa.grid.web.servlet.RegistrationServlet.process(RegistrationServlet.java:83) 	at org.openqa.grid.web.servlet.RegistrationServlet.doGet(RegistrationServlet.java:64) 	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687) 	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790) 	at org.seleniumhq.jetty9.servlet.ServletHolder.handle(ServletHolder.java:865) 	at org.seleniumhq.jetty9.servlet.ServletHandler.doHandle(ServletHandler.java:535) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:146) 	at org.seleniumhq.jetty9.security.SecurityHandler.handle(SecurityHandler.java:548) 	at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:257) 	at org.seleniumhq.jetty9.server.session.SessionHandler.doHandle(SessionHandler.java:1595) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:255) 	at org.seleniumhq.jetty9.server.handler.ContextHandler.doHandle(ContextHandler.java:1340) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:203) 	at org.seleniumhq.jetty9.servlet.ServletHandler.doScope(ServletHandler.java:473) 	at org.seleniumhq.jetty9.server.session.SessionHandler.doScope(SessionHandler.java:1564) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:201) 	at org.seleniumhq.jetty9.server.handler.ContextHandler.doScope(ContextHandler.java:1242) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:144) 	at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132) 	at org.seleniumhq.jetty9.server.Server.handle(Server.java:503) 	at org.seleniumhq.jetty9.server.HttpChannel.handle(HttpChannel.java:364) 	at org.seleniumhq.jetty9.server.HttpConnection.onFillable(HttpConnection.java:260) 	at org.seleniumhq.jetty9.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:305) 	at org.seleniumhq.jetty9.io.FillInterest.fillable(FillInterest.java:103) 	at org.seleniumhq.jetty9.io.ChannelEndPoint$2.run(ChannelEndPoint.java:118) 	at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:333) 	at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:310) 	at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:168) 	at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:126) 	at org.seleniumhq.jetty9.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:366) 	at org.seleniumhq.jetty9.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:765) 	at org.seleniumhq.jetty9.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:683) 	at java.lang.Thread.run(Thread.java:748)  ```","closed","","Doaa-Ismael","2020-05-05T16:15:24Z","2021-09-05T10:02:56Z"
"","8393","zoom out doesn't work using keys.","I have tried some combination of the keys but it's doesn't work on mac and windows. Please find the code from selenium import webdriver from selenium.webdriver.common.keys import Keys from selenium.webdriver.common.action_chains import ActionChains  webdriver = webdriver.Chrome() webdriver.get(""https://google.com"") el = webdriver.find_element_by_tag_name('html') el.send_keys(Keys.COMMAND+'+') el.send_keys(Keys.COMMAND+'t') action = ActionChains(webdriver) action.key_down(Keys.COMMAND).send_keys(Keys.TAB).key_up(Keys.COMMAND).perform() Add a comment and make changes","closed","","aditya123456","2020-06-06T09:48:08Z","2021-09-05T09:36:51Z"
"","8354","Sporadic org.openqa.selenium.WebDriverException: connection refused","I have this setup using docker images: 1 Selenium grid hub docker image, 1 Chrome docker image, 1 Firefox docker image-- specified in docker-compose.yml Occasionally when I try to execute a suite of tests via testNG, I will see this error in my beforeMethod setup and the rest of the test will not execute: **Test Runner Output**` java.lang.Exception: org.openqa.selenium.TimeoutException: connection refused Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53' System info: host: '4459455f33f7', ip: '172.20.0.3', os.name: 'Linux', os.arch: 'amd64', os.version: '4.19.76-linuxkit', java.version: '1.8.0_252' Driver info: driver.version: unknown remote stacktrace: Command duration or timeout: 76.25 seconds  	at automation.setup.BaseTestSetup.startDriver(BaseTestSetup.java:121) 	at automation.setup.selenium.WebTestSetup.beforeMethod(WebTestSetup.java:30) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.base/java.lang.reflect.Method.invoke(Method.java:567) 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134) 	at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:63) 	at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:348) 	at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:302) 	at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:695) 	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:523) 	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173) 	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46) 	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816) 	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146) 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146) 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128) 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) 	at java.base/java.lang.Thread.run(Thread.java:835)`  **Grid Output:** `Samuels-MacBook-Pro:appium-java-demo samuels$ docker-compose -f src/main/resources/config/selenium/docker-compose.yml up Starting selenium-hub ... done Starting selenium_chrome_1  ... done Starting selenium_firefox_1 ... done Attaching to selenium-hub, selenium_firefox_1, selenium_chrome_1 selenium-hub    | 2020-05-26 21:58:57,343 INFO Included extra file ""/etc/supervisor/conf.d/selenium-hub.conf"" during parsing selenium-hub    | 2020-05-26 21:58:57,751 INFO supervisord started with pid 7 selenium-hub    | 2020-05-26 21:58:58,780 INFO spawned: 'selenium-hub' with pid 10 selenium-hub    | Starting Selenium Hub with configuration: selenium-hub    | 2020-05-26 21:58:59,174 INFO success: selenium-hub entered RUNNING state, process has stayed up for > than 0 seconds (startsecs) selenium-hub    | { selenium-hub    |   ""host"": ""0.0.0.0"", selenium-hub    |   ""port"": 4444, selenium-hub    |   ""role"": ""hub"", selenium-hub    |   ""maxSession"": 16, selenium-hub    |   ""newSessionWaitTimeout"": -1, selenium-hub    |   ""capabilityMatcher"": ""org.openqa.grid.internal.utils.DefaultCapabilityMatcher"", selenium-hub    |   ""throwOnCapabilityNotPresent"": true, selenium-hub    |   ""jettyMaxThreads"": -1, selenium-hub    |   ""cleanUpCycle"": 5000, selenium-hub    |   ""browserTimeout"": 300, selenium-hub    |   ""timeout"": 300, selenium-hub    |   ""debug"": false selenium-hub    | } firefox_1       | 2020-05-26 21:59:03,945 INFO Included extra file ""/etc/supervisor/conf.d/selenium.conf"" during parsing firefox_1       | 2020-05-26 21:59:03,959 INFO supervisord started with pid 7 chrome_1        | 2020-05-26 21:59:04,231 INFO Included extra file ""/etc/supervisor/conf.d/selenium.conf"" during parsing chrome_1        | 2020-05-26 21:59:04,239 INFO supervisord started with pid 8 firefox_1       | 2020-05-26 21:59:04,965 INFO spawned: 'xvfb' with pid 10 firefox_1       | 2020-05-26 21:59:04,977 INFO spawned: 'selenium-node' with pid 11 chrome_1        | 2020-05-26 21:59:05,272 INFO spawned: 'xvfb' with pid 11 chrome_1        | 2020-05-26 21:59:05,301 INFO spawned: 'selenium-node' with pid 12 firefox_1       | 2020-05-26 21:59:05,987 INFO success: xvfb entered RUNNING state, process has stayed up for > than 0 seconds (startsecs) firefox_1       | 2020-05-26 21:59:05,988 INFO success: selenium-node entered RUNNING state, process has stayed up for > than 0 seconds (startsecs) chrome_1        | 2020-05-26 21:59:06,312 INFO success: xvfb entered RUNNING state, process has stayed up for > than 0 seconds (startsecs) chrome_1        | 2020-05-26 21:59:06,315 INFO success: selenium-node entered RUNNING state, process has stayed up for > than 0 seconds (startsecs) chrome_1        | E: [pulseaudio] main.c: Daemon startup failed. chrome_1        | No PulseAudio daemon running, or not running as session daemon. chrome_1        | No PulseAudio daemon running, or not running as session daemon. chrome_1        | No PulseAudio daemon running, or not running as session daemon. selenium-hub    | 21:59:08.220 INFO [GridLauncherV3.parse] - Selenium server version: 3.141.59, revision: e82be7d358 selenium-hub    | 21:59:10.017 INFO [GridLauncherV3.lambda$buildLaunchers$5] - Launching Selenium Grid hub on port 4444 firefox_1       | 21:59:10.641 INFO [GridLauncherV3.parse] - Selenium server version: 3.141.59, revision: e82be7d358 chrome_1        | 21:59:10.642 INFO [GridLauncherV3.parse] - Selenium server version: 3.141.59, revision: e82be7d358 chrome_1        | 21:59:11.830 INFO [GridLauncherV3.lambda$buildLaunchers$7] - Launching a Selenium Grid node on port 5555 firefox_1       | 21:59:12.065 INFO [GridLauncherV3.lambda$buildLaunchers$7] - Launching a Selenium Grid node on port 5555 selenium-hub    | 2020-05-26 21:59:12.030:INFO::main: Logging initialized @12189ms to org.seleniumhq.jetty9.util.log.StdErrLog chrome_1        | 2020-05-26 21:59:15.078:INFO::main: Logging initialized @7407ms to org.seleniumhq.jetty9.util.log.StdErrLog firefox_1       | 2020-05-26 21:59:15.532:INFO::main: Logging initialized @8120ms to org.seleniumhq.jetty9.util.log.StdErrLog selenium-hub    | 21:59:19.178 INFO [Hub.start] - Selenium Grid hub is up and running selenium-hub    | 21:59:19.316 INFO [Hub.start] - Nodes should register to http://172.20.0.2:4444/grid/register/ selenium-hub    | 21:59:19.317 INFO [Hub.start] - Clients should connect to http://172.20.0.2:4444/wd/hub chrome_1        | 21:59:22.199 INFO [WebDriverServlet.] - Initialising WebDriverServlet firefox_1       | 21:59:22.208 INFO [WebDriverServlet.] - Initialising WebDriverServlet firefox_1       | 21:59:23.154 INFO [SeleniumServer.boot] - Selenium Server is up and running on port 5555 firefox_1       | 21:59:23.156 INFO [GridLauncherV3.lambda$buildLaunchers$7] - Selenium Grid node is up and ready to register to the hub chrome_1        | 21:59:23.337 INFO [SeleniumServer.boot] - Selenium Server is up and running on port 5555 chrome_1        | 21:59:23.338 INFO [GridLauncherV3.lambda$buildLaunchers$7] - Selenium Grid node is up and ready to register to the hub firefox_1       | 21:59:23.738 INFO [SelfRegisteringRemote$1.run] - Starting auto registration thread. Will try to register every 5000 ms. chrome_1        | 21:59:23.859 INFO [SelfRegisteringRemote$1.run] - Starting auto registration thread. Will try to register every 5000 ms. chrome_1        | 21:59:26.559 INFO [SelfRegisteringRemote.registerToHub] - Registering the node to the hub: http://selenium-hub:4444/grid/register firefox_1       | 21:59:26.623 INFO [SelfRegisteringRemote.registerToHub] - Registering the node to the hub: http://selenium-hub:4444/grid/register selenium-hub    | 21:59:26.868 INFO [DefaultGridRegistry.add] - Registered a node http://172.20.0.3:5555 firefox_1       | 21:59:26.869 INFO [SelfRegisteringRemote.registerToHub] - The node is registered to the hub and ready to use chrome_1        | 21:59:26.873 INFO [SelfRegisteringRemote.registerToHub] - The node is registered to the hub and ready to use selenium-hub    | 21:59:26.875 INFO [DefaultGridRegistry.add] - Registered a node http://172.20.0.4:5555 selenium-hub    | 22:00:43.018 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {browserName: chrome, version: } selenium-hub    | 22:00:43.086 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=38b2d915-4a56-4fb5-b9d4-093b3e1015aa, seleniumProtocol=WebDriver, browserName=chrome, maxInstances=4, platformName=LINUX, version=81.0.4044.138, applicationName=, platform=LINUX} chrome_1        | 22:00:43.886 INFO [ActiveSessionFactory.apply] - Capabilities are: { chrome_1        |   ""browserName"": ""chrome"", chrome_1        |   ""goog:chromeOptions"": { chrome_1        |   }, chrome_1        |   ""version"": """" chrome_1        | } chrome_1        | 22:00:43.896 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) chrome_1        | Starting ChromeDriver 81.0.4044.138 (8c6c7ba89cc9453625af54f11fd83179e23450fa-refs/branch-heads/4044@{#999}) on port 18288 chrome_1        | Only local connections are allowed. chrome_1        | Please protect ports used by ChromeDriver and related test frameworks to prevent access by malicious code. chrome_1        | [1590530444.079][SEVERE]: bind() failed: Cannot assign requested address (99) chrome_1        | 22:00:47.780 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C chrome_1        | 22:00:47.969 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session 7c983e08f17eddbc5e0b4ea59f75a207 (org.openqa.selenium.chrome.ChromeDriverService) selenium-hub    | 22:00:48.498 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: firefox, version: } selenium-hub    | 22:00:48.711 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=8dc03587-d4ea-4ec5-af75-81d5b5c6eb70, seleniumProtocol=WebDriver, browserName=firefox, maxInstances=4, moz:firefoxOptions={log={level=info}}, platformName=LINUX, version=76.0.1, applicationName=, platform=LINUX} firefox_1       | 22:00:50.639 INFO [ActiveSessionFactory.apply] - Capabilities are: { firefox_1       |   ""acceptInsecureCerts"": true, firefox_1       |   ""browserName"": ""firefox"", firefox_1       |   ""version"": """" firefox_1       | } firefox_1       | 22:00:50.686 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.firefox.GeckoDriverService) firefox_1       | 1590530451065	mozrunner::runner	INFO	Running command: ""/usr/bin/firefox"" ""-marionette"" ""-foreground"" ""-no-remote"" ""-profile"" ""/tmp/rust_mozprofileFkhxJt"" firefox_1       | 1590530454738	addons.webextension.doh-rollout@mozilla.org	WARN	Loading extension 'doh-rollout@mozilla.org': Reading manifest: Invalid extension permission: networkStatus firefox_1       | 1590530463825	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons firefox_1       | 1590530463832	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry firefox_1       | 1590530463837	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/ firefox_1       | 1590530463844	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader* chrome_1        | [1590530464.657][SEVERE]: Timed out receiving message from renderer: 0.100 firefox_1       | 1590530481310	Marionette	INFO	Listening on port 36567 firefox_1       | 1590530481491	Marionette	WARN	TLS certificate errors will be ignored for this session firefox_1       | 22:01:22.028 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C firefox_1       | 22:01:22.802 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session ff6b5d8b-4a5a-4488-9e19-1fe8ff3c9818 (org.openqa.selenium.firefox.GeckoDriverService) selenium-hub    | 22:01:23.133 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: firefox, version: } selenium-hub    | 22:01:23.147 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=8dc03587-d4ea-4ec5-af75-81d5b5c6eb70, seleniumProtocol=WebDriver, browserName=firefox, maxInstances=4, moz:firefoxOptions={log={level=info}}, platformName=LINUX, version=76.0.1, applicationName=, platform=LINUX} firefox_1       | 22:01:23.276 INFO [ActiveSessionFactory.apply] - Capabilities are: { firefox_1       |   ""acceptInsecureCerts"": true, firefox_1       |   ""browserName"": ""firefox"", firefox_1       |   ""version"": """" firefox_1       | } firefox_1       | 22:01:23.277 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.firefox.GeckoDriverService) firefox_1       | 1590530483429	mozrunner::runner	INFO	Running command: ""/usr/bin/firefox"" ""-marionette"" ""-foreground"" ""-no-remote"" ""-profile"" ""/tmp/rust_mozprofilezuIplZ"" firefox_1       | 1590530487029	addons.webextension.doh-rollout@mozilla.org	WARN	Loading extension 'doh-rollout@mozilla.org': Reading manifest: Invalid extension permission: networkStatus firefox_1       | 1590530491035	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons firefox_1       | 1590530491035	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry firefox_1       | 1590530491036	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/ firefox_1       | 1590530491036	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader* chrome_1        | 22:01:33.930 INFO [ActiveSessions$1.onStop] - Removing session 7c983e08f17eddbc5e0b4ea59f75a207 (org.openqa.selenium.chrome.ChromeDriverService) firefox_1       | 1590530502914	Marionette	INFO	Stopped listening on port 36567 firefox_1       | 1590530506837	Marionette	INFO	Listening on port 45767 firefox_1       | 1590530506949	Marionette	WARN	TLS certificate errors will be ignored for this session firefox_1       | 22:01:47.138 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C firefox_1       | 22:01:47.144 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session 0059aa7f-91c0-4152-ba5f-2a81b5690063 (org.openqa.selenium.firefox.GeckoDriverService) selenium-hub    | 22:01:47.245 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {browserName: chrome, version: } selenium-hub    | 22:01:47.247 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=38b2d915-4a56-4fb5-b9d4-093b3e1015aa, seleniumProtocol=WebDriver, browserName=chrome, maxInstances=4, platformName=LINUX, version=81.0.4044.138, applicationName=, platform=LINUX} chrome_1        | 22:01:47.352 INFO [ActiveSessionFactory.apply] - Capabilities are: { chrome_1        |   ""browserName"": ""chrome"", chrome_1        |   ""goog:chromeOptions"": { chrome_1        |   }, chrome_1        |   ""version"": """" chrome_1        | } chrome_1        | 22:01:47.357 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) chrome_1        | Starting ChromeDriver 81.0.4044.138 (8c6c7ba89cc9453625af54f11fd83179e23450fa-refs/branch-heads/4044@{#999}) on port 23300 chrome_1        | Only local connections are allowed. chrome_1        | Please protect ports used by ChromeDriver and related test frameworks to prevent access by malicious code. chrome_1        | [1590530507.435][SEVERE]: bind() failed: Cannot assign requested address (99) firefox_1       | 22:01:48.209 INFO [ActiveSessions$1.onStop] - Removing session ff6b5d8b-4a5a-4488-9e19-1fe8ff3c9818 (org.openqa.selenium.firefox.GeckoDriverService) chrome_1        | 22:01:50.659 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C chrome_1        | 22:01:50.688 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session a2db9f369bcdc6ec283fb7906039fd21 (org.openqa.selenium.chrome.ChromeDriverService) selenium-hub    | 22:01:50.926 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {browserName: chrome, version: } selenium-hub    | 22:01:50.934 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=38b2d915-4a56-4fb5-b9d4-093b3e1015aa, seleniumProtocol=WebDriver, browserName=chrome, maxInstances=4, platformName=LINUX, version=81.0.4044.138, applicationName=, platform=LINUX} chrome_1        | 22:01:51.225 INFO [ActiveSessionFactory.apply] - Capabilities are: { chrome_1        |   ""browserName"": ""chrome"", chrome_1        |   ""goog:chromeOptions"": { chrome_1        |   }, chrome_1        |   ""version"": """" chrome_1        | } chrome_1        | 22:01:51.229 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) chrome_1        | Starting ChromeDriver 81.0.4044.138 (8c6c7ba89cc9453625af54f11fd83179e23450fa-refs/branch-heads/4044@{#999}) on port 24598 chrome_1        | Only local connections are allowed. chrome_1        | Please protect ports used by ChromeDriver and related test frameworks to prevent access by malicious code. chrome_1        | [1590530511.460][SEVERE]: bind() failed: Cannot assign requested address (99) chrome_1        | 22:02:32.403 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C chrome_1        | 22:02:33.505 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session 8dbba2f149fed1f48a0f4a4f1fb644da (org.openqa.selenium.chrome.ChromeDriverService) selenium-hub    | 22:02:35.870 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: firefox, version: } selenium-hub    | 22:02:35.879 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=8dc03587-d4ea-4ec5-af75-81d5b5c6eb70, seleniumProtocol=WebDriver, browserName=firefox, maxInstances=4, moz:firefoxOptions={log={level=info}}, platformName=LINUX, version=76.0.1, applicationName=, platform=LINUX} firefox_1       | 22:02:39.776 INFO [ActiveSessionFactory.apply] - Capabilities are: { firefox_1       |   ""acceptInsecureCerts"": true, firefox_1       |   ""browserName"": ""firefox"", firefox_1       |   ""version"": """" firefox_1       | } firefox_1       | 22:02:39.781 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.firefox.GeckoDriverService) firefox_1       | 1590530564676	mozrunner::runner	INFO	Running command: ""/usr/bin/firefox"" ""-marionette"" ""-foreground"" ""-no-remote"" ""-profile"" ""/tmp/rust_mozprofileECv4iU"" chrome_1        | [1590530579.996][SEVERE]: Timed out receiving message from renderer: 0.100 firefox_1       | 1590530580013	addons.webextension.doh-rollout@mozilla.org	WARN	Loading extension 'doh-rollout@mozilla.org': Reading manifest: Invalid extension permission: networkStatus firefox_1       | 1590530604990	Marionette	INFO	Stopped listening on port 45767 firefox_1       | 1590530606153	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons firefox_1       | 1590530606165	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry firefox_1       | 1590530606168	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/ firefox_1       | 1590530606171	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader* selenium-hub    | 22:03:50.674 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: firefox, version: } selenium-hub    | 22:03:50.685 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=8dc03587-d4ea-4ec5-af75-81d5b5c6eb70, seleniumProtocol=WebDriver, browserName=firefox, maxInstances=4, moz:firefoxOptions={log={level=info}}, platformName=LINUX, version=76.0.1, applicationName=, platform=LINUX} firefox_1       | 22:03:51.074 INFO [ActiveSessionFactory.apply] - Capabilities are: { firefox_1       |   ""acceptInsecureCerts"": true, firefox_1       |   ""browserName"": ""firefox"", firefox_1       |   ""version"": """" firefox_1       | } firefox_1       | 22:03:51.108 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.firefox.GeckoDriverService) firefox_1       | 1590530631403	mozrunner::runner	INFO	Running command: ""/usr/bin/firefox"" ""-marionette"" ""-foreground"" ""-no-remote"" ""-profile"" ""/tmp/rust_mozprofileuNekjw"" firefox_1       | 22:03:52.875 INFO [ActiveSessions$1.onStop] - Removing session 0059aa7f-91c0-4152-ba5f-2a81b5690063 (org.openqa.selenium.firefox.GeckoDriverService) chrome_1        | [1590530633.370][SEVERE]: Timed out receiving message from renderer: 0.100 firefox_1       | 1590530634557	addons.webextension.doh-rollout@mozilla.org	WARN	Loading extension 'doh-rollout@mozilla.org': Reading manifest: Invalid extension permission: networkStatus firefox_1       | 1590530640119	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons firefox_1       | 1590530640119	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry firefox_1       | 1590530640120	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/ firefox_1       | 1590530640120	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader* chrome_1        | [1590530650.067][SEVERE]: Timed out receiving message from renderer: 0.100 chrome_1        | 22:04:12.070 INFO [ActiveSessions$1.onStop] - Removing session a2db9f369bcdc6ec283fb7906039fd21 (org.openqa.selenium.chrome.ChromeDriverService) chrome_1        | 22:04:13.459 INFO [ActiveSessions$1.onStop] - Removing session 8dbba2f149fed1f48a0f4a4f1fb644da (org.openqa.selenium.chrome.ChromeDriverService) firefox_1       | 1590530659523	Marionette	INFO	Listening on port 42217 firefox_1       | 1590530659618	Marionette	WARN	TLS certificate errors will be ignored for this session firefox_1       | 22:04:19.750 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C firefox_1       | 22:04:19.789 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session b9f74c6f-4ae4-41b6-978a-5f7c8b49853c (org.openqa.selenium.firefox.GeckoDriverService) selenium-hub    | 22:04:20.213 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {browserName: chrome, version: } selenium-hub    | 22:04:20.249 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=38b2d915-4a56-4fb5-b9d4-093b3e1015aa, seleniumProtocol=WebDriver, browserName=chrome, maxInstances=4, platformName=LINUX, version=81.0.4044.138, applicationName=, platform=LINUX} chrome_1        | 22:04:20.447 INFO [ActiveSessionFactory.apply] - Capabilities are: { chrome_1        |   ""browserName"": ""chrome"", chrome_1        |   ""goog:chromeOptions"": { chrome_1        |   }, chrome_1        |   ""version"": """" chrome_1        | } chrome_1        | 22:04:20.482 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) chrome_1        | Starting ChromeDriver 81.0.4044.138 (8c6c7ba89cc9453625af54f11fd83179e23450fa-refs/branch-heads/4044@{#999}) on port 10052 chrome_1        | Only local connections are allowed. chrome_1        | Please protect ports used by ChromeDriver and related test frameworks to prevent access by malicious code. chrome_1        | [1590530660.584][SEVERE]: bind() failed: Cannot assign requested address (99) chrome_1        | 22:04:26.938 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C chrome_1        | 22:04:27.350 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session f99b546f3687b4ae0a0d879c009fa8f3 (org.openqa.selenium.chrome.ChromeDriverService) selenium-hub    | 22:04:29.012 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {browserName: chrome, version: } selenium-hub    | 22:04:29.022 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=38b2d915-4a56-4fb5-b9d4-093b3e1015aa, seleniumProtocol=WebDriver, browserName=chrome, maxInstances=4, platformName=LINUX, version=81.0.4044.138, applicationName=, platform=LINUX} chrome_1        | 22:04:29.287 INFO [ActiveSessionFactory.apply] - Capabilities are: { chrome_1        |   ""browserName"": ""chrome"", chrome_1        |   ""goog:chromeOptions"": { chrome_1        |   }, chrome_1        |   ""version"": """" chrome_1        | } chrome_1        | 22:04:29.291 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) chrome_1        | Starting ChromeDriver 81.0.4044.138 (8c6c7ba89cc9453625af54f11fd83179e23450fa-refs/branch-heads/4044@{#999}) on port 22255 chrome_1        | Only local connections are allowed. chrome_1        | Please protect ports used by ChromeDriver and related test frameworks to prevent access by malicious code. chrome_1        | [1590530669.723][SEVERE]: bind() failed: Cannot assign requested address (99) chrome_1        | 22:04:36.998 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C chrome_1        | 22:04:37.171 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session baf87d8f32cffa55af65e6d90be49383 (org.openqa.selenium.chrome.ChromeDriverService) selenium-hub    | 22:04:37.880 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {browserName: chrome, version: } selenium-hub    | 22:04:37.903 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=38b2d915-4a56-4fb5-b9d4-093b3e1015aa, seleniumProtocol=WebDriver, browserName=chrome, maxInstances=4, platformName=LINUX, version=81.0.4044.138, applicationName=, platform=LINUX} chrome_1        | 22:04:38.397 INFO [ActiveSessionFactory.apply] - Capabilities are: { chrome_1        |   ""browserName"": ""chrome"", chrome_1        |   ""goog:chromeOptions"": { chrome_1        |   }, chrome_1        |   ""version"": """" chrome_1        | } chrome_1        | 22:04:38.545 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) chrome_1        | Starting ChromeDriver 81.0.4044.138 (8c6c7ba89cc9453625af54f11fd83179e23450fa-refs/branch-heads/4044@{#999}) on port 28055 chrome_1        | Only local connections are allowed. chrome_1        | Please protect ports used by ChromeDriver and related test frameworks to prevent access by malicious code. chrome_1        | [1590530679.711][SEVERE]: bind() failed: Cannot assign requested address (99) chrome_1        | [1590530684.087][SEVERE]: Timed out receiving message from renderer: 0.100 chrome_1        | [1590530684.257][SEVERE]: Timed out receiving message from renderer: 0.100 firefox_1       | 1590530690023	Marionette	INFO	Stopped listening on port 42217 chrome_1        | 22:04:52.469 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C chrome_1        | 22:04:52.597 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session 684b05c042e039ff7f8950cdf1a9b656 (org.openqa.selenium.chrome.ChromeDriverService) selenium-hub    | 22:04:52.823 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: firefox, version: } selenium-hub    | 22:04:52.826 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=8dc03587-d4ea-4ec5-af75-81d5b5c6eb70, seleniumProtocol=WebDriver, browserName=firefox, maxInstances=4, moz:firefoxOptions={log={level=info}}, platformName=LINUX, version=76.0.1, applicationName=, platform=LINUX} firefox_1       | 22:04:53.135 INFO [ActiveSessionFactory.apply] - Capabilities are: { firefox_1       |   ""acceptInsecureCerts"": true, firefox_1       |   ""browserName"": ""firefox"", firefox_1       |   ""version"": """" firefox_1       | } firefox_1       | 22:04:53.135 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.firefox.GeckoDriverService) firefox_1       | 1590530693740	mozrunner::runner	INFO	Running command: ""/usr/bin/firefox"" ""-marionette"" ""-foreground"" ""-no-remote"" ""-profile"" ""/tmp/rust_mozprofile0f4TRO"" chrome_1        | [1590530693.794][SEVERE]: Timed out receiving message from renderer: 0.100 firefox_1       | A content process crashed and MOZ_CRASHREPORTER_SHUTDOWN is set, shutting down firefox_1       | JavaScript error: resource://gre/modules/UpdateTimerManager.jsm, line 352: TypeError: setting getter-only property ""gLogEnabled"" firefox_1       | JavaScript error: resource://gre/modules/ModulesPing.jsm, line 70: NS_ERROR_XPC_JAVASCRIPT_ERROR_WITH_DETAILS: [JavaScript Error: ""setting getter-only property ""gLogEnabled"""" {file: ""resource://gre/modules/UpdateTimerManager.jsm"" line: 352}]'[JavaScript Error: ""setting getter-only property ""gLogEnabled"""" {file: ""resource://gre/modules/UpdateTimerManager.jsm"" line: 352}]' when calling method: [nsIUpdateTimerManager::registerTimer] firefox_1       | 1590530704180	addons.webextension.doh-rollout@mozilla.org	WARN	Loading extension 'doh-rollout@mozilla.org': Reading manifest: Invalid extension permission: networkStatus firefox_1       | 22:05:04.788 INFO [ActiveSessions$1.onStop] - Removing session b9f74c6f-4ae4-41b6-978a-5f7c8b49853c (org.openqa.selenium.firefox.GeckoDriverService) chrome_1        | [1590530707.196][SEVERE]: Timed out receiving message from renderer: 0.100 chrome_1        | [1590530707.687][SEVERE]: Timed out receiving message from renderer: 0.100 firefox_1       | 1590530708983	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons firefox_1       | 1590530708983	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry firefox_1       | 1590530708984	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/ firefox_1       | 1590530708985	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader* firefox_1       | 1590530729829	Marionette	INFO	Listening on port 43045 firefox_1       | 1590530730134	Marionette	WARN	TLS certificate errors will be ignored for this session chrome_1        | [1590530730.743][SEVERE]: Timed out receiving message from renderer: 0.100 firefox_1       | 22:05:30.718 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C firefox_1       | 22:05:30.797 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session e1272134-9ccc-461a-86d3-d70fffba91a4 (org.openqa.selenium.firefox.GeckoDriverService) selenium-hub    | 22:05:31.547 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: firefox, version: } selenium-hub    | 22:05:31.559 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=8dc03587-d4ea-4ec5-af75-81d5b5c6eb70, seleniumProtocol=WebDriver, browserName=firefox, maxInstances=4, moz:firefoxOptions={log={level=info}}, platformName=LINUX, version=76.0.1, applicationName=, platform=LINUX} firefox_1       | 22:05:31.636 INFO [ActiveSessionFactory.apply] - Capabilities are: { firefox_1       |   ""acceptInsecureCerts"": true, firefox_1       |   ""browserName"": ""firefox"", firefox_1       |   ""version"": """" firefox_1       | } firefox_1       | 22:05:31.642 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.firefox.GeckoDriverService) firefox_1       | 1590530731869	mozrunner::runner	INFO	Running command: ""/usr/bin/firefox"" ""-marionette"" ""-foreground"" ""-no-remote"" ""-profile"" ""/tmp/rust_mozprofileC4Y96p"" chrome_1        | [1590530738.524][SEVERE]: Timed out receiving message from renderer: 0.100 chrome_1        | 22:05:41.045 INFO [ActiveSessions$1.onStop] - Removing session f99b546f3687b4ae0a0d879c009fa8f3 (org.openqa.selenium.chrome.ChromeDriverService) chrome_1        | [1590530744.983][SEVERE]: Timed out receiving message from renderer: 0.100 firefox_1       | 1590530746586	addons.webextension.doh-rollout@mozilla.org	WARN	Loading extension 'doh-rollout@mozilla.org': Reading manifest: Invalid extension permission: networkStatus chrome_1        | 22:05:48.028 INFO [ActiveSessions$1.onStop] - Removing session baf87d8f32cffa55af65e6d90be49383 (org.openqa.selenium.chrome.ChromeDriverService) chrome_1        | 22:05:53.800 INFO [ActiveSessions$1.onStop] - Removing session 684b05c042e039ff7f8950cdf1a9b656 (org.openqa.selenium.chrome.ChromeDriverService) firefox_1       | 1590530757957	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons firefox_1       | 1590530757958	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry firefox_1       | 1590530757958	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/ firefox_1       | 1590530757959	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader* firefox_1       | 1590530766036	Marionette	INFO	Stopped listening on port 43045 firefox_1       | 22:06:11.754 INFO [ActiveSessions$1.onStop] - Removing session e1272134-9ccc-461a-86d3-d70fffba91a4 (org.openqa.selenium.firefox.GeckoDriverService) firefox_1       | 1590530772345	Marionette	INFO	Listening on port 41079 firefox_1       | 1590530772413	Marionette	WARN	TLS certificate errors will be ignored for this session firefox_1       | 22:06:12.576 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C firefox_1       | 22:06:12.587 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session b2e0e0f4-9626-4e57-8204-9ff697e9c347 (org.openqa.selenium.firefox.GeckoDriverService) selenium-hub    | 22:06:12.704 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: firefox, version: } selenium-hub    | 22:06:12.706 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=8dc03587-d4ea-4ec5-af75-81d5b5c6eb70, seleniumProtocol=WebDriver, browserName=firefox, maxInstances=4, moz:firefoxOptions={log={level=info}}, platformName=LINUX, version=76.0.1, applicationName=, platform=LINUX} firefox_1       | 22:06:12.772 INFO [ActiveSessionFactory.apply] - Capabilities are: { firefox_1       |   ""acceptInsecureCerts"": true, firefox_1       |   ""browserName"": ""firefox"", firefox_1       |   ""version"": """" firefox_1       | } firefox_1       | 22:06:12.780 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.firefox.GeckoDriverService) firefox_1       | 1590530772885	mozrunner::runner	INFO	Running command: ""/usr/bin/firefox"" ""-marionette"" ""-foreground"" ""-no-remote"" ""-profile"" ""/tmp/rust_mozprofileEN3k3h"" firefox_1       | 1590530774864	addons.webextension.doh-rollout@mozilla.org	WARN	Loading extension 'doh-rollout@mozilla.org': Reading manifest: Invalid extension permission: networkStatus firefox_1       | 1590530777790	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons firefox_1       | 1590530777792	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry firefox_1       | 1590530777802	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/ firefox_1       | 1590530777807	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader* firefox_1       | 1590530792167	Marionette	INFO	Listening on port 39435 firefox_1       | 1590530792271	Marionette	WARN	TLS certificate errors will be ignored for this session firefox_1       | 22:06:32.377 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C firefox_1       | 22:06:32.383 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session dbc04a0c-3e13-4b7f-a395-7df103ba1ba7 (org.openqa.selenium.firefox.GeckoDriverService) selenium-hub    | 22:06:32.516 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {browserName: chrome, version: } selenium-hub    | 22:06:32.526 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=38b2d915-4a56-4fb5-b9d4-093b3e1015aa, seleniumProtocol=WebDriver, browserName=chrome, maxInstances=4, platformName=LINUX, version=81.0.4044.138, applicationName=, platform=LINUX} chrome_1        | 22:06:32.619 INFO [ActiveSessionFactory.apply] - Capabilities are: { chrome_1        |   ""browserName"": ""chrome"", chrome_1        |   ""goog:chromeOptions"": { chrome_1        |   }, chrome_1        |   ""version"": """" chrome_1        | } chrome_1        | 22:06:32.621 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) chrome_1        | Starting ChromeDriver 81.0.4044.138 (8c6c7ba89cc9453625af54f11fd83179e23450fa-refs/branch-heads/4044@{#999}) on port 13399 chrome_1        | Only local connections are allowed. chrome_1        | Please protect ports used by ChromeDriver and related test frameworks to prevent access by malicious code. chrome_1        | [1590530792.726][SEVERE]: bind() failed: Cannot assign requested address (99) firefox_1       | 1590530793365	Marionette	INFO	Stopped listening on port 41079 chrome_1        | 22:06:35.705 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C chrome_1        | 22:06:35.727 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session 535b1ca6865d777f797075f9f16e4b3a (org.openqa.selenium.chrome.ChromeDriverService) selenium-hub    | 22:06:35.885 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {browserName: chrome, version: } selenium-hub    | 22:06:35.900 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=38b2d915-4a56-4fb5-b9d4-093b3e1015aa, seleniumProtocol=WebDriver, browserName=chrome, maxInstances=4, platformName=LINUX, version=81.0.4044.138, applicationName=, platform=LINUX} chrome_1        | 22:06:35.979 INFO [ActiveSessionFactory.apply] - Capabilities are: { chrome_1        |   ""browserName"": ""chrome"", chrome_1        |   ""goog:chromeOptions"": { chrome_1        |   }, chrome_1        |   ""version"": """" chrome_1        | } chrome_1        | 22:06:35.980 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) chrome_1        | Starting ChromeDriver 81.0.4044.138 (8c6c7ba89cc9453625af54f11fd83179e23450fa-refs/branch-heads/4044@{#999}) on port 5850 chrome_1        | Only local connections are allowed. chrome_1        | Please protect ports used by ChromeDriver and related test frameworks to prevent access by malicious code. chrome_1        | [1590530796.108][SEVERE]: bind() failed: Cannot assign requested address (99) chrome_1        | 22:06:39.898 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C chrome_1        | 22:06:39.932 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session 1f31b8c7b75f767b76424532736c89eb (org.openqa.selenium.chrome.ChromeDriverService) selenium-hub    | 22:06:40.002 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {browserName: chrome, version: } selenium-hub    | 22:06:40.011 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=38b2d915-4a56-4fb5-b9d4-093b3e1015aa, seleniumProtocol=WebDriver, browserName=chrome, maxInstances=4, platformName=LINUX, version=81.0.4044.138, applicationName=, platform=LINUX} firefox_1       | 22:06:40.135 INFO [ActiveSessions$1.onStop] - Removing session b2e0e0f4-9626-4e57-8204-9ff697e9c347 (org.openqa.selenium.firefox.GeckoDriverService) chrome_1        | 22:06:40.236 INFO [ActiveSessionFactory.apply] - Capabilities are: { chrome_1        |   ""browserName"": ""chrome"", chrome_1        |   ""goog:chromeOptions"": { chrome_1        |   }, chrome_1        |   ""version"": """" chrome_1        | } chrome_1        | 22:06:40.253 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) chrome_1        | Starting ChromeDriver 81.0.4044.138 (8c6c7ba89cc9453625af54f11fd83179e23450fa-refs/branch-heads/4044@{#999}) on port 25843 chrome_1        | Only local connections are allowed. chrome_1        | Please protect ports used by ChromeDriver and related test frameworks to prevent access by malicious code. chrome_1        | [1590530800.859][SEVERE]: bind() failed: Cannot assign requested address (99) chrome_1        | [1590530805.553][SEVERE]: Timed out receiving message from renderer: 0.100 chrome_1        | [1590530809.097][SEVERE]: Timed out receiving message from renderer: 0.100 chrome_1        | [1590530809.253][SEVERE]: Timed out receiving message from renderer: 0.100 chrome_1        | 22:06:52.273 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C chrome_1        | 22:06:52.289 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session ccfad733cc0595069931a3271a0e43df (org.openqa.selenium.chrome.ChromeDriverService) selenium-hub    | 22:06:52.555 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: firefox, version: } selenium-hub    | 22:06:52.559 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=8dc03587-d4ea-4ec5-af75-81d5b5c6eb70, seleniumProtocol=WebDriver, browserName=firefox, maxInstances=4, moz:firefoxOptions={log={level=info}}, platformName=LINUX, version=76.0.1, applicationName=, platform=LINUX} firefox_1       | 22:06:52.726 INFO [ActiveSessionFactory.apply] - Capabilities are: { firefox_1       |   ""acceptInsecureCerts"": true, firefox_1       |   ""browserName"": ""firefox"", firefox_1       |   ""version"": """" firefox_1       | } firefox_1       | 22:06:52.726 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.firefox.GeckoDriverService) firefox_1       | 1590530813054	mozrunner::runner	INFO	Running command: ""/usr/bin/firefox"" ""-marionette"" ""-foreground"" ""-no-remote"" ""-profile"" ""/tmp/rust_mozprofile3A82kF"" firefox_1       | 1590530817930	Marionette	INFO	Stopped listening on port 39435 firefox_1       | 1590530822193	addons.webextension.doh-rollout@mozilla.org	WARN	Loading extension 'doh-rollout@mozilla.org': Reading manifest: Invalid extension permission: networkStatus chrome_1        | [1590530828.888][SEVERE]: Timed out receiving message from renderer: 0.100 chrome_1        | [1590530829.078][SEVERE]: Timed out receiving message from renderer: 0.100 chrome_1        | [1590530829.439][SEVERE]: Timed out receiving message from renderer: 0.100 chrome_1        | [1590530829.580][SEVERE]: Timed out receiving message from renderer: 0.100 firefox_1       | 22:07:12.190 INFO [ActiveSessions$1.onStop] - Removing session dbc04a0c-3e13-4b7f-a395-7df103ba1ba7 (org.openqa.selenium.firefox.GeckoDriverService) firefox_1       | 1590530833667	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons firefox_1       | 1590530833669	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry firefox_1       | 1590530833671	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/ firefox_1       | 1590530833673	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader* firefox_1       | 1590530851201	Marionette	INFO	Listening on port 41163 firefox_1       | 1590530851257	Marionette	WARN	TLS certificate errors will be ignored for this session firefox_1       | 22:07:31.551 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C firefox_1       | 22:07:31.576 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session 289ec81d-e1dc-4a07-b328-4aaefe082403 (org.openqa.selenium.firefox.GeckoDriverService) selenium-hub    | 22:07:31.856 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: firefox, version: } selenium-hub    | 22:07:31.871 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=8dc03587-d4ea-4ec5-af75-81d5b5c6eb70, seleniumProtocol=WebDriver, browserName=firefox, maxInstances=4, moz:firefoxOptions={log={level=info}}, platformName=LINUX, version=76.0.1, applicationName=, platform=LINUX} firefox_1       | 22:07:32.058 INFO [ActiveSessionFactory.apply] - Capabilities are: { firefox_1       |   ""acceptInsecureCerts"": true, firefox_1       |   ""browserName"": ""firefox"", firefox_1       |   ""version"": """" firefox_1       | } firefox_1       | 22:07:32.063 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.firefox.GeckoDriverService) firefox_1       | 1590530852436	mozrunner::runner	INFO	Running command: ""/usr/bin/firefox"" ""-marionette"" ""-foreground"" ""-no-remote"" ""-profile"" ""/tmp/rust_mozprofile8MPW0R"" firefox_1       | 1590530857462	addons.webextension.doh-rollout@mozilla.org	WARN	Loading extension 'doh-rollout@mozilla.org': Reading manifest: Invalid extension permission: networkStatus chrome_1        | [1590530857.746][SEVERE]: Timed out receiving message from renderer: 0.100 chrome_1        | [1590530858.377][SEVERE]: Timed out receiving message from renderer: 0.100 chrome_1        | [1590530858.499][SEVERE]: Timed out receiving message from renderer: 0.100 chrome_1        | [1590530861.617][SEVERE]: Timed out receiving message from renderer: 0.100 chrome_1        | [1590530862.631][SEVERE]: Timed out receiving message from renderer: 0.100 chrome_1        | [1590530863.122][SEVERE]: Timed out receiving message from renderer: 0.100 chrome_1        | 22:07:46.668 INFO [ActiveSessions$1.onStop] - Removing session 535b1ca6865d777f797075f9f16e4b3a (org.openqa.selenium.chrome.ChromeDriverService) chrome_1        | 22:07:47.941 INFO [ActiveSessions$1.onStop] - Removing session 1f31b8c7b75f767b76424532736c89eb (org.openqa.selenium.chrome.ChromeDriverService) chrome_1        | 22:07:49.675 INFO [ActiveSessions$1.onStop] - Removing session ccfad733cc0595069931a3271a0e43df (org.openqa.selenium.chrome.ChromeDriverService) firefox_1       | 1590530871773	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons firefox_1       | 1590530871774	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry firefox_1       | 1590530871776	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/ firefox_1       | 1590530871776	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader* firefox_1       | 1590530880536	Marionette	INFO	Stopped listening on port 41163 firefox_1       | 1590530883414	Marionette	INFO	Listening on port 35889 firefox_1       | 1590530883555	Marionette	WARN	TLS certificate errors will be ignored for this session firefox_1       | 22:08:03.896 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C firefox_1       | 22:08:03.913 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session 1a03967d-3c16-42f2-a5ae-d03151560911 (org.openqa.selenium.firefox.GeckoDriverService) selenium-hub    | 22:08:04.053 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: firefox, version: } selenium-hub    | 22:08:04.088 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=8dc03587-d4ea-4ec5-af75-81d5b5c6eb70, seleniumProtocol=WebDriver, browserName=firefox, maxInstances=4, moz:firefoxOptions={log={level=info}}, platformName=LINUX, version=76.0.1, applicationName=, platform=LINUX} firefox_1       | 22:08:04.251 INFO [ActiveSessionFactory.apply] - Capabilities are: { firefox_1       |   ""acceptInsecureCerts"": true, firefox_1       |   ""browserName"": ""firefox"", firefox_1       |   ""version"": """" firefox_1       | } firefox_1       | 22:08:04.252 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.firefox.GeckoDriverService) firefox_1       | 1590530884453	mozrunner::runner	INFO	Running command: ""/usr/bin/firefox"" ""-marionette"" ""-foreground"" ""-no-remote"" ""-profile"" ""/tmp/rust_mozprofileKC46oY"" firefox_1       | 22:08:05.497 INFO [ActiveSessions$1.onStop] - Removing session 289ec81d-e1dc-4a07-b328-4aaefe082403 (org.openqa.selenium.firefox.GeckoDriverService) firefox_1       | 1590530886458	addons.webextension.doh-rollout@mozilla.org	WARN	Loading extension 'doh-rollout@mozilla.org': Reading manifest: Invalid extension permission: networkStatus firefox_1       | 1590530889051	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons firefox_1       | 1590530889052	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry firefox_1       | 1590530889056	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/ firefox_1       | 1590530889057	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader* firefox_1       | 1590530900657	Marionette	INFO	Listening on port 44453 firefox_1       | 1590530901077	Marionette	WARN	TLS certificate errors will be ignored for this session firefox_1       | 22:08:21.347 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C firefox_1       | 22:08:21.380 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session fa354f54-6103-4a12-9c5b-77276b02cd7b (org.openqa.selenium.firefox.GeckoDriverService) selenium-hub    | 22:08:21.479 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: firefox, version: } selenium-hub    | 22:08:21.480 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=8dc03587-d4ea-4ec5-af75-81d5b5c6eb70, seleniumProtocol=WebDriver, browserName=firefox, maxInstances=4, moz:firefoxOptions={log={level=info}}, platformName=LINUX, version=76.0.1, applicationName=, platform=LINUX} firefox_1       | 22:08:21.643 INFO [ActiveSessionFactory.apply] - Capabilities are: { firefox_1       |   ""acceptInsecureCerts"": true, firefox_1       |   ""browserName"": ""firefox"", firefox_1       |   ""version"": """" firefox_1       | } firefox_1       | 22:08:21.643 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.firefox.GeckoDriverService) firefox_1       | 1590530901802	mozrunner::runner	INFO	Running command: ""/usr/bin/firefox"" ""-marionette"" ""-foreground"" ""-no-remote"" ""-profile"" ""/tmp/rust_mozprofilemGe10B"" firefox_1       | 1590530903555	Marionette	INFO	Stopped listening on port 35889 firefox_1       | 1590530903692	addons.webextension.doh-rollout@mozilla.org	WARN	Loading extension 'doh-rollout@mozilla.org': Reading manifest: Invalid extension permission: networkStatus firefox_1       | 22:08:26.656 INFO [ActiveSessions$1.onStop] - Removing session 1a03967d-3c16-42f2-a5ae-d03151560911 (org.openqa.selenium.firefox.GeckoDriverService) firefox_1       | 1590530906845	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons firefox_1       | 1590530906846	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry firefox_1       | 1590530906846	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/ firefox_1       | 1590530906848	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader* firefox_1       | 1590530918054	Marionette	INFO	Listening on port 37211 firefox_1       | 1590530918147	Marionette	WARN	TLS certificate errors will be ignored for this session firefox_1       | 22:08:38.242 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C firefox_1       | 22:08:38.244 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session fb7500ab-617f-4c48-923b-3322dec593d5 (org.openqa.selenium.firefox.GeckoDriverService) selenium-hub    | 22:08:38.356 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {browserName: chrome, version: } selenium-hub    | 22:08:38.370 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=38b2d915-4a56-4fb5-b9d4-093b3e1015aa, seleniumProtocol=WebDriver, browserName=chrome, maxInstances=4, platformName=LINUX, version=81.0.4044.138, applicationName=, platform=LINUX} chrome_1        | 22:08:38.470 INFO [ActiveSessionFactory.apply] - Capabilities are: { chrome_1        |   ""browserName"": ""chrome"", chrome_1        |   ""goog:chromeOptions"": { chrome_1        |   }, chrome_1        |   ""version"": """" chrome_1        | } chrome_1        | 22:08:38.491 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) chrome_1        | Starting ChromeDriver 81.0.4044.138 (8c6c7ba89cc9453625af54f11fd83179e23450fa-refs/branch-heads/4044@{#999}) on port 23188 chrome_1        | Only local connections are allowed. chrome_1        | Please protect ports used by ChromeDriver and related test frameworks to prevent access by malicious code. chrome_1        | [1590530918.566][SEVERE]: bind() failed: Cannot assign requested address (99) firefox_1       | 1590530920158	Marionette	INFO	Stopped listening on port 44453 chrome_1        | 22:08:41.858 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C chrome_1        | 22:08:41.865 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session ed58539b60e6c5e96613fb78fa67822c (org.openqa.selenium.chrome.ChromeDriverService) selenium-hub    | 22:08:42.002 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {browserName: chrome, version: } selenium-hub    | 22:08:42.008 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=38b2d915-4a56-4fb5-b9d4-093b3e1015aa, seleniumProtocol=WebDriver, browserName=chrome, maxInstances=4, platformName=LINUX, version=81.0.4044.138, applicationName=, platform=LINUX} chrome_1        | 22:08:42.056 INFO [ActiveSessionFactory.apply] - Capabilities are: { chrome_1        |   ""browserName"": ""chrome"", chrome_1        |   ""goog:chromeOptions"": { chrome_1        |   }, chrome_1        |   ""version"": """" chrome_1        | } chrome_1        | 22:08:42.063 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) chrome_1        | Starting ChromeDriver 81.0.4044.138 (8c6c7ba89cc9453625af54f11fd83179e23450fa-refs/branch-heads/4044@{#999}) on port 21949 chrome_1        | Only local connections are allowed. chrome_1        | Please protect ports used by ChromeDriver and related test frameworks to prevent access by malicious code. chrome_1        | [1590530922.221][SEVERE]: bind() failed: Cannot assign requested address (99) firefox_1       | 22:08:45.764 INFO [ActiveSessions$1.onStop] - Removing session fa354f54-6103-4a12-9c5b-77276b02cd7b (org.openqa.selenium.firefox.GeckoDriverService) chrome_1        | 22:08:46.107 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C chrome_1        | 22:08:46.127 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session 280aed1c824809bf8a9aae57db0d77a2 (org.openqa.selenium.chrome.ChromeDriverService) selenium-hub    | 22:08:46.194 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {browserName: chrome, version: } selenium-hub    | 22:08:46.207 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=38b2d915-4a56-4fb5-b9d4-093b3e1015aa, seleniumProtocol=WebDriver, browserName=chrome, maxInstances=4, platformName=LINUX, version=81.0.4044.138, applicationName=, platform=LINUX} chrome_1        | 22:08:46.283 INFO [ActiveSessionFactory.apply] - Capabilities are: { chrome_1        |   ""browserName"": ""chrome"", chrome_1        |   ""goog:chromeOptions"": { chrome_1        |   }, chrome_1        |   ""version"": """" chrome_1        | } chrome_1        | 22:08:46.295 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) chrome_1        | Starting ChromeDriver 81.0.4044.138 (8c6c7ba89cc9453625af54f11fd83179e23450fa-refs/branch-heads/4044@{#999}) on port 2571 chrome_1        | Only local connections are allowed. chrome_1        | Please protect ports used by ChromeDriver and related test frameworks to prevent access by malicious code. chrome_1        | [1590530926.660][SEVERE]: bind() failed: Cannot assign requested address (99) chrome_1        | [1590530933.017][SEVERE]: Timed out receiving message from renderer: 0.100 chrome_1        | [1590530933.275][SEVERE]: Timed out receiving message from renderer: 0.100 chrome_1        | 22:08:54.838 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C chrome_1        | 22:08:54.860 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session 0ec8f1023b2371e0b96aa18b0cbbb5b5 (org.openqa.selenium.chrome.ChromeDriverService) selenium-hub    | 22:08:54.935 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: firefox, version: } selenium-hub    | 22:08:54.939 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=8dc03587-d4ea-4ec5-af75-81d5b5c6eb70, seleniumProtocol=WebDriver, browserName=firefox, maxInstances=4, moz:firefoxOptions={log={level=info}}, platformName=LINUX, version=76.0.1, applicationName=, platform=LINUX} firefox_1       | 22:08:55.107 INFO [ActiveSessionFactory.apply] - Capabilities are: { firefox_1       |   ""acceptInsecureCerts"": true, firefox_1       |   ""browserName"": ""firefox"", firefox_1       |   ""version"": """" firefox_1       | } firefox_1       | 22:08:55.107 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.firefox.GeckoDriverService) firefox_1       | 1590530935384	mozrunner::runner	INFO	Running command: ""/usr/bin/firefox"" ""-marionette"" ""-foreground"" ""-no-remote"" ""-profile"" ""/tmp/rust_mozprofileW6JKq9"" firefox_1       | 1590530938599	Marionette	INFO	Stopped listening on port 37211 firefox_1       | 1590530939141	addons.webextension.doh-rollout@mozilla.org	WARN	Loading extension 'doh-rollout@mozilla.org': Reading manifest: Invalid extension permission: networkStatus chrome_1        | [1590530942.883][SEVERE]: Timed out receiving message from renderer: 0.100 chrome_1        | [1590530943.599][SEVERE]: Timed out receiving message from renderer: 0.100 chrome_1        | [1590530949.399][SEVERE]: Timed out receiving message from renderer: 0.100 chrome_1        | [1590530949.534][SEVERE]: Timed out receiving message from renderer: 0.100 firefox_1       | 22:09:09.929 INFO [ActiveSessions$1.onStop] - Removing session fb7500ab-617f-4c48-923b-3322dec593d5 (org.openqa.selenium.firefox.GeckoDriverService) firefox_1       | 1590530950993	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons firefox_1       | 1590530950997	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry firefox_1       | 1590530951001	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/ firefox_1       | 1590530951006	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader* firefox_1       | 1590530964060	Marionette	INFO	Listening on port 38803 firefox_1       | 1590530964166	Marionette	WARN	TLS certificate errors will be ignored for this session firefox_1       | 22:09:24.417 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C firefox_1       | 22:09:24.426 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session 0c74eeef-cc93-457e-87b1-904cf98eafad (org.openqa.selenium.firefox.GeckoDriverService) chrome_1        | [1590530972.974][SEVERE]: Timed out receiving message from renderer: 0.100 chrome_1        | [1590530973.359][SEVERE]: Timed out receiving message from renderer: 0.100 chrome_1        | 22:09:34.580 INFO [ActiveSessions$1.onStop] - Removing session ed58539b60e6c5e96613fb78fa67822c (org.openqa.selenium.chrome.ChromeDriverService) chrome_1        | 22:09:37.135 INFO [ActiveSessions$1.onStop] - Removing session 280aed1c824809bf8a9aae57db0d77a2 (org.openqa.selenium.chrome.ChromeDriverService) chrome_1        | [1590530981.979][SEVERE]: Timed out receiving message from renderer: 0.100 chrome_1        | 22:09:45.416 INFO [ActiveSessions$1.onStop] - Removing session 0ec8f1023b2371e0b96aa18b0cbbb5b5 (org.openqa.selenium.chrome.ChromeDriverService) selenium-hub    | 22:09:45.686 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {browserName: chrome, version: } selenium-hub    | 22:09:45.734 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=38b2d915-4a56-4fb5-b9d4-093b3e1015aa, seleniumProtocol=WebDriver, browserName=chrome, maxInstances=4, platformName=LINUX, version=81.0.4044.138, applicationName=, platform=LINUX} chrome_1        | 22:09:47.761 INFO [ActiveSessionFactory.apply] - Capabilities are: { chrome_1        |   ""browserName"": ""chrome"", chrome_1        |   ""goog:chromeOptions"": { chrome_1        |   }, chrome_1        |   ""version"": """" chrome_1        | } chrome_1        | 22:09:47.780 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) firefox_1       | 1590530987900	Marionette	INFO	Stopped listening on port 38803 chrome_1        | Starting ChromeDriver 81.0.4044.138 (8c6c7ba89cc9453625af54f11fd83179e23450fa-refs/branch-heads/4044@{#999}) on port 26411 chrome_1        | Only local connections are allowed. chrome_1        | Please protect ports used by ChromeDriver and related test frameworks to prevent access by malicious code. chrome_1        | [1590530988.102][SEVERE]: bind() failed: Cannot assign requested address (99) chrome_1        | 22:09:53.293 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C chrome_1        | 22:09:53.312 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session 71ac7e3ba2433ea83e32998f386149e3 (org.openqa.selenium.chrome.ChromeDriverService) firefox_1       | 22:09:58.323 INFO [ActiveSessions$1.onStop] - Removing session 0c74eeef-cc93-457e-87b1-904cf98eafad (org.openqa.selenium.firefox.GeckoDriverService) selenium-hub    | 22:09:58.607 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: firefox, version: } selenium-hub    | 22:09:58.627 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=8dc03587-d4ea-4ec5-af75-81d5b5c6eb70, seleniumProtocol=WebDriver, browserName=firefox, maxInstances=4, moz:firefoxOptions={log={level=info}}, platformName=LINUX, version=76.0.1, applicationName=, platform=LINUX} firefox_1       | 22:09:58.875 INFO [ActiveSessionFactory.apply] - Capabilities are: { firefox_1       |   ""acceptInsecureCerts"": true, firefox_1       |   ""browserName"": ""firefox"", firefox_1       |   ""version"": """" firefox_1       | } firefox_1       | 22:09:58.875 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.firefox.GeckoDriverService) firefox_1       | 1590530999427	mozrunner::runner	INFO	Running command: ""/usr/bin/firefox"" ""-marionette"" ""-foreground"" ""-no-remote"" ""-profile"" ""/tmp/rust_mozprofileJNhOqL"" chrome_1        | [1590531002.657][SEVERE]: Timed out receiving message from renderer: 0.100 chrome_1        | [1590531002.775][SEVERE]: Timed out receiving message from renderer: 0.100 chrome_1        | [1590531003.015][SEVERE]: Timed out receiving message from renderer: 0.100 firefox_1       | 1590531003078	addons.webextension.doh-rollout@mozilla.org	WARN	Loading extension 'doh-rollout@mozilla.org': Reading manifest: Invalid extension permission: networkStatus chrome_1        | [1590531003.122][SEVERE]: Timed out receiving message from renderer: 0.100 firefox_1       | 1590531005817	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons firefox_1       | 1590531005818	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry firefox_1       | 1590531005819	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/ firefox_1       | 1590531005819	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader* firefox_1       | 1590531014947	Marionette	INFO	Listening on port 34813 firefox_1       | 1590531015074	Marionette	WARN	TLS certificate errors will be ignored for this session firefox_1       | 22:10:15.220 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C firefox_1       | 22:10:15.243 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session 45ed0036-f543-47d8-a254-59e30bf5dd41 (org.openqa.selenium.firefox.GeckoDriverService) chrome_1        | [1590531024.763][SEVERE]: Timed out receiving message from renderer: 0.100 chrome_1        | 22:10:26.062 INFO [ActiveSessions$1.onStop] - Removing session 71ac7e3ba2433ea83e32998f386149e3 (org.openqa.selenium.chrome.ChromeDriverService) selenium-hub    | 22:10:26.121 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {browserName: chrome, version: } selenium-hub    | 22:10:26.136 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=38b2d915-4a56-4fb5-b9d4-093b3e1015aa, seleniumProtocol=WebDriver, browserName=chrome, maxInstances=4, platformName=LINUX, version=81.0.4044.138, applicationName=, platform=LINUX} chrome_1        | 22:10:26.253 INFO [ActiveSessionFactory.apply] - Capabilities are: { chrome_1        |   ""browserName"": ""chrome"", chrome_1        |   ""goog:chromeOptions"": { chrome_1        |   }, chrome_1        |   ""version"": """" chrome_1        | } chrome_1        | 22:10:26.259 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) chrome_1        | Starting ChromeDriver 81.0.4044.138 (8c6c7ba89cc9453625af54f11fd83179e23450fa-refs/branch-heads/4044@{#999}) on port 3164 chrome_1        | Only local connections are allowed. chrome_1        | Please protect ports used by ChromeDriver and related test frameworks to prevent access by malicious code. chrome_1        | [1590531026.316][SEVERE]: bind() failed: Cannot assign requested address (99) chrome_1        | 22:10:28.221 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C chrome_1        | 22:10:28.254 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session 06bbd2fa01cb5050befc975c081e5aa2 (org.openqa.selenium.chrome.ChromeDriverService) firefox_1       | 1590531032782	Marionette	INFO	Stopped listening on port 34813 firefox_1       | 22:10:35.926 INFO [ActiveSessions$1.onStop] - Removing session 45ed0036-f543-47d8-a254-59e30bf5dd41 (org.openqa.selenium.firefox.GeckoDriverService) selenium-hub    | 22:10:35.966 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: firefox, version: } selenium-hub    | 22:10:35.974 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=8dc03587-d4ea-4ec5-af75-81d5b5c6eb70, seleniumProtocol=WebDriver, browserName=firefox, maxInstances=4, moz:firefoxOptions={log={level=info}}, platformName=LINUX, version=76.0.1, applicationName=, platform=LINUX} firefox_1       | 22:10:36.046 INFO [ActiveSessionFactory.apply] - Capabilities are: { firefox_1       |   ""acceptInsecureCerts"": true, firefox_1       |   ""browserName"": ""firefox"", firefox_1       |   ""version"": """" firefox_1       | } firefox_1       | 22:10:36.047 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.firefox.GeckoDriverService) firefox_1       | 1590531036088	mozrunner::runner	INFO	Running command: ""/usr/bin/firefox"" ""-marionette"" ""-foreground"" ""-no-remote"" ""-profile"" ""/tmp/rust_mozprofile63kyqo"" chrome_1        | [1590531037.433][SEVERE]: Timed out receiving message from renderer: 0.100 chrome_1        | [1590531037.548][SEVERE]: Timed out receiving message from renderer: 0.100 firefox_1       | 1590531037555	addons.webextension.doh-rollout@mozilla.org	WARN	Loading extension 'doh-rollout@mozilla.org': Reading manifest: Invalid extension permission: networkStatus firefox_1       | 1590531040281	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons firefox_1       | 1590531040290	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry firefox_1       | 1590531040292	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/ firefox_1       | 1590531040294	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader* firefox_1       | 1590531050703	Marionette	INFO	Listening on port 41673 firefox_1       | 1590531050973	Marionette	WARN	TLS certificate errors will be ignored for this session firefox_1       | 22:10:51.125 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C firefox_1       | 22:10:51.136 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session 98fbdd2d-d33c-4896-9ca5-1b448edcf244 (org.openqa.selenium.firefox.GeckoDriverService) chrome_1        | [1590531059.927][SEVERE]: Timed out receiving message from renderer: 0.100 chrome_1        | 22:11:01.383 INFO [ActiveSessions$1.onStop] - Removing session 06bbd2fa01cb5050befc975c081e5aa2 (org.openqa.selenium.chrome.ChromeDriverService) firefox_1       | 1590531069376	Marionette	INFO	Stopped listening on port 41673 firefox_1       | 22:11:11.548 INFO [ActiveSessions$1.onStop] - Removing session 98fbdd2d-d33c-4896-9ca5-1b448edcf244 (org.openqa.selenium.firefox.GeckoDriverService) ^[[B^[[B^[[B^[[A^[[B^[[A^CGracefully stopping... (press Ctrl+C again to force) Stopping selenium_chrome_1  ... done Stopping selenium_firefox_1 ...`  ## To Reproduce    Detailed steps to reproduce the behavior: clone the repo: https://github.com/gorbysbm/grid-node-bug docker-compose -f src/main/resources/config/selenium/docker-compose.yml up Wait for messages: firefox_1       | 21:59:26.869 INFO [SelfRegisteringRemote.registerToHub] - The node is registered to the hub and ready to use chrome_1        | 21:59:26.873 INFO [SelfRegisteringRemote.registerToHub] - The node is registered to the hub and ready to use  run the testNG suite: src/test/java/resources/remoteTestng.xml  ## Expected behavior No Errors when trying to connect driver nodes to grid node  ## Test script or set of commands reproducing this issue  Please see the repo: https://github.com/gorbysbm/grid-node-bug1 and launch test suite using the instructions above   ## Environment  Language Bindings version: 3.141.5  Selenium Grid version (if applicable): 3.141.5  but reproduced it with latest version as well.","closed","","gorbysbm","2020-05-28T00:25:58Z","2021-09-05T09:43:58Z"
"","8446","Safari and Ie 11:: MoveToElement() not performing any action","I have some scenario, where I need to check the before and after hover action on the element, Below code is working as expected in chrome, In safari and IE 11 it's not performing any action. var actions= new Actions(Driver);   actions.MoveToElement(element).Build().Perform();","closed","","kumarswamy123","2020-06-22T10:38:56Z","2021-09-05T09:36:39Z"
"","8008","[dotnet] Respond with async Tasks where appropriate","I have found several issues in the past (https://github.com/SeleniumHQ/selenium/issues/6369,  https://github.com/SeleniumHQ/selenium/issues/2012, https://github.com/SeleniumHQ/selenium/issues/4162#issuecomment-467824963) in which async was rightly avoided due to the support of .Net 3.5 and 4.0 at the time. However as of this commit (https://github.com/SeleniumHQ/selenium/commit/dfc2d1c32449bfd0a8086a15204cf693c9393e06#diff-b611cb2de98423d15d6da4ba61983045) last year, it appears that is no longer a blocker.  Some areas where async operations would be nice (these code segments were all discussed in the above mentioned issues too): Thread.Sleep -> Task.Delay, for example: https://github.com/SeleniumHQ/selenium/blob/3e4cc2b30cd1d81104571eafcd76f1c63bc517a2/dotnet/src/webdriver/Support/DefaultWait%7BT%7D.cs#L201 https://github.com/SeleniumHQ/selenium/blob/07a18746ff756e90fd79ef253a328bd7dfa9e6dc/dotnet/src/webdriverbackedselenium/Internal/SeleniumEmulation/Waiter.cs#L95  HttpExecution GetAwaiter().GetResult() => await (and return async Task): https://github.com/SeleniumHQ/selenium/blob/052e70ff21691eb9c535b8ce6d9123bb5e7de7e5/dotnet/src/webdriver/Remote/HttpCommandExecutor.cs#L148","closed","","tabjsina","2020-02-07T02:02:25Z","2020-03-10T19:18:15Z"
"","8777","VBA Selenium Sendkeys Not Working in Some Systems","I have created a macro which sends a range text to a text area in a website. The sendkeys CTRL+V works on my PC, however, it is not working on other PC or laptop. The browser cache was cleared, the chromedriver is updated, selenium basic is updated, all the related softwares are updated. Still the sendkeys CTRL+V is not working.  The line which contains the sendkeys CTRL+V command is not throwing any error pretends to work but the intended text is not entered in to the text area.  Range(""A2"").Select Range(ActiveCell, ActiveCell.End(xlDown)).Select Selection.copy With bot  .Get URL .Wait 20000 .SwitchToFrame .FindElementByCss(""iframe"") .FindElementById(""queryIdsTextArea"").SendKeys keys.Control & ""v"" This is vague representation of the code. Since, few lines are confidential.  OS versions are the same since we work for the same company same team. My Laptop does not login to another user account as it is a company laptop. Yes the browser is visible everytime the program executes. I tried adding wait times before and after the sendkeys, it just pretends to work and the copied value is not inserted in the text area. sendkeyWe often handle data which consists of 50,000 cells values are more, those values need to be copied to the text area of the website. When I use a variable with sendkeys values more than 1000, I'm getting a Webrequest timeout error, that is the reason senkeys CTRL+V is used in the first place.s ""text"" is working but we need the copied value to be inserted in the text area. We are using chrome browser for this.  Thanks in advance.  chrome version: Version 86.0.4240.75 (Official Build) (64-bit) OS: Windows 10 ChromeDriver: 86.0.4240.22 Selenium Basic: 2.0.9.0","closed","","Merakibity","2020-10-12T21:51:50Z","2021-09-05T08:34:04Z"
"","7950","Selenium WebDriver- Chrome TimeOut?","I have been trying to solve this issue, but I've had no luck in the past 3 hours. All I need now is using Selenium to open website in Chrome, but it just doesn't work. I tried using GeckoDriver, too, but it just throws a different kind of exception. All software involved are up-to-date. I even tried disabling my WiFi and using cellular data (I thought the connection was blocked by the firewall), but it doesn't work, either. If someone can help me I will be really appreciated! I have seen some similar questions on stackoverflow, but none of the answers work. Here's my code: package bot;  import org.openqa.selenium.WebDriver; import org.openqa.selenium.chrome.ChromeDriver;  public class Terminator {     public static void main(String[] aaaa)  {         System.setProperty(""webdriver.chrome.driver"", ""/Users/myName/Documents/chromedriver"");         WebDriver driver = new ChromeDriver();         driver.get(""https://www.google.com"");     } }  Help me to find out the solution for this [selenium issue](https://www.sevenmentor.com/selenium-training-in-pune.php).","closed","","sjain1992","2020-01-21T11:02:15Z","2020-02-21T22:13:38Z"
"","8544","i need help with executing a javascript file on a webpage","i have a .js file with some commands  now need to execute or inject it in a webpage using selenium python.  how can i do it?","closed","","dakkshesh07","2020-07-17T10:17:53Z","2021-09-05T09:02:57Z"
"","8029","A exception with a null response was thrown sending an HTTP request to the remote WebDriver server for URL http://localhost:62968/session/5c1df802a19fab49b6a894b3db1af643/url","I got this error:  > A exception with a null response was thrown sending an HTTP request to the remote WebDriver server for URL http://localhost:62968/session/5c1df802a19fab49b6a894b3db1af643/url. The status of the exception was UnknownError, and the message was: An error occurred while sending the request. Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..  ```    at OpenQA.Selenium.Remote.HttpCommandExecutor.MakeHttpRequest(HttpRequestInfo requestInfo)    at OpenQA.Selenium.Remote.HttpCommandExecutor.Execute(Command commandToExecute)    at OpenQA.Selenium.Remote.DriverServiceCommandExecutor.Execute(Command commandToExecute)    at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)    at OpenQA.Selenium.Remote.RemoteWebDriver.set_Url(String value) ```  What should I do? At first it works just fine. But then after a couple of setting `Url` property of `IWebDriver` it encounters error.","closed","","Nefcanto","2020-02-15T16:09:12Z","2020-03-17T14:05:56Z"
"","7953","screenshot_as_base64, TypeError: 'str' object is not callable","I got error ~~~ Traceback (most recent call last):     ...     elem.screenshot_as_base64() TypeError: 'str' object is not callable ~~~  code ~~~ opts = webdriver.ChromeOptions() opts.add_argument('start-maximized') brws = webdriver.Chrome(chrome_options=opts, executable_path='/opt/..') brws.get('https://google.com/') elem = brws.find_element_by_tag_name('body') elem.screenshot_as_base64() brws.quit() ~~~   ## Environment  OS: Ubuntu 18.04.3 LTS (Server) Browser: Chrome  Browser version: Google Chrome 79.0.3945.88 Browser Driver version: chromedriver-79.0.3945.36 Language Bindings version: Python 3.6.9  > pip3 show selenium                                                                                                                                                                                                                                                                                      ~~~ Name: selenium Version: 3.141.0 Summary: Python bindings for Selenium Home-page: https://github.com/SeleniumHQ/selenium/ Author: UNKNOWN Author-email: UNKNOWN License: Apache 2.0 Location: /usr/local/lib/python3.6/dist-packages Requires: urllib3 ~~~  ---------------------------------------- if using 'screenshot_as_png' ~~~ Traceback (most recent call last):     ...    elem.screenshot_as_png() TypeError: 'bytes' object is not callable ~~~","closed","","vkatochka","2020-01-21T22:30:16Z","2020-02-21T22:13:32Z"
"","8298","Selenium not opening Firefox with new profile I created","I followed this from a video, who had this code work fine, but it is not working for me.   I opened Firefox with the newly created profile and bookmarked google, and when I execute this code and make it go to google, google is not bookmarked, telling me that the profile isn't working.   from selenium import webdriver   def build_firefox_driver():     fp = webdriver.FirefoxProfile(r'C:\Users\ovicr\PycharmProjects\MyProjects\FF_Profile')     driver = webdriver.Firefox(firefox_profile=fp)     driver.get('https://www.google.com')     return driver   build_firefox_driver()","closed","","Ovicron","2020-05-12T20:29:43Z","2021-09-05T10:02:53Z"
"","8644","Python implementation always create or copy profile folder into temporary location, Stop doing that please","I checked all the positions related to firefox profile, such as WebDriver.__init__(), Options, FirefoxProfile.__init__()... create a temporary profile folder or copy existing to temp folder is really a bad idea, it's totally unnecessary, because firefox already have command line args to specify profile location, if i need a new location, i just use it, no extra works needed. WebDriver cleans temp profile on quit() but it is also unreliable when program crashes. chrome WebDriver doesn't do these unnecessary things but chromedriver do it, i will also see if possible to get rid of it","closed","","shajunxing","2020-08-25T01:43:56Z","2021-09-05T08:37:21Z"
"","8658","The HTTP request to the remote WebDriver server for URL timed out, despite increasing timeout?","I can't be sure of the cause, but it only started occurring after I deployed instances onto Linux, Ubuntu 20.04. The exception seems to throw itself around 2-3 hours into the runtime.  I am using the following packages: ``` Selenium.WebDriver.ChromeDriver (85.0.4183.8300) Selenium.WebDriver (3.141.0) ```  `google-chrome --version` returns Google Chrome 85.0.4183.83, and I am using version 85.0.4183.83 of chrome driver, downloaded from https://chromedriver.storage.googleapis.com/85.0.4183.83/chromedriver_linux64.zip  The trigger for this exception seems to be navigating to a URL, like:  `_webDriver.Navigate().GoToUrl(url);`  Although I have experienced the issue when trying to fetch the page source too.   Here is how I set up the browser, ``` var chromeOptions = new ChromeOptions();  chromeOptions.AddArgument(""--disable-notifications""); chromeOptions.AddArgument(""--user-agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.97 Safari/537.36"");  // chromeOptions.AddArgument(""--log-level=3"");  if (!Debugger.IsAttached) {     chromeOptions.AddArgument(""headless""); }  if (RuntimeInformation.IsOSPlatform(OSPlatform.Linux)) {     chromeOptions.AddArgument(""--no-sandbox""); }  this.AddSingleton(provider => new ChromeDriver(Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location), chromeOptions, TimeSpan.FromSeconds(600))); ```  I have tried updating my drivers time out value, up to 10 minutes but the issue is still there  Error message: `The HTTP request to the remote WebDriver server for URL http://localhost:45421/session/34d4b720ec29326e9d11938513f34dc8/url timed out after 600 seconds.`  Stack trace (raw from Bugsnag) `OpenQA.Selenium.WebDriverException: The HTTP request to the remote WebDriver server for URL http://localhost:45421/session/34d4b720ec29326e9d11938513f34dc8/url timed out after 600 seconds. ---> System.Net.WebException: The operation has timed out.    at System.Net.HttpWebRequest.GetResponse()    at OpenQA.Selenium.Remote.HttpCommandExecutor.MakeHttpRequest(HttpRequestInfo requestInfo)   --- End of inner exception stack trace ---    at OpenQA.Selenium.Remote.HttpCommandExecutor.MakeHttpRequest(HttpRequestInfo requestInfo)    at OpenQA.Selenium.Remote.HttpCommandExecutor.Execute(Command commandToExecute)    at OpenQA.Selenium.Remote.DriverServiceCommandExecutor.Execute(Command commandToExecute)    at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(string driverCommandToExecute, Dictionary parameters)    at OpenQA.Selenium.Remote.RemoteWebDriver.set_Url(string value)    at Worker.Social.NavigateToProfile(string profileUrl) in /root/worker/social/SocialEventHandler.cs:line 59    at Worker.Queue.ProcessQueueItem(QueueItem item, ISocialEventHandler eventHandler) in /root/worker/queue/QueueWorker.cs:line 93`","closed","","ketchums","2020-08-31T21:14:25Z","2021-09-05T08:37:16Z"
"","8194","selenium error WebDriverException: unknown error: no chrome binary in asp core","I am using selenium in asp core 3.1, in local it's working, but in server windows 2012 there's an error:  `WebDriverException: unknown error: no chrome binary`  I set binary and driver: `var chromeOptions = new ChromeOptions(); chromeOptions.BinaryLocation = @""C:\Program Files (x86)\Google\Chrome\Application\chrome.exe"";             _driver = new ChromeDriver(Path.Combine(hostingEnvironment.WebRootPath), chromeOptions);`","closed","","mahdisky","2020-04-11T21:52:32Z","2020-05-20T21:21:34Z"
"","8509","Last letter getting erased after inputting text into a textbox","I am using Selenium driver version 3.141.0  in my  Visual Studio 2019, C# NUnit Core test project.  The code clears out the existing Shipping Address fields of a Salesforce Account object and assigns new values.                  `IWebElement shCity = driver.FindElement(By.XPath(""//input[@placeholder='Shipping City']""));                 shCity.Clear();                 shCity.SendKeys(shippingCity);     // Toronto                                              IWebElement shState = driver.FindElement(By.XPath(""//input[@placeholder='Shipping State/Province']""));                 shState.Clear();                 shState.SendKeys(shippingState);   // ON                  IWebElement shZip = driver.FindElement(By.XPath(""//input[@placeholder='Shipping Zip/Postal Code']""));                 shZip.Clear();                 shZip.SendKeys(shippingZip);   // 87654                                  IWebElement shCountry = driver.FindElement(By.XPath(""//input[@placeholder='Shipping Country']""));                 shCountry.Clear();                 shCountry.SendKeys(shippingCountry)    // Canada `  It clears out the city textbox and puts in Toronto, but when it moves to  the state textboc, the lest letter in Toronto is deleted, and we end up with ""Toront"". This happens for state and zip code  as well so we end up with ""Toront"", ""O"",  ""8765"" in the 3 textboxes.  I can get around this issue by adding a space after each value, but was wondering if  there is a better fix.  Please see the attached screenshot. ![screenshot](https://user-images.githubusercontent.com/64550358/87247661-33317480-c423-11ea-9046-3df1f78d543d.jpg)","closed","","burakqa","2020-07-12T13:37:00Z","2021-09-05T09:12:28Z"
"","8351","'chromedriver' executable needs to be in PATH although path defined?","I am trying to run the code  `browser = webdriver.Chrome(exectuable_path='/home/esther_e_song/.local/lib/python3.7/site-packages/chromedriver-2.24.1.dist-info', chrome_options=chrome_options)`  My environment is google cloud shell, python 3.7.  I get the following error:  ```   File ""/usr/local/lib/python3.7/subprocess.py"", line 1522, in _execute_child     raise child_exception_type(errno_num, err_msg, err_filename) FileNotFoundError: [Errno 2] No such file or directory: '/home/jupyter/chromedriver': '/home/jupyter/chromedriver' During handling of the above exception, another exception occurred: Traceback (most recent call last):   File ""kiwiscrape/run.py"", line 2, in      from scrape import InstaScraper   File ""/home/esther_e_song/cloudshell_open/Pilotbird-EES/kiwiscrape/scrape.py"", line 10, in      from utilities import get_posts,scraping,user_info,get_loc,get_user_posts   File ""/home/esther_e_song/cloudshell_open/Pilotbird-EES/kiwiscrape/utilities.py"", line 87, in      igbrowser = IGBrowser()   File ""/home/esther_e_song/cloudshell_open/Pilotbird-EES/kiwiscrape/instagrambrowser.py"", line 22, in __init__     self._browser = self.make_browser()   File ""/home/esther_e_song/cloudshell_open/Pilotbird-EES/kiwiscrape/instagrambrowser.py"", line 30, in make_browser     return webdriver.Chrome(CHROME_DRIVER_PATH, chrome_options=chrome_options)   File ""/home/esther_e_song/.local/lib/python3.7/site-packages/selenium/webdriver/chrome/webdriver.py"", line 73, in __init__     self.service.start()   File ""/home/esther_e_song/.local/lib/python3.7/site-packages/selenium/webdriver/common/service.py"", line 83, in start     os.path.basename(self.path), self.start_error_message) selenium.common.exceptions.WebDriverException: Message: 'chromedriver' executable needs to be in PATH. Please see https://sites.google.com/a/chromium.org/chromedriver/home ```  I also tried moving `chromedriver-2.24.1.dist-info` to usr/bin/chromedriver, but I am getting the same issue.","closed","","ehsong","2020-05-27T17:05:20Z","2021-09-05T09:43:59Z"
"","7996","Selenium with Firefor or Chrome profile","I am trying to load a profile to selenium so that I dont have to keep log in to the website that selenium is about to visit. I am running it with python on my Mac.  In the firefox version, I use the below code  ``` def create_selenium_FF():     profile = webdriver.FirefoxProfile('/Users/Victor/Library/Application Support/Firefox/Profiles/z3ay0enb.default')     driver = webdriver.Firefox(profile)     return driver ``` It can successfully start firefox, but it doesn't have the log in info of the website that it visits, however I check in the automated firefox browser using about:profiles, it does recognise the profile that I feed it.  in the chrome version, I use the below code, notice I make a local copy of the profile already.  ``` def create_selenium_chrome():     DRIVER = 'chromedriver'     options = webdriver.ChromeOptions()     options.add_argument(""--user-data-dir=/Users/Victor/Library/Application Support/Google/Chrome2"")     options.add_argument(""--profile-directory=Default"")     driver = webdriver.Chrome(DRIVER, options=options)     return driver ```     it can also start chrome, and looks like it has my profile, but it raises an error  `selenium.common.exceptions.InvalidArgumentException: Message: invalid argument: user data directory is already in use, please specify a unique value for --user-data-dir argument, or don't use --user-data-dir` How can I get it working please?","closed","","luckyvictor","2020-02-04T10:46:21Z","2020-03-10T19:38:37Z"
"","8703","Not able to interact with the chrome browser from selenium chrome driver without manual intervention","I am trying to automate a website that developed in Angular 6. When we try to launch the application using selenium with chrome driver, it loads the page but selenium not able to interact with the browser to find the element. If we do a double click on the page or outside of the browser anywhere on the screen, selenium starts the interaction and do the actions specified in the test case. This issue is identified only for chrome driver and all other browsers are working fine for the same site.  **Meta**  OS: Windows 10  Selenium Version: 3.141  Driver version: 85.0.4183.87  Browser: Chrome 85.0.4183.102","closed","","kesiyaabraham","2020-09-16T16:33:07Z","2021-09-05T08:35:00Z"
"","8852","pypi version doesn't appear to match github version","I am sure this must be discussed somewhere, because its been out of sync for over two years. I tried digging into issue and online posting to find out why, but couldn't find anything. I assume I'm missing something, and would greatly appreciate if someone could point me in the right direction.  GitHub [shows](https://github.com/SeleniumHQ/selenium/releases) latest version as **3.141.59** _December 19 2018_  PyPi [shows](https://pypi.org/project/selenium/) **3.141.00** _November 1 2018_  ``` $ pip install -U selenium Requirement already up-to-date: selenium in /home/USER/.virtualenvs/PROJECT/lib/python3.8/site-packages (3.141.0) ```","closed","","arderyp","2020-11-07T14:48:40Z","2021-09-05T08:31:34Z"
"","8691","Kerberos support in Selenium","I am looking for a way to test web applications secured with desktop SSO. Can we do integrated windows authentication from Selenium web driver? In specific can we do kerberos authentication using Selenium web driver similar to how Jmeter supports?","closed","","sathyarajagopal","2020-09-11T15:39:31Z","2021-09-05T08:35:59Z"
"","8779","Elements with linked style not selectable and lead to TimeoutException","I am having an issue selecting certain elements on a webpage.  The issue happens on a page that loads in a new tab after logging in. On that page, I try to select an element in the nav bar and I always get a `TimeoutException`. I have used both `XPATH` and `CSS_SELECTOR` strings to try to select an element and both fail. I have also used many different utilities (Ranorex Selocity, Selenium IDE, etc) to find these values. I can find the elements I want to select when using these browser tools, but I still get a `TimeoutException` with Selenium.  I did some troubleshooting and I found out the following.  This simple nav element at the top is selectable. ``  This nav element gives a TimeoutException. ``  The only difference in the code used to try and select each element was the `CSS_SELECTOR` string.  **Working selector** `WebDriverWait(driver, delay).until(EC.presence_of_element_located((By.CSS_SELECTOR, ""nav[class='shell-sidebar']"")))`  **Non-working selector** `WebDriverWait(driver, delay).until(EC.presence_of_element_located((By.CSS_SELECTOR, ""nav[class='left-nav-body']"")))`  I'm not sure if it's useful, but `_ngcontent-asw-c5` is for the style and the contents are located in ``.  Using: OS X Version: 10.14.6  Chrome Version 86.0.4240.75 (Official Build) (x86_64) ChromeDriver Version: 85.0.4183.87 VS Code Version: 1.50.0 Python Version: v2020.9.114305 Selenium Version: 3.141.0  A copy of the code can be found [here](https://github.com/cp-community/Cut-and-Paste/blob/main/To%20Screen%20Scrape).","closed","","cp-community","2020-10-13T02:21:58Z","2021-09-05T08:34:04Z"
"","8866","Mismatching version log | org.openqa.selenium.SessionNotCreatedException: session not created","I am getting a weird message while running selenium locally: `This version of OperaDriver only supports Opera version 86` and `Current browser version is 60.0.3112.107 with binary path C:\Users\xxx\AppData\Local\Programs\Opera\72.0.3815.320\opera.exe`  How can it be `60.0.3112.107` if the provided binary is `72.0.3815.320`?  Full trace here: ``` Starting OperaDriver 86.0.4240.80 (7ed88b53bda45a2d19efb4f8706dd6b6cad0d3af-refs/branch-heads/4240@{#1183}) on port 15955 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping OperaDriver safe. OperaDriver was started successfully. [WARNING] org.openqa.selenium.SessionNotCreatedException: session not created: This version of OperaDriver only supports Opera version 86 Current browser version is 60.0.3112.107 with binary path C:\Users\xxx\AppData\Local\Programs\Opera\72.0.3815.320\opera.exe   (Driver info: operadriver=86.0.4240.80 (7ed88b53bda45a2d19efb4f8706dd6b6cad0d3af-refs/branch-heads/4240@{#1183}),platform=Windows NT 10.0.18362  x86_64) (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 6.30 seconds     Build info: version: '4.0.0-alpha-6', revision: '5f43a29cfc' System info: host: 'xxx', ip: 'xxx', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.1' Driver info: driver.version: OperaDriver     at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0 (Native Method)     at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance (NativeConstructorAccessorImpl.java:64)     at jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance (DelegatingConstructorAccessorImpl.java:45)     at java.lang.reflect.Constructor.newInstanceWithCaller (Constructor.java:500)     at java.lang.reflect.Constructor.newInstance (Constructor.java:481)     at org.openqa.selenium.remote.ErrorHandler.createThrowable (ErrorHandler.java:217)     at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed (ErrorHandler.java:169)     at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$errorHandler$0 (JsonWireProtocolResponse.java:54)     at org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0 (HandshakeResponse.java:30)     at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$1 (ProtocolHandshake.java:126)     at java.util.stream.ReferencePipeline$3$1.accept (ReferencePipeline.java:195)     at java.util.Spliterators$ArraySpliterator.tryAdvance (Spliterators.java:958)     at java.util.stream.ReferencePipeline.forEachWithCancel (ReferencePipeline.java:127)     at java.util.stream.AbstractPipeline.copyIntoWithCancel (AbstractPipeline.java:502)     at java.util.stream.AbstractPipeline.copyInto (AbstractPipeline.java:488)     at java.util.stream.AbstractPipeline.wrapAndCopyInto (AbstractPipeline.java:474)     at java.util.stream.FindOps$FindOp.evaluateSequential (FindOps.java:150)     at java.util.stream.AbstractPipeline.evaluate (AbstractPipeline.java:234)     at java.util.stream.ReferencePipeline.findFirst (ReferencePipeline.java:543)     at org.openqa.selenium.remote.ProtocolHandshake.createSession (ProtocolHandshake.java:128)     at org.openqa.selenium.remote.ProtocolHandshake.createSession (ProtocolHandshake.java:75)     at org.openqa.selenium.remote.HttpCommandExecutor.execute (HttpCommandExecutor.java:138)     at org.openqa.selenium.remote.service.DriverCommandExecutor.execute (DriverCommandExecutor.java:83)     at org.openqa.selenium.remote.RemoteWebDriver.execute (RemoteWebDriver.java:582)     at org.openqa.selenium.remote.RemoteWebDriver.startSession (RemoteWebDriver.java:216)     at org.openqa.selenium.remote.RemoteWebDriver. (RemoteWebDriver.java:136)     at org.openqa.selenium.opera.OperaDriver. (OperaDriver.java:173)     at org.openqa.selenium.opera.OperaDriver. (OperaDriver.java:160)     at org.openqa.selenium.opera.OperaDriver. (OperaDriver.java:149)     at com.example.App.main (App.java:10)     at org.codehaus.mojo.exec.ExecJavaMojo$1.run (ExecJavaMojo.java:254)     at java.lang.Thread.run (Thread.java:832) ```","closed","","msanfilippof","2020-11-11T11:18:01Z","2021-09-05T08:31:28Z"
"","8775","Security Fix for Resources Downloaded over Insecure Protocol - huntr.dev","https://huntr.dev/users/d3m0n-r00t has fixed the Resources Downloaded over Insecure Protocol vulnerability üî®. d3m0n-r00t has been awarded $25 for fixing the vulnerability through the huntr bug bounty program üíµ. Think you could fix a vulnerability like this?             Get involved at https://huntr.dev/  Q | A Version Affected | ALL Bug Fix | YES Original Pull Request | https://github.com/418sec/selenium/pull/1 Vulnerability README | https://github.com/418sec/huntr/blob/master/bounties/other/selenium/1/README.md  ### User Comments:  ### üìä Metadata *  #### Bounty URL: https://www.huntr.dev/bounties/1-other-selenium  ### ‚öôÔ∏è Description * Selenium is an umbrella project encapsulating a variety of tools and libraries enabling web browser automation. Selenium specifically provides infrastructure for the W3C WebDriver specification ‚Äî a platform and language-neutral coding interface compatible with all major web browsers. This package is vulnerable to MITM or Man-In-The-Middle attack due to a downloading resources through insecure protocols. It is possible for an attacker to intercept and alter the packages which may leads to RCE other attacks which may help the attacker gain access to host. ### üíª Technical Description * Fixed insecure download by changing insecure ```http``` to secure ```https```  ### üî• Proof of Fix (PoF) * By switching to HTTPS that issue can be resolved.  ### üëç User Acceptance Testing (UAT) Just protocol changed to ```https``` and the resource is available in ```https```.","closed","","huntr-helper","2020-10-12T15:32:49Z","2020-10-13T21:38:01Z"
"","8520","[py] (#8010) broke RemoteConnection subclass selection for chrome","https://github.com/SeleniumHQ/selenium/blob/trunk/py/selenium/webdriver/remote/webdriver.py#L106  get_remote_connection checks for browser_name  https://github.com/SeleniumHQ/selenium/pull/8096 removed it from class","closed","","saunaants","2020-07-14T09:38:12Z","2021-09-05T09:12:26Z"
"","8382","Bug Report : File webdriver_prefs.json not found","https://github.com/SeleniumHQ/selenium/blob/6d9f39d695b55d9beada263c47f95357e965d028/py/selenium/webdriver/firefox/firefox_profile.py#L58  When moved to path-finding using pkgutil (like another resource loading in your project) issue disappeared.","closed","","fizzzgen","2020-06-02T12:45:53Z","2021-09-05T09:43:52Z"
"","8224","How we can share volumes between nodes and hub in kubernetes? I need to download some of the files during the test and that will be accessible from another node.","How we can share volumes between nodes and hub in kubernetes? I need to download some of the files during the test and that will be accessible from another node.","closed","","hisrarul","2020-04-21T13:07:47Z","2021-09-05T10:20:33Z"
"","8739","How to start webdriver with toggled device?","How to start webdriver with toggled device? (like a mobile phone)  ```javascript let options = new chrome.Options() options.addArguments('--auto-open-devtools-for-tabs');  options.setMobileEmulation({ 	deviceMetrics: { 		width: 1125, 		height: 2436, 		pixelRatio: 3.0, 		touch: true, 	},  	userAgent: ""Mozilla/5.0 (iPhone; CPU iPhone OS 11_0 like Mac OS X) AppleWebKit/604.1.38 (KHTML, like Gecko) Version/11.0 Mobile/15A372 Safari/604.1"", })  let chromeCapabilities = webdriver.Capabilities.chrome() let chromeOptions = { 	acceptSslCerts: true, 	acceptInsecureCerts: true, 	excludeSwitches: ['--enable-automation'], 	ignoreDefaultArgs: [""--enable-automation""], 	useAutomationExtension: false, };  chromeCapabilities.set('chromeOptions', chromeOptions);  const serviceBuilder = new chrome.ServiceBuilder(this.driverPath);  const driver = new webdriver.Builder() 	.forBrowser('chrome') 	.withCapabilities(chromeCapabilities) 	.setChromeOptions(options) 	.setChromeService(serviceBuilder) 	.build() ```","closed","","markolofsen","2020-09-26T08:58:41Z","2021-09-05T08:34:47Z"
"","8721","Select from dropdown in selenium-webdriver javascript","How to select a value from drop down using selenium-webdriver JavaScript bindings. I do see that Select is available in Java. I have seen similar option in C# also. Couldn't find anything in JavaCcript to handle select option","closed","","mathewkuruvila","2020-09-22T04:00:10Z","2021-09-05T08:15:40Z"
"","8613","Message: session not created: This version of ChromeDriver only supports Chrome version 84","Hi. Yesterday suddenly a bug just came out without fixing any previous codes, and   when I implemented selenium it says 'this version of ChromeDriver only support Chrome version 84'  I'm currently setting all environment on AWS Educated Cloud9 on ubuntu 18.04,   and my computer which is loading AWS environment has version 84 Chrome.  I don't know if it happens when the chrome version of Ubuntu Server of AWS IDE doesn't match with ChromeDriver version   or the user's PC Chrome version doesn't  but when I wanna check the chrome version of Ubuntu it says  vocstartsoft:~/environment/fortest (master) $ google-chrome --version **google-chrome: command not found**  how to fix this? ![chromedriver](https://user-images.githubusercontent.com/68681332/89504211-a3ed6600-d802-11ea-9159-fb4003cbc531.png) ![google version](https://user-images.githubusercontent.com/68681332/89504223-a8b21a00-d802-11ea-877f-b7459fa2fd46.png)          ## Environment  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:   Selenium Grid version (if applicable):","closed","","Junoh92","2020-08-06T07:34:17Z","2021-09-05T08:37:33Z"
"","8614","this version of ChromeDriver only support Chrome version 84 and my Chrome version is 84","Hi. Yesterday suddenly a bug just came out without fixing any previous codes, and   when I implemented selenium it says 'this version of ChromeDriver only support Chrome version 84'  I'm currently setting all environment on AWS Educated Cloud9 on ubuntu 18.04,   and my computer which is loading AWS environment has version 84 Chrome.  I don't know if it happens when the chrome version of Ubuntu Server of AWS IDE doesn't match with ChromeDriver version   or the user's PC Chrome version doesn't  but when I wanna check the chrome version of Ubuntu it says  vocstartsoft:~/environment/fortest (master) $ google-chrome --version **google-chrome: command not found**  how to fix this? ![chromedriver](https://user-images.githubusercontent.com/68681332/89504211-a3ed6600-d802-11ea-9159-fb4003cbc531.png) ![google version](https://user-images.githubusercontent.com/68681332/89504223-a8b21a00-d802-11ea-877f-b7459fa2fd46.png)","closed","","Junoh92","2020-08-06T07:35:40Z","2021-09-05T08:37:32Z"
"","8182","A potential null pointer dereference bug. Please confirm, much appreicated!","Hi, We are developing a new static analysis tool for catching bugs in Java code. Upon scanning your codebase we find some minor stuff list below  1. In ```DeviceRotation.java``` (/java/client/src/org/openqa/selenium/DeviceRotation.java), line 52 ```DeviceRotation``` function when ```map``` is ```null``` at line 53, the if body will be executed which will trigger a bug in ```map.toString()``` at line 55.  2. In ```NetworkInterface.java``` (/java/client/src/org/openqa/selenium/net/NetworkInterface.java ), line 62 when ```networkInterface ``` is checked against ```null``` we guess it can be a null value. If that's indeed the case, then at line 74, the expression ```networkInterface.getInetAddresses()``` will throw a null pointer dereferencing.  3. In ```UploadFile.java``` (/java/server/src/org/openqa/selenium/remote/server/handler/UploadFile.java), line 50 if ```allFiles``` equals to ```null``` the expression ```allFiles.length``` will throw a null pointer at line 52  Would you please take a look and confirm this is indeed a bug? Thanks a million!!!  ## üêõ Bug Report  A clear and concise description of what the bug is.    ## To Reproduce    Detailed steps to reproduce the behavior:  ## Expected behavior  A clear and concise description of what you expected to happen.  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:   Selenium Grid version (if applicable):","closed","","HermioneSW","2020-04-09T01:13:58Z","2020-05-20T22:54:33Z"
"","8433","Selenium error","Hi, I¬¥m trying to run Instapy on pythonanyware, but I always have this issue:  https://i.ibb.co/f1XgC2b/error.jpg  It seems the problem is the selenium version, but I don¬¥t know which version I should be installed. Could you please help me to fix it? Thanks a lot in advanced!!","closed","","pikki1","2020-06-17T20:56:11Z","2021-09-05T09:36:43Z"
"","8235","Problem connecting to selenium server","Hi, I'm not able to connect to the server..getting below error in terminal  020-04-24 15:13:57.447:WARN:osjs.HttpChannel:qtp1685232414-11: /grid/register/ org.openqa.selenium.json.JsonException: Expected to read a START_MAP but instead have: END. Last 0 characters read: |Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53'|System info: host: 'xxxxx', ip: 'xxxxxxx', os.name: 'Linux', os.arch: 'amd64', os.version: '4.15.0-96-generic', java.version: '1.8.0_242'|Driver info: driver.version: unknown 	at org.openqa.selenium.json.JsonInput.expect(JsonInput.java:290) 	at org.openqa.selenium.json.JsonInput.beginObject(JsonInput.java:220) 	at org.openqa.selenium.json.MapCoercer.lambda$apply$1(MapCoercer.java:64) 	at org.openqa.selenium.json.JsonTypeCoercer.lambda$null$6(JsonTypeCoercer.java:145) 	at org.openqa.selenium.json.JsonTypeCoercer.coerce(JsonTypeCoercer.java:126) 	at org.openqa.selenium.json.Json.toType(Json.java:69) 	at org.openqa.selenium.json.Json.toType(Json.java:55) 	at org.openqa.selenium.json.Json.toType(Json.java:50) 	at org.openqa.grid.web.servlet.RegistrationServlet.process(RegistrationServlet.java:83) 	at org.openqa.grid.web.servlet.RegistrationServlet.doGet(RegistrationServlet.java:64) 	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687) 	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790) 	at org.seleniumhq.jetty9.servlet.ServletHolder.handle(ServletHolder.java:865) 	at org.seleniumhq.jetty9.servlet.ServletHandler.doHandle(ServletHandler.java:535) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:146) 	at org.seleniumhq.jetty9.security.SecurityHandler.handle(SecurityHandler.java:548) 	at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:257) 	at org.seleniumhq.jetty9.server.session.SessionHandler.doHandle(SessionHandler.java:1595) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:255) 	at org.seleniumhq.jetty9.server.handler.ContextHandler.doHandle(ContextHandler.java:1340) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:203) 	at org.seleniumhq.jetty9.servlet.ServletHandler.doScope(ServletHandler.java:473) 	at org.seleniumhq.jetty9.server.session.SessionHandler.doScope(SessionHandler.java:1564) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:201) 	at org.seleniumhq.jetty9.server.handler.ContextHandler.doScope(ContextHandler.java:1242) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:144) 	at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132) 	at org.seleniumhq.jetty9.server.Server.handle(Server.java:503) 	at org.seleniumhq.jetty9.server.HttpChannel.handle(HttpChannel.java:364) 	at org.seleniumhq.jetty9.server.HttpConnection.onFillable(HttpConnection.java:260) 	at org.seleniumhq.jetty9.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:305) 	at org.seleniumhq.jetty9.io.FillInterest.fillable(FillInterest.java:103) 	at org.seleniumhq.jetty9.io.ChannelEndPoint$2.run(ChannelEndPoint.java:118) 	at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:333) 	at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:310) 	at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:168) 	at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.produce(EatWhatYouKill.java:132) 	at org.seleniumhq.jetty9.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:765) 	at org.seleniumhq.jetty9.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:683) 	at java.lang.Thread.run(Thread.java:748)     **when i tried to run code:**  this issue is showing: 020-04-24 15:13:57.447:WARN:osjs.HttpChannel:qtp1685232414-11: /grid/register/ org.openqa.selenium.json.JsonException: Expected to read a START_MAP but instead have: END. Last 0 characters read: |Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53'|System info: host: 'shamanth-HP-Pavilion-15-Notebook-PC', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '4.15.0-96-generic', java.version: '1.8.0_242'|Driver info: driver.version: unknown 	at org.openqa.selenium.json.JsonInput.expect(JsonInput.java:290) 	at org.openqa.selenium.json.JsonInput.beginObject(JsonInput.java:220) 	at org.openqa.selenium.json.MapCoercer.lambda$apply$1(MapCoercer.java:64) 	at org.openqa.selenium.json.JsonTypeCoercer.lambda$null$6(JsonTypeCoercer.java:145) 	at org.openqa.selenium.json.JsonTypeCoercer.coerce(JsonTypeCoercer.java:126) 	at org.openqa.selenium.json.Json.toType(Json.java:69) 	at org.openqa.selenium.json.Json.toType(Json.java:55) 	at org.openqa.selenium.json.Json.toType(Json.java:50) 	at org.openqa.grid.web.servlet.RegistrationServlet.process(RegistrationServlet.java:83) 	at org.openqa.grid.web.servlet.RegistrationServlet.doGet(RegistrationServlet.java:64) 	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687) 	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790) 	at org.seleniumhq.jetty9.servlet.ServletHolder.handle(ServletHolder.java:865) 	at org.seleniumhq.jetty9.servlet.ServletHandler.doHandle(ServletHandler.java:535) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:146) 	at org.seleniumhq.jetty9.security.SecurityHandler.handle(SecurityHandler.java:548) 	at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:257) 	at org.seleniumhq.jetty9.server.session.SessionHandler.doHandle(SessionHandler.java:1595) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:255) 	at org.seleniumhq.jetty9.server.handler.ContextHandler.doHandle(ContextHandler.java:1340) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:203) 	at org.seleniumhq.jetty9.servlet.ServletHandler.doScope(ServletHandler.java:473) 	at org.seleniumhq.jetty9.server.session.SessionHandler.doScope(SessionHandler.java:1564) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:201) 	at org.seleniumhq.jetty9.server.handler.ContextHandler.doScope(ContextHandler.java:1242) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:144) 	at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132) 	at org.seleniumhq.jetty9.server.Server.handle(Server.java:503) 	at org.seleniumhq.jetty9.server.HttpChannel.handle(HttpChannel.java:364) 	at org.seleniumhq.jetty9.server.HttpConnection.onFillable(HttpConnection.java:260) 	at org.seleniumhq.jetty9.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:305) 	at org.seleniumhq.jetty9.io.FillInterest.fillable(FillInterest.java:103) 	at org.seleniumhq.jetty9.io.ChannelEndPoint$2.run(ChannelEndPoint.java:118) 	at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:333) 	at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:310) 	at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:168) 	at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.produce(EatWhatYouKill.java:132) 	at org.seleniumhq.jetty9.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:765) 	at org.seleniumhq.jetty9.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:683) 	at java.lang.Thread.run(Thread.java:748) please let me know if any solution  This was the code i tried: from selenium import webdriver  desiredCapabilities={ ""browserName"":""chrome"" }  driver = webdriver.Remote(command_executor='http://localhost:4444/wd/hub',desired_capabilities = desiredCapabilities) driver.get(""https://www.google.co.in/"") print(driver.title) driver.quit()  Thanks in advance!!","closed","","supriya268","2020-04-24T10:16:36Z","2021-09-05T10:20:27Z"
"","8186","Cesium 3D map elements not identified in selenium","Hi,  My application has HTML controls and 3D maps shown in cesium viewer . Facing issue with recognition of elements on 3D maps as it is not html and can not get details using Inspect element option of browser. 3D map treated as Canvas and nothing comes up with right click  Can any one please suggest if any alternative way to inspect elements of 3D maps .  Thanks Chaitanya","closed","","chaitanyac-git","2020-04-09T04:56:01Z","2020-05-20T22:52:47Z"
"","8227","How to open Devtools to a new window through selenium chrome webdriver","Hi,  Is there anyway we can dock the developer tools to new window through selenium chrome webdriver? I see there are options to auto open the tool --auto-open-devtools-tab but is there any way to mention the position or make it open it to a new window? I have tried with window-size option but it is applying for whole web page not for the devtools. Could someone pls help me out here?  Thanks,","closed","","kavimuru2020","2020-04-22T06:27:21Z","2021-09-05T10:20:32Z"
"","8808","node.js: Is there any way to NOT download the driver and don't setup the system PATH.","Hi,  Is there any way to NOT download the driver (eg: [chromedriver)](http://chromedriver.storage.googleapis.com/index.html) and don't setup the [system PATH](https://en.wikipedia.org/wiki/PATH_%28variable%29)  if I want to download specific chrome version then use this version to run selenium code. any idea for this issue?  Thanks, Terry.","closed","","TerryLee7788","2020-10-20T09:34:46Z","2021-09-05T08:33:58Z"
"","8831","The parameters ""--publish-events"" and ""--subscribe-events"" are not supported for 'hub' in selenium-4 alpha 6","Hi,  In our tests setup, we use one and the same machine for to initiate several grid hubs on several ports. However, with the current selenium-4 alpha 6 I get the exception from https://github.com/SeleniumHQ/selenium/issues/8414 :  Caused by: org.zeromq.ZMQException: Errno 48 : Address already in use  From my comment in the issue I did not get info about when the fix is expected to be introduced, hence, I am posting this as a question. It is important for us because without the fix we cannot migrate to the latest Selenium version.  Thank you in advance!","closed","","hnestorova","2020-11-02T13:26:49Z","2021-09-05T08:33:52Z"
"","8820","The parameters ""--publish-events"" and ""--subscribe-events"" are not supported for 'hub' in selenium-4 alpha 6","Hi,  In our tests setup, we use one and the same machine for to initiate several grid hubs on several ports. However, with the current selenium-4 alpha 6 I get the exception from https://github.com/SeleniumHQ/selenium/issues/8414  üëç Caused by: org.zeromq.ZMQException: Errno 48 : Address already in use  From my comment in the issue I did not get info about when the fix is expected to be introduced, hence, I am posting this as a question. It is important for us because without the fix we cannot migrate to the latest Selenium version.  Thank you in advance!","closed","","hnestorova","2020-10-26T13:01:02Z","2021-09-05T08:33:56Z"
"","8431","Possible issue with IE config documentation","Hi,  I think the below link: https://github.com/SeleniumHQ/selenium/wiki/InternetExplorerDriver#required-configuration   has an issue. It says: The browser zoom level must be set to 100% so that the native mouse events can be set to the correct coordinates. For Windows 10, you also need to set ""Change the size of text, apps, and other items"" to 100% in display settings.  My laptop has a recommended setting of 250%, and in this case if I set both as 100%, it doesn't work for me, so I set it as 250% and wrote the code as below and it worked:                     InternetExplorerOptions options= new InternetExplorerOptions();                     options.RequireWindowFocus = true;                     options.IgnoreZoomLevel = true;                     _driverIE = new InternetExplorerDriver(options);  Please fix the documentation if needed, or else please let me know if my understanding is incorrect. Thanks!  Regards Manish","closed","","mksingh123","2020-06-17T07:18:00Z","2021-09-05T09:36:43Z"
"","8810","FIREFOX WebDriverException o StartUp","Hi,  I have a bit of an inconsistent issue when initializing webdriver for firefox I get the below exception on certain machines only when I try to set a new webdriver I have a few machines with the exact same code + firefox version + gecko version, on some it works and on others it does not  Has anybody perhaps experienced similar issues and is there perhaps a way to get more details regarding the issue  Caused by: org.openqa.selenium.WebDriverException: Build info: version: '4.0.0-alpha-6', revision: '5f43a29cfc' System info: host: 'XXXXX', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '4.15.0-118-generic', java.version: '1.8.0_265' Driver info: driver.version: FirefoxDriver 	at org.openqa.selenium.firefox.FirefoxDriver.toExecutor(FirefoxDriver.java:204) 	at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:176) 	at com.tb.config.BrowserConfig.configureFireFox(BrowserConfig.java:87) 	at com.tb.config.BrowserConfig.(BrowserConfig.java:38)","closed","","moeniebdavids","2020-10-20T12:40:21Z","2021-09-05T08:33:57Z"
"","8575","Vulnerable dependencies are used","Hi,  based on the dependencies of the latest stable version, there are two dependencies that have public known vulnerabilities: https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java/3.141.59 https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-server/3.141.59  okhttp-3.11.0.jar -> CVE-2018-20200 jetty-repacked-9.4.12.v20180830.jar -> CVE-2019-10241, CVE-2019-10247  I am not sure whether these dependencies will be used in next releases, dependency-check tool can be used to detect vulnerable dependencies: https://owasp.org/www-project-dependency-check/  Thank you. Kind regards.","closed","","sectestaccount","2020-07-28T10:05:39Z","2021-09-05T09:02:53Z"
"","7962","Bug :: Issue while performing actions on elements with CSS locators","Hi Team,  We are seeing below response when we perform an action (moveTo using actions class) on the elements located with CSS locators. But this issue is not seen when the same element is located (using ""findElement"" method) with XPath (able to perform the actions). **Error Message**: HTTP Status: 200 { ""message"": ""unknown error: failed to parse value of getElementRegion\n (Session info: MicrosoftEdge=79.0.309.65)\n (Driver info: MSEdgeDriver=79.0.309.65 (3e1b7a4d68b8e16706c84693b2e5c630d35c4533),platform=Windows NT 10.0.10586 x86_64)"" }  OS: Windows 10 Browser: MicrosoftEdge=79  **Note**: The elements are of Salesforce Lighting.  Please verify the issue and suggest.  Thanks & Regards, Anusha","closed","","Anusha07","2020-01-27T10:47:20Z","2020-02-28T07:12:37Z"
"","8618","AddUserProfilePreference: Protocol_handler","Hi Team,  I wanted to update Chrome Profile preferences in Selenium C# to make a popup disappear by adding following line as part of Chrome Options.  string url = ""https://google.com""; string envName = ""xyz.qa""; ChromeOptions.AddUserProfilePreference(""protocol_handler.allowed_origin_protocol_pairs."" + url + ""."" + envName, true);  However the above line is resulting in updating chrome profile preference file in a wrong format i.e., when it encounters .(dot) in preference name it is not getting suppressed.  Expected: ""protocol_handler"":{""allowed_origin_protocol_pairs"":{""https://google.com"":{""xyz.qa"":true}}} Actual: ""protocol_handler"":{""allowed_origin_protocol_pairs"":{""https://google"" {""com"":{""xyz"" {""qa"":true}}}}}  Second approach: string jsonValue = ""{ "" + url + "":{ "" + envName + "":true} }""; var obj = JObject.Parse(jsonValue); ChromeOptions.AddUserProfilePreference(""protocol_handler.allowed_origin_protocol_pairs"", obj);  Expected: ""protocol_handler"":{""allowed_origin_protocol_pairs"":{""https://google.com"":{""xyz.qa"":true}}} Actual: ""protocol_handler"":{""allowed_origin_protocol_pairs"":{""https://google.com"" :{""xyz.qa"":[] }}}  Everything looks good except the value true, it is getting replaced with [].  I tried different ways to correct the format but not able to get it corrected. Please suggest how do I update the preference file in expected format.  Note: I was able to successfully handle the ""Always open links of this type in the associated app"" using the following line of code until Chrome version 83. options.AddUserProfilePreference(""protocol_handler.excluded_schemes.xyz.qa"", false);","closed","","GitSuC","2020-08-07T14:06:22Z","2021-09-05T08:37:31Z"
"","8479","okhttp3 - 3.11.0 Transitive Dependency that used by Selenium-java/3.141.59 got vulnerabilities","Hi Team  I am not expecting any specific action on this report. Logging this to help your team and the community. Three of my team members worked around 8 hours to come to this conclusion and putting it out there hoping it will help others......This is very specific edge case and execution env. like this may not happen to all but it's a BLOCKER for us currently.   SETUP: We are currently doing an automation project for a government client and all the Maven packages are coming via NEXUS Artifactory. It got a upstream link to Maven Central and all packages from Maven Central is scanned for known security vulnerabilities. Unfortunately the okhttp3 - 3.11.0 is blocking by Nexus to have security vulnerabilities and getting blocked.   Issue: As you may know Selenium Java latest (3.141.59) and past versions marked okhttp3 - 3.11.0 as a transitive dependency and above issue is preventing us using Selenium Java for our project. Link: https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java/3.141.59 version  Why we can't change the version: We did test latest and other versions of OKHTTP versions including 4.72 but it's not properly integrating with Selenium and test are failing for ALL Click() function as once the click is done it's not sending the result back to selenium and tests getting timeout and failing.  Above is only reproducible under very specific conditions and as below. Unfortunately this is the setup we got to work with for our execution and no way around it.  ## Environment Mode: HEADLESS Type: Docker container running on OpenShift IP Version: IPV6 OS: Linux REDHAT Browser: Chrome Browser version: 83.0.4103.116 Browser Driver version: 83.0.4103.39 (Linux Version) Language Bindings version: OPENJDK 8  Maven: 3.5  NOTE 1: Issue is ONLY with CLICK and all other actions are working. We have bypass the NEXUS and used selenium-java/3.141.59 with recommended okhttp3 - 3.11.0 under above conditions / Environment and all tests are working including the clicka() function.  When we change the okhttp3 version to another than 3.11.0, under above environment, and they are failing. Hence the conclusion that issue is with okhttp3. We have tested with 4.72 / 3.14.6.","closed","","DannMendis","2020-07-04T23:25:45Z","2021-09-05T09:12:38Z"
"","8400","ERROR o.a.j.t.JMeterThread: Test failed! org.openqa.selenium.WebDriverException: Timed out waiting for driver server to start","Hi I'm using chromedriverVersion: 83.0.4103.39 and Chrome version =83.0.4103.97  for performance execution on Jmeter , but after few hours of test I'm getting ""**ERROR o.a.j.t.JMeterThread: Test failed! org.openqa.selenium.WebDriverException: Timed out waiting for driver server to start**"" .   2020-06-05 14:42:53,966 INFO o.a.j.t.JMeterThread: Thread finished: 111.10.10.79:1099-SCENARIO1 4-2 2020-06-05 14:43:54,175 ERROR c.g.j.p.w.s.WebDriverSampler: timeout: Timed out receiving message from renderer: 120.000   (Session info: chrome=83.0.4103.97) Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z' System info: host: 'was-all-vm4-prf', ip: '111.10.10.79', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_251' Driver info: org.openqa.selenium.chrome.ChromeDriver Capabilities {acceptInsecureCerts: true, browserName: chrome, browserVersion: 83.0.4103.97, chrome: {chromedriverVersion: 83.0.4103.39 (ccbf011cb2d2b..., userDataDir: C:\Users\Perf_VM_Admin\AppD...}, goog:chromeOptions: {debuggerAddress: localhost:52064}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(system), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 120000, script: 12000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true} Session ID: 1ccf7264d918b1eeb3a4d1b5246dddd8 *** Element info: {Using=xpath, value=//span[text()='Climate']} 2020-06-05 14:43:54,182 ERROR c.g.j.p.w.s.WebDriverSampler: timeout: Timed out receiving message from renderer: 120.000   (Session info: chrome=83.0.4103.97) Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z' System info: host: 'was-all-vm4-prf', ip: '111.10.10.79', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_251' Driver info: org.openqa.selenium.chrome.ChromeDriver Capabilities {acceptInsecureCerts: true, browserName: chrome, browserVersion: 83.0.4103.97, chrome: {chromedriverVersion: 83.0.4103.39 (ccbf011cb2d2b..., userDataDir: C:\Users\Perf_VM_Admin\AppD...}, goog:chromeOptions: {debuggerAddress: localhost:51857}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(system), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 120000, script: 12000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true} Session ID: f0e86a7b96a3651a06e943b6b02200c7 *** Element info: {Using=xpath, value=//span[text()='Log Out']} 2020-06-05 14:43:54,256 ERROR c.g.j.p.w.s.WebDriverSampler: timeout: Timed out receiving message from renderer: 120.000   (Session info: chrome=83.0.4103.97) Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z' System info: host: 'was-all-vm4-prf', ip: '111.10.10.79', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_251' Driver info: org.openqa.selenium.chrome.ChromeDriver Capabilities {acceptInsecureCerts: true, browserName: chrome, browserVersion: 83.0.4103.97, chrome: {chromedriverVersion: 83.0.4103.39 (ccbf011cb2d2b..., userDataDir: C:\Users\Perf_VM_Admin\AppD...}, goog:chromeOptions: {debuggerAddress: localhost:51892}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(system), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 120000, script: 12000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true} Session ID: 7ab6156cf4f914da0ed2358a14690625 *** Element info: {Using=xpath, value=//h6[text()='Climate2']} 2020-06-05 14:43:54,256 ERROR c.g.j.p.w.s.WebDriverSampler: timeout: Timed out receiving message from renderer: 120.000   (Session info: chrome=83.0.4103.97) Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z' System info: host: 'was-all-vm4-prf', ip: '111.10.10.79', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_251' Driver info: org.openqa.selenium.chrome.ChromeDriver Capabilities {acceptInsecureCerts: true, browserName: chrome, browserVersion: 83.0.4103.97, chrome: {chromedriverVersion: 83.0.4103.39 (ccbf011cb2d2b..., userDataDir: C:\Users\Perf_VM_Admin\AppD...}, goog:chromeOptions: {debuggerAddress: localhost:52246}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(system), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 120000, script: 12000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true} Session ID: d71d226f65b0eb42d66516ab8fa25d65 *** Element info: {Using=xpath, value=//span[text()='Change']} 2020-06-05 14:43:54,262 ERROR c.g.j.p.w.s.WebDriverSampler: timeout: Timed out receiving message from renderer: 120.000   (Session info: chrome=83.0.4103.97) Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z' System info: host: 'was-all-vm4-prf', ip: '111.10.10.79', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_251' Driver info: org.openqa.selenium.chrome.ChromeDriver Capabilities {acceptInsecureCerts: true, browserName: chrome, browserVersion: 83.0.4103.97, chrome: {chromedriverVersion: 83.0.4103.39 (ccbf011cb2d2b..., userDataDir: C:\Users\Perf_VM_Admin\AppD...}, goog:chromeOptions: {debuggerAddress: localhost:52131}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(system), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 120000, script: 12000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true} Session ID: 84566adf1441f824b1800f01e58304a0 *** Element info: {Using=xpath, value=//p[text()='Click']/../../..//button} 2020-06-05 14:44:14,847 ERROR o.a.j.t.JMeterThread: Test failed! org.openqa.selenium.WebDriverException: Timed out waiting for driver server to start. Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z' System info: host: 'was-all-vm4-prf', ip: '111.10.10.79', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_251' Driver info: driver.version: unknown 	at org.openqa.selenium.remote.service.DriverService.waitUntilAvailable(DriverService.java:193) ~[selenium-remote-driver-3.14.0.jar:?] 	at org.openqa.selenium.remote.service.DriverService.start(DriverService.java:179) ~[selenium-remote-driver-3.14.0.jar:?] 	at com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig.getThreadService(ChromeDriverConfig.java:93) ~[jmeter-plugins-webdriver-3.1.jar:?] 	at com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig.createBrowser(ChromeDriverConfig.java:73) ~[jmeter-plugins-webdriver-3.1.jar:?] 	at com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig.createBrowser(ChromeDriverConfig.java:21) ~[jmeter-plugins-webdriver-3.1.jar:?] 	at com.googlecode.jmeter.plugins.webdriver.config.WebDriverConfig.getPreparedBrowser(WebDriverConfig.java:233) ~[jmeter-plugins-webdriver-3.1.jar:?] 	at com.googlecode.jmeter.plugins.webdriver.config.WebDriverConfig.iterationStart(WebDriverConfig.java:205) ~[jmeter-plugins-webdriver-3.1.jar:?] 	at org.apache.jmeter.control.GenericController.fireIterationStart(GenericController.java:399) ~[ApacheJMeter_core.jar:5.2.1] 	at org.apache.jmeter.control.GenericController.fireIterEvents(GenericController.java:391) ~[ApacheJMeter_core.jar:5.2.1] 	at org.apache.jmeter.control.GenericController.next(GenericController.java:160) ~[ApacheJMeter_core.jar:5.2.1] 	at org.apache.jmeter.control.LoopController.next(LoopController.java:135) ~[ApacheJMeter_core.jar:5.2.1] 	at org.apache.jmeter.threads.AbstractThreadGroup.next(AbstractThreadGroup.java:92) ~[ApacheJMeter_core.jar:5.2.1] 	at org.apache.jmeter.threads.JMeterThread.run(JMeterThread.java:255) [ApacheJMeter_core.jar:5.2.1] 	at java.lang.Thread.run(Unknown Source) [?:1.8.0_251] Caused by: org.openqa.selenium.net.UrlChecker$TimeoutException: Timed out waiting for [http://localhost:2663/status] to be available after 20001 ms 	at org.openqa.selenium.net.UrlChecker.waitUntilAvailable(UrlChecker.java:100) ~[selenium-remote-driver-3.14.0.jar:?] 	at org.openqa.selenium.remote.service.DriverService.waitUntilAvailable(DriverService.java:188) ~[selenium-remote-driver-3.14.0.jar:?] 	... 13 more Caused by: java.util.concurrent.TimeoutException 	at java.util.concurrent.FutureTask.get(Unknown Source) ~[?:1.8.0_251] 	at com.google.common.util.concurrent.SimpleTimeLimiter.callWithTimeout(SimpleTimeLimiter.java:156) ~[guava-25.0-jre.jar:?] 	at org.openqa.selenium.net.UrlChecker.waitUntilAvailable(UrlChecker.java:75) ~[selenium-remote-driver-3.14.0.jar:?] 	at org.openqa.selenium.remote.service.DriverService.waitUntilAvailable(DriverService.java:188) ~[selenium-remote-driver-3.14.0.jar:?] 	... 13 more","closed","","MagnusJmeter","2020-06-08T11:45:46Z","2021-09-05T09:36:50Z"
"","8552","Download files using desired capabilities from Firefox and chrome NOT WORKING in 7.0.5 version","Hi Everyone:  **Please help me to resolve this issue:**   There is one button which contains the pdf file. When i am clicking on it, it is not downloading in Downloads folder rather it is opening in new window. I tried with both Firefox browser and chrome options also.Nothing is working. What i have seen at the run the time when the browser is getting opened from Katalon studio the settings of chrome or firfox for PDF Documents change to open in new window rather than downloading. I have used the below code but it is not WORKING: For Firefox i set the capabilities in Settings of katalon studio below is the screenshot: as it is pdf file i used application/Pdf:  ![image](https://user-images.githubusercontent.com/68520056/87887289-a02fa600-c9f1-11ea-8bb6-ec5fa95e05df.png)   For chrome i am using settings:  HashMap chromePrefs = new HashMap() chromePrefs.put(‚Äúdownload.default_directory‚Äù, downloadPath) chromePrefs.put(‚Äúdownload.prompt_for_download‚Äù, false)      // specify path to ChromeDriver System.setProperty(""webdriver.chrome.driver"", projDir + ""\\Files\\chromedriver.exe"") ChromeOptions options = new ChromeOptions() options.setExperimentalOption(""prefs"", chromePrefs)      // create web driver WebDriver driver = new ChromeDriver(options)      // use your driver instead of default one DriverFactory.changeWebDriver(driver)   Nothing is working. Please help me guys:","closed","","rishu1963","2020-07-19T23:00:52Z","2021-09-05T09:02:57Z"
"","8551","Download files using desired capabilities from Firefox and chrome NOT WORKING in 7.0.5 version","Hi Everyone:  **Please help me to resolve this issue:**   There is one button which contains the pdf file. When i am clicking on it, it is not downloading in Downloads folder rather it is opening in new window. I tried with both Firefox browser and chrome options also.Nothing is working. What i have seen at the run the time when the browser is getting opened from Katalon studio the settings of chrome or firfox for PDF Documents change to open in new window rather than downloading. I have used the below code but it is not WORKING: For Firefox i set the capabilities in Settings of katalon studio below is the screenshot: as it is pdf file i used application/Pdf:  ![image](https://user-images.githubusercontent.com/68520056/87887289-a02fa600-c9f1-11ea-8bb6-ec5fa95e05df.png)   For chrome i am using settings:  HashMap chromePrefs = new HashMap() chromePrefs.put(‚Äúdownload.default_directory‚Äù, downloadPath) chromePrefs.put(‚Äúdownload.prompt_for_download‚Äù, false)      // specify path to ChromeDriver System.setProperty(""webdriver.chrome.driver"", projDir + ""\\Files\\chromedriver.exe"") ChromeOptions options = new ChromeOptions() options.setExperimentalOption(""prefs"", chromePrefs)      // create web driver WebDriver driver = new ChromeDriver(options)      // use your driver instead of default one DriverFactory.changeWebDriver(driver)   Nothing is working. Please help me guys:","closed","","rishu1963","2020-07-19T22:58:36Z","2021-09-05T09:02:56Z"
"","8428","org.openqa.selenium.remote.server.WebDriverServlet has hardcoded session timeout","Hi dev team.  We in one of our project start long time jobs on remote nodes. Those jobs sometime can take few hours.  We've used old version some application which uses old version of Selenium WebDriver. And it works perfectly many years. Now we've switched to new version of those application which uses new version of selenium WebDriver. And it stop to work. I've reviewed all stack trace and see issue in class  org.openqa.selenium.remote.server.WebDriverServlet  When you execute any executor you hardcoded timeout for 10 minutes.       try {       execution.get(10, MINUTES);     } catch (ExecutionException e) {       resp.reset();       JeeInterop.execute(new ExceptionHandler(e), req, resp);     } catch (InterruptedException e) {       logger.log(Level.WARNING, ""Unexpectedly interrupted: "" + e.getMessage(), e);       invalidateSession = true;        Thread.currentThread().interrupt();     } catch (TimeoutException e) {       invalidateSession = true;     }  This is exactly what I'm seeing in our new application. I trying to set any timeout, but it closed session in 10 minutes.  Could you please explain why you do this? Seems this is a bug. Do you know any workaround to make it works?  Sincerely, Vasyl Shevchuk  ## üí¨ Questions and Help  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","HeliosPip","2020-06-16T10:59:16Z","2021-09-05T09:36:45Z"
"","8444","OpenQA.Selenium.DevTools - WebSocketFrameReceived Not firing","Hi all, I tried the new v4 selenium.  Can't get the Devtool network WebSocketFrameReceived  to fire.  static void Main(string[] args)  { ChromeDriver chromeDriver = new ChromeDriver(); DevToolsSession session = chromeDriver.CreateDevToolsSession(); session.Network.WebSocketFrameReceived += Network_WebSocketFrameReceived; chromeDriver.Navigate().GoToUrl(""https://www.websocket.org/echo.html"");  }  private static void Network_WebSocketFrameReceived(object sender, OpenQA.Selenium.DevTools.Network.WebSocketFrameReceivedEventArgs e) { String response = e.Response.PayloadData;  }","closed","","spikeruk","2020-06-20T14:42:43Z","2021-09-05T09:36:40Z"
"","8301","Office 365 - Excel Online Automation with C#","HI All,  We are writing UI test automation scripts, where, we need to add some contents to excel online opened in the browser. We are using Selenium Automation. Please let us know if we can access excel online through C# code.  I tried below. But, getting element not found exception when finding the name box.  Please suggest whether it can be supported or not. If supported, please help us to achieve,  ` IWebDriver webDriver = new ChromeDriver(); webDriver.Manage().Window.Maximize(); webDriver.Navigate().GoToUrl(""Online-Excel-URL""); var nameBox = webDriver.FindElement(By.Id(""m_excelWebRenderer_ewaCtl_NameBox"")); nameBox.SendKeys(""B250""); nameBox.SendKeys(Keys.Enter); var formulaBar = webDriver.FindElement(By.Id(""formulaBarTextDivId_textElement"")); `  ![image](https://user-images.githubusercontent.com/65273444/81780371-0bea2400-9514-11ea-9532-bac5251a3047.png)  Stack Trace: ![image](https://user-images.githubusercontent.com/65273444/81780639-7d29d700-9514-11ea-8663-2cca93b14e97.png)  Message: ![image](https://user-images.githubusercontent.com/65273444/81780686-93379780-9514-11ea-9362-2bdcafc5dd84.png)","closed","","kiran-ch","2020-05-13T06:58:31Z","2021-09-05T10:02:52Z"
"","8011","Selenium click not working when running on Apple Mac/Safari 13.0.5 and selenium 3.141.59","Hi All,  Facing the same issue again when executing the scripts on Apple Mac/Safari 13.0.5 with selenium 3.141.59 version. Direct click action not working on the browser and also Javascript click working some times and some times not working. I think it's related to the issue https://github.com/SeleniumHQ/selenium/issues/7649, please look into this ticket and provide use the latest update on this safari browser version.","closed","","venkateshseerapu","2020-02-08T16:49:33Z","2020-03-10T19:16:40Z"
"","8215","Data extraction from webtable header","Hi , I have a requirement where all the data  in table   header which is displayed on ui  has to be captured. Problem with this is I could capture content  which is displayed on the screen but not all the data in the table header (we get some data after moving the scroll bar right). For example say I have 30 header values in a table.I could see 15 on UI and remaining 15  rows I could see only after moving the scroll bar down. Selenium is getting content only for the visible  15 header values  Any have a solution for this ?","closed","","sandeepbonagiri","2020-04-18T10:57:39Z","2020-05-20T19:03:17Z"
"","8674","how do you hide messages like DevTools listening on ws:","hi  how do i get rid of / hide this message with nodejs + chromedriver on Windows please? *DevTools listening on ws://127.0.0.1:61015/devtools/browser/f4376b68-a497-41cf-a912-f0c3b5ca3a61*  i tried this: - --log-level=1 2 3 4  - adding all the possible options to Builder.withCapabilities() - mocha.cmd >NUL 2>&1 - read all of stackexchange about that subject   I also tried to communicate: - IRC chan is empty - slack link is dead - cannot post on groups.google.com  thank you","closed","","audioscavenger","2020-09-05T20:53:42Z","2021-09-05T08:36:05Z"
"","8327","Jenkins error with chrome: Chrome failed to start: exited abnormally (unknown error: DevToolsActivePort file doesn't exist)","Hey, I am trying to build my code through Jenkins but below error is encountered, pls help to fix:  unknown error: Chrome failed to start: exited abnormally (unknown error: DevToolsActivePort file doesn't exist) (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.) Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03' System info: host: 'stayprime-Lenovo-ideapad-330-15IKB', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '5.3.0-40-generic', java.version: '11.0.6' Driver info: driver.version: ChromeDriver remote stacktrace: #0 0x555af40ca479 -------------------------------------------------  O.S version: Ubuntu 18.04.2 LTS Chrome version: Version 79.0.3945.88 (Official Build) (64-bit) Chrome driver version: 79.0.3945.36 Language: JAVA Project: Eclipse Testing Framework: TestNG","closed","","DB8851","2020-05-20T04:33:12Z","2021-09-05T09:44:13Z"
"","7942","webdriver.get() raise TimeoutException","Hey,  i use selenium in combination with celery and mitmproxy to scan cookies from several websites every day. Yesterday my application crashes in consequence of the following exception:  ``` Traceback (most recent call last):   File ""/usr/local/lib/python3.7/dist-packages/celery/app/trace.py"", line 385, in trace_task     R = retval = fun(*args, **kwargs)   File ""/usr/local/lib/python3.7/dist-packages/celery/app/trace.py"", line 648, in __protected_call__     return self.run(*args, **kwargs)   File ""/home/myapplication/myapplication/api/tasks.py"", line 24, in scan_periodically     x.startscanner(executor=Scan.PERIODICALLY)   File ""/home/myapplication/myapplication/api/scanner.py"", line 204, in startscanner     self.browser_list[self.browser_list_place].get(self.website.url)   File ""/home/myapplication/.local/lib/python3.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 333, in get     self.execute(Command.GET, {'url': url})   File ""/home/myapplication/.local/lib/python3.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 321, in execute     self.error_handler.check_response(response)   File ""/home/myapplication/.local/lib/python3.7/site-packages/selenium/webdriver/remote/errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.TimeoutException: Message: timeout   (Session info: headless chrome=76.0.3809.100) ```  I use the python api from selenium with python version 3.7.3, selenium api version 3.141.0 and Google Chrome 76.0.3809.100 with chromedriver version 76.0.3809.68.  Why the webdriver get() method raises a TimeoutException?","closed","","basti96","2020-01-17T09:45:41Z","2020-02-16T11:28:23Z"
"","8841","selenium4.0.0a6 post2 - firefox_profiles.py 'No such file or directory: webdriver_prefs.json'","Hello, trying to use firefox with the SeleniumLib version 5.0.0b1 and Selenium 4.0.0a6.post2, but i have this error : FileNotFoundError: [Errno 2] No such file or directory: 'c:\\users\\qtjw6357\\appdata\\local\\programs\\python\\python38-32\\lib\\site-packages\\selenium\\webdriver\\firefox\\webdriver_prefs.json'.   Here the full log :  DEBUG : Traceback (most recent call last):   File ""c:\users\qtjw6357\appdata\local\programs\python\python38-32\lib\site-packages\SeleniumLibrary\__init__.py"", line 490, in run_keyword     return DynamicCore.run_keyword(self, name, args, kwargs)   File ""c:\users\qtjw6357\appdata\local\programs\python\python38-32\lib\site-packages\robotlibcore.py"", line 103, in run_keyword     return self.keywords[name](*args, **(kwargs or {}))   File ""c:\users\qtjw6357\appdata\local\programs\python\python38-32\lib\site-packages\SeleniumLibrary\keywords\browsermanagement.py"", line 292, in open_browser     return self._make_new_browser(   File ""c:\users\qtjw6357\appdata\local\programs\python\python38-32\lib\site-packages\SeleniumLibrary\keywords\browsermanagement.py"", line 323, in _make_new_browser     driver = self._make_driver(   File ""c:\users\qtjw6357\appdata\local\programs\python\python38-32\lib\site-packages\SeleniumLibrary\keywords\browsermanagement.py"", line 715, in _make_driver     driver = self._webdriver_creator.create_driver(   File ""c:\users\qtjw6357\appdata\local\programs\python\python38-32\lib\site-packages\SeleniumLibrary\keywords\webdrivertools\webdrivertools.py"", line 83, in create_driver     return creation_method(   File ""c:\users\qtjw6357\appdata\local\programs\python\python38-32\lib\site-packages\SeleniumLibrary\keywords\webdrivertools\webdrivertools.py"", line 187, in create_firefox     profile = self._get_ff_profile(ff_profile_dir)   File ""c:\users\qtjw6357\appdata\local\programs\python\python38-32\lib\site-packages\SeleniumLibrary\keywords\webdrivertools\webdrivertools.py"", line 211, in _get_ff_profile     return webdriver.FirefoxProfile()   File ""c:\users\qtjw6357\appdata\local\programs\python\python38-32\lib\site-packages\selenium\webdriver\firefox\firefox_profile.py"", line 58, in __init__     with open(os.path.join(os.path.dirname(__file__),","closed","","chenry35","2020-11-05T08:26:16Z","2021-09-05T08:31:36Z"
"","8338","Gecko-Driver wont use Socks5 provided through add argument","Hello,  i would love to use the geckodriver, just bc i dont like chrome. But  i have a problem. When i want to run my code with socks5 through add_argument it would work with chromedriver, but not with geckodriver.   The browser instance is launching, but it still shows my normal ip.   Here is my code:  ```  from selenium import webdriver import os from selenium.webdriver.common.keys import Keys from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as EC from selenium.webdriver.common.by import By from selenium.webdriver.firefox.options import Options   def test(login):     userProfile = r""c:\Users\admin\AppData\Roaming\Mozilla\Firefox\Profiles\inpo8iou.default""     options = Options()     options.add_argument('--proxy-server=socks5://127.0.0.1:9955')     geckodriver = ""./geckodriver.exe""     driver = webdriver.Firefox(options=options, executable_path=geckodriver)     driver.get(""https://whoer.net"")  ```","closed","","wernerwernerwerner888","2020-05-23T05:57:28Z","2020-06-24T19:44:10Z"
"","8788","[Java] Cannot build multimodule maven project as selenium.api doesn't export org.openqa.selenium.internal","Hello, I'm using Selenium 4 alpha 6 and Java 11 in a multi-module maven 3.6.3 project. One of my modules requires in its module-info,java the following selenium modules:      requires org.seleniumhq.selenium.api;     requires org.seleniumhq.selenium.chrome_driver;     requires org.seleniumhq.selenium.support; Everything compiles fine if I remove all the code that needs the support module and the requires statement, but adding it back produces a compile time error:      [ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.8.1:compile (default-compile) on project     shared: Compilation failure: Compilation failure:     [ERROR] C:/Users/alaut/IdeaProjects/AliexpressBot/shared/src/main/java/com.fabifont.aliexpress/account/AccountWorker.java:    [76,29] cannot access org.openqa.selenium.internal.FindsById  It looks like the support module needs some classes located in org.openqa.selenium.internal, this package though is only available in the api module. The support module requires the api module as visible from its maven-info.java, though the api module doesn't export org.openqa.selenium.internal as visible from its maven-info.java:                  requires transitive java.logging;         exports org.openqa.selenium;         exports org.openqa.selenium.html5;         exports org.openqa.selenium.interactions;         exports org.openqa.selenium.interactions.touch;         exports org.openqa.selenium.logging;         exports org.openqa.selenium.logging.profiler;         exports org.openqa.selenium.mobile;         exports org.openqa.selenium.net;         exports org.openqa.selenium.virtualauthenticator; which leads to an error.","closed","","Auties00","2020-10-14T14:15:04Z","2021-09-05T08:34:03Z"
"","8628","Trouble running headless driven Selenium on Ubuntu Server (Python, ChromeDriver/Geckodriver)","Hello,  I have trouble running Selenium on my tiny Ubuntu Server (18.04.5 LTS). The Python code presented below for both Firefox and Chrome works as intended on my Ubuntu VM (20.04 LTS), but crashes when executed on my rented vServer. The Python virtual environment is identical.   I am using:   - Google Chrome / ChromeDriver: 84.0.4147.30 / 84.0.4147.125   - Firefox / Geckodriver: 79 / 0.27  - Python Interpreter: 3.6.9  - Python Selenium: 3.141.0   Using Chrome: ``` from selenium import webdriver from selenium.webdriver.chrome.options import Options  chrome_options = Options() chrome_options.add_argument(""start-maximized"") # https://stackoverflow.com/a/26283818/1689770 chrome_options.add_argument(""enable-automation"")#  https://stackoverflow.com/a/43840128/1689770 chrome_options.add_argument(""--headless"")#  only if you are ACTUALLY running headless chrome_options.add_argument(""--no-sandbox"")# //https://stackoverflow.com/a/50725918/1689770 chrome_options.add_argument(""--disable-infobars"")# //https://stackoverflow.com/a/43840128/1689770 chrome_options.add_argument(""--disable-dev-shm-usage"")# //https://stackoverflow.com/a/50725918/1689770 chrome_options.add_argument(""--disable-browser-side-navigation"")# //https://stackoverflow.com/a/49123152/1689770 chrome_options.add_argument(""--disable-gpu"")# //https://stackoverflow.com/questions/51959986/how-to-solve-selenium-chromedriver-timed-out-receiving-message-from-renderer-exc chrome_options.binary_location = ""/usr/bin/google-chrome""  driver = webdriver.Chrome(options=chrome_options)  driver.get(""http://www.google.com"") print(driver.current_url) driver.close() ```  Chrome crashes with: ``` Traceback (most recent call last):   File ""test.py"", line 17, in      driver = webdriver.Chrome(options=chrome_options)   File ""/home/USER/python_selenium/lib/python3.6/site-packages/selenium/webdriver/chrome/webdriver.py"", line 81, in __init__     desired_capabilities=desired_capabilities)   File ""/home/USER/python_selenium/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py"", line 157, in __init__     self.start_session(capabilities, browser_profile)   File ""/home/USER/python_selenium/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py"", line 252, in start_session     response = self.execute(Command.NEW_SESSION, parameters)   File ""/home/USER/python_selenium/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py"", line 321, in execute     self.error_handler.check_response(response)   File ""/home/USER/python_selenium/lib/python3.6/site-packages/selenium/webdriver/remote/errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.SessionNotCreatedException: Message: session not created from tab crashed   (Session info: headless chrome=84.0.4147.125) ```  Using Firefox:  ``` from selenium import webdriver  fireFoxOptions = webdriver.FirefoxOptions() fireFoxOptions.headless = True  driver = webdriver.Firefox(options=fireFoxOptions)  driver.get(""http://www.google.com"") print(driver.current_url) driver.close() ```  Firefox crashes with: ``` Traceback (most recent call last):   File ""test_firefox.py"", line 6, in      driver = webdriver.Firefox(options=fireFoxOptions)   File ""/home/USER/python_selenium/lib/python3.6/site-packages/selenium/webdriver/firefox/webdriver.py"", line 174, in __init__     keep_alive=True)   File ""/home/USER/python_selenium/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py"", line 157, in __init__     self.start_session(capabilities, browser_profile)   File ""/home/USER/python_selenium/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py"", line 252, in start_session     response = self.execute(Command.NEW_SESSION, parameters)   File ""/home/USER/python_selenium/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py"", line 321, in execute     self.error_handler.check_response(response)   File ""/home/USER/python_selenium/lib/python3.6/site-packages/selenium/webdriver/remote/errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.WebDriverException: Message: invalid argument: can't kill an exited process  ```  I have no idea what's going on, any suggestions? Thanks for your time","closed","","vdechand","2020-08-12T21:59:26Z","2021-09-05T08:37:29Z"
"","7936","ava.lang.NoSuchMethodError: org.openqa.selenium.support.ui.Wait.until(Lcom/google/common/base/Function;) using selenium-server-standalone-3.12.0","Hello,  I had an issue using FluentWait, where I get this error:  `java.lang.NoSuchMethodError: org.openqa.selenium.support.ui.Wait.until(Lcom/google/common/base/Function;)Ljava/lang/Object; `  And this is the part of the code where I get it :  ``` Wait wait = new FluentWait<>(getDriverInstance())         .withTimeout(timeout, TimeUnit.SECONDS)         .pollingEvery(frequency, TimeUnit.SECONDS)         .ignoring(NoSuchElementException.class); wait.until(driver -> {     assert driver != null;     elt.click();     return true; }); ```  The most solutions on the internet suggest to use Guava 21, but this is not working for me, since I'm using `selenium-server-standalone-3.12.0` which already includes `Guava guava-23.6-jre`  **Java version**: jdk1.8.0_231 **classpath**: .;D:\sln\lib\selenium-server-standalone-3.12.0.jar;D:\sln\lib\commons-cli-1.0.jar;D:\sln\lib\commons-configuration-1.1.jar;D:\sln\lib\sqljdbc2005-1.0.jar;D:\sln\third-party-lib\commons-lang-2.6.jar;D:\sln\third-party-lib\commons-collections-3.2.1.jar;D:\sln\third-party-lib\commons-logging-1.1.1.jar;D:\sln\third-party-lib\poi-3.8.jar;D:\sln\third-party-lib\poi-ooxml-3.8.jar;D:\sln\third-party-lib\xmlbeans-2.3.0.jar;D:\sln\third-party-lib\poi-ooxml-schemas-3.8.jar;D:\sln\third-party-lib\dom4j-1.6.1.jar;D:\sln\third-party-lib\junit-4.11.jar;D:\sln\1.7\commons-collections4-4.0.jar;  Is there any way to solve this issue ?","closed","","aimad-majdou","2020-01-14T16:37:43Z","2020-02-14T05:40:49Z"
"","7957","I am trying to record element name and xpath for owasp zap 2.9.0 tool via inspect.exe but it is not recording anything","Hello,  I am trying to get element name or xpath for owasp to run it automatically from selenium visual studio but it is not recording anything in that inspect.exe tool which in windows kit under program files (x86).  Will you please let me know how I can get the lement name or xpath for owasp zap 2.9.0?","closed","","NikitaShah2492","2020-01-22T18:16:53Z","2020-02-21T22:13:26Z"
"","8162","AppiumOptions : System.TypeLoadException : ‚ÄòAccess is denied: ‚ÄòOpenQA.Selenium.Remote.DesiredCapabilities‚Äô.‚Äô","Hello,  Can you help me with the following issue please ?  The following code generates the error ‚ÄúSystem.TypeLoadException : _‚ÄòAccess is denied: ‚ÄòOpenQA.Selenium.Remote.DesiredCapabilities‚Äô.‚Äô‚Äù_  [Screencap](https://discuss.appium.io/uploads/default/optimized/2X/7/7367c3f28f730c7cb026ff8ae33dd88e624fc586_2_1035x190.png)  Here is the code :      DriverOptions appiumOptions = new AppiumOptions();             //var appiumOptions = new AppiumOptions();             appiumOptions.AddAdditionalOption(MobileCapabilityType.PlatformName, ""Android"");             appiumOptions.AddAdditionalOption(MobileCapabilityType.PlatformVersion, ""9"");             appiumOptions.AddAdditionalOption(MobileCapabilityType.NewCommandTimeout, 60);             appiumOptions.AddAdditionalOption(MobileCapabilityType.DeviceName, ""emulator-5554"");             appiumOptions.AddAdditionalOption(""automationName"", ""UiAutomator2"");             appiumOptions.AddAdditionalOption(""appPackage"", appPackage);             appiumOptions.AddAdditionalOption(""appActivity"", appActivity);              var driver = new AndroidDriver(new Uri(host), appiumOptions);  **Selenium version** : 4.0.0-alpha05  I didn't have this issue with the latest version of Selenium, but I have to use this one. I also use the appium server.  May you help me to resolve it ? Thank you in advance for your answer :)","closed","","cnmeildedge","2020-04-06T14:14:49Z","2020-05-20T23:22:51Z"
"","8714","Alert proxy authentication ""No such alert""","Hello! I am using ChromeDriver version 85.0.4183.8700. When I have chrome opened and there is a proxy authentication alert opened (screenshot attached), when I execute code  `Driver.SwitchTo().Alert().SetAuthenticationCredentials(""username"", ""password"");` If I execute this code, I just get a timeout after 10 seconds (even if alert is there): ``` var wait = new WebDriverWait(acc.Wb.Driver, new TimeSpan(0, 0, 10)); IAlert alert = wait.Until(ExpectedConditions.AlertIsPresent()); ``` This throws exception `{""no such alert\n  (Session info: chrome=85.0.4183.102)""}` Is this a problem that chrome driver has or selenium? Am I doing something wrong? Thanks!  ![Screenshot_1](https://user-images.githubusercontent.com/18037362/93494606-80433280-f90d-11ea-8cbc-c50ff5dca211.png)  ## Environment  OS:  Windows 10 Browser: Chrome Browser version: Version 85.0.4183.102 (Official Build) (64-bit) Browser Driver version: Chrome driver 85.0.4183.8700 Language Bindings version: C#","closed","","Erol444","2020-09-18T07:44:33Z","2021-09-05T08:34:58Z"
"","8617","Private IP address disclosed","Hello Team,  Summary: When we done some security pen-testing of open-source selenium version 3.141.59 installed on our project application(i.e Productionline), we got the Private IP address disclosed in selenium URL endpoint(/grid/console), Discovering the private addresses used within an organization can help an attacker in carrying out network-layer attacks aiming to penetrate the organization's internal infrastructure.  As you can see in this screenshot: ![image](https://user-images.githubusercontent.com/69308923/89651733-fb163800-d8e1-11ea-97c0-9f986edcfc2c.png)  I believe this is a low level severity bug but if you can provide us some fix on it would appreciate it?","closed","","yashcho","2020-08-07T13:43:42Z","2021-09-05T08:37:30Z"
"","8615","Private IP address disclosed","Hello Team,  Summary: When we done some security pen-testing of open-source selenium version 3.141.59 installed on our project application(i.e Productionline), we got the Private IP address disclosed in selenium URL endpoint(/grid/console), Discovering the private addresses used within an organization can help an attacker in carrying out network-layer attacks aiming to penetrate the organization's internal infrastructure.  As you can see in this screenshot: ![image](https://user-images.githubusercontent.com/69308923/89555288-7c5fc300-d82d-11ea-8b7c-87b2a268daad.png)  I believe this is a low level severity bug but if you can provide us some fix on it would appreciate it?","closed","","yashcho","2020-08-06T16:12:32Z","2021-09-05T08:37:32Z"
"","8012","Hello from another WebDriver implementation üëã","Hello Selenium community! I am big fan of you work, especially about creating the WebDriver standard. I love it so much. I would like to share a [project ](https://mucsi96.gitbook.io/w3c-webdriver) I have been working for last 3 years (in free time üòä ) mostly for fun. This project provides JavaScript bindings that conform to the W3C WebDriver standard for controlling web browsers. Some key ideas behind it:  - Minimalistic promise based REST client. - One-to-one mapping to WebDriver API endpoints - Written in TypeScript for type safety, autocomplete and IntelliSense documentation - Full feature coverage over 55 WebDriver endpoints - 100% test coverage in real browsers (Chrome, Firefox, Safari, Internet Explorer) - Tested on Ubuntu, Windows and MacOS on CI server  Now the project became more mature achieved 100% feature coverage of the WebDriver spec and it reached a stable state and docs now are in quite good shape I would say. Sure we will do further improvements on docs by adding more examples and some tutorials. I would be more that happy if you can use it anyhow in future, provide some feedback or contribute to it üòä I was thinking what if we could do some collaboration together. What if this project could be one day the next version of selenium-webdriver project. More specifically the JavaScript (TypeScript) client of it. I am open to transfer the repository to any other organization.","closed","","mucsi96","2020-02-08T21:47:27Z","2020-03-10T19:15:18Z"
"","7881","SPM-Branch-Issue with continue scanning","Hello Liang ,      We have issue with automation of continue scanning with TAF .Could you please create template. Could you please look into the issues.","closed","needs-triaging,","akskulkarni","2019-12-23T09:45:15Z","2020-01-25T22:59:07Z"
"","7908","Failed to import atoms module ./atoms/get-attribute.js with cypress","Hello everyone, i'm trying to implement selenium with cypress because I saw what could be done on this page [Cypress.io: The Selenium killer](https://blog.logrocket.com/cypress-io-the-selenium-killer/).  The exact code that i'm trying to reproduce based on that page is this:  ``` // in e2e/home.test.js import assert from 'assert'; import { By, until } from 'selenium-webdriver'; import {     getDriver,     analyzeAccessibility, } from './helpers';  describe('Home page', () => {     let driver;      before(() => {         driver = getDriver();     });      it('has no accessibility issues', async () => {         await driver.get(`http://localhost:3000`);          // The dreaded wait until.  Abandon hope         await driver.wait(until.elementLocated(By.css('h1')));          const results = await analyzeAccessibility();         assert.equal(results.violations.length, 0);     }); }); ``` When i launch the test i'm getting this error: ![Captura de pantalla 2020-01-03 a las 8 53 55](https://user-images.githubusercontent.com/38936829/71712696-a4ee8d00-2e06-11ea-8cdc-daf6c3170327.png)  In the file that i'm trying to launch has the same code that the one in the page but with the selenium-webdriver and helpers path changed according to my routes:  ``` import assert from 'assert'; import { By, until } from '../../../../../../node_modules/selenium-webdriver'; import {     getDriver,     analyzeAccessibility, } from '../../../../../../node_modules/request/lib/helpers.js';   describe('Home page', () => {     let driver;      before(() => {         driver = getDriver();     });      it('has no accessibility issues', async () => {         await driver.get(`http://localhost:3000`);          // The dreaded wait until.  Abandon hope         await driver.wait(until.elementLocated(By.css('h1')));          const results = await analyzeAccessibility();         assert.equal(results.violations.length, 0);     }); }); ``` This is where i have the selenium-webdriver: ![Captura de pantalla 2020-01-03 a las 9 02 59](https://user-images.githubusercontent.com/38936829/71713048-44604f80-2e08-11ea-954a-9dd03df96981.png)  And this is where i have my test that implements selenium: ![Captura de pantalla 2020-01-03 a las 9 04 29](https://user-images.githubusercontent.com/38936829/71713060-53df9880-2e08-11ea-9d63-1daa70b9f91a.png)  I don't know if is enough with this for know where is the problem and i don't know if it is the right site for post this issue. If it's not sorry about that.  Thank you very much","closed","needs-triaging,","edumorata","2020-01-03T08:07:18Z","2020-02-02T09:47:43Z"
"","8653","Why do you update old docker images ?","Guys,  You broke my build. Why you update old docker images? 4.0.0 is broken.  You Even updated 3.141.59. Why ?!  However  [3.141.59](https://travis-ci.org/github/dinuta/estuary-viewer/builds/721942341) seems to work. [4.0.0](https://travis-ci.org/github/dinuta/estuary-viewer/builds/721934386) is broken  Repo: https://github.com/dinuta/estuary-viewer  Thanks, Catalin","closed","","dinuta","2020-08-28T08:15:25Z","2021-09-05T08:37:18Z"
"","8670","Unable to move down scroll bar to fetch all the details using python with selenium","from selenium import webdriver from selenium.webdriver.common.keys import Keys from selenium.webdriver.common.by import By from selenium.webdriver.support import expected_conditions as EC import pandas as pd import time  def main():      seleniumpath = r""chromedriver.exe""   -- chrome driver.exe ia a particular path      driver = webdriver.Chrome(executable_path=seleniumpath) 	     url = ""passed main page URL""     driver.get(url)      try:          user_element = driver.find_element_by_name('user')         pass_element = driver.find_element_by_name('password')          user_element.send_keys('username')         pass_element.send_keys('password')              driver.find_element_by_class_name('CLASS_NAME').click()         print(""login successful"")         time.sleep(5)              url = ""passed another page URL""         driver.get(url)         driver.maximize_window()          print(""navigated to the userpage"")           xpath = ""GIVEN xpath of the SCROLL BAR""          page = driver.find_element_by_xpath(xpath)         time.sleep(10)          while True:               Panel = driver.find_elements(By.CLASS_NAME, 'CLASS_NAME')             print(""the  number of panel available"", len(Panel))             time.sleep(5)             page.send_keys(Keys.PAGE_DOWN)    --- its not working              print(""move down"")             time.sleep(5)             panel = driver.find_elements(By.CLASS_NAME, 'CLASS_NAME'')             print(""the  number of panel available"", len(panel))             page.send_keys(Keys.END)              if len(Panel) == len(panel):                 break;          panel = driver.find_elements(By.CLASS_NAME, 'CLASS_NAME')         print(""the  number of panel available"",len(panel)) 		 		         driver.quit()      except:          print(""detail not found"")   if __name__ == '__main__':     main()","closed","","Abhishek131093","2020-09-03T09:58:18Z","2021-09-05T08:37:14Z"
"","8287","Instance of 'WebDriver' has no 'execute_cdp_cmd' member","from selenium import webdriver  driver = webdriver.Chrome() script = '''     Object.defineProperty(navigator, 'webdriver', {         get: () => undefined     }) ''' driver.execute_cdp_cmd(""Page.addScriptToEvaluateOnNewDocument"", {""source"": script})  # but get this -- Instance` of 'WebDriver' has no 'execute_cdp_cmd' member","closed","","SuperIron","2020-05-09T03:23:51Z","2021-09-05T10:02:54Z"
"","8790","Unable to connect python selenium web driver/geckodriver to Firefox on Android.","For connecting selenium webdriver/chromedriver, I use to following code to connect to Chrome on Android:  from selenium import webdriver options = webdriver.ChromeOptions() options.add_experimental_option('androidPackage', 'com.android.chrome') driver = webdriver.Chrome(""C:\webdrivers\chromedriver.exe"", options=options)  What would be the corresponding python code to connect selenium web driver/geckodriver to Firefox on Android?  ### System GeckoDriver: geckodriver v0.27.0 (2020-07-27, 7b8c4f32cdde) Platform: Windows 10 (64-bit) Firefox: v81.1.4 Selenium: 3.141.0","closed","","mohammedyouness","2020-10-14T18:52:19Z","2021-09-05T08:34:02Z"
"","8588","add se namespacing to file upload endpoint for all bindings","Follow up from discussion in #8524   @shs96c / @barancev is this the right way to do it for Java?","closed","C-java,","titusfortner","2020-07-30T19:36:30Z","2021-02-10T06:30:13Z"
"","8492","Add a(n E2E) test for basic (left) arrow key usage","Fixes: #8483   ### Description Helps ensure that Selenium supports basic (left) arrow key usage  ### Motivation and Context I used this to determine that the issue i've worked around stems from Quill(JS.com), rather than Selenium  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","haqer1","2020-07-09T10:20:48Z","2020-07-11T00:15:50Z"
"","8707","Stop the driver server when the driver fails to start a new session","Fixes #8706    ### Description  Make sure the driver server process is stopped if the very first command to start a new session fails.  ### Motivation and Context  Based on reported issue #8706, chromedriver process will never be stopped if the browser crashes while processing the very first DriverCommand.NEW_SESSION command.  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","iaroslavn","2020-09-17T05:01:27Z","2021-01-22T18:06:47Z"
"","8700","Fixes #8587 - Include original stack trace when throwing TimeoutException","Fixes #8587 - Include original stack trace when throwing TimeoutException. Added new test to check if stack trace contains test name  ### Description Original stacktrace was not returned as part of the thrown TimeoutException.   ### Motivation and Context Based on reported issue #8587, the TimeoutException was not reporting the correct details in the stacktrace.  ### Types of changes - [x] Bug fix (non-breaking change which fixes an issue 8587)  - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","anandbagmar","2020-09-15T16:34:17Z","2020-09-16T07:40:29Z"
"","8702","Fixes #8587 - Include original stack trace when throwing TimeoutException #8700","Fixes #8587 - Include original stack trace when throwing TimeoutException. Added new test to check if stack trace contains test name  ### Description In the until method implementation of FluentWait.java, original stacktrace was not returned as part of the thrown TimeoutException.  ### Motivation and Context Based on reported issue #8587, the TimeoutException was not reporting the correct details in the stacktrace.  ### Types of changes - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","anandbagmar","2020-09-16T01:22:05Z","2020-09-17T09:26:14Z"
"","8584","Fix platform identification method to be case-insensitive in case of WSL","Fixes #8463    **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Changed wsl platform identification implementation to convert name to lower case and match with the correct platform.  ### Motivation and Context  In WSL2 environment the platform name consists of lowercase 'microsoft' which doesn't match the current  case sensitive match method to 'Microsoft'.   ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","snsten","2020-07-29T07:07:30Z","2020-07-29T11:10:40Z"
"","7924","Fixed #7632. Add response to RemoteWebDriver's client log level","Fixed #7632. replaced log 'response' with 'command' in RemoteDriver.setLogLevel    **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","vijay44","2020-01-10T06:38:10Z","2020-01-10T07:15:50Z"
"","7923","Fixed #7632. Added response to the log in 'setLogLevel' method","Fixed #7632. Added response to the log in 'setLogLevel' method. I have signed the ""SFC Individual Contributor License Agreement""     **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","vijay44","2020-01-10T03:52:43Z","2020-01-10T19:29:58Z"
"","8540","fix for issue 8457: RemoteWebDriver: Multiple files uploading method looks for files on local machine instead Selenium container","fix for https://github.com/SeleniumHQ/selenium/issues/8457    **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","C-dotnet,","DvoryadkinPavel","2020-07-16T04:00:25Z","2020-07-17T13:29:58Z"
"","8771","Python Selenium download mp4 where ACCESS PERMISSION (login) required","First of all, thank you for helping me! I have been searching through online trying this out for days.     **### TASK: Download a mp4 from a login-required link**   **This login-required link means:** - If I paste the link on a new tab (in the **same window** on Google Chrome), it works! As long as it has been logged in. - But if I use a new incognito window to open it, error message shown as follows: > This page isn‚Äôt working > If the problem continues, contact the site owner. > HTTP ERROR 401  **Selenium chromedriver will prompt a new window **  - Thus, in this case, we're not able to download things, as login required to access the content  **QUESTION:** so, how do I ask python selenium chromedriver to **download the mp4 in the same window** (in order to access the content)?  Thanks You!    ------------------------------------------------------------------------------------------------------------------------------------ **### Attempts:**  **1.**  **Normally, I would use the following code snippets, but in this case we need to sign in:** ```         with open(FileDB+ str(a)+ ""."" + str(lesson_name) +'.mp4', 'wb') as file:             #,encoding=""utf-8""             file.write(video_response.mp4) ```  ------------------------------------------------------------------------------------------------------------------------------------ **2.** Then I tried out ways to plug in the username and password, which are incorrect:  Most likely, the login process simply can't be get through by using this way (As shown above, we have tried out to use a incognito window to open the link, and error msg HTTP ERROR 401 displayed, where we simply don't have places to give the sign-in details)  ``` username = XYZ password = XYZ          video_response = requests.get(link, auth=(username, password), allow_redirects=True)          with open(FileDB+ str(a)+ ""."" + str(lesson_name) +'.mp4', 'wb') as file:             #,encoding=""utf-8""             file.write(video_response.mp4)   ``` ------------------------------------------------------------------------------------------------------------------------------------ **3.** I also tried to use urllib, which apparently can't get through the login process by the following code:  ``` import urllib.request urllib.request.urlretrieve(link, 'video.mp4') ``` ------------------------------------------------------------------------------------------------------------------------------------ **4.** I have also tried to use crtl + t to open a new tab manually and download it, but I wonder if there's other way out in addition to this manual way.  Thank you very much in advance for helping me solve this out !  The System used: Spyder Python 3.7 ChromeDriver 85.0.4183.87 Selenium","closed","","htlunsw","2020-10-10T06:33:37Z","2021-09-05T08:34:08Z"
"","8310","C# firefox OKÔºåIE OKÔºåChrome **NG**","firefox OKÔºåIE OKÔºåChrome  **NG**   Error Code ![15](https://user-images.githubusercontent.com/14154547/81997990-f1cf5380-9683-11ea-95b5-a23b39bf95ba.png)  **Environment** OS: Windows 10 Browser: chrome Browser version: Version 81.0.4044.138 Browser Driver version: ChromeDriver 81.0.4044.138 Language Bindings version: C# Software : visual studio 2019 ![11](https://user-images.githubusercontent.com/14154547/81998019-057aba00-9684-11ea-92bd-bc99f1c2d337.png) ![12](https://user-images.githubusercontent.com/14154547/81998031-0a3f6e00-9684-11ea-9647-598d0f90e229.png) ![13](https://user-images.githubusercontent.com/14154547/81998042-11667c00-9684-11ea-90ab-b474d02170ae.png) ![14](https://user-images.githubusercontent.com/14154547/81998055-19262080-9684-11ea-85ea-d51384b5a0ca.png)","closed","","wpyok500","2020-05-15T00:14:36Z","2021-09-05T10:02:50Z"
"","8518","Unable to sendkey in selenium - call function result missing 'value'","Exception in thread ""main"" org.openqa.selenium.WebDriverException: unknown error: call function result missing 'value'   (Driver info: chromedriver=2.24.417431)  OS: Window 10 Selenium Version: 3.8.1 Browser: Chrome 83.0.4103.116  WebElement searchField = driver.findElement(By.xpath(""//input[@name='sSearch']"")); searchField.sendKeys(""Testing"");","closed","","biancaffreitas","2020-07-14T08:03:07Z","2021-09-05T09:12:26Z"
"","8153","HTTPConnectionPool(host='127.0.0.1', port=55765): Max retries exceeded with url: /session/ed5fd5455c079b8b18ea48a4a5e7d306/element/da86ad69-23ed-4515-92e7-8a600c31df5c/text","Environment  OS: MacOS Catalina 10.15.4 Browser: Chrome Browser version: 80.0.3987.162 Browser Driver version: ChromeDriver Version 80  Language Bindings version: Python 3.7.6 Using: Python, Selenium package, urllib3, http_request_randomizer.requests.proxy.requestProxy  My goal is to build the instagram comment crawler.   There are the steps that I've done so far: I have built the code that extracts links to the instagram posts first, then add all the comments to the list. With the basic Chromedriver (with no proxies being added) it seems to work, no errors at all:      #finding all links      posts = []     browser= webdriver.Chrome('/Users/maria/desktop/chromedriver')     browser.get('https://www.instagram.com/titovby/?hl=ru')     posts = browser.find_elements_by_xpath(""//div[@class='v1Nh3 kIKUG  _bz0w']"")     links = [elem.find_element_by_css_selector('a').get_attribute('href') for elem in posts]     print(links)     #add comments to the list     notSorted =[]     for link in links:       browser.get(link)      allComments = browser.find_elements_by_xpath(""//div[@class='C4VMK']"")      for comment in allComments:         print(comment.text)         notSorted.append(comment.text.split('–û—Ç–≤–µ—Ç–∏—Ç—å'))  Here, I haven't added the scroll for dynamically generated page, therefore this code grasps only around 6 posts and comment for them. This certainly won't work for the larger dataset and will crash at some point, since all the requests are coming from one host. To tackle this issue, I've decided to the list of proxy and keep changing them every 6th iteration.   ``` from http_request_randomizer.requests.proxy.requestProxy import RequestProxy req_proxy = RequestProxy()  proxies = req_proxy.get_proxy_list() #this will create proxy list ``` With this code I managed to grasp the comments for first six, however after that it keeps showing ""This site can't be reached"" resulting in HTTPConnectionPool(host='127.0.0.1', port=55765): Max retries exceeded with url: error .  This method seems to be very inefficient (down below) , so I am wondering what's wrong with my code since it poorly works for first 6 but can't really handle large volumes. If there are any other methods and good guides, please refer me.  ``` `notSorted = [] index_proxy = 0 PROXY = proxies[index_proxy].get_address() webdriver.DesiredCapabilities.CHROME['proxy']={     ""httpProxy"":PROXY,     ""ftpProxy"":PROXY,     ""sslProxy"":PROXY,     ""noProxy"":None,     ""proxyType"":""MANUAL"",     ""class"":""org.openqa.selenium.Proxy"",     ""autodetect"":False      } driver = webdriver.Chrome(executable_path=""/Users/maria/desktop/chromedriver"") for index, link in enumerate(links, 1):     if index % 6 == 0:         driver.quit()         index_proxy +=1         PROXY = proxies[index_proxy].get_address()         webdriver.DesiredCapabilities.CHROME['proxy']={             ""httpProxy"":PROXY,             ""ftpProxy"":PROXY,             ""sslProxy"":PROXY,             ""noProxy"":None,             ""proxyType"":""MANUAL"",             ""class"":""org.openqa.selenium.Proxy"",             ""autodetect"":False         }         driver = webdriver.Chrome(executable_path=""/Users/maria/desktop/chromedriver"")         driver.get(link)         allComments = driver.find_elements_by_xpath(f""//div[@class='C4VMK']"")         for comment in allComments:             print(comment.text)             notSorted.append(comment.text.split('–û—Ç–≤–µ—Ç–∏—Ç—å'))     else:          driver.get(link)         allComments = driver.find_elements_by_xpath(f""//div[@class='C4VMK']"")         for comment in allComments:             print(comment.text)             notSorted.append(comment.text.split('–û—Ç–≤–µ—Ç–∏—Ç—å')) ` ```  NB. I have read read few threads, albeit barely any are simultaneously using proxy. It seems that there are some errors in the config, albeit I am new so I am stuck tackling this error and finding the way out.","closed","","MariaLavrovskaya","2020-04-01T18:19:37Z","2020-05-05T21:20:06Z"
"","8830","[3.141.0] reset_actions doesn't work at all","eh, I use it in python, and my `selenium` version is 3.141.0 , I don't know if you have fixed it in new release here is the code  ```python3 url = 'http://sahitest.com/demo/clicks.htm' driver.get(url) action = ActionChains(driver)  buttonQuery = 'body > form:nth-child(1) > input:nth-child(10)' button = driver.find_element(By.CSS_SELECTOR, buttonQuery) action.click(button).perform() ``` after runing that,  ```python3 action.reset_actions() action.click(button).perform() ``` you will find two **[CLICK]** shows, which means `reset_actions` does'n work at all","closed","","nesteiner","2020-11-01T11:06:31Z","2021-09-05T08:33:53Z"
"","8263","Incorrect error is thrown when platform does not match any capabilites [Selenium 4.0.5]","driver.version: unknown is incorrectly thrown when the platform supplied does not match any node.  selenium/hub:4.0.0-alpha-5-20200409 and node-chrome:4.0.0-alpha-5-20200409   Steps Run the above commands on Mac Attempt a connection supplying 'windows' as the platform.  Expected An error showing no matching capabilities is reported.  Actual Below  > `14:10:38.607 WARN [SpanWrappedHttpHandler.execute] - Unable to execute request: Unable to create session for  Build info: version: '4.0.0-alpha-5', revision: 'b3a0d621cc' System info: host: 'f3c684a12194', ip: '172.21.0.2', os.name: 'Linux', os.arch: 'amd64', os.version: '4.19.76-linuxkit', java.version: '1.8.0_242' Driver info: driver.version: unknown org.openqa.selenium.SessionNotCreatedException: Unable to create session for  Build info: version: '4.0.0-alpha-5', revision: 'b3a0d621cc' System info: host: 'f3c684a12194', ip: '172.21.0.2', os.name: 'Linux', os.arch: 'amd64', os.version: '4.19.76-linuxkit', java.version: '1.8.0_242' Driver info: driver.version: unknown 	at org.openqa.selenium.grid.distributor.local.Slot.lambda$onReserve$1(Slot.java:81) 	at java.util.Optional.orElseThrow(Optional.java:290) 	at org.openqa.selenium.grid.distributor.local.Slot.lambda$onReserve$2(Slot.java:80)`  OS: Mac Browser: Chrome Browser version: Latest Browser Driver version: 4.0.5 Alpha Language Bindings version: Java 1.8","closed","","mburns02","2020-05-01T14:20:58Z","2021-09-05T10:20:19Z"
"","7906","The Chrome driver hangs after sorting through the items of a shopping website","Description: The Chrome driver hangs after sorting through the items of a shopping website  ## To Reproduce 1. Navigate to the pepperfry.com. 2. Search for Clocks. 3.Sort the results as price - low to high 4. Close th driver  Expected result: Driver should get closed.  Actual: No action on the driver is being taken and the script execution hangs.  ## Test script or set of commands reproducing this issue  package MockExam;  import org.testng.annotations.Test; import org.testng.annotations.BeforeSuite;  import java.io.File; import java.io.FileInputStream; import java.io.FileNotFoundException; import java.io.FileOutputStream; import java.io.IOException; import java.util.Arrays; import java.util.List; import java.util.concurrent.TimeUnit;  import org.apache.poi.xssf.usermodel.XSSFRow; import org.apache.poi.xssf.usermodel.XSSFSheet; import org.apache.poi.xssf.usermodel.XSSFWorkbook; import org.openqa.selenium.By; import org.openqa.selenium.Keys; import org.openqa.selenium.WebDriver; import org.openqa.selenium.WebElement; import org.openqa.selenium.chrome.ChromeDriver; import org.openqa.selenium.interactions.Action; import org.openqa.selenium.support.ui.ExpectedConditions; import org.openqa.selenium.support.ui.Select; import org.openqa.selenium.support.ui.WebDriverWait; import org.testng.annotations.AfterSuite;  public class PepperFry { 	WebDriver driver; 	 	@BeforeSuite 	public void beforeSuite() throws IOException { 		System.setProperty(""webdriver.chrome.driver"", ""resource\\chromedriver.exe""); 		driver = new ChromeDriver(); 		driver.manage().window().maximize(); 		driver.manage().timeouts().implicitlyWait(2000, TimeUnit.SECONDS); 	}  	@Test 	public void Searchsort() throws IOException { 		driver.get(""https://www.pepperfry.com/""); 		driver.findElement(By.xpath(""//input[@id='search']"")).sendKeys(Keys.chord(""Clocks"", Keys.ENTER)); 		driver.findElement(By.xpath(""//li[@id='curSortType']"")).click();  		driver.findElement(By.xpath(""//ul[@id='sortBY']"")).click(); 		driver.findElement(By.xpath(""//a[contains(text(),'Price: Low to High')]"")).click(); 		}  	@AfterSuite 	public void afterSuite() { 		driver.close(); 	}  }  ## Environment  OS: Windows 10 Browser:Chrome Browser version:  79.0.3945.88 Browser Driver version: Chrome Driver 78.0.3904.105 Language Bindings version:  java ""1.8.0_231"" Selenium Grid version (if applicable): NA","closed","needs-triaging,","pratilipi306","2020-01-01T09:23:04Z","2020-04-15T08:47:44Z"
"","7931","Selenium C# integration With devops performance testing tool","Dear Team,  Could any team assist me all steps as sequence for integrating selenium webdriver script with neoload  or any devops performance testing tool with only C# programming language.How can we write a selenium C# webdriver and mobile testing script with appium that can be integrate with Neoload or devops performance tool?  In Jmeter performance testing tool, we can integrated with JUnit sampler request or can we write webdriver sampler script in jmeter for integrating with java automation .So Could any team assist me for the same logic in neoload or any devops performance testing tool or we have any other  performance testing tool for integrating with Selenium C# webdriver.  Thanks Team for giving valuable time to hear me in advance Thank you Amit","closed","needs-triaging,","amitstudent2006","2020-01-12T10:18:59Z","2020-02-14T05:40:46Z"
"","8219","Publishing Full PDBs","Currently Selenium publishes a [nuget package](https://www.nuget.org/packages/Selenium.WebDriver/4.0.0-alpha05#show-github-usage) but does not publish symbols package. Would you please start publishing full debug symbols (/DEBUG:FULL) to nuget?","closed","","shahabhijeet","2020-04-19T06:35:01Z","2020-05-20T18:58:37Z"
"","8249","Update webelement.py. Created location_into_view","Created property location_into_view. Getting the current coordinates of an element on the screen. WITHOUT scrolling. Need to use bundles of automation modules.    **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","sapronov-maks","2020-04-27T08:55:25Z","2020-04-27T12:56:37Z"
"","8621","Session handling on selenium-webdriver for javascript","Could some one point me towards any relevant docs for session handling in selenium-webdriver for javascript?","closed","","achuthrajula","2020-08-10T06:50:20Z","2021-09-05T08:37:30Z"
"","8163","Corrected the documentation for Protected Mode","Corrected the the documentation  for INTRODUCE_FLAKINESS_BY_IGNORING_SECURITY_DOMAINS. Line # 68 Number of Lines # 1  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [X] My change requires a change to the documentation. - [X ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","sridharUpputuri","2020-04-06T20:13:08Z","2020-04-06T20:51:19Z"
"","8142","Updated the documentation","Corrected the driver name in documentation from Chrome to Ie.  Currently documentation is misleading that we are `creating chrome instance` in the `IE` Webdriver` document. Corrected the documentation to `IE`.  This will reduce the confusion when user going through the IE Webdriver documentation.  ### Types of changes - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist - [ X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [] My change requires a change to the documentation. - [X] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","sridharUpputuri","2020-03-28T04:20:09Z","2020-03-30T13:25:10Z"
"","8453","Corrected the documentation in line #68","Corrected the documentation for INTRODUCE_FLAKINESS_BY_IGNORING_SECURITY_DOMAIN. Number of lines changed # 1 Need Test Cases for this change: No","closed","","sridharUpputuri","2020-06-23T19:17:26Z","2020-06-30T22:24:12Z"
"","7943","Fix clear actions in ActionChains","Clear actions in ActionChains object after performing  Fixes #7913     ### Description `ActionChains` assigned to a variable does not clear previous actions after `perform` and  `reset_actions` does not solve the issue.  ### Motivation and Context  Assigning ActionChains to a variable and using it in different actions causes a repetition of all previous actions. The example below, in the second drag and drop, actions will be executed for `element1` and `element2` and not only for the `element2`. Clearing `device.action` in the `perform` method solve the issue.  Not: clearing actions on the remote end with `driver.execute(Command.W3C_CLEAR_ACTIONS)` can be also executed in the `pefrom` method.  ``` actions = ActionChains(driver) actions.drag_and_drop(element1, target).perform() actions.reset_actions() actions.drag_and_drop(element2, target).perform() ```   ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","bayilyas","2020-01-17T22:29:47Z","2021-05-24T18:23:33Z"
"","8507","Selenium Chrome headless with user-data-dir flag ChromeDriver version 83.0.4103.39","ChromeOptions options = new ChromeOptions();             options.AddArguments(""--headless"");             options.AddArguments(""--disable-gpu"");             options.AddArguments(""--disable-software-rasterizer"");             options.AddArguments(""--user-data-dir=/profiles/"" + profile);             options.AddArguments(""--disable-software-rasterizer"");             options.AddArguments(""--window-size=1920x1080"");             options.AddArguments(""--disable-extensions"");             options.AddArguments(""--disable-plugins-discovery"");             IWebDriver webDriver = new ChromeDriver(options);     WebDriverWait wait = new WebDriverWait(webDriver, TimeSpan.FromSeconds(15));     webDriver.Navigate().GoToUrl(@""someUrl""); ---> Here code stucks  Error: OpenQA.Selenium.WebDriverException: 'The HTTP request to the remote WebDriver server for URL http://localhost:64225/session timed out after 60 seconds.'  Help, please, how to solve it?  ## Environment  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:   Selenium Grid version (if applicable):","closed","","Ennorath","2020-07-12T10:36:34Z","2021-09-05T09:12:29Z"
"","8591","Loosen max version for childprocess","childprocess 4.0 is out and seems to work ok with selenium-driver.  - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document.","closed","","boutil","2020-07-31T11:16:08Z","2020-08-02T02:32:26Z"
"","8330","MutableCapabilities' merge() method doesn't change proxy settings with ChromeDriver (Java)","Changing proxy settings at runtime with `ChromeDriver` doesn't work as the proxy settings remain the same.  Example (Java):  ``` ChromeDriver driver = new ChromeDriver(new ChromeOptions().setBinary(browserBinary)     .setProxy(new Proxy().setSocksProxy(""localhost:9050"")         .setSocksVersion(5)));  driver.get(""https://example-ip-checker-service.com""); System.out.println(driver.findElement(By.id(""ip"")).getText()); //example IP: 89.76.23.1  driver.getCapabilities()     .merge(new ChromeOptions().setProxy(new Proxy().setSocksProxy(""localhost:9060"")         .setSocksVersion(5)));  driver.get(""https://example-ip-checker-service.com""); System.out.println(driver.findElement(By.id(""ip"")).getText()); //same IP as before: 89.76.23.1 ```  OS: Windows 10 Browser: Chrome Browser version: 81.0.4044.138 Browser Driver version: Chromedriver 81.0.4044.138 Language Bindings version: Java 4.0.0-alpha-5","closed","","deci1","2020-05-21T10:43:21Z","2021-09-05T09:44:08Z"
"","8632","While Run the Selenium Script, I m getting this Issues(3.141.59 selenium Dependency-used)","Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 84.0.4147.125, chrome: {chromedriverVersion: 83.0.4103.39 (ccbf011cb2d2b..., userDataDir: C:\Users\Tejora\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:56886}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true} Session ID: fad9c05c0c973fa5f89845e045ddcc1e *** Element info: {Using=xpath, value=//*[@id='ContentPlaceHolder1_fsSelectRegion']/div/div[1]/div/div/span} 	at sun.reflect.GeneratedConstructorAccessor74.newInstance(Unknown Source) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source) 	at java.lang.reflect.Constructor.newInstance(Unknown Source) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552) 	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323) 	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428) 	at org.openqa.selenium.By$ByXPath.findElement(By.java:353) 	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315) 	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69) 	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38) 	at com.sun.proxy.$Proxy17.isDisplayed(Unknown Source) 	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:314) 	at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:43) 	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:300) 	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:297) 	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249) 	... 28 more","closed","","rahulatmiya","2020-08-18T05:19:04Z","2021-09-05T08:37:26Z"
"","7876","Able to run chrome driver in eclipse but getting this issue in jenkins","cannot execute binary file Dec 19, 2019 10:41:43 AM org.openqa.selenium.os.OsProcess checkForError SEVERE: org.apache.commons.exec.ExecuteException: Process exited with an error: 126 (Exit value: 126) Time elapsed: 20.572 sec  <<< FAILURE! org.openqa.selenium.WebDriverException:  Timed out waiting for driver server to start. Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'Caused by: org.openqa.selenium.net.UrlChecker$TimeoutException:  Caused by: java.util.concurrent.TimeoutException  -","closed","","HarikaVegesna","2019-12-19T17:37:42Z","2020-01-24T11:56:50Z"
"","7974","Associate Active Element to a Window Handle","Can we have a mechanism to be able to associate a Window Handle to an Active Element. Im trying to do this using WebDriver and Chrome, and I'm not seeing how its possible to switch to a window handle that is associated to the active element","closed","","danielricci","2020-01-28T14:05:17Z","2020-02-28T07:12:10Z"
"","8539","Bump lodash from 4.17.15 to 4.17.19","Bumps [lodash](https://github.com/lodash/lodash) from 4.17.15 to 4.17.19.  Release notes Sourced from lodash's releases.  4.17.16    Commits  d7fbc52 Bump to v4.17.19 2e1c0f2 Add npm-package 1b6c282 Bump to v4.17.18 a370ac8 Bump to v4.17.17 1144918 Rebuild lodash and docs 3a3b0fd Bump to v4.17.16 c84fe82 fix(zipObjectDeep): prototype pollution (#4759) e7b28ea Sanitize sourceURL so it cannot affect evaled code (#4518) 0cec225 Fix lodash.isEqual for circular references (#4320) (#4515) 94c3a81 Document matches* shorthands for over* methods (#4510) (#4514) Additional commits viewable in compare view    Maintainer changes This version was pushed to npm by mathias, a new releaser for lodash since your current version.     [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=lodash&package-manager=npm_and_yarn&previous-version=4.17.15&new-version=4.17.19)](https://help.github.com/articles/configuring-automated-security-fixes)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language - `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language - `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language - `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language  You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/SeleniumHQ/selenium/network/alerts).","closed","","dependabot[bot]","2020-07-15T20:54:59Z","2020-07-15T20:56:18Z"
"","8473","Bump handlebars from 4.1.2 to 4.7.6","Bumps [handlebars](https://github.com/wycats/handlebars.js) from 4.1.2 to 4.7.6.  Changelog Sourced from handlebars's changelog.  v4.7.6 - April 3rd, 2020 Chore/Housekeeping:  #1672 - Switch cmd parser to latest minimist (@dougwilson  Compatibility notes:  Restored Node.js compatibility  Commits v4.7.5 - April 2nd, 2020 Chore/Housekeeping:  Node.js version support has been changed to v6+ Reverted in 4.7.6  Compatibility notes:  Node.js < v6 is no longer supported Reverted in 4.7.6  Commits v4.7.4 - April 1st, 2020 Chore/Housekeeping:  #1666 - Replaced minimist with yargs for handlebars CLI (@aorinevo, @AviVahl & @fabb)  Compatibility notes:  No incompatibilities are to be expected  Commits v4.7.3 - February 5th, 2020 Chore/Housekeeping:  #1644 - Download links to aws broken on handlebarsjs.com - access denied (@Tea56) Fix spelling and punctuation in changelog - d78cc73  Bugfixes:  Add Type Definition for Handlebars.VERSION, Fixes #1647 - 4de51fe Include Type Definition for runtime.js in Package - a32d05f  Compatibility notes:     Commits  e6ad93e v4.7.6 2bf4fc6 Update release notes b64202b Update release-notes.md c2f1e62 Switch cmd parser to latest minimist 08e9a11 Revert ""chore: set Node.js compatibility to v6+"" 1fd2ede v4.7.5 3c9c2f5 Update release notes 16487a0 chore: downgrade yargs to v14 309d2b4 chore: set Node.js compatibility to v6+ 645ac73 test: fix integration tests Additional commits viewable in compare view    Maintainer changes This version was pushed to npm by erisds, a new releaser for handlebars since your current version.     [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=handlebars&package-manager=npm_and_yarn&previous-version=4.1.2&new-version=4.7.6)](https://help.github.com/articles/configuring-automated-security-fixes)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language - `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language - `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language - `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language  You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/SeleniumHQ/selenium/network/alerts).","closed","","dependabot[bot]","2020-07-01T14:54:04Z","2020-07-01T20:19:33Z"
"","8567","StaleElementReferenceException in FindElements(By.TagName(‚Äúa‚Äù)))","Bug Report (bugs found in a recent release) I save site links with the following code, but in some sites, I encounter the following error:  OpenQA.Selenium.StaleElementReferenceException: ""stale element reference: element is not attached to the page document (Session info: chrome=xx.x.xxx.xx)""  problem with (this site): https://namnak.com `private string followlinks(string url) {     IWebDriver driver = new ChromeDriver(@""C:\"");      driver.Navigate().GoToUrl(url);      //...     //...     //...      foreach (var item in driver.FindElements(By.TagName(""a"")))     {                   var url2 = item.GetAttribute(""href"");         //...     } }`  ## Environment  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:   Selenium Web Driver:","closed","","parvizblack","2020-07-23T18:22:43Z","2021-09-05T09:02:55Z"
"","8403","WIP: Support RedisBacked Distributor","Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Adds support for Distributor backed with redis for storing info about the nodes in the grid.  ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","C-grid,","raju249","2020-06-09T05:23:31Z","2021-06-11T05:10:24Z"
"","7968","Adopt OpenTelemetry instead of OpenTracing","Because the projects have merged, and we should be using the thing that will continue to exist in the future.","closed","C-grid,","shs96c","2020-01-28T08:57:06Z","2020-03-10T19:29:32Z"
"","7930","Small Memory Leak in selenium/cpp/iedriver/Script.cpp","At line 194, the `ITMLDocument2::geHt_designMode` COM method is called. That method takes an unique `[out][retval]  BSTR *p parameter`, but the argument provided is a NOT  an empty `CComBSTR`. The actual `BSTR` stored in the smart pointer is leaked.  Suggested FIX:  ``` CComBSTR design_mode; this->script_engine_host_->get_designMode(&design_mode); if ( design_mode ) {   design_mode.ToLower();   if (design_mode == L""on"") {     CComBSTR set_design_mode = L""off"";     this->script_engine_host_->put_designMode(set_design_mode);   } } ```  OS: Windows 10 Browser: IE11","closed","I-stale,","somanuell","2020-01-11T17:25:05Z","2021-12-03T00:06:48Z"
"","8578","Adding Proxy value for IE driver in python","As used in ChromeOptions() where we can add_argument for proxy server, I am looking for an option to add the proxy along with the options in IE driver also.   I checked the use_per_process_proxy() option in IEdriver, but it is mentioned that it takes boolean value as an argument.  I researched further on internet but couldnt find any specifics for the same.  I researched further on the internet but couldnt find any specifics for the same. Please assist me?","closed","","Bala0709","2020-07-28T14:46:35Z","2021-09-05T09:02:53Z"
"","8007","IEDriver dies in .net/.netcore when lock the computer","As soon as the test start and immediately lock the screen the IE is not navigating to the url. It just stays in the localhost:50560. We need to run test in pipeline and in a locked grid machine?  Is there a workaround for the locking issue? Is that the behavior of selenium in .net when using IEDriver?  Also, tests stop execution as soon as screen locks. Please suggest the behavior for .net/IE  ## üêõ Bug Report  A clear and concise description of what the bug is.    ## To Reproduce Run a test to open a url with InternetExplorerDriver and immediately lock the screen. This will not naviage to the url.   Detailed steps to reproduce the behavior:  ## Expected behavior Run a test to open a url with InternetExplorerDriver and immediately lock the screen. This should naviage to the url. A clear and concise description of what you expected to happen.  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS:windows 10 Browser: IE11 Browser version: 11.973.17763.0 Browser Driver version: Selenium.InternetExplorer.WebDriver 3.150.1 Language Bindings version: C# Selenium Grid version (if applicable):  3.141","closed","","santhosh-James","2020-02-06T22:20:05Z","2020-03-10T19:19:57Z"
"","8006","IEDriver dies when lock the screen","As soon as the test start and immediately  lock the screen the IE is not navigating to the url. It just stays in the localhost:50560. We need to run test in pipeline and in a locked grid machine?  Is there a workaround for the locking issue? Is that the behavior of selenium in .net when using IEDriver?  Also, tests stop execution as soon as screen locks. Please suggest the behavior for .net/IE   ## üí¨ Questions and Help  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","santhosh-James","2020-02-06T22:17:50Z","2020-03-10T19:21:44Z"
"","8180","Selenium WebDriver Manager not working with Chrome 81","As of today, Chrome seems to have updated to version 81.0.4044.69 and now the version of Selenium included as part of NPM package protractor@5.4.3 (the latest version as of this writing) is failing with error message: ``` E/launcher - SessionNotCreatedError: session not created: This version of ChromeDriver only supports Chrome version 81   (Driver info: chromedriver=81.0.4044.20 (f006328e39a9769596eb506c8841c3004b24e747-refs/branch-heads/4044@{#244}),platform=Windows NT 10.0.18363 x86_64) ```  Before this portion, it is clearly unzipping a version 81 of the ChromeDriver with a statement reading: ``` I/update - chromedriver: unzipping chromedriver_81.0.4044.69.zip [16:50:31] I/update - chromedriver: chromedriver_81.0.4044.69.exe up to date ```  Specifying version in two different places in the Protractor.conf.js, in order to try and force usage of version 80, does not seem to have any effect:  ``` exports.config = {   allScriptsTimeout: 11000,   specs: [""../tests/e2e/**/*.e2e-spec.ts""],   capabilities: {     browserName: ""chrome"",     **version: ""80.0.3987.106"",**     chromeOptions: {       args: [         **""--version=80.0.3897.106"",**         ""--ignore-certificate-errors"",         ""--headless"",         ""--disable-gpu"",         ""--window-size=1200,900""               ], ```","closed","","JLunda","2020-04-08T21:56:48Z","2020-05-20T22:56:06Z"
"","7980","Fix capabilities to support macOS platform","Adjust Microsoft Edge capabilities to support macOS platform for Python and Javascript  ### Motivation and Context Issue: #7979   ### Types of changes - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","C-py,","maxim-lobanov","2020-01-29T11:05:23Z","2020-01-30T22:42:29Z"
"","8590","[dotnet] Attach RemoteWebDriver to existing session.","Adds a new constructor for RemoteWebDriver that will not start a new test session but instead attach to an existing one.  This will allow C# developers to write code that is ment to interact with running selenium sessions. This will for example enable creation of customization plugins for selenium based software.    **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.   Adds a new constructor for RemoteWebDriver that will not start a new test session but instead attach to an existing one.  ### Description Added a new constructor and refactored part of the ""main"" one to avoid code duplication.  ### Motivation and Context My company provides test automation software in which the mobile part is done using Appium. In order to implement a feature that will allow the software users to create custom Appium snippets (in dotnet C#) that work together with what the software offers out of the box, we need to have the ability to attach to an existing Appium session. And as the C# AppiumWebDriver inherits from RemoteWebDriver we need to have a way to create an instance of RemoteWebDriver without triggering a new session.  ### Types of changes  - [x] New feature (non-breaking change which adds functionality)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [x] Existing tests passed.","closed","","bart-tricentis","2020-07-31T10:58:33Z","2020-12-22T23:18:46Z"
"","8245","Additional closure compiler flags for ChromeDriver","Adding a couple of command line flags to closure compiler while generating atoms for ChromeDriver: * --define=goog.NATIVE_ARRAY_PROTOTYPES=false: This flag used to be   present before migration to Bazel. Its removal caused ChromeDriver   bugs, such as https://crbug.com/chromedriver/3422 and   https://crbug.com/chromedriver/3439. * --use_types_for_optimization=false: Works around closure compiler   bugs. This used to be added by hand when the ChromeDriver team   built atoms.    ### Description Fixes some issues ChromeDriver team has encountered while build atoms.  ### Motivation and Context These two flags have historically been used by ChromeDriver team while build atoms using the closure compiler. One flag was lost when Selenium switched to Bazel. Another flag used to be added locally in ChromeDriver builds.  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","JohnChen0","2020-04-26T04:29:02Z","2020-04-27T15:17:56Z"
"","8763","Add shutdown hook to close AsyncHttpClient.","Add Threadfactory to AsyncHttpClient to update threadfactory to use daemon threads.  ### Description  The changes are related to issue #8159.   ### Motivation and Context  The AsyncHttpClient uses non-daemon long-running threads. When the program finishes, these threads prevent the JVM from shutting down. Hence, the AsyncHttpClient was not closed. Thus, the application cannot exit.  The changes make the AsyncHttpClient threads as daemon threads. So now the JVM can exit and initiate shutdown. Additionally, the changes add a shutdown hook to close the client.  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2020-10-07T09:25:25Z","2020-10-13T21:02:00Z"
"","8391","Python: Proxy with authentication does not work","According to your documentation  , I have tried the code & it doesn't work . Please is there a solution to it","closed","","cybermicheal47","2020-06-05T12:43:36Z","2021-09-05T09:36:51Z"
"","8508","python3 DeprecationWarning","``` from selenium import webdriver  firefox_profile = webdriver.FirefoxProfile() firefox_profile.set_preference(""browser.chrome.toolbar_style"", 1) firefox_profile.set_preference(""browser.display.show_image_placeholders"", False) firefox_profile = webdriver.FirefoxProfile() firefox_profile.set_preference(""network.http.pipelining"", True) firefox_profile.set_preference(""network.http.proxy.pipelining"", True) firefox_profile.set_preference(""network.http.pipelining.maxrequests"", 8) firefox_profile.set_preference(""content.notify.interval"", 500000) firefox_profile.set_preference(""content.notify.ontimer"", True) firefox_profile.set_preference(""content.switch.threshold"", 250000) firefox_profile.set_preference(""browser.cache.memory.capacity"", 65536) firefox_profile.set_preference(""browser.startup.homepage"", ""about:blank"") firefox_profile.set_preference(""reader.parse-on-load.enabled"", False) firefox_profile.set_preference(""browser.pocket.enabled"", False) firefox_profile.set_preference(""loop.enabled"", False) firefox_profile.set_preference(""browser.display.use_document_colors"", False) firefox_profile.set_preference(""browser.display.use_document_fonts"", 0) firefox_profile.set_preference(""browser.display.use_system_colors"", True) firefox_profile.set_preference(""browser.formfill.enable"", False) firefox_profile.set_preference(""browser.helperApps.deleteTempFileOnExit"", True) firefox_profile.set_preference(""browser.shell.checkDefaultBrowser"", False) firefox_profile.set_preference(""browser.startup.homepage"", ""about:blank"") firefox_profile.set_preference(""browser.startup.page"", 0) firefox_profile.set_preference(""browser.tabs.forceHide"", True) firefox_profile.set_preference(""browser.urlbar.autoFill"", False) firefox_profile.set_preference(""browser.urlbar.autocomplete.enabled"", False) firefox_profile.set_preference(""browser.urlbar.showPopup"", False) firefox_profile.set_preference(""browser.urlbar.showSearch"", False) firefox_profile.set_preference(""extensions.checkCompatibility"", False) firefox_profile.set_preference(""extensions.checkUpdateSecurity"", False) firefox_profile.set_preference(""extensions.update.autoUpdateEnabled"", False) firefox_profile.set_preference(""extensions.update.enabled"", False) firefox_profile.set_preference(""general.startup.browser"", False) firefox_profile.set_preference(""plugin.default_plugin_disabled"", False) firefox_profile.set_preference(""permissions.default.image"", 2) firefox_profile.set_preference('permissions.default.stylesheet', 2) firefox_profile.set_preference(""dom.ipc.plugins.enabled.libflashplayer.so"", ""false"") driver = webdriver.Firefox(firefox_profile=firefox_profile) driver.get('https://canvas.case.edu')  ```  im new on python but why this is not working is it my mistake?","closed","","azamet90","2020-07-12T12:47:24Z","2021-09-05T09:12:29Z"
"","8257","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","[](## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group)","closed","","christian7877","2020-04-28T09:20:54Z","2021-09-05T10:20:22Z"
"","8297","[PY] Use ProxyManager instead of PoolManager in remote_connection","Use ProxyManager instead of PoolManager in remote_connection to allow using a proxy to connect to the grid.   ### Description Currently urllib3.PoolManager is used in creating remote connection to the grid. If a proxy is required to connect to the grid, we have to use urllib3.ProxyManager instead of urllib3.PoolManager.  The proxy settings will be taken from https_proxy or http_proxy environment variables based on the remote grid url passed to the RemoteConnection class. If proxy environment variable is set, ProxyManager will be used to create the connection. Otherwise PoolManager will be used.  Fixes #8053  ### Motivation and Context This change is required to connect to the grid from behind a corporate proxy.   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","pkvprakash","2020-05-12T07:07:43Z","2020-06-01T14:18:36Z"
"","8270","reordering imports - DO NOT MERGE","DO NOT MERGE **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","AutomatedTester","2020-05-05T07:58:55Z","2020-05-06T11:54:15Z"
"","7938","Send and get CDP command from NodeJS for Chrome.","### Description Adding functionality to get data from CDP.   ### Motivation and Context With the current functionality we can send data to devtools but we cannot get anything. There are a lot of commands where you can get data from devtools: Get cookies, performance metrics, get response bodies and more. See https://chromedevtools.github.io/devtools-protocol/  ### Types of changes - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","C-nodejs,","soulgalore","2020-01-16T07:42:11Z","2020-03-31T17:12:55Z"
"","8701","update NettyClient to close AsyncHttpClient when finished","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.  ### Description This change will make so that the AsyncHttpClient will be closed when ""WebDriver.close"" or ""WebDriver.quit"" is called.  ### Motivation and Context The is a quick fix for issue #8159 where a Java program will fail to terminate because of a hanging thread even if the ""quit"" method is called.  [AsyncHttpClient](https://github.com/AsyncHttpClient/async-http-client) requires that the user calls the ""close"" method before exiting the program or else ""you'll experience threads hanging and resource leaks"".  To fix this, the ""cleanupIdleClients"" method has been overridden to perform the needed action.   ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","Bioshock667","2020-09-15T18:26:57Z","2020-09-17T18:19:20Z"
"","8755","Add Code Analysis Action","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.   Add Code Analysis action that Github has just released.  ### Description It will run when there are PRs or commits to trunk.  ### Motivation and Context  Seeing if this new tool is worth it.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","AutomatedTester","2020-10-01T13:11:35Z","2021-11-12T13:04:32Z"
"","8795","findFreePort now lets operative system system assign an arbitrary port","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     Fixes: https://github.com/SeleniumHQ/selenium/issues/8794  ### Description I have enhanced the findFreePort method to ask the operative system for a free arbitrary port instead of trying to find one by generating random numbers.  ### Motivation and Context When running a lot of tests in parallel in multiple branches with test sharding Chrome/ChromeDrivers uses up all ports. It's then harder for selenium-webdriver to find an available port which causes the ""Unable to find free port"" error message.  So instead of using chance to find a free port we let the operative system do it for us. No need for 100 retries.  ### Types of changes  - [x] New feature (non-breaking change which adds functionality)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [x] All new and existing tests passed.","closed","","JonWallsten","2020-10-15T09:40:00Z","2021-01-14T15:56:19Z"
"","8819","Fix google options","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description This pull request changes GoogleOptions and FirefoxOptions so that every time ""merge"" is called, the third party options are prevserved.   ### Motivation and Context Issue #5279 explains that when merging two browser-specific capabilities are merged and passed to the browser-specific web driver, the browser-specific options are not carried over. #### Reason: Both GoogleOptions and FirefoxOptions, classes, contained private variables that represent browser-specific options but the private variables point to different data that what is stored in the internal capabilities representation.  As a result, when ""merge"" or ""setCapability"" is called, the private variables will point to different data than what is in the internal capabilities.  This would be fine except when two capabilities are merged, the target capabilities will overwrite its internal capabilities with its private variables as soon as ""asMap"" is called.  The is fine for singular data like strings but will it will be a problem for collections because private variables default to empty collections.  As a result, the target capabilities will always overwrite the newly added list like ""args"" with an empty list after ""merge"" and ""asMap"". #### Solution: Have both private variables and internal capabilities point to the same values.  In the case of GoogleOptions, ""args"" would be null until ""addArgs"" is called.  After that, it will already be added to the internal capabilities.  Every time an entry is added to ""args"", it will be added to the internal capabilities. Downside is that every time the cababilities will be modified (in setCapability), the class needs to check if the private variables point to the right value in the capabilities. I have also changed the data type of ""args"" and ""extensions"" to Set, because neither should allow duplicate entries and if ""merge"" is called on FirefoxOptions, duplicate entries might appear for ""args"".  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","Bioshock667","2020-10-25T16:13:35Z","2020-10-25T16:23:04Z"
"","8686","Remove trim and return slots","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description Contributes to https://github.com/SeleniumHQ/selenium/issues/8683   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","raju249","2020-09-10T12:01:12Z","2020-09-10T14:20:39Z"
"","8689","[grid] Local session request queuer and queue","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description Change are for the issue #8558.  - Adding NewSessionQueue and NewSessionQueuer interfaces.  - LocalSessionQueue and LocalSessionQueuer are the implementations. - NewSessionRequest and NewSessionRequestResponse events are added to communicate via the EventBus. - The incoming request has a request-id which ties the whole flow together. The request-id is used by GetNewSessionResponse to maintain a local map of request and response and return the response as it receives it.  Queuer is responsible for sending the incoming /session request to the appropriate handler and waiting for the response. LocalSessionQueue will perform the actual operation of adding, removing and retry adding to the local queue.  ### Motivation and Context New session request should not be dropped as it is happening in the current implementation. Instead, it should be queued and handled as the slots are available.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [X] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","pujagani","2020-09-11T08:07:18Z","2020-09-29T05:47:26Z"
"","8766","Update RequestConverter upgrade header handling.","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Updated header handling of upgrade and Sec-WebSocket-Version headers.  ### Motivation and Context  1. Upon receiving the request it goes through a series of handlers. 2. It goes through the WebSockethandler, https://github.com/SeleniumHQ/selenium/blob/selenium-4.0.0-alpha-6/java/server/src/org/openqa/selenium/netty/server/WebSocketUpgradeHandler.java#L103.  3. To upgrade to using sockets both headers are required. All checks work without quotes only.  4. When just upgrade or Sec-WebSocket-Version is sent, the request is passed along to .https://github.com/SeleniumHQ/selenium/blob/5f43a29cfccd9c7fb5adca5d69ed168150edb39f/java/server/src/org/openqa/selenium/netty/server/RequestConverter.java#L52 When quotes are used, the condition is always false and moved ahead to get a response. 5. When quotes are not used, the check if actually done and uses logical OR, the request is passed along further but there is nothing to handle it and it just waits.  AND fixes it because both headers are needed and if so it would be handled earlier in the pipeline. 6. Using AND will move along and response to the request using SeleniumHandler.  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2020-10-09T09:09:07Z","2020-10-09T13:32:01Z"
"","8717","[grid-ui] Changed BrowserRouter to HashRouter to allow pages to refresh.","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Updated BrowserRouter to HashRouter in App.tsx. The changes now refresh the GridUI pages without getting 404 error.  ### Motivation and Context  The first-time request is made to the GridUI via the server, it navigates to index.html. This is the default. Now any links clicked on the UI works fine, since it uses the react components and does not send a request to the server to load the UI components. When the page is refreshed it essentially sends the request to the server. If it is the root page, it works fine, since the server knows resource for it.  But if /console or /hub is refreshed, it errors out because the server is clueless. The HashRouter adds a hash to every link, example `http://localhost:4444/ui/index.html#/home`. The part after the hash before the hash is sent to the server which it knows, the part after is sent to react and it loads the page.  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","pujagani","2020-09-18T13:25:59Z","2020-09-22T10:11:43Z"
"","8733","docs: Fix grammatical errors in README.md file.","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  This PR resolves some minor grammatical errors in the README.md file.   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","roubalsehgal","2020-09-25T05:50:09Z","2020-09-25T20:08:04Z"
"","8864","[grid] Retry session only when capabilities are found. Add test to confirm session retry due to unexpected error.","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  The distributor should not retry session if capabilities do not exist in any of the nodes.  Add a test to verify that session retry occurs if an unexpected error is thrown during session creation.  ### Motivation and Context  The changes avoid unnecessary retry of new session requests due to no matching capabilities in any of the nodes.  However, the test case confirms the session is retried if capabilities exist but an expected error is thrown during session creation.  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2020-11-11T09:42:03Z","2020-11-16T00:48:54Z"
"","8859","[grid] Fix flaky Distributor and GraphqlHandlerTest. Add queuer config to DistributedCdpTest","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  The changes are related to failed tests reported in https://travis-ci.com/github/SeleniumHQ/selenium/jobs/431435876.  ### Motivation and Context  The failed build indicated flaky tests for GraphqlHandlerTest and DistributorTest. I suspect the issue was arising that session creation request was made before the grid model was updated by the distributor when a new node is added. To fix it the test is made to wait until the distributor can handle sessions. Now session creation requests can be made and unit test assertions can proceed as expected.   Note: First tried the fix with 100 test runs in a branch before the NewSessionQueuer was introduced. After confirming issue is not due to the queuer changes, attempted the fix in the current Grid.  The DistributedCdp did not have queuer config and hence it was failing to create the Distributor. Fixed it by adding the queuer config.  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2020-11-10T13:43:56Z","2020-11-10T14:19:54Z"
"","8746","[grid] Remove assert statements present in event listener for queuer and local session queue tests.","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Removed asserts present in the event listeners for NewSessionQueuerTest and LocalNewSessionQueueTest.  ### Motivation and Context The unit test for NewSessionQueuerTest and LocalNewSessionQueueTest had asserts within the event listener. Since it runs on the same thread as the test, it will not expose the possible issues. Thank you Simon for helping identify this issue.  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","pujagani","2020-09-30T11:55:04Z","2020-09-30T12:11:50Z"
"","8747","[grid] Integrating NewSessionQueuer with Distributor.","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Integrated Distributor with the NewSessionQueuer. 1. Update build files of Distributor. 2.  Add new session request listener to LocalDistributor. Reject request if it exceeds the timeout or does not have a slot for the capability. Retry request if all slots are busy. 3. Update Distributor instance declaration in all related tests. 4. Update Hub and Standalone commands.  ### Motivation and Context  A new session request is added to the queue by the NewSessionQueuer, the Distributor picks up the request and creates a session. The changes add the functionality where the Distributor has an event handler for the new session request. It also includes logic to retry if slots are busy or to reject a request immediately if no slots have the capability requested.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [X] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2020-09-30T15:19:17Z","2020-11-08T22:26:15Z"
"","8856","[grid] Integrated NewSessionQueuer with the Router.","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Integrate NewSessionQueuer with the Router.  ### Motivation and Context  All new session requests will be routed via the NewSessionQueuer and added to the NewSessionQueue. Distributor will pick up the session requests and create the session.  The changes include: 1. Make the Router aware of the NewSessionQueuer. Update the RouterServer. 2. Update the Distributor by removing endpoint to create a new session. It should be routed via the NewSessionQueuer. 3. Distributor tests are updated to use Either. Asserts are updated based on each test. 4. Remove CreateSession class. 6. Update the Distributor newsession() method to return Either.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [X] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2020-11-09T12:01:37Z","2020-11-10T19:32:21Z"
"","8793","Honour registration secret in LocalDistributor","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Fixes https://github.com/SeleniumHQ/selenium/issues/8787  ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","raju249","2020-10-15T07:27:13Z","2020-10-15T15:32:28Z"
"","8807","Fix ring logic","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Fixes https://github.com/SeleniumHQ/selenium/issues/8742  ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","raju249","2020-10-19T14:12:08Z","2020-10-21T09:57:35Z"
"","8661","Add registration secret as header in node responses","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Fixes https://github.com/SeleniumHQ/selenium/issues/8559 ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","raju249","2020-09-01T06:57:58Z","2020-09-28T06:28:21Z"
"","8695","Grid ui fix","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Contributes to https://github.com/SeleniumHQ/selenium/issues/8683 As for now, we have disabled the animation to have URLs working.  ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","raju249","2020-09-14T08:26:02Z","2020-09-14T08:54:05Z"
"","8773","Removing  event logs with repetitive attributes that is covered by a different event log.","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Cleaning up event logs to make it less noisy. The flow covered by the event logs is intact.  ### Motivation and Context  Earlier event logs were added to help with the debugging process leveraging the tracing framework. Some event logs had attributes that were repetitive.  Removing these will help reduce the noisy logs.  1. HandleSession events are reflected in SessionMap logs. 2. All HTTP requests are wrapped in SpanWrappedHttpHandler. Which further delegated the request via client to be made to another server, so events in SpanWrappedHttpHandler should suffice rather than logging at delegate at the client as well. 3. New session created details were logged at Distributor, LocalNode and DriverServiceSessionFactory. They all had the same information in the attributes. Hence, event log for the new session response was kept only in DriverServiceSessionFactory since it had the maximum context information, 4. DockerSessionFactory log events updated to avoid repetitive container start logs.  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2020-10-12T13:39:33Z","2020-10-14T09:12:58Z"
"","8753","Allow to listen for JavaScript exceptions","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Allow to listen for JavaScript exceptions  ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","raju249","2020-10-01T06:57:00Z","2020-10-01T08:59:13Z"
"","8749","Add cdp console event support to call callbacks","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Allow to listen for console API messages  ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","raju249","2020-09-30T16:02:36Z","2020-09-30T18:19:52Z"
"","8814","Add tests for gridui","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Adds selenium tests for GridUI. To track - https://github.com/SeleniumHQ/selenium/issues/8756  ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","raju249","2020-10-22T13:05:54Z","2020-11-09T11:30:27Z"
"","8874","[grid] Add default capabilities to Node config","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Addressing PR #8761 related to #8745.  ### Motivation and Context  Grid 3 had a mechanism for adding default capabilities. Grid 4 uses a different method (AutoService annotation and Toml config) to provide config values. The changes allow the node to have the default capabilities as per Grid 4. If the default capabilities are present then the auto-detection of all drivers is not done.   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2020-11-16T14:44:00Z","2021-01-04T19:57:57Z"
"","8769","[grid] Add timeout check in LocalNewSessionQueue.","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Adding a request timeout check in the LocalNewSessionQueue. The queue should be able to reject a request if it has timed out upon retry or when it is polled.  ### Motivation and Context  Addressing https://github.com/SeleniumHQ/selenium/pull/8747/files#r502246043 in this change. Ideally, the Distributor should not be aware about NewSessionQueue config values. The queue needs to handle the timeout of the request. This will help reduce calls and events in general especially in retry scenarios.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2020-10-09T14:21:31Z","2020-10-09T23:17:40Z"
"","8580","Make Until cancellable.","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Add a method `TResult Until(Func condition, CancellationToken token)` for cancel the wait.   ### Motivation and Context  Sometimes I want to abort the wait as quick as possible rather than wait to timeout.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","R-awaiting answer,","GF-Huang","2020-07-28T17:50:51Z","2020-08-12T23:41:31Z"
"","8723","Add register function to handle Basic Auth","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Add `register` function to handle BasicAuth in js binding. Use CDP to perform authorization  ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","raju249","2020-09-22T12:32:21Z","2020-09-30T12:43:53Z"
"","8586","Correctly closing zip archive in C# file upload","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   With current implementation C# client seems to produce broken zip archives as zip data is being base64-encoded before zip archive is closed.  ### Motivation and Context   ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","vania-pooh","2020-07-29T10:27:14Z","2020-08-12T22:54:19Z"
"","8692","fix: do not update already set preference","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   Inside the python binding we are reading from an already defined js file for the frozen config and if user is trying to set those particular keys in firefox profile, the changes aren't getting reflected. This leads to a very inconsistent behavior on the user end.  We should not update the default preferences in the object if it is already defined by the user using `set_preferences` and should do a key check before storing it in the dict.  ### Motivation and Context  I was testing a javascript function behavior of `window.open` and wanted to open it in a new tab instead of a window, and trying to set the config through firefox profile options but it was not being picked later when did a little digging into the client binding code founded that we are overriding the values with some set of frozen keys. Had to make those changes for it to work. So thought it might be beneficial for the community as well.  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","yashLadha","2020-09-11T15:49:04Z","2020-09-15T11:11:50Z"
"","8698","Add sever and client keys to eventbus","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   Fixes https://github.com/SeleniumHQ/selenium/issues/7856  ### Motivation and Context  We had an unsecured implementation of zeromq, this PR adds security by using the CurveMQ server and client keys and certificates.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","raju249","2020-09-15T08:54:49Z","2020-09-21T10:19:48Z"
"","8754","[grid] Add request id to poll the request from NewSessionQueue.","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   1. Added request id to the remove() method of NewSessionQueuer. 2. Ordering of requests is mandatory, hence updated the existing deque to store the request ids. 3. Added a concurrent hashmap to store the mapping of the request-id to the request.  4. This way when the Distributor gets the new session request event, it will be able to poll for the request-id received as part of the event.  ### Motivation and Context  When a new session request comes in, an event is fired to the Distributor (#8747). There was a condition that distributor assumed while polling from the queue, that head of the queue and the event has the same request-id. This PR fixes that.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2020-10-01T12:06:47Z","2020-11-04T15:44:30Z"
"","8609","Fixing Typo Changes","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","sruthi25","2020-08-05T09:23:49Z","2020-08-05T09:47:26Z"
"","8607","Fixing Typo Errors","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","C-nodejs,","sruthi25","2020-08-05T07:19:09Z","2020-08-05T09:26:24Z"
"","8865","Grid UI Unit Tests","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","raju249","2020-11-11T10:07:20Z","2020-11-25T10:35:30Z"
"","8784","Fix resource leak in JdbcBackedSessionMap","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","raju249","2020-10-14T08:26:08Z","2020-10-14T10:23:47Z"
"","8767","Add listener for DOM events using CDP and test","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","raju249","2020-10-09T11:16:08Z","2020-11-02T11:17:39Z"
"","8741","Secure certs on ZeroMQ","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","raju249","2020-09-28T05:37:56Z","2020-10-28T12:31:30Z"
"","8716","Add CDP versioning","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","raju249","2020-09-18T10:09:49Z","2020-09-21T10:37:30Z"
"","8275","3199 Chrome java build follow up","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.  This is to follow up for chrome build   ### Description  Tricia created the original pull request https://github.com/SeleniumHQ/selenium/pull/7756. However, she is no longer with the ChromeDriver team. I have retrieved her pull request changes and resubmitted it again so that we can continue the discussion. ### Motivation and Context  We would like to be able to build a jar file containing tests applicable to chrome under the chrome folder. ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","C-java,","k7z45","2020-05-06T04:05:40Z","2021-01-15T14:22:17Z"
"","8032","[dotnet] Fixes binding spec compliance for ErrorResponse","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.   Implements handling for 'stacktrace' to comply with the [W3 spec](https://w3c.github.io/webdriver/#errors). Fixes #3683  ### Description Adds an OR clause to the if statement checking whether the stacktrace key exists. Adds handling to correctly set the stackTraceArray object depending on which key exists. Supporting both implementations was proposed [here](https://github.com/SeleniumHQ/selenium/issues/3683#issuecomment-308230232)  ### Motivation and Context Long-standing issue. All other bindings appear to have been fixed.  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","C-dotnet,","jordan-mace","2020-02-17T05:44:46Z","2020-03-17T17:51:44Z"
"","8025","[dotnet] Adds equals override to EventFiringWebElement","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.   ### Description Adds an Equals override to EventFiringWebElement. Code is consistent with Java bindings. Adds a Unit Test that mocks the scenario given in #6076  ### Motivation and Context Fixes #6076  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","C-dotnet,","jordan-mace","2020-02-14T04:58:23Z","2020-03-17T17:52:26Z"
"","7866","Add the response to logs when executing a RemoteWebDriverin Java","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Motivation and Context Fix #7632, adding the response to logs.   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","FernandaCG","2019-12-16T21:45:05Z","2020-03-07T20:50:10Z"
"","8442","[issue-2070] Node drain feature. Complete except for process termination","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description This is 2 endpoints: - One on the distributor (node/{nodeId}/drain) Sets the distributor HOST to DRAINING, which in turn sets the node flag to ""draining""  - One on the node (/drain) Sends a new event (NODE_DRAINING_STARTED) to the Distributor via event bus  As long as the node is draining, it will not accept new sessions, and the Distributor will filter it out of all new session requests.  Still need to terminate the Node process, but this does (arguably) the most important bit   ### Motivation and Context Feature related to issue 2070: adding the ability to kill a node slowly, by forcing it to stop accepting new sessions, but allowing it to finish its current sessions before it dies.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [X] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","mmerrell","2020-06-19T20:00:48Z","2020-09-17T19:03:51Z"
"","8333","Deprecate OPERA_BLINK from BrowserType","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description This change will remove the operablink browser and redirect all reference to opera browser.  ### Motivation and Context Remove dead code from codebase.  Fixes #8318   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","bongosway","2020-05-21T13:19:47Z","2020-05-22T09:16:53Z"
"","8365","Removed obsolete browsers from BrowserType","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description Removes all references to obsolete browsers. Removed browser types are as below :  ``` String FIREFOX_PROXY = ""firefoxproxy""; String FIREFOX_CHROME = ""firefoxchrome""; String GOOGLECHROME = ""googlechrome""; String IEXPLORE_PROXY= ""iexploreproxy""; String SAFARI_PROXY = ""safariproxy""; String KONQUEROR = ""konqueror""; String MOCK = ""mock""; String IE_HTA=""iehta""; ```  ### Motivation and Context Fixes issue raised under #8317  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","rookieInTraining","2020-05-29T16:13:10Z","2021-01-23T22:14:03Z"
"","8348","Add Abstract Base Class to WebElement and WebDriver #7127","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description Make `WebDriver` and `WebElement` classes use Abstract Base Classes so that library authors and EventFiringWebDriver can work with wrapped or custom derived classes.  ### Motivation and Context By being able to register types that are not direct subclasses of the WebElement/Webdriver classes, this allows library authors to write fancy wrappers that won't break with `isinstance` checks.  It also fixes #7877, #7274   This code will work with Python 2 and Python 3.  ### Types of changes  - [X ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [X] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [X ] All new and existing tests passed.","closed","","isaulv","2020-05-26T22:30:31Z","2020-05-28T09:47:52Z"
"","8387","Correct Net::HTTP::Persistent bug when using newer versions","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description Fix the integration with the Net HTTP Persistent Gem.  ### Motivation and Context The default Net::HTTP Library allows the end user to force SSL using the `use_ssl=` method.  Net::HTTP::Persistent doesn't in newer releases.  This causes errors to be thrown when using the Net::HTTP::Persistent shim.  This change moves SSL configuration into its own method, allowing the shim to handle this for different versions while keeping the default HTTP code clean.  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","C-rb,","DylanLacey","2020-06-04T01:00:56Z","2021-01-14T01:31:55Z"
"","8389","[py] Fix abstract method in options class","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description Fix options class to properly set a concrete method for an abstract property.  ### Motivation and Context Fixes proper use of ABC in Python 3.  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","isaulv","2020-06-04T18:09:24Z","2020-06-05T13:16:05Z"
"","8366","Implement abc for webdriver","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description Bug fixes for ABC support  ### Motivation and Context Metaclass support is different between Python 2 and 3. Also bug in EF wrapper.  ### Types of changes  - [X ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","isaulv","2020-05-29T16:25:11Z","2020-05-30T08:08:23Z"
"","8206","[rb] fix: cdp for edge from goog to ms to match the vendor prefix","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description `execute_cdp` for EdgeChrome does not work because the command path does not match to current edge chrome. Current implementation raises `unknown command` error. AFAIK, the path of the vendor prefix part has been changed to `ms` after beta release. So, it should be `session/:session_id/ms/cdp/execute` instead of `session/:session_id/goog/cdp/execute`.   I copied code except for `send_command:` in `COMMANDS` from `WebDriver::Chrome::Bridge`. I thought separating chrome and edge was better than override only `send_command` in COMMANDS inheriting chrome since edge chrome and chrome already have different vendor prefix in their command like cdp command.   ### Motivation and Context To work `execute_cdp` against edge chrome browser.  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.   ### Test result (in spec/integration/selenium/webdriver/edge_chrome/driver_spec.rb) ``` kazu$ WD_SPEC_DRIVER=edge_chrome EDGE_BINARY=~/selenium/browser/microsoftedge.app/Contents/MacOS/Microsoft\ Edge bundle exec rspec spec/integration/selenium/webdriver/edge_chrome/driver_spec.rb   Running Ruby specs:   browser: edge_chrome   driver: edge_chrome  version: 80.0.361.66 platform: macosx       ci:      ruby: ruby 2.7.0rc2 (2019-12-22 master 75acbd5f00) [x86_64-darwin18]  ...  Finished in 14.28 seconds (files took 0.30272 seconds to load) 3 examples, 0 failures  ```  `driver_spec.rb` has a scenario of `execute_cdp`","closed","C-rb,","KazuCocoa","2020-04-16T14:32:48Z","2020-04-17T15:35:25Z"
"","8462","[java] Fix java syntax error","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description ![image](https://user-images.githubusercontent.com/20190812/85829274-d300c880-b7bc-11ea-8224-52d8ece93590.png)   ### Motivation and Context Fix build java error  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","alberthuang24","2020-06-26T06:53:47Z","2020-06-29T07:31:10Z"
"","8242","Add log level mapping for ChromeDriver","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  This will enable setting ChromeDriver log level via ChromeOption.  This removes the need for this line of code `System.setProperty(""webdriver.chrome.verboseLogging"", true)`  Set Logging like so:  `ChromeOptions options = new ChromeOptions(); ` `options.setLogLevel(ChromeDriverLogLevel.ALL)`  ### Motivation and Context  Fixes #7493 Makes adapting to future w3c spec on logging easy to manage.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","C-java,","bongosway","2020-04-25T21:16:12Z","2020-05-09T19:58:49Z"
"","8233","try to fix infinite loop issue","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  I faced up with a problem related to an infinite loop in this code snippet. I use Serenity for autotests, in turn, the Serenity uses Selenium. After a test fell, code is continuing to run. In my case the code snippet '((WrapsElement) arg).getWrappedElement()' returns Object WebElementFacadeStub type every stage of the loop.  If my solution does not fit, it's worth adding some check to this loop for breaking. ### Motivation and Context   ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","R-awaiting answer,","LazyMisha","2020-04-24T08:25:00Z","2020-04-26T17:09:52Z"
"","8378","WIP: Jdbc session map","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Fixes https://github.com/SeleniumHQ/selenium/issues/8172  ### Motivation and Context   ### Types of changes  - [-] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [-] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [-] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","raju249","2020-06-01T09:39:46Z","2020-06-05T10:49:52Z"
"","8424","Fix broken RelativeLocator code","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Fix Broken RelativeLocator code  ### Motivation and Context  I was working on a new PR, but noticed build was failing due to broken code in alpha 6.  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","bongosway","2020-06-15T12:52:52Z","2020-06-17T04:32:37Z"
"","8367","Delete deprecated FindsBy* interfaces","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Delete deprecated FindsBy* interfaces  ### Motivation and Context  Fixes #8175  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [x] Breaking change (fix or feature that would cause existing functionality to change)   ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","bongosway","2020-05-30T04:30:39Z","2020-06-02T21:18:12Z"
"","7990","Fixed comments for Safari referencing Chrome","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Comments in SafariDriver mention ChromeDriver.exe where safaridriver was probably intended.  ### Motivation and Context  Adds clarity and consistency to comments.  I ran across this because the tooltip in VS showed the comments on these methods, and that's how I was learning the expected name of each driver executable.  This one looked off.  ### Types of changes  - [x ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.  Not sure if this impacts documentation or not.  If something needs to be updated please let me know.  Thanks!","closed","","trademark18","2020-02-03T15:31:49Z","2020-02-08T21:01:34Z"
"","8401","Add Service Locator","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Add New Feature. Full description here #8022   * All plugin providers to implement the `LocatorStrategy` interface and extend the `By` Locator class. * Plugins will be discovered using SPI, plugin Jar `META-INF/services` should contain the path to implementation classes.   ![image](https://user-images.githubusercontent.com/7461869/84570224-edca4a80-ad83-11ea-8062-3fc0ec4d9939.png)  ![image](https://user-images.githubusercontent.com/7461869/84570001-4b5d9780-ad82-11ea-9cd8-2ae48355666d.png)   ### Motivation and Context  1. People mistakenly rely on FindByXXX interfaces, where it'd be more ""correct"" to use By and look up elements dynamically 2. It would be nice for people to be able to easily extend the location strategies to support (eg) visual testing, or using some kind of fancy ML to pick an element to click.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [x] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","bongosway","2020-06-08T17:01:44Z","2020-12-10T06:46:03Z"
"","7961","Fixed maven central 501 error, using of https.","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context Hi, guys!  I started to learn the documentation, but get an error on the screenshot. So, we need to change the documentation for the actual link.   ![image](https://user-images.githubusercontent.com/12239422/73167905-cc84fc80-4109-11ea-86c7-d49178828e1e.png)  > Effective January 15, 2020, The Central Repository no longer supports insecure communication over plain HTTP and requires that all requests to the repository are encrypted over HTTPS. >  > If you're receiving this error, then you need to replace all URL references to Maven Central with their canonical HTTPS counterparts: >  > Replace http://repo1.maven.org/maven2/ with https://repo1.maven.org/maven2/  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","roldevg","2020-01-27T10:36:54Z","2020-02-15T17:17:31Z"
"","8241","[JS] Minor fixes for relative locators","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","harsha509","2020-04-25T20:12:14Z","2020-04-25T20:31:30Z"
"","8396","Update webelement.py","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","boobear2107","2020-06-07T16:04:28Z","2020-06-16T20:26:21Z"
"","8240","[JS] Modify: Fixes nodeJs dependencies","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","harsha509","2020-04-25T16:25:53Z","2020-04-25T19:50:06Z"
"","8213","[py] Drop python 2.7 and 3.4 support","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [x] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.   ## [py] Drop python 2.7 and 3.4 support  python 2.7 and 3.4 are no longer supported. I believe we can drop support for those versions.  This PR related to #7462","closed","C-py,","uriyyo","2020-04-18T10:36:22Z","2021-01-25T15:26:44Z"
"","8304","okhttp deleted","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [x] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","C-java,","amiluslu","2020-05-13T17:37:16Z","2020-06-22T09:58:03Z"
"","7894","Fix: fixing imports in capability test (c-nodejs)","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","C-nodejs,","harsha509","2019-12-27T16:17:41Z","2020-03-04T15:22:06Z"
"","8260","Removing duplicates in rake task","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","harsha509","2020-04-30T07:41:40Z","2020-05-01T10:18:33Z"
"","8495","Add build bazel file for grid redis client","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","raju249","2020-07-10T06:14:47Z","2020-07-10T07:52:31Z"
"","8491","Fix scheme for redis backed session map","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","raju249","2020-07-08T13:44:11Z","2020-07-09T05:24:47Z"
"","8487","Move create connection logic to redis package","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","raju249","2020-07-07T08:24:12Z","2020-07-09T05:25:37Z"
"","8476","Add get cdp in se options","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","raju249","2020-07-02T08:18:54Z","2020-07-02T08:24:12Z"
"","8468","Minor spelling Fix","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","shucon","2020-06-29T08:18:40Z","2020-06-29T08:24:19Z"
"","8440","Js Cdp support","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","raju249","2020-06-19T09:20:32Z","2020-07-16T13:09:00Z"
"","8427","Add Memoizing Config","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","raju249","2020-06-16T08:13:03Z","2020-06-19T08:29:02Z"
"","7970","Feature/version upgrade 5","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","rubrikkta","2020-01-28T10:23:48Z","2020-01-28T21:43:56Z"
"","8471","[py] Allow running the test suite with WPE WebDrivers and add a bazel target for it and GTK","### Description   These changes allow using the WPE WebDriver to run the Selenium pytest suite.  ### Motivation and Context   The selenium test suite is imported into the [WebKit](https://webkit.org/) to make it easier to run WebDriver (Selenium's and WPT's) tests against WebKit changes. Recently we [enabled](https://bugs.webkit.org/show_bug.cgi?id=212527) the tests for WPE build bots but only the WPT suite is actually being tested. The WPE webdriver is not listed in the `conftest.py` as one of the options to be tested.  Also, this request added bazel rules to make it easier to run both the GTK and WPE tests. Will these rules be automatically executed by CI? (Requiring a working WPE/GTK setup). If so, is there any way to make them optional?  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes.     - Covered by existing tests. - [ ] All new and existing tests passed.     - No changes in other browsers, some failures in the test suite with both GTK and WPE.","closed","","lauromoura","2020-07-01T03:21:05Z","2020-07-01T23:28:58Z"
"","8761","Support Default Capabilities for Nodes on Selenium 4","Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  https://github.com/SeleniumHQ/selenium/issues/8745  ### Motivation and Context   ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","R-awaiting answer,","link89","2020-10-04T19:03:53Z","2021-01-04T19:59:30Z"
"","8470","[tracing] Add span event APIs and wrapper","### Description  Updated existing Span interface and OpenTelemetrySpan to add APIs for creating events in the span.  The APIs allow to add attributes to the event in the span. The attributes are stored using a Map. To enable use of single Map  while creating event attributes for different data types of attributes (String , long, double, boolean), EventAttribute interface and data types specific implementations are added.   ### Motivation and Context  The current tracing wrapper around OpenTelemetry does not provide APIs to add events to the spans. This PR provides the APIs to instrument events in the spans with and without attributes.  Events are crucial to drill down and triage an issue. Events help in documenting a moment at that timestamp within a span.   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2020-06-30T07:11:47Z","2020-07-10T23:28:02Z"
"","8426","Code refactor","### Description   This PR adds the following improvements: 1. Adds a `getClass` to config which returns the class based on the `implementation` option. 2. Adds a `create(Config config)` method to distributor. ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","raju249","2020-06-16T06:47:33Z","2020-06-17T05:15:22Z"
"","7988","Selenium-server-4.0.0-alpha-4 RemoteDriver.Quit() doesn't finish chromedriver session","**üêõ Bug Report**  I am using Selenium server in standalone mode. After running tests, I have not finished chromedriver.exe sessions.   **To Reproduce**  Run new grid with: java -jar selenium-server-4.0.0-alpha-4.jar standalone  Run simple test (C#):  var RemoteDriver = new RemoteWebDriver(new Uri(HubUrl), capabilities); var Browser = new EventFiringWebDriver(RemoteDriver); Browser.Navigate().GoToUrl(myURL); RemoteDriver.Quit();  Browser is closed correctly, but chromedriver is still running.   **Environment**  OS: Windows 10 Browser: Google Chrome Browser version: 79.0.3945.130 (Official Build) (64-bit) Browser Driver version: 79.0.3945.36 (https://sites.google.com/a/chromium.org/chromedriver/downloads) Language Bindings version:","closed","","daniilmeranov","2020-02-03T12:51:25Z","2020-03-11T08:19:06Z"
"","8288","After refresh(), driver not able to execute any javascript for IE (inside hostile iframes)","**To Reproduce** 1.launch IE browser and go to youtube.com (through selenium's webdriver) 2.in YT , search for any video (b/27326081) and click on play (main goal to click on play from hostile iframe) 3.once video starts , wait for 3 sec and refresh browser{driver.refresh()} 4. now ,use driver.execute_script(Any javascript command)     **Expected behavior** at step 4 , driver should be able to execute any javascript after refresh.  **Actual behavior** at step4 , selenium driver throws error : javascript error. after driver's refresh(), all javascript commands fail after that only for IE (hostile iframes)  **Test script or set of commands reproducing this issue** driver.refresh() driver.execute_script(""window.open();"")   Environment OS: windows 10 Browser: IE Browser version: 11  Browser Driver version: latest Language Bindings version: python2 Selenium Grid version (if applicable):3.14.0","closed","","Kakanii","2020-05-09T14:16:37Z","2021-09-05T10:02:54Z"
"","8562","Add secure node tests","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description Fixes https://github.com/SeleniumHQ/selenium/issues/7935  ### Types of changes  - [-] Bug fix (non-breaking change which fixes an issue) - [-] New feature (non-breaking change which adds functionality) - [-] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [-] My change requires a change to the documentation. - [-] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","raju249","2020-07-22T14:07:36Z","2020-08-05T08:40:39Z"
"","8652","Support cookie SameSite=None option on nodejs","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description Allows cookies to be added with `SameSite` set to ""None"" in addition to ""Lax"" and ""Strict"", as per https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite. This option is only valid if the cookie is `Secure` (see https://web.dev/samesite-cookies-explained/#samesitenone-must-be-secure and [proposal](https://tools.ietf.org/html/draft-west-cookie-incrementalism-00)).  ### Motivation and Context Follow up to https://github.com/SeleniumHQ/selenium/pull/7901 [Recent updates](https://web.dev/samesite-cookies-explained/#changes-to-the-default-behavior-without-samesite) to Chrome 85 (and soon landing on Firefox) changed the default from `None` to `Lax`, requiring us to _explicitly_ set `sameSite: 'None'`, which the [original implementation](https://github.com/SeleniumHQ/selenium/pull/7901/files#diff-8d08e47355ecd3bd4b7f70008552ebdaR1134-R1136) does not allow (not sure why, maybe `None` wasn't an option, back then?). This also mirrors what the Java bindings support: https://github.com/SeleniumHQ/selenium/blob/trunk/java/client/src/org/openqa/selenium/Cookie.java#L111 Other bindings (such as Python) have the same issue and should be updated too (I'm not a Python dev though).  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","C-nodejs,","n2o1988","2020-08-27T17:36:28Z","2020-09-11T10:10:46Z"
"","8876","Fix typos in exceptions.py","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Spotted a typo in ElementNotInteractableException doc string and found a few more when I went in to fix it.  ### Motivation and Context   ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","NekoFever","2020-11-16T16:21:14Z","2020-11-16T20:11:52Z"
"","8543","Add redis sessionmap doc","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description This PR adds an `sessionmaps` option to the `info` command. It talks about the `RedisBackedSessionMap`. What is it and how to use it.  ### Motivation and Context  This will help the user to check the documentation while on the command line. This is done in addition to already existing help commands like `security`, `tracing` etc.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","raju249","2020-07-17T10:08:48Z","2020-07-20T08:57:50Z"
"","7889","Add: Added cookie concept 'sameSite' (c-nodejs)","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  ### Description samSite is the new cookie concept that will be introduced from chrome 80+ versions. This PR contains the implementation of sameSite for selenium-webdriver JS bindings.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","harsha509","2019-12-24T12:52:41Z","2019-12-27T08:25:26Z"
"","8513","Move node selection logic in a package","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**    ### Description This PR separates the tightly coupled logic of `nodeSelection` to run a session, into a separate package and can be independently modified going forward. It doesn't and should not change any functionality from previoud build and should not show any differences for the user to run a session.  ### Motivation and Context  1. There is work going on adding support for `RedisDistributor` for which this same nodeSelection Package would be used/modified to make it work with redis backed distributor. 2. Hence as a first step in MVP and not have too may changes in `RedisDistributor` PR, this PR will make that change and I would iterate from there after it is merged. 3. The `GridModel` class stores the nodes and listens to addition and removal of Nodes. The `NodeSelector` class will help us select the node from the pool of nodes. Now, this pool of the nodes can be an in-memory hash map for a local distributor, it can also be a redis backed store for `RedisBasedDistributor` or a database backed store for `JdbcBackedDistributor`  The changes to make the datastore configurable inside the `NodeSelector` class will be done in #8403   ### Types of changes  - [-] Bug fix (non-breaking change which fixes an issue) - [-] New feature (non-breaking change which adds functionality) - [-] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [-] My change requires a change to the documentation. - [-] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","raju249","2020-07-13T09:22:41Z","2020-08-18T06:52:51Z"
"","8360","SafariDriver cannot be cast to org.openqa.selenium.html5.LocationContext","**Safari driver is unable to support HTML5 geolocation**.  ***I am using following piece of code*** Location location = new Location(arg1, arg2, arg3); ((LocationContext) webDriver).setLocation(location);  ***Expected*** Driver should navigate to respected Url  ***Actual*** Exception occurs  java.lang.ClassCastException: org.openqa.selenium.safari.SafariDriver cannot be cast to org.openqa.selenium.html5.LocationContext","closed","","ishanm120","2020-05-29T11:20:19Z","2021-09-05T09:43:56Z"
"","8334","python - call selenium scripte from GUI interface","**I have interface.py and script.py, I need to run script.py from interface.py after click button.**  **this is the script.py :**  ![script py](https://user-images.githubusercontent.com/53751601/82616214-1f545980-9bbc-11ea-9eca-2553c8eee571.JPG)  **this is interface.py :**  ![interface py](https://user-images.githubusercontent.com/53751601/82616281-4d399e00-9bbc-11ea-8393-efd8fdaa78d0.JPG)  **I do this way but nothing work?**","closed","","blourabie","2020-05-21T23:41:10Z","2020-06-24T22:32:59Z"
"","8309","C# firefox OKÔºåIE OKÔºåChrome  **NG**","**Error CodeÔºö OpenQA.Selenium.WebDriverException:‚ÄúThe HTTP request to the remote WebDriver server for URL http://localhost:50105/session timed out after 60 seconds.‚Äù**  **firefox OKÔºåIE OKÔºåChrome  **NG**  Code**            string chromedir = @""D:\Program Files\Chrome\chrome.exe"";             ChromeOptions options = new ChromeOptions();             options.BinaryLocation = chromedir;             **IWebDriver webDriver = new ChromeDriver(options);**             webDriver.Navigate().GoToUrl(""https://www.baidu.com/"");   **Environment** OS: Windows 10 Browser: chrome Browser version: Version 81.0.4044.138 Browser Driver version: ChromeDriver 81.0.4044.138 Language Bindings version: C#   software : visual studio 2019 ![11](https://user-images.githubusercontent.com/14154547/81997809-68b81c80-9683-11ea-8a53-54fc376ca1d2.png) ![12](https://user-images.githubusercontent.com/14154547/81997824-71105780-9683-11ea-8f9f-f41e53d89708.png) ![13](https://user-images.githubusercontent.com/14154547/81997831-75d50b80-9683-11ea-92b9-8914089329ac.png) ![14](https://user-images.githubusercontent.com/14154547/81997838-7a012900-9683-11ea-9659-0171297bb2fe.png)","closed","","wpyok500","2020-05-15T00:10:08Z","2021-09-05T10:02:50Z"
"","8311","firefox is OKÔºåIE is OKÔºåChrome  Ng(bug)","**Environment** OS: Windows 10 Browser: chrome Browser version: Version 81.0.4044.138 Browser Driver version: ChromeDriver 81.0.4044.138 Language Bindings version: C# Software : visual studio 2019 ![15](https://user-images.githubusercontent.com/14154547/81998216-8afe6a00-9684-11ea-81c7-0f7806d66bba.png) ![11](https://user-images.githubusercontent.com/14154547/81998228-8fc31e00-9684-11ea-902f-b5468682abca.png) ![12](https://user-images.githubusercontent.com/14154547/81998231-9356a500-9684-11ea-8259-30c21bc1c187.png) ![13](https://user-images.githubusercontent.com/14154547/81998242-9a7db300-9684-11ea-8565-eee37629d246.png) ![14](https://user-images.githubusercontent.com/14154547/81998247-9e113a00-9684-11ea-8041-859b34a8db7b.png)    ## üí¨ Questions and Help  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","wpyok500","2020-05-15T00:18:17Z","2021-09-05T10:02:50Z"
"","8357","As a Firefox extension developer, I would like to install a temporary extension from a folder","**Edit**: 2020-06-11 ‚Äì ‚ö†Ô∏è This initial comment is not correct. I misunderstood the GeckoDriver API. I was looking at stale source code. üòì With new knowledge and some guidance from the GeckoDriver team, I've proposed an approach to handle the ""install addon"" command from FirefoxDriver consistently for each language. See my [long comment](https://github.com/SeleniumHQ/selenium/issues/8357#issuecomment-643047209) below.  --  ## üêõ Bug Report  We can't install a temporary extension in Firefox using the JavaScript or DotNet bindings. The implementation is inconsistent across the languages. The GeckoDriver API expects a `path` as a String but we're sending an `addon`. See [mozilla/geckodriver - marionette.rs](https://github.com/mozilla/geckodriver/blame/17945ac838449dda1defc8cda0c6dadb042519b2/src/marionette.rs#L1319-L1328).  These two bindings need to be fixed:  |Language|Implementation|Authors / CC| |-|-|-| |JavaScript|[javascript/node/selenium-webdriver/firefox.js#L637-L657](https://github.com/SeleniumHQ/selenium/blob/master/javascript/node/selenium-webdriver/firefox.js#L637-L657)|@kvetko, @jleyba| |DotNet|[dotnet/src/webdriver/Firefox/FirefoxDriver.cs#L213-L227](https://github.com/SeleniumHQ/selenium/blob/master/dotnet/src/webdriver/Firefox/FirefoxDriver.cs#L213-L227)|@jimevans|  These seem to be OK:  |Language|Implementation| |-|-| |Java|[java/client/src/org/openqa/selenium/firefox/FirefoxDriver.java#L235-L240](https://github.com/SeleniumHQ/selenium/blob/master/java/client/src/org/openqa/selenium/firefox/FirefoxDriver.java#L235-L240)| |Python|[py/selenium/webdriver/firefox/webdriver.py#L247-L264](https://github.com/SeleniumHQ/selenium/blob/master/py/selenium/webdriver/firefox/webdriver.py#L247-L264)| |Ruby|[rb/lib/selenium/webdriver/firefox/bridge.rb#L34-L38](https://github.com/SeleniumHQ/selenium/blob/master/rb/lib/selenium/webdriver/firefox/bridge.rb#L34-L38)  ## To Reproduce  Try to install an extension without building an .xpi or .zip file using dotnet and javascript bindings.  TODO - Script  ## Expected behavior  I expect to be able to install a temporary extension in Firefox: - From the JavaScript library using [`installAddon`](https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/firefox_exports_Driver.html#installAddon) - From the DotNet library using [`InstallAddOn`](https://www.selenium.dev/selenium/docs/api/dotnet/?topic=html/T_OpenQA_Selenium_Firefox_FirefoxDriver.htm)     - Note 1: This method is not in those docs?!     - Note 2: `InstallAddOnFromFile` is also made redundant  ## Test script or set of commands reproducing this issue  TODO - Include in example repo.  The steps to reproduce are: * Create a minimal extension     * **extension\manifest.json**         ```json         {           ""name"": ""Uh oh!"",           ""description"" : ""Print a message to the console you may not see"",           ""version"": ""0.1"",           ""manifest_version"": 2,           ""content_scripts"": [             {               ""matches"": [""https://*.github.com/*""],               ""js"": [""index.js""]             }           ]         }         ```     * **extension\index.js**         ```js         console.log('We did it! ‚≠êÔ∏è');         ``` * Start Firefox and add an extension     * **javascript/example.js**         ```js         const { Builder, By } = require('selenium-webdriver');         const { Options } = require('selenium-webdriver/firefox');          (async () => {            const options =             new Options()               .setPreference('extensions.htmlaboutaddons.recommendations.enabled', false);            const builder =             new Builder()             .forBrowser('firefox')             .setFirefoxOptions(options);            const driver = builder.build();            const isTemporaryAddon = true;           driver.installAddon('../extension/', isTemporaryAddon);            await driver.get('https://github.com/SeleniumHQ/selenium');            // Expected: A message to be printed on the console           // Expected: The temporary extension appears in about:debugging > This Firefox > Temporary Extensions          })();         ``` * Install selenium-webdriver     ```shell     echo {} > package.json     npm install --save-dev selenium-webdriver     ``` * Run     ```shell     node javascript/example.js     ```  ## Environment  OS: macOS Browser: Firefox Browser version: 71.0 Browser Driver version: GeckoDriver for the last 2+ years Language Bindings version: Latest Selenium Grid version (if applicable): Not applicable  ## Questions  1. Would you welcome a PR? 2. Do you want the issue or PR split by language?","open","C-nodejs,","seanpoulter","2020-05-28T06:17:56Z","2022-07-01T19:17:21Z"
"","8439","cannot create temp dir for unpacking extensions","> ## üí¨ Questions and Help > cannot create temp dir for unpacking extensions >  > In Linux,my project in tomcat 8.5. > If I use root,it is normal. > but while i use a average user , it have the question.(Although i make tomcat chmod -R 777) >  > 2020-06-15 10:18:50.180 [http-nio-8180-exec-5] INFO com.jd.jr.risk.common.utils.ScreenshotUtil[175] - Generating Chrome driver (/export/chrome/chromedriver)... > Starting ChromeDriver 83.0.4103.39 (ccbf011cb2d2b19b506d844400483861342c20cd-refs/branch-heads/4103@{#416}) on port 1024 > Only local connections are allowed. > Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. > ChromeDriver was started successfully. > 2020-06-15 10:18:50.499 [http-nio-8180-exec-5] ERROR com.jd.jr.risk.web.controller.DownController[109] - e=org.openqa.selenium.WebDriverException: unknown error: cannot create temp dir for unpacking extensions > Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03' > System info: host: 'YZ-222-23-133.h.chinabank.com.cn', ip: '10.222.23.133', os.name: 'Linux', os.arch: 'amd64', os.version: '3.10.0-693.el7.x86_64', java.version: '1.8.0_231' > Driver info: driver.version: ChromeDriver > remote stacktrace: #0 0x55eb9245a579 >  > org.openqa.selenium.WebDriverException: unknown error: cannot create temp dir for unpacking extensions > Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03' > System info: host: 'YZ-222-23-133.h.chinabank.com.cn', ip: '10.222.23.133', os.name: 'Linux', os.arch: 'amd64', os.version: '3.10.0-693.el7.x86_64', java.version: '1.8.0_231' > Driver info: driver.version: ChromeDriver > remote stacktrace: #0 0x55eb9245a579 >  > ``` > at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) > at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) > at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) > at java.lang.reflect.Constructor.newInstance(Constructor.java:423) > at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62) > at org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30) > at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126) > at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) > at java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958) > at java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:126) > at java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:499) > at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:486) > at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472) > at java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:152) > at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) > at java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:464) > at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128) > at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74) > at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136) > at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) > at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552) > at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213) > at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:131) > at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:181) > at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:168) > at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:157) > at com.jd.jr.risk.common.utils.ScreenshotUtil.generateChromeDriver(ScreenshotUtil.java:192) > at com.jd.jr.risk.common.utils.ScreenshotUtil.generateWebDriver(ScreenshotUtil.java:150) > at com.jd.jr.risk.common.utils.ScreenshotUtil.doScreenshot(ScreenshotUtil.java:108) > at com.jd.jr.risk.service.impl.DownLoadServiceImpl.generateImages(DownLoadServiceImpl.java:136) > at com.jd.jr.risk.web.controller.DownController.getDownloadImageFile(DownController.java:95) > at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) > at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) > at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) > at java.lang.reflect.Method.invoke(Method.java:498) > at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) > at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) > at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105) > at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879) > at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) > at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) > at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) > at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) > at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) > at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) > at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) > at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) > at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) > at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) > at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) > at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) > at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) > at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) > at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123) > at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) > at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) > at com.jd.jr.risk.common.config.CorsConfiguration$1.doFilter(CorsConfiguration.java:55) > at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) > at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) > at org.springframework.boot.web.servlet.support.ErrorPageFilter.doFilter(ErrorPageFilter.java:128) > at org.springframework.boot.web.servlet.support.ErrorPageFilter.access$000(ErrorPageFilter.java:66) > at org.springframework.boot.web.servlet.support.ErrorPageFilter$1.doFilterInternal(ErrorPageFilter.java:103) > at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) > at org.springframework.boot.web.servlet.support.ErrorPageFilter.doFilter(ErrorPageFilter.java:121) > at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) > at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) > at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) > at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) > at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) > at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) > at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199) > at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) > at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:543) > at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) > at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81) > at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:678) > at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) > at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) > at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:609) > at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) > at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:810) > at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1623) > at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) > at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) > at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) > at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) > at java.lang.Thread.run(Thread.java:748) > ```  _Originally posted by @a11745 in https://github.com/SeleniumHQ/selenium/issues/8438#issuecomment-646509029_","closed","","a11745","2020-06-19T08:23:01Z","2021-09-05T09:36:41Z"
"","7912","selenium.common.exceptions.InvalidArgumentException",">   File ""C:\Users\GGgg\PycharmProjects\ParsMberry\z2gis.py"", line 49, in t2gisparse >     result = res.get_attribute('innerHTML') >   File ""C:\Users\GG\PycharmProjects\ParsMberry\venv\lib\site-packages\selenium\webdriver\remote\webelement.py"", line 139, in get_attribute >     attributeValue = self.parent.execute_script( >   File ""C:\Users\GGgg\PycharmProjects\ParsMberry\venv\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 634, in execute_script >     return self.execute(command, { >   File ""C:\Users\GGgg\PycharmProjects\ParsMberry\venv\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 321, in execute >     self.error_handler.check_response(response) >   File ""C:\Users\GGgg\PycharmProjects\ParsMberry\venv\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 242, in check_response >     raise exception_class(message, screen, stacktrace) > selenium.common.exceptions.InvalidArgumentException: Message: unexpected end of hex escape at line 1 column 155266  This error seems to be due to emoji on page. https://2gis.ua/odessa/branches/1970861708085905/firm/70000001030556211/30.790109%2C46.578724/tab/reviews?m=30.850818%2C46.433337%2F10.61  I tried gecko, chrome, errors are same.","closed","needs-triaging,","PikoKrs","2020-01-04T21:50:27Z","2020-02-08T00:39:36Z"
"","8405","How to escpae file upload modal?","#8404","closed","","dontbesatisfied","2020-06-09T12:07:16Z","2021-09-05T09:36:49Z"
"","8729","Getting issue org.openqa.selenium.TimeoutException: timeout: Timed out receiving message from renderer: 19.083","##Getting TimeoutException  I have used the latest driver of chrome but I am getting error TimeoutException at the time of browser launch. I am using SSH connection to jumpbox for DB connection and after connection when the browser should get to launch it throws an exception. ![Screenshot from 2020-09-24 17-45-39](https://user-images.githubusercontent.com/62946151/94148407-3b327980-fe94-11ea-9148-56bbe395b561.png)  SeleniumHQ IRC channel SeleniumHQ Slack channel The Selenium Users google group   - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","SushantQA","2020-09-24T13:05:44Z","2021-09-05T08:34:48Z"
"","8252","ERROR: Could not find a version that satisfies the requirement webdriver (from versions: none)","###Failed to install package webdriver pycharm version: 2020.0.1 selenium version: 3.141.0 pip version: 20.0.2  ## below console output is shown: ERROR: Could not find a version that satisfies the requirement webdriver (from versions: none) ERROR: No matching distribution found for webdriver  ### Kindly please help to resolve this issue. Please let me know if I had missed.","closed","","manikandan-kaliamoorthy","2020-04-27T17:44:51Z","2021-09-05T10:20:24Z"
"","8374","[javascript] Fix JavaScript build error in TravisCI","### Motivation and Context  The JavaScript build in TravisCI fails. The tests are **not** run. The error presents like this:  ``` Error: Cannot find module '../../../../bazel-genfiles/javascript/node/selenium-webdriver/lib/atoms/find-elements.js'. Please verify that the package.json has a valid ""main"" entry     at Function.module.constructor._resolveFilename (javascript/node/selenium-webdriver/tests_require_patch.js:482:17)     at requireAtom (javascript/node/selenium-webdriver/lib/http.js:56:14) ```  Here is a recent example - https://travis-ci.com/github/SeleniumHQ/selenium/jobs/342002768.  ### Description  Test a hypothesis that `find-Elements.js` may be related to the missing module. This is the only spot in the repo where the `E` is capitalized.  This fixes the build error. The tests run and fail (as expected).  From https://travis-ci.com/github/SeleniumHQ/selenium/jobs/342002768:  ![image](https://user-images.githubusercontent.com/2585460/83373236-a318fd80-a395-11ea-94fd-5472383839e0.png)   **CC**: @Harsha509  ### Types of changes - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation.  **No** - [ ] I have updated the documentation accordingly.  **Not applicable** - [ ] I have added tests to cover my changes.  **Not applicable** - [ ] All new and existing tests passed. **Maybe ü§û** (It is better than before).","closed","","seanpoulter","2020-06-01T03:08:42Z","2020-06-03T07:43:40Z"
"","8581","[JS] Kill opera service on quit","### Description WebDriver control flow is deprecated long ago, so removing opt_flow and replacing with service.kill()  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","harsha509","2020-07-28T19:32:14Z","2020-07-29T10:57:41Z"
"","8398","[java] change access modifier of RemoteWebElement.execute method","### Description We have extended `RemoteWebElement` and added more capabilities by extending RemoteWebElement. Like Appium has extended RemoteWebElement and created MobileElement. We have overridden below method.  ``` protected Response execute(String command, Map parameters) {} ```  Now these methods has been replaced by `CommandPayload` argument, these need to be a `protected` method to support override. Earlier overridden support was there in selenium version 2 and 3.  Previously I have created pull request https://github.com/SeleniumHQ/selenium/pull/8344 for RemoteWebDriver. Sorry at that time I didn't notice same issue with RemoteWebElement.  ### Motivation and Context This is blocker who have extended RemoteWebElement in their libraries. This change supports migration to selenium 4. Even now other execute methods are `protected`, so I don't find any reason to make this method `default`.  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","amitbhoraniya","2020-06-08T05:27:08Z","2020-06-09T08:05:26Z"
"","8344","change access modifier of RemoteWebDriver.execute method.","### Description We have extended `RemoteWebDriver` and added more capabilities by extending RemoteWebDriver. We have overridden below methods.  ``` protected Response execute(String driverCommand, Map parameters) {} protected Response execute(String command) {} ```  Now these methods has been replaced by `CommandPayload` argument, these need to be a `protected` method to support override. Earlier overridden support was there in selenium version 2 and 3.  ### Motivation and Context This is blocker who have extended RemoteWebDriver in their libraries. This change supports migration to selenium 4. Even now other execute methods are `protected`, so I don't find any reason to make this method `default`.  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","amitbhoraniya","2020-05-26T06:44:52Z","2020-05-26T08:21:48Z"
"","7902","Peg rubyzip at ['~> 1.2', '>= 1.2.2'] to prevent `cannot load such file -- zip` error when using rubyzip 2","### Description Using `rubyzip >= 2` causes `gem 'selenium-webdriver'` to fail on load with:  ``` LoadError:   cannot load such file -- zip # ./lib/selenium/webdriver/common/zipper.rb:20:in `require' ```  ### Motivation and Context Pegginz `rubyzip` prevents this issue.  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","C-rb,","weilandia","2019-12-30T22:10:45Z","2020-01-06T23:05:43Z"
"","8519","[build] Switch to ready-to-use Docker Super-Linter image","### Description Use pre-built Docker Super-Linter image instead of building it every time  ### Motivation and Context According to the official [documentation](https://github.com/github/super-linter/blob/366771ba4ec760c65d661807be7ce507bef2ce59/README.md): > **NOTE:** Using the line:`uses: docker://github/super-linter:v3` will pull the image down from **DockerHub** and run the **GitHub Super-Linter**.   Using the line: `uses: github/super-linter@v3` will build and compile the **GitHub Super-Linter** at build time. *This can be far more costly in time...*  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","valfirst","2020-07-14T08:52:39Z","2020-07-14T09:12:22Z"
"","8680","[JS] Upgrade rules_nodejs to 2.1.0","### Description Upgrade rules_nodejs to 2.1.0  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","harsha509","2020-09-07T17:01:30Z","2020-09-07T21:44:47Z"
"","8687","[js] updating rules nodejs to 2.2.0","### Description updating rules_nodes to 2.2.0   ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","harsha509","2020-09-10T17:34:03Z","2020-09-10T17:35:13Z"
"","8535","Fix 404 errors by changing branch name in URLs to trunk","### Description Updates github URLs to use `trunk`  ### Motivation and Context The primary branch name recently changed to trunk, so links using the old branch name now result in 404 errors. By updating the links, the 404 errors go away  ### Types of changes - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","johndouthat","2020-07-15T16:55:51Z","2020-07-15T20:54:26Z"
"","8565","[tracing] Update tracing.txt for Opentelemetry 0.6.0 version bump","### Description Update tracing.txt for Opentelemetry 0.6.0 version bump  ### Motivation and Context Fixing the documentation.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [X] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","pujagani","2020-07-23T13:24:37Z","2020-07-24T09:24:52Z"
"","8725","[JS] Enable installAddon() to install unpacked extensions","### Description This pull request extends the `installAddon()` method of the `Driver` implementation for Firefox, so that a path to an unpacked extension can be specified alternatively to a packaged XPI or ZIP file.  ### Motivation and Context The `Driver` implementation for Firefox has an `installAddon()` method in order to install web extensions for the current session. The underlying `install addon` command can install packaged extensions using the `addon` parameter, as well as unpacked extensions using the `path` parameter. Support for the latter is missing in Selenium's `installAddon()` API.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","C-nodejs,","snoack","2020-09-22T20:33:50Z","2022-01-05T21:14:52Z"
"","8124","Modify: Updating year in NOTICE and LICENSE document","### Description This pr updates year 2020 in `NOTICE` and `LICENSE` document   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","harsha509","2020-03-21T07:26:15Z","2020-03-21T14:59:34Z"
"","7977","Update JavaScript bindings for Edge Chromium","### Description This change updates the 'edge module in the JavaScript library with support for Edge Chromium. The edge.Options type has been updated to support the various Chromium capabilities. This uses a similar strategy to the Java and C# library where a 'chromium' base module is factored out, and 'chrome' and 'edge' derive from this module.  The existing Edge (EdgeHTML) is still used by default to maintain backward compatibility. Users can opt in to Chromium by calling the new edge.Options.useEdgeChromium(true) method. Docs have been updated with these changes and up-to-date download links.  ### Types of changes - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","C-nodejs,","bwalderman","2020-01-28T21:52:37Z","2020-03-04T18:37:25Z"
"","8267","Add set_cookies argument to remote WebDriver","### Description This adds a `set_cookies` boolean argument to the remote `WebDriver` class so that any cookies in the `Set-Cookie` header of the response are sent in subsequent requests to the remote webdriver.   ### Motivation and Context We are using AWS ALB and Kubernetes to load balance web driver requests across several replicas. We have [sticky sessions](https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-target-groups.html#sticky-sessions) enabled, meaning we need to retrieve the `AWSALB` cookie and include it in subsequent requests so that the request goes to the same machine where the browser session is running.  ### Types of changes - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","C-py,","nicoleclearmetal","2020-05-04T17:05:28Z","2020-07-02T00:52:16Z"
"","7982","Use Edge (Chromium) for .NET EdgeDriver by default","### Description The purpose of this change is the update EdgeDriver, EdgeOptions, and EdgeDriverService to be Chromium-first to ensure they are always driving the most up-to-date version of Edge going forward. The following changes have been made: - Remove the isLegacy constructor parameter from EdgeOptions and EdgeDriverService. - Remove legacy-only properties from EdgeDriverService. - Create a new EdgeLegacyDriverService class that works like the old EdgeDriverService did before Chromium support was introduced. - Split EdgeOptions into EdgeOptions and EgeLegacyOptions. EdgeOptions has only Chromium capabilities. - Add constructor variants to EdgeDriver that accept valid combinations of Options/Service or creates reasonable defaults if these are not provided.  ### Motivation and Context The goal is to make driving the current/future Edge (Chromium) _easy_, and to make driving legacy Edge (EdgeHTML) _possible_, in that order.  Ideally this means that minimal changes are needed to upgrade to the new Edge. Existing client code should just work in most cases. Staying on old Edge should be as simple as creating an EdgeLegacyDriverService/Options. All other existing EdgeDriver code should continue to work as-is.  If/when we decide to remove Edge legacy support from Selenium, it will be as simple as removing the EdgeLegacyDriverService/Options classes and this can be done without breaking clients that have migrated to Edge Chromium.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [x] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","C-dotnet,","bwalderman","2020-01-30T17:30:01Z","2020-03-04T18:32:06Z"
"","8370","Refactoring ByChained findElementS","### Description The original for-each was pretty obscure. Replacing it with an index-based for loop.  This addresses the doubts which arose in the review for #372: https://github.com/SeleniumHQ/selenium/pull/372#discussion_r27221662  ### Types of changes  - [x] Refactoring - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","alb-i986","2020-05-30T10:39:58Z","2021-04-03T14:16:53Z"
"","8531","[tracing] Instrumenting events for errors in existing trace spans in Grid","### Description The changes made are related to the issue #6703. The code changes add events to existing spans of the trace for error conditions.   ### Motivation and Context Traces include spans, which can have timed events. These events act as logs. Having events in spans in case of error with detailed error message and useful attributes will help in debugging.   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2020-07-15T13:32:25Z","2020-07-16T07:16:43Z"
"","8541","[tracing] Match client and server spans with OpenTelemetry specification","### Description The changes are related to issue #6703. Improvises existing HTTP span error handling.   ### Motivation and Context  Current implementation has SpanWrapperHTTPHandler to generate spans for any request received by the server and TracedHTTPClient to generate spans for a client request. The changes help adhere to the [OpenTelemetry specification](https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/trace/semantic_conventions/http.md) to ensure consistent HTTP spans. The  HTTP error code mapping with span status adheres to [OpenTelemetry specification](https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/trace/semantic_conventions/http.md) and  [W3C Webdriver Error Codes](https://www.w3.org/TR/webdriver/#errors).  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2020-07-16T13:32:09Z","2020-07-17T09:22:26Z"
"","8529","[tracing] Add missing spans to Grid","### Description The changes are related to issue #6703.   ### Motivation and Context This helps ensure the existing trace is complete for a request flow.  ### Types of changes - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist  - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2020-07-15T09:45:07Z","2020-07-15T10:06:35Z"
"","8561","[tracing] Add tracing to RedisBackedSessionMap. Add SESSION_CLOSED event listener.","### Description The changes are related to issue #6703 . Tracing is added to calls made to Redis for RedisBackedSessionMap. Additionally, came across missing event listener while testing the changes locally. Added SESSION_CLOSED event listener, so that session is removed from Redis once the session DELETE request is sent to the webdriver. Without this, the sessions were never deleted from the Redis store.  ### Motivation and Context RedisBackedSessionMap uses Redis to store sessions and capabilities. The changes instrument tracing, spans and error events for calls to Redis. This will make it easier to debug in a error situation.  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2020-07-22T06:47:45Z","2020-07-24T09:42:46Z"
"","8699","[grid] Update  Node Drain status feature related to PR 8442 and issue #1070","### Description The changes are related to #8442 . This PR fixes the build errors and tests.  - Create Status enum.  - Remove NodeDrainingStartedEvent.  - Update drain() in Distributor. - Fix build errors by moving Status enum to data package. - Update LocalDistributor, Host, DistributorStatus to use Status enum. - Fix LocalDistributorTest.java. - Add drain() to OneShotNode. - Shutdown node once all existing sessions are complete.  ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2020-09-15T12:03:04Z","2020-09-18T12:36:39Z"
"","8515","[JS] Removing deprecated selector tagName from tests","### Description tagName is deprecated in JS bindings, so replacing it with css selector  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","harsha509","2020-07-13T14:12:23Z","2020-07-13T16:30:12Z"
"","8796","[standalone] Fix standalone url for secure communication.","### Description Standalone mode while using secure communication was passing ""http"" scheme in the url. Changes fix it to use the appropriate scheme based on config flags.   ### Motivation and Context  Standalone mode while using secure communication was passing ""http"" scheme in the url and passing it for client factory creation. As a result, when a Selenium test was run using the RemoteWebDriver, the Standalone server would keep creating new threads and lead to out of memory exception, it got stuck in a sort of a loop to keep creating clients. Fixed the issue by ensuring the url is based on scheme (secure or not) inferred from the config.   ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2020-10-16T10:41:27Z","2020-10-20T10:08:31Z"
"","8412","[java] Actions javadoc: #perform vs #build","### Description Slightly improving the documentation. Pointing out that it‚Äôs #perform what the user needs to call at the end of the method chain to actually perform the actions.  ### Motivation and Context It would be natural for one who is familiar with the Builder pattern, and it's the first time that he/she uses the Actions class (exploring the API with method completion), to come up with something like this:  ```java new Actions(driver)   .this()   .that()   [..]   .build(); ```  And expect that it will work.  Then, when they run their test and find that something didn't work, it's not going to be easy to figure out what went wrong. More specifically, to trace it back to the call to `build()`.  This PR is trying to solve that by adding a warning in the javadoc.  Although I would prefer the build() method to behave as perform() (and deprecate perform() afterwards).  This comes from a personal experience, where I tried to use the Actions class after some time (a few years) I hadn't used it and I forgot that you need to call perform() and not build().  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change) - [x] Javadoc improvement  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","alb-i986","2020-06-10T20:34:54Z","2021-04-03T22:20:04Z"
"","8255","Use same port in remote executor and service","### Description Service for ie and command executor contain different ports if used Default in WebDriver ctor  Fixes #8253  ### Motivation and Context Fix problems on IE instance create  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","FrySabotage","2020-04-28T07:48:16Z","2020-04-28T18:40:21Z"
"","7893","[rb] Fix deprecation warnings for Ruby 2.7 in 3.x","### Description Ruby 2.7 came out yesterday and I've been looking into deprecation warnings in my test suite. I know 3.x isn't technically getting releases anymore, but I think this warranted at least trying to fix on my part.  This fixes #7870. I think I'll need to make a separate PR for master (for the code that hasn't been refactored away, anyway) once this is merged.  ### Motivation and Context  As mentioned in #7870, I'm getting deprecation warnings when I run my tests, like so:  ``` /Users/connorshea/.rbenv/versions/2.7.0-preview3/lib/ruby/gems/2.7.0/gems/selenium-webdriver-3.142.6/lib/selenium/webdriver/chrome/driver.rb:43: warning: The last argument is used as the keyword parameter /Users/connorshea/.rbenv/versions/2.7.0-preview3/lib/ruby/gems/2.7.0/gems/selenium-webdriver-3.142.6/lib/selenium/webdriver/remote/bridge.rb:44: warning: for `handshake' defined here  /Users/connorshea/.rbenv/versions/2.7.0-preview3/lib/ruby/gems/2.7.0/gems/selenium-webdriver-3.142.6/lib/selenium/webdriver/remote/bridge.rb:62: warning: The last argument is used as the keyword parameter /Users/connorshea/.rbenv/versions/2.7.0-preview3/lib/ruby/gems/2.7.0/gems/selenium-webdriver-3.142.6/lib/selenium/webdriver/remote/w3c/bridge.rb:35: warning: for `initialize' defined here ```  These warnings are gone with this patch. See [the Ruby blog post about this deprecation](https://www.ruby-lang.org/en/news/2019/12/12/separation-of-positional-and-keyword-arguments-in-ruby-3-0/) for more information on it.  ### Types of changes - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","C-rb,","connorshea","2019-12-27T01:17:58Z","2019-12-27T19:02:31Z"
"","8146","Add: Adding Opera Browser support to JS bindings","### Description Rolling back support for Opera browser  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","harsha509","2020-03-30T12:24:04Z","2020-03-31T14:25:11Z"
"","8392","link to chrome source code is not found","### Description replace an invalid link to Chrome source code with a valid one.  ### Motivation and Context With an incorrect link, code readers wouldn't be able to reference source code in one step.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","masakazutakewaka","2020-06-05T14:40:08Z","2020-06-05T14:49:02Z"
"","8811","[JS]Cleaning up chrome.js file","### Description Removing duplicate declarations from chrome as chrome extends chromium.js  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","harsha509","2020-10-21T07:34:47Z","2020-10-23T07:45:57Z"
"","8516","[JS] Removing deprecation warning for tagName and unused imports","### Description Removing deprecation warning for tagName   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","harsha509","2020-07-13T16:58:41Z","2020-07-13T22:15:18Z"
"","8350","[JS] Modify: Removing unused imports","### Description Removed unused imports in JS bindings  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","harsha509","2020-05-27T12:00:38Z","2020-05-28T09:30:43Z"
"","8290","Favor Python3 constructs and Python 2.7 compatibility","### Description Python 2.7 is now considered a legacy Python version. These changes represent code to make it easier to fork to a Python 2 only repo, and also favor Python 3 in terms of imports.  It also drops support for Python 2.6.  ### Motivation and Context Better support for a Python 3.5+ only world.  ### Types of changes - [X ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [X] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","isaulv","2020-05-09T21:51:45Z","2020-05-11T08:43:57Z"
"","8455","Fix browserName typo for Edge WebView2","### Description MsEdgeDriver lets clients request the browserName = ""webview2"" capability to drive native apps using the [WebView2](https://docs.microsoft.com/en-us/microsoft-edge/webview2/) control. Selenium users can set this using the EdgeOptions.UseWebView property.  Turns out there are a couple problems with this property's implementation: 1) It was attempting to use ""WebView2"" as the browserName, but msedgedriver expects ""webview2"" (lowercase) 2) An abstract property was added to the ChromiumDriver base class so that Edge and Chrome could supply whatever browserName values they wanted, but this property was being read only once on construction. Setting EdgeOptions.UseWebView = true wouldn't actually change the browserName.  ### Motivation and Context Fixing a regression due to the introduction of the .UseWebView property.  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","bwalderman","2020-06-24T16:19:13Z","2020-06-24T16:39:31Z"
"","8496","[JS] Updating mocha version to latest and minor test cleanup","### Description Minor changes and mocha version update  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","harsha509","2020-07-10T07:14:42Z","2020-07-10T07:54:59Z"
"","8236","[java] Allow users to extend ExpectedConditions","### Description Loosen the strict constraint on the constructor, from private to protected.  ### Motivation and Context ..so that users can have their own static class with their own custom conditions, which extends ours. As a result, by importing their own class, they can get access to both their and our ExpectedCondition's.  As an example from a notable project, please see [JUnit's Assert](https://github.com/junit-team/junit4/blob/50a285d3ce69b4556ac46d8633f6beb4527b4679/src/main/java/org/junit/Assert.java#L29): it has the same feature.    ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","alb-i986","2020-04-24T15:17:21Z","2020-04-24T16:28:16Z"
"","8222","[JS] Locates Operadriver synchronously in JS bindings","### Description locates opera bindings synchronously. This is mainly used to quickly run opera tests in a local machine.   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","harsha509","2020-04-20T15:21:59Z","2020-04-21T16:53:58Z"
"","8390","Add basic instructions for running browser tests","### Description Just documenting the steps I took to run the browser tests.  ### Types of changes - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed. CI is red right now, but this change doesn't make it better or worse.","closed","","ulfjack","2020-06-05T10:09:48Z","2020-09-15T11:27:47Z"
"","8546","Json speed improvement","### Description JsonOutput and Input created a lot of object instances while writing / parsing Json data. - JsonOutput created one String per String char to write - Input created one CharBuffer (including a backing array) per char to read  Input / InputOutput now takes a Reader instead of a Readable, due to this change it is a breaking change in my mind.  ### Motivation and Context This improves the performance of processing big json data, e.g. 4k screenshots and reduces the need for GC. - improved avg. encoding time from 67 ms to 31 ms for 3 MiB String output - improved avg. decoding time from 118 ms to 54 ms for 3 MiB raw Json input  These numbers are determined using my local system with a loop of 100 iterations (AMD Ryzen 3 PRO 3200GE, 16 GB RAM, Fedora 32, OpenJDK 11)  ### Types of changes - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [x] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","joerg1985","2020-07-18T11:00:49Z","2020-12-16T09:31:04Z"
"","8410","[ruby] Fix Chrome::Options.process_browser_options","### Description It errors when an Options instace with profile is passed to Driver.new in 'capabilities' key:  ```rb # cd /path/to/rb $ bundle exec rails c profile   = Selenium::WebDriver::Chrome::Profile.new options = Selenium::WebDriver::Chrome::Options.new(profile: profile) driver    = Selenium::WebDriver.for :chrome, capabilities: [options]  Traceback (most recent call last):         1: from (irb):6 NoMethodError (undefined method `split' for :directory:Symbol) ```  ### Motivation and Context passing an Array of options to Driver.new in `:capabilities` key is still a valid option when initializing a driver, so I suppose fixing this is important.  ### Types of changes - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","masakazutakewaka","2020-06-10T14:23:28Z","2020-06-11T22:26:11Z"
"","8385","[java] Flesh out Reactor HTTP client usage in server","### Description Flesh out the Reactor HTTP client usage as we move over to that instead of okhttp","closed","","AutomatedTester","2020-06-03T10:13:04Z","2020-07-16T20:47:23Z"
"","8566","[JS] Modifying Doc and variable name declarations in atoms: relative.js","### Description Fixing comments   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","harsha509","2020-07-23T15:57:29Z","2020-07-28T10:42:41Z"
"","8635","Fix SendKeys regressions related to multiple file uploading.","### Description Fixes the following regressions caused by 35c4e07b4699f65884c5427cfa699579de5d6848: * For text input elements (e.g. input type=""text"", textarea), text was being altered with an extra \n appended at the end. * The extra \n was also affecting file uploads, making the browser think there was an extra file with an empty path and failing.  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","jdpurcell","2020-08-19T19:37:17Z","2020-09-06T21:24:32Z"
"","8840","[py] Fix send_keys with variable argument by removing variable expansion.","### Description Fixes Issue [#8839](https://github.com/SeleniumHQ/selenium/issues/8839)  ### Motivation and Context Python `send_keys` method is broken for variable arguments. See Issue [#8839](https://github.com/SeleniumHQ/selenium/issues/8839).  ### Types of changes - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","sufyanAbbasi","2020-11-05T07:43:20Z","2020-11-10T12:46:57Z"
"","8189","[JS]Modify: Fixes adding command-line switches for ieOptions","### Description Fixes adding command-line switches using `options.addArguments();`  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","harsha509","2020-04-09T20:52:02Z","2020-04-14T08:27:29Z"
"","7946","Fix typos in summary of down keys","### Description Fix typos in Summary of Down arrows keys for .NET bindings  ### Motivation and Context Fixes typos  ### Types of changes - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","scottsauber","2020-01-20T03:23:13Z","2020-01-21T12:18:37Z"
"","8514","Fix the link to Open JDK in README","### Description Fix the link in README to point actual Open JDK website  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","valfirst","2020-07-13T14:02:20Z","2020-07-13T21:28:35Z"
"","7869","Fix VirtualAuthenticatorOptions enums not being public.","### Description Fix `VirtualAuthenticatorOptions` enums not being public.  ### Motivation and Context Developers should be able to set `VirtualAuthenticatorOptions.Protocol` and `VirtualAuthenticatorOptions.Transport`.  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.   Fixes #7868","closed","","nsatragno","2019-12-17T19:28:44Z","2020-01-07T16:47:39Z"
"","7949","[grid] node registration","### Description First whack at node registration. This only handles the initial registration not the ongoing communication which will be a separate work it.  There are no tests for this as it hooks off of the event bus answering method, and I have no idea how to do that. This PR is so we can have the conversation about exactly how to do that.","closed","","adamgoucher","2020-01-21T04:18:16Z","2020-02-03T15:07:55Z"
"","8505","[JS] Code cleanup and Removing unused imports","### Description Code cleanup  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","harsha509","2020-07-11T18:41:36Z","2020-07-11T20:52:07Z"
"","8281","Cleanup the .bazelrc","### Description Change most test option to also apply to the build command.  ### Motivation and Context All build options are inherited to the test command and all test-specific options are also available on the build command. By using ""build"" instead of ""test"", ensure that the configuration options are the same so that Bazel can cache the analysis (and execution) phases (otherwise it can't and switching back and forth can be very slow).  This should make incremental builds faster when switching between build and test.  ### Types of changes - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","ulfjack","2020-05-07T19:50:16Z","2020-05-07T23:38:09Z"
"","8633","[JS] Upgrade rules_nodejs to 2.0.3","### Description build: Upgrade rules_nodejs to 2.0.3  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","harsha509","2020-08-19T05:30:40Z","2020-08-19T13:43:14Z"
"","8421","[java] WebDriverWait Overloading FluentWait#until to take a Duration param","### Description Besides taking a fixed timeout from the constructor, this change allows the user to choose a custom timeout when calling the method `until`, overriding the timeout set initially in the constructor.  This makes `WebDriverWait` more memory efficient, as users will be able to instantiate only once, and choose a potentially different timeout at every call to `wait#until`.  Previously one needed to create one instance of `WebDriverWait` **for each** different timeout value, thus potentially having tens or more, depending on the usage, of `WebDriverWait` instances around.  ### Motivation and Context This is especially useful when using dependency injection. Previously, if you were injecting a `WebDriverWait` around in your classes, you were stuck with the timeout you had set initially. If you needed to wait for a different number of seconds you had to create a new WebDriverWait instance on the fly, by hand.  This change makes it much more simple. You can define once and for all a WebDriverWait with a default timeout, and have it injected everywhere. But the client code will still be able to choose the timeout at call time.  Here is an example for PicoContainer.  ```java     private static FactoryInjector webDriverWaitInjector() {         return new FactoryInjector() {             @Override             public WebDriverWait getComponentInstance(PicoContainer container, Type into) {                 return new WebDriverWait(container.getComponent(WebDriver.class), 30); // here we are setting a default timeout of 30s             }         };     } ```  Here is an example of code *using* the injected WebDriverWait instance:  ```java public class MyPageObject {   private final WebDriverWait wait;   public PageObject(WebDriverWait wait) {     this.wait = wait;   }    public void doSomething() {     wait.until(visibilityOfElement(By.id(""email"")); // uses the default timeout     [..]   }    public void doSomethingSlow() {     wait.until(visibilityOfElement(By.id(""email""), 60); // customises the timeout for a slow operation     [..]   } } ```  Please note. The method I'm overloading comes from the interface `Wait`, which here I'm not touching.   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","alb-i986","2020-06-14T19:42:18Z","2020-06-23T13:10:15Z"
"","8373","[JS] Fixes path to bazel generated files","### Description bazel-genfiles are not available in path looks like it should be `bazel-bin`   ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","harsha509","2020-05-31T08:57:54Z","2020-08-20T15:43:45Z"
"","8437","fix(nodejs): include auth in same domain redirects","### Description Authorization information is not being sent in same domain redirects.  ### Motivation and Context TLDR; we need to send redirects in session creation with the authorization sent in the original post command.  We have long running commands (specially session creation) that may last for several minutes in our hub. Our hub is in AWS infrastructure and also under a bunch of reverse proxies and we don't (can't) control request timeouts in all those pieces (i.e. NLB has a hardcoded 350s timeout for requests).  Our hub is behind also a basic auth security proxy, so we need to provider that information in all requests.  We have implemented a redirect logic (sending 303 redirects is commands are not resolved in for example 120s) so that we can extend the command duration.  Additionally, to detect if the client dropped the connection and clear the browser ""almost"" immediatelly after it's provisioned, we always send a redirect before giving the session (so that if he doesn't come back for the session values we know that he has dropped the waitting)  ### Types of changes - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [x] All new and existing tests passed.","closed","","alfonso-presa","2020-06-18T16:48:01Z","2020-07-30T15:47:41Z"
"","8630","Improve the error messages output by some ExpectedConditions.","### Description attributeContains was incorrectly reporting the current value as ""null"". This change fixes that. textToBePresentInElement was not reporting the actual element text. This change adds the actual element text in the failure message.  ### Motivation and Context I was writing selenium tests and having trouble debugging them because of the poor output of the existing ExpectedConditions logic. This change provides more useful output for failing tests.  ### Types of changes - [X] Bug fix (non-breaking change which fixes an issue) Fixes bug with attributeContains condition error message. - [X] New feature (non-breaking change which adds functionality) Adds more useful error message for testToBePresentInElement condition. - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","eschoeffler","2020-08-14T00:51:13Z","2020-12-22T23:14:50Z"
"","8323","Set zero KeepAliveInterval in DevToolsSession constructor","### Description After some time inactivity (5-30 sec) m_sessionSocket (DevToolsSession.cs ) throw WebSocketException ""The remote party closed the WebSocket connection without completing the close handshake"" and ReceiveMessage listener catching this exception and silently terminating  ### Motivation and Context   ### Types of changes  - [X ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","C-dotnet,","sergius-msv","2020-05-19T13:49:53Z","2020-11-28T16:15:00Z"
"","7905","Add new locator type for Shadow Root elements","### Description Adds support to locate elements that have Shadow Roots.   Adds new annotation `@FindShadowBy`, which can be used to locate and elements that are inside a Shadow Root.   Adds a helper class `ShadowElementFinder`, which can be used to verify if an element has a Shadow Root attached to it.  ### Motivation and Context Right now Selenium doesn't support PageObject annotations in elements that have Shadow Root.   #### The current approach: ```java @FindBy(css = ""foo"") WebElement fieldWithShadowRoot;  public WebElement getSomeShadow() {   JavascriptExecutor js = (JavascriptExecutor) driver;   WebElement shadowElement = (WebElement) js.executeScript(""arguments[0].shadowRoot"", fieldWithShadowRoot);   WebElement elementInsideShadowRoot = shadowElement.findElement(By.css(""innerShadowSelector""));   return elementInsideShadowRoot; } ```  #### New implementation allows: ```java @FindShadowBy({@FindBy(css = ""foo""),  @FindBy(css = ""innerShadowSelector"")}) WebElement element; ``` As in `@FindBy`, it also allows to retrieve lists: ```java @FindShadowBy({@FindBy(css = ""foo""),  @FindBy(css = ""innerShadowSelector"")}) List element; ``` If nested Shadow Roots are present, the same will work, the only thing that needs to be provided is the selector for each Shadow Root in the correct order that they are nested: ```html    #shadow-root            #shadow-root                         ``` ```java @FindShadowBy({@FindBy(css = ""#shadow1""),       @FindBy(css = ""#shadow2""),      @FindBy(css= ""#insideShadow2"")}) WebElement element; ```    #### Notes The elements returned by the last `@FindBy` won't have their shadow roots extracted automatically, this is to allow the user to use methods such as `getAttribute`, which would throw an error if inside the shadow root. If the user wants to extract it, `ShadowElementFinder` can be used to do so.   This also means that providing just one locator to`@FindShadowBy` will yield the same result as using `@FindBy`, which is not a concern.  Once inside a Shadow Root, it's not possible to use xpath selector.   I didn't add any validations to `FindShadowBy` as this could limit the usage of the chain selectors, and Selenium already throws an exception if the user tries to use an invalid selector type.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","C-java,","Jiwari","2019-12-31T21:22:21Z","2021-05-09T19:12:13Z"
"","7904","Add new locator type for Shadow Root elements","### Description Adds support to locate elements that have Shadow Roots.   Adds new annotation `@FindShadowBy`, which can be used to locate and elements that are inside a Shadow Root.   Adds a helper class `ShadowElementFinder`, which can be used to verify if an element has a Shadow Root attached to it.  ### Motivation and Context Right now Selenium doesn't support PageObject annotations in elements that have Shadow Root.   #### The current approach: ```java @FindBy(css = ""foo"") WebElement fieldWithShadowRoot;  public WebElement getSomeShadow() {   JavascriptExecutor js = (JavascriptExecutor) driver;   WebElement shadowElement = (WebElement) js.executeScript(""arguments[0].shadowRoot"", fieldWithShadowRoot);   WebElement elementInsideShadowRoot = shadowElement.findElement(By.css(""innerShadowSelector""));   return elementInsideShadowRoot; } ```  #### New implementation allows: ```java @FindShadowBy({@FindBy(css = ""foo""),  @FindBy(css = ""innerShadowSelector"")}) WebElement element; ``` As in `@FindBy`, it also allows to retrieve lists: ```java @FindShadowBy({@FindBy(css = ""foo""),  @FindBy(css = ""innerShadowSelector"")}) List element; ``` If nested Shadow Roots are present, the same will work, the only thing that needs to be provided is the selector for each Shadow Root in the correct order that they are nested: ```html    #shadow-root            #shadow-root                         ``` ```java @FindShadowBy({@FindBy(css = ""#shadow1""),       @FindBy(css = ""#shadow2""),      @FindBy(css= ""#insideShadow2"")}) WebElement element; ```    #### Notes The elements returned by the last `@FindBy` won't have their shadow roots extracted automatically, this is to allow the user to use methods such as `getAttribute`, which would throw an error if inside the shadow root. If the user wants to extract it, `ShadowElementFinder` can be used to do so.   This also means that providing just one locator to`@FindShadowBy` will yield the same result as using `@FindBy`, which is not a concern.  Once inside a Shadow Root, it's not possible to use xpath selector.   I didn't add any validations to `FindShadowBy` as this could limit the usage of the chain selectors, and Selenium already throws an exception if the user tries to use an invalid selector type.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","Jiwari","2019-12-31T21:16:44Z","2019-12-31T22:48:41Z"
"","8533","[rb] add support for element screenshots","### Description Adds support for taking screenshots of individual elements via the  `session/:session_id/element/:id/screenshot` endpoint  ### Motivation and Context `Selenium::WebDriver::Remote::COMMANDS` already includes `:take_element_screenshot` but the `Element` class isn't wired up to use it. Python and Java Selenium bindings have this, and it would be nice to have it available in the Ruby bindings  ### Types of changes - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","C-rb,","johndouthat","2020-07-15T16:04:59Z","2020-10-28T14:37:56Z"
"","7897","[js] Add windowTypes option support for ChromiumDriver","### Description Adds support for setting windowTypes option for ChromeDriver, which allows getting an extra set of window type handles like webview handles.  ### Motivation and Context In order to be able to interact with a webview, one needs to get a handle for the webview (which is a window handle). ChromeDriver won't return handles for webviews unless it is explicitly specified via **windowTypes** option see: https://chromedriver.chromium.org/capabilities.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","C-nodejs,","txava","2019-12-29T19:22:56Z","2021-05-08T14:44:29Z"
"","8118","Add: Adding sameSite cookie attribute for rb bindings","### Description Adding sameSite cookie attribute for rb bindings and added tests  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","C-rb,","harsha509","2020-03-18T10:00:41Z","2020-03-18T13:03:30Z"
"","8160","JS[Add]: Adding ie options in JS bindings","### Description Adding IE options `ie.edgechromium` and `ie.edgepath`  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","harsha509","2020-04-03T19:00:15Z","2020-04-06T09:47:13Z"
"","8178","[JS]Add: Adding elementScrollBehavior capability to ieOptions","### Description Adding `elementScrollbehavior` capability. Method: setScrollBehavior()   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","harsha509","2020-04-08T08:47:27Z","2020-04-08T12:21:32Z"
"","8152","[JS] Fixing ieOptions in JS bindings","### Description Added Vendor command prefix (se:ieOptions) in `ie.js`.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","harsha509","2020-04-01T17:02:56Z","2020-04-02T15:13:15Z"
"","8555","[JS] Minor doc changes and change-log update","### Description Added JS comments for CDP methods Updated change-log  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","harsha509","2020-07-20T16:50:55Z","2020-07-21T10:07:59Z"
"","8282","Fix grid/config:SmallTests icw. --explicit_java_test_deps","### Description Add the missing JUnit dependency to the Java test target.  ### Motivation and Context It is required to build Selenium with `--explicit_java_test_deps`.  ### Types of changes - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","ulfjack","2020-05-07T21:35:43Z","2020-05-07T23:39:36Z"
"","7951","add new feature: sendKeysQuickly","### Description add new feature: sendKeysQuickly   ### Motivation and Context resolve this issue: https://github.com/SeleniumHQ/selenium/issues/7937  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","sgrillon14","2020-01-21T14:17:52Z","2020-02-14T22:55:53Z"
"","8203","Add support for MicrosoftEdge for hub","### Description Add item to the background  ### Motivation and Context Make this UI more usable  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","MoLow","2020-04-16T11:57:06Z","2020-04-26T17:57:36Z"
"","7871","Add `SameSite` attribute to `Cookie`","### Description Add `SameSite` attribute to `Cookie`  ### Motivation and Context Cookie object in Selenium Java doesn't support setting `SameSite` attribute, described in the spce: https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-03#section-5.3.7  ChromeDriver already supports it. So improving Selenium Java API to support it as well.  Partially fix #7798, i.e. the Java part. Other language bindings need to be checked to see if a fix is needed or not.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. I believe all the doc needs to be updated is the javadoc for the new field. Please let me know if there is any other document I need to update. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","gjyalpha","2019-12-18T06:07:09Z","2020-05-01T21:50:59Z"
"","8239","case insensitive check for the content-length header","### Description According to RFC 2616 and 7230, headers names are case insensitive.  When creating a new session, the webdriver server is checking the request for a case sensitive Content-Type header. This causes the body to be empty on session creation and will result in the IEDriverServer complaining about missing capabilities.  This change will search for the Content-Type in a case insensitive manner before capturing the value of the header.  Fixes #7986  ### Motivation and Context Many modern JavaScript HTTP libraries set their headers to lower case before doing a request. Because IEDriverServer is looking for the `Content-Type` in a case sensitive manner, this prevents those tools from testing on IE.  ### Types of changes - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","C-cpp,","reidj32","2020-04-24T20:50:36Z","2020-08-13T15:43:30Z"
"","8713","Add withExecutor to FluentWait to support concurrent drivers in custom thread pools","### Description `FluentWait` blocked and behaved unpredictably when called concurrently from multiple web driver threads executing in a custom thread pool. This commit adds the ability to pass the Executor service that manages the thread pool to fluent wait.  #### Sample usage ```java    // pass custom executor to fluent wait   new FluentWait(driver)       .withTimeout(Duration.ofSeconds(10))       .withExecutor(myCustomExecutor)       .. ```  ### Motivation and Context Many tools and frameworks built on Selenium offer options for running multiple web driver instances in parallel threads. Fluent wait can block and behave unpredictabily  under some conditions where concurrent calls are made by threads in custom `Executor`s. In such instances, it becomes necessary to use the custom Executor with `FluentWait`'s underlying `CompletableFuture`.  ### Types of changes - [x] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","bjuric","2020-09-18T04:54:38Z","2021-01-03T19:31:53Z"
"","8274","[JS] renaming `addArguments` to `addBrowserCommandSwitches` according to functionality","### Description 1. `addBrowserCommandSwitches` will be more precise naming to add command line switches.  2. Added test to check capability `silent`. In JS bindings, IEDriver command line arguments (--silent, --log-level, ---log-file,--host, --extract-path) should be passed via capability.set  ### Motivation and Context `addArguments` is confusing for adding browserCommandLineSwitches  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","harsha509","2020-05-05T19:55:21Z","2020-05-06T13:33:23Z"
"","8371","[javascript] Fix the syntax error preventing a test suite from running","### Description  When I run the JavaScript tests from the HEAD of the master branch, a syntax error is reported saying the `describe` block does not support an `async function`. An example follows the PR template.  ### Motivation and Context  As a developer who would like to contribute to the JavaScript library, I would like the JavaScript build and tests to pass so I can make changes with confidence  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist  - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. **No** - [ ] I have updated the documentation accordingly. **Not applicable** - [ ] I have added tests to cover my changes. **Not applicable** - [ ] All new and existing tests passed.  **No. The build and tests fail.**     - Last failed JavaScript build - https://travis-ci.com/github/SeleniumHQ/selenium/jobs/341667142     - `bazel test //javascript/node/selenium-webdriver:tests` reports failures  ### Proposed Changes  #### Actual Behaviour  ``` Suite error: [safari] finding elements   Message:     Error: describe expects a function argument; received [object AsyncFunction]   Stack:     Error: describe expects a function argument; received [object AsyncFunction]         at          at Suite. (javascript/node/selenium-webdriver/test/element_finding_test.js:414:5)         at          at javascript/node/selenium-webdriver/test/element_finding_test.js:41:3         at javascript/node/selenium-webdriver/lib/test/index.js:49:5         at Suite. (javascript/node/selenium-webdriver/testing/index.js:410:9)         at          at Object.suite (javascript/node/selenium-webdriver/testing/index.js:392:7)         at suite (javascript/node/selenium-webdriver/lib/test/index.js:39:11)         at Object. (javascript/node/selenium-webdriver/test/element_finding_test.js:28:1)         at Module._compile (internal/modules/cjs/loader.js:956:30)         at Object.Module._extensions..js (internal/modules/cjs/loader.js:973:10)         at Module.load (internal/modules/cjs/loader.js:812:32)         at Function.Module._load (internal/modules/cjs/loader.js:724:14)         at Module.require (internal/modules/cjs/loader.js:849:19)         at require (internal/modules/cjs/helpers.js:74:18)         at node_modules/jasmine/lib/jasmine.js:89:5         at          at Jasmine.loadSpecs (node_modules/jasmine/lib/jasmine.js:88:18)         at Jasmine.execute (node_modules/jasmine/lib/jasmine.js:257:8)         at main (node_modules/@bazel/jasmine/src/jasmine_runner.js:188:11)         at Object. (node_modules/@bazel/jasmine/src/jasmine_runner.js:210:22)         at Module._compile (internal/modules/cjs/loader.js:956:30)         at Object.Module._extensions..js (internal/modules/cjs/loader.js:973:10)         at Module.load (internal/modules/cjs/loader.js:812:32)         at Function.Module._load (internal/modules/cjs/loader.js:724:14)         at Object. (javascript/node/selenium-webdriver/tests_loader.js:32:24)         at Module._compile (internal/modules/cjs/loader.js:956:30)         at Object.Module._extensions..js (internal/modules/cjs/loader.js:973:10)         at Module.load (internal/modules/cjs/loader.js:812:32)         at Function.Module._load (internal/modules/cjs/loader.js:724:14)         at Function.Module.runMain (internal/modules/cjs/loader.js:1025:10)         at internal/main/run_main_module.js:17:11  Suite error: [chrome] finding elements   Message:     Error: describe expects a function argument; received [object AsyncFunction]   Stack:     Error: describe expects a function argument; received [object AsyncFunction]         at          at Suite. (javascript/node/selenium-webdriver/test/element_finding_test.js:414:5)         at          at javascript/node/selenium-webdriver/test/element_finding_test.js:41:3         at javascript/node/selenium-webdriver/lib/test/index.js:49:5         at Suite. (javascript/node/selenium-webdriver/testing/index.js:410:9)         at          at Object.suite (javascript/node/selenium-webdriver/testing/index.js:392:7)         at suite (javascript/node/selenium-webdriver/lib/test/index.js:39:11)         at Object. (javascript/node/selenium-webdriver/test/element_finding_test.js:28:1)         at Module._compile (internal/modules/cjs/loader.js:956:30)         at Object.Module._extensions..js (internal/modules/cjs/loader.js:973:10)         at Module.load (internal/modules/cjs/loader.js:812:32)         at Function.Module._load (internal/modules/cjs/loader.js:724:14)         at Module.require (internal/modules/cjs/loader.js:849:19)         at require (internal/modules/cjs/helpers.js:74:18)         at node_modules/jasmine/lib/jasmine.js:89:5         at          at Jasmine.loadSpecs (node_modules/jasmine/lib/jasmine.js:88:18)         at Jasmine.execute (node_modules/jasmine/lib/jasmine.js:257:8)         at main (node_modules/@bazel/jasmine/src/jasmine_runner.js:188:11)         at Object. (node_modules/@bazel/jasmine/src/jasmine_runner.js:210:22)         at Module._compile (internal/modules/cjs/loader.js:956:30)         at Object.Module._extensions..js (internal/modules/cjs/loader.js:973:10)         at Module.load (internal/modules/cjs/loader.js:812:32)         at Function.Module._load (internal/modules/cjs/loader.js:724:14)         at Object. (javascript/node/selenium-webdriver/tests_loader.js:32:24)         at Module._compile (internal/modules/cjs/loader.js:956:30)         at Object.Module._extensions..js (internal/modules/cjs/loader.js:973:10)         at Module.load (internal/modules/cjs/loader.js:812:32)         at Function.Module._load (internal/modules/cjs/loader.js:724:14)         at Function.Module.runMain (internal/modules/cjs/loader.js:1025:10)         at internal/main/run_main_module.js:17:11  Suite error: [firefox] finding elements   Message:     Error: describe expects a function argument; received [object AsyncFunction]   Stack:     Error: describe expects a function argument; received [object AsyncFunction]         at          at Suite. (javascript/node/selenium-webdriver/test/element_finding_test.js:414:5)         at          at javascript/node/selenium-webdriver/test/element_finding_test.js:41:3         at javascript/node/selenium-webdriver/lib/test/index.js:49:5         at Suite. (javascript/node/selenium-webdriver/testing/index.js:410:9)         at          at Object.suite (javascript/node/selenium-webdriver/testing/index.js:392:7)         at suite (javascript/node/selenium-webdriver/lib/test/index.js:39:11)         at Object. (javascript/node/selenium-webdriver/test/element_finding_test.js:28:1)         at Module._compile (internal/modules/cjs/loader.js:956:30)         at Object.Module._extensions..js (internal/modules/cjs/loader.js:973:10)         at Module.load (internal/modules/cjs/loader.js:812:32)         at Function.Module._load (internal/modules/cjs/loader.js:724:14)         at Module.require (internal/modules/cjs/loader.js:849:19)         at require (internal/modules/cjs/helpers.js:74:18)         at node_modules/jasmine/lib/jasmine.js:89:5         at          at Jasmine.loadSpecs (node_modules/jasmine/lib/jasmine.js:88:18)         at Jasmine.execute (node_modules/jasmine/lib/jasmine.js:257:8)         at main (node_modules/@bazel/jasmine/src/jasmine_runner.js:188:11)         at Object. (node_modules/@bazel/jasmine/src/jasmine_runner.js:210:22)         at Module._compile (internal/modules/cjs/loader.js:956:30)         at Object.Module._extensions..js (internal/modules/cjs/loader.js:973:10)         at Module.load (internal/modules/cjs/loader.js:812:32)         at Function.Module._load (internal/modules/cjs/loader.js:724:14)         at Object. (javascript/node/selenium-webdriver/tests_loader.js:32:24)         at Module._compile (internal/modules/cjs/loader.js:956:30)         at Object.Module._extensions..js (internal/modules/cjs/loader.js:973:10)         at Module.load (internal/modules/cjs/loader.js:812:32)         at Function.Module._load (internal/modules/cjs/loader.js:724:14)         at Function.Module.runMain (internal/modules/cjs/loader.js:1025:10)         at internal/main/run_main_module.js:17:11  ...  927 specs, 16 failures, 34 pending specs Finished in 203.679 seconds ```  #### Proposed Behaviour  Four fewer failures. üòâ   ``` 936 specs, 12 failures, 35 pending specs Finished in 228.628 seconds ```","closed","","seanpoulter","2020-05-31T05:28:55Z","2020-06-14T11:53:22Z"
"","8372","[javascript] Add missing dependencies to fix tests","### Description  When I run the JavaScript tests from the HEAD of the master branch, a `ReferenceError` is reported saying that `error` is not defined. The usage is: ```js       throw new error.InvalidArgumentError('...'); ```   An example follows the PR template.  ### Motivation and Context  As a developer who would like to contribute to the JavaScript library, I would like the JavaScript build and tests to pass so I can make changes with confidence  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist  - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. **No** - [ ] I have updated the documentation accordingly. **Not applicable** - [ ] I have added tests to cover my changes. **Not applicable** - [ ] All new and existing tests passed.  **No. The build and tests fail.**     - Last failed JavaScript build - https://travis-ci.com/github/SeleniumHQ/selenium/jobs/341667142     - `bazel test //javascript/node/selenium-webdriver:tests` reports failures  ### Demonstration  #### Before PR  When I run the tests using  ``` bazel test //javascript/node/selenium-webdriver:tests ```  the output includes  ``` 5) [chrome] setDownloadPath throws if path is not a directory   Message:     ReferenceError: error is not defined   Stack:         at          at Driver.setDownloadPath (javascript/node/selenium-webdriver/chrome.js:468:7)         at javascript/node/selenium-webdriver/test/chrome/devtools_test.js:88:53         at assertInvalidArgumentError (javascript/node/selenium-webdriver/test/chrome/devtools_test.js:98:17)         at UserContext. (javascript/node/selenium-webdriver/test/chrome/devtools_test.js:88:13)         at          at processImmediate (internal/timers.js:439:21)  ...  927 specs, 10 failures, 34 pending specs Finished in 267.001 seconds ```  #### Modified Behaviour  There are fewer failures. Yay.  ``` 927 specs, 8 failures, 34 pending specs Finished in 188.885 seconds ```","closed","","seanpoulter","2020-05-31T07:33:52Z","2020-05-31T21:50:31Z"
"","8362","[docs] Move debug-server task to bazel","### Description  Update the README to use `bazel` to start the `debug-server`. This is expected after 55877655cab2c106df228405643dd14a1fec7b5f.  #### Actual Behaviour    #### Proposed Changes     ### Motivation and Context  As someone new contributor, I want to contribute to the project without running into build errors.  ### Types of changes - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. **Not applicable** - [x] All new and existing tests passed.","closed","","seanpoulter","2020-05-29T12:51:34Z","2020-05-31T06:08:24Z"
"","7956","Make ChromiumOptions base class vendor-neutral","### Description  This change removes usages of the vendor-specific terms ""goog"" and ""chrome"" from the ChromiumOptions base class. It makes the ChromiumOptions class abstract so that derived classes are required to fill these names in appropriately.  ### Motivation and Context  Needed to support vendor-prefixed capabilities for EdgeDriver, which uses ""ms"" as the prefix instead of ""goog"". Previously, ChromiumDriver.CreateDevToolsSession would use the ""goog""-branded capabilities by default, which meant that EdgeDriver.CreateDevToolsSession() would not work.  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","bwalderman","2020-01-22T17:05:53Z","2020-03-04T18:41:36Z"
"","8399","Python remote webdriver: make default command executor match docs (append /wd/hub)","### Description  The command_executor argument is used to define a URL of a remote server or a custom remote connection. Most commonly, this is provided by the caller, but it comes also with a reasonable default value according to the docs: http://127.0.0.1:4444/wd/hub. The default value in the code however does in fact _not_ include the `/wd/hub` suffix, which is fixed by this commit.  ### Motivation and Context  I am trying to fix a selenium test issue on Travis CI with Sauce Labs and started reading the remote web driver source code to better understand what's going on. I stumbled over the inconsistency between code and documentation and wanted to address this quickly.   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [X] Breaking change (fix or feature that would cause existing functionality to change)  While unlikely to break existing code, it does change a default parameter, which I would count as breaking change.  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.   Let me know if this change requires a test (e.g. comparing a default initialized remote driver executor with the default). If changing the default value is the wrong approach, the docs should be changed.","closed","","tomka","2020-06-08T09:30:52Z","2020-06-08T10:23:00Z"
"","8196","[atoms] Fix getText atom to capitalize Cyrillic text","### Description  The change to getText atom by commit c0f3e3c caused a regression in ChromeDriver, and Cyrillic words are no longer capitalized properly (see https://crbug.com/chromedriver/3421). The problem is \b doesn't recognize Cyrillic word boundaries. This is fixed by combining logic before and after commit c0f3e3c.  ### Motivation and Context  This change fixes a regression reported by ChromeDriver user, after commit c0f3e3c was incorporated into ChromeDriver version 81. With `–¥–µ–º–æ`, calling getText atom on this element used to return expected '–î–µ–º–æ', but after c0f3e3c it returns '–¥–µ–º–æ' instead.  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","JohnChen0","2020-04-12T20:09:57Z","2020-04-14T15:23:15Z"
"","8493","Add setPermission to JavaScript bindings","### Description  Same as https://github.com/SeleniumHQ/selenium/commit/2260d4183accd9d888333a8b645260bdb91ddcc0, but for JavaScript.  I'm not sure if I should update the documentation for this somewhere. Please point me out if need to.  ### Motivation and Context   See linked commit.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","devoto13","2020-07-09T11:57:00Z","2020-07-10T05:34:31Z"
"","8294","[PY]: Fixes an issue where IE server port is set '0' by default","### Description  Observed an issue where ie server port is set to zero. This issue is observed in alpha-5 bindings  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","harsha509","2020-05-11T13:44:52Z","2020-05-11T14:13:30Z"
"","8631","[JS] Minor typo fixes","### Description  Minor typo fixes done while browsing through code base   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","harsha509","2020-08-15T16:04:51Z","2020-08-15T18:33:36Z"
"","8640","[PY] Added the ability to run Brython code","### Description  For the uninitiated [Brython] is a way to use Python code on the front-end instead of Javascript.  This pull-request adds a `execute_brython()` method which allows you to execute [Brython] code much in the same way you would use the `execute_script()` method to execute JavaScript code.  There is also now a `load_brython()` method which is used to load the necessary JavaScript files to run [Brython] code and must be called before using the `execute_brython()` method.  ### Examples Here are a couple of examples of using the `load_brython()` and `execute_brython()` methods. #### Example 1 ```python >>> from selenium import webdriver >>> driver = webdriver.Chrome() >>> # You must use `load_brython()` before using `execute_brython()` >>> driver.load_brython() >>> driver.execute_script(""console.log('Hello World');"") >>> # Equivalent using `execute_brython()` >>> driver.execute_brython(""print('Hello World')"") ```  #### Example 2 ```python >>> from selenium import webdriver >>> driver = webdriver.Chrome() >>> driver.load_brython() >>> # turtle_script is defined below >>> driver.execute_brython(turtle_script) ``` This is `turtle_script` ‚¨á ```python # Adapted from https://brython.info/gallery/turtle.html from browser import document, html import turtle if 'turtle-div' not in document:     document <= html.DIV(Id='turtle-div', style={'float':'left', 'border': '1px solid green'}) turtle.set_defaults(     turtle_canvas_wrapper = document['turtle-div'] ) t = turtle.Turtle()  t.width(5)  for c in ['red', '#00ff00', '#fa0', 'rgb(0,0,200)']:     t.color(c)     t.forward(100)     t.left(90)  # dot() and write() do not require the pen to be down t.penup() t.goto(-30, -100) t.dot(40, 'rgba(255, 0, 0, 0.5') t.goto(30, -100) t.dot(40, 'rgba(0, 255, 0, 0.5') t.goto(0, -70) t.dot(40, 'rgba(0, 0, 255, 0.5')  t.goto(0, 125) t.color('purple') t.write(""I love Brython!"", font=(""Arial"", 20, ""normal""))   turtle.done() ``` Result of **Example 2** ‚¨á  ![data_, - Google Chrome 2020-08-22 16-44-07_Trim](https://user-images.githubusercontent.com/34612646/90967675-a3f29480-e497-11ea-875e-b12475fc289b.gif)    ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [X] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [ ] All new and existing tests passed.  [Brython]: https://github.com/brython-dev/brython","closed","Stale,","Ahsoka","2020-08-22T19:19:22Z","2022-02-13T20:58:59Z"
"","8553","[sessionmap] Fix JDBC ""Driver not found"" exception.","### Description  Fixed ""Driver Not Found"" exception in JDBCBackedSessionMap before adding tracing for calls to the driver.  ### Motivation and Context JDBC driver was not picked up when Sessions server was started. This PR fixes the issue and adds additional errors.  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [X] My change requires a change to the documentation. - [X] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2020-07-20T08:24:35Z","2020-07-21T07:52:20Z"
"","8835","Fix OpenTelemetry wrapper for the version 0.9.1 upgrade.","### Description  Fix OpenTelemetry wrapper to accomodate 0.9.1 version bump.   ### Motivation and Context  Version bump for OpenTelemetry to 0.9.1 had many breaking changes as listed in : https://github.com/open-telemetry/opentelemetry-java/blob/master/CHANGELOG.md  - The changes made update OpenTelemetry wrapper APIs for trace id and span id. -  Status is no longer supported. Hence, updated the wrapper to use StatusCanonicalCode.  - Updated LoggingOptions to use Attributes for events and AttributesConsumer for correct json mapping for events and attributes. - Updating LoggingOptions to use OpenTelemetrySdk.getTracerManagement() to while getting a provider, since the current version returns an interface instead of provider implementation.   ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [X] My change requires a change to the documentation. - [X] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2020-11-03T16:12:46Z","2020-11-04T09:03:09Z"
"","8280","[JS]Modify: Deprecating addArguments in favor of addBrowserCommandSwitches","### Description  Deprecating addArguments in favor of addBrowserCommandSwitches for better naming convention  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","harsha509","2020-05-06T17:51:09Z","2020-05-11T08:45:18Z"
"","8838","Expose server config, session queue and node as MBeans for JMX monitoring.","### Description  Changes are related to #7761.  ### Motivation and Context  Old Grid exposed MBeans for JMX monitoring. The changes include exposing MBeans and attributes for monitoring the new Grid. This includes: 1. Exposing BaseServerConfig and related attributes. 2. Exposing Node and related attributes. 3. NewSessionQueue and related attributes.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2020-11-04T10:09:46Z","2020-12-22T23:05:03Z"
"","8386","Update bazel toolchains to 3.2.0 to support current Bazel release","### Description  Bazel 3.2 has been released so a bump to the toolchains is needed to allow the toolchain to work with Bazel 3.2. The SHA256 has come from the toolchains GitHub page at https://github.com/bazelbuild/bazel-toolchains/releases/tag/3.2.0  ### Motivation and Context  Building with the latest Bazel release fails due to bazel-toolchains not recognizing the 3.2.0 version code from Bazel.  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","alsutton","2020-06-03T10:55:35Z","2020-06-04T08:00:48Z"
"","8815","Add Http/2 support in Netty Server","### Description  Add support for Http/2 in the Netty server.  It is related to #8719.  ### Motivation and Context  Current Netty Server supports Http/1.1 for secure communication. The changes add support for Http/2  for a client requesting the use of Http/2.  This will allow clients to leverage features of Http/2 where a single connection is used along with streams for communication. Netty supports stream multiplexing but leveraging child channels i.e. every new stream has a dedicated child channel.   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","Stale,","pujagani","2020-10-23T07:48:04Z","2022-02-08T10:20:10Z"
"","8818","[logging] Add an option to pass encoding for log configuration.","### Description  Add option to pass log-encoding else use default system log encoding.  ### Motivation and Context  Changes are related to #8812.  With the changes above, log encoding can be configured as needed. In the case of unsupported encoding, the logger will use the system default encoding.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2020-10-23T12:27:46Z","2020-10-26T09:12:51Z"
"","8829","[graphql] Add graphql query to retrieve session information for a given session id.","### Description  Add Graphql query to retrieve session information for a given session id. ### Motivation and Context  The changes are related to the issue #8816 .  With the changes the graphql query can be of the format :  `query { session (id: ) {id, capabilities, startTime, uri, nodeId, nodeUri , slot {id, stereotype, lastStarted} } }`  Changes include: 1. Update to Graphql schema. 2. Update to Session Graphql object to return URI, node information and slot information. 3. New class SessionData to return results or error for the Graphql query. 4. New exception class in case of the session-id requested not found.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2020-10-29T09:31:43Z","2020-11-02T10:09:37Z"
"","8597","[JS] Support for 'print' endpoint","### Description  1. Adding support for 'print' endpoint with 'printToPdf' WebDriver client 2. feature works in geckodriver 0.27.0  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","harsha509","2020-08-03T16:09:37Z","2020-08-13T12:03:29Z"
"","8880","[JS] Adding support for `print` endpoint","### Description  1. Adding support for 'print' endpoint with 'printPage' WebDriver client  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","harsha509","2020-11-17T05:35:47Z","2021-10-10T12:48:10Z"
"","8369","Optimization for ByChained","## üöÄ Feature Proposal `ByChained` could be optimized by collapsing the bys in the chain in a single by, thus saving on the findElement(s) calls: 1 instead of N.  The trick is that many Bys can be easily translated into a css selector:  - By.cssSelector -> ""xxx"" - By.id -> ""#xxx"" - By.name -> ""[name=xxx]"" - By.tagName -> ""xxx"" - By.className -> "".xxx""  If we concatenate the bys separated with a space, we get the same effect as a ByChained.  So, if we detect that **all of** the bys in the chain are convertible into a css selector, then we can do so, and then call `findElements` on the resulting single ByCssSelector.  There's only one problem: in order for this to work we need access to the property of the By object holding the selector, which sadly is not publicly available at the moment. We might either go with reflection (if I'm not mistaken I think it's possible to access private fields), although I don't like it. Or, better, plan to expose the locator in a future release, which would be a good thing in any case ;)  ## Motivation Optimizing the number of calls to `findElements` which are made in `ByChained`.  ## Example [ByChained#findElements](https://github.com/SeleniumHQ/selenium/blob/a0d9489987ceaa6725248106272c66e338519a82/java/client/src/org/openqa/selenium/support/pagefactory/ByChained.java#L59) would start with:  ``` @Override public List findElements(SearchContext context) {   if (/* all of the bys are convertible to a css selector */) {     return collapseBys(bys).findElements(context);   }   [..] }  private ByCssSelector collapseBys(By[] bys) {   StringBuilder sb = new StringBuilder();   for (By by : bys) {     if (by instanceof ByCssSelector) {       sb.append(by.getSelector()); // if only it was provided... :(     } else if (by instanceof ById) {       sb.append(""#"");       sb.append(by.getSelector()); // if only it was provided... :(     }     [...]   } } ```  If you like the idea, I'll be happy to work on a patch.","closed","C-java,","alb-i986","2020-05-30T10:35:34Z","2021-09-05T08:01:09Z"
"","8276","Show Actions cursor","## üöÄ Feature Proposal  While performing some cursor-moving actions using the Actions class such as moving the cursor from an element to a pixel offset (defined by x and y values), show the location of the Actions cursor.  ## Motivation  It is important to see live and eventually in screen captures, where exactly the cursor was at the time, so that I can diagnose a problem more easily.  ## Example   ``` static void moveMouseCursorFromElementCentreToOffset(WebDriver webDriver, WebElement webElement, int xOffset, int yOffset) {         Actions actions = new Actions(webDriver)         actions.moveToElement(webElement)                 .showCursor(true) // **I wish this were possible**                 .pause(Duration.ofMillis(200))                 .moveByOffset(xOffset, yOffset)                 .pause(Duration.ofMillis(500))                 .build()                 .perform()     } ```","closed","I-enhancement,","MrMisterG","2020-05-06T10:43:36Z","2021-09-05T09:12:32Z"
"","8166","Add support for trying different URLs for commands","## üöÄ Feature Proposal  When using RemoteWebDriver, it'd be nice to add support for trying different URLs for commands (eg. to support logging endpoints)  ## Motivation  @shs96c I remember we briefly spoke about this one, could you please edit the issue and add some more details?  ## Example  Please provide an example of how this feature would be used.","closed","","diemol","2020-04-06T21:16:00Z","2021-12-11T00:06:32Z"
"","8168","Define on a shared user facing API for BiDi and CDP","## üöÄ Feature Proposal  We'd like to define a shared user-facing API that users can interact with when using bi-directional WebDriver API. Until the standard is delivered, this API is likely to be backed by CDP.  ## Motivation  See https://github.com/w3c/webdriver-bidi/blob/master/proposals/core.md for more details. The API should focus on satisfying the following use cases:  **Event-based use cases:**  - [x] Listen for DOM events - [x] Log what's going on in the browser including console and JS errors - [x] Fail fast on any JS error - [x] Intercept network requests allowing to mock backend requests - [ ] Record traffic _(Alex: Allow replaying it?)_ - [x] Authenticate on secure pages - [x] Bootstrap scripts (for example, execute JavaScript snippet on every page load) - [ ] Listen for new contexts _(Alex: Not sure what do we mean by contexts?)_  **Other use cases:**  - [ ] Take full-page screenshots - [ ] Access throttling and performance timings - [ ] Dynamic changes to iframe or documents _(Alex: Not sure it means to make changes or listen for changes?)_  ## Example  Read the issue comments for examples.","closed","selenium-4,","diemol","2020-04-06T21:34:00Z","2021-09-05T08:10:29Z"
"","8174","[Grid] Update Helm charts to deploy new Grid","## üöÄ Feature Proposal  We do currently have a Helm [chart](https://github.com/helm/charts/tree/master/stable/selenium) to deploy Grid in Kubernetes. This chart needs to be updated to reflect the changes of the new Grid.  ## Motivation  Users can deploy the new Grid into Kubernetes.  ## Example","closed","I-enhancement,","diemol","2020-04-06T22:37:14Z","2021-09-05T08:19:15Z"
"","8171","[Java] Remove OkHttp","## üöÄ Feature Proposal  We are now using Netty and we can get rid of OkHttp  ## Motivation  See description  ## Example","closed","C-java,","diemol","2020-04-06T22:04:37Z","2021-09-05T09:36:39Z"
"","8786","API to get currently set timeouts","## üöÄ Feature Proposal  Three new methods for `org.openqa.selenium.WebDriver.Timeouts`:  ```java long implicitlyWait(); long scriptTimeout(); long pageLoadTimeout(); ```  or alternatively  ```java long getImplicitlyWait(); long getScriptTimeout(); long getPageLoadTimeout(); ```  returning the values set via their counterpart methods.  ## Motivation  I've encountered a situation where I'd like to temporarily change the timeouts set via  `driver.manage().timeouts()`. In order to do this I have to retrieve and store the currently set values for those timeouts.  ## Example  Somewhere early:  ```java driver.manage().timeouts().implicitlyWait(10L, TimeUnit.SECONDS); ```  Now there's a place where I loop over some WebElements and check for some children but I do not want to implicitly wait 10 seconds every time:  ```java final long previousWait = driver.manage().timeouts().implicitlyWait(); driver.manage().timeouts().implicitlyWait(1L, TimeUnit.SECONDS); for (final WebElement row : getResults()) {     // do stuff } driver.manage().timeouts().implicitlyWait(previousWait); ```","closed","C-java,","black-snow","2020-10-14T12:46:30Z","2021-09-05T08:19:14Z"
"","8318","Remove references to `opera_blink` in favour of `opera`","## üöÄ Feature Proposal  There are 2 version of Opera that are currently being supported in the code base. We really to just have `opera`  ## Motivation Deleting obsolete code  ## Example  we have `OPERA_BLINK` in the [BrowserType.java](https://github.com/SeleniumHQ/selenium/blob/master/java/client/src/org/openqa/selenium/remote/BrowserType.java#L34) file and we should remove it and all references to it in favour of `OPERA`","closed","help wanted,","AutomatedTester","2020-05-18T13:06:04Z","2022-01-01T00:07:36Z"
"","8637","Breaking change: PLATFORM: will need enhancing to allow more than just OSX","## üöÄ Feature Proposal  The platform capability `OSX` will need renaming soon, as mac are leaving the V10 lifecycle. It is suggested that `macOS` is used (And if needed to be constantised: `MACOS`)  ## Motivation  This is going to be problematic for everyone once the new version Big Sur comes out in october / november this year. It'll cause issues for selenium and all consumers (Cloud/Local/Wrappers).  ## Example  `desired_capabilities` should now take the following as valid (If possible).  `{ platform => ""MACOS"" }` `{ platform => ""macOS"" }` `{ platform => ""OSX"" }` # Backwards compatibility `{ platform => ""OSXI"" }` # Kind of legit?","closed","R-awaiting answer,","luke-hill","2020-08-21T10:54:46Z","2021-09-05T08:34:06Z"
"","8145","Config files should use TOML","## üöÄ Feature Proposal  The new Grid will need configuration files. TOML should be the markup language of choice.  ## Motivation  We want to be able to configure a Grid instance.  ## Example  Je ne regrette rien","closed","C-grid,","shs96c","2020-03-30T11:12:50Z","2020-05-20T23:22:35Z"
"","8801","Add print functionality to javascript package","## üöÄ Feature Proposal  The latest WebDrivers have added the print functionality from the latest W3C [working draft](https://www.w3.org/TR/webdriver/#print) but the js library does not have a command to use this.  ## Motivation  The closest functionality that exists in selenium is taking a screenshot but that does not cover all cases for printing. There are many libraries that depend on selenium specifically for saving the html as pdf but do not use the latest WebDrivers. This will save all those developers from needing to create alternate libraries and avoid bugs.  ## Example ``` const driver = await new Builder()     .forBrowser('firefox')     .setFirefoxOptions(new firefox.Options().headless().windowSize(windowSize))     .build(); await driver.get('https://www.npmjs.com/package/selenium-webdriver'); const pdfBuffer = await driver.print(printOptions); fs.writeFileSync('website.pdf', pdfBuffer); ```","closed","C-nodejs,","space-rodeo","2020-10-17T05:35:19Z","2021-09-05T08:30:24Z"
"","8232","Document how to create a TOML config for Grid","## üöÄ Feature Proposal  The Grid 4 is able to read its configuration from a TOML file, we should document that.  ## Motivation  It would be nice for users to know how to start Grid 4 with a TOML file  ## Example  `java -jar selenium-server.jar info toml` outputs a guide to do that","closed","C-grid,","diemol","2020-04-23T15:21:44Z","2021-09-05T09:44:04Z"
"","8284","Control Actions cursor movement speed","## üöÄ Feature Proposal  The Duration of a single mouse movement like `moveToElement` seems to be currently hard coded to 100ms. I would like the ability to set a custom Duration. This can be extended to keyboard (and other?) actions.  ## Motivation  In my project, having a very fast mouse movement (namely drag-and-drop) causes inconsistent results between different iterations of the same tests. Slowing the mouse movement down will improve the stability of my tests.  ## Example  ``` static void clickDragDrop(WebDriver webDriver, WebElement webElement, int xOffset, int yOffset) {         Actions actions = new Actions(webDriver)         actions.setDuration(Duration.ofSeconds(1)) // **I wish this were possible**                 .dragAndDropBy(webElement, xOffset, yOffset)                 .build()                 .perform()     } ```","closed","needs-triaging,","MrMisterG","2020-05-08T08:13:59Z","2021-09-05T08:06:39Z"
"","8021","Use UNIX domain sockets for Docker communication","## üöÄ Feature Proposal  The docker support in the new Grid currently needs a TCP endpoint to connect to. On systems where Docker uses UNIX domain sockets, Grid should also use them  ## Motivation  This will mean that ""if you have docker, you can use docker"" out of the box.","closed","C-grid,","shs96c","2020-02-11T15:26:46Z","2021-09-05T09:44:02Z"
"","8176","Reduce console noise","## üöÄ Feature Proposal  The console output could be in some cases be too noisy or having irrelevant information. An approach would be to have any of these with more context, be eliminated, or have links to online information describing why they are important enough for logging:  ``` Starting ChromeDriver 75.0.3770.90 (a6dcaf7e3ec6f70a194cc25e8149475c6590e025-refs/branch-heads/3770@{#1003}) on port 27507 Only local connections are allowed. Please protect ports used by ChromeDriver and related test frameworks to prevent access by malicious code. Jul 29, 2019 1:20:55 PM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: W3C ```  @shs96c do you have any more context for this one?","closed","I-enhancement,","diemol","2020-04-06T23:12:35Z","2021-09-05T08:37:23Z"
"","8363","Starting web driver as a different user (ADFS)","## üöÄ Feature Proposal  The ability to (optionally) switch user with every initialization of the driver service.  ``` new ChromeDriver(chromeOptions, username, password, domain) new EdgeDriver(edgeOptions, username, password, domain); ```  ## Motivation  Within environments that implement single sign-on solutions for their websites there is a need for the ability to sign in with multiple users into your website under test.  As an example within my business we implement a website using Active Directory Federation Services (ADFS) as login method (i.e. you have no login page and the site just opens up), I will be unable to switch to a different user other than the one logged into the Windows account (example build server domain account).  ## Example  Within a base class the user could optionally pass the desired new user login credential into the driver:  ``` ///  /// This method will setup and return a configured IWebDriver instance. ///  /// IWebDriver private IWebDriver SetupEdgeWebDriver(string username, string password, string domain) { 	Driver = null;  	// Launch Microsoft Edge (Chromium) 	EdgeOptions edgeOptions = new EdgeOptions 	{ 		UseChromium = true 	};  	edgeOptions.AddArguments(""start-maximized"");  	Driver = new EdgeDriver(edgeOptions, username, password, domain);  	return Driver; } ```  Based upon some discussion on [stackoverflow](https://stackoverflow.com/q/41282540/3324415) I have believe the following implementation might be possible within `DriverService.cs` as an example, notice the reference to a user object:  ``` ///  /// Starts the DriverService if it is not already running. ///  [SecurityPermission(SecurityAction.Demand)] public void Start() { 	if (this.driverServiceProcess != null) 	{ 		return; 	}  	this.driverServiceProcess = new Process();  	if (this.user != null) 	{ 		this.driverServiceProcess.StartInfo.UserName = user.Name; 		this.driverServiceProcess.StartInfo.Password = user.Password; 		this.driverServiceProcess.StartInfo.Domain = user.Domain; 		this.driverServiceProcess.StartInfo.LoadUserProfile = true; 	}  	this.driverServiceProcess.StartInfo.FileName = Path.Combine(this.driverServicePath, this.driverServiceExecutableName); 	this.driverServiceProcess.StartInfo.Arguments = this.CommandLineArguments; 	this.driverServiceProcess.StartInfo.UseShellExecute = false; 	this.driverServiceProcess.StartInfo.CreateNoWindow = this.hideCommandPromptWindow;  	DriverProcessStartingEventArgs eventArgs = new DriverProcessStartingEventArgs(this.driverServiceProcess.StartInfo); 	this.OnDriverProcessStarting(eventArgs);  	this.driverServiceProcess.Start(); 	bool serviceAvailable = this.WaitForServiceInitialization(); 	DriverProcessStartedEventArgs processStartedEventArgs = new DriverProcessStartedEventArgs(this.driverServiceProcess); 	this.OnDriverProcessStarted(processStartedEventArgs);  	if (!serviceAvailable) 	{ 		string msg = ""Cannot start the driver service on "" + this.ServiceUrl; 		throw new WebDriverException(msg); 	} } ```","closed","R-awaiting answer,","BVisagie","2020-05-29T13:52:37Z","2021-09-05T09:43:54Z"
"","7937","sendKeysQuickly implementation","## üöÄ Feature Proposal  sendKeysQuickly implementation could paste the entire text all at once instead of character by character.  ## Motivation  sendKeys is too slow if the text is very long.  ## Example  ``` String value = ""...very long text...""; WebElement element = ... element.sendKeys(value); ```","closed","C-java,","sgrillon14","2020-01-15T14:42:42Z","2020-05-05T21:19:09Z"
"","8238","Selenium4 DevTools command to run AUDIT or Lighthouse","## üöÄ Feature Proposal  Selenium4 DevTools command to run AUDIT or Lighthouse  ## Motivation  use selenium to trigger lighthouse reports for webpages  ## Example  Please provide an example for how this feature would be used.  Like in Puppeteer we trigger to generate html report runlighthouse(page.url(),opts,config,'lighthouse Report homepage.html')","closed","I-enhancement,","mittaperf","2020-04-24T19:27:40Z","2021-09-05T08:12:11Z"
"","8308","Ability to retrieve the By locator of a WebElement","## üöÄ Feature Proposal  Selenium needs a way to retrieve the locator from the WebElement. Especially in cases when we element exists from many `By` it becomes difficult to get its XPath.  ## Motivation  This future will help in battling exceptions like for e.g. the `StaleElementReferenceException`. See the example below see the usefulness. Also, it does not seem hard to implement either it's just keeping track of previous `By` locators in a List..  ## Example  I'm doing the following for example:  ``` var locators = new ByChained(By.XPath(""//div[@id='historyModal']//div[@class='modal-body']"", By.ClassName(""historyItem"")); var historyValues = WebDriver.FindElements(locators);       foreach (var historyValue in historyValues) {       if (!TrySelectHistory(historyValue))       {            // do something       } }       private bool TrySelectHistory(IWebElement historyValue) {     var historyValueChildren = historyValue.FindElements(By.XPath(""./*""));          if (historyValueChildren.Count < 2) return false;           var selectButton = historyValueChildren[1].FindElement(By.TagName(""button"")); // would be great if I could get the locator of this element           TestHelper.WaitForLoading(element: selectButton); // so I would pass the locator here instead of the element           TestHelper.JavaScriptClick(element: selectButton); // so I would pass the locator here instead of the element           return true; } ``` As can be seen in the code, the `selectButton` I get from the nested sequence of previous `By`,  it's a complex sequence. I would like to get the locator for this element, in order to prevent `StaleElementReferenceException`. Because in Selenium once a WebElement goes stale, it always stays stale, however, a locator could be used to keep trying to find the element until it gets a non-stale element.","closed","needs-triaging,","onkarjit","2020-05-14T15:03:18Z","2021-09-05T09:12:34Z"
"","8165","Update user docs with new Selenium 4 features","## üöÄ Feature Proposal  Selenium 4 brings a set of all-new features and https://www.selenium.dev/documentation/en/ needs to be updated to contain the related docs for them.  ## Motivation  It'd be nice to have the following new features covered in the docs: - Relative locators - CDP integration - New Grid 4.0  ## Example  ...","closed","help wanted,","diemol","2020-04-06T20:42:19Z","2022-01-03T00:07:42Z"
"","8172","[Grid] SessionMap backed by JDBC","## üöÄ Feature Proposal  Right now all the SessionMap information is stored in memory.  ## Motivation  It'd be nice to have a SessionMap backed up by JDBC to enable more running instances of a SessionMap  ## Example","closed","selenium-4,","diemol","2020-04-06T22:27:47Z","2021-09-05T09:36:51Z"
"","8009","[dotnet] Return async Tasks where appropriate","## üöÄ Feature Proposal  Return async Tasks where appropriate in the dotnet projects.  ## Motivation  Threads are currently being blocked on tasks that are otherwise ideal for asynchronous logic.  ## Example  I have found several issues in the past (https://github.com/SeleniumHQ/selenium/issues/6369,  https://github.com/SeleniumHQ/selenium/issues/2012, https://github.com/SeleniumHQ/selenium/issues/4162#issuecomment-467824963) in which async was rightly avoided due to the support of .Net 3.5 and 4.0 at the time. However as of this commit (https://github.com/SeleniumHQ/selenium/commit/dfc2d1c32449bfd0a8086a15204cf693c9393e06#diff-b611cb2de98423d15d6da4ba61983045) last year, it appears that is no longer a blocker.  Some areas where async operations would be nice (these code segments were all discussed in the above mentioned issues too): `Thread.Sleep` -> `await Task.Delay`, for example: https://github.com/SeleniumHQ/selenium/blob/3e4cc2b30cd1d81104571eafcd76f1c63bc517a2/dotnet/src/webdriver/Support/DefaultWait%7BT%7D.cs#L201 https://github.com/SeleniumHQ/selenium/blob/07a18746ff756e90fd79ef253a328bd7dfa9e6dc/dotnet/src/webdriverbackedselenium/Internal/SeleniumEmulation/Waiter.cs#L95  `..GetAwaiter().GetResult()` => `await ..` (and return async Task): https://github.com/SeleniumHQ/selenium/blob/052e70ff21691eb9c535b8ce6d9123bb5e7de7e5/dotnet/src/webdriver/Remote/HttpCommandExecutor.cs#L148","closed","I-stale,","tabjsina","2020-02-07T02:05:42Z","2022-03-16T00:09:44Z"
"","8317","Remove references to obsolete browsers","## üöÄ Feature Proposal  Remove all references to obsolete browsers  ## Motivation  Currently, there are large areas of the codebase that are not being used. We don't need that dead code anymore.  ## Example  Such as `IEHTA` and `Konqueror` in [BrowserType.java](https://github.com/SeleniumHQ/selenium/blob/master/java/client/src/org/openqa/selenium/remote/BrowserType.java#L40 ). We also need to remove where those are being used in the code.","closed","I-cleanup,","AutomatedTester","2020-05-18T12:55:27Z","2021-09-05T08:24:54Z"
"","8170","Implement relative locators in JavaScript","## üöÄ Feature Proposal  Relative locators have been implemented in all bindings except JavaScript  ## Motivation  See feature description  ## Example","closed","I-enhancement,","diemol","2020-04-06T21:51:34Z","2021-09-05T10:02:54Z"
"","8645","Python implementation always create or copy profile folder into temporary location","## üöÄ Feature Proposal  Python implementation always create or copy profile folder into temporary location  ## Motivation  I checked all the positions related to firefox profile, such as WebDriver.init(), Options, FirefoxProfile.init()... create a temporary profile folder or copy existing to temp folder is really a bad idea, it's totally unnecessary, because firefox already have command line args to specify profile location, if i need a new location, i just use it, no extra works needed. WebDriver cleans temp profile on quit() but it is also unreliable when program crashes. chrome WebDriver doesn't do these unnecessary things but chromedriver do it, i will also see if possible to get rid of it  ## Example","closed","needs-triaging,","shajunxing","2020-08-25T01:47:05Z","2021-09-05T08:37:19Z"
"","7914","Add Vendor specific commands for Remote webdriver","## üöÄ Feature Proposal  Please add support `set_network_conditions` for remote Webdriver and others useful methods from vendor drivers.  ## Motivation  I use Webdriver at docker's container, and I would like ta set a throttling.  ## Example  ```     def set_throttling(self):         """"""Doesn't works for Remote.""""""         self.driver.set_network_conditions(             offline=False,             latency=5,  # additional latency (ms)             download_throughput=500 * 1024,  # maximal throughput             upload_throughput=500 * 1024)  # maximal throughput ```  Responce:  ``` AttributeError: 'WebDriver' object has no attribute 'set_network_conditions' ```","closed","C-py,","RuslanBM","2020-01-06T15:07:13Z","2021-09-05T08:01:03Z"
"","8812","Add encoding option for logging","## üöÄ Feature Proposal  Our product always writes a log file in UTF-8 encoding on Linux, macOS and Windows.  There is a problem when our Selenium tests run on non-English Windows such as Japanese because a log file from Selenium appears encoded in local encoding or LCP which is Shift JIS in case of Japanese.  We would like to have an option to change Selenium's log file encoding to UTF-8.  ## Motivation  Currently log text shows garbled text when Selenium-based test runs on Japanese Windows and it could be easily seen as a product problem.  ## Example  Currently log text shows fine on Linux as below: 10 17, 2020 11:29:24 ÂçàÂâç org.openqa.selenium.remote.ProtocolHandshake createSession ÊÉÖÂ†±: Detected dialect: OSS  On Japanese Windows, log text shows as below with garbled text: 10 09, 2020 1:29:39 ÔøΩﬂåÔøΩ org.openqa.selenium.remote.ProtocolHandshake createSession ÔøΩÔøΩÔøΩ: Detected dialect: OSS","closed","needs-triaging,","nhigano","2020-10-21T13:57:38Z","2021-09-05T08:33:56Z"
"","8802","Support for print-to-PDF","## üöÄ Feature Proposal  latest version of Chrome and FireFox supports new WebDriver command [print](https://www.w3.org/TR/webdriver/#dfn-print-page).  I would be more happy if we can land this feature in all language bindings by next alpha/beta release if possible!","closed","C-java,","harsha509","2020-10-17T08:23:38Z","2021-09-05T08:25:01Z"
"","8251","[4.0.0-alpha5]Default to 'standalone' flag if nothing is passed as CliCommand","## üöÄ Feature Proposal  In Selenium-4.0.0-alpha-5 we need to pass a standalone flag if the jar needs to run in standalone mode. It makes sense that selenium starts in standalone mode by default when run `java -jar selenium-server-4.0.0-alpha-5.jar` instead of  `java -jar selenium-server-4.0.0-alpha-5.jar standalone`  ## Motivation  This was a behaviour in the previous versions. If someone is running standalone jar automatically, it may break and need to have handling.  ## Example  Please provide an example for how this feature would be used. `java -jar selenium-server-4.0.0-alpha-5.jar`","closed","C-java,","Dharin-shah","2020-04-27T15:40:32Z","2021-09-05T10:20:22Z"
"","8768","Ability to override RemoteConnection._get_proxy_url() without relying on environment variables, especially for localhost","## üöÄ Feature Proposal  In Selenium 4, a change was made so that Selenium now checks on the `HTTPS_PROXY` and `HTTP_PROXY` environment variables when determining whether to use a proxy when sending commands to the WebDriver.  Unfortunately, there is currently no way to override this behavior (`RemoteConnection._get_proxy_url()` only checks these envars, nothing else). Selenium forces you to rely on these environment variables if they are set. The only way around this is to temporarily change their values, which is hack-y and could cause other problems.  (If there is some other solution to this, I have not been able to find it.)  ## Motivation  If your work environment requires setting a proxy for external connections, then Selenium forces you to use it, even if you are trying to run a web driver on localhost. Not only is using a proxy for a localhost web driver excessive, but it fails because of course the proxy is going to have a different understanding of localhost as your PC does.  Allowing a manual override (or disabling) of the proxy when initializing a RemoteConnection (or a WebDriver) would be convenient. It would also allow Selenium to continue to NOT rely on these environment variables, just like in version 3 (so yes, the change in version 4 was a breaking change).  ## Example  I'm not sure of the best solution. I'm not sure if it's safe to assume that no proxy would ever be needed for localhost connections, but if so, this would be a simple change. A most robust solution would involve some way to pass a no-proxy argument to RemoteConnection (which could somehow be specified in the various WebDrivers' __init__ method), or some way to pass an object that can indicate a different proxy be used, or disabled altogether.","closed","R-awaiting answer,","five95","2020-10-09T13:49:48Z","2021-09-05T08:33:52Z"
"","8209","Add support for custom RemoteProxy","## üöÄ Feature Proposal  In Se4, I would like a way to provide a custom implementation of node command processing handlers (before & after) command is executed. Similar to Se3 RemoteProxy, but currently the only way to do this is to fork the whole project and add a custom class that inherits from Node or extends SessionFactory. Instead, a separate jar file containing just the Node (or Handler) implementation should be able to be specified when spinning up a new node, not a custom build of the whole Se4 framework.  ## Motivation  Intercepting node commands allows for custom telemetry and context to be emitted from a grid node directly instead of having to be embedded with a test script. Examples of context include command time taken, command name, DOM state, HTTP-level captures, and injecting W3C Trace Context automatically.  Implementations of the Node could be provided for OTel, or statsd, or any other external system for processing and analysis. As a new part of the OTel community, I think it's great to see OpenTracing and OTel in the Se4 codebase, but in terms of flexibility to other use cases for command interception, generic telemetry from the grid still doesn't allow me to extend to the use cases below.  ## Example  Use case 1: ""How long did this 'click' or .get() take to execute, and why?""  By creating timers before and after each command, the total time taken can be calculated.   Additionally, browser-specific capabilities (like Chrome DevTools) could be used to analyze function-level performance and report slow executions as part of the high-cardinality context that is squashed by only taking timer values on particular commands.  Finally, when a client test script clicks a button that in turn causes the browser to make requests, a proxy could be pre-injected (such as browsermob-proxy) to inject headers and/or capture request-level details and timings (see use case 3 as well). These details can be combined with the Command and other client details for reporting purposes.  Use case 2: ""Provide me a log of what happened, including UI commands, page lifecycle events, automatic screenshots, and don't make me write this myself.""  By intercepting commands before execution, to collect DOM/element state and screenshots, then doing it again after execution, the differentials can be computed and provided as sub-context for a command log (cause and effect) automatically. If/when there is an error, the log and differentials are invaluable to understand why there is an error.  Use case 3: ""Which requests are related to which logical commands?""  By optionally adding in a proxy (like browsermob-proxy) and seamlessly capturing traffic, we can relate exactly which requests the browser sent to what client UI event caused them to occur. We could also identify requests unrelated to explicit commands, such as polling event loops, that impact page performance.   This kind of metadata provides a huge value to high-cardinality correlation with monitoring and observability tools. It can also be used as statistically significant end-user metrics when testing systems under a particular load (testing in pre-prod or prod).","closed","I-stale,","paulsbruce","2020-04-17T14:49:35Z","2021-12-03T00:06:53Z"
"","8605","Ignore case sensitive of 'PATH' env variable","## üöÄ Feature Proposal  In my organization i have limited access to setting env variables. Where my variable name is `Path` but chromdriver is looking for `PATH`.  Please consider case sensitive variable name  Due to this I have created one more variable PATH and added chromdriver location  Data: Windows 10","closed","needs-triaging,","adiralashiva8","2020-08-04T16:54:12Z","2021-09-05T09:02:46Z"
"","8418","Fetch Domain C# Selenium","## üöÄ Feature Proposal  Implement Fetch domain from Chrome Devtools C#  ## Motivation  The [Network ](https://chromedevtools.github.io/devtools-protocol/tot/Network/) domain is now deprecated and has been replaced with [Fetch](https://chromedevtools.github.io/devtools-protocol/tot/Fetch/).   When using Network.setRequestInterception, it will randomly stop intercepting requests after a while. When I tried using fetch.enable with the same parameters in python's selenium, it worked fine and did not stop intercepting after a while.   Because of this, there is no way to intercept images consistently in the C# version of selenium  Code Used: `await session.Network.SetRequestInterception(new OpenQA.Selenium.DevTools.Network.SetRequestInterceptionCommandSettings() {                 Patterns = myObj             });` ## Example  `await session.Fetch.enable(new OpenQA.Selenium.DevTools.Fetch.enableCommandSettings() {                 Patterns = myObj             });`   Thank you!","closed","C-dotnet,","Zanga1","2020-06-14T02:46:30Z","2021-09-05T08:31:33Z"
"","8654","Right-click-and-hold actions to support testing functionality in single page applications","## üöÄ Feature Proposal  Implement actions for the .Net project to include: `Actions.RightClickAndHold();` `Actions.Release(MouseButton mouseButton =  MouseButton.Left)`;  ## Motivation  In a single page web-application it is possible to disable context menus being opened with a right click. To be able to use Selenium to test functionality added which uses the right mouse button would allow us to automate the remaining manual tests on our project.  ## Example  ```dotnet public void CreateNewGraphFromRange(int startXCoordinate = 10, int endXCoordinate = 100) {     var chromeDriver = new ChromeDriver();     chromeDriver.Navigate(graphPageUrl);     var graph = chromeDriver.FindElement(By.Id(GraphId));     new Actions(driver).MoveToElement(toElement: graph, offsetX: startXCoordinate, offsetY: 10).RightClickAndHold().MoveByOffset(endXCoordinate, 0).Release(mouseButton =  MouseButton.Right).Build().Perform(); } ```","closed","I-enhancement,","Duathdaert","2020-08-28T09:31:39Z","2021-09-05T08:34:07Z"
"","7976","Add support for identifying a window handle with an active element","## üöÄ Feature Proposal  Im using WebDriver and Chrome  Let's say that I have 3 chrome windows opened.  How do I go about finding out the WindowHandle associated to the current active element of the web driver. I am looking at the window handles and they look like gibberish to me.  ## Motivation  N/A  ## Example  N/A","closed","","danielricci","2020-01-28T14:08:22Z","2020-02-28T07:12:03Z"
"","8664","emulate Firefox/Chrome Javascript-execution-context switch","## üöÄ Feature Proposal  I would like to emulate Javascript-executing-context changes, as achievable  - in [Chrome DevTools](https://developers.google.com/web/tools/chrome-devtools/console/reference#context) through a drop-down menu; - in the Firefox Web Console, similarly (drop-down menu in the upper-right console corner); - in the Firefox Web Console through the `cd(iframe)` [facility](https://bugzilla.mozilla.org/show_bug.cgi?id=1605327).  ## Motivation  Automating logins that embed a cross-origin iframe for 2fa, for instance.  ## Example  I have a login window as described above, that embeds a prompt requesting an additional passcode. I have tried:  (1) Switching context ""manually"" to the iframe in the console (both Firefox and Chrome); I can then access the relevant buttons and forms through selectors, etc.  (2) Locating the iframe with Firefox headless + `node` + `selenium-webdriver` and switching to it:  ```js ifr = driver.findElement(By.id('frame_id')); driver.switchTo().frame(ifr); ``` This does switch and gives me access to a `DOM`, but it is *not* the one I can see in the console/inspector. In particular there are no buttons to access, etc.  In short: the `switchTo().frame(iframe)` function does not seem to mirror Firefox' `cd(iframe)`.","closed","","stuart-little","2020-09-01T23:46:59Z","2021-09-05T08:37:12Z"
"","7864","DevTools Network.respond required","## üöÄ Feature Proposal  I would like to be able to intercept requests and responses and manipulate the status code and or response body and/or headers.  I've looked at `Network.requestIntercepted()` , `Network.responseReceived()` etc. I've also looked at `Fetch.requestPaused`, but can't see how to mock the actual response status and/or body for an XHR request.   The `Fetch.requestPaused` and the `NetworkInterceptor` only appear to allow manipulation of the primary page request/response.  In puppeteer this can be done with `page.setRequestInterception(true)`, then using something like:  ``` page.on(""request"", request => {   ...   request.respond({     status: 400     ...   }) } ```  ## Motivation  This would enable front-end validation of error conditions and mocking response data without changing an API endpoint.   ## Example  Maybe something like this:  ``` devTools.addListener(Network.requestIntercepted(), handler -> { 		   	if(handler.getRequest().getUrl().endsWith(""/someEndpoint"")) { 		devTools.send(Network.respond( 			handler.getInterceptionId(), 			400, 			Optional.empty(), // body 			Optional.empty()  // headers 		)); 	}  	 }); ```  An alternative would be updating the `NetworkInterceptor` to work for XHR (or non-primary page load) requests.  If I have missed existing functionality which does enable this, please point me in the right direction - Thanks!","closed","","danhumphrey","2019-12-15T23:15:41Z","2021-09-05T08:37:25Z"
"","8277","TripleClick to select paragraphs","## üöÄ Feature Proposal  I would like Selenium to be capable of handling triple-clicks properly. This would provide the ability to easily select paragraphs of text.  ## Motivation  I have a test that verifies the ability to copy and paste a paragraph. With the Selenium Actions class, I am able to double click to select a word. As soon as I immediately call the click method a third time, I expect the whole paragraph to get selected. What happens in reality is that the selected word becomes unselected.  ## Example  ``` static void click(WebDriver webDriver) {         Actions actions = new Actions(webDriver)                 actions.click()                     .click() // **at this point, a single word is selected**                     .click() // **this third click should select the whole paragraph, but it does not**                     .build()                     .perform() } ```","closed","G-w3c,","MrMisterG","2020-05-06T10:55:50Z","2022-01-26T00:09:53Z"
"","8743","[Java][Selenium3.14x]Avaliable EdgeOptions for Chromium Edge","## üöÄ Feature Proposal  I wish it will be avaliable EdgeOptions for Chromium Edge on Selenium3.14x.  ## Motivation  It is avaliable on only selenium4.x.  ## Example  below example about settting file download options.  ``` Map prefs = new HashMap();                                                            prefs.put(""download.default_directory"",""D:\\Folder1"");                              EdgeOptions op=new EdgeOptions();     op.setExperimentalOption(""prefs"", prefs);                  WebDriver browser = new EdgeDriver(op);     browser.get(""https://microsoft.com""); ```  https://stackoverflow.com/questions/62817645/need-to-set-the-download-directory-chromium-edge-browser-using-selenium","closed","","tmshft","2020-09-28T23:43:10Z","2021-09-05T08:34:40Z"
"","7922","automatically download driver in python","## üöÄ Feature Proposal  I think it would be nice if with a few lines of code it were possible for the selenium library to download a specified driver so that path issues with drivers weren't as much of an issue (see example). My interest is in seeing this implemented for Python.   ## Motivation  It would be nice if one were able to use Selenium without manually downloading any drivers (particularly for Windows - not sure if this is a necessary step for mac or linux). Other libraries can be downloaded to solve this problem but it requires installing yet another install library which hopefully is as easily available (pypi, conda main channel) and up to date as Selenium itself.  - https://github.com/SergeyPirogov/webdriver_manager - https://pypi.org/project/chromedriver-binary/  I've found Selenium useful for automating some web actions (as opposed to for testing). If I want to be able to share my library it would be nice if I could just make Selenium a dependency and have it handle downloading drivers rather than forcing the use of my library to manually download drivers. I could probably also implement a bit of a hack in my code to do this but I thought it might be useful to the larger community.  ## Example  I'm flexible on the specifics, but something like this ....  ```python from selenium import webdriver, paths  #I don't like the name 'paths' but it is what I could come up with ...  #make a request for the latest version, download if it doesn't exist exe_path = paths.download_or_validate('Firefox','latest') #specific version exe_path = paths.download_or_validate('Firefox','69.0.3') #If an old one exists, use it, otherwise get latest #Perhaps this is the default??? exe_path = paths.download_or_validate('Firefox','any')  #By default I would think it would be ok to download to the Selenium directory itself #If not, perhaps a root download path could be specified  exe_path = paths.download_or_validate('Firefox',root_path=r'C:\code_stuffs\selenium\')  #Now we can use our webdriver, no manual download needed!!! driver = webdriver.Firefox(exe_path) ``` I don't know if maintaining a valid list of urls would be an issue. One could presumably force the user to specify the url  ```python exe_path = paths.download_or_validate('Firefox','https://chromedriver.storage.googleapis.com/80.0.3987.16/chromedriver_win32.zip') ```","closed","needs-triaging,","JimHokanson","2020-01-09T21:33:03Z","2020-04-15T08:48:51Z"
"","8346","Create interface `HasId` to avoid casting to `RemoteWebElement`","## üöÄ Feature Proposal  I suggest 1. either to add method `getId()` to interface `WebElement`, or 2. to create interface like `HasId` or `HasIdentity` and make `RemoteWebElement` implement it.   ## Motivation  People often cast `WebElement` to `RemoteWebElement` just to call method `getId()`.  De-facto all implementations of `WebElement` have method `getId()`.  For me, it's a problem because `RemoteWebElement` is a class, not interface, and therefore I cannot create a proxy object for it in Selenide. I need some interface with method `getId()`.","open","C-java,","asolntsev","2020-05-26T20:26:36Z","2021-12-29T18:08:38Z"
"","8828","npm publish","## üöÄ Feature Proposal  i see the javascript code update recently, but haven't publish the latest version npm package.","closed","","Stngle","2020-10-29T07:15:11Z","2021-09-05T08:33:53Z"
"","7860","Feature Proposal: Locators","## üöÄ Feature Proposal  Hi, I've never proposed a feature before so hopefully I can convey my idea clearly enough for people to think it useful to include in Selenium.  The proposal I have will help ease the burdensome and verbose calls to all the various different `find_element_*` and `find_elements_*` methods:  ``` find_element_by_class_name find_element_by_css_selector find_element_by_id find_element_by_link_text find_element_by_name find_element_by_partial_link_text find_element_by_tag_name find_element_by_xpath  # and again for `find_elements_* ```  I see the term ""Locators"" used throughout the Selenium documentation, but it never manifests itself as a real thing that users can use.  I've decided to make it real and I simply call this feature Locators.  This is something I've implemented in my own company's Python codebase.  Here's how I did it.  It's very simple.  ```python """"""locator.py""""""  from collections import namedtuple from selenium.webdriver.common.by import By  class Locator:     _ = namedtuple('Locator', ['by', 'query'])      @staticmethod     def css(query):         """"""Locator by CSS selector.""""""         return Locator._(By.CSS_SELECTOR, query)      @staticmethod     def name(query):         """"""Locator by name.""""""         return Locator._(By.NAME, query)      # and more for the other `By` types ```  ## Motivation  Too many `find_*` methods.  So annoying!  ## Example  Here is Python code directly from  (minus all the import lines):  ### Original code  ```python with webdriver.Firefox() as driver:     wait = WebDriverWait(driver, 10)     driver.get(""https://google.com/ncr"")     driver.find_element_by_name(""q"").send_keys(""cheese"" + Keys.RETURN)     first_result = wait.until(presence_of_element_located((By.CSS_SELECTOR, ""h3>div"")))     print(first_result.get_attribute(""textContent"")) ```  ### With Locators  ```python with webdriver.Firefox() as driver:     wait = WebDriverWait(driver, 10)     query_field = Locator.name(""q"")     div_element = Locator.css(""h3>div"")     driver.get(""https://google.com/ncr"")     driver.find_element(query_field).send_keys(""cheese"" + Keys.RETURN)     first_result = wait.until(presence_of_element_located(div_element))     print(first_result.get_attribute(""textContent"")) ```  You can see from this example that you no longer have to tell `find` what type of search strategy to use anymore.  It's given when you define the locator.  If changes to your website causes a change in your search strategy, you don't have to do a search and replace of all the various `find_*` methods.  All you have to do is update the locator.  The namedtuple gives you the extra benefit of easily accessing `by` and `query`.  ```python # given the example above  > div_element.by 'css selector' > div_element.query 'h3>div' ```  I hope you can find the usefulness in this feature proposal.  I'm sure it's not original and many people out there already do something like this, but it would be nice to see it built into Selenium.","closed","I-enhancement,","chingc","2019-12-11T23:43:19Z","2020-04-15T07:55:23Z"
"","8577","Vulnerable dependencies are used","## üöÄ Feature Proposal  Hi,  based on the dependencies of the latest stable version, there are two dependencies that have public known vulnerabilities: https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java/3.141.59 https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-server/3.141.59  okhttp-3.11.0.jar -> CVE-2018-20200 jetty-repacked-9.4.12.v20180830.jar -> CVE-2019-10241, CVE-2019-10247  ## Motivation  I am not sure whether these dependencies will be used in next releases.  ## Example  dependency-check tool can be used to detect vulnerable dependencies: https://owasp.org/www-project-dependency-check/","closed","needs-triaging,","sectestaccount","2020-07-28T11:13:43Z","2021-09-05T09:02:51Z"
"","8013","Hello from another WebDriver implementation üëã","## üöÄ Feature Proposal  Hello Selenium community! I am big fan of you work, especially about creating the WebDriver standard. I love it so much. I would like to share a [project ](https://mucsi96.gitbook.io/w3c-webdriver) I have been working for last 3 years (in free time üòä ) mostly for fun. This project provides JavaScript bindings that conform to the W3C WebDriver standard for controlling web browsers. Some key ideas behind it:  - Minimalistic promise based REST client. - One-to-one mapping to WebDriver API endpoints - Written in TypeScript for type safety, autocomplete and IntelliSense documentation - Full feature coverage over 55 WebDriver endpoints - 100% test coverage in real browsers (Chrome, Firefox, Safari, Internet Explorer) - Tested on Ubuntu, Windows and MacOS on CI server  Now the project became more mature achieved 100% feature coverage of the WebDriver spec and it reached a stable state and docs now are in quite good shape I would say. Sure we will do further improvements on docs by adding more examples and some tutorials. I would be more that happy if you can use it anyhow in future, provide some feedback or contribute to it üòä I was thinking what if we could do some collaboration together. What if this project could be one day the next version of selenium-webdriver project. More specifically the JavaScript (TypeScript) client of it. I am open to transfer the repository to any other organization.  ## Motivation  My motivation for submitting this issue it to start some collaboration, gather some feedback,","closed","","mucsi96","2020-02-08T21:51:03Z","2021-09-05T08:10:49Z"
"","8230","[Grid] Redirect from /wd/hub to /","## üöÄ Feature Proposal  Grid 4 at the moment has its main endpoint at `/`, we should add a `Route.prefix` to redirect `/wd/hub/` to `/`  ## Motivation  Grid 4 should be a drop-in replacement, and WebDriver clients are pointing by default to `/wd/hub/` when starting a `RemoteWebDriverSession`, this would help Selenium 3 clients to start using Grid 4 right away.","closed","needs-triaging,","diemol","2020-04-23T10:42:07Z","2021-09-05T10:20:30Z"
"","8167","[Grid]Add support for retries to HttpHandlers","## üöÄ Feature Proposal  For scenarios where a command fails and then succeeds after a retry, it'd be nice to add support for retries to the HttpHandlers in the Grid implementation.  We could use https://resilience4j.readme.io/docs or https://jodah.net/failsafe/fallback/ for this.  ## Motivation  See the feature description.  ## Example","closed","help wanted,","diemol","2020-04-06T21:22:36Z","2021-12-04T00:06:48Z"
"","8610","Get By from WebElement","## üöÄ Feature Proposal  Extract the By locator from WebElement, in the similar idea we can extract the WebDriver from the WebElement.  ## Motivation  A [Page Object](https://github.com/SeleniumHQ/selenium/wiki/PageObjects) can represent sections of a page as quoted from the implementation notes:  > Finally, a PageObject need not represent an entire page. It may represent a section that appears many times within a site or page  Oftentimes an element goes stale after an action is performed. Re-initialising the element is an approach to address it but there is a repetition of the By locator.  ### Page Object  ``` public class RbPage extends BasePage {      public RbPage(WebDriver driver) {         super(driver);     }      public ApplicationFormTab goToFormTab() {         driver.findElement(By.id(""formTab"")).click();         return new ApplicationFormTab(driver.findElement(By.cssSelector(""div[ng-show='item.iAccept']"")));     }  } ```  ### Page Component  ``` public abstract class BaseComponent {      protected WebElement root;     protected final WebDriver driver;     protected final Actions actions;      public BaseComponent(WebElement root) {         this.root = root;         this.driver = ((WrapsDriver) root).getWrappedDriver();         this.actions = new Actions(driver);     }  } ```  ``` public class ApplicationFormTab extends BaseComponent {      public ApplicationFormTab(WebElement root) {         super(root);     }      public void save() {         driver.findElement(By.id(""btnSave"")).click();         root = driver.findElement(By.cssSelector(""div[ng-show='item.iAccept']"")); // Re-initialise root element, By locator is repeated in a separate location     }  } ```  ## Example  The `getBy()` method extracts the By locator from the WebElement removing the duplication.  ``` public void save() {     driver.findElement(By.id(""btnSave"")).click();     root = driver.findElement(root.getBy()); } ```","closed","I-question,","kathyrollo","2020-08-05T12:50:48Z","2021-09-05T08:37:21Z"
"","8173","[Grid] Distributor should store state","## üöÄ Feature Proposal  Enabling the Distributor to store state would enable the possibility of having more than one distributor running at a time. We need to deal properly with the concurrency when changing the stored states  ## Motivation  See description  ## Example","closed","selenium-4,","diemol","2020-04-06T22:33:52Z","2021-09-05T08:37:26Z"
"","8022","Use `ServiceLocator` to find element location strategies","## üöÄ Feature Proposal  Currently, we have a hard-coded list of element location strategies. This is implemented by adding interfaces to each `WebDriver` and `WebElement` implementation. We should locate these strategies using `ServiceLocator`  ## Motivation  There are a couple of motivating factors:  1. People mistakenly rely on `FindByXXX` interfaces, where it'd be more ""correct"" to use `By` and look up elements dynamically 2. It would be nice for people to be able to easily extend the location strategies to support (eg) visual testing, or using some kind of fancy ML to pick an element to click.","closed","I-enhancement,","shs96c","2020-02-11T15:35:57Z","2021-09-05T08:30:08Z"
"","8594","Add support for generating texinfo document from Sphinx","## üöÄ Feature Proposal  Currently, I'm able to `cd py/docs && run make dirhtml` to generate html documentation. Although lots of warning messages,  the generated html files seems to be working. I then tried producing texinfo file by adding the following rule in `py/docs/Makefile`: ``` texinfo: 	$(SPHINXBUILD) -b texinfo $(ALLSPHINXOPTS) $(BUILDDIR)/texinfo 	@echo 	@echo ""Build finished. The texinfo file is in $(BUILDDIR)/texinfo."" ``` and then I ran `make texinfo`. However, alone with still seeing lots of warning message (which was the same as when running `make dirhtml`), the generated texinfo file `selenium.texi` was only 6.8KB which was obviously wrong.  ## Motivation  It would really nice if we can generate texinfo file because from where we could generate the `.info` file, and read the document in Emacs.","closed","R-awaiting answer,","YorkZ","2020-08-02T16:58:49Z","2021-09-05T08:34:44Z"
"","8291","TakeScreenshot to handle IWrapsDriver","## üöÄ Feature Proposal  Currently TakeScreenshot works only if the driver implements ITakeScreenshot or IHasCapabilities. But sometimes (e.g. in Protractor.net NgWebDriver) the driver is just a wrapper around another IWebDriver and does not expose these interfaces directly. I suggest to add logic to TakeScreenshot such that in case the given driver does not implement ITakeScreenshot or IHasCapabilities, but does implement IWrapsDriver, to look at the wrapped driver. Clearly this should support many layers of IWrapsDriver.  ## Motivation  To be able to take screenshots from any driver that implements IWrapsDriver. This will also simplify the implementation of additional wrappers.  ## Example ``` var chromeDriver = new ChromeDriver(); var ngDriver = new NgWebDriver(chromeDriver); ngDriver.TakeScreenshot().SaveAsFile(...);","closed","C-dotnet,","arnonax-tr","2020-05-10T10:49:55Z","2021-09-26T00:06:09Z"
"","8220","Publish webdriver.dll full symbols package (.snupkg) to nuget","## üöÄ Feature Proposal  Currently Selenium publishes a nuget package but does not publish symbols package. Would you please start publishing full debug symbols (/DEBUG:pdbonly) to nuget?  ## Motivation Get symbols along with WebDriver.dll nuget package  ## Example Publish symbols package to nuget (.snupkg) with /DEBUG:pdbonly","closed","C-dotnet,","shahabhijeet","2020-04-19T06:36:59Z","2021-09-05T08:31:27Z"
"","7895","WebDriverEventListener - Extend to cover additional events","## üöÄ Feature Proposal  Currently only some methods in the EventFiringWebDriver class call methods in the WebDriverEventListener class before and after the action is performed e.g. click ``` @Override     public void click() {       dispatcher.beforeClickOn(element, driver);       element.click();       dispatcher.afterClickOn(element, driver);     } ``` It would be useful if other methods in EventFiringWebDriver class could also have this functionality.  **submit** ```  @Override     public void submit() {       element.submit();     } ``` Update to  ``` @Override     public void submit() {       dispatcher.beforeSubmit(element, driver);       element.submit();       dispatcher.afterSubmit(element, driver);     } ```  **close** ```  @Override   public void close() {     driver.close();   } ``` Update to ```  @Override   public void close() {     dispatcher.beforeClose(driver);     driver.close();    dispatcher.afterClose(driver);   } ```  **quit** ``` @Override   public void quit() {     driver.quit();   } ``` Update to ``` @Override   public void quit() {      dispatcher.beforeQuit(driver);      driver.quit();      dispatcher.afterQuit();   }  ``` **Get Tag Name** ``` @Override     public String getTagName() {       return element.getTagName();     } ``` Update to ``` @Override     public String getTagName() {       dispatcher.beforeGetTagName(element, driver);       String tag = element.getTagName();       dispatcher.afterGetTagName(element, driver, tag);       return tag;     } ``` **Get Attribute** ``` @Override     public String getAttribute(String name) {       return element.getAttribute(name);     } ```` ```     @Override     public String getAttribute(String name) {       dispatcher.beforeGetAttribute(element, driver, name);         String attrValue = element.getAttribute(name);       dispatcher.afterGetAttribute(element, driver, name, attrValue);             return attrValue     } ``` This would also be useful on for other methods in the class including:- - isDisplayed() - frame(String frameName) - defaultContent()  ## Motivation  This functionality would be beneficial for  - logging  ## Example ``` driver.findElement(By.id(""submit_button"")).submit(); ``` Before and after this event the below methods in AbstractWebDriverEventListener are called. ``` public void beforeSubmit(WebElement element, WebDriver driver) { } ``` ``` public void afterSubmit(WebElement element, WebDriver driver) { } ```","closed","C-java,","a-mcd","2019-12-28T19:09:48Z","2021-09-05T08:19:15Z"
"","8705","Implement full page screenshot for Chrome","## üöÄ Feature Proposal  ChromeDriver implemented full page screenshot end point similar to geckodriver in ChromeDriver 86.0.4240.22 CL (https://chromium-review.googlesource.com/c/chromium/src/+/2300980). Selenium can utilize the endpoint to implement full page screenshot feature.  There is a proposal at https://github.com/w3c/webdriver/pull/1536 for adding it to WebDriver standards. Since gecko already supports it, I think we can add it for Chrome as well.  ## Motivation  Highly sought after in https://bugs.chromium.org/p/chromedriver/issues/detail?id=294#c161.  ## Example  The ChromeDriver endpoint is Get request at /session/:sessionId/screenshot/full","closed","","k7z45","2020-09-16T17:34:05Z","2021-09-05T08:34:50Z"
"","7964","Changing the default download path of browser at run-time.","## üöÄ Feature Proposal  Changing the default download path of browser at run-time.  ## Motivation  When I was automating a scenario of downloading a file in Chrome browser. I had a situation where I was suppose to change the browser's default download location. Here for chrome there is a method to do it  ``` @browser = Selenium::WebDriver.for :chrome  # code for navigating to downloads page and clicking on download button  @browser.download_path = ""C:/temp/"" @browser.close ```  When I want run the same code for edge I got an error:  ``` Error: test_01_click_download_pass(Download_A_File): NoMethodError: undefined method `download_path=' for # ```  To, achieve my test scenario I have gone through many Google answers but I found no solution for this issue. So, I would like to request to provide the same feature across the browsers  Browsers like: IE11, EDGE lastest and old, chrome, firefox  ##Environment Details: OS: Windows 10 Programming Language: ruby (v2.5.5) Gem : selenium-webdriver (v alpha4)","closed","needs-triaging,","evnraja32","2020-01-27T15:51:47Z","2020-04-15T08:47:06Z"
"","8672","Enable execute_cdp for webdriver.Remote ?","## üöÄ Feature Proposal  Can we enable `execute_cdp` for driver instance from webdriver.Remote()? currently we are getting an Attribute Error for the following  Requiremnts ``` Python 3.6.9 selenium 3.141.0 ``` ``` from selenium import webdriver  chrome_options = webdriver.ChromeOptions() chrome_options.add_argument(""--no-sandbox"") driver = webdriver.Remote(    command_executor='https://remote/webdriver',    desired_capabilities=chrome_options.to_capabilities()  ) driver.execute_cdp_cmd(""execute something"") ```  `AttributeError: 'WebDriver' object has no attribute 'execute_cdp_cmd'`  ## Motivation Already `execute_cdp_cmd` is availbe for `selenium.webdriver.chrome.webdriver` https://www.selenium.dev/selenium/docs/api/py/webdriver_chrome/selenium.webdriver.chrome.webdriver.html#selenium.webdriver.chrome.webdriver.WebDriver.execute_cdp_cmd  ## Example  driver.execute_cdp_cmd(""execute something"")","closed","C-py,","VishnuAtDevopStation","2020-09-04T12:13:20Z","2021-09-16T00:05:37Z"
"","7880","Synchronous Find FindNextElement","## üöÄ Feature Proposal  Can i add an Synchronous Find API ?  ## Motivation  find_elements sometimes returns ""stale"" DOM elements...  BUGGY a=driver.find_elements_by_tag_name(...) a[0].click()  BETTER a=driver.find_next_element_by_tag_name(...) a.click()","closed","needs-triaging,","Seagat2011","2019-12-21T20:53:31Z","2020-04-15T08:46:29Z"
"","8694","Julia bindings","## üöÄ Feature Proposal  Bindings for the Julia programming language.  ## Motivation  Julia is a great alternative to many of the already supported languages and it would be nice to be able to use Selenium as a native package in the language. There are already tools for back-end web servers, web scraping, machine learning, and many other things, but browser automation is still missing from the ecosystem.  ## Example  The API would likely be fairly similar to Python's.  This already exists but it requires installing the Python package and is unmaintained: https://github.com/shashi/WebDriver.jl","closed","R-awaiting answer,","giraffekey","2020-09-12T18:02:02Z","2021-09-05T08:34:07Z"
"","8794","[selenium-webdriver] Let the operative system return a free port instead of randomly finding one","## üöÄ Feature Proposal  Background: I don't now much about TCP ports but did some investigation into why we got the ""Unable to find free port"" error in Protractor while running our E2E-tests. Turns out running a lot of parallel test cases with Protactor using Headless Chrome and ChromeDriver causes ""port exhaustion"". After just a few minutes all ~60000 ephemeral ports was used up and findFreePort has a hard time to randomly find an available port with the current implementation. Using `netstat` and `lsof` tells us that of those 60000 ports around 500-1000 is actually in use at a given time, the rest is in the CLOSE_WAIT state and can be reused (as I understand). We are running tests in 5 applications with sharding, allowing up to 5 test cases running at one and this can happen in multiple feature branches at the same time. So it seems hard to stop using all these ports since it's something happening beyond our control.  **My proposal is to let the operative system find an arbitrary port instead of randomly finding one by testing random numbers.**  ## Motivation  Today the findFreePort method uses a random number to check if a port is available, my suggestion is to instead start a server by omitting or provide 0 as port so that we get a random available port from the operative system. Read more here: https://nodejs.org/api/net.html#net_server_listen  After some testing I have found that it respects the system port range, at least on unix. So the code can be simplified into a single method and no retries.  I have not yet been able to generate an error, so I'm not sure what kind of errors you can get, but it's handles error as before.  ## Example ```javascript const net = require('net');  function findFreePort(opt_host) {   return new Promise((resolve, reject) => {     const server = net.createServer()     server.on('listening', function() {       resolve(server.address().port);       server.close();     });     server.on('error', (e) => {       if (e.code === 'EADDRINUSE' || e.code === 'EACCES') {         resolve('Unable to find a free port')       } else {         reject(e)       }     });     server.listen(0, opt_host);   }); }  findFreePort()   .then((port) => {     console.log(port);   }).catch((e) => {     console.error(e);   }); ```","closed","needs-triaging,","JonWallsten","2020-10-15T09:29:53Z","2021-09-05T08:34:01Z"
"","8625","Request Level Logging for next version of Sel4","## üöÄ Feature Proposal  As with selenium 3, where we had sufficient request-level logs `10:08:27.824 DEBUG [94] org.apache.http.headers - http-outgoing-8 << Content-Length:70 10:08:27.824 DEBUG [94] org.apache.http.headers - http-outgoing-8 << Content-Type:application/json; charset=utf-8 10:08:27.824 DEBUG [94] org.apache.http.impl.execchain.MainClientExec - Connection can be kept alive indefinitely 10:08:27.824 DEBUG [94] org.apache.http.impl.conn.PoolingHttpClientConnectionManager - Connection [id: 8][route: {}->http://localhost:46968] can be kept alive indefinitely 10:08:27.824 DEBUG [94] org.apache.http.impl.conn.PoolingHttpClientConnectionManager - Connection released: [id: 8][route: {}->http://localhost:46968][total kept alive: 1; route allocated: 1 of 2000; total allocated: 1 of 2000] 10:08:27.824 DEBUG [94] org.openqa.selenium.remote.RemoteWebDriver - Executed: [baca5b89d9596392e4e194ab9767a9b2, getLog {type=browser}] 10:08:27.824 INFO [16] org.openqa.selenium.remote.server.DriverServlet - Done: [fetching logs for: browser] 10:08:27.824 DEBUG [16] org.openqa.selenium.remote.server.DriverServlet - Finished: POST /session/deed0755-efa9-42a8-8d83-7ab9c7c7904f/log 10:08:27.827 DEBUG [16] org.openqa.selenium.remote.server.DriverServlet - Handling: DELETE /session/deed0755-efa9-42a8-8d83-7ab9c7c7904f 10:08:27.827 INFO [16] org.openqa.selenium.remote.server.DriverServlet - Executing: [delete session: deed0755-efa9-42a8-8d83-7ab9c7c7904f]) 10:08:27.828 DEBUG [94] org.openqa.selenium.remote.RemoteWebDriver - Executing: quit [baca5b89d9596392e4e194ab9767a9b2, quit {}] `  ## Motivation  We at browserstack provide selenium logs as a feature. For selenium alpha6  we only have certain logs available `18:24:38.337 INFO [Standalone.execute] - Started Selenium standalone 4.0.0-alpha-6 (revision 5f43a29cfc*): http://103.126.7.157:5555 Starting ChromeDriver 84.0.4147.30 (48b3e868b4cc0aa7e8149519690b6f6949e110a8-refs/branch-heads/4147@{#310}) on port 40946 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. 18:24:41.358 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C`  ## Example  Provided above","closed","C-java,","Dharin-shah","2020-08-11T17:26:56Z","2021-09-05T08:34:50Z"
"","8175","[Java] Delete deprecated FindsBy* interfaces","## üöÄ Feature Proposal  As the issue title says  ## Motivation  ...  ## Example  ...","closed","selenium-4,","diemol","2020-04-06T22:45:58Z","2021-09-05T09:43:54Z"
"","8660","Grid: API extension to find out which node is being used","## üöÄ Feature Proposal  API extension to find out which node is being used  ## Motivation  In special, i want to be able to easily deal with file uploads and downloads. And i have not found any easy or reliable way to figure it out. Afaik, the only info one gets from the grid server is a `sessionId`, which can not be used to obtain any further information.  ## Example  It could be thinkable to have some more information about the executing ""environment"". One alternative is to be able to use the existing `sessionId` to obtain more information about it. For instance, to have a `WebDriver.session` Method, which is lazy-initialized with the `sessionId` and an additional call to the grid server. For my needs, would an API like this (or smth like that) be great: `driver.session().executingNode().getHostname()` so i can then copy the file to be uploaded to the right node or the file that has just been downloaded from the right node for further verification. For this use case the Platform would also be useful: `driver.session().executingNode().getPlatform()`  many thanks","closed","needs-triaging,","mmoossen","2020-09-01T05:26:11Z","2021-09-05T08:36:02Z"
"","8745","Support Default Capabilities for Nodes on Selenium 4","## üöÄ Feature Proposal  Allow setting default capabilities on the side of the node. This feature should work on both hub-nodes and standalone modes.  ## Motivation  We need to run tests on different versions of chrome (stable, beta, canary).   To do this we plan to set up 3 selenium-grid, each grid for one version. Since they are installed in different paths, we have to specify the chrome binary on the client-side. Which is not convenient because they may be different on different machines.  To solve this problem I hope that I can set the default `chrome_binary` on the nodes' side so that I can just leave this field empty on the client-side and respect the configuration of nodes.  ## Example  I plan to support this configuration via system properties when starting selenium service.  ```bash java -Dwebdriver.chrome.defaultCapabilities='{""browserName"":""chrome"",""goog:chromeOptions"":{""binary"":""/path/to/chrome""}}' \   -jar selenium-server-4.0.0-alpha-6.jar standalone ```  The preset capabilities will be merged with capabilities that send from client-side before starting a new webdriver session so that the client-side's capabilities always have higher priority than the server-side's.","closed","I-enhancement,","link89","2020-09-30T09:11:20Z","2021-09-05T08:21:34Z"
"","8737","C# client save content of atoms after they are read","## üöÄ Feature Proposal  Adding a cache layer in `ResourceUtilities` C# driver client. Saving atoms in memory after they are read from `FS` may speed up all function which uses `atoms` by reducing `I/O`.  It must not affect anything since the atoms have to be immutable as I understand.  I am not proficient in the code base and its terminology so I may be wrong about such improvement. That is only what I came up with while I were going over the code base.  PS: I wanted to post it as a question but they are seems to be rejected by default. ``` Please note that this issue tracker is not a help form and this issue will be closed. ```","closed","needs-triaging,","zhiburt","2020-09-25T21:45:52Z","2021-09-05T08:34:48Z"
"","8719","Add HTTP/2 support to `NettyServer`","## üöÄ Feature Proposal  Add HTTP/2 support to the `NettyServer`  ## Motivation  So we can serve traffic over http/2  This should be a small change to `SeleniumHttpInitializer`","open","help wanted,","shs96c","2020-09-21T10:10:55Z","2022-05-27T09:20:07Z"
"","8149","Add CDP support to the python bindings","## üöÄ Feature Proposal  Add CDP support to the python bindings, do what it says on the tin ## Motivation  Because...  ## Example  No","closed","selenium-4,","AutomatedTester","2020-03-31T14:17:52Z","2021-09-05T09:12:42Z"
"","8164","Add CDP support to the JavaScript bindings","## üöÄ Feature Proposal  Add CDP support to the JavaScript bindings We could either integrate the existing node library for JS? Or code generate?  ## Motivation  Because...  ## Example  No","closed","selenium-4,","diemol","2020-04-06T20:34:20Z","2021-09-05T09:02:58Z"
"","8778","report","## üöÄ Feature Proposal  A clear and concise description of what the feature is.  ## Motivation  Please outline the motivation for the proposal.  ## Example  Please provide an example for how this feature would be used.","closed","needs-triaging,","rohitranaji","2020-10-12T22:27:19Z","2021-09-05T08:34:04Z"
"","8169","Interop between WebDriver and CDP elements and JS calls","## üöÄ Feature Proposal  @shs96c could you please add more details to this one?  ## Motivation  ...  ## Example  ...","closed","help wanted,","diemol","2020-04-06T21:43:41Z","2022-07-08T11:59:02Z"
"","8816","Add graphql mechanism for getting current slot for a session id","## üöÄ Feature Proposal  #8805 raised the fact that the old Grid API endpoint had a mechanism for getting the session information for a given session id. There's nothing similar for the current graphql endpoint, and there should be.  ## Motivation  I can imagine this being useful on the command line, as well as a building block for the new UI  ## Example  See above","closed","C-grid,","shs96c","2020-10-23T09:12:59Z","2021-09-05T08:33:53Z"
"","8854","Blue screen error in Windows 10","## üí¨I wrote a small script to open the browser in selenium but after executing the script after a few seconds my laptop runs into the bluescreen error My code is   from selenium import webdriver from time import *   #chrome_options = webdriver.ChromeOptions() #chrome_options.add_argument(""--incognito"")  Webdriver = webdriver.Edge(executable_path='E:\Python Projects\Google Meet auto\msedgedriver.exe' )  #driver.implicitly_wait(2) Webdriver.maximize_window()  Webdriver.get(""https://apps.google.com/meet/"")  Sign_URL=Webdriver.find_element_by_xpath(""/html/body/header/div[1]/div/div[3]/div[1]/div/span[1]/a"") Sign_URL.click()  I have windows 10 and chrome built-in Version 86.0.4240.183 (Official Build) (64-bit) Edge Version 86.0.622.63 (Official Build) (64-bit) and drivers are edgedriver_win64 and chromedriver_win32  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","vigneshRamanathan3105","2020-11-08T09:03:39Z","2021-09-05T08:31:34Z"
"","8728","Getting issue org.openqa.selenium.TimeoutException: timeout: Timed out receiving message from renderer: 19.083","## üí¨Getting TimeoutException  I have used the latest driver of chrome but I am getting error TimeoutException at the time of browser launch. I am using SSH connection to jumpbox for DB connection and after connection when the browser should get to launch it throws an exception. ![Screenshot from 2020-09-24 17-45-39](https://user-images.githubusercontent.com/62946151/94143659-c6f4d780-fe8d-11ea-9e2d-c4ab286a0ab6.png)","closed","","SushantQA","2020-09-24T12:19:56Z","2021-09-05T08:34:47Z"
"","7960","NativeEvents with Firefox in Selenium 3.141","## üí¨ Why native events remove in FirefoxDriver?  I'm used Firefox 45.8.0esr and Selenium 3.141.59 I send value in input and press Enter in my testcase. (in Windows press Enter is worked, on Linux system not worked, but in wireshark I see send key Enter) In log selenium (""driver"") I see calls fxdriver.SyntheticMouse.  How I can use Native Events in Selenium 3.141.59 version?","closed","","adzyk","2020-01-27T09:58:14Z","2020-02-28T07:12:45Z"
"","8799","Receiving ""connection refused"" while instantiating remote driver","## üí¨ Receiving ""connection refused"" while instantiating remote driver   I had this code running perviously and now its giving ""connection refused"".  ``` >>> driver = webdriver.Remote(desired_capabilities=webdriver.DesiredCapabilities.HTMLUNIT) Traceback (most recent call last):   File ""/usr/local/lib/python3.6/site-packages/urllib3/connection.py"", line 141, in _new_conn     (self.host, self.port), self.timeout, **extra_kw)   File ""/usr/local/lib/python3.6/site-packages/urllib3/util/connection.py"", line 83, in create_connection     raise err   File ""/usr/local/lib/python3.6/site-packages/urllib3/util/connection.py"", line 73, in create_connection     sock.connect(sa) ConnectionRefusedError: [Errno 111] Connection refused  During handling of the above exception, another exception occurred:  Traceback (most recent call last):   File ""/usr/local/lib/python3.6/site-packages/urllib3/connectionpool.py"", line 600, in urlopen     chunked=chunked)   File ""/usr/local/lib/python3.6/site-packages/urllib3/connectionpool.py"", line 356, in _make_request     conn.request(method, url, **httplib_request_kw)   File ""/usr/lib64/python3.6/http/client.py"", line 1254, in request     self._send_request(method, url, body, headers, encode_chunked)   File ""/usr/lib64/python3.6/http/client.py"", line 1300, in _send_request     self.endheaders(body, encode_chunked=encode_chunked)   File ""/usr/lib64/python3.6/http/client.py"", line 1249, in endheaders     self._send_output(message_body, encode_chunked=encode_chunked)   File ""/usr/lib64/python3.6/http/client.py"", line 1036, in _send_output     self.send(msg)   File ""/usr/lib64/python3.6/http/client.py"", line 974, in send     self.connect()   File ""/usr/local/lib/python3.6/site-packages/urllib3/connection.py"", line 166, in connect     conn = self._new_conn()   File ""/usr/local/lib/python3.6/site-packages/urllib3/connection.py"", line 150, in _new_conn     self, ""Failed to establish a new connection: %s"" % e) urllib3.exceptions.NewConnectionError: : Failed to establish a new connection: [Errno 111] Connection refused  During handling of the above exception, another exception occurred:  Traceback (most recent call last):   File """", line 1, in    File ""/usr/local/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py"", line 157, in __init__     self.start_session(capabilities, browser_profile)   File ""/usr/local/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py"", line 252, in start_session     response = self.execute(Command.NEW_SESSION, parameters)   File ""/usr/local/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py"", line 319, in execute     response = self.command_executor.execute(driver_command, params)   File ""/usr/local/lib/python3.6/site-packages/selenium/webdriver/remote/remote_connection.py"", line 374, in execute     return self._request(command_info[0], url, body=data)   File ""/usr/local/lib/python3.6/site-packages/selenium/webdriver/remote/remote_connection.py"", line 402, in _request     resp = http.request(method, url, body=body, headers=headers)   File ""/usr/local/lib/python3.6/site-packages/urllib3/request.py"", line 70, in request     **urlopen_kw)   File ""/usr/local/lib/python3.6/site-packages/urllib3/request.py"", line 148, in request_encode_body     return self.urlopen(method, url, **extra_kw)   File ""/usr/local/lib/python3.6/site-packages/urllib3/poolmanager.py"", line 321, in urlopen     response = conn.urlopen(method, u.request_uri, **kw)   File ""/usr/local/lib/python3.6/site-packages/urllib3/connectionpool.py"", line 678, in urlopen     **response_kw)   File ""/usr/local/lib/python3.6/site-packages/urllib3/connectionpool.py"", line 678, in urlopen     **response_kw)   File ""/usr/local/lib/python3.6/site-packages/urllib3/connectionpool.py"", line 678, in urlopen     **response_kw)   File ""/usr/local/lib/python3.6/site-packages/urllib3/connectionpool.py"", line 649, in urlopen     _stacktrace=sys.exc_info()[2])   File ""/usr/local/lib/python3.6/site-packages/urllib3/util/retry.py"", line 388, in increment     raise MaxRetryError(_pool, url, error or ResponseError(cause)) urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='127.0.0.1', port=4444): Max retries exceeded with url: /wd/hub/session (Caused by NewConnectionError(': Failed to establish a new connection: [Errno 111] Connection refused',)) ``` is there anything i'm missing here? code looks like  ``` browser = webdriver.Remote(desired_capabilities=webdriver.DesiredCapabilities.HTMLUNIT) browser.get('https://example.com') ```","closed","","AshwinNS","2020-10-16T13:37:06Z","2021-09-05T08:34:00Z"
"","7945","#Proxy_JSON_Object","## üí¨ Questions and Help There is page suggested which is not listed or contents required are not there. https://github.com/seleniumhq/selenium-google-code-issue-archive#Proxy_JSON_Object  Can some one please help on this  ?","closed","","abtwca","2020-01-19T07:05:48Z","2020-02-18T08:27:52Z"
"","8582","Message: move target out of bounds","## üí¨ Questions and Help My page has lots of checkboxes. I am trying to click all of them, one by one. I have all the web elements in an array. I am able to click two checkboxes that are on top of the page. To click the others I have to scroll down to the page and click and then scroll down and click and so on.  I am using the Action Driver. But still not able to Click. I am using Selenium Web driver and writing code in Python. specialties array has a web element that I locate .  specialties = [Benign_Hematology, Cardiology, Dermatology, Diabetes, Eye_Care, Gastroenterology, Oncology, Primary_Care, Respiratory_Medicine, Urology]     for item in specialties:         time.sleep(1)         actions = ActionChains(driver)         time.sleep(1)         actions.move_to_element(item).perform()         item.click()    ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","LuvSachdevaRFID","2020-07-28T19:44:25Z","2021-09-05T09:02:52Z"
"","8478","open firefox with a profile path [selenium webdriver NodeJS]","## üí¨ Questions and Help I'm trying to open the default profile in firefox. I have tried using: `options.setProfile(path);` but it didn't work  I have managed to open the profile using `options.addArguments()` but I couldn't control it. it gives ""permission denied"" or ""connection closed""  I'm using ""selenium-webdriver 4.0.0-alpha.5"" and ""firefox 78.0.1 (64-bit)"" on windows 10 ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","rachidelaid","2020-07-03T14:57:47Z","2021-09-05T09:12:40Z"
"","8024","iterating through table rows in list, only returns data from first first row","## üí¨ Questions and Help I using .NET Framework 4.7.2, Selenium WebDriver 3.141.0, with the Chrome  web driver, and the test suite is Nunit    I have  a jqgrid that that I retrieve the table data from into a webelement list object, when I print  the contents of the the list object to the console, each row of the table is printed accurately. When I try to read a column in the table it will print the first row accurately , but the column data in the next row will show the data from the first row.  the only unique and consistent  way of reading the","element in the grid is the ""aria-describedby""; `             IWebElement jqGridTable = driver.FindElement(By.Id(""SearchGrid""));             IWebElement tbody = jqGridTable.FindElement(By.TagName(""tbody""));             List rows = tbody.FindElements(By.TagName(""tr"")).ToList();                               bool first = true;                 foreach(IWebElement row in rows)                 {                     //first row is empty                     if (first)                     {                         first = false;                         continue;                                   }                     string result = row.FindElement(By.XPath(""//td[@aria-describedby=\""SearchGrid_Brand                                                                                                    Owner Name\""]"")).GetAttribute(""title"");                                   Console.WriteLine(result);                    Console.WriteLine(row.Text);                 }     ```","closed","","dereksmiley","2020-02-12T16:11:19Z"
"","8430","Timed out waiting for driver server to start. Build info: version: '3.141.59' in Windows 10","## üí¨ Questions and Help Hi I am experiencing this issue org.openqa.selenium.WebDriverException: Timed out waiting for driver server to start. Build info: version: '3.141.59' in windows 10 only across all the browsers need help to resolve this OS: Windows 10 java.version: '1.8.0_171' Selenium: 3.141.59 ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","AroraChalla","2020-06-17T01:44:40Z","2021-09-05T09:36:44Z"
"","7874","dotNet Core 2.1 when use proxy can not lanuch brower but  .Net frameWork  4.6.1 can lanuch","## üí¨ Questions and Help dotnet core when use proxy can not lanuch brower. unset Proxy can lanuch brower  Its says: The remote server returned an error: (504) Gateway Timeout.","closed","","PccCodesix","2019-12-19T03:14:49Z","2020-01-18T05:02:03Z"
"","7899","Error object reference not set to an instance of an object GetLog(LogType.Browser) C#","## üí¨ Questions and Help  ChromeOptions copts = new ChromeOptions();   copts.SetLoggingPreference(LogType.Browser, LogLevel.All);                     var service = ChromeDriverService.CreateDefaultService(browserpath);                     service.LogPath = browserpath+""\\chromedriver.log"";                     service.EnableVerboseLogging = true;                     WebDriver = new ChromeDriver(service, copts)  var logEntry = WebDriver.Manage().Logs.GetLog(LogType.Browser); ChromeDriver version 79.0.3945.3600 Please help!","closed","","manbadalyan","2019-12-30T12:55:16Z","2020-01-30T12:20:05Z"
"","8136","Screen record with JS","## üí¨ Questions and Help  I want to know if have some way to I do a screen record in Selenium using JavaScript. I saw this: http://roadtoautomation.blogspot.com/2013/03/screen-recording-video-of-java-webdiver.html, but I need to use JavaScript, not Java.  Can I do a screen record in JavaScript? If yes, how can I do it?","closed","","RuanExposito","2020-03-26T17:46:32Z","2020-04-25T19:13:27Z"
"","8827","npm publish","## üí¨ Questions and Help  i see the javascript code update recently, but haven't publish the latest version npm package.","closed","","Stngle","2020-10-29T07:14:17Z","2021-09-05T08:33:54Z"
"","8133","Are you sure it's a good idea to use `CompletableFuture` in `FluentWait` [4.0.0-alpha5]?","## üí¨ Questions and Help  I noticed that starting from 4.0.0, class `FluentWait` uses `CompletableFuture`. It means that all WebDriver calls will be executed in a separate thread.  It might cause problems because people often use `ThreadLocal`s for holding webdriver instance (or screenshots, or logs, or whatever else).   For example, some [Selenide tests are failing](https://github.com/selenide/selenide/pull/1099) with 4.0.0-alpha5. It's not a problem for us, we can solve this problem in Selenide. But probably other users might experience the same problem too.","closed","C-java,","asolntsev","2020-03-24T07:54:46Z","2021-09-05T08:27:40Z"
"","8137","C# Webdriver doesn't auto switch to new tab from link","## üí¨ Questions and Help  I have 2 tabs already opened and after when link blank target is opened and new tab show then Webdriver doesn't see content from this tab.","closed","","MESWEB","2020-03-26T19:24:30Z","2020-04-25T21:24:38Z"
"","8690","Use first available node instead of round-robin?","## üí¨ Questions and Help  I have 1 Selenium Hub and 2 Chrome nodes running on ports 5900 and 5901, respectively.  When I run automated tests, it dispatches the request to the node running at 5900. When the test finishes and I want to run it again, it dispatches to the node at port 5901. This means I have to keep two VNC viewers running, one for each node.  I would like Selenium Hub to always use 5900 if it's ""free"".  Is it possible to do so?  PS: I run two nodes because sometimes I run the tests in parallel.","closed","","Luc45","2020-09-11T12:33:53Z","2021-09-05T08:36:00Z"
"","8536","Dotnet. Missing LogType for performance","## üí¨ Questions and Help  Hey. I worked with some code and wanted to collect performance logs, but there is no needed LogType for that in [LogType.cs](https://github.com/SeleniumHQ/selenium/blob/941dc9c6b2e2aa4f701c1b72be8de03d4b7e996a/dotnet/src/webdriver/LogType.cs). But this attribute is [existed](https://github.com/SeleniumHQ/selenium/blob/941dc9c6b2e2aa4f701c1b72be8de03d4b7e996a/java/client/src/org/openqa/selenium/logging/LogType.java) in client for Java. Is there a reason why don't we have 'performance' in client for dotnet?  I just passed 'performance' as a string and it worked, but code looks inconsistent now.","closed","","0eu","2020-07-15T19:54:30Z","2021-09-05T09:03:00Z"
"","8843","StaleElementReferenceException is not ignored","## üí¨ Questions and Help  Hello! I tried to find any mentions of my problem in all resources, but no results. Please help. I have the next code:  web_element = WebDriverWait(driver, 30, ignored_exceptions=StaleElementReferenceException).until(EC.visibility_of_element_located((By.XPATH, locator)))  But when programme starts to execute this part, it fails immediately with StaleElementReferenceException. Programm doesn't wait 30 seconds and doesn't ignore the exception. As result, scripts continue running and fails only when it needs to find child element of web_element   I found out that in call of visibility_of_element_located(object), programme returns an element with this StaleElementReferenceException (return _element_if_visible(_find_element(driver, self.locator))). However I expected the script goes  to except StaleElementReferenceException   class visibility_of_element_located(object):     def __init__(self, locator):         self.locator = locator     def __call__(self, driver):         try:             return _element_if_visible(_find_element(driver, self.locator))         except StaleElementReferenceException:             return False  Can someday help me to understand  1) Why does the script not wait 30 seconds and fail immediately  2) Why does it return me element with StaleElementReferenceException and not go to  except StaleElementReferenceException  Thanks in advance","closed","","jpakv","2020-11-05T15:57:43Z","2021-09-05T08:31:36Z"
"","8438","cannot create temp dir for unpacking extensions","## üí¨ Questions and Help  cannot create temp dir for unpacking extensions  In Linux,my project in tomcat 8.5.   If I use root,it is normal. but while i use a  average user , it have the question.(Although i make tomcat chmod -R 777)   2020-06-15 10:18:50.180 [http-nio-8180-exec-5] INFO  com.jd.jr.risk.common.utils.ScreenshotUtil[175] - Generating Chrome driver (/export/chrome/chromedriver)... Starting ChromeDriver 83.0.4103.39 (ccbf011cb2d2b19b506d844400483861342c20cd-refs/branch-heads/4103@{#416}) on port 1024 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. 2020-06-15 10:18:50.499 [http-nio-8180-exec-5] ERROR com.jd.jr.risk.web.controller.DownController[109] - e=org.openqa.selenium.WebDriverException: unknown error: cannot create temp dir for unpacking extensions Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03' System info: host: 'YZ-222-23-133.h.chinabank.com.cn', ip: '10.222.23.133', os.name: 'Linux', os.arch: 'amd64', os.version: '3.10.0-693.el7.x86_64', java.version: '1.8.0_231' Driver info: driver.version: ChromeDriver remote stacktrace: #0 0x55eb9245a579   org.openqa.selenium.WebDriverException: unknown error: cannot create temp dir for unpacking extensions Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03' System info: host: 'YZ-222-23-133.h.chinabank.com.cn', ip: '10.222.23.133', os.name: 'Linux', os.arch: 'amd64', os.version: '3.10.0-693.el7.x86_64', java.version: '1.8.0_231' Driver info: driver.version: ChromeDriver remote stacktrace: #0 0x55eb9245a579   	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) 	at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62) 	at org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30) 	at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126) 	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) 	at java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958) 	at java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:126) 	at java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:499) 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:486) 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472) 	at java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:152) 	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) 	at java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:464) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:131) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:181) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:168) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:157) 	at com.jd.jr.risk.common.utils.ScreenshotUtil.generateChromeDriver(ScreenshotUtil.java:192) 	at com.jd.jr.risk.common.utils.ScreenshotUtil.generateWebDriver(ScreenshotUtil.java:150) 	at com.jd.jr.risk.common.utils.ScreenshotUtil.doScreenshot(ScreenshotUtil.java:108) 	at com.jd.jr.risk.service.impl.DownLoadServiceImpl.generateImages(DownLoadServiceImpl.java:136) 	at com.jd.jr.risk.web.controller.DownController.getDownloadImageFile(DownController.java:95) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) 	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) 	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105) 	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879) 	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) 	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) 	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) 	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) 	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) 	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) 	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) 	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) 	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) 	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) 	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123) 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) 	at com.jd.jr.risk.common.config.CorsConfiguration$1.doFilter(CorsConfiguration.java:55) 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) 	at org.springframework.boot.web.servlet.support.ErrorPageFilter.doFilter(ErrorPageFilter.java:128) 	at org.springframework.boot.web.servlet.support.ErrorPageFilter.access$000(ErrorPageFilter.java:66) 	at org.springframework.boot.web.servlet.support.ErrorPageFilter$1.doFilterInternal(ErrorPageFilter.java:103) 	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) 	at org.springframework.boot.web.servlet.support.ErrorPageFilter.doFilter(ErrorPageFilter.java:121) 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) 	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) 	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) 	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199) 	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) 	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:543) 	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) 	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81) 	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:678) 	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) 	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) 	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:609) 	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) 	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:810) 	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1623) 	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) 	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) 	at java.lang.Thread.run(Thread.java:748)","closed","","a11745","2020-06-19T08:19:27Z","2021-09-05T09:36:41Z"
"","8634","License of net.jcip.annotations in selenium-server-standalone-3.141.59.jar","## üí¨ Questions and Help  **short and crisp:** Is there a link to the CC BY 2.5 license or a copy of it used by the classes in selenium-server-standalone-3.141.59.jar\net\jcip\annotations\ inside the selenium-server-standalone-3.141.59.jar?  **long version:** The standalone server does contain as far as i can tell classes provided under AL 2.0 / CDDL 1.0 and CC BY 2.5. I could find copies of AL 2.0 and CDDL 1.0 inside the jar, but i was not able to find the  CC BY 2.5 or the link to it as required under 4. Restrictions / a) [link to the license](https://creativecommons.org/licenses/by/2.5/legalcode) Is there a link or a copy of the license?  Thanks in advance! J√∂rg","closed","","joerg1985","2020-08-19T13:11:17Z","2021-09-05T08:37:24Z"
"","8127","why always issue TypeError: __init__() missing 1 required positional argument: 'executable_path'","## üí¨ Questions and Help  ### Please note that this issue tracker is not a help form and this issue will be closed. driver = webdriver.Ie(executable_path='E:\Dropbox\17.Develop\0.Tools\web\IEDriverServer.exe')  Traceback (most recent call last):   File ""e:\Dropbox\17.Develop\2.Code\08.ÁΩëÁªú\selenium\selenium01.py"", line 3, in      driver = webdriver.Ie(   File ""E:\Dropbox\17.Develop\2.Code\08.ÁΩëÁªú\selenium\env\lib\site-packages\selenium\webdriver\ie\webdriver.py"", line 92, in __init__      service = Service() TypeError: __init__() missing 1 required positional argument: 'executable_path'  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","jasonyun","2020-03-22T14:09:49Z","2020-04-25T08:20:36Z"
"","8833","Console log after crash not reachable?","## üí¨ Questions and Help  ### Please note that this issue tracker is not a help form and this issue will be closed.  Hi,   I am having trouble getting console log after webdriver crashes. The reason for the crash is javascript and I want to debug my code using console log. However, apperently it's not possible. After the webdriver crashes all log is gone for some reason. I would like to be able reach out before the crash, but it's not async either, so I cannot reach the logs before execution of the javascript finishes.  I would like to see a workaround for this. I was unable to find anything useful on this topic.  Python: 3.7.7 Selenium: 3.141.0 Chromedriver: 85.0.4183.87","closed","","ekardon","2020-11-03T12:50:37Z","2021-09-05T08:33:52Z"
"","8450","chrome Unable to locate element:","## üí¨ Questions and Help  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see: win10 chrome 83.0.4103.97 chrome drive 78  in chrome there is a model-dialog box with confrim but in code it can not locate  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","ares5221","2020-06-23T08:37:55Z","2021-09-05T09:36:38Z"
"","8499","selenium.common.exceptions.WebDriverException: Message: 'geckodriver' executable may have wrong permissions.","## üí¨ Questions and Help  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group Traceback (most recent call last):   File ""./brut3k1t"", line 87, in      main()   File ""./brut3k1t"", line 76, in main     w.execute()   File ""/home/sbarasa77/brut3k1t/core/web.py"", line 39, in execute     if self.usercheck(self.username, self.service) == 1:   File ""/home/sbarasa77/brut3k1t/core/web.py"", line 48, in usercheck     driver = webdriver.Firefox()   File ""/usr/local/lib/python2.7/dist-packages/selenium-4.0.0a6.post2-py2.7.egg/selenium/webdriver/firefox/webdriver.py"", line 181, in __init__     self.service.start()   File ""/usr/local/lib/python2.7/dist-packages/selenium-4.0.0a6.post2-py2.7.egg/selenium/webdriver/common/service.py"", line 88, in start     os.path.basename(self.path), self.start_error_message) selenium.common.exceptions.WebDriverException: Message: 'geckodriver' executable may have wrong permissions.","closed","","sbarasa777","2020-07-10T10:22:45Z","2021-09-05T09:12:31Z"
"","8262","When i downloaded selenium from official website there were only two jar files after extracting","## üí¨ Questions and Help  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group  StackOverflow says that here I can find the 47 jar files... But I don't know how to download them...is it possible to get these in a zip format  I am Beginner i really don't understand most of the things and just follow the tutorual instructions","closed","","yatharthmaheshwari","2020-04-30T22:03:25Z","2021-09-05T09:44:07Z"
"","8853","pypi version doesn't appear to match github version","## üí¨ Questions and Help  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group   I am sure this must be discussed somewhere, because its been out of sync for over two years. I tried digging into issue and online posting to find out why, but couldn't find anything. I assume I'm missing something, and would greatly appreciate if someone could point me in the right direction.  GitHub [shows](https://github.com/SeleniumHQ/selenium/releases) latest version as **3.141.59** _December 19 2018_  PyPi [shows](https://pypi.org/project/selenium/) **3.141.00** _November 1 2018_  ``` $ pip install -U selenium Requirement already up-to-date: selenium in /home/USER/.virtualenvs/PROJECT/lib/python3.8/site-packages (3.141.0) ```","closed","","arderyp","2020-11-07T14:50:50Z","2021-09-05T08:31:34Z"
"","8821","Is there any way we can open chrome from selenium as another user programatically?","## üí¨ Questions and Help  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","utsavll0","2020-10-27T15:06:22Z","2021-09-05T08:33:56Z"
"","8791","Is webdriver compatible with the latest version of geckodriver v.026.0 and v0.27.0 which supports connecting to Firefox on Android from Windows?","## üí¨ Questions and Help  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","t3ch9","2020-10-14T20:46:02Z","2021-09-05T08:34:02Z"
"","8785","When will Selenium 4 be released? and what is the current progress?","## üí¨ Questions and Help  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","ReInventTheWheel","2020-10-14T10:56:18Z","2021-09-05T08:34:03Z"
"","8720","How do we go about this since it is no longer supported","## üí¨ Questions and Help  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","osagiobare","2020-09-21T15:51:41Z","2021-09-05T08:34:50Z"
"","8600","Some elements in interface - free mode have null values, which are normal if not used","## üí¨ Questions and Help  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","vvanglro","2020-08-04T09:30:51Z","2021-09-05T09:02:47Z"
"","8286","Selenium tests are broken with the Safari 13 release. Webdriver/SafariDriver is Unable to click on buttons on the page.","## üí¨ Questions and Help  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","sampadask","2020-05-08T12:33:12Z","2021-09-05T08:03:31Z"
"","7997","SafariDriver bug?","## üí¨ Questions and Help  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","jackeymason","2020-02-04T13:46:20Z","2020-03-10T19:33:52Z"
"","7878","how to check if sheet id is already been shared to user emails in gspread python","## üí¨ Questions and Help  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","UmairMubeen","2019-12-20T12:42:30Z","2020-01-19T14:47:43Z"
"","8844","StaleElementReferenceException  is not ignored","## üí¨ Questions and Help  ## üí¨ Questions and Help  Hello! I tried to find any mentions of my problem in all resources, but no results. Please help. I have the next code:  web_element = WebDriverWait(driver, 30, ignored_exceptions=StaleElementReferenceException).until(EC.visibility_of_element_located((By.XPATH, locator)))  But when programme starts to execute this part, it fails immediately with StaleElementReferenceException. Programm doesn't wait 30 seconds and doesn't ignore the exception. As result, scripts continue running and fails only when it needs to find child element of web_element   I found out that in call of visibility_of_element_located(object), programme returns an element with this StaleElementReferenceException (return _element_if_visible(_find_element(driver, self.locator))). However I expected the script goes  to except StaleElementReferenceException   class visibility_of_element_located(object):     def __init__(self, locator):         self.locator = locator     def __call__(self, driver):         try:             return _element_if_visible(_find_element(driver, self.locator))         except StaleElementReferenceException:             return False  Can someday help me to understand  1) Why does the script not wait 30 seconds and fail immediately  2) Why does it return me element with StaleElementReferenceException and not go to  except StaleElementReferenceException  Thanks in advance","closed","","jpakv","2020-11-05T16:07:49Z","2021-09-05T08:31:36Z"
"","8881","document","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","seyhagit","2020-11-17T07:26:32Z","2021-09-05T08:31:25Z"
"","8797","log","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","MHalter","2020-10-16T11:09:33Z","2021-09-05T08:34:00Z"
"","8792","elementid keep changing","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","moizgh","2020-10-15T03:09:32Z","2021-09-05T08:34:02Z"
"","8758","died","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","MDRobalo","2020-10-02T10:58:45Z","2021-09-05T08:34:43Z"
"","8732","class ChromeOptions","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","toantl","2020-09-25T03:18:31Z","2021-09-05T08:34:48Z"
"","8697","ie slow","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","gap401","2020-09-14T15:48:39Z","2021-09-05T08:35:51Z"
"","8685","The process started from chrome location","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","vtoxi","2020-09-09T20:17:42Z","2021-09-05T08:36:01Z"
"","8684","closed normally","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","vtoxi","2020-09-09T20:17:25Z","2021-09-05T08:36:01Z"
"","8675","webdriver not found","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","cleonard1261","2020-09-06T14:19:19Z","2021-09-05T08:36:04Z"
"","8662","Shadow DOM support not available with Selenium","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","avietlobo","2020-09-01T15:08:28Z","2021-09-05T08:37:15Z"
"","8641","incongnito","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","msingh-bcg","2020-08-24T13:40:20Z","2021-09-05T08:37:22Z"
"","8629","selenium-server-standalone","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","Autoprinter","2020-08-13T10:12:44Z","2021-09-05T08:37:28Z"
"","8616","Exception in thread ""main"" java.lang.NoClassDefFoundError: com/google/common/collect/ImmutableMap","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","ledinhit","2020-08-07T08:52:26Z","2021-09-05T08:37:31Z"
"","8537","F:\sftwre\Selenium-grid>java -Dwebdriver.chrome.driver=""F:\chromedriver.exe""-jar selenium-server-standalone-3.141.59.jar -role node -hub https://localhost:4443/grid/register          Error: Could not find or load main class selenium-server-standalone-3.141.59.jar","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","Sintu13","2020-07-15T20:48:16Z","2021-09-05T09:03:00Z"
"","8526","api","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","davidpmase","2020-07-15T07:33:10Z","2021-09-05T09:03:04Z"
"","8485","difference between keys.down and keys.arrow down","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","ishitamaru","2020-07-06T23:17:10Z","2021-09-05T09:12:37Z"
"","8481","ssl","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","Andy963","2020-07-05T04:40:15Z","2021-09-05T09:12:38Z"
"","8443","selenium","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","Erae11","2020-06-20T05:56:10Z","2021-09-05T09:36:40Z"
"","8436","location","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","Polmik","2020-06-18T09:38:38Z","2021-09-05T09:36:42Z"
"","8419","keys","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","kushagraag","2020-06-14T02:57:40Z","2021-09-05T09:36:47Z"
"","8417","user-data-dir","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","mengluo0107","2020-06-13T02:44:23Z","2021-09-05T09:36:47Z"
"","8388","page timeout","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","avarghese-snaplogic","2020-06-04T17:27:07Z","2021-09-05T09:36:52Z"
"","8349","js","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","moshe-b","2020-05-27T10:22:19Z","2021-09-05T09:44:00Z"
"","8332","chromedriver","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","markrason","2020-05-21T11:34:56Z","2021-09-05T09:44:07Z"
"","8316","selenium grid","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","nguyenhien02","2020-05-18T01:28:36Z","2021-09-05T10:02:47Z"
"","8269","README.md","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","moradutf","2020-05-04T21:30:16Z","2021-09-05T10:20:19Z"
"","8256","how do i add chromedriver to path","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","eoyzyc","2020-04-28T08:43:26Z","2021-09-05T10:20:23Z"
"","8248","test functionality","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","19952104","2020-04-27T07:27:54Z","2021-09-05T10:20:24Z"
"","8214","Is any please give solution for this issue","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","sandeepbonagiri","2020-04-18T10:53:44Z","2020-05-20T19:05:21Z"
"","8200","iedriver","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","cvaleu","2020-04-15T16:58:05Z","2020-05-20T19:23:07Z"
"","8199","webdrive","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","irisda","2020-04-14T16:47:53Z","2020-05-20T20:44:57Z"
"","8198","browser.sleep(1000)","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","irisda","2020-04-14T16:47:44Z","2020-05-20T20:34:14Z"
"","8151","internet explorer driver","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","somandubey","2020-04-01T10:32:37Z","2020-05-05T21:21:24Z"
"","8144","acceptInsecureCerts","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","linuxpakistan","2020-03-30T05:33:26Z","2020-05-05T21:24:11Z"
"","8031","aa","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","jimmygamal","2020-02-17T00:29:17Z","2020-03-18T01:44:50Z"
"","8014","it might be child of iframe/svg/pseudo/comment & it don't support xpath so xpath can't be generated for this element","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","pnarayanan20","2020-02-10T06:48:45Z","2020-03-11T07:57:35Z"
"","7991","htttp// --port=5720/ in selenium webdriver","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","avadhshr","2020-02-03T17:44:13Z","2020-03-10T19:43:05Z"
"","7981","timeour","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","Ankit3794","2020-01-29T12:33:53Z","2020-02-28T13:31:27Z"
"","7978","Exception in thread ""main"" java.lang.IllegalStateException: The driver executable does not exist: C:\\.Program File.Chromedriver 	at com.google.common.base.Preconditions.checkState(Preconditions.java:585)","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","Github922","2020-01-29T10:56:58Z","2020-02-28T11:24:42Z"
"","7947","element not interactable","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","ajaynetqom","2020-01-20T08:18:16Z","2020-02-21T22:13:50Z"
"","7933","proxy","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","tedddybear","2020-01-14T02:09:14Z","2020-02-13T03:13:22Z"
"","7927","user-data-dir","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","cagataydagnik","2020-01-10T14:49:21Z","2020-02-09T17:53:46Z"
"","7875","how to keep the browser open  even after completely testing of selenium code in python","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","UmairMubeen","2019-12-19T13:44:57Z","2020-01-18T14:31:37Z"
"","8748","ERROR webdriver: Request failed with status 500 due to unknown error: unknown error: Failed to create Chrome process.","## üí¨ Questions & Help  Dear Experts, I am caught up in a peculiar situation. Every time I am trying to run my simple Selenium Webdriver case, it throws the below error-  `ERROR webdriver: Request failed with status 500 due to unknown error: unknown error: Failed to create Chrome process.` `[0-0]  Error:  Failed to create session. unknown error: Failed to create Chrome process.` ` [0-0] 2020-09-30T13:32:08.653Z ERROR webdriver: unknown error: unknown error: Failed to create Chrome process. `  Here is the entire error stack for your reference -  ``` C:\dev1\testnodeproj>npx wdio wdio.conf.js Execution of 2 spec files started at 2020-09-30T13:32:06.090Z 2020-09-30T13:32:06.127Z INFO @wdio/cli:launcher: Run onPrepare hook Starting ChromeDriver 85.0.4183.87 (cd6713ebf92fa1cacc0f1a598df280093af0c5d7-refs/branch-heads/4183@{#1689}) on port 9515 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. 2020-09-30T13:32:06.862Z INFO @wdio/cli:launcher: Run onWorkerStart hook 2020-09-30T13:32:06.863Z INFO @wdio/cli:launcher: Run onWorkerStart hook 2020-09-30T13:32:06.866Z INFO @wdio/local-runner: Start worker 0-0 with arg: wdio.conf.js 2020-09-30T13:32:06.875Z INFO @wdio/local-runner: Start worker 0-1 with arg: wdio.conf.js [0-1] 2020-09-30T13:32:07.931Z INFO @wdio/local-runner: Run worker command: run [0-1] 2020-09-30T13:32:07.949Z INFO webdriverio: Initiate new session using the ./protocol-stub protocol [0-0] 2020-09-30T13:32:07.972Z INFO @wdio/local-runner: Run worker command: run [0-0] 2020-09-30T13:32:07.993Z INFO webdriverio: Initiate new session using the ./protocol-stub protocol [0-1] RUNNING in chrome - C:\dev1\testnodeproj\test\specs\example.e2e.js [0-0] RUNNING in chrome - C:\dev1\testnodeproj\test\specs\basic.js [0-1] 2020-09-30T13:32:08.284Z INFO webdriverio: Initiate new session using the webdriver protocol [0-1] 2020-09-30T13:32:08.286Z INFO webdriver: [POST] http://localhost:9515/session [0-1] 2020-09-30T13:32:08.286Z INFO webdriver: DATA {   capabilities: {     alwaysMatch: { browserName: 'chrome', acceptInsecureCerts: true },     firstMatch: [ {} ]   },   desiredCapabilities: { browserName: 'chrome', acceptInsecureCerts: true } } [0-0] 2020-09-30T13:32:08.308Z INFO webdriverio: Initiate new session using the webdriver protocol [0-0] 2020-09-30T13:32:08.312Z INFO webdriver: [POST] http://localhost:9515/session [0-0] 2020-09-30T13:32:08.312Z INFO webdriver: DATA {   capabilities: {     alwaysMatch: { browserName: 'chrome', acceptInsecureCerts: true },     firstMatch: [ {} ]   },   desiredCapabilities: { browserName: 'chrome', acceptInsecureCerts: true } } [0-1] 2020-09-30T13:32:08.409Z WARN webdriver: Request failed with status 500 due to unknown error: Failed to create Chrome process. [0-1] 2020-09-30T13:32:08.409Z INFO webdriver: Retrying 1/3 2020-09-30T13:32:08.409Z INFO webdriver: [POST] http://localhost:9515/session 2020-09-30T13:32:08.409Z INFO webdriver: DATA {   capabilities: {     alwaysMatch: { browserName: 'chrome', acceptInsecureCerts: true },     firstMatch: [ {} ]   },   desiredCapabilities: { browserName: 'chrome', acceptInsecureCerts: true } } [0-0] 2020-09-30T13:32:08.415Z WARN webdriver: Request failed with status 500 due to unknown error: Failed to create Chrome process. [0-0] 2020-09-30T13:32:08.415Z INFO webdriver: Retrying 1/3 2020-09-30T13:32:08.416Z INFO webdriver: [POST] http://localhost:9515/session 2020-09-30T13:32:08.416Z INFO webdriver: DATA {   capabilities: {     alwaysMatch: { browserName: 'chrome', acceptInsecureCerts: true },     firstMatch: [ {} ]   },   desiredCapabilities: { browserName: 'chrome', acceptInsecureCerts: true } } [0-1] 2020-09-30T13:32:08.494Z WARN webdriver: Request failed with status 500 due to unknown error: Failed to create Chrome process. [0-1] 2020-09-30T13:32:08.494Z INFO webdriver: Retrying 2/3 2020-09-30T13:32:08.494Z INFO webdriver: [POST] http://localhost:9515/session 2020-09-30T13:32:08.494Z INFO webdriver: DATA {   capabilities: {     alwaysMatch: { browserName: 'chrome', acceptInsecureCerts: true },     firstMatch: [ {} ]   },   desiredCapabilities: { browserName: 'chrome', acceptInsecureCerts: true } } [0-0] 2020-09-30T13:32:08.505Z WARN webdriver: Request failed with status 500 due to unknown error: Failed to create Chrome process. [0-0] 2020-09-30T13:32:08.505Z INFO webdriver: Retrying 2/3 2020-09-30T13:32:08.505Z INFO webdriver: [POST] http://localhost:9515/session 2020-09-30T13:32:08.505Z INFO webdriver: DATA {   capabilities: {     alwaysMatch: { browserName: 'chrome', acceptInsecureCerts: true },     firstMatch: [ {} ]   },   desiredCapabilities: { browserName: 'chrome', acceptInsecureCerts: true } } [0-0] 2020-09-30T13:32:08.569Z WARN webdriver: Request failed with status 500 due to unknown error: Failed to create Chrome process. [0-0] 2020-09-30T13:32:08.569Z INFO webdriver: Retrying 3/3 2020-09-30T13:32:08.569Z INFO webdriver: [POST] http://localhost:9515/session 2020-09-30T13:32:08.569Z INFO webdriver: DATA {   capabilities: {     alwaysMatch: { browserName: 'chrome', acceptInsecureCerts: true },     firstMatch: [ {} ]   },   desiredCapabilities: { browserName: 'chrome', acceptInsecureCerts: true } } [0-1] 2020-09-30T13:32:08.578Z WARN webdriver: Request failed with status 500 due to unknown error: Failed to create Chrome process. [0-1] 2020-09-30T13:32:08.578Z INFO webdriver: Retrying 3/3 2020-09-30T13:32:08.578Z INFO webdriver: [POST] http://localhost:9515/session 2020-09-30T13:32:08.578Z INFO webdriver: DATA {   capabilities: {     alwaysMatch: { browserName: 'chrome', acceptInsecureCerts: true },     firstMatch: [ {} ]   },   desiredCapabilities: { browserName: 'chrome', acceptInsecureCerts: true } } [0-0] 2020-09-30T13:32:08.653Z ERROR webdriver: Request failed with status 500 due to unknown error: unknown error: Failed to create Chrome process. [0-0]  Error:  Failed to create session. unknown error: Failed to create Chrome process. [0-0] 2020-09-30T13:32:08.653Z ERROR webdriver: unknown error: unknown error: Failed to create Chrome process.     at getErrorFromResponseBody (C:\dev1\testnodeproj\node_modules\webdriver\build\utils.js:121:10)     at WebDriverRequest._request (C:\dev1\testnodeproj\node_modules\webdriver\build\request.js:149:56)     at processTicksAndRejections (internal/process/task_queues.js:97:5)     at async startWebDriverSession (C:\dev1\testnodeproj\node_modules\webdriver\build\utils.js:41:16)     at async Function.newSession (C:\dev1\testnodeproj\node_modules\webdriver\build\index.js:44:23)     at async remote (C:\dev1\testnodeproj\node_modules\webdriverio\build\index.js:75:20)     at async Runner._startSession (C:\dev1\testnodeproj\node_modules\@wdio\runner\build\index.js:204:50)     at async Runner._initSession (C:\dev1\testnodeproj\node_modules\@wdio\runner\build\index.js:173:21)     at async Runner.run (C:\dev1\testnodeproj\node_modules\@wdio\runner\build\index.js:91:15) 2020-09-30T13:32:08.654Z ERROR @wdio/runner: Error: Failed to create session. unknown error: Failed to create Chrome process.     at startWebDriverSession (C:\dev1\testnodeproj\node_modules\webdriver\build\utils.js:45:11)     at processTicksAndRejections (internal/process/task_queues.js:97:5) [0-1] 2020-09-30T13:32:08.659Z ERROR webdriver: Request failed with status 500 due to unknown error: unknown error: Failed to create Chrome process. 2020-09-30T13:32:08.659Z ERROR webdriver: unknown error: unknown error: Failed to create Chrome process.     at getErrorFromResponseBody (C:\dev1\testnodeproj\node_modules\webdriver\build\utils.js:121:10)     at WebDriverRequest._request (C:\dev1\testnodeproj\node_modules\webdriver\build\request.js:149:56)     at processTicksAndRejections (internal/process/task_queues.js:97:5)     at async startWebDriverSession (C:\dev1\testnodeproj\node_modules\webdriver\build\utils.js:41:16)     at async Function.newSession (C:\dev1\testnodeproj\node_modules\webdriver\build\index.js:44:23)     at async remote (C:\dev1\testnodeproj\node_modules\webdriverio\build\index.js:75:20)     at async Runner._startSession (C:\dev1\testnodeproj\node_modules\@wdio\runner\build\index.js:204:50)     at async Runner._initSession (C:\dev1\testnodeproj\node_modules\@wdio\runner\build\index.js:173:21)     at async Runner.run (C:\dev1\testnodeproj\node_modules\@wdio\runner\build\index.js:91:15) 2020-09-30T13:32:08.660Z ERROR @wdio/runner: Error: Failed to create session. unknown error: Failed to create Chrome process.     at startWebDriverSession (C:\dev1\testnodeproj\node_modules\webdriver\build\utils.js:45:11)     at processTicksAndRejections (internal/process/task_queues.js:97:5) [0-1]  Error:  Failed to create session. unknown error: Failed to create Chrome process. [0-0] FAILED in chrome - C:\dev1\testnodeproj\test\specs\basic.js [0-1] FAILED in chrome - C:\dev1\testnodeproj\test\specs\example.e2e.js 2020-09-30T13:32:08.776Z INFO @wdio/cli:launcher: Run onComplete hook  Spec Files:      0 passed, 2 failed, 2 total (100% completed) in 00:00:02  2020-09-30T13:32:08.779Z INFO @wdio/local-runner: Shutting down spawned worker 2020-09-30T13:32:09.032Z INFO @wdio/local-runner: Waiting for 0 to shut down gracefully 2020-09-30T13:32:09.033Z INFO @wdio/local-runner: shutting down ```  My browser & tests were working fine a few weeks back.   But after updating my browser to the latest chrome version, I started getting the above error. I then decided to try a rather simple setup to isolate the issue and tried the below link to set up a small project to run a quick UI test- `https://webdriver.io/docs/gettingstarted.html` and faced the exact same error.  I have the latest chrome version installed. and I have not changed any permission explicitly.   Yet, if you see that I can cross-check anything in my system, like permission, firewall etc...please suggest. It will be a great help.  Thanks in advance Akshat","closed","","akshatvolvocars","2020-09-30T15:30:38Z","2021-09-05T08:33:59Z"
"","8197","can't kill an exited process (Selenium::WebDriver::Error::UnknownError)._Ruby+Capybara+Firefox+Linux","## üí¨ I'm Working with Ruby+Capybara+Firefox for automated tests I'm getting the error below, when running a feature cucumber, using ruby+capybara+firefox on Linux  _invalid argument: can't kill an exited process (Selenium::WebDriver::Error::UnknownError)_  ## system specifications are below: DISTRIB_ID=Ubuntu DISTRIB_RELEASE=19.04 capybara (3.32.1, 3.31.0, 3.30.0, 3.29.0, 3.12.0, 2.18.0) capybara-selenium (0.0.6) chromedriver-helper (2.1.1) geckodriver-helper (0.24.0) selenium-webdriver (3.142.7, 3.142.6) webdriver-firefox (0.0.15) webdrivers (4.2.0, 4.1.3)  ## code snippet ` require ""selenium-webdriver"" require ""capybara""   --PTO1 Capybara.register_driver :selenium do |app|     Capybara::Selenium::Driver.new(app, :browser => :firefox) end  --PT02 Capybara.configure do |config|     config.default_driver = :selenium      config.app_host = ""https://www.myhost.com""     config.default_max_wait_time = 30 end `  IF I remove the first part of the code (--PTO1). I'm getting the ERROR: _no driver called :selenium was found, available drivers: :rack_test, :selenium_headless, :selenium_chrome, :selenium_chrome_headless (Capybara::DriverNotFoundError)_","closed","","shluh","2020-04-14T00:33:46Z","2020-05-20T20:56:10Z"
"","8383","Timeouts in selenium while loading a URL","## üí• Regression Report Selenium UI Timeout after 60 seconds while making a HTTP call to an internal page. OpenQA.Selenium.Support.UI.DefaultWait`1 .ThrowTimeoutException(String exceptionMessage, Exception lastException)   This happens sporadically but has consistently been happening on one of the test servers today.   I don't believe this is an issue specific to Geckodriver or Chromedriver because we are seeing this timeout issue across both platforms which leads me to believe it's something specific to Selenium.     ## Last working Selenium version  Worked up to version: 3.141.0   Stopped working in version: 3.141.0  ## To Reproduce    Detailed steps to reproduce the behavior:  ## Expected behavior  A clear and concise description of what you expected to happen.  ## Test script reproducing this issue (when applicable) ```                if (firefoxInstall)                 {                     string firefoxManifestFile = Path.Combine(manifestPath, ""Firefox"", manifestFileName);                      //Read the firefox manifest file to get the browser extension name                      EnterpriseHostManifest manifest = JsonConvert.DeserializeObject(File.ReadAllText(firefoxManifestFile));                      //Dependent on the manifest file structure. But if that changes, the canary will also change and that is expected                     string firefoxExtensionName = manifest.AllowedExtensions[0];                      //Assume one browser profile per test machine. Not built to test multiple browser profiles.                     string pathToCurrentUserProfiles = Path.Combine(Environment.ExpandEnvironmentVariables(""%APPDATA%""), @""Mozilla\Firefox\Profiles"");                     string[] pathsToProfiles = Directory.GetDirectories(pathToCurrentUserProfiles);                     string pathToBrowserExtension = Path.Combine(pathsToProfiles[0], ""extensions"", String.Concat(firefoxExtensionName, "".xpi""));                      //Check if firefox extension is installed                      if (!File.Exists(pathToBrowserExtension))                     {                         FirefoxInfrastructure = false;                     }                     else                     {                         FirefoxProfile profile = new FirefoxProfile(pathsToProfiles[0]);                         FirefoxOptions options = new FirefoxOptions()                         {                             Profile = profile,                                                     };                 firefoxDriver = new FirefoxDriver(""C:\\Path"", options, TimeSpan.FromSeconds(180));                 WebDriverWait wait = new WebDriverWait(driver, new TimeSpan(0, 0, 180)); ---> Times out here                 driver.Navigate().GoToUrl(homePage);  ```  ## Environment  OS: Windows 10 Browser:  Chrome and Firefox  Browser version:  firefox.: 68.8.0 esr, Chrome: 83.0.4103.61 Browser Driver version: e.g.: ChromeDriver 83.0.0, GeckoDriver  Language Bindings version: e.g.: C# 0.24.0 (Firefox) Selenium Grid version (if applicable):","closed","R-awaiting answer,","rj-max","2020-06-03T00:17:19Z","2021-09-05T09:12:39Z"
"","8524","File Uploads Don't Work with Server","## üí• Regression Report Note: I've returned the Ruby tests to testing remote commands against the server built from current code, rather than downloading latest release.  It appears that the server is sending files to `se/file` endpoint of the driver rather than saving the encoded info and sending the path to the driver. Not sure how server is parsing if the destination is an endpoint or another intermediary node.  ## Last working Selenium version 3.141.52  ## Stopped working in version: 4.x  ## To Reproduce This spec is failing when run with remote driver: https://github.com/SeleniumHQ/selenium/blob/dd7090c/rb/spec/integration/selenium/webdriver/remote/element_spec.rb#L33  `./go //rb:remote-chrome-test`  ## Log ``` 2020-07-09 22:15:30 INFO Selenium -> POST session/1eacf2419fce243cde8ef36d3a7efbc7/se/file 2020-07-09 22:15:30 INFO Selenium    >>> http://127.0.0.1:4445/wd/hub/session/1eacf2419fce243cde8ef36d3a7efbc7/se/file | {""file"":} 2020-07-09 22:15:30 INFO Selenium <- {""value"":{""error"":""unknown command"",""message"":""unknown command: unknown command: session/1eacf2419fce243cde8ef36d3a7efbc7/se/file"",""stacktrace"": }} ```  ## Expected Behavior  Expect File to be successfully uploaded & spec to pass  ## Actual Behavior Chrome: ```      Selenium::WebDriver::Error::UnknownCommandError:        unknown command: unknown command: session/d44106eddefb50d91ce603e6434a6ac1/se/file      # 0   chromedriver                        0x0000000100c87e99 chromedriver + 4808345 ...      # 14  ???                                 0x0000000000000002 0x0 + 2 ``` Firefox: ```  Selenium::WebDriver::Error::WebDriverError:        unexpected response, code=405, content-type=""text/plain""        HTTP method not allowed ```  ## Environment  OS: All Browser: All Language Bindings version: Trunk Selenium Grid version: Trunk","closed","needs-triaging,","titusfortner","2020-07-14T23:56:00Z","2021-09-05T07:50:14Z"
"","8626","FirefoxProfile fp = new FirefoxProfile(); fails with Cannot find a file named \bin\webdriver_prefs.json' or an embedded resource with the id 'webdriver_preferences.json'.","## üí• Regression Report Cannot find a file named 'D:\xxx\xxxx\x\xxxx\bin\webdriver_prefs.json' or an embedded resource with the id 'webdriver_preferences.json'.    at OpenQA.Selenium.Internal.ResourceUtilities.GetResourceStream(String fileName, String resourceId)    at OpenQA.Selenium.Firefox.FirefoxProfile.ReadDefaultPreferences()    at OpenQA.Selenium.Firefox.FirefoxProfile..ctor(String profileDirectory, Boolean deleteSourceOnClean)    at OpenQA.Selenium.Firefox.FirefoxProfile..ctor(String profileDirectory)    at OpenQA.Selenium.Firefox.FirefoxProfile..ctor() A clear and concise description of what the regression is.   -->   Worked up to version: Selenium.WebDriver.4.0.0-alpha01  Stopped working in version: Selenium.WebDriver.4.0.0-alpha02  ## To Reproduce public void TestFirefoxVersion()         {             FirefoxProfile fp = new FirefoxProfile();             var options = new FirefoxOptions             {                 Profile = fp,                 BrowserExecutableLocation = ""C:\\Program Files (x86)\\Mozilla Firefox\\firefox.exe"",                              };             IWebDriver driver = new FirefoxDriver(""path to gecko"", options);              Thread.Sleep(10000);          }  Tried with all latest Gecko versions  ## Environment  OS: Windows 10 Browser: Firefox, FirefoxPortable Browser version: Firefox 78.0.2 Browser Driver version: GeckoDriver 0.24 --> Language Bindings C#","closed","needs-triaging,","PMSelenium","2020-08-12T12:38:41Z","2021-09-05T08:37:26Z"
"","8017","NoSuchWindowException when using chrome v80 and chromedriver v80.","## üí• Regression Report  This morning, I use Chrome79 and ChromeDriver78 and everything works just fine. Then I upgrade Chrome to version 80, then i had to upgrade ChromeDriver to v80 as well. Then my scripts stopped working.....  I use selenium to automate a job. The webpage has 3 iframes, i need to switch to the second one. code below works on ChromeDriver78/79, but not on version 80. ```         WebDriverWait(self.driver, 160, 0.5).until(EC.frame_to_be_available_and_switch_to_it(             (By.CSS_SELECTOR,""iframe[name^=canvas]"")),             ""TimeOutError: 160s, frame_to_be_available_and_switch_to_it(canvas iframe)""         ) ```  I then tried to switch to iframe directly, failed as well, this is expected because iframe may need time to be ready to switch to. `self.driver.switch_to.frame(self.driver.find_elements_by_tag_name(""iframe"")[1])`  ``` Traceback (most recent call last):   File ""C:/Users/huangjie/PycharmProjects/ETautomation/module/web_check.py"", line 515, in      c.login()   File ""C:/Users/huangjie/PycharmProjects/ETautomation/module/web_check.py"", line 106, in login     self.driver.switch_to.frame(self.driver.find_elements_by_tag_name(""iframe"")[1])   File ""C:\Python\Python35\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 546, in find_elements_by_tag_name     return self.find_elements(by=By.TAG_NAME, value=name)   File ""C:\Python\Python35\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 1007, in find_elements     'value': value})['value'] or []   File ""C:\Python\Python35\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 321, in execute     self.error_handler.check_response(response)   File ""C:\Python\Python35\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.NoSuchWindowException: Message: no such window   (Session info: chrome=80.0.3987.87) ``` I then choose to sleep 60s before switch to the iframe directly. It works then!!!!! ***Here comes the question:*** In the EC(expected condition, the original pieces of code), I gave it 160 second!!! I tried many times, all failed. What's more, there also times this switch to doesnot throw any error, but the next step, another operationÔºàusing expected conditions to make sure one element is displayed, it has 600secondsÔºâ on that iframe shows error ""No Such Window"". ***Obviously,  it throw error immediately instead of waiting and continue trying for 160s or 600s.*** ``` Traceback (most recent call last):   File ""C:\Users\niulx2\Documents\ETautomation\bin\bin.py"", line 71, in      c.login()   File ""C:\Users\niulx2\Documents\ETautomation\module\web_check.py"", line 106, in login     WebDriverWait(self.driver, 600,0.5).until(   File ""C:\Users\niulx2\AppData\Local\Programs\Python\Python38\lib\site-packages\selenium\webdriver\support\wait.py"", line 71, in until     value = method(self._driver)   File ""C:\Users\niulx2\AppData\Local\Programs\Python\Python38\lib\site-packages\selenium\webdriver\support\expected_conditions.py"", line 297, in __call__     element = visibility_of_element_located(self.locator)(driver)   File ""C:\Users\niulx2\AppData\Local\Programs\Python\Python38\lib\site-packages\selenium\webdriver\support\expected_conditions.py"", line 128, in __call__     return _element_if_visible(_find_element(driver, self.locator))   File ""C:\Users\niulx2\AppData\Local\Programs\Python\Python38\lib\site-packages\selenium\webdriver\support\expected_conditions.py"", line 415, in _find_element     raise e   File ""C:\Users\niulx2\AppData\Local\Programs\Python\Python38\lib\site-packages\selenium\webdriver\support\expected_conditions.py"", line 411, in _find_element     return driver.find_element(*by)   File ""C:\Users\niulx2\AppData\Local\Programs\Python\Python38\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 976, in find_element     return self.execute(Command.FIND_ELEMENT, {   File ""C:\Users\niulx2\AppData\Local\Programs\Python\Python38\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 321, in execute     self.error_handler.check_response(response)   File ""C:\Users\niulx2\AppData\Local\Programs\Python\Python38\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.NoSuchWindowException: Message: no such window   (Session info: chrome=80.0.3987.87)  ``` code: ```         WebDriverWait(self.driver, 600,0.5).until(             EC.element_to_be_clickable((                 By.CSS_SELECTOR,                 ""#overviewItemsRepeater > div.repeater-footer.repeater-viewport-subtrahend > div.repeater-footer-left > div > div > button""             )),             ""TimeOutError: 600s, element_to_be_clickable(pager button)""         ) ```  I suspect this is related to ChromeDriver release, please advise this fix should be on ChromeDriver or Selenium. ### ChromeDriver 80 release https://chromedriver.chromium.org/downloads :  ChromeDriver 80.0.3987.16 Supports Chrome version 80 Fixed Load page was aborted when using a proxy. ***Chromedriver now waits for Current frame to load.*** ChromeDriver log will include the port used by the driver. Enabled SetGeoLocation for w3c mode. Added missing Alert text for UnexpectedAlertOpen status. Improved message when CRX2 Extension is loaded. Fixed a potential race condition in ExecuteGetPageSource. ChromeDriver will add --ignore-certificate-errors flag when acceptInsecureCerts capability is true Updated the error message and return status for no such execution context Fixed: ChromeDriver may block indefinitely while waiting for pending navigation. Added SameSite attribute to AddCookie and GetCookie. For more details, please see the release notes.  Steps to reproduce : switch to any iframe on a webpage.    See ChromeDriver log: [qc1.log](https://github.com/SeleniumHQ/selenium/files/4179928/qc1.log)      ## Last working Selenium version  Worked up to version:3.141.0  Stopped working in version:3.141.0  ## To Reproduce    Detailed steps to reproduce the behavior:  ## Expected behavior  continue trying for 160s    ## Environment  OS: Windows 10 Browser: Chrome Browser version: Version 80.0.3987.87 (Official Build) (64-bit) Browser Driver version: Version 80.0.3987.87  Language Bindings version: python3 Selenium Grid version (if applicable):","closed","needs-triaging,","h888866j","2020-02-10T09:48:21Z","2021-09-05T10:20:25Z"
"","8458","selenium-webdriver/testing module no longer available in npm package","## üí• Regression Report  The `selenium-webdriver/testing` module is publicly documented but as of this commit (https://github.com/SeleniumHQ/selenium/commit/2d53be8ddb4b17226dc1c1dbcd9045a144ae8f8c#) it's no longer included in the npm package due to the `testing/` directory being listed in the `.npmignore`.  It's not clear whether the intention was to remove the module but the docs weren't updated, or if this is a regression.    ## Last working Selenium version  Worked up to version: selenium-4.0.0-alpha-5  Stopped working in version: selenium-4.0.0-alpha-6  ## To Reproduce    1. Install selenium-4.0.0-alpha-6 2. Run `node` and try to import the module, eg.     ```js     const testing = require('selenium-webdriver/testing');     ```  ## Expected behavior  Module not found error, example:  ``` Thrown: Error: Cannot find module 'selenium-webdriver/testing' Require stack: -      at Function.Module._resolveFilename (internal/modules/cjs/loader.js:772:15)     at Function.Module._load (internal/modules/cjs/loader.js:677:27)     at Module.require (internal/modules/cjs/loader.js:830:19)     at require (internal/modules/cjs/helpers.js:68:18) {   code: 'MODULE_NOT_FOUND',   requireStack: [ '' ] } ```  ## Environment  Language Bindings version: Node selenium-4.0.0-alpha-6, selenium-4.0.0-alpha-7","closed","needs-triaging,","robbradyire","2020-06-25T10:59:36Z","2021-09-05T08:34:51Z"
"","8862","OpenQA.Selenium.DevTools.DevToolsSession.Network removed with version 4.0.0-alpha07","## üí• Regression Report  OpenQA.Selenium.DevTools.DevToolsSession.Network was removed with version 4.0.0-alpha07.  ## Last working Selenium version  Worked up to version: 4.0.0-alpha05  Stopped working in version: 4.0.0-alpha07  ## Example code which is not longer working because of this:  ``` OpenQA.Selenium.DevTools.DevToolsSession devTools = ((ChromeDriver)driver).CreateDevToolsSession(); await devTools.Network.Enable(new OpenQA.Selenium.DevTools.Network.EnableCommandSettings(), millisecondsTimeout: 10000).ConfigureAwait(false); await devTools.SendCommand(new OpenQA.Selenium.DevTools.Network.SetCacheDisabledCommandSettings() { 	CacheDisabled = true }, millisecondsTimeout: 5000, throwExceptionIfResponseNotReceived: false).ConfigureAwait(false); await devTools.Network.ClearBrowserCache(millisecondsTimeout: 5000, throwExceptionIfResponseNotReceived: false).ConfigureAwait(false); ```  OS: Windows 10 Browser: Chrome Language Bindings version: .net core 3.1","closed","needs-triaging,","JMan7777","2020-11-11T02:42:24Z","2021-09-05T08:31:28Z"
"","8757","FirefoxProfile fp = new FirefoxProfile(); fails with Cannot find a file named \bin\webdriver_prefs.json' or an embedded resource with the id 'webdriver_preferences.json'.","## üí• Regression Report  I reproduced an issue https://github.com/SeleniumHQ/selenium/issues/8626 which was fixed in commit https://github.com/SeleniumHQ/selenium/commit/67cbd51e7931a84a8e9b9e9fe00cac3fd9497441 Then it was merged to selenium-4.0.0-alpha-6(Looks like its available in Java) But in C# the latest available version of Selenium.Webdriver is 4.0.0-alpha05.   ## Last working Selenium version  Worked up to version: 3.141.0  Stopped working in version: 4.0.0-alpha05  ## To Reproduce  FirefoxProfile profile = new FirefoxProfile();  ## Expected behavior  Object is created  ## Test script reproducing this issue (when applicable)  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  GeckoDriver 0.24, GeckoDriver 0.27","closed","needs-triaging,","odenysov","2020-10-02T09:39:06Z","2021-09-05T08:34:42Z"
"","8655","Content-Type header is missing","## üí• Regression Report  I cannot use `RemoteWebDriver` in C# at all with the latest alphas. Apologies if this is a known issue, I can't see anything so figured I'd report it. Seems like quite a fundamental issue though so maybe I'm missing something.  ## Last working Selenium version  Not sure what this means, the docker images go up to alpha 7, the nuget package only goes up to 5. Below are the Nuget package versions:  Worked up to version: 3.141.0  Stopped working in version: 4.0.0-alpha01-4.0.0-alpha05 (I can't seem to get any v4 packages working, different errors on each version)  ## To Reproduce  Run docker compose using the file documented here: https://github.com/SeleniumHQ/docker-selenium/blob/trunk/docker-compose-v3.yml  ``` dotnet new console -o ""Example"" cd ./Example dotnet add package Selenium.Support --version 4.0.0-alpha05  dotnet add package Selenium.Selenium.WebDriver --version 4.0.0-alpha05  ```  Inside program.cs: ``` csharp using System; using OpenQA.Selenium.Chrome; using OpenQA.Selenium.Remote;  namespace Example {     class Program     {         static void Main()         {             new RemoteWebDriver(new Uri(""http://localhost:4444""), new ChromeOptions());             Console.WriteLine(""Done!"");         }     } } ```  The following exception is logged:  ``` PS C:\File\Path\Example> dotnet run Unhandled exception. OpenQA.Selenium.WebDriverException: Content-Type header is missing    at OpenQA.Selenium.Remote.RemoteWebDriver.UnpackAndThrowOnError(Response errorResponse)    at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)    at OpenQA.Selenium.Remote.RemoteWebDriver.StartSession(ICapabilities desiredCapabilities)    at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(ICommandExecutor commandExecutor, ICapabilities desiredCapabilities)    at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(Uri remoteAddress, ICapabilities desiredCapabilities, TimeSpan commandTimeout)    at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(Uri remoteAddress, ICapabilities desiredCapab ```  ## Expected behavior  The exception should not be thrown and the driver should be useable.  ## Environment Again not sure what to put here. My laptop is a windows laptop but the grid is running inside a linux container.","closed","needs-triaging,","connelhooley","2020-08-30T19:32:42Z","2021-09-05T08:21:40Z"
"","8585","Performance regression on Chrome and Edge browser with Selenium 4 Alpha 5 (Dotnet language binding)","## üí• Regression Report  Hi, We have upgraded Selenium 3.14.0.0 to Selenim 4 Apha 5 using the Nuget packages from https://www.nuget.org/profiles/selenium  Above code to create driver instance is working as expected and running automation script fine. But after replacing the selenium dlls with latest alpha 5 dlls, its running the same script 10 times slower.  Is there any breaking changes in Selenium 4 or do we need to modify any code area?  Thanks     ## Last working Selenium version  Worked up to version: Selenium 3.14.0.0  Stopped working in version: Selenium alpha 5 (Note: we have directly upgraded from 3.14.0.0 to Alpha5)  ## To Reproduce      Chrome.ChromeOptions opt = new Chrome.ChromeOptions();     opt.LeaveBrowserRunning = false;      Chrome.ChromeDriverService chService;     Chrome.ChromeDriver ch;      chService = Chrome.ChromeDriverService.CreateDefaultService(appPath, driverFile);     chService.HideCommandPromptWindow = true;     ch = new Chrome.ChromeDriver(chService, opt);  Detailed steps to reproduce the behavior:  ## Expected behavior  A clear and concise description of what you expected to happen.  ## Test script reproducing this issue (when applicable)  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS: Windows 10 Browser: Chrome Browser version: 84.0.4147.105 Browser Driver version: Chrome Driver > 79 Language Bindings version: Dotnet - Selenium 4 alpha 5  Selenium Grid version (if applicable): NA","closed","R-awaiting answer,","Shankiv","2020-07-29T08:25:28Z","2021-09-05T08:31:28Z"
"","8525","Unable to start/stop drivers concurrently on Server","## üí• Regression Report  Getting errors when starting more than one driver session at a time from different Threads. ~~Extra browsers are started, so I'm not sure if it failing on starting the 3rd one or if it breaks when trying to quit the session.~~ The server appears to lose track of one session after another has been started.  ## Last working Selenium version 3.141.59  ## Stopped working in version: 4.x  ## To Reproduce This is the broken spec: https://github.com/SeleniumHQ/selenium/blob/dd7090cab54beb2be2541a08746ddaeb8783c496/rb/spec/integration/selenium/webdriver/spec_support/shared_examples/concurrent_driver.rb  `./go //rb:remote-chrome-test`  It's the same failure/stack track fro both firefox and chrome - https://travis-ci.org/github/titusfortner/selenium/jobs/708131143#L718  ## Expected behavior  More than one browser starts and then is correctly closed  ## Actual behavior  Here's the log of requests for sessions and the server not recognizing the sessions: https://gist.github.com/titusfortner/a4076e1f3dc8ef4115acc7a84fde9bce  It includes messages like: `invalid session id` and `NoSuchSessionException`  ## Environment  OS: All Browser: All Language Bindings version: Ruby trunk Selenium Grid version (if applicable): trunk","closed","C-grid,","titusfortner","2020-07-15T00:17:49Z","2021-09-05T08:19:10Z"
"","8147","Failing Atom bazel build","## üí• Regression Report  atom bazel build is failing with changes in pr #8102  ## To Reproduce  bazel build javascript/...  ## Error:  ERROR: /Users/sriharsha/Desktop/selenium/javascript/webdriver/atoms/BUILD.bazel:42:1: Compiling 710 JavaScript files to javascript/webdriver/atoms/clear-local-storage-ios.js failed (Exit 1) javascript/webdriver/atoms/storage/local_storage.js:55: ERROR - The return type of the function ""webdriver.atoms.storage.local.keySet"" is nullable, but it always returns a non-null value. Consider making the return type non-nullable. webdriver.atoms.storage.local.keySet = function() {                                        ^   ProTip: ""JSC_NULLABLE_RETURN_WITH_NAME"" or ""analyzerChecks"" or ""analyzerChecksInternal"" can be added to the `suppress` attribute of:   //javascript/webdriver/atoms:atoms-lib  1 error(s), 0 warning(s), 97.7% typed  INFO: Elapsed time: 332.019s, Critical Path: 136.91s INFO: 1545 processes: 6 remote cache hit, 364 darwin-sandbox, 1175 worker. FAILED: Build did NOT complete successfully  ## Environment  OS: MacOs 10.15.4 Bazel Version: 2.2.0","closed","needs-triaging,","harsha509","2020-03-30T12:32:57Z","2020-05-05T21:23:34Z"
"","8181","Selenium in npm Protractor 5.4.3 not working with Chrome 81","## üí• Regression Report  As of today, Chrome seems to have updated to version 81.0.4044.69 and now the version of Selenium included as part of NPM package protractor@5.4.3 (the latest version as of this writing) is failing with error message: ``` E/launcher - SessionNotCreatedError: session not created: This version of ChromeDriver only supports Chrome version 81   (Driver info: chromedriver=81.0.4044.20 (f006328e39a9769596eb506c8841c3004b24e747-refs/branch-heads/4044@{#244}),platform=Windows NT 10.0.18363 x86_64) ```  Before this portion, it is clearly unzipping a version 81 of the ChromeDriver with a statement reading: ``` I/update - chromedriver: unzipping chromedriver_81.0.4044.69.zip [16:50:31] I/update - chromedriver: chromedriver_81.0.4044.69.exe up to date ```  Specifying version in two different places in the Protractor.conf.js, in order to try and force usage of version 80, does not seem to have any effect:  ``` exports.config = {   allScriptsTimeout: 11000,   specs: [""../tests/e2e/**/*.e2e-spec.ts""],   capabilities: {     browserName: ""chrome"",     **version: ""80.0.3987.106"",**     chromeOptions: {       args: [         **""--version=80.0.3897.106"",**         ""--ignore-certificate-errors"",         ""--headless"",         ""--disable-gpu"",         ""--window-size=1200,900""               ], ```","closed","","JLunda","2020-04-08T21:59:29Z","2020-05-20T22:30:07Z"
"","8218","[SEVERE]: Timed out receiving message from renderer: 0.100","## üí• Regression Report  A clear and concise description of what the regression is.    ## Last working Selenium version  Worked up to version: Chrome Version 80.0.3987.163 (Official Build) (64-bit)  Stopped working in version: Chrome Version 81.0.4044.113 (Official Build) (64-bit)  ## To Reproduce                  System.setProperty(""webdriver.chrome.driver"", ""./chromedriver.exe""); 		ChromeOptions chromeOptions = new ChromeOptions(); 		chromeOptions.addArguments(""--disable-gpu""); 		chromeOptions.setPageLoadStrategy(PageLoadStrategy.EAGER); 		driver = new ChromeDriver(chromeOptions); 		driver.manage().deleteAllCookies(); 		driver.manage().window().maximize(); 		Serenity.setSessionVariable(""DRIVER"").to(driver); 		driver.get(applicationUrl); 		webScreen= new Screen();                  Browser launches with the url properly, but after that feature steps never get executed in 81.0.4044.113 (Official Build) (64-bit) instead get the error ""[SEVERE]: Timed out receiving message from renderer: 0.100"". The same code is working fine in Version 80.0.3987.163 (Official Build) (64-bit).   81.0.4044.113 (Official Build) (64-bit): ChromeDriver 81.0.4044.69 (6813546031a4bc83f717a2ef7cd4ac6ec1199132-refs/branch-heads/4044@{#776})  80.0.3987.163 (Official Build) (64-bit) ChromeDriver 79.0.3945.36 (3582db32b33893869b8c1339e8f4d9ed1816f143-refs/branch-heads/3945@{#614}):    Detailed steps to reproduce the behavior:  ## Expected behavior  My feature file should work fine. It is a simple html page with a canvas, and is waiting for a image to load in that,  ## Test script reproducing this issue (when applicable)  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS: Windows 10 Browser: Chrome Browser version: details mentioned above Browser Driver version: details mentioned above Language Bindings version: 1.8 Selenium Grid version (if applicable): 3.141.59","closed","","AchuthSankar","2020-04-19T00:03:30Z","2021-09-05T10:20:31Z"
"","8005","netty doesn't send authorization header, okhttp does","## üí• Regression Report  A clear and concise description of what the regression is.    ## Last working Selenium version  Worked up to version: 4.0.0-alpha-3  Stopped working in version: 4.0.0-alpha-4  ## To Reproduce  Sending requests to GGR requires the Authorization header to be set, but the netty implementation doesn't seem to set this, unlike the okhttp implementation.  See https://github.com/aerokube/ggr/issues/301  Stopped working in alpha-4 as the default is now the netty implementation, and if I override the system prop to use okhttp, all is well again!    Detailed steps to reproduce the behavior:  ## Expected behavior  A clear and concise description of what you expected to happen.  Netty implementation sends authorization header as okhttp currently does.","closed","C-java,","jsa34","2020-02-06T15:51:07Z","2020-04-15T08:00:03Z"
"","7952","Unable to run C# tests on alpha 4 with NUnit: ""No test is available""","## üí• Regression Report  A clear and concise description of what the regression is.    ## Last working Selenium version  Worked up to version: Selenium.WebDriver 4.0.0-alpha03   Stopped working in version: Selenium.WebDriver 4.0.0-alpha04  Downgrading back to alpha03 resolves the issue.  ## To Reproduce  Detailed steps to reproduce the behavior:   Project previously worked on alpha3 and stopped working on alpha4. Running `dotnet test` yields the following error:  ``` Microsoft (R) Test Execution Command Line Tool Version 16.3.0 Copyright (c) Microsoft Corporation.  All rights reserved.  Starting test execution, please wait...  A total of 1 test files matched the specified pattern.  No test is available in /Users//bin/Debug/netcoreapp3.1/E2E.dll. Make sure that test discoverer & executors are registered and platform & framework version settings are appropriate and try again.                                                                                                                                                             Additionally, path to test adapters can be specified using /TestAdapterPath command. Example  /TestAdapterPath:. ``` csproj file is as follows ```          E2E     netcoreapp3.1     enable         8     Tests.E2E                                                                runtime; build; native; contentfiles; analyzers; buildtransitive       all                      runtime; build; native; contentfiles; analyzers; buildtransitive       all                              ..... ```  ## Expected behavior  Tests should execute.  ## Environment  OS: OSX Browser: Any Browser version: Any Browser Driver version: Any Language Bindings version: .netcoreapp3.1","closed","C-dotnet,","giuliano-barberi-tf","2020-01-21T20:46:43Z","2020-04-15T07:52:25Z"
"","8306","EdgeDriver does not contain constructor with DriverService parameter","## üí• Regression Report  A clear and concise description of what the regression is.    ## Last working Selenium version  Worked up to version: 3.14  Stopped working in version: 4.0.0-alpha-5  ## To Reproduce  Detailed steps to reproduce the behavior:  - Create a ChromiumEdgeDriverService / EdgeDriverService object  - Create a EdgeDriver object and pass in the ChromiumEdgeDriverService object  ``` ChromiumEdgeDriverService edgeDriverService = ChromiumEdgeDriverService.createDefaultService(); WebDriver driver = new EdgeDriver(edgeDriverService,new EdgeOptions()); ```  ## Expected behavior  There are no build errors  ## Actual Behaviour  ``` Build errors: Error:(120, 18) java: no suitable constructor found for EdgeDriver(org.openqa.selenium.edge.EdgeDriverService,org.openqa.selenium.edge.EdgeOptions)     constructor org.openqa.selenium.edge.EdgeDriver.EdgeDriver() is not applicable       (actual and formal argument lists differ in length)     constructor org.openqa.selenium.edge.EdgeDriver.EdgeDriver(org.openqa.selenium.edge.EdgeOptions) is not applicable       (actual and formal argument lists differ in length)     constructor org.openqa.selenium.edge.EdgeDriver.EdgeDriver(org.openqa.selenium.Capabilities) is not applicable       (actual and formal argument lists differ in length) ```   ## Environment  OS: Windows 10 Browser: Edge Chromium Browser version: Version 81.0.416.72 (Official build) (64-bit) Browser Driver version: EdgeDriver 81.0.416.72 Language Bindings version: Java 13.0.1","closed","C-java,","markloughery","2020-05-14T08:04:42Z","2021-09-05T09:44:04Z"
"","8860","Java 1.8 compatibility issue in FirefoxProfile.java","## üí• Regression Report  `java.lang.NoSuchMethodError: java.io.FileWriter.(Ljava/io/File;Ljava/nio/charset/Charset;)` on jdk-1.8.0_231 due usage `public FileWriter(File file, Charset charset)` costructor that `@since 11` - avaliable only on jdk 11. See https://github.com/SeleniumHQ/selenium/blame/trunk/java/client/src/org/openqa/selenium/firefox/FirefoxProfile.java#L251  Will selenium 4 support jdk 1.8? I didn't find any info.  ## Last working Selenium version Worked up to version: `selenium-firefox-driver:4.0.0-alpha-6`  Stopped working in version: `selenium-firefox-driver:4.0.0-alpha-7`  ## Stacktrace  ``` java.io.FileWriter.(Ljava/io/File;Ljava/nio/charset/Charset;)V java.lang.NoSuchMethodError: java.io.FileWriter.(Ljava/io/File;Ljava/nio/charset/Charset;)V 	at org.openqa.selenium.firefox.FirefoxProfile.updateUserPrefs(FirefoxProfile.java:251) 	at org.openqa.selenium.firefox.FirefoxProfile.layoutOnDisk(FirefoxProfile.java:376) 	at org.openqa.selenium.firefox.FirefoxProfile.toJson(FirefoxProfile.java:326) 	at org.openqa.selenium.firefox.FirefoxOptions.asMap(FirefoxOptions.java:296) 	at org.openqa.selenium.MutableCapabilities.merge(MutableCapabilities.java:83) 	at org.openqa.selenium.remote.DesiredCapabilities.merge(DesiredCapabilities.java:107) ```  ## Environment Language Bindings version: selenium-firefox-driver:4.0.0-alpha-7","closed","C-java,","BorisOsipov","2020-11-10T17:34:17Z","2021-09-05T08:31:30Z"
"","8669","Unable to use Chrome options with the selenium 4.0 update","## üí• Regression Report  #After updating selenium 4.0, Chrome options is not available to use in chrome driver  ## Last working Selenium version  Worked up to version: selenium 3  Stopped working in version: selenium 4.0  ## To Reproduce    Detailed steps to reproduce the behavior:  ## Expected behavior  A clear and concise description of what you expected to happen.  ## Test script reproducing this issue (when applicable)  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS: Windows 10 Browser: Chrome Browser version:. 85 Browser Driver version: ChromeDriver 2.43 Language Bindings version: Java 8","closed","R-awaiting answer,","Santhosh-SNaik","2020-09-03T03:08:32Z","2021-09-05T08:35:52Z"
"","8122","WebDriverWait.until issue with asynchrony","## üí• Regression Report  ## Last working Selenium version Worked up to version: Selenium 4.0.0-alpha-4 (java) Stopped working in version: Selenium 4.0.0-alpha-5 (java)  ## To Reproduce I'm not sure how to describe exactly steps to reproduce because the issue concerns threads behavior. If my description will not be good, please write, I will try to create a better example   One of our class looks like this  `  public class BaseTestCase {      private static final ThreadLocal threadLocal = new InheritableThreadLocal<>();      public BaseTestCase (WebDriver webDriver) {         setWebDriver (webDriver);     }       public static WebBrowser getWebDriver () {         return threadLocal.get();     }         private void setWebBrowser(WebDriver webDriver) {         threadLocal.set(webDriver);     }  }  `  It can be used like this  `  public class ElementImpl implements Element, WrapsDriver, TakesScreenshot, Locatable {      private WebElement element;     private final WebDriver webDriver;      public ElementImpl(final By by) {         this(BaseTestCase.getWebDriver().findElement(by));     }      public ElementImpl(final WebElement element) {         this.element = element;         webDriver= BaseTestCase.getWebDriver();     }     @Override     public void click() {         element.click();    }  }  `  A test can have method like this  `  private void clickOnComboBox(@NotNull String itemText) {          new WebDriverWait(webDriver, WaitTime.Seconds10.duration()).until(webDriver -> {             try {                 new ElementImpl(By.xpath(String.format(""//td[text() = '%s']/parent::tr"", itemText)), WaitTime.Seconds5).click();                 return true;             } catch (Exception e) {                 return false;             }         });   }  `  ## Expected behavior Expected behavior -> It works with out issues and BaseTestCase.getWebDriver() returns an instance of WebDriver.  ## Test script reproducing this issue (when applicable) But now because org.openqa.selenium.support.ui.FluentWait#until method was changed and now it uses CompletableFuture.supplyAsync(checkConditionInLoop(isTrue)) method, BaseTestCase.getWebDriver() method returns null instead of  instance of WebDriver. I suppose because CompletableFuture.supplyAsync(checkConditionInLoop(isTrue)) works with another thread than BaseTestCase.getWebDriver().   Can it be fixed? or Is it possible to add a method without asynchrony?  Thanks  ## Environment OS: any Browser: any Browser version: Chrome 80.0.3987.149 or FF 74.0 Browser Driver version: ChromeDriver 81.0.4044.20, GeckoDriver 0.26 --> Language Bindings version: Java 11.0.2","closed","C-java,","eugenedani","2020-03-20T13:58:15Z","2020-05-20T20:59:07Z"
"","7896","ruby: ChromeOptions: setting camera permission no longer works in 3.142.7","## üêõ Bug Report With ruby selenium-webdriver `3.142.7` I cannot set camera permission with ChromeOptions. Worked in older versions, e.g. `3.142.6`  ## Test script or set of commands reproducing this issue Install `watir` gem and run the below code. With  selenium-webdriver `3.142.7 it should fail on timeout.  Used gems: gem 'watir', '6.16.5' gem 'selenium-webdriver', '3.142.7'  ``` require 'watir'  options = Selenium::WebDriver::Chrome::Options.new options.add_preference(:profile, {default_content_setting_values: {media_stream_camera: 1}}) br = Watir::Browser.new(Selenium::WebDriver.for(:chrome, options: options))  br.goto('https://webrtc.github.io/samples/src/content/getusermedia/resolution/') br.wait br.button(id: 'qvga').click # this will time-out in 3.142.7 and leave the browser opened, because the camera permission was not set br.video(id: 'gum-res-local').wait_until(timeout: 10, message: 'the video element should be present', &:present?) br.close ``` ## Environment  OS :Linux 4.18.19-100.fc27.x86_64 GNU/Linux Browser: Chrome Browser version: 79.0.3945.79  Browser Driver version: ChromeDriver 79.0.3945.36 (3582db32b33893869b8c1339e8f4d9ed1816f143-refs/branch-heads/3945) Language Bindings version: ruby 2.6.5p114,  selenium-webdriver 3.142.7","closed","needs-triaging,","jstefek","2019-12-29T16:18:56Z","2020-04-02T14:32:01Z"
"","8132","IWebElement.SendKeys will not send keys after Actions has been executed","## üêõ Bug Report When using IWebElement.SendKeys(String) on a input it work, but when you try to use IWebElement.SendKeys after using Actions(m_driver), keystroke aren't send correctly.  Tested on Chrome and Firefox  ## To Reproduce  Here is a quick snippet-ish that would replicate the bug in C# :  ``` IWebElement searchField = m_driver.FindElement(By.Xpath(""//input[@id='SearchFieldInput']"")); searchField.SendKeys(""This text will appear normally.""); Thread.Sleep(1000); searchField.Clear();  // Ctrl-click to select multiple items with Id Actions builder = new Actions(m_driver); builder.KeyDown(Keys.Control); foreach (string id in idListOfElement) {     builder.Click(m_driver.FindElement(By.Id(id))); } builder.KeyDown(Keys.Control)     .Build()     .Perform();  searchField.SendKeys(""This text will Never ever appear normally. The best it could show is multiple space, something like this :  \""        \""""); // number of space is less than the real number of space in the string. For chrome only. Firefox dont send anything... Thread.Sleep(1000); searchField.Clear(); ```  So I try with ChromeDriver(80.0.3987.106) and FirefoxDriver(GeckoDriver 0.26.0) and both does the same thing. Except Chrome will not work for the first one and work after, Firefox wont work at all...  For Chrome, I use those junk actions to fix SendKeys for the next SendKeys, but in firefox it's not fixing anything... : ``` // Actions code here searchField.Click(); Thread.Sleep(200); searchField.Clear(); Thread.Sleep(1000); searchField.SendKeys(""Junk text for fixing SendKeys""); Thread.Sleep(1000); // Can said if Sleep is really necessary, but Sleep make consistency better. searchField.Clear(); Thread.Sleep(1000); // Real input.SetText code here ```  For html I don't have a working exemple I guess this is the best things I could give right now :  ```      Value 1    Value 2    Value 3    Value 4  ```  Sorry if some information are missing, but I will try to reply as quickly as I can.  ## Expected behavior  SendKeys would send keystroke to the IWebElement I try to send text to.   ## Environment  OS: Windows 10 Browser: Chrome 80, Firefox 74 Browser Driver version: ChromeDriver 80.0.3987.106, GeckoDriver 0.26.0 Language Bindings version: C# (4.0.0?Not sure) .Net Framework 4.7.1 Selenium Grid version (if applicable): 3.141.0","closed","needs-triaging,","maxime4000","2020-03-23T21:27:21Z","2020-04-25T08:20:20Z"
"","8028","ChromeDriver does not fully quit when using Selenium for java of 4+ version","## üêõ Bug Report When I create a ChromeDriver instance and then call close() and quit() on it (or just quit()) some threads continue to be running and hanging the program.  ## To Reproduce ```     public static void main(String[] args) {         ChromeDriver browser = new ChromeDriver();         browser.close();         browser.quit();     } ``` ## Expected behavior The same code finishes absolutely fine with selenium < 4.0.0  ## Hanging threads dump ``` ""OkHttp ConnectionPool@2578"" daemon prio=5 tid=0x16 nid=NA waiting   java.lang.Thread.State: WAITING 	  at java.lang.Object.wait(Object.java:-1) 	  at java.lang.Object.wait(Object.java:462) 	  at okhttp3.internal.Util.waitMillis(Util.kt:536) 	  at okhttp3.internal.Util.lockAndWaitNanos(Util.kt:522) 	  at okhttp3.internal.connection.RealConnectionPool$cleanupRunnable$1.run(RealConnectionPool.kt:49) 	  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) 	  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) 	  at java.lang.Thread.run(Thread.java:834) ``` ``` ""OkHttp Dispatcher@2848"" prio=5 tid=0x19 nid=NA waiting   java.lang.Thread.State: WAITING 	  at jdk.internal.misc.Unsafe.park(Unsafe.java:-1) 	  at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234) 	  at java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:462) 	  at java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:361) 	  at java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:937) 	  at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1053) 	  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114) 	  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) 	  at java.lang.Thread.run(Thread.java:834) ``` ``` ""UrlChecker-2@1969"" daemon prio=5 tid=0x12 nid=NA waiting   java.lang.Thread.State: WAITING 	  at jdk.internal.misc.Unsafe.park(Unsafe.java:-1) 	  at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:234) 	  at java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:462) 	  at java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:361) 	  at java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:937) 	  at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1053) 	  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114) 	  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) 	  at java.lang.Thread.run(Thread.java:834) ``` ## Test script or set of commands reproducing this issue Thread dump  ## Environment  OS: Linux Mint 19.2 Cinnamon Java version: 11.03 Chrome: 80 Selenium version: 4.0.0-alpha-4   Maven dependencies used: ```                      org.seleniumhq.selenium             selenium-java             4.0.0-alpha-4                               org.seleniumhq.selenium             selenium-remote-driver             4.0.0-alpha-4          ```","closed","needs-triaging,","insticore","2020-02-14T06:39:23Z","2020-04-15T07:50:55Z"
"","8266","[NodeJS] WebElement.getAttribute('muted') always return true when HTML video element default is muted","## üêõ Bug Report When `video` element is muted by default,  calling `getAttribute('muted')` on that element will always return `true`. But if I remove the `muted` attribute, it's working properly. Tried the get `paused` property and its working properly too.  Tried with chrome and firefox, both have same behavior.  Not sure if the issue is from the chrome/geckodriver or from selenium.  ## To Reproduce  Detailed steps to reproduce the behavior:  - When browser is opened, try toggling the mute button of the player - `getAttribute('muted')` will always return true  ## Expected behavior  - `getAttribute('muted')` should return value according to player muted state  ## Test script or set of commands reproducing this issue  Basic HTML, video element should have `muted` attribute as default ```html                               Your browser does not support the video tag.          ```  Script ```javascript (async function() {     await driver.get('{{ YOUR_LOCAL_SERVER }}');      const player = await driver.findElement(By.css('#video1'));      await driver.wait(waitForAttributeValue(player, 'muted', false));      function waitForAttributeValue(element, attribute, value) {         return async function() {             const attr = await element.getAttribute(attribute);             console.log(attribute + ' = ' + attr);             return !!attr === value;         };     } })(); ```   ## Environment  OS: MacOS High Sierra (10.13.6) Browser: Chrome and Firefox Browser version: Chrome 81.0.4044.129, Firefox 75 Browser Driver version: ChromeDriver 81.0.4044.69, geckodriver 0.26.0 Language Bindings version: NodeJS 12.10.0 Selenium Grid version (if applicable): -","closed","needs-triaging,","Tae69","2020-05-04T10:59:52Z","2021-09-05T10:02:57Z"
"","8765","python: webdriver.Remote doesn't work with FirefoxOption.proxy","## üêõ Bug Report webdriver.Remote doesn't work with FirefoxOption.proxy   ## To Reproduce ```python from selenium import webdriver from selenium.webdriver.common.desired_capabilities import DesiredCapabilities from selenium.webdriver.common import proxy  def create_remote(url='http://127.0.0.1:4444/wd/hub'):     caps = DesiredCapabilities.FIREFOX.copy()      opts = webdriver.FirefoxOptions()     opts.headless = True     opts.proxy = proxy.Proxy({         ""proxyType"": proxy.ProxyType.MANUAL,         ""httpProxy"": ""127.0.0.1:1080"",         ""socksProxy"": ""127.0.0.1:1080"",     })     d = webdriver.Remote(         command_executor=url,         desired_capabilities=caps,         options=opts,     )     return d ``` ```python create_remote() ```  ``` Traceback (most recent call last):   ......   File ""./driver.py"", line 19, in create_remote     options=opts,   File ""./.venv/lib/python3.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 157, in __init__     self.start_session(capabilities, browser_profile)   File ""./.venv/lib/python3.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 252, in start_session     response = self.execute(Command.NEW_SESSION, parameters)   File ""./.venv/lib/python3.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 321, in execute     self.error_handler.check_response(response)   File ""./.venv/lib/python3.7/site-packages/selenium/webdriver/remote/errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.SessionNotCreatedException: Message: Unable to create session for  Build info: version: '4.0.0-alpha-7', revision: '117b9d61c9' System info: host: 'bec157dbaf54', ip: '172.18.0.4', os.name: 'Linux', os.arch: 'amd64', os.version: '4.19.104-microsoft-standard', java.version: '1.8.0_265' Driver info: driver.version: unknown ```  ## Expected behavior  Make it works?  ## Test script or set of commands reproducing this issue * create_remote.py ```python from selenium import webdriver from selenium.webdriver.common.desired_capabilities import DesiredCapabilities from selenium.webdriver.common import proxy  def create_remote(url='http://127.0.0.1:4444/wd/hub'):     caps = DesiredCapabilities.FIREFOX.copy()      opts = webdriver.FirefoxOptions()     opts.headless = True     opts.proxy = proxy.Proxy({         ""proxyType"": proxy.ProxyType.MANUAL,         ""httpProxy"": ""127.0.0.1:1080"",         ""socksProxy"": ""127.0.0.1:1080"",     })     d = webdriver.Remote(         command_executor=url,         desired_capabilities=caps,         options=opts,     )     return d  create_remote() ``` * docker-compose.yml ```yaml version: ""3.4"" services:   firefox:     container_name:  firefox     image: selenium/standalone-firefox:80.0-geckodriver-0.27-20200921     restart: always     ports:       - 127.0.0.1:4444:4444 ```    ## Environment  Docker image:  selenium/standalone-firefox:80.0-geckodriver-0.27-20200921 OS:  Windows/docker Browser:  Firefox Browser version: 80.0 Browser Driver version: FirefoxDriver ??, GeckoDriver geckodriver Language Bindings version: python-3.141.0","closed","D-firefox,","cupen","2020-10-07T15:23:39Z","2021-09-05T08:12:24Z"
"","7918","AvailableLogTypes() throw exception when use a RemoteWebDriver()","## üêõ Bug Report Try to get available logs for a RemoteWebDriver(). It is the same issue that was for the the ""ChromeDriver"". Or, there are no logs available for RemoteWebDriver? I have found no information regarding this functionality. ## To Reproduce Use selenium Grid. Use a windows/Chrome node AutomationWebDriver =  new RemoteWebDriver(new Uri(seleniumMode), _options); Driver.Manage().Logs.GetLog(LogType.Browser); => throw exception Object reference not set to an instance of an object.  ## Expected behavior   ## Test script or set of commands reproducing this issue ## Environment  OS: Windows 10 Browser: Chrome Browser version:  79.0.3945.88  Browser Driver version: 79.0.3945.3600 Language Bindings version: C# Selenium Grid version (if applicable):  Selenium server version: 3.141.59, revision: e82be7d358","closed","needs-triaging,","cosminPintea","2020-01-09T08:43:06Z","2020-02-13T15:50:51Z"
"","8683","Grid UI links and features not wired up properly","## üêõ Bug Report The new Grid UI (available at http://localhost:4444/grid/console) has links in it that use root level (`/`) urls. These need to be corrected as the java server tries to serve them.    ## To Reproduce  1. Run bazel target `bazel build grid` 2. java -jar bazel-bin/java/server/src/org/openqa/selenium/grid/selenium_server_deploy.jar hub 3. Load http://localhost:4444/grid/console in a browser  Check the links on the left go to the React pages not to the server. We also need to load up the console from the link on the left with a grid node attached to the hub and show that is working. This is going through GraphQL.  ## Expected behavior  Links should either be to selenium.dev or be routed through the front end react router   ## Environment All","closed","C-grid,","AutomatedTester","2020-09-08T10:41:01Z","2021-09-05T08:35:50Z"
"","8606","ChromeDevToolsNetworkTest.java test failing because ChromeDriver change","## üêõ Bug Report selenium/java/client/test/org/openqa/selenium/devtools/ChromeDevToolsNetworkTest.java is failing probably due to  https://bugs.chromium.org/p/chromedriver/issues/detail?id=3488 change. Need to modify tests to expect the exception.  ChromeDriver would now detect Page.navigation method from DevTools with error text and check if it start with net::ERR_ and return unknown error if so. (https://chromium-review.googlesource.com/c/chromium/src/+/2219110/8/chrome/test/chromedriver/chrome/navigation_tracker.cc#342) A clear and concise description of what the bug is.    ## To Reproduce    Detailed steps to reproduce the behavior: use ChromeDriver 85 or later and run  bazel test --test_tag_filters=chrome //java/client/test/org/openqa/selenium/devtools:ChromeDevToolsNetworkTest-chrome # Expected behavior  A clear and concise description of what you expected to happen.  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:   Selenium Grid version (if applicable):","closed","needs-triaging,","k7z45","2020-08-05T00:58:43Z","2021-09-05T08:19:01Z"
"","8477","Python: slow driver connections due to 1s delays in connection attempts","## üêõ Bug Report Seen on https://bugzilla.mozilla.org/show_bug.cgi?id=1650025#c3  When Selenium starts the driver service it tries to connect immediately and if that fails it adds a second of delay before trying again. In my case I always have this 1s delay when using geckodriver because the socket listener is not immediately available, but some milliseconds after this first connection attempt. Here the Selenium code:  https://github.com/SeleniumHQ/selenium/blob/941dc9c6b2e2aa4f701c1b72be8de03d4b7e996a/py/selenium/webdriver/common/service.py#L99-L104  Given the fact that drivers starts-up quite instantly the 1s delay seems to be too high, and checking more often would be a good idea. Also by maybe giving the process a bit of time to also start the socket listener before trying the first connection attempt might be a good.   In case of geckodriver we also log a debug line:  > 1593688606730	geckodriver	DEBUG	Listening on 127.0.0.1:4444  Not sure how other drivers behave here. I'm happy to change that to info level, given that debug is not what you want to have by default.  Given that each Selenium test restarts the browser, a lot of time is wasted in that part of the code.  @AutomatedTester can you please have a look? I only run the Python bindings, so not sure how other bindings behave.","closed","needs-triaging,","whimboo","2020-07-02T11:33:43Z","2021-09-05T09:12:41Z"
"","8649","In remote driver InvalidArgumentException: Message: missing field `handle` at line 3 column 1 in switch driver.switch_to.window and _driver.switch_to._w3c_window","## üêõ Bug Report OS: macOS 10.13 Browser: firefox Browser version: Version 80.0 (64-bit) Browser Driver version: Language Bindings version: python Selenium version (if applicable): version = '3.141.0'  Summary:  Message: missing field handle at line 3 column 1 in driver.switch_to.window while switching tab. InvalidArgumentException: Message: Expected ""handle"" to be a string, got [object Undefined] undefined Note: With Firefox version 79 it is working fine and the issue is with remote driver, in local it is working fine","closed","D-firefox,","abhayp505","2020-08-27T05:08:18Z","2021-09-05T08:34:51Z"
"","8871","`Browser.getWindowBounds` command of Chrome DevTools Protcol not working","## üêõ Bug Report On trying to get the position and size of the browser window using the chrome devtool's `Browser.getWindowBounds` command, I get the below error expecting an `int` value as WindowID.  ``` WARNING: Unhandled type: {""id"":6,""error"":{""code"":-32602,""message"":""Invalid parameters"",""data"":""Failed to deserialize params.windowId - BINDINGS: int32 value expected at position 16""},""sessionId"":""3578B7A775870E050167A2F52C655AFB""} ```  On further checks, found that the command being sent has an incorrect value for the `windowId` key. ``` Nov 13, 2020 5:00:33 PM org.openqa.selenium.devtools.Connection send INFO: -> {   ""id"": 6,   ""method"": ""Browser.getWindowBounds"",   ""params"": {     ""windowId"": ""1""   },   ""sessionId"": ""3578B7A775870E050167A2F52C655AFB"" } ```    ## To Reproduce https://gist.github.com/rookieInTraining/731614f276f661f639857d34eb1c0627   ## Expected behavior The command sent via the code should be : ``` Nov 13, 2020 5:00:33 PM org.openqa.selenium.devtools.Connection send INFO: -> {   ""id"": 6,   ""method"": ""Browser.getWindowBounds"",   ""params"": {     ""windowId"": 1   },   ""sessionId"": ""3578B7A775870E050167A2F52C655AFB"" } ```  ## Test script or set of commands reproducing this issue ``` WebDriver driver = new ChromeDriver(); driver.get(""https://www.duckduckgo.com""); DevTools devTools = ((HasDevTools) driver).getDevTools(); devTools.send(Browser.getWindowBounds(new WindowID(1))); ```  ## Environment  OS:  OSX Browser:  Chrome Browser version:  86.0.4240.198 Browser Driver version:  86.0.4240.22 Language Bindings version:  Java-alpha7 Selenium Grid version (if applicable):   NA","closed","D-chrome,","rookieInTraining","2020-11-13T12:07:18Z","2021-09-05T08:15:53Z"
"","8603","Gets the element value null in headless mode","## üêõ Bug Report Null when I use headless mode to get the td value in the third tr in the tbodyÔºåNo headless mode is normal The page element structure of a web page is the three tr groups in the tBody tag   ## To Reproduce Part of the code That I wroteÔºö a=WebDriverWait(driver,20).until(EC.presence_of_element_located((By.XPATH,'//a[text()=""music""]//..//..//td[contains(@Class,""current"")]'))).text b = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.XPATH, '//a[text()=""live""]//..//..//td[contains(@Class,""current"")]'))).text c = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.XPATH, '//a[text()=""person""]//..//..//td[contains(@Class,""current"")]'))).text print(a) print(b) print(c) A and B can get values, c can'tÔºåI tried to increase the waiting time, but it didn't workÔºåThe third td on the page is valuable I got it right when I removed the headless mode  ## Expected behavior  Gets the value of the third td  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS: win10 Browser: Chrome Browser version: 84.0.4147.105 Browser Driver version:  Language Bindings version: python3.7.3 Selenium Grid version (if applicable): 3.141.0","closed","","vvanglro","2020-08-04T13:01:02Z","2021-09-05T08:37:30Z"
"","8623","JS bindings won't create an Edge Chromium session via Selenium Server Hub","## üêõ Bug Report JS bindings fail to create an Edge Chromium session when targeting a Selenium Server instance running with `-role hub`:  The terminal running the Selenium Server shows receiving the following request:  ``` 14:35:43.906 INFO [ActiveSessionFactory.apply] - Capabilities are: {   ""browserName"": ""MicrosoftEdge"",   ""ms:edgeChromium"": true,   ""ms:edgeOptions"": {   } } ```  If both variants of Edge (legacy and Chromium) are installed on the target machine then the legacy version is still picked. If only the Chromium version is installed, instead, then the client gets this error back:  ```         SessionNotCreatedError: Unable to create new service: EdgeDriverService         Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53'         System info: host: 'xxxxxx', ip: '10.189.xxx.xx', os.name: 'Windows 10', os.arch: 'x86', os.version: '10.0', java.version: '1.8.0_101'         Driver info: driver.version: unknown ```    ## To Reproduce * Have a Windows 10 machine with Edge Chromium installed. * Download the corresponding `msedgedriver.exe` (eventually add it to the %PATH% variable) * Download the Selenium Grid on the machine and run it with `-role hub` * On the machine running the sample test, install the JS selenium bindings and try to create a session targeting the selenium grid that requests an Edge Chromium session.  See the test script below.  ## Expected behavior Building a remote webdriver explicitly targeting Edge Chromium via Selenium Grid, should successfully create the expected session.  ## Test script or set of commands reproducing this issue ```     const serverUrl = buildSeleniumServerUrl();     const builder = new Builder();     return builder         .usingServer(serverUrl)         .withCapabilities(Capabilities.edge())         .setEdgeOptions(new edge.Options().setEdgeChromium(true))         .build(); ```  ## Environment  OS: Windows 10 Browser: Microsoft Edge Chromium  Browser version: 84.0.522.58 (Official build) (64-bit) Browser Driver version: msedgeriver.exe 84.0.522.58 Language Bindings version: ""selenium-webdriver"": ""4.0.0-alpha.7"" Selenium Grid version (if applicable): 3.141.59","closed","C-nodejs,","hurrikam","2020-08-11T13:54:54Z","2021-09-05T08:30:22Z"
"","8402","LoggingPreferences not working as expected.","## üêõ Bug Report JAVA LoggingPreferences is not working on selenium-server 3.141.59 but works on 4.0.0-alpha-2.  ## To Reproduce 1. Create a standalone selenium server. 2. Create ChromeOptions and add the LOGGING_PREFS Capability with DRIVER (or any other type of log) enabled with Level.ALL. 3. Do something with the driver and check for any logs coming from the driver via driver.manage().logs()  ## Expected behavior Seeing the logs we added with the LOGGING_PREFS in the driver.manage().logs()  ## Actual behavior Seeing only the SERVER and CLIENT logs.  ## Test script or set of commands reproducing this issue  ``` public static void main(String[] args) throws MalformedURLException {          WebDriverManager.chromedriver().setup();          // Start Selenium         StandaloneConfiguration configuration = new StandaloneConfiguration();         SeleniumServer server = new SeleniumServer(configuration);         server.boot();          ChromeOptions options = new ChromeOptions();         LoggingPreferences loggingPreferences = new LoggingPreferences();         loggingPreferences.enable(LogType.DRIVER, Level.ALL);         options.setCapability(CapabilityType.LOGGING_PREFS, loggingPreferences);          RemoteWebDriver driver = new RemoteWebDriver(                 new URL(""http://localhost:4444/wd/hub""), options);          Runnable runnable = () -> {             try {                 Set logtypes = driver.manage().logs().getAvailableLogTypes();                 System.out.println(""LOG "" + Arrays.toString(logtypes.toArray()));                 while (true) {                     logtypes.forEach(logType -> {                         LogEntries logEntries = driver.manage().logs().get(logType);                         logEntries.forEach(logEntry -> {                             System.out.println(String.format(""LOG [%s] - [%s]-[%s]: %s"",                                     logType, logEntry.getTimestamp(),                                     logEntry.getLevel(), logEntry.getMessage()));                         });                     });                     TimeUnit.MILLISECONDS.sleep(100);                 }             } catch (Exception e) {                 System.out.println(""LOG - DEAD"");             }         };          new Thread(runnable).start();          try {             // Do some actions with the driver...             driver.navigate().to(""https://google.com"");             TimeUnit.SECONDS.sleep(10);         } catch (Throwable e) {             e.printStackTrace();         } finally {             driver.quit();         }         server.stop();         System.exit(0);     } ```  ## Environment  OS: Windows 10 Browser: Chrome Browser version: 83.0.4103.61 Browser Driver version: ChromeDriver 83.0.4103.39 Language Bindings version: Java 13 Selenium Grid version (if applicable): 3.141.59","closed","R-awaiting answer,","tzah4748","2020-06-08T18:23:25Z","2021-09-05T08:34:05Z"
"","8414","The parameters ""--publish-events"" and ""--subscribe-events"" are not supported for 'hub' in selenium-4 alpha 6.","## üêõ Bug Report In previous alpha version, 'hub' command support parameter ""--publish-events"" and ""--subscribe-events"", but in version alpha 6, they are not supported anymore. How can we change the publish-port and subscribe-port if the default ports 4442, 4443 are already in use?  ## To Reproduce java -jar selenium-server-4.0.0-alpha-6.jar hub --help  Detailed steps to reproduce the behavior:  ## Expected behavior      Expect it can support these parameters as before     --publish-events       Connection string for publishing events to the event bus     --subscribe-events       Connection string for subscribing to events from the event bus  ## Test script or set of commands reproducing this issue 1. I started a hub on port 6666 so that the default publish-port and subscribe-port will be occupied java -jar selenium-server-4.0.0-alpha-6.jar hub --port 6666 2. Then I started another hub on port 4444 java -jar selenium-server-4.0.0-alpha-6.jar hub  the output is as below: 16:25:27.979 INFO [LoggingOptions.getTracer] - Using OpenTelemetry for tracing 16:25:27.980 INFO [LoggingOptions.createTracer] - Using OpenTelemetry for tracing 16:25:27.995 INFO [EventBusOptions.createBus] - Creating event bus: org.openqa.selenium.events.zeromq.ZeroMqEventBus 16:25:28.191 INFO [BoundZmqEventBus.] - XPUB binding to [binding to tcp://*:4442, advertising as tcp://172.27.20.204:4442], XSUB binding to [binding to tcp://*:4443, advertising as tcp://172.27.20.204:4443] Exception in thread ""main"" java.lang.IllegalArgumentException: Unable to find event bus class: org.openqa.selenium.events.zeromq.ZeroMqEventBus         at org.openqa.selenium.grid.server.EventBusOptions.createBus(EventBusOptions.java:74)         at org.openqa.selenium.grid.server.EventBusOptions.getEventBus(EventBusOptions.java:44)         at org.openqa.selenium.grid.commands.Hub.execute(Hub.java:98)         at org.openqa.selenium.grid.TemplateGridCommand.lambda$configure$2(TemplateGridCommand.java:97)         at org.openqa.selenium.grid.Main.launch(Main.java:154)         at org.openqa.selenium.grid.Main.go(Main.java:88)         at org.openqa.selenium.grid.Main.main(Main.java:54) Caused by: java.lang.reflect.InvocationTargetException         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)         at java.lang.reflect.Method.invoke(Method.java:498)         at org.openqa.selenium.grid.server.EventBusOptions.createBus(EventBusOptions.java:69)         ... 6 more Caused by: org.zeromq.ZMQException: Errno 48 : Address already in use         at org.zeromq.ZMQ$Socket.mayRaise(ZMQ.java:3546)         at org.zeromq.ZMQ$Socket.bind(ZMQ.java:3000)         at org.openqa.selenium.events.zeromq.BoundZmqEventBus.(BoundZmqEventBus.java:55)         at org.openqa.selenium.events.zeromq.ZeroMqEventBus.create(ZeroMqEventBus.java:37)         at org.openqa.selenium.events.zeromq.ZeroMqEventBus.create(ZeroMqEventBus.java:53)         ... 11 more","closed","C-grid,","leiwang008","2020-06-11T08:32:05Z","2021-09-05T08:33:59Z"
"","8019","#id css selector doesn't work in IE","## üêõ Bug Report id css selector doesn't seem to work in IE. It always throws `'Unable to find element with css selector == #test'`. Same selector works fine in Chrome and Firefox.  ## To Reproduce  ```cs var driver = new InternetExplorerDriver(); driver.Url = ""file:///C:/test.html""; driver.Manage().Window.Maximize(); driver.FindElement(By.CssSelector(""#test"")).Click(); ```  ```html     Click me    ```  ## Environment  OS: Windows 10 Browser: IE Browser version: 11.864.17763.0 Browser Driver version: IEDriverServer 3.150.1.0 Language Bindings version: C# 3.141.0","closed","needs-triaging,","romovs","2020-02-10T15:26:33Z","2020-03-11T17:30:15Z"
"","7993","safaridriver on Safari 13.0.5 does not find an element","## üêõ Bug Report I've been successfully  running e2e (end to end) WEB UI tests on Firefox and Chrome.  Then I decided to try them on Safari, but encountered an issue. Safaridriver opens Safari and goes to a url. But then it stops and times out after awhile. It is supposed to  _await driver.findElement(By.xpath(locator)).click();_  But I feel it finds an element but either does not click it or clicks somewhere else.  First I thought it had some problems with OS and upgraded to the latest one, but it did not help...   Any help/advice will be appreciated!   ## Environment OS: macOS Catalina Version 10.15.3 Browser: Safari Browser version: Version 13.0.5 (15608.5.11) Browser Driver version: safaridriver (the default one) Language Bindings version: Node.js","closed","R-awaiting answer,","TatyanaMartynyuk","2020-02-03T19:04:31Z","2020-04-15T07:48:13Z"
"","7983","Automated test in Chromium Edge browser with JavaScript doesn't work.","## üêõ Bug Report I'm using selenium-webdriver with JavaScript. However, I got `WebDriverError: Unknown error` in console when Chromium Edge started, and the Edge remains showing the start page. Is there any idea or solution?  ## To Reproduce I tried to execute automated test, which is just to access Google and input some text into search box. The script as follows: ``` const Selenium = require(""selenium-webdriver""); const BROWSER_NAME = Selenium.Browser.EDGE; const builder = new Selenium.Builder().forBrowser(BROWSER_NAME); const webDriver = builder.build();  webDriver.get(""https://google.com"").then(() => {     return webDriver.findElement(Selenium.By.name(""q"")).sendKeys(""Some Text.""); }) ``` The test worked in Chrome, but not in Chromium Edge (I changed BROWSER_NAME according to the browser). When I searched this issue, I found some solutions in C#/Java WebDriver.   Something like this: `When constructing the EdgeOptions object, if you don't pass it false, by default is_legacy is set to true. This ensures that all your current Microsoft Edge Driver tests will run without modification against Microsoft Edge (EdgeHTML). You must set is_legacy to false and use the correct driver for your test to run successfully in Microsoft Edge (Chromium).` https://docs.microsoft.com/en-us/microsoft-edge/webdriver-chromium  However, EdgeOptions in JavaSciprt API doesn't have isLegacy property.  ## Expected behavior - Edge browser starts. - Access Google page. - Input ""Some Text."" into search box.  ## Test script or set of commands reproducing this issue Same as above codes.  ## Environment - OS: Windows 10 - Browser: Chromium Edge (https://www.microsoft.com/en-us/edge) - Browser version: 79.0.309.71 - Browser Driver version: 79.0.309.71 - Language Bindings version: selenium-webdriver 4.0.0-alpha.5  ## Proposal I'd like to set isLegacy property through EdgeOptions. Such as, ``` const Edge = require(""selenium-webdriver/edge"");  const edgeOptions = new Edge.Options(); edgeOptions.isLegacy = false; builder.setEdgeOptions(edgeOptions);  var msedgedriverDir = ""\path\to\driver dir""; var msedgedriverExe = ""msedgedriver.exe"";  // EdgeService with isLegacy = false too const edgeService = EdgeDriverService.CreateDefaultService(msedgedriverDir, msedgedriverExe, false); edgeService.isLegacy = false; builder.setEdgeService(edgeService); ```  ## Detailed Logs This is the log when I ran the test in Chromium Edge browser. ``` (node:20380) UnhandledPromiseRejectionWarning: WebDriverError: Unknown error     at parseHttpResponse     at Executor.execute     at processTicksAndRejections ``` Though the Edge starts, nothing happens after that. ![image](https://user-images.githubusercontent.com/22583236/73525974-902c0600-4453-11ea-9f2d-154aad354cdc.png)","closed","needs-triaging,","hirokika","2020-01-31T09:06:27Z","2020-04-15T08:44:34Z"
"","8000","[c#] Page.AddScriptToEvaluateOnNewDocument doesn't work","## üêõ Bug Report I'm trying to inject JavaScript code that runs before a page loads For it i use this method https://github.com/SeleniumHQ/selenium/blob/master/dotnet/src/webdriver/DevTools/AutoGenerated/Page/AddScriptToEvaluateOnNewDocumentCommand.cs but it doesn't work and my JavaScript code is not executing https://prnt.sc/qxrtt1 And the same JavaScript code for Selenium Java version works correctly https://prnt.sc/qxrvyk ## Expected behavior Using this JavaScript code  `Object.defineProperty(navigator, 'webdriver', { get: () => undefined })` Flag 'navigator.webdriver' had to get the values 'undefined' instead of 'true'  ## Test script or set of commands reproducing this issue  `       static void Main(string[] args)         {                          IWebDriver driver = new ChromeDriver();             IDevTools devTools = driver as IDevTools;             DevToolsSession session = devTools.CreateDevToolsSession();             session.Page.AddScriptToEvaluateOnNewDocument(new OpenQA.Selenium.DevTools.Page.AddScriptToEvaluateOnNewDocumentCommandSettings()             {                 Source = @""Object.defineProperty(navigator, 'webdriver', { get: () => undefined })""             }              );             driver.Navigate().GoToUrl(""https://google.com"");         }`  ## Environment  OS: Windows 10 Browser: Google Chrome Browser version: 79.0.3945.130 (Official Build) (64-bit) Browser Driver version: ChromeDriver 79.0.3945.36 Selenium version: 4.0.0-alpha04 Language Bindings version:  .Net framework 4.7.2","closed","C-dotnet,","CilSan","2020-02-05T08:46:08Z","2021-09-05T08:31:32Z"
"","7890","ActionChains not working for mouse movements","## üêõ Bug Report I'm trying to do mouse movement using ActionChains but getting no success with it.   ## To Reproduce  ``` import time from selenium import webdriver from selenium.webdriver.common.action_chains import ActionChains  driver = webdriver.Chrome() driver.get(""https://google.com"") actions = ActionChains(driver) actions.move_by_offset(500, 500) actions.perform() time.sleep(5) driver.quit() ```    Detailed steps to reproduce the behavior: Just run the code snippet.  ## Expected behavior The mouse should move after the site loads. ## Environment  OS:  ArchLinux Browser:  Chrome Browser version:  76.0.3809.100 Browser Driver version:  Chromedriver 2.43.600233","closed","R-awaiting answer,","vivekkairi","2019-12-24T18:09:32Z","2020-01-28T20:32:11Z"
"","7867","""session not created: No matching capabilities found"" even the capability is the same","## üêõ Bug Report I'm setting up a selenium grid locally by selenium3, even my capabilities is the same, still not able to create a session.  ## To Reproduce 1. setup hub by:  java -jar selenium-server-standalone-3.141.59.jar -role hub -debug 2. setup node by: java -Dwebdriver.chrome.driver=C:/AZUREGIT/ReachClient/Shield/node_modules/chromedriver/lib/chromedriver/chromedriver.exe -jar selenium-server-standalone-3.141.59.jar -role node -debug -hub http://localhost:4444/grid/register -browser browserName=chrome,platform=WIN8,version=79,seleniumProtocol=WebDriver  3. create a session by http request: Request POST http://10.102.87.169:4444 /wd/hub/session   Body:  {      capabilities: {        browserName: 'chrome',        platform: 'WIN8',        seleniumProtocol: 'WebDriver',        name: 'Authentication\\ Log In Log Out'      },      desiredCapabilities: {        browserName: 'chrome',        platform: 'WIN8',        seleniumProtocol: 'WebDriver',        name: 'Authentication\\ Log In Log Out'      } } ## Expected behavior session created. session not created.   Response 500 POST http://10.102.87.169:4444/wd/hub/session (1299ms)  {      value: {        stacktrace: 'org.openqa.selenium.SessionNotCreatedException: session not created: No matching capabilities found\n' +          ""Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53'\n"" +          ""System info: host: 'TV3-AGNT-1311', ip: '10.102.87.169', os.name: 'Windows 8.1', os.arch: 'x86', os.version: '6.3', java.version: '1.8.0_77'\n"" +          'Driver info: driver.version: unknown\n' +          'remote stacktrace: Backtrace:\n' +          '\tOrdinal0 [0x0034A113+1548563]\n' +  ## Environment  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:   Selenium Grid version (if applicable):     [selenium_hub.log](https://github.com/SeleniumHQ/selenium/files/3972467/selenium_hub.log) [selenium_node.log](https://github.com/SeleniumHQ/selenium/files/3972464/selenium_node.log)","closed","R-awaiting answer,","cjmme","2019-12-17T09:26:31Z","2021-09-05T10:20:21Z"
"","8851","Selenium in IPython: Process unexpectedly closed with status 11","## üêõ Bug Report I try to run a simple code to open firefox browser in IPython but it gives me the following:  For Gecko 0.28.0 (latest): ``` WebDriverException: Message: Process unexpectedly closed with status 11 ``` For Gecko 0.27.0: ``` WebDriverException: Message: invalid argument: can't kill an exited process ``` **Note:** The script works in when run in terminal but not IPython ## To Reproduce  Detailed steps to reproduce the behavior: * Install official Python extension in VSCode * Download latest `geckodriver` (0.28.0) * Run `python3 -m venv .venv` * Install `Selenium` and `IPython` and `Jupyter Notebook` * Run this code: ``` # %% from selenium import webdriver  driver = webdriver.Firefox(     executable_path='.driver/geckodriver') ```  ## Expected behavior Create new Selenium Firefox instance.  ## Test script or set of commands reproducing this issue ``` # %% from selenium import webdriver  driver = webdriver.Firefox(     executable_path='.driver/geckodriver') ``` ## Environment  OS: Ubuntu 20.10 Browser: Firefox Browser version:  82.0 Browser Driver version: GeckoDriver 0.28.0 Language Bindings version: Python 3.8.6 Selenium Grid version: 3.141.0 IPython version: 7.19.0","closed","C-py,","huytrvan","2020-11-07T08:57:54Z","2021-09-05T08:31:30Z"
"","8744","SessionNotCreatedException: Unable to find a matching set of capabilities","## üêõ Bug Report I tried to open google.com using selenium + geckodriver but got the exception.  ## To Reproduce Detailed steps to reproduce the behavior: 1. Run main method in the Test class by any IDE 2. Observe  ## Expected behavior A new Firefox browser window will open and the google.com page will be shown.  ## Actual result A new Firefox browser window will not open and the google.com page will not be shown.  ## Test script or set of commands reproducing this issue ``` import org.openqa.selenium.WebDriver; import org.openqa.selenium.firefox.FirefoxDriver; import org.openqa.selenium.firefox.FirefoxDriverLogLevel; import org.openqa.selenium.firefox.FirefoxOptions;  public class Test {  	public static void main(String[] args) {  		System.setProperty(""webdriver.gecko.driver"", ""src/main/resources/geckodriver""); 		FirefoxOptions options = new FirefoxOptions(); 		options.setLogLevel(FirefoxDriverLogLevel.TRACE);  		WebDriver driver = new FirefoxDriver(options);  		driver.get(""http://google.com""); 		driver.quit(); 	} } ``` ### Link to the project on github: https://github.com/Dmilut/selenium-webdriver  ## Console output  ``` 1601395316102	geckodriver	INFO	Listening on 127.0.0.1:15504 Exception in thread ""main"" org.openqa.selenium.SessionNotCreatedException: Unable to find a matching set of capabilities Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03' System info: host: 'arch', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '5.8.12-arch1-1', java.version: '14.0.2' Driver info: driver.version: FirefoxDriver remote stacktrace:  	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500) 	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481) 	at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62) 	at org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30) 	at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126) 	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) 	at java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958) 	at java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127) 	at java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502) 	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488) 	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) 	at java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150) 	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) 	at java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:131) 	at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:147) 	at Test.main(Test.java:14)  Process finished with exit code 1 ```  ## Environment OS: Arch Linux 5.8.12-arch1-1 Browser: Firefox Browser version: 81.0 (64-bit) Browser Driver version: Geckodriver: 0.27.0 Language Bindings version: Java: openjdk-14.0.2 Selenium Grid version (if applicable): 3.141.59","closed","R-awaiting answer,","Dmilut","2020-09-29T16:11:42Z","2021-09-05T08:19:16Z"
"","8573","StaleElementReferenceException in FindElements(By.TagName(‚Äúa‚Äù)))","## üêõ Bug Report I save site links with the following code, but in some sites, I encounter the following error:  OpenQA.Selenium.StaleElementReferenceException: ""stale element reference: element is not attached to the page document (Session info: chrome=xx.x.xxx.xx)""  problem with (this site): https://namnak.com `private string followlinks(string url) {     IWebDriver driver = new ChromeDriver(@""C:\"");      driver.Navigate().GoToUrl(url);      //...     //...     //...      foreach (var item in driver.FindElements(By.TagName(""a"")))     {                   var url2 = item.GetAttribute(""href"");         //...     } }`  How can I solve this problem?  ## Environment  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:   Selenium Web Driver:","closed","I-question,","parvizblack","2020-07-26T14:44:51Z","2021-09-05T08:37:27Z"
"","8731","The work log of the geckodriver is not displayed","## üêõ Bug Report I am trying to open a page in a browser but only a new window with a blank page opens. To investigate the problem, I want to look at the error log, but the geckodriver operation log is not displayed anywhere. I only get the log from selenium.  ## To Reproduce Detailed steps to reproduce the behavior: 1. Run main method in the Test class by any IDE 2. Wait about 1 min 3. Observe  ## Expected behavior A detailed log of geckodriver is displayed in the console according to the set level TRACE.  ## Actual result A detailed log of geckodriver is not displayed in the console according to the set level TRACE.  ## Test script or set of commands reproducing this issue ``` import org.openqa.selenium.WebDriver; import org.openqa.selenium.firefox.FirefoxDriver; import org.openqa.selenium.firefox.FirefoxDriverLogLevel; import org.openqa.selenium.firefox.FirefoxOptions;  public class Test {      public static void main(String[] args) {          System.setProperty(""webdriver.gecko.driver"", ""src/main/resources/geckodriver"");         FirefoxOptions options = new FirefoxOptions();         options.setCapability(""marionette"", false);         options.setLogLevel(FirefoxDriverLogLevel.TRACE);          WebDriver driver = new FirefoxDriver(options);          driver.get(""http://google.com"");         driver.quit();     } } ``` ## Console output  ``` Exception in thread ""main"" org.openqa.selenium.WebDriverException: Timed out waiting 45 seconds for Firefox to start. Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03' System info: host: 'arch', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '5.8.9-arch2-1', java.version: '14.0.2' Driver info: driver.version: FirefoxDriver at org.openqa.selenium.firefox.XpiDriverService.waitUntilAvailable(XpiDriverService.java:247) at org.openqa.selenium.firefox.XpiDriverService.start(XpiDriverService.java:159) at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:79) at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552) at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213) at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:131) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:147) at Test.main(Test.java:15) Caused by: org.openqa.selenium.net.UrlChecker$TimeoutException: Timed out waiting for [http://localhost:18496/hub/status] to be available after 45002 ms at org.openqa.selenium.net.UrlChecker.waitUntilAvailable(UrlChecker.java:100) at org.openqa.selenium.firefox.XpiDriverService.waitUntilAvailable(XpiDriverService.java:245) ... 7 more Caused by: java.util.concurrent.TimeoutException at java.base/java.util.concurrent.FutureTask.get(FutureTask.java:204) at com.google.common.util.concurrent.SimpleTimeLimiter.callWithTimeout(SimpleTimeLimiter.java:156) at org.openqa.selenium.net.UrlChecker.waitUntilAvailable(UrlChecker.java:75) ... 8 more ```  ### Link to the project on github: https://github.com/Dmilut/selenium-webdriver  ## Environment OS: Arch Linux 5.8.9-arch2-1 Browser: Firefox Browser version: 80.0.1 (64-bit) Browser Driver version: Geckodriver: 0.27.0 Language Bindings version: Java: openjdk-14.0.2 Selenium Grid version (if applicable): 3.141.59","closed","","Dmilut","2020-09-24T17:33:27Z","2021-09-05T08:34:45Z"
"","8003","Unable to perform drag and drop with Selenium (python)","## üêõ Bug Report Hi there,   For test automation, I can't perform drag and drop or click and hold actions with Selenium in python on a private web app. No drag actions seems to be performed at all. I can't share the private app but I reproduce my bug on the following demo website :   http://the-internet.herokuapp.com/drag_and_drop  ## To Reproduce  Below is my basic piece of code for drag and drop / click and hold  ``` from selenium import webdriver from selenium.webdriver import ActionChains from selenium.webdriver.common.by import By  driver = webdriver.Chrome() driver.get('http://the-internet.herokuapp.com/drag_and_drop') dragged = driver.find_element(By.ID, ""column-a"") dropped = driver.find_element(By.ID, ""column-b"")  #Drag and drop  actions = ActionChains(driver) actions.drag_and_drop(dragged, dropped).perform()  #column A is selected but not dragged  #Click and hold actions = ActionChains(driver) actions.move_to_element(dragged).click_and_hold().move_to_element(dropped).release().perform() #Same result : column a is selected but not dragged ```  Detailed steps to reproduce the behavior: Juste reuse the code with the provided demo website.  ## Expected behavior  Block A and Block B should be switched.  ## Test script or set of commands reproducing this issue Please, see the code above  ## Environment  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:   Selenium :    Thanks for your help :)","closed","C-py,","GuillaumeHarel","2020-02-06T08:56:04Z","2021-09-05T08:15:51Z"
"","8612","http.client.RemoteDisconnected: Remote end closed connection without response error using driver.quit() of Selenium Python","## üêõ Bug Report driver.quit() raise RemoteDisconnected. ## To Reproduce Detailed steps to reproduce the behavior: ``` from selenium import webdriver  driver = webdriver.Chrome(""D:/webdriver/chromedriver.exe"") driver.get(""https://github.com"") driver.quit() ``` When executing `driver.quit()`, the exception raise:  ``` Traceback (most recent call last):   File ""C:/Users/taiping/Desktop/data_test/selenium_test.py"", line 5, in      driver.quit()   File ""D:\python3.8\lib\site-packages\selenium\webdriver\chrome\webdriver.py"", line 158, in quit     self.service.stop()   File ""D:\python3.8\lib\site-packages\selenium\webdriver\common\service.py"", line 151, in stop     self.send_remote_shutdown_command()   File ""D:\python3.8\lib\site-packages\selenium\webdriver\common\service.py"", line 127, in send_remote_shutdown_command     url_request.urlopen(""%s/shutdown"" % self.service_url)   File ""D:\python3.8\lib\urllib\request.py"", line 222, in urlopen     return opener.open(url, data, timeout)   File ""D:\python3.8\lib\urllib\request.py"", line 525, in open     response = self._open(req, data)   File ""D:\python3.8\lib\urllib\request.py"", line 542, in _open     result = self._call_chain(self.handle_open, protocol, protocol +   File ""D:\python3.8\lib\urllib\request.py"", line 502, in _call_chain     result = func(*args)   File ""D:\python3.8\lib\urllib\request.py"", line 1379, in http_open     return self.do_open(http.client.HTTPConnection, req)   File ""D:\python3.8\lib\urllib\request.py"", line 1354, in do_open     r = h.getresponse()   File ""D:\python3.8\lib\http\client.py"", line 1332, in getresponse     response.begin()   File ""D:\python3.8\lib\http\client.py"", line 303, in begin     version, status, reason = self._read_status()   File ""D:\python3.8\lib\http\client.py"", line 272, in _read_status     raise RemoteDisconnected(""Remote end closed connection without"" http.client.RemoteDisconnected: Remote end closed connection without response ```  But this code has no error on my Macbook. What's the problem?  I open the debugger and found that every `HTTPConnection` object have been set the system wide http proxy. But I did not set any options explicitly in my code. And the `driver.quit` method will send http://localhost:59717/shutdown to chrome to perform quit. So I guess the shutdown url is actually sent to the proxy server, not the local browser.  And I try to use fiddler to check the request informations. There is another problem that I can not decode the https requests because of some certificates configs. So I change the argument of `driver.get()` to an internal web url of my company. The result is : If I close fiddler, `RemoteDisconnected` error raise again. And if I open fiddler, all works.  What happened? I know fiddler set the proxy to 127.0.0.1:8888, so I think there could be something wrong with the proxy settings. But I can not fix it.  I guess the chrome use the system proxy so the github home page could open correctly, but when send shutdown url to chrome, the request object should not use the system proxy, but it does.  Am I right? And how to fix this problem?  ## Expected behavior chromedriver.exe closed without any exceptions. ## Test script or set of commands reproducing this issue  ``` from selenium import webdriver  driver = webdriver.Chrome(""D:/webdriver/chromedriver.exe"") driver.get(""https://github.com"") driver.quit() ```  ## Environment  - Python 3.8 - Selenium 3.141.0 - Windows 10 (behind a proxy) - Chrome:84.0.4147.105 - Chromedriver:84.0.4147.30  - Mac 10.15.6 (does not has a proxy)","closed","C-py,","mrd2242","2020-08-05T13:31:11Z","2021-09-05T08:36:04Z"
"","7999","Drag and drop of an element between top window and iframe is not working.","## üêõ Bug Report Drag and drop of an element between top window and iframe is not working.   ## To Reproduce Unable to drag an element from top window and drop on another element present within an iframe. Mouse is holding that draggable element but not dropping on the droppable element. Below I mention OS and Browser information.  ## Environment OS: MacOS Catalina Browser: Safari  Browser version: 13.0.3 (15608.3.10.1.4) Browser Driver version: selenium-safari-driver-3.141.59.jar Selenium version: 3.141.59  Let me know if you need more details.","closed","needs-triaging,","chowdhur","2020-02-04T15:23:27Z","2020-04-15T08:42:29Z"
"","8646","I am facing this issue while running the script need help how to fix this issue!!!!","## üêõ Bug Report Aug 25, 2020 2:03:36 PM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: W3C launch activity org.openqa.selenium.InvalidSelectorException: Locator Strategy 'css selector' is not supported for this session For documentation on this error, please visit: http://seleniumhq.org/exceptions/invalid_selector_exception.html Build info: version: '3.4.0', revision: 'unknown', time: 'unknown' System info: host: 'DESKTOP-NS33GG1', ip: '192.168.5.241', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111' Driver info: io.appium.java_client.android.AndroidDriver Capabilities [{appPackage=com.mm.parentalcontrol, deviceScreenSize=720x1600, networkConnectionEnabled=true, statBarHeight=68.0, warnings={}, viewportRect={top=68.0, left=0.0, width=720.0, height=1380.0}, databaseEnabled=false, deviceName=RF8N62GTVSJ, platform=LINUX, deviceUDID=RF8N62GTVSJ, appActivity=com.mm.parentalcontrol.ui.activities.SplashScreen, desired={appPackage=com.mm.parentalcontrol, appActivity=com.mm.parentalcontrol.ui.activities.SplashScreen, platformVersion=10, platformName=Android, udid=RF8N62GTVSJ, deviceName=Galaxy A21s}, platformVersion=10, pixelRatio=1.75, webStorageEnabled=false, locationContextEnabled=false, takesScreenshot=true, javascriptEnabled=true, deviceScreenDensity=280.0, deviceModel=SM-A217F, platformName=Android, udid=RF8N62GTVSJ, deviceApiLevel=29.0, deviceManufacturer=samsung}] Session ID: 6fc890a7-12c9-469f-9d25-6f7e19511c7a *** Element info: {Using=id, value=com.mm.parentalcontrol:id/englishLL} 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:150) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:115) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:45) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:164) 	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:52) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:637) 	at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42) 	at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1) 	at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1) 	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:410) 	at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:453) 	at io.appium.java_client.DefaultGenericMobileDriver.findElementById(DefaultGenericMobileDriver.java:62) 	at io.appium.java_client.AppiumDriver.findElementById(AppiumDriver.java:1) 	at io.appium.java_client.android.AndroidDriver.findElementById(AndroidDriver.java:1) 	at org.openqa.selenium.By$ById.findElement(By.java:218) 	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:402) 	at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:52) 	at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1) 	at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1) 	at Config.main(Config.java:34)  Process finished with exit code 0 Did you find something wrong with the site or the documentation? Please describe your finding in a clear and concise way.   ## To Reproduce  How can we reproduce the issue you found? Please tell us how we can do that.  Don't forget to add:  * Absolute link where the issue was found * Screenshot (if needed)  * The environment you had when the issue was found (see below)  Tell us the detailed steps to reproduce it:   ## Expected behavior  What do you expected to happen? How should have it worked?  ## Environment  * OS:  * Browser:  * Browser version:","closed","needs-triaging,","arslan8625","2020-08-25T09:30:03Z","2021-09-05T08:37:18Z"
"","7891","[18960:6772:1226/104434.641:ERROR:CONSOLE(108)] ""Uncaught (in promise) Error: Could not instantiate: ProductRegistryImpl.Registry"", source: chrome-devtools://devtools/bundled/shell.js (108)","## üêõ Bug Report [18960:6772:1226/104434.641:ERROR:CONSOLE(108)] ""Uncaught (in promise) Error: Could not instantiate: ProductRegistryImpl.Registry"", source: chrome-devtools://devtools/bundled/shell.js (108)  ## Environment  OS: Windows 10 Browser: Chrome Browser version:  70.0.3538.110  Browser Driver version:  ChromeDriver 2.45 Language Bindings version: C#","closed","","12371601","2019-12-26T02:56:35Z","2020-01-25T22:59:13Z"
"","8250","[4.0.0-alpha5] Socket hangup from Selenium jar when using w3c and node js http","## üêõ Bug Report  While using selenium 4 alpha 5 jar with w3c on nodejs, I am seeing socket hangups from jar  (status code - 500) with few commands (execute/sync & /element)  gist to reproduce https://gist.github.com/Dharin-shah/328a9c02faa764d7ff146fd90fd770cb  It seems to be an issue with payload specifically when using http lib. Although I am not quite sure what is happening, however 500 is usually a problem with the server. Using the same script I am able to run on selenium 3 jar   ## To Reproduce https://gist.github.com/Dharin-shah/328a9c02faa764d7ff146fd90fd770cb  Detailed steps to reproduce the behavior: Added in gist   ## Environment  OS: OSX Catalina  Browser: Chrome Browser version: 81  Browser Driver version: ChromeDriver 81  Selenium Grid version (if applicable): 4.0.0-alpha-5","closed","C-java,","Dharin-shah","2020-04-27T14:10:25Z","2021-09-05T09:43:56Z"
"","8569","Unable to create node in Selenium-grid with apple-tvOS (tvOS) & you.i tvOS (yitvOS) capabilities","## üêõ Bug Report  While Trying to Crete node in Selenium grid with Apple tv & you.i tv capabilities throwing error org.openqa.selenium.platform  java.lang.IllegalArgumentException: No enum constant org.openqa.selenium.Platform.YItvOS java.lang.IllegalArgumentException: No enum constant org.openqa.selenium.Platform.tvOS 	at java.base/java.lang.Enum.valueOf(Enum.java:273) 	at org.openqa.selenium.Platform.valueOf(Platform.java:30) 	at org.openqa.grid.web.servlet.console.DefaultProxyHtmlRenderer.getPlatform(DefaultProxyHtmlRenderer.java:215) 	at org.openqa.grid.web.servlet.console.DefaultProxyHtmlRenderer.getPlatform(DefaultProxyHtmlRenderer.java:194) 	at org.openqa.grid.web.servlet.console.DefaultProxyHtmlRenderer.renderSummary(DefaultProxyHtmlRenderer.java:54) 	at org.openqa.grid.web.servlet.console.ConsoleServlet.process(ConsoleServlet.java:125) 	at org.openqa.grid.web.servlet.console.ConsoleServlet.doGet(ConsoleServlet.java:60) 	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687) 	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790) 	at org.seleniumhq.jetty9.servlet.ServletHolder.handle(ServletHolder.java:865) 	at org.seleniumhq.jetty9.servlet.ServletHandler.doHandle(ServletHandler.java:535) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:146) 	at org.seleniumhq.jetty9.security.SecurityHandler.handle(SecurityHandler.java:548) 	at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:257) 	at org.seleniumhq.jetty9.server.session.SessionHandler.doHandle(SessionHandler.java:1595) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:255) 	at org.seleniumhq.jetty9.server.handler.ContextHandler.doHandle(ContextHandler.java:1340) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:203) 	at org.seleniumhq.jetty9.servlet.ServletHandler.doScope(ServletHandler.java:473) 	at org.seleniumhq.jetty9.server.session.SessionHandler.doScope(SessionHandler.java:1564) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:201) 	at org.seleniumhq.jetty9.server.handler.ContextHandler.doScope(ContextHandler.java:1242) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:144) 	at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132) 	at org.seleniumhq.jetty9.server.Server.handle(Server.java:503) 	at org.seleniumhq.jetty9.server.HttpChannel.handle(HttpChannel.java:364) 	at org.seleniumhq.jetty9.server.HttpConnection.onFillable(HttpConnection.java:260) 	at org.seleniumhq.jetty9.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:305) 	at org.seleniumhq.jetty9.io.FillInterest.fillable(FillInterest.java:103) 	at org.seleniumhq.jetty9.io.ChannelEndPoint$2.run(ChannelEndPoint.java:118) 	at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:333) 	at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:310) 	at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:168) 	at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:126) 	at org.seleniumhq.jetty9.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:366) 	at org.seleniumhq.jetty9.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:765) 	at org.seleniumhq.jetty9.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:683) 	at java.base/java.lang.Thread.run(Thread.java:832) 2020-07-23 14:01:20.232:WARN:osjs.HttpChannel:qtp1262773598-31: /grid/consolejava.lang.IllegalArgumentException: No enum constant org.openqa.selenium.Platform.tvOS 	at java.base/java.lang.Enum.valueOf(Enum.java:273) 	at org.openqa.selenium.Platform.valueOf(Platform.java:30) 	at org.openqa.grid.web.servlet.console.DefaultProxyHtmlRenderer.getPlatform(DefaultProxyHtmlRenderer.java:215) 	at org.openqa.grid.web.servlet.console.DefaultProxyHtmlRenderer.getPlatform(DefaultProxyHtmlRenderer.java:194) 	at org.openqa.grid.web.servlet.console.DefaultProxyHtmlRenderer.renderSummary(DefaultProxyHtmlRenderer.java:54) 	at org.openqa.grid.web.servlet.console.ConsoleServlet.process(ConsoleServlet.java:125) 	at org.openqa.grid.web.servlet.console.ConsoleServlet.doGet(ConsoleServlet.java:60) 	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687) 	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790) 	at org.seleniumhq.jetty9.servlet.ServletHolder.handle(ServletHolder.java:865) 	at org.seleniumhq.jetty9.servlet.ServletHandler.doHandle(ServletHandler.java:535) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:146) 	at org.seleniumhq.jetty9.security.SecurityHandler.handle(SecurityHandler.java:548) 	at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:257) 	at org.seleniumhq.jetty9.server.session.SessionHandler.doHandle(SessionHandler.java:1595) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:255) 	at org.seleniumhq.jetty9.server.handler.ContextHandler.doHandle(ContextHandler.java:1340) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:203) 	at org.seleniumhq.jetty9.servlet.ServletHandler.doScope(ServletHandler.java:473) 	at org.seleniumhq.jetty9.server.session.SessionHandler.doScope(SessionHandler.java:1564) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:201) 	at org.seleniumhq.jetty9.server.handler.ContextHandler.doScope(ContextHandler.java:1242) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:144) 	at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132) 	at org.seleniumhq.jetty9.server.Server.handle(Server.java:503) 	at org.seleniumhq.jetty9.server.HttpChannel.handle(HttpChannel.java:364) 	at org.seleniumhq.jetty9.server.HttpConnection.onFillable(HttpConnection.java:260) 	at org.seleniumhq.jetty9.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:305) 	at org.seleniumhq.jetty9.io.FillInterest.fillable(FillInterest.java:103) 	at org.seleniumhq.jetty9.io.ChannelEndPoint$2.run(ChannelEndPoint.java:118) 	at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:333) 	at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:310) 	at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:168) 	at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:126) 	at org.seleniumhq.jetty9.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:366) 	at org.seleniumhq.jetty9.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:765) 	at org.seleniumhq.jetty9.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:683) 	at java.base/java.lang.Thread.run(Thread.java:832) 2020-07-23 14:01:20.232:WARN:osjs.HttpChannel:qtp1262773598-31: /grid/console     ## To Reproduce    Detailed steps to reproduce the behavior: use below capabilites   capabilities : {     ""capabilities"":         [             {                 ""platformName"":""YItvOS"" (OR) ""tvOS"", 		""deviceName"":""AppleTV-4k"",                 ""appium:automationName"": ""YouiEngine"" or ""XCUITest"",                 ""appium:udid"": ""udid""             }         ],     ""configuration"":     {       ""cleanUpCycle"":2000,       ""timeout"":30000,       ""proxy"": ""org.openqa.grid.selenium.proxy.DefaultRemoteProxy"",       ""maxSession"": 1,       ""register"": true,       ""registerCycle"": 5000,       ""hubPort"": 8080,       ""hubHost"": ""hostip"",       ""hubProtocol"": ""http"",       ""role"":""node"",       ""debug"":true     }   }  run below  command :      appium --nodeconfig=/path/nodeconfig-tvOS.json -p port -a host ## Expected behavior Grid should support YItvOS and tvOS other platforms  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS:  OSX Browser:  Browser version:  Browser Driver version:  Language Bindings version:   Selenium Grid version (if applicable):  3.141.59","closed","","prathapJonnadula","2020-07-23T21:51:41Z","2021-09-05T08:15:37Z"
"","8143","'org.openqa.selenium.WebDriverException: chrome not reachable' on Ubuntu 18.04 with Chrome 80","## üêõ Bug Report  While interacting with element on chrome it results into - org.openqa.selenium.WebDriverException: chrome not reachable   ## To Reproduce Detailed steps to reproduce the behavior: 1. On Ubuntu 18.04 with Chrome version 80.0.3987.87 open an url 2. Interact with an element which has used ExpectedConditions  Note: I tried with different Chrome Driver versions mentioned under 'Browser Driver Version' ## Expected behavior Element should be interacted  ## Environment  OS: Ubuntu 18.04 Browser: Chrome Browser version: 80.0.3987.87 Browser Driver version:   1. 79.0.3945.36 2. 80.0.3987.16 3. 80.0.3987.106 Language Bindings version: Java 3.14  ## Actual Behavior It gives error -          [testng] WARNING: WebDriverException thrown by findElement(By.id: j_username)        [testng] org.openqa.selenium.WebDriverException: chrome not reachable        [testng]   (Session info: chrome=80.0.3987.87)        [testng]   (Driver info: chromedriver=79.0.3945.36 (3582db32b33893869b8c1339e8f4d9ed1816f143-refs/branch-heads/3945@{#614}),platform=Linux 4.15.0-74-generic x86_64) (WARNING: The server did not provide any stacktrace information)        [testng] Command duration or timeout: 0 milliseconds        [testng] Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:13:22.693Z'        [testng] Driver info: org.openqa.selenium.chrome.ChromeDriver        [testng] Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 79.0.3945.36 (3582db32b3389..., userDataDir: /tmp/.com.google.Chrome.pFnA2S}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:41391}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, proxy: Proxy(), rotatable: false, setWindowRect: true, strictFileInteractability: false, takesHeapSnapshot: true, takesScreenshot: true, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unexpectedAlertBehaviour: ignore, unhandledPromptBehavior: ignore, version: 80.0.3987.87, webStorageEnabled: true}        [testng] Session ID: 215e1bff4f63437dbf8a0b8f0570c41b        [testng] *** Element info: {Using=id, value=j_username}        [testng] 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)        [testng] 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)        [testng] 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)        [testng] 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)        [testng] 	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)        [testng] 	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)        [testng] 	at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)        [testng] 	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)        [testng] 	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)        [testng] 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)        [testng] 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)        [testng] 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548)        [testng] 	at org.openqa.selenium.remote.RemoteWebDriver.findElements(RemoteWebDriver.java:349)        [testng] 	at org.openqa.selenium.remote.RemoteWebDriver.findElementsById(RemoteWebDriver.java:372)        [testng] 	at org.openqa.selenium.By$ById.findElements(By.java:180)        [testng] 	at org.openqa.selenium.remote.RemoteWebDriver.findElements(RemoteWebDriver.java:310)        [testng] 	at org.openqa.selenium.support.ui.ExpectedConditions.findElement(ExpectedConditions.java:895)        [testng] 	at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:44)        [testng] 	at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:206)        [testng] 	at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:202)        [testng] 	at org.openqa.selenium.support.ui.ExpectedConditions$22.apply(ExpectedConditions.java:657)        [testng] 	at org.openqa.selenium.support.ui.ExpectedConditions$22.apply(ExpectedConditions.java:654)        [testng] 	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:260)        [testng] 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)        [testng] 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)        [testng] 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)        [testng] 	at java.lang.reflect.Method.invoke(Method.java:498)        [testng] 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)        [testng] 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)        [testng] 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)        [testng] 	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)        [testng] 	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)        [testng] 	at java.util.concurrent.FutureTask.run(FutureTask.java:266)        [testng] 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)        [testng] 	at java.util.concurrent.FutureTask.run(FutureTask.java:266)        [testng] 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)        [testng] 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)        [testng] 	at java.lang.Thread.run(Thread.java:745)   ## Additional Info This reproduces only when we run tests through Jenkins pipeline along with Xvfb. If we run same test from the machine, it succeeds.","closed","needs-triaging,","gajananrmahajan","2020-03-28T11:09:52Z","2020-05-05T21:23:21Z"
"","7885","Javascript issue: Unable to clone node using execute_script:  selenium.common.exceptions.StaleElementReferenceException","## üêõ Bug Report  When we execute java script to clone node, stale element exception is always thrown. This issue is specific to this java script only while executing from execute script. This issue can be seen on web.  selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found  ## To Reproduce  driver.get(""https://www.google.com"") driver.execute_script(""return arguments[0].cloneNode(true)"", driver.findElement(rBy.name(""q""));  ## Environment  OS: OSX Browser: Chrome Browser version: 79 Browser Driver version: 79 Language Bindings version: java / python","closed","needs-triaging,","Naumansh","2019-12-23T16:52:38Z","2020-04-15T08:15:25Z"
"","7921","The ""path [...] set by the webdriver.gecko.driver system property"" error doesn't get to the client using RemoteWebDriver","## üêõ Bug Report  When using selenium-server through the RemoteWebDriver and in the standalone server the property webdriver.gecko.driver isn't set, the problem is neither logged nor transparently reported to the client, where instead one gets 'SessionNotCreatedException: Unable to create new service: GeckoDriverService', resulting in an unnecessary diagnostic activity by the user.  The problem was partially reported in the issue https://github.com/SeleniumHQ/selenium/issues/6159 now closed.    ## To Reproduce    Detailed steps to reproduce the behavior:  ## Expected behavior  A clear and concise description of what you expected to happen.  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:   Selenium Grid version (if applicable):","closed","needs-triaging,","ygmarchi","2020-01-09T14:39:18Z","2020-04-15T08:45:13Z"
"","8221","selenium-server-standalone dumps Firefox profile on stderr","## üêõ Bug Report  When using custom Firefox profile, `java -jar selenium-server-standalone-3.141.59.jar -role node` dumps the whole (zipped?) profile to stderr, as part of Capabilities. This is several Megabytes...  ## To Reproduce  `java -jar selenium-server-standalone-3.141.59.jar -role node`   with `prepareLoadedProfile_` as `ffProfile` (using Haskell bindings)  This seems to be [Bug 3027](https://github.com/SeleniumHQ/selenium/issues/3027) comeback...  ## Expected behavior  There should be some way of restricting diagnostic messages to something reasonable... One should not have megabytes of data just dumped on `stderr`, especially when there is no actual error.  ## Environment  OS: Debian Buster Browser: Firefox Browser version: 75.0 Browser Driver version: selenium-server-standalone-3.141.59 Language Bindings version:  https://hackage.haskell.org/package/webdriver","closed","R-awaiting answer,","amkhlv","2020-04-19T14:48:47Z","2021-09-05T09:44:06Z"
"","8879","find element by xpath does not throw an error when the text is not in quotes and will select the wrong element","## üêõ Bug Report  When using contains text for an xpath, when the text it is looking for is not in quotes, no error is given and it selects the wrong element.  ## To Reproduce this code will run without an error but chooses the wrong element list_name = 'some text' element = self.browser.find_element_by_xpath('//span[contains(text(),' + list_name +')]') element.click()  Corrected code that will select the correct element (notice additional "" "" around variable name): list_name = 'some text' list_to_select = self.browser.find_element_by_xpath('//span[contains(text(),""' + list_name +'"")]')  ## Expected behavior Selenium throws an error saying the element cannot be located or it says element cannot be found.   ## Test script or set of commands reproducing this issue see code above site tested and actual code cannot be shared due to confidentiality reasons   ## Environment  OS: Windows 10 Browser: Chrome. Edge Browser version: Chrome and Edge 86. Browser Driver version: ChromeDriver 86","closed","needs-triaging,","Tweed-Inmedia","2020-11-16T20:50:27Z","2021-09-05T08:31:26Z"
"","8380","IllegalArgumentException thrown when using Relative Locators in alpha-6 version","## üêõ Bug Report  When using any Relative Locator with the alpha-6 version, I am getting the following exception **java.lang.IllegalArgumentException: Argument is of an illegal type: org.openqa.selenium.By$ByTagName** .  The code that you will find below throws the aforementioned exception in version **alpha-6**, but it works properly in alpha-5 and alpha-4.  ## To Reproduce  ```java import io.github.bonigarcia.wdm.WebDriverManager; import org.openqa.selenium.By; import org.openqa.selenium.WebElement; import org.openqa.selenium.chrome.ChromeDriver; import org.openqa.selenium.support.locators.RelativeLocator; import org.testng.annotations.Test;  public class BasicTests {      @Test     public void theBestTest() {         WebDriverManager.chromedriver().setup();         ChromeDriver driver = new ChromeDriver();         driver.get(""https://mvnrepository.com/"");         WebElement parentElement = driver.findElement(By.xpath(""(//a[@href='/open-source'])[2]""));         RelativeLocator.RelativeBy by = RelativeLocator.withTagName(""a"").below(parentElement);         driver.findElement(by).click();     } } ```  Detailed steps to reproduce the behavior: Run the tests using the alpha-6 version of Selenium and the exception will occur.  ## Expected behavior  ""Aspect Oriented"" link should should be successfully located and clicked, like when using alpha-5 or alpha-4.  ## Actual behavior  The following exception is thrown:  ``` java.lang.IllegalArgumentException: Argument is of an illegal type: org.openqa.selenium.By$ByTagName  	at org.openqa.selenium.remote.internal.WebElementToJsonConverter.apply(WebElementToJsonConverter.java:85) 	at org.openqa.selenium.remote.internal.WebElementToJsonConverter.apply(WebElementToJsonConverter.java:79) 	at org.openqa.selenium.remote.internal.WebElementToJsonConverter.apply(WebElementToJsonConverter.java:79) 	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) 	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948) 	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) 	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) 	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913) 	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) 	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578) 	at org.openqa.selenium.remote.RemoteWebDriver.executeScript(RemoteWebDriver.java:514) 	at org.openqa.selenium.support.locators.RelativeLocator$RelativeBy.findElements(RelativeLocator.java:176) 	at org.openqa.selenium.By.findElement(By.java:132) 	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:325) 	at BasicTests.theBestTest(BasicTests.java:18) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.base/java.lang.reflect.Method.invoke(Method.java:564) 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134) 	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597) 	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173) 	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46) 	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816) 	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146) 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146) 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128) 	at java.base/java.util.ArrayList.forEach(ArrayList.java:1510) 	at org.testng.TestRunner.privateRun(TestRunner.java:766) 	at org.testng.TestRunner.run(TestRunner.java:587) 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:384) 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378) 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337) 	at org.testng.SuiteRunner.run(SuiteRunner.java:286) 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53) 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96) 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187) 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1109) 	at org.testng.TestNG.runSuites(TestNG.java:1039) 	at org.testng.TestNG.run(TestNG.java:1007) 	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66) 	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:110) ```  ## Environment  OS: MacoS Catalina Browser: Chrome, Firefox Browser version: Chrome 83.0.4103.61, Firefox 76.0.1 (64-bit) Browser Driver version: ChromeDriver 83.0.4103.39, Geckodriver 0.26.0 Language Bindings version: Java 14.0.1 Selenium Grid version (if applicable): N/A","closed","needs-triaging,","Trollistar","2020-06-01T14:27:32Z","2021-09-05T09:36:44Z"
"","8579","IWebElement.FindElement(By.XPath) not restricted to IWebElement scope","## üêõ Bug Report  When using ""element.FindElement(By.XPath)"" within a foreach loop on a list of IWebElements the FindElement is not restricted to the ""element"" scope.  When using ""element.FindElement(By.CssSelector)"" within a foreach loop on a list of IWebElements the FindElement is correctly restricted to the ""element"" scope.  I believe this could be the same issue as #8024  ## To Reproduce  This snippet is runnable if you have a selenium project using MSTest. If not, you should be able to copy and paste the code from within the TestMethods into whatever framework you have.  https://gist.github.com/Snogren/92cd772e4264b10da2c374919d840692  ## Expected behavior  As you can see in this screenshot, the CSS locator example on the right is limited to parent element scope and returns the text from each element in the loop.  The XPath locator example is not restricted to parent element scope and returns the text from the first matching element on the page.  ![image](https://user-images.githubusercontent.com/46324893/88688132-06d65300-d0c7-11ea-8e0c-4a15f6b71eec.png)   ## Test script or set of commands reproducing this issue  See above under ""To Reproduce"", https://gist.github.com/Snogren/92cd772e4264b10da2c374919d840692  ## Environment  OS: Windows 10 Browser: Chrome Browser version: Version 84.0.4147.105 (Official Build) (64-bit) Browser Driver version: ChromeDriver 84.0.4147.30 Language Bindings version: .NET 4.7.2","closed","needs-triaging,","Snogren","2020-07-28T15:48:39Z","2021-09-05T09:02:51Z"
"","8752","Selenium Grid 4 Alpha 6 Fails to Launch When No Drivers are Installed","## üêõ Bug Report  When trying to launch Selenium Grid Alpha 6 without any drivers (chrome/gecko/etc) installed, I was getting this unhelpful error: ``` PS > java -jar .\selenium-server-4.0.0-alpha-6.jar standalone 02:16:02.691 INFO [LoggingOptions.getTracer] - Using OpenTelemetry for tracing 02:16:02.707 INFO [LoggingOptions.createTracer] - Using OpenTelemetry for tracing 02:16:02.738 INFO [EventBusOptions.createBus] - Creating event bus: org.openqa.selenium.events.local.GuavaEventBus Exception in thread ""main"" java.lang.IllegalArgumentException: Max session count must be greater than 0         at org.openqa.selenium.internal.Require.positive(Require.java:147)         at org.openqa.selenium.grid.data.NodeStatus.(NodeStatus.java:60)         at org.openqa.selenium.grid.node.local.LocalNode.getStatus(LocalNode.java:359)         at org.openqa.selenium.grid.distributor.local.LocalDistributor.add(LocalDistributor.java:337)         at org.openqa.selenium.grid.distributor.local.LocalDistributor.add(LocalDistributor.java:82)         at org.openqa.selenium.grid.commands.Standalone.execute(Standalone.java:160)         at org.openqa.selenium.grid.TemplateGridCommand.lambda$configure$2(TemplateGridCommand.java:97)         at org.openqa.selenium.grid.Main.launch(Main.java:154)         at org.openqa.selenium.grid.Main.go(Main.java:88)         at org.openqa.selenium.grid.Main.main(Main.java:54) ```  I then tried to launch with `java -jar .\selenium-server-4.0.0-alpha-6.jar standalone --max-sessions 2` but received the same error, so became confused.  Installing Chromedriver via `choco install chromedriver` fixed the error.  **Suggestion is to improve the error to make it more clear that no drivers were detected.**  Reason I had no drivers is because I was just testing for the first time Selenium Grid 4 on a fresh machine, and would soon go down the process of installing drivers.  ## To Reproduce 1) Spin up a fresh OS environment with only Java installed 2) Download [selenium-server-4.0.0-alpha-6.jar](https://selenium-release.storage.googleapis.com/4.0-alpha-6/selenium-server-4.0.0-alpha-6.jar) 3) Run `java -jar selenium-server-4.0.0-alpha-6.jar standalone`  ## Expected behavior An error saying something along the lines of: >No drivers detected. Please install a driver such as chromedriver  Alternatively, let me launch the node and connect to the hub, but have no available sessions (this might confuse new users, but for me I was just simply testing the node registration process for the first time on se4)  ## Test script or set of commands reproducing this issue `java -jar selenium-server-4.0.0-alpha-6.jar standalone`  ## Environment  OS: Amazon Linux 2 and Windows 10 Browser: n/a Browser version: n/a Browser Driver version: n/a Language Bindings version: n/a Selenium Grid version (if applicable): 4.0.0 Alpha 6","closed","needs-triaging,","dylanlive","2020-10-01T02:31:59Z","2021-09-05T08:34:42Z"
"","8225","WebElement.getAttribute() fails on multiline attribute","## üêõ Bug Report  When trying to get element's `title` attribute, I end up with empty string, while doing the same with other attributes, I get the desired string/boolean. When digging into the issue, I noticed, that the `title` attribute is multiline, ending with EoL (LF). Trying to reproduce the issue on the same element directly from browser console (with pure js) ended up negative as I got the correct string.  ## To Reproduce  Element:  ```html     ...  ```  Code: ```js const elm = await driver.findElement(By.css(""bookmark-item"")); const title = await elm.getAttribute(""title""); const style = await elm.getAttribute(""style"");  console.log(title); // result: """" console.log(style); // result: ""position: absolute; transform: translate(0px, 32px);"" ```  I received similar results with `getAttribute(""outerHTML"")`:  ```html     ...  ```  ## Expected behavior  I should get the correct result, no matter if the attribute is multiline.  ## Environment  OS: Windows 10 Browser: NW.js Browser version: 0.44.6 Browser Driver version: ChromeDriver 80.0.3987.162 (from nw.js sdk) Language Bindings version: Node.js/Javascript Selenium Grid version (if applicable): 4.0.0-alpha.7","closed","","tomas-hartman","2020-04-21T13:46:41Z","2021-09-05T09:02:59Z"
"","7967","InternetExplorerDriver sporadically captures wrong screenshots","## üêõ Bug Report  When trying to capture a specific webpage on IE 11, even though I see an element (SVG image) it sometimes doesn't show in the captured image.  ## To Reproduce  1. Create a project from this gist: https://gist.github.com/itaibh/2caccf7206a622aaf2ee79479beabc9e (it has a `pom.xml` file and a `.java` file) 2. Run the test.  ## Expected behavior  All screenshots match the website. Currently the website looks like this: ![image](https://user-images.githubusercontent.com/140983/73245967-28a55a80-41b6-11ea-8f1f-91cd0aa484d4.png)   ## Actual behavior  Sometimes these are the screenshots we get (only on IE):  ![image](https://user-images.githubusercontent.com/140983/73246072-6609e800-41b6-11ea-90af-6cb2ff37a1e7.png)  or  ![image](https://user-images.githubusercontent.com/140983/73246109-7b7f1200-41b6-11ea-9578-4be64d468322.png)  And sometimes none of the SVG images. Only the text is present.  I did notice the more commands we perform on the browser using the IEDriver, the more likely it is to reproduce the problem.  ## Environment  OS:  Windows 10 Browser: Internet Explorer Browser version: 11 Browser Driver version: IEDriverServer 3.150.1.0 Language Bindings version: Java 3.141.59","closed","","itaibh","2020-01-28T08:13:10Z","2020-03-10T19:23:32Z"
"","8750","CreateDevToolsSession().Network.SetBlockedURLs(blockedUrlSettings) does not block urls","## üêõ Bug Report  When trying to block requests in Chrome 85 and Selenium 4.0.0-alpha05, requests are not being blocked at all.  ## To Reproduce  Create new project in .net core (NUnit + Selenium + ChromeDriver) and run test  ```cs         [SetUp]         public void Setup()         {              var _driver = new ChromeDriver();             var session = _driver.CreateDevToolsSession();                          var blockedUrlSettings = new SetBlockedURLsCommandSettings();             blockedUrlSettings.Urls = new string[]             {                 ""http://automationpractice.com/img/p/1/6/16-large_default.jpg"",                  ""http://automationpractice.com/modules/blockbanner/img/sale70.png"",             };                          session.Network.SetBlockedURLs(blockedUrlSettings);             _driver.Manage().Window.Maximize();             _driver.Navigate().GoToUrl(""http://automationpractice.com/"");         }  ```  ## Expected behavior  Webpage http://automationpractice.com/ should be loaded without two blocked images from blockedUrlSettings.Urls Instead images are loaded when test is running.  ## Test script or set of commands reproducing this issue  https://github.com/misiekofski/BlackHoleProxyPattern  ## Environment  OS: Windows 10 Browser: Chrome Browser version: 85.0.4183.121  Browser Driver version: 85.0.4183.8700 Language Bindings version: C#, .net core 3.1","closed","","misiekofski","2020-09-30T19:06:29Z","2021-09-05T08:33:58Z"
"","8595","While running a suite of remote tests, tests starts to fail open new webdriver instance with error ""failed to create a child event loop""","## üêõ Bug Report  When the test suite is run after 40-50 tests using selenium4.0.0-alpha04 jar, the test to open new webdriver instance starts failing with below exception.  This suite works fine with selenium-server-standalone-3.141.59.jar  The code to spawn the new browser is:  new RemoteWebDriver(new URL(remoteServerUrl), getEdgeChromiumOptions());  `java.lang.IllegalStateException: failed to create a child event loop 	at io.netty.util.concurrent.MultithreadEventExecutorGroup.(MultithreadEventExecutorGroup.java:88) 	at io.netty.util.concurrent.MultithreadEventExecutorGroup.(MultithreadEventExecutorGroup.java:58) 	at io.netty.util.concurrent.MultithreadEventExecutorGroup.(MultithreadEventExecutorGroup.java:47) 	at io.netty.channel.MultithreadEventLoopGroup.(MultithreadEventLoopGroup.java:59) 	at io.netty.channel.nio.NioEventLoopGroup.(NioEventLoopGroup.java:86) 	at io.netty.channel.nio.NioEventLoopGroup.(NioEventLoopGroup.java:81) 	at io.netty.channel.nio.NioEventLoopGroup.(NioEventLoopGroup.java:68) 	at org.asynchttpclient.netty.channel.NioTransportFactory.newEventLoopGroup(NioTransportFactory.java:32) 	at org.asynchttpclient.netty.channel.NioTransportFactory.newEventLoopGroup(NioTransportFactory.java:21) 	at org.asynchttpclient.netty.channel.ChannelManager.(ChannelManager.java:130) 	at org.asynchttpclient.DefaultAsyncHttpClient.(DefaultAsyncHttpClient.java:89) 	at org.asynchttpclient.DefaultAsyncHttpClient.(DefaultAsyncHttpClient.java:71) 	at org.asynchttpclient.Dsl.asyncHttpClient(Dsl.java:28) 	at org.openqa.selenium.remote.http.netty.CreateNettyClient.apply(CreateNettyClient.java:34) 	at org.openqa.selenium.remote.http.netty.NettyHttpHandler.(NettyHttpHandler.java:39) 	at org.openqa.selenium.remote.http.netty.NettyClient$Factory.createClient(NettyClient.java:68) 	at org.openqa.selenium.remote.http.HttpClient$Factory.createClient(HttpClient.java:71) 	at org.openqa.selenium.remote.HttpCommandExecutor.(HttpCommandExecutor.java:90) 	at org.openqa.selenium.remote.HttpCommandExecutor.(HttpCommandExecutor.java:73) 	at org.openqa.selenium.remote.HttpCommandExecutor.(HttpCommandExecutor.java:60) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:149) 	at gaugecore.utils.CustomWebDriver.browserFor(CustomWebDriver.java:189) 	at gaugecore.utils.CustomWebDriver.getBrowser(CustomWebDriver.java:79) 	at gaugecore.utils.MultiBrowser.openNewBrowser(MultiBrowser.java:383) 	at gaugecore.utils.ScenarioContext.setUp(ScenarioContext.java:174) 	at jdk.internal.reflect.GeneratedMethodAccessor3.invoke(Unknown Source) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.base/java.lang.reflect.Method.invoke(Method.java:566) 	at com.thoughtworks.gauge.execution.MethodExecutor.execute(MethodExecutor.java:38) 	at com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.executeHook(HooksExecutor.java:100) 	at com.thoughtworks.gauge.execution.HooksExecutor$TaggedHookExecutor.execute(HooksExecutor.java:88) 	at com.thoughtworks.gauge.execution.HooksExecutor.execute(HooksExecutor.java:45) 	at com.thoughtworks.gauge.processor.MethodExecutionMessageProcessor.executeHooks(MethodExecutionMessageProcessor.java:65) 	at com.thoughtworks.gauge.processor.ScenarioExecutionStartingProcessor.process(ScenarioExecutionStartingProcessor.java:34) 	at com.thoughtworks.gauge.connection.MessageDispatcher.dispatchMessages(MessageDispatcher.java:92) 	at com.thoughtworks.gauge.GaugeRuntime.dispatchMessages(GaugeRuntime.java:98) 	at com.thoughtworks.gauge.GaugeRuntime.lambda$connectInParallel$0(GaugeRuntime.java:74) 	at java.base/java.lang.Thread.run(Thread.java:834) Caused by: io.netty.channel.ChannelException: failed to open a new selector 	at io.netty.channel.nio.NioEventLoop.openSelector(NioEventLoop.java:175) 	at io.netty.channel.nio.NioEventLoop.(NioEventLoop.java:142) 	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146) 	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37) 	at io.netty.util.concurrent.MultithreadEventExecutorGroup.(MultithreadEventExecutorGroup.java:84)`  ## To Reproduce  Detailed steps to reproduce the behavior:  ## Expected behavior  A new browser should be spawned.   ## Test script or set of commands reproducing this issue  ## Environment  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:   Selenium Grid version (if applicable):    OSX configuration Processor: 4x Intel(R) Xeon(R) CPU E5-2640 v4 @ 2.40GHz     Kernel: 3.10.0-1062.4.1.el7.x86_64     Memory: 7.63 GB     Puppet: 3.8.7     Facter: 2.4.6  ulimit unlimited","closed","R-awaiting answer,","saritapol13","2020-08-03T11:17:36Z","2021-09-05T08:15:37Z"
"","8604","""Unable to find a matching set of capabilities"" when the firefox executable in PATH is a shell script outside the Firefox directory","## üêõ Bug Report  When the Firefox executable that is in PATH is actually a shell script setting up the environment and lunching Firefox (on Fedora, for instance), Selenium fails by raising the following exception: ``` selenium.common.exceptions.SessionNotCreatedException: Message: Unable to find a matching set of capabilities ```  In 2017, this bug was already reported: https://github.com/SeleniumHQ/selenium/issues/3884#issuecomment-296988595  ## To Reproduce  1. Start Fedora or any distribution where the Firefox executable in PATH is actually a shell script  ``` [wblondel@localhost]$ which firefox /usr/bin/firefox  [wblondel@localhost]$ file $(which firefox) /usr/bin/firefox: Bourne-Again shell script, ASCII text executable  [wblondel@localhost]$ firefox -version Mozilla Firefox 79.0 ```  2. Download GeckoDriver and put it in your path or wherever you want as long as you give the correct path...  3. Run the code given below.  ## Expected behavior  Firefox starts.  ## Test script or set of commands reproducing this issue  ```python from selenium import webdriver  driver = webdriver.Firefox(executable_path='./geckodriver') ```  ## Test script that SOLVES the issue but should be temporary  ```python from selenium import webdriver from selenium.webdriver.firefox.firefox_binary import FirefoxBinary  binary = FirefoxBinary('/usr/lib64/firefox/firefox') driver = webdriver.Firefox(executable_path='./geckodriver', firefox_binary=binary) ```  ## Environment  OS: Fedora 32 Browser: Firefox Browser version: 79.0 Browser Driver version: geckodriver 0.27.0 (7b8c4f32cdde 2020-07-28 18:16 +0000) Language Bindings version: Python 3.141.0","closed","needs-triaging,","wblondel","2020-08-04T16:00:21Z","2021-09-05T09:02:45Z"
"","7920","Unable to tap webElement in Chrome Mobile Emulation ( org.openqa.selenium.UnsupportedCommandException: touchSingleTap)","## üêõ Bug Report  When the Chrome browser with mobile emulation is enabled, the TouchActions don't work propertly. Selenium throws the next exception:  ``` org.openqa.selenium.UnsupportedCommandException: touchDoubleTap Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03' System info: host: 'DESKTOP-C8PO3TV', ip: '192.168.193.7', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_221' Driver info: driver.version: RemoteWebDriver ``` or ``` org.openqa.selenium.UnsupportedCommandException: touchSingleTap Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03' System info: host: 'DESKTOP-C8PO3TV', ip: '192.168.193.7', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_221' Driver info: driver.version: RemoteWebDriver ``` with this StackTrace:  ``` at org.openqa.selenium.remote.http.AbstractHttpCommandCodec.encode(AbstractHttpCommandCodec.java:218) 	at org.openqa.selenium.remote.http.AbstractHttpCommandCodec.encode(AbstractHttpCommandCodec.java:117) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:152) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552) 	at org.openqa.selenium.remote.RemoteExecuteMethod.execute(RemoteExecuteMethod.java:35) 	at org.openqa.selenium.remote.RemoteTouchScreen.singleTap(RemoteTouchScreen.java:36) 	at org.openqa.selenium.interactions.touch.SingleTapAction.perform(SingleTapAction.java:36) 	at org.openqa.selenium.interactions.CompositeAction.perform(CompositeAction.java:34) 	at org.openqa.selenium.interactions.Actions$BuiltAction.perform(Actions.java:634) 	at org.openqa.selenium.interactions.Actions.perform(Actions.java:595) ```    ## To Reproduce  1. Open browser with ChromeDriver in Mobile Emulation  2. Navigate to URL 3. Tap element  ## Expected behavior  The WebElement (""weButton"" in this case), should be tapped.  ## Test script or set of commands reproducing this issue  ``` import org.openqa.selenium.By; import org.openqa.selenium.WebDriver; import org.openqa.selenium.WebElement; import org.openqa.selenium.chrome.ChromeDriver; import org.openqa.selenium.chrome.ChromeOptions; import org.openqa.selenium.interactions.touch.TouchActions; import org.testng.annotations.Test;  import java.util.HashMap; import java.util.Map; import java.util.Optional;  public class ChromeMobileTest {     @Test     public void testGoogleSearch() throws InterruptedException{         System.setProperty(""webdriver.chrome.verboseLogging"", ""false"");         System.setProperty(""webdriver.chrome.driver"", "".\chromedriver.exe"");          String browserType = ""chrome"";         String browserId = ""Mozilla/5.0 (Linux; Android 7.0; SM-G930V Build/NRD90M) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.125 Mobile Safari/537.3"";         Optional browserIdString = Optional.ofNullable(browserId).filter(s -> !s.isEmpty());          ChromeOptions options = new ChromeOptions();         browserIdString.ifPresent(idString -> options.addArguments(String.format(""--user-agent=%s"", idString)));         options.addArguments(""--ignore-certificate-errors"");          Map mobileEmulation = new HashMap<>();         mobileEmulation.put(""deviceName"", ""Nexus 5"");         options.setExperimentalOption(""mobileEmulation"", mobileEmulation);          WebDriver driver = new ChromeDriver(options);         driver.get(""http://www.google.com/"");         Thread.sleep(5000);          WebElement weButton = driver.findElement(By.cssSelector(""button.Tg7LZd""));         WebElement weSearchBar = driver.findElement(By.name(""q""));         weSearchBar.sendKeys(""ChromeDriver"");          TouchActions tapAction = new TouchActions(driver);         tapAction.singleTap(weButton);         tapAction.perform();          Thread.sleep(5000);         driver.quit();     } }  ```  ## Environment  OS: Windows 10 Browser: Chrome Browser version: 79.0.3945.117 Browser Driver version: ChromeDriver 79.0.3945.36 Language Bindings version: Java 8  Selenium Grid version: 3.141.59","closed","C-java,","makenshikuro","2020-01-09T11:19:35Z","2021-09-05T08:08:46Z"
"","8532","Screenshot size is different from page size when using Firefox/Geckodriver (headless)","## üêõ Bug Report  When taking a screenshot of the webpage using `Firefox/Geckodriver` (headless) the resulting image file has different dimensions from the webpage.  ## To Reproduce  ```python from selenium.webdriver import Firefox, DesiredCapabilities from selenium.webdriver.firefox.options import Options from PIL import Image  options = Options() options.add_argument('--headless') options.add_argument('--width=1024') options.add_argument('--height=768')  caps = DesiredCapabilities.FIREFOX  driver = Firefox(executable_path='geckodriver', capabilities=caps, options=options)  driver.get('https://google.com')  print(driver.get_window_size())  # {'width': 1024, 'height': 768}  driver.save_screenshot('test.png')  # This gives me image with dimensions 1024x694  # [Optional] Check with pillow image = Image.open('test.png') print(image.size)  # (1024, 694) ```  ## Expected behavior  Screenshot image should have same dimensions of the web page  ## Environment  OS: MacOS 10.15.4 Browser: Firefox Browser version: 78.0.2 (64 bit) Browser Driver version: GeckoDriver 0.26.0 Language Bindings version: Python 3.7 Selenium: 3.141.0","closed","needs-triaging,","spinlud","2020-07-15T15:32:30Z","2021-09-05T09:03:01Z"
"","8503","Annoying popup ""accept incoming network connections"" when using python and macosx.","## üêõ Bug Report  When starting a driver (chrome or firefox, it doesn't matter), macosx firewall may issue a dialog asking for a permission for incoming connections. The culprit is free_port() in common.service.utils free_socket.bind(('0.0.0.0', 0)) should be either  free_socket.bind(('127.0.0.1', 0)) or free_socket.bind(('localhost', 0)) Note that the obtained free port is used afterwards with localhost, the ideal option should be free_socket.bind(('localhost', 0))  The dialogue closes itself almost immediately so a user has no chance to allow for 0.0.0.0 bindings. One can go around the issue by assigning the port itself.  ## To Reproduce  One needs to make sure that we haven't given a permission to a firewall to allow to python bind to 0.0.0.0.  Then a simple python script will trigger the dialogue  from selenium import webdriver driver = webdriver.Chrome(options=options)  ## Expected behavior  You should not use 0.0.0.0 when binding.   ## Environment  OSX, latest chromedriver (but it doesn't matter since this is triggered in common.utils), latest selenium","closed","C-py,","nikoltat","2020-07-11T00:50:58Z","2021-09-05T08:19:02Z"
"","8023","JsonParse Exception thrown instead of NoSuchElementException","## üêõ Bug Report  When running RemoteWebDriver on Chrome >74 in W3C mode instead of a NoSuchElementException you get a JsonParse Exception    ## To Reproduce Try to find a non existing web element while running remote web driver on a Chrome version greater than 74 ## Expected behavior  A NoSuchElementException should be thrown  ## Environment  OS: <-- OSX --> Browser: <-- Chrome  --> Browser version: <-- 80 --> Browser Driver version: <--  ChromeDriver 80.0.3987.16  --> Language Bindings version: <-- Java 3.141.59 -->   ## StackTrace ```Driver info: driver.version: RemoteWebDriver org.openqa.selenium.json.JsonException: java.lang.reflect.InvocationTargetException Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03' System info: host: '', ip: '', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.3', java.version: '1.8.0_172' Driver info: driver.version: RemoteWebDriver 	at org.openqa.selenium.json.JsonOutput.convertUsingMethod(JsonOutput.java:332) 	at org.openqa.selenium.json.JsonOutput.lambda$new$16(JsonOutput.java:155) 	at org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:264) 	at org.openqa.selenium.json.JsonOutput.lambda$null$21(JsonOutput.java:168) 	at java.util.LinkedHashMap$LinkedValues.forEach(LinkedHashMap.java:608) 	at org.openqa.selenium.json.JsonOutput.lambda$new$22(JsonOutput.java:168) 	at org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:264) 	at org.openqa.selenium.json.JsonOutput.lambda$null$23(JsonOutput.java:177) 	at com.google.common.collect.SingletonImmutableBiMap.forEach(SingletonImmutableBiMap.java:65) 	at org.openqa.selenium.json.JsonOutput.lambda$new$24(JsonOutput.java:176) 	at org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:264) 	at org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:255) 	at org.openqa.selenium.json.Json.toJson(Json.java:42) 	at org.openqa.selenium.remote.http.AbstractHttpCommandCodec.encode(AbstractHttpCommandCodec.java:227) 	at org.openqa.selenium.remote.http.AbstractHttpCommandCodec.encode(AbstractHttpCommandCodec.java:117) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:152) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552) 	at org.openqa.selenium.remote.RemoteWebDriver.perform(RemoteWebDriver.java:618) 	at org.openqa.selenium.interactions.Actions$BuiltAction.perform(Actions.java:639) 	at org.openqa.selenium.interactions.Actions.perform(Actions.java:595) 	..... 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133) 	at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62) 	at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:340) 	at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:294) 	at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:683) 	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:510) 	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172) 	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46) 	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804) 	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145) 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146) 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128) 	at java.util.ArrayList.forEach(ArrayList.java:1257) 	at org.testng.TestRunner.privateRun(TestRunner.java:770) 	at org.testng.TestRunner.run(TestRunner.java:591) 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:402) 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396) 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355) 	at org.testng.SuiteRunner.run(SuiteRunner.java:304) 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53) 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96) 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180) 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1102) 	at org.testng.TestNG.runSuites(TestNG.java:1032) 	at org.testng.TestNG.run(TestNG.java:1000) 	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66) 	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:110) 	Suppressed: org.openqa.selenium.json.JsonException: Attempting to close incomplete json stream Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03' System info: host: '', ip: '', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.3', java.version: '1.8.0_172' Driver info: driver.version: RemoteWebDriver 		at org.openqa.selenium.json.JsonOutput.close(JsonOutput.java:279) 		at org.openqa.selenium.json.Json.toJson(Json.java:44) 		... 42 more Caused by: java.lang.reflect.InvocationTargetException 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.openqa.selenium.json.JsonOutput.convertUsingMethod(JsonOutput.java:328) 	... 54 more Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {""method"":""css selector"",""selector"":"".platformTab.active:not(.is-default-tab)""}   (Session info: chrome=80.0.3987.87) For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03' System info: host: ', ip: '', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.3', java.version: '1.8.0_172' Driver info: org.openqa.selenium.remote.RemoteWebDriver Capabilities {acceptInsecureCerts: true, browserName: chrome, browserVersion: 80.0.3987.87, chrome: {chromedriverVersion: 80.0.3987.16 (320f6526c1632..., userDataDir: /var/folders/yj/h3bj394n2tn...}, goog:chromeOptions: {debuggerAddress: localhost:50378}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webdriver.remote.sessionid: 103bd3f54ede590f4697e095199...} Session ID: 103bd3f54ede590f4697e095199797ffee1a7a61 *** Element info: {Using=css selector, value=.platformTab.active:not(.is-default-tab)} 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552) 	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323) 	at org.openqa.selenium.remote.RemoteWebDriver.findElementByCssSelector(RemoteWebDriver.java:420) 	at org.openqa.selenium.By$ByCssSelector.findElement(By.java:431) 	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315) 	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69) 	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38) 	at com.sun.proxy.$Proxy29.getWrappedElement(Unknown Source) 	at org.openqa.selenium.interactions.PointerInput$Origin.asArg(PointerInput.java:204) 	at org.openqa.selenium.interactions.PointerInput$Move.encode(PointerInput.java:155) 	at org.openqa.selenium.interactions.Sequence.encode(Sequence.java:75) 	at org.openqa.selenium.interactions.Sequence.toJson(Sequence.java:84) 	... 59 more ```","closed","C-java,","vladdex","2020-02-11T16:53:11Z","2020-04-15T07:58:21Z"
"","8001","Selenium clicks below elements when running on Apple Mac/Safari 13.0.4 (15608.4.9.1.3)","## üêõ Bug Report  When running automated tests with Selenium in Safari browser and trying to click in the web elements the click is clearly being made below the actual web element. This click is happening to all web elements executed with all tests with Safari browser.  Apple Mac/Safari Version 13.0.4 (15608.4.9.1.3) and Selenium 3.141.59. Same Apple Mac in Google Chrome and Firefox the tests are running successfully. Other Macs running Safari 12.x also run with success.  Easily reproduced.    ## To Reproduce  Detailed steps to reproduce the behavior:  - Use any Selenium test that involves clicking in a web element; - Safari Browser Version 13.0.4;  ## Expected behavior  - When click in the web element the click should occur with success in the correct indicated web Element;  ## Environment OS:   - Browser: Safari; - Browser version: 13.0.4 (15608.4.9.1.3); - Browser Driver version: safaridriver 'Included with Safari 13.x.x' ;","closed","needs-triaging,","Manuela-Sousa","2020-02-05T17:00:54Z","2020-04-15T08:43:14Z"
"","8131","Edge Driver Works in Debugging; Fails When Packaged in Jar","## üêõ Bug Report  When running a simple automation in Edge (chrome), everything works fine when debugging. When said automation is packaged as JAR, it fails to run.   ## To Reproduce  Write a simple program to visit http://github.com and then package as jar. Run the jar and the error will pop up.    Detailed steps to reproduce the behavior:  ## Expected behavior  When you run this program via debugging, everything works fine. When you package as jar and run, it fails.  Exception in thread ""main"" org.openqa.selenium.WebDriverException: Build info: version: '4.0.0-alpha-4', revision: 'c2d955b49e' System info: host: 'DESKTOP-KQMTT2GT', ip: '192.168.10.27', os.name: 'Windows 10', os.arch: 'x86', os.version: '10.0', java.version: '1.8.0_231' Driver info: driver.version: EdgeDriver         at java.util.Optional.orElseThrow(Unknown Source)         at org.openqa.selenium.edge.EdgeDriver.toExecutor(EdgeDriver.java:138)         at org.openqa.selenium.edge.EdgeDriver.(EdgeDriver.java:120)         at org.openqa.selenium.edge.EdgeDriver.(EdgeDriver.java:117)         at testMain.DesktopAuto.main(FirefoxDesktop.java:38)  ## Test script or set of commands reproducing this issue  ```         String webAddress = ""http://github.com"";         System.setProperty(""webdriver.edge.driver"", ""C:\\Users\\wow\\Documents\\EdgeDriver2020\\msedgedriver.exe"");         EdgeOptions options = new EdgeOptions();         WebDriver driver = new EdgeDriver(options);         driver.get(webAddress); ```  ## Environment  OS: Windows 10 Browser: Edge 80.0.361.69. Also, Current Edge Beta and Dev. Browser version: 80.0.361.69 Browser Driver version: MSEdgeDriver 80.0.361.69 Language Bindings version:  Java 4.0.0-alpha 3, Java 4.0.0-alpha 4, Java 4.0.0-alpha 5 (tried all 3) Selenium Grid version (if applicable):  NA","closed","C-java,","zazawow","2020-03-23T19:39:42Z","2021-09-05T08:25:03Z"
"","8129","ETIMEDOUT on running protractor tests on a remote selenoid grid","## üêõ Bug Report  When running a large suite of tests from `protractor v5.4.2` or `5.4.3` (so `selenium-webdriver 3.6.0`), I frequently get random errors that read:  ``` ETIMEDOUT connect ETIMEDOUT xx.xx.xx.xx:443           at ClientRequest. (/workdir/node_modules/selenium-webdriver/http/index.js:238:15)           at emitOne (events.js:116:13)           at ClientRequest.emit (events.js:211:7)           at TLSSocket.socketErrorListener (_http_client.js:387:9)           at emitOne (events.js:116:13)           at TLSSocket.emit (events.js:211:7)           at emitErrorNT (internal/streams/destroy.js:64:8)           at _combinedTickCallback (internal/process/next_tick.js:138:11)           at process._tickCallback (internal/process/next_tick.js:180:9)Error  ```  Following the recommendation found [here](https://github.com/angular/protractor/issues/4706#issuecomment-393004887), I added `e.code === 'ETIMEDOUT'` to the `index.js` file, and now the issue is gone.  I see that in [this file](https://github.com/SeleniumHQ/selenium/blob/selenium-3.6.0/javascript/node/selenium-webdriver/http/index.js#L229) you consider only `ECONNRESET` to be worthy of a retry. I also see that in the [master branch](https://github.com/SeleniumHQ/selenium/blob/master/javascript/node/selenium-webdriver/http/index.js#L295-L299), you expanded the list to include other error statuses, but not yet `ETIMEDOUT`. I guess the problem I'm facing will therefore still persist with the upcoming version 4.0.0.  Any reason why you left out `ETIMEDOUT` from this list?  ## To Reproduce  Detailed steps to reproduce the behavior: - have a remote grid (I guess selenium or selenoid would make no difference) deployed on the network, but not on your machine. - have a large set of tests - running those tests should from time to time display errors about `ETIMEDOUT`  ## Expected behavior  I would except the selenium library to attempt a retry in case it fails to communicate with a remote browser grid with a timeout.  Alternatively, I should have a hand on defining this `timeout` value to accomodate for my network conditions.  Similar tests done with a Java binding on the exact same selenoid grid (with the same chrome browser version) are working without these timeouts, so I have the impression this is a javascript only problem.  ## Test script or set of commands reproducing this issue  Due to the setup needed, this is more complicated to provide. Do you need something?  ## Environment  OS: Windows 10, Ubuntu 18.04, CentOS Browser: Chrome (from [this image](https://hub.docker.com/layers/selenoid/vnc_chrome/73.0/images/sha256-03801f73b832cad1ac0b2922ba5c15312f99cd0ae5d285cbcdeb79c69a242822?context=explore) and [that image](https://hub.docker.com/layers/selenoid/vnc_chrome/80.0/images/sha256-80d8c439fcdf487fd887936b6f0b1e4d18e7ec876f78ec328dbc05ba2e6bf304?context=explore)) Browser version: 73.0.3683.75-1 and 80.0.3987.132-1 Browser Driver version: ? Language Bindings version: Javascript 3.6.0  Selenium Grid version (if applicable): Moon 1.3.9","closed","C-nodejs,","baudren","2020-03-23T08:49:08Z","2020-05-05T21:20:59Z"
"","8798","Python Selenium: driver.quit() failed to clear temporary file:","## üêõ Bug Report  When open Selenium Firefox with a profile folder path, calling `.quit()` on the `driver` does not clean up the temporary file. Overtime, it overwhelms the docker/ virtual machine disk  ## To Reproduce   ```python def create_selenium_webdriver(profile_path):     """"""     profile_path: str     """"""     if not profile_path.exists():         sys.exit(""Could not find profile folder"")     driver = webdriver.Firefox(profile_path)     driver.set_page_load_timeout(30)     driver.maximize_window()      return driver  driver = utils.create_selenium_webdriver(profile_name) driver.quit()  ``` `\tmp` folders still contains temporary files created by `selenium` ## Expected behavior  `\tmp` folder should be cleared.  ## Environment  OS: Ubuntu 18.04 Browser: Firefox Browser version: 80 Browser Driver version: GeckoDriver 0.27 Language Bindings version: selenium 3.141.0 Selenium Grid version (if applicable): inapplicable  ## Investigation In `selenium/webdriver/firefox/webdriver.py`:  ```python     def quit(self):         """"""Quits the driver and close every associated window.""""""         try:             RemoteWebDriver.quit(self)         except Exception:             # We don't care about the message because something probably has gone wrong             pass          if self.w3c:             self.service.stop()         else:             self.binary.kill()          if self.profile is not None:             try:                 shutil.rmtree(self.profile.path)                 if self.profile.tempfolder is not None:                     shutil.rmtree(self.profile.tempfolder)             except Exception as e:                 print(str(e)) ```  `self.profile` is a `PosixPath` if  `profile_path` is an path-like object , which doesn't have`.path` attribute. This trigger an `exception` and the line:  ```python                 if self.profile.tempfolder is not None:                     shutil.rmtree(self.profile.tempfolder) ``` was never executed.","closed","C-py,","Maswor","2020-10-16T13:15:22Z","2021-09-05T08:10:43Z"
"","8877","ElementNotInteractableError should expose the indication on how to locate the element","## üêõ Bug Report  When interacting with the ""invisible"" element that is present in the DOM I get the following error message:  > ElementNotInteractableError: element not interactable: Element is not currently visible and may not be manipulated   (Session info: chrome=86.0.4240.198)  There is 0 indication which element is in question.   ## Expected behavior  A clear and concise description of what you expected to happen.   ## Environment  OS: Ubuntu Browser: Chrome Browser version: Version 86.0.4240.198 (Official Build) (64-bit) Browser Driver version: 86 Language Bindings version: Javascript selenium-webdriver"": ""^4.0.0-alpha.7""","closed","C-nodejs,","croraf","2020-11-16T18:32:51Z","2021-09-05T08:15:44Z"
"","8358","EdgeDriver can't create DevToolsSession with CreateDevToolsSession() method","## üêõ Bug Report  When initialize the EdgeDriver the property optionsCapabilityName is not initialize since the base constructor is never called, therefor the CreateDevToolsSession method fails with a `System.ArgumentNullException: Value cannot be null. (Parameter 'key')` exception when called  https://github.com/SeleniumHQ/selenium/blob/e6f53e893b758157c8df2eda30ebea35a1c6fb05/dotnet/src/webdriver/Chromium/ChromiumDriver.cs#L173 beacause optionsCapabilityName is null   ## To Reproduce    Create a EdgeDriver and call CreateDevToolsSession()   ## Expected behavior   The driver create a DevToolsSession","closed","C-dotnet,","danielmeza","2020-05-28T17:43:08Z","2021-09-26T00:06:11Z"
"","8328","ERROR: An error occurred during the fetch of repository 'local_config_cc'","## üêõ Bug Report  When I try run go.bat script I get errors:  Parsing rb/build.desc ** Invoke default (first_time) ** Invoke grid (first_time) ** Invoke selenium-server-standalone (first_time) ** Invoke //java/server/src/org/openqa/selenium/grid:selenium_server_deploy.jar (first_time) ** Execute //java/server/src/org/openqa/selenium/grid:selenium_server_deploy.jar Loading: Loading: 0 packages loaded Analyzing: target //java/server/src/org/openqa/selenium/grid:selenium_server_deploy.jar (0 packages loaded, 0 targets configured) INFO: Call stack for the definition of repository 'local_config_cc' which is a cc_autoconf (rule definition at C:/users/izada/_bazel_izada/63qufbrf/external/bazel_tools/tools/cpp/cc_configure.bzl:143:15):  -   - C:/users/izada/_bazel_izada/63qufbrf/external/bazel_tools/tools/cpp/cc_configure.bzl:179:5  - /DEFAULT.WORKSPACE.SUFFIX:317:1 Analyzing: target //java/server/src/org/openqa/selenium/grid:selenium_server_deploy.jar (0 packages loaded, 0 targets configured) ERROR: An error occurred during the fetch of repository 'local_config_cc':    Traceback (most recent call last):         File ""C:/users/izada/_bazel_izada/63qufbrf/external/bazel_tools/tools/cpp/cc_configure.bzl"", line 120                 configure_windows_toolchain(<1 more arguments>)         File ""C:/users/izada/_bazel_izada/63qufbrf/external/bazel_tools/tools/cpp/windows_cc_configure.bzl"", line 690, in configure_windows_toolchain                 _get_msvc_vars(repository_ctx, <1 more arguments>)         File ""C:/users/izada/_bazel_izada/63qufbrf/external/bazel_tools/tools/cpp/windows_cc_configure.bzl"", line 566, in _get_msvc_vars                 _get_clang_version(<2 more arguments>)         File ""C:/users/izada/_bazel_izada/63qufbrf/external/bazel_tools/tools/cpp/windows_cc_configure.bzl"", line 469, in _get_clang_version                 repository_ctx.execute(<1 more arguments>) Argument 0 of execute is neither a path nor a string. ERROR: C:/users/izada/desktop/selenium-master/selenium-master/java/server/src/org/openqa/selenium/grid/BUILD.bazel:62:1: //java/server/src/org/openqa/selenium/grid:selenium_server depends on @local_config_cc//:cc-compiler-x64_windows in repository @local_config_cc which failed to fetch. no such package '@local_config_cc//': Traceback (most recent call last):         File ""C:/users/izada/_bazel_izada/63qufbrf/external/bazel_tools/tools/cpp/cc_configure.bzl"", line 120                 configure_windows_toolchain(<1 more arguments>)         File ""C:/users/izada/_bazel_izada/63qufbrf/external/bazel_tools/tools/cpp/windows_cc_configure.bzl"", line 690, in configure_windows_toolchain                 _get_msvc_vars(repository_ctx, <1 more arguments>)         File ""C:/users/izada/_bazel_izada/63qufbrf/external/bazel_tools/tools/cpp/windows_cc_configure.bzl"", line 566, in _get_msvc_vars                 _get_clang_version(<2 more arguments>)         File ""C:/users/izada/_bazel_izada/63qufbrf/external/bazel_tools/tools/cpp/windows_cc_configure.bzl"", line 469, in _get_clang_version                 repository_ctx.execute(<1 more arguments>) Argument 0 of execute is neither a path nor a string. ERROR: Analysis of target '//java/server/src/org/openqa/selenium/grid:selenium_server_deploy.jar' failed; build aborted: no such package '@local_config_cc//': Traceback (most recent call last):         File ""C:/users/izada/_bazel_izada/63qufbrf/external/bazel_tools/tools/cpp/cc_configure.bzl"", line 120                 configure_windows_toolchain(<1 more arguments>)         File ""C:/users/izada/_bazel_izada/63qufbrf/external/bazel_tools/tools/cpp/windows_cc_configure.bzl"", line 690, in configure_windows_toolchain                 _get_msvc_vars(repository_ctx, <1 more arguments>)         File ""C:/users/izada/_bazel_izada/63qufbrf/external/bazel_tools/tools/cpp/windows_cc_configure.bzl"", line 566, in _get_msvc_vars                 _get_clang_version(<2 more arguments>)         File ""C:/users/izada/_bazel_izada/63qufbrf/external/bazel_tools/tools/cpp/windows_cc_configure.bzl"", line 469, in _get_clang_version                 repository_ctx.execute(<1 more arguments>) Argument 0 of execute is neither a path nor a string. INFO: Elapsed time: 2.389s INFO: 0 processes. FAILED: Build did NOT complete successfully (0 packages loaded, 0 targets configured) FAILED: Build did NOT complete successfully (0 packages loaded, 0 targets configured) Exception `RuntimeError' at C:/Users/IZADA/Desktop/selenium-master/selenium-master/rake_tasks/bazel.rb:45 - bazel build //java/server/src/org/openqa/selenium/grid:selenium_server_deploy.jar --workspace_status_command scripts/build-info.py 2>&1 failed with exit code: false Exception `#>' at C:/Users/IZADA/Desktop/selenium-master/selenium-master/rake_tasks/bazel.rb:45 - bazel build //java/server/src/org/openqa/selenium/grid:selenium_server_deploy.jar --workspace_status_command scripts/build-info.py 2>&1 failed with exit code: false Exception `#>' at C:/Users/IZADA/Desktop/selenium-master/selenium-master/rake_tasks/bazel.rb:45 - bazel build //java/server/src/org/openqa/selenium/grid:selenium_server_deploy.jar --workspace_status_command scripts/build-info.py 2>&1 failed with exit code: false Exception `#>' at C:/Users/IZADA/Desktop/selenium-master/selenium-master/rake_tasks/bazel.rb:45 - bazel build //java/server/src/org/openqa/selenium/grid:selenium_server_deploy.jar --workspace_status_command scripts/build-info.py 2>&1 failed with exit code: false Exception `#>' at C:/Users/IZADA/Desktop/selenium-master/selenium-master/rake_tasks/bazel.rb:45 - bazel build //java/server/src/org/openqa/selenium/grid:selenium_server_deploy.jar --workspace_status_command scripts/build-info.py 2>&1 failed with exit code: false go aborted! bazel build //java/server/src/org/openqa/selenium/grid:selenium_server_deploy.jar --workspace_status_command scripts/build-info.py 2>&1 failed with exit code: false C:/Users/IZADA/Desktop/selenium-master/selenium-master/rake_tasks/bazel.rb:45:in `execute' C:/Users/IZADA/Desktop/selenium-master/selenium-master/Rakefile:94:in `block in ' uri:classloader:/META-INF/jruby.home/lib/ruby/gems/shared/gems/rake-12.3.2/lib/rake/task.rb:273:in `block in execute' org/jruby/RubyArray.java:1800:in `each' uri:classloader:/META-INF/jruby.home/lib/ruby/gems/shared/gems/rake-12.3.2/lib/rake/task.rb:273:in `execute' uri:classloader:/META-INF/jruby.home/lib/ruby/gems/shared/gems/rake-12.3.2/lib/rake/task.rb:214:in `block in invoke_with_call_chain' uri:classloader:/META-INF/jruby.home/lib/ruby/stdlib/monitor.rb:226:in `mon_synchronize' uri:classloader:/META-INF/jruby.home/lib/ruby/gems/shared/gems/rake-12.3.2/lib/rake/task.rb:194:in `invoke_with_call_chain' uri:classloader:/META-INF/jruby.home/lib/ruby/gems/shared/gems/rake-12.3.2/lib/rake/task.rb:238:in `block in invoke_prerequisites' org/jruby/RubyArray.java:1800:in `each' uri:classloader:/META-INF/jruby.home/lib/ruby/gems/shared/gems/rake-12.3.2/lib/rake/task.rb:236:in `invoke_prerequisites' uri:classloader:/META-INF/jruby.home/lib/ruby/gems/shared/gems/rake-12.3.2/lib/rake/task.rb:213:in `block in invoke_with_call_chain' uri:classloader:/META-INF/jruby.home/lib/ruby/stdlib/monitor.rb:226:in `mon_synchronize' uri:classloader:/META-INF/jruby.home/lib/ruby/gems/shared/gems/rake-12.3.2/lib/rake/task.rb:194:in `invoke_with_call_chain' uri:classloader:/META-INF/jruby.home/lib/ruby/gems/shared/gems/rake-12.3.2/lib/rake/task.rb:238:in `block in invoke_prerequisites' org/jruby/RubyArray.java:1800:in `each' uri:classloader:/META-INF/jruby.home/lib/ruby/gems/shared/gems/rake-12.3.2/lib/rake/task.rb:236:in `invoke_prerequisites' uri:classloader:/META-INF/jruby.home/lib/ruby/gems/shared/gems/rake-12.3.2/lib/rake/task.rb:213:in `block in invoke_with_call_chain' uri:classloader:/META-INF/jruby.home/lib/ruby/stdlib/monitor.rb:226:in `mon_synchronize' uri:classloader:/META-INF/jruby.home/lib/ruby/gems/shared/gems/rake-12.3.2/lib/rake/task.rb:194:in `invoke_with_call_chain' uri:classloader:/META-INF/jruby.home/lib/ruby/gems/shared/gems/rake-12.3.2/lib/rake/task.rb:238:in `block in invoke_prerequisites' org/jruby/RubyArray.java:1800:in `each' uri:classloader:/META-INF/jruby.home/lib/ruby/gems/shared/gems/rake-12.3.2/lib/rake/task.rb:236:in `invoke_prerequisites' uri:classloader:/META-INF/jruby.home/lib/ruby/gems/shared/gems/rake-12.3.2/lib/rake/task.rb:213:in `block in invoke_with_call_chain' uri:classloader:/META-INF/jruby.home/lib/ruby/stdlib/monitor.rb:226:in `mon_synchronize' uri:classloader:/META-INF/jruby.home/lib/ruby/gems/shared/gems/rake-12.3.2/lib/rake/task.rb:194:in `invoke_with_call_chain' uri:classloader:/META-INF/jruby.home/lib/ruby/gems/shared/gems/rake-12.3.2/lib/rake/task.rb:183:in `invoke' uri:classloader:/META-INF/jruby.home/lib/ruby/gems/shared/gems/rake-12.3.2/lib/rake/application.rb:160:in `invoke_task' uri:classloader:/META-INF/jruby.home/lib/ruby/gems/shared/gems/rake-12.3.2/lib/rake/application.rb:116:in `block in top_level' org/jruby/RubyArray.java:1800:in `each' uri:classloader:/META-INF/jruby.home/lib/ruby/gems/shared/gems/rake-12.3.2/lib/rake/application.rb:116:in `block in top_level' uri:classloader:/META-INF/jruby.home/lib/ruby/gems/shared/gems/rake-12.3.2/lib/rake/application.rb:125:in `run_with_threads' uri:classloader:/META-INF/jruby.home/lib/ruby/gems/shared/gems/rake-12.3.2/lib/rake/application.rb:110:in `top_level' uri:classloader:/META-INF/jruby.home/lib/ruby/gems/shared/gems/rake-12.3.2/lib/rake/application.rb:83:in `block in run' uri:classloader:/META-INF/jruby.home/lib/ruby/gems/shared/gems/rake-12.3.2/lib/rake/application.rb:186:in `standard_exception_handling' uri:classloader:/META-INF/jruby.home/lib/ruby/gems/shared/gems/rake-12.3.2/lib/rake/application.rb:80:in `run' uri:classloader:/META-INF/jruby.home/lib/ruby/gems/shared/gems/rake-12.3.2/exe/rake:27:in `' org/jruby/RubyKernel.java:1022:in `load' uri:classloader:/META-INF/jruby.home/bin/rake:1:in `' Tasks: TOP => default => grid => selenium-server-standalone => //java/server/src/org/openqa/selenium/grid:selenium_server_deploy.jar  ## Environment  OS:  Windows 10 Bazel version: --> 3.0.0 Java: --> java openJDK 11 Python --> 3.7.7 Ruby --> 2.7.1p83 Maven --> 3.6.3","closed","needs-triaging,","iadamska","2020-05-20T14:21:41Z","2021-09-05T09:02:58Z"
"","8740","Grid 4: error while starting a router","## üêõ Bug Report  When I start the router based on [documentation](https://www.selenium.dev/documentation/en/grid/grid_4/setting_up_your_own_grid/), I get ""Found the option --distributor-host multiple times"".  ## To Reproduce 1. Start the session map `java -jar selenium-server-4.0.0-alpha-6.jar sessions` 2. Start the distributor `java -jar selenium-server-4.0.0-alpha-6.jar distributor --sessions http://localhost:5556 --bind-bus false` 3. Run in a command line: `java -jar selenium-server-4.0.0-alpha-6.jar router --sessions http://localhost:5556 --distributor http://localhost:5553`  The effect is this (https://gist.github.com/aphx07/96e8a45cd369e5e545e24cc511d1d1e3): `E:\dev\Selenium Grid 4>java -jar selenium-server-4.0.0-alpha-6.jar router --sessions http://localhost:5556 --distributor http://localhost:5553 Found the option --distributor-host multiple times Usage: router [options]   Options:     --config       Config file to read from (may be specified more than once)     --config-help       Output detailed information about config options       Default: false     -d, --distributor, --distributor-host       Address of the distributor.     --distributor-port       Port on which the distributor is listening.       Default: 0     --version       Displays the version and exits.       Default: false`  ## Expected behavior  The router is started.  ## Environment  Windows 10 Pro","closed","","aphx07","2020-09-27T11:12:50Z","2021-09-05T08:34:46Z"
"","8423","Safari SendKeys() returns WebDriverError: An invalid command response was received: Could not parse response payload","## üêõ Bug Report  When I run my protractor test in Safari, SendKeys() action fails with below error. The test runs against my Angular 9 application. The test works fine in Chrome browser.  Mentioned in below error payload could be successfully parsed with JSON.parse(), so looks like it's a selenium-driver issue.  `- WebDriverError: An invalid command response was received: Could not parse response payload: {             result = ""{\""tagName\"":\""INPUT\"",\""attributes\"":{\""_ngcontent-mcu-c7\"":null,\""pinputtext\"":null,\""class\"":\""ng-tns-c78-12 username-value login-field ui-inputtext ui-corner-all ui-state-default ui-widget ng-untouched ng-pristine ng-valid ng-star-inserted\"",\""placeholder\"":null,\""type\"":null}}"";         }         Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53'         System info: host: 'MY-HOST', ip: '192.168.1.3', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.5', java.version: '1.8.0_232'         Driver info: driver.version: unknown             at Object.checkLegacyResponse (/e2e/node_modules/selenium-webdriver/lib/error.js:546:15)             at parseHttpResponse (/e2e/node_modules/selenium-webdriver/lib/http.js:509:13)             at /e2e/node_modules/selenium-webdriver/lib/http.js:441:30             at processTicksAndRejections (internal/process/task_queues.js:93:5)         From: Task: WebElement.sendKeys()             at thenableWebDriverProxy.schedule (/e2e/node_modules/selenium-webdriver/lib/webdriver.js:807:17)             at WebElement.schedule_ (/e2e/node_modules/selenium-webdriver/lib/webdriver.js:2010:25)             at WebElement.sendKeys (/e2e/node_modules/selenium-webdriver/lib/webdriver.js:2174:19)`  ## Environment  OS: Mac OS X 10.15.5 Browser: Safari Browser version: 13.1.1 (15609.2.9.1.2) Browser Driver version: Included with Safari 13.1.1 (15609.2.9.1.2)","closed","R-awaiting answer,","aozolin","2020-06-15T08:15:42Z","2021-09-05T09:02:50Z"
"","8130","Selenium Grid 4.0.0-alpha5 doesn't find commands (in embedded mode)","## üêõ Bug Report  When I run grid commands as [described in wiki](https://github.com/SeleniumHQ/selenium/wiki/Selenium-Grid-4), I see only help message.   ## To Reproduce  ‚ùØ‚ùØ‚ùØ java -jar selenium-server-4.0.0-alpha-5.jar  ``` Selenium Server commands  A list of all the commands available. To use one, run `java -jar selenium.jar commandName`.    distributor  Adds this server as the distributor in a selenium grid.   hub          A grid hub, composed of sessions, distributor, and router.   info         Prints information for commands and topics.   node         Adds this server as a node in the selenium grid.   router       Creates a router to front the selenium grid.   sessions     Adds this server as the session map in a selenium grid.   standalone   The selenium server, running everything in-process.  ... ```   ## Expected behaviour  A selenium grid server should be start with given command.   ## Environment  OS: Any (I use MacOS) Browser: - Browser version: - Browser Driver version: - Language Bindings version: 4.0.0-alpha-5 Selenium Grid version (if applicable): 4.0.0-alpha-5  ### The bug cause  File `META-INF/services/org.openqa.selenium.cli.CliCommand` in `selenium-grid-4.0.0-alpha-5.jar` contains only one line: ``` org.openqa.selenium.grid.sessionmap.httpd.SessionMapServer ```  but should contain all grid commands:  ``` org.openqa.selenium.grid.distributor.httpd.DistributorServer org.openqa.selenium.grid.commands.InfoCommand org.openqa.selenium.grid.commands.MessageBusCommand org.openqa.selenium.grid.node.httpd.NodeServer org.openqa.selenium.grid.router.httpd.RouterServer org.openqa.selenium.grid.sessionmap.httpd.SessionMapServer org.openqa.selenium.grid.commands.Standalone ```","closed","C-build,","asolntsev","2020-03-23T12:25:42Z","2020-05-20T22:35:03Z"
"","8368","Using the ""withTagName"" method produces a ""Locator must be serializable to JSON using a 'toJson' method."" error","## üêõ Bug Report  When I intend to use the ""withTagName"" method to locate elements, an error such as ""Locator must be serializable to JSON using a 'toJson' method."" occurs.    ## To Reproduce  Use the code provided below.  ## Expected behavior  1. open chrome 2. locate the element whose id is su, and input ""java"". 3. locate the input to the left of the element with an id of su, and click.  ## Test script or set of commands reproducing this issue  ```java package com.example.selenium;  import org.junit.After; import org.junit.Before; import org.junit.Test; import org.openqa.selenium.By; import org.openqa.selenium.WebDriver; import org.openqa.selenium.WebElement; import org.openqa.selenium.chrome.ChromeDriver;  import static org.openqa.selenium.support.locators.RelativeLocator.withTagName;  public class SeleniumDemo {      WebDriver driver;      @Before     public void before() {         System.setProperty(""webdriver.chrome.driver"", ""C:/Users/JIAHE/OpenSource/webdriver/chromedriver.exe"");         driver = new ChromeDriver();     }      @Test     public void open() {         driver.get(""https://www.baidu.com"");         WebElement kw = driver.findElement(By.id(""kw""));         kw.sendKeys(""java"");         // get an error hereÔºåfrom withTagName         WebElement su = driver.findElement(withTagName(""input"").toRightOf(kw));         su.click();     }      @After     public void after() {         driver.quit();     }  }  ```  ## Environment  OS: Windows 10 Browser: Chrome Browser version: 83.0.4103.61 Browser Driver version: ChromeDriver 83.0.4103.39 Language Bindings version: Java1.8, webdriver is selenium-server-4.0.0-alpha-62 Selenium Grid version (if applicable):","closed","needs-triaging,","iamxiaojianzheng","2020-05-30T06:43:12Z","2021-09-05T09:36:36Z"
"","7928","Unable to get browser logs below WARNING level in Chrome v79","## üêõ Bug Report  When I execute driver.manage().logs().get(LogType.BROWSER), it gets browser logs only above INFO level.   ## To Reproduce  1. Open URL using ChromeDriver  2. Input some warning and info level messages in browser console: e.g.:  console.warn(""warnMessage"") console.info(""infoMessage"") 3. Try to get console logs using get(LogType.BROWSER)  ## Expected behavior  There is result containing ""warnMessage"" and ""infoMessage""  ## Test script or set of commands reproducing this issue  `ChromeOptions caps = new ChromeOptions();` `LoggingPreferences logPrefs = new LoggingPreferences();` `logPrefs.enable(LogType.BROWSER, Level.ALL);` `caps.setCapability(CapabilityType.LOGGING_PREFS, logPrefs);` `ChromeDriver driver = new ChromeDriver(caps)` `driver.get(""https://google.com"")` `driver.manage().logs().get(LogType.BROWSER)` `driver.close()`  ## Environment  OS: Windows 10> Browser: Chrome> Browser version: 79.0.3945.117  Browser Driver version: ChromeDriver 3.141.59 Language Bindings version: Java 8","closed","needs-triaging,","BeardyCamillus","2020-01-10T16:24:58Z","2020-04-02T14:32:29Z"
"","8836","browser can't connect with geckodriver when set different profile by argument ""-P profileName""","## üêõ Bug Report  When I add the argument `-P profileName` to the browser, it can't connect with geckodriver. Same problem of this issue [mozilla/geckodriver/issues/1058](https://github.com/mozilla/geckodriver/issues/1058) As described in this [bug report](https://bugzilla.mozilla.org/show_bug.cgi?id=1421766), a workaround is to force the geckodriver to use port 2828 with `marionette-port=2828` argument  ## To Reproduce    Detailed steps to reproduce the behavior:  Install package selenium-webdriver: `npm install selenium-webdriver` Download and extract geckodriver to folder (this is the version I'm using: [geckodriver-v0.28.0-linux64.tar.gz](https://github.com/mozilla/geckodriver/releases/download/v0.28.0/geckodriver-v0.28.0-linux64.tar.gz)) Create a Firefox profile to the test with this command: `firefox -CreateProfile BugTest` Write the following code to `index.js` file: ```js const { Builder, until, Browser } = require(""selenium-webdriver""); const Firefox = require(""selenium-webdriver/firefox"");  ;(async () => {     let options = new Firefox.Options().addArguments(""-P"", ""BugTest"")     let driver = new Builder().forBrowser(Browser.FIREFOX).setFirefoxOptions(options).build()      try {         await driver.get(""https://www.google.com/"")         await driver.wait(until.titleContains(""(close)""))     } finally {         await driver.quit()     } })() ``` Execute with command `node index.js`  and then, Firefox opens, but the script doesn't run. And in 60 seconds I get a timeout error: `Connection refused (os error 111)`  ## Expected behavior  I expected the browser to open, go to the URL and stay open until title contains the word `(close)`.  ## Workaround  I solved the problem forcing geckodriver to open with argument `--marionette-port=2828` In the `node_modules/selenium-webdriver/remote/index.js` file I added `.concat(""--marionette-port=2828"")` to line 441 (method `build()`) ```diff  let args = Promise.resolve(port).then(port => { -  return this.options_.args.concat('--port=' + port) +  return this.options_.args.concat('--port=' + port).concat(""--marionette-port=2828"")  }); ``` I think this is an awful fix, but it works.  ## Environment  OS: Manjaro (kernel version 5.9.1-arch1-1) Browser: Firefox Browser version: 82.0 (64-bit) Browser Driver version: GeckoDriver 0.28.0 Language Bindings version: JavaScript (Node.JS version 15.0.1) Selenium Grid version (if applicable): No","closed","needs-triaging,","D1360-64RC14","2020-11-03T19:16:08Z","2021-09-05T08:31:37Z"
"","7941","The client is gone for session ext. key """", terminating - The browser/session is not closed on the node","## üêõ Bug Report  When getting this error on the hub :  ``` 11:31:20.009 WARN [RequestHandler.process] - The client is gone for session ext. key **432be81a1ecdbe85af6a19db2ef3ba0b**, terminating ```  the node is not closing the browser and leaves it hanging consuming memory here are the logs on the node: ``` 1/16/2020 8:45:35 AM06:45:35.874 INFO [ActiveSessionFactory.apply] - Capabilities are: { 1/16/2020 8:45:35 AM  ""browserName"": ""chrome"", 1/16/2020 8:45:35 AM  ""goog:chromeOptions"": { 1/16/2020 8:45:35 AM    ""args"": [ 1/16/2020 8:45:35 AM      ""--start-maximized"", 1/16/2020 8:45:35 AM      ""--ignore-certificate-errors"", 1/16/2020 8:45:35 AM      ""--incognito"", 1/16/2020 8:45:35 AM      ""--test-type --no-sandbox"", 1/16/2020 8:45:35 AM      ""--enable-strict-powerful-feature-restrictions"" 1/16/2020 8:45:35 AM    ], 1/16/2020 8:45:35 AM    ""extensions"": [ 1/16/2020 8:45:35 AM    ], 1/16/2020 8:45:35 AM    ""excludeSwitches"": [ 1/16/2020 8:45:35 AM      ""enable-automation"" 1/16/2020 8:45:35 AM    ], 1/16/2020 8:45:35 AM    ""prefs"": { 1/16/2020 8:45:35 AM      ""profile.default_content_setting_values"": { 1/16/2020 8:45:35 AM        ""images"": 2 1/16/2020 8:45:35 AM      } 1/16/2020 8:45:35 AM    } 1/16/2020 8:45:35 AM  } 1/16/2020 8:45:35 AM} 1/16/2020 8:45:35 AM06:45:35.875 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) 1/16/2020 8:45:35 AMStarting ChromeDriver 79.0.3945.36 (3582db32b33893869b8c1339e8f4d9ed1816f143-refs/branch-heads/3945@{#614}) on port 27522 1/16/2020 8:45:35 AMOnly local connections are allowed. 1/16/2020 8:45:35 AMPlease protect ports used by ChromeDriver and related test frameworks to prevent access by malicious code. 1/16/2020 8:45:35 AM[1579157135.896][SEVERE]: bind() failed: Cannot assign requested address (99) 1/16/2020 8:45:36 AM06:45:36.487 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C 1/16/2020 8:45:36 AM06:45:36.492 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session **432be81a1ecdbe85af6a19db2ef3ba0b** (org.openqa.selenium.chrome.ChromeDriverService) 1/16/2020 1:28:23 PM[1579174103.322][SEVERE]: Timed out receiving message from renderer: 27.209 1/16/2020 1:28:23 PM[1579174103.324][SEVERE]: Timed out receiving message from renderer: -0.002 1/16/2020 1:29:38 PM[1579174178.255][SEVERE]: Timed out receiving message from renderer: 25.612 1/16/2020 1:29:38 PM[1579174178.257][SEVERE]: Timed out receiving message from renderer: -0.002 1/16/2020 1:31:20 PM[1579174279.998][SEVERE]: Timed out receiving message from renderer: 27.936 1/16/2020 1:31:20 PM[1579174280.005][SEVERE]: Timed out receiving message from renderer: -0.007 1/16/2020 1:45:07 PM11:45:07.448 INFO [ActiveSessionFactory.apply] - Capabilities are: { 1/16/2020 1:45:07 PM  ""browserName"": ""chrome"", 1/16/2020 1:45:07 PM  ""goog:chromeOptions"": { 1/16/2020 1:45:07 PM    ""args"": [ 1/16/2020 1:45:07 PM      ""--start-maximized"", 1/16/2020 1:45:07 PM      ""--ignore-certificate-errors"", 1/16/2020 1:45:07 PM      ""--incognito"", 1/16/2020 1:45:07 PM      ""--test-type --no-sandbox"", 1/16/2020 1:45:07 PM      ""--enable-strict-powerful-feature-restrictions"" 1/16/2020 1:45:07 PM    ], 1/16/2020 1:45:07 PM    ""extensions"": [ 1/16/2020 1:45:07 PM    ], 1/16/2020 1:45:07 PM    ""excludeSwitches"": [ 1/16/2020 1:45:07 PM      ""enable-automation"" 1/16/2020 1:45:07 PM    ], 1/16/2020 1:45:07 PM    ""prefs"": { 1/16/2020 1:45:07 PM      ""profile.default_content_setting_values"": { 1/16/2020 1:45:07 PM        ""images"": 2 1/16/2020 1:45:07 PM      } 1/16/2020 1:45:07 PM    } 1/16/2020 1:45:07 PM  } 1/16/2020 1:45:07 PM} 1/16/2020 1:45:07 PM11:45:07.450 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) 1/16/2020 1:45:07 PMStarting ChromeDriver 79.0.3945.36 (3582db32b33893869b8c1339e8f4d9ed1816f143-refs/branch-heads/3945@{#614}) on port 12856 1/16/2020 1:45:07 PMOnly local connections are allowed. 1/16/2020 1:45:07 PMPlease protect ports used by ChromeDriver and related test frameworks to prevent access by malicious code. 1/16/2020 1:45:07 PM[1579175107.469][SEVERE]: bind() failed: Cannot assign requested address (99) 1/16/2020 1:45:08 PM11:45:08.147 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C 1/16/2020 1:45:08 PM11:45:08.157 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session 7575dc7341a030a61a3c08abf9f697b8 (org.openqa.selenium.chrome.ChromeDriverService) ```  As you can see from the logs the session **432be81a1ecdbe85af6a19db2ef3ba0b** is never terminated on the node and a new session is started even though MAX_INSTANCES is 1.  It seems it occurs when there are lots of: ``` [SEVERE]: Timed out receiving message from renderer: 18.182 1/16/2020 1:26:59 PM[1579174019.827][SEVERE]: Timed out receiving message from renderer: -0.003 ``` And the above happens when my website is not responding.  Here is the output of `ps -aux`: ``` USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND seluser      1  0.0  0.0  21340  3528 pts/0    Ss+  Jan15   0:00 bash /opt/bin/entry_point.sh seluser     11  0.0  0.0  57732 20780 pts/0    S+   Jan15   0:14 /usr/bin/python /usr/bin/supervisord --configuration /etc/supervisord.conf seluser     14  0.0  0.0  21340  3456 pts/0    S    Jan15   0:00 bash /opt/bin/start-xvfb.sh seluser     15  0.0  0.0  21340  3740 pts/0    S    Jan15   0:00 /bin/bash /opt/bin/start-selenium-node.sh seluser     18  0.4  0.0 1396292 62648 pts/0   Sl   Jan15   3:39 /usr/bin/Xvfb :99.0 -screen 0 1360x1020x24 -dpi 96 -ac +extension RANDR seluser     48  0.4  0.2 35329040 690852 pts/0 Sl   Jan15   3:46 java -cp /opt/selenium/*:. org.openqa.grid.selenium.GridLauncherV3 -role node -hub http://hub:4444/grid/register -nodeConfig /opt/selenium/config.json seluser   6770  0.0  0.0 690420 48464 pts/0    Sl   11:18   0:00 /opt/google/chrome/chrome --type=renderer --no-sandbox --enable-logging --disable-webrtc-apm-in-audio-service --log-level=0 --remote-debugging-port=0 --test-ty seluser  10989  1.0  0.0 111472 18248 pts/0    Sl   12:15   0:31 /opt/selenium/chromedriver-79.0.3945.36 --port=29144 seluser  11000  5.6  0.0 706468 153616 pts/0   Sl   12:15   2:56 /opt/google/chrome/chrome --no-sandbox --disable-background-networking --disable-client-side-phishing-detection --disable-default-apps --disable-hang-monitor - seluser  11005  0.0  0.0   7608   740 pts/0    S    12:15   0:00 cat seluser  11006  0.0  0.0   7608   788 pts/0    S    12:15   0:00 cat seluser  11008  0.0  0.0 421008 50640 pts/0    S    12:15   0:02 /opt/google/chrome/chrome --type=zygote --no-sandbox --enable-logging --log-level=0 --user-data-dir=/tmp/.com.google.Chrome.HlA1C6 seluser  11009  0.0  0.0  27508  3140 pts/0    S    12:15   0:00 /opt/google/chrome/nacl_helper --no-sandbox seluser  11027  1.3  0.0 737808 120936 pts/0   Sl   12:15   0:41 /proc/self/exe --type=gpu-process --field-trial-handle=13791595325161028530,18224374104055467530,131072 --no-sandbox --enable-logging --log-level=0 --user-data seluser  11029  1.4  0.0 522604 103184 pts/0   Sl   12:15   0:45 /opt/google/chrome/chrome --type=utility --field-trial-handle=13791595325161028530,18224374104055467530,131072 --lang=en-US --service-sandbox-type=network --no seluser  11084  0.0  0.0 705908 73688 pts/0    Sl   12:15   0:00 /opt/google/chrome/chrome --type=renderer --no-sandbox --enable-logging --disable-webrtc-apm-in-audio-service --log-level=0 --remote-debugging-port=0 --test-ty seluser  11169 21.3  0.1 1343504 373976 pts/0  Sl   12:15  11:03 /opt/google/chrome/chrome --type=renderer --no-sandbox --enable-logging --disable-webrtc-apm-in-audio-service --log-level=0 --remote-debugging-port=0 --test-ty seluser  26431  1.2  0.0 749140 82072 pts/0    Sl   13:07   0:00 /opt/google/chrome/chrome --type=renderer --no-sandbox --enable-logging --disable-webrtc-apm-in-audio-service --log-level=0 --remote-debugging-port=0 --test-ty seluser  26469  4.2  0.0 682544 74880 pts/0    Sl   13:07   0:00 /opt/google/chrome/chrome --type=renderer --no-sandbox --enable-logging --disable-webrtc-apm-in-audio-service --log-level=0 --remote-debugging-port=0 --test-ty seluser  26482  5.6  0.0 679216 73396 pts/0    Sl   13:07   0:00 /opt/google/chrome/chrome --type=renderer --no-sandbox --enable-logging --disable-webrtc-apm-in-audio-service --log-level=0 --remote-debugging-port=0 --test-ty seluser  26495  5.0  0.0 681776 74760 pts/0    Sl   13:07   0:00 /opt/google/chrome/chrome --type=renderer --no-sandbox --enable-logging --disable-webrtc-apm-in-audio-service --log-level=0 --remote-debugging-port=0 --test-ty seluser  26508  1.0  0.0   4628   816 pts/1    Ss+  13:07   0:00 /bin/sh -c TERM=xterm-256color; export TERM; [ -x /bin/bash ] && ([ -x /usr/bin/script ] && /usr/bin/script -q -c ""/bin/bash"" /dev/null || exec /bin/bash) || e seluser  26514  0.0  0.0   4628    92 pts/1    S+   13:07   0:00 /bin/sh -c TERM=xterm-256color; export TERM; [ -x /bin/bash ] && ([ -x /usr/bin/script ] && /usr/bin/script -q -c ""/bin/bash"" /dev/null || exec /bin/bash) || e seluser  26515  0.0  0.0  22244  2672 pts/1    R+   13:07   0:00 /usr/bin/script -q -c /bin/bash /dev/null seluser  26516  0.0  0.0   4628   780 pts/2    Ss   13:07   0:00 sh -c /bin/bash seluser  26517  0.0  0.0  21472  3956 pts/2    S    13:07   0:00 /bin/bash seluser  26521  5.5  0.0 664808 45680 pts/0    Sl   13:07   0:00 /opt/google/chrome/chrome --type=renderer --no-sandbox --enable-logging --disable-webrtc-apm-in-audio-service --log-level=0 --remote-debugging-port=0 --test-ty seluser  26534  0.0  0.0  37364  3200 pts/2    R+   13:07   0:00 ps -aux seluser  29188  0.4  0.0 110448 18088 pts/0    Sl   06:45   1:46 /opt/selenium/chromedriver-79.0.3945.36 --port=27522 seluser  29199  4.5  0.0 978260 186532 pts/0   Sl   06:45  17:16 /opt/google/chrome/chrome --no-sandbox --disable-background-networking --disable-client-side-phishing-detection --disable-default-apps --disable-hang-monitor - seluser  29204  0.0  0.0   7608   800 pts/0    S    06:45   0:00 cat seluser  29205  0.0  0.0   7608   772 pts/0    S    06:45   0:00 cat seluser  29207  0.0  0.0 421008 50340 pts/0    S    06:45   0:02 /opt/google/chrome/chrome --type=zygote --no-sandbox --enable-logging --log-level=0 --user-data-dir=/tmp/.com.google.Chrome.1wO4W4 seluser  29208  0.0  0.0  27508  3160 pts/0    S    06:45   0:00 /opt/google/chrome/nacl_helper --no-sandbox seluser  29241  2.3  0.0 734604 111260 pts/0   Sl   06:45   9:06 /opt/google/chrome/chrome --type=gpu-process --field-trial-handle=1507455793371754378,10270813205493320603,131072 --no-sandbox --enable-logging --log-level=0 - seluser  29244  0.7  0.0 531816 121816 pts/0   Sl   06:45   3:02 /opt/google/chrome/chrome --type=utility --field-trial-handle=1507455793371754378,10270813205493320603,131072 --lang=en-US --service-sandbox-type=network --no- seluser  29308  0.0  0.0 705908 74884 pts/0    Sl   06:45   0:00 /opt/google/chrome/chrome --type=renderer --no-sandbox --enable-logging --disable-webrtc-apm-in-audio-service --log-level=0 --remote-debugging-port=0 --test-ty seluser  29372 57.3  1.1 3602324 2817532 pts/0 Sl   06:45 219:06 /opt/google/chrome/chrome --type=renderer --no-sandbox --enable-logging --disable-webrtc-apm-in-audio-service --log-level=0 --remote-debugging-port=0 --test-ty ``` Here you can see that the browser which started at 6:45 it is still open.  Here is my setup ` version: '2' services:   hub:     mem_limit: 3145728000     image: selenium/hub:3.141.59-yttrium     environment:       GRID_MAX_SESSION: '1'       GRID_TIMEOUT: '90'       GRID_BROWSER_TIMEOUT: '120'     stdin_open: true     tty: true     mem_reservation: 3145728000   chrome:     image: selenium/node-chrome:3.141.59-yttrium     stdin_open: true     volumes:     - /dev/shm:/dev/shm     tty: true ' This is similar to #2332 ## Environment  OS: Linux Browser: Chrome Browser version: 79.0.3945.79 Browser Driver version: ChromeDriver 79.0.3945.36 Language Bindings version: java.version: '1.8.0_181' Selenium Grid version (if applicable): 3.141.59","closed","R-awaiting answer,","cod-r","2020-01-16T13:19:18Z","2020-05-20T19:34:46Z"
"","8648","""Unhandled Promise Rejection: Error: Server terminated early with status 1 at: Error: Server terminated early with status 1"" happening sometimes","## üêõ Bug Report  When executing multiple node-based tests using Chrome headless in `selenium/standalone-chrome:4` docker container after another (=browser is stopped after each test and a new Browser is started at the start of the test using `const chromeBrowser = new Selenium.Builder().forBrowser(""chrome"").setChromeOptions(options).build();`), suddenly, in some runs the the following error occurs: ``` Unhandled Promise Rejection: Error: Server terminated early with status 1 at: Error: Server terminated early with status 1     at /github/workspace/app/node_modules/selenium-webdriver/remote/index.js:251:52     at runMicrotasks ()     at processTicksAndRejections (internal/process/task_queues.js:97:5) ```  It's kind of rare but not a one-timer. When it happens, re-running the tests again makes them all pass in most cases.  ## To Reproduce  Unfortunately, it's not reliably reproducible.  Detailed steps to reproduce the behavior: N/A  ## Expected behavior  This error does not happen or it tells me more details what to do to avoid it (where to place a `try/catch` and retry the operation). It would probably already help to know what exactly is causing the problem.  ## Test script or set of commands reproducing this issue  See above  ## Environment  OS: Docker container selenium/standalone-chrome:4 (4.0.0-alpha-6-20200730) running in Github Actions Browser: Chrome (Headless) Browser version: 84.0.4147.105 Browser Driver version: 84.0.4147.30 Language Bindings version: node selenium-webdriver 4.0.0-alpha.7 Selenium Grid version (if applicable): N/A","closed","","ceisele-r","2020-08-26T06:04:36Z","2021-09-05T08:37:12Z"
"","8706","ChromeDriver becomes ""zombie"" process right after Chrome fails to start","## üêõ Bug Report  When creating a new ChromeDriver if initialization fails due to browser crash the chromedriver process continues to run. This may cause many chromedriver processes to be spawned during the application lifetime which can cause a serious performance degradation.  ## To Reproduce As the exact reasons behind the Chrome crash are unknown it makes it hard to come up with the exact steps on how to reproduce the issue. This issue was observed from time to time in Production with OS resources being the only thing that varies. The error stack trace observed at the time this happened: ``` Caused by: org.openqa.selenium.WebDriverException: unknown error: Chrome failed to start: exited abnormally.   (unknown error: DevToolsActivePort file doesn't exist)   (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.) Build info: version: '4.0.0-alpha-6', revision: '5f43a29cfc' System info: host: 'rendered-html-collection-service-6758545d9-xt668', ip: '100.107.126.149', os.name: 'Linux', os.arch: 'amd64', os.version: '4.4.0-1057-aws', java.version: '11.0.5' Driver info: driver.version: ManagedWebDriver remote stacktrace: #0 0x559d05286a39   	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490) 	at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62) 	at org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30) 	at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$1(ProtocolHandshake.java:126) 	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) 	at java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958) 	at java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127) 	at java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502) 	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488) 	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) 	at java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150) 	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) 	at java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:138) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:582) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:216) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:136) 	at org.openqa.selenium.chromium.ChromiumDriver.(ChromiumDriver.java:75) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:163) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:150) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:139) ``` Please refer to the unit test below to get more details on how to reproduce the issue.  ## Expected behavior  There should be the only chromedriver process in the process list while the application is running.  ## Test script or set of commands reproducing this issue Inside org.openqa.selenium.remote.service.DriverCommandExecutor#execute move a call to `super.execute` into a separate method so it can be mocked: ```java   @VisibleForTesting   Response invokeExecute(Command command) throws IOException {     return super.execute(command);   } ```  The below junit test should fail at `verify(service).stop()` as it is not invoked at the moment: ```java   @Test   public void shouldStopDriverServerOnExceptionForTheNewSessionCommand() throws IOException {     Command command = new Command(null, DriverCommand.NEW_SESSION(new ImmutableCapabilities()));     DriverService service = mock(DriverService.class);     when(service.getUrl()).thenReturn(new URL(""http://a.base.url:3000""));     when(service.isRunning()).thenReturn(false, true);      DriverCommandExecutor executor = spy(new DriverCommandExecutor(service));     doThrow(WebDriverException.class).when(executor).invokeExecute(any(Command.class));     assertThatExceptionOfType(WebDriverException.class)       .isThrownBy(() -> executor.execute(command));      verify(service).start();     verify(service).stop();   } ```  ## Environment  OS: Debian GNU/Linux 10 (buster), Linux, 4.40-1057-aws, (Run in Docker container) Browser: Chrome Browser version: 85.0.4183.87 Browser Driver version: 85.0.4183.87 Language Bindings version: Java, OpenJDK Runtime Environment 18.9 (build 11.0.5+10)","closed","needs-triaging,","iaroslavn","2020-09-16T22:25:35Z","2021-09-05T08:24:55Z"
"","8627","Actionchains Drag and Drop is not working with vue.js elements","## üêõ Bug Report  When attempting to use ActionChains to drag and drop element on a webpage that uses vue.js, selenium is not properly dragging and releasing the object.  ## To Reproduce  Detailed steps to reproduce the behavior:  Navigate to https://sortablejs.github.io/Vue.Draggable/#/simple Using action chains, attempt to drag the element containing the text ""John"" to the element containing the test ""Jean"" Observe that the ""John"" element is selected but not dragged  ## Expected behavior  Vue.JS elements can be drag and dropped using actionchains   ## Test script or set of commands reproducing this issue  from selenium import webdriver ``` from selenium.webdriver import ActionChains from selenium.webdriver.common.by import By  driver = webdriver.Chrome() driver.get('https://sortablejs.github.io/Vue.Draggable/#/simple') dragged = driver.find_element(By.XPATH, ""//div[@class='col-6']//div[@class='list-group-item'][contains(text(),'John')]"") dropped = driver.find_element(By.XPATH, ""//div[@class='col-6']//div[@class='list-group-item'][contains(text(),'Jean')]"")  # #Drag and drop actions = ActionChains(driver) actions.drag_and_drop(dragged, dropped).perform() # #column A is selected but not dragged  #Click and hold actions = ActionChains(driver) actions.move_to_element(dragged).click_and_hold().move_to_element(dropped).release().perform() #Same result : column a is selected but not dragged ``` ## Environment  OS:  Windows 10  Browser:  Chrome Browser version: Version 84.0.4147.125 Browser Driver version: ChromeDriver 85.0.4183.38 Language Bindings version: python 3.8.1","closed","needs-triaging,","mtplewis","2020-08-12T21:05:42Z","2021-09-05T08:19:00Z"
"","8472","[rb] `set_window_rect` failing on IEDriver (Se4 alpha REMOTE) with Java NPE","## üêõ Bug Report  When attempting to run a command which resizes the window, eventually the code will traverse to set_window_rect, with 4 params.  The usual input for this is to have x/y not provided (So they default to nil).  On chrome/firefox, this works fine. They usually seem to default to 10 and 10 afterwards i.e. ``` # lib/selenium/webdriver/remote/w3c/bridge.rb:218             params = {x: x, y: y, width: width, height: height} # x: nil, y: nil, width: 1280, height: 800             params.update(params) { |_k, v| Integer(v) unless v.nil? }             execute :set_window_rect, {}, params #  {""height""=>788, ""width""=>1044, ""x""=>10, ""y""=>10} ```  In IE, we get a Java NPE  ``` # lib/selenium/webdriver/remote/w3c/bridge.rb:218             params = {x: x, y: y, width: width, height: height} # x: nil, y: nil, width: 1280, height: 800             params.update(params) { |_k, v| Integer(v) unless v.nil? }             execute :set_window_rect, {}, params # null value in entry: x=null ``` Same code, same execution.  Full-er stacktrace is ``` Selenium::WebDriver::Error::UnknownError: null value in entry: x=null [remote server] com.google.common.collect.CollectPreconditions(CollectPreconditions.java):32:in `checkEntryNotNull' [remote server] com.google.common.collect.ImmutableMap(ImmutableMap.java):176:in `entryOf' [remote server] com.google.common.collect.ImmutableMap$Builder(ImmutableMap.java):285:in `put' [remote server] com.google.common.collect.ImmutableMap$Builder(ImmutableMap.java):299:in `put' [remote server] com.google.common.collect.ImmutableMap$Builder(ImmutableMap.java):327:in `putAll' ```  ## To Reproduce  Create driver. Run any resize command which will call the resize_to code on remote endpoint.  Driver caps ``` Selenium::WebDriver::Remote::Capabilities.new.tap do |capabilities|         capabilities[""browserName""] = browser.capitalize         capabilities[""browserName""] = ""IE"" if browser == :internet_explorer         capabilities[""browserVersion""] = browser_version         capabilities[""bstack:options""] = {           ""os"" => ""Windows"",           ""osVersion"" => ""10"",           ""seleniumVersion"" => ""4.0.0.alpha6"",         }          if browser == :chrome           capabilities[""goog:loggingPrefs""] = { browser: ""ALL"", driver: ""ALL"" }         end end ``` ## Expected behavior  Chrome/Firefox resize works, IE doesn't  ## Test script or set of commands reproducing this issue  Caps are above. Only thing to note is I'm using 3.142.7 gem with 4.0.0 alpha6 remote end in browserstack  ## Environment  OS: Win10 on browserstack, Ubuntu locally (Not relevant) Browser: Chrome/FF good, IE bad Browser version: Chrome 83/FF 77/IE 11 Browser Driver version: Correct ones Language Bindings version: 3.142.7 locally Selenium Grid version (if applicable): 4.0.0.alpha6 remote end","closed","D-IE,","luke-hill","2020-07-01T08:37:25Z","2021-09-05T09:12:28Z"
"","8425","Selenium grid -> Timeout exception when accessing iframe inside iframe","## üêõ Bug Report  When accessing iframe from parent iframe timeout exception is thrown   ## To Reproduce 1. have we page with iframe in it and the iframe should contain an other iframe. 2.find the parent iframe 3.switch to the parent iframe  4.from parent iframe search the child iframe  5.try to switch to the child   ##########The bug ################# execution is hold  until ESOCKETTIMEDOUT error is thrown    Detailed steps to reproduce the behavior:  ## Expected behavior  A clear and concise description of what you expected to happen.  ## Test script or set of commands reproducing this issue  `private switchToIFrame(callback: () => T) {     const rootIframe = this.parentElement.$(this.iFrame);     const frames = $$(this.iFrame);     browser.waitUntil(() => rootIframe.isExisting(), 5000, 'Root iframe was not find');     try {       browser.switchToFrame(rootIframe);       browser.execute('return  document.querySelector(""iFrame"").setAttribute(""id"",""myFrame"")');       const internalIframe = $(this.iFrame);       browser.waitUntil(() => internalIframe.isExisting(), 5000, 'Internal iframe was not find');       const id = internalIframe.getAttribute('id');       browser.switchToFrame(id);       return callback();     } finally {       browser.switchToFrame(null);     }   }`  ## Environment  OS: mac and linux Browser: chrome Browser version: 83 Browser Driver version: wdio 5..16 Language Bindings version: JS  Selenium Grid version (if applicable): 3.141.59","closed","R-awaiting answer,","kfirbhCS","2020-06-15T14:55:48Z","2021-09-05T09:02:50Z"
"","7882","When website has a cookie with empty name, Selenium is unable to get any cookies and throws an exception: Unhandled Exception: OpenQA.Selenium.WebDriverException: Unexpected problem getting cookies ---> System.ArgumentException: Cookie name cannot be null or empty string Parameter name: name","## üêõ Bug Report  When a website has a cookie with an empty name, Selenium throws an exception when trying to get cookies.  Running: `driver.Manage().Cookies.GetCookieNamed(""cname"");`  Throws an exception:  ``` Unhandled Exception: OpenQA.Selenium.WebDriverException: Unexpected problem getting cookies ---> System.ArgumentException: Cookie name cannot be null or empty string Parameter name: name    at OpenQA.Selenium.Cookie..ctor(String name, String value, String domain, String path, Nullable`1 expiry)    at OpenQA.Selenium.Cookie.FromDictionary(Dictionary`2 rawCookie)    at OpenQA.Selenium.Remote.RemoteCookieJar.GetAllCookies()    --- End of inner exception stack trace ---    at OpenQA.Selenium.Remote.RemoteCookieJar.GetAllCookies()    at OpenQA.Selenium.Remote.RemoteCookieJar.GetCookieNamed(String name) ```  I see no issues with communication with the webdriver. Selenium is able to control the browser, even add cookies, but the moment I want to read the cookies, it throws an exception.  ## To Reproduce  When a website has a cookie with an empty name the issue will be triggered.  For example a website that runs this javascript when the page is loaded:   `document.cookie = name + '=; expires=Thu, 01 Jan 2970 00:00:01 GMT;';`  ## Expected behavior  The exception should not happen. If cookies with empty names are supported in the browser, they should also be supported in Selenium.  ## Environment  OS: Windows 10 Browser: Chromium Browser version: 79.0.3945.0 Browser Driver version: ChromeDriver 79.0.3945.3600 Language Bindings version: C# Selenium.WebDriver: 3.141.0  ## Extra Info By the RFC, setting the cookie to an empty name, the cookie should be ignored by the browser:  >    5.  If the name string is empty, ignore the set-cookie-string >        entirely.  https://tools.ietf.org/html/rfc6265  But nothing is said about javascript. I was able to reproduce the empty cookie name with both Chromium, Chrome and Firefox (May as well work with other browsers).","closed","C-dotnet,","rkkoszewski","2019-12-23T10:25:26Z","2022-01-26T00:09:41Z"
"","8774","socks-Proxy not working - Long vs Integer for socksVersion param","## üêõ Bug Report  We try to use Selenium with socks-proxies from Perl via Webdrive 3 but can't initialize the session: `Could not create new session: java.lang.Long cannot be cast to java.lang.Integer at test.pl line 26.`  Here is the logoutput from the hub: ``` 13:22:35.415 INFO [ActiveSessionFactory.apply] - Capabilities are: {   ""acceptSslCerts"": true,   ""browserName"": ""chrome"",   ""goog:chromeOptions"": {   },   ""javascriptEnabled"": true,   ""proxy"": {     ""proxyType"": ""manual"",     ""socksProxy"": ""selenium_proxy_1:1080"",     ""socksVersion"": 5   },   ""version"": """" } [1602508955.421][SEVERE]: bind() failed: Cannot assign requested address (99) ```  When we ""fix"" the socksVersion-Parsing in `java/client/src/org/openqa/selenium/Proxy.java` everything work as expected. When we switch to http-Proxy everything work as expected.  Perhaps this is a combination of perl + java and typecasting, but Selenium should handle userinput better.  Our quickfix: ``` --- a/java/client/src/org/openqa/selenium/Proxy.java +++ b/java/client/src/org/openqa/selenium/Proxy.java @@ -91,7 +91,13 @@ public Proxy(Map raw) {        setSocksProxy((String) raw.get(""socksProxy""));      }      if (raw.containsKey(""socksVersion"") && raw.get(""socksVersion"") != null) { -      setSocksVersion(((Number) raw.get(""socksVersion"")).intValue()); +      //setSocksVersion(((Number) raw.get(""socksVersion"")).intValue()); +      try { +        setSocksVersion((Integer) raw.get(""socksVersion"")); +      } catch (ClassCastException exc) { +        Long l = (Long) raw.get(""socksVersion""); +        setSocksVersion(l.intValue()); +      }      }      if (raw.containsKey(""socksUsername"") && raw.get(""socksUsername"") != null) {        setSocksUsername((String) raw.get(""socksUsername"")); ```  ## To Reproduce  Start a Selenium hub with a chrome/firefox browser and try to use socksVersion.  ## Expected behavior  Using Selenium over a Proxy.  ## Environment  OS: Debian Browser: chrome/firefox Browser version: unknown Browser Driver version: chromedriver: 2.35, geckodriver: 0.19.1 Language Bindings version: Perl","closed","needs-triaging,","Sadrak","2020-10-12T13:58:40Z","2021-09-05T08:19:06Z"
"","8413","Ruby: sporadic ""stream closed in another thread"" IOError","## üêõ Bug Report  We are using selenium-webdriver to test a Rails 6 application using capybara and rspec. The tests will sporadically fail with the following error:  ``` IOError:   Failed to open TCP connection to 127.0.0.1:9515 (stream closed in another thread) ```  Judging by the backtrace and the port number, I am assuming this is selenium-webdriver failing to communicate with chromedriver.  Backtrace:  ``` /usr/local/lib/ruby/2.5.0/net/protocol.rb:233:in `write' /usr/local/lib/ruby/2.5.0/net/protocol.rb:233:in `write0' /usr/local/lib/ruby/2.5.0/net/protocol.rb:207:in `block in write' /usr/local/lib/ruby/2.5.0/net/protocol.rb:224:in `writing' /usr/local/lib/ruby/2.5.0/net/protocol.rb:206:in `write' /usr/local/lib/ruby/2.5.0/net/http/generic_request.rb:334:in `write_header' /usr/local/lib/ruby/2.5.0/net/http/generic_request.rb:186:in `send_request_with_body' /usr/local/lib/ruby/2.5.0/net/http/generic_request.rb:121:in `exec' /usr/local/lib/ruby/2.5.0/net/http.rb:1495:in `block in transport_request' /usr/local/lib/ruby/2.5.0/net/http.rb:1494:in `catch' /usr/local/lib/ruby/2.5.0/net/http.rb:1494:in `transport_request' /usr/local/lib/ruby/2.5.0/net/http.rb:1467:in `request' ./vendor/bundle/ruby/2.5.0/gems/webmock-3.8.3/lib/webmock/http_lib_adapters/net_http.rb:97:in `block in request' ./vendor/bundle/ruby/2.5.0/gems/webmock-3.8.3/lib/webmock/http_lib_adapters/net_http.rb:105:in `block in request' ./vendor/bundle/ruby/2.5.0/gems/webmock-3.8.3/lib/webmock/http_lib_adapters/net_http.rb:137:in `start_with_connect_without_finish' ./vendor/bundle/ruby/2.5.0/gems/webmock-3.8.3/lib/webmock/http_lib_adapters/net_http.rb:104:in `request' ./vendor/bundle/ruby/2.5.0/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/remote/http/default.rb:129:in `response_for' ./vendor/bundle/ruby/2.5.0/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/remote/http/default.rb:82:in `request' ./vendor/bundle/ruby/2.5.0/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/remote/http/common.rb:64:in `call' ./vendor/bundle/ruby/2.5.0/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/remote/bridge.rb:167:in `execute' ./vendor/bundle/ruby/2.5.0/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/remote/w3c/bridge.rb:567:in `execute' ./vendor/bundle/ruby/2.5.0/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/remote/w3c/bridge.rb:558:in `find_elements_by' ./vendor/bundle/ruby/2.5.0/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/common/search_context.rb:80:in `find_elements' ./vendor/bundle/ruby/2.5.0/gems/capybara-3.32.1/lib/capybara/selenium/extensions/find.rb:17:in `find_by' ```  ## To Reproduce  Unfortunately I have not been able to consistently reproduce this error. It seems to fail roughly once out of every 1,000 test cases. On Circle CI this means about 5-10% of our CI builds (Ubuntu) fail due to this ""stream closed in another thread"" error. I've also seen the error on my development workstation (macOS), although this is more more rare.  The workaround is to use the `rspec-retry` gem to automatically retry failures when these sporadic errors occur. The test will always succeed on second or third attempt.  Apologies for the vague bug report. If there is another repo where this issue would be more appropriate (capybara? chromedriver?) or suggestions for troubleshooting steps, please let me know.  I've searched for ""stream closed in another thread"" in various projects but not found any similar reports.  ## Environment  OS: Ubuntu and macOS Browser: Chrome Browser version: 83.0.4103.97 Browser Driver version: ChromeDriver 83.0.4103.39 Language Bindings version: Ruby 3.142.7  Selenium Grid version (if applicable): N/A","closed","C-rb,","mattbrictson","2020-06-11T01:02:55Z","2021-09-05T09:12:37Z"
"","8202","Using headless and normal mode to open the Google login website interface is different","## üêõ Bug Report  Using headless and normal mode to open the Google login website interface is different, resulting in unable to find the element    ## To Reproduce  when use normal mode to open the Google login siteÔºåthe interfacelike thisÔºö ![image](https://user-images.githubusercontent.com/16516384/79443365-514a2d00-800c-11ea-85ef-0ecb6594cfde.png)  But when use headless mode to open the Google login siteÔºåthe interface like thisÔºö ![image](https://user-images.githubusercontent.com/16516384/79443469-70e15580-800c-11ea-9690-2bfb1019dcf8.png)  When use headless mode,user name cannot be filled in and automatic login cannot be achieved. ![image](https://user-images.githubusercontent.com/16516384/79443806-e9e0ad00-800c-11ea-8e5b-98b6eeddb801.png)  I use chrome 81/79 both version can reproduce.  ## Expected behavior  Using headless and general mode to open the Google login site should have the exact same interface  ## Test script or set of commands reproducing this issue  ``` # coding=utf-8 from selenium import webdriver import sys import time   chrome_options = webdriver.ChromeOptions() chrome_options.add_argument('--headless')  #use headless mode or not chrome_options.add_argument('--disable-gpu') chrome_options.add_argument('--no-sandbox')  client = webdriver.Chrome(chrome_options=chrome_options)    client.get('https://accounts.google.com/')  time.sleep(1) client.save_screenshot('1-0.png')  blank1 = client.find_element_by_xpath('//*[@id=""identifierId""]') blank1.send_keys(""123456@gmail.com"")  client.save_screenshot('h-1.png')  print('save success.') time.sleep(5)  client.quit() ``` use headless mode or not will have different results. ## Environment  OS:Windows10 Browser: Chrome Browser version: 81.0.4044.113 Browser Driver version: ChromeDriver 81.0.4044.69 Language Bindings version: python3.7 Selenium Grid version (if applicable):  3.141.59","closed","needs-triaging,","baolinhu","2020-04-16T10:06:54Z","2020-05-20T19:18:15Z"
"","8724","Using get_attribute(""value"") will cause a data type error bug","## üêõ Bug Report  Using get_attribute(""value"") will cause a data type error bug.  When the string in the value value starts with a number, the data type will be recognized as int, resulting in the truncation of letters and subsequent strings. When len is used to obtain the length of the string, an error is reported: TypeError(""object of type 'int' has no len()"")  Code Ôºö  ```python  ''' Use LanguageÔºöPython 3.8.3 Chrome VersionÔºöÁâàÊú¨ 85.0.4183.102ÔºàÊ≠£ÂºèÁâàÊú¨Ôºâ Ôºà64 ‰ΩçÔºâ '''  # HTML Tag:   # Python Code: logger.info(e_li.get_attribute(""value"")) logger.info(len(e_li.get_attribute(""value""))) logger.info(e_li.get_property(""value""))            logger.info(len(e_li.get_property(""value"")))  #Console Log: [2020-09-23 01:05:54] [INFO] 4 [2020-09-23 01:05:54] [INFO] 1 [2020-09-23 01:05:54] [INFO] 4 [2020-09-23 01:05:54] [INFO] TypeError(""object of type 'int' has no len()"") ```  ![image](https://user-images.githubusercontent.com/16589026/93914578-50df5c00-fd39-11ea-9a18-3201d7438134.png)","closed","C-py,","wangqian0628","2020-09-22T17:10:56Z","2021-09-05T08:06:41Z"
"","8735","[rb] Upload file command is not W3C compatible","## üêõ Bug Report  Upload file command is not W3C compatible  ## To Reproduce  Use the selenium 4.x version with Saucelabs and try to upload a file using upload_file method  ``` Selenium::WebDriver::Error::UnknownCommandError: 09:10:24        unknown command: unknown command: session/057a6f6332b92799b785cb73f414d279/se/file 09:10:24      # 0   chromedriver                        0x0000000103aac6b9 chromedriver + 4904633 09:10:24      # 1   chromedriver                        0x0000000103a4bde3 chromedriver + 4509155 09:10:24      # 2   chromedriver                        0x00000001036bbc06 chromedriver + 773126 09:10:24      # 3   chromedriver                        0x000000010363d439 chromedriver + 255033 09:10:24      # 4   chromedriver                        0x000000010363d0fd chromedriver + 254205 09:10:24      # 5   chromedriver                        0x0000000103603fba chromedriver + 20410 09:10:24      # 6   chromedriver                        0x0000000103a75032 chromedriver + 4677682 09:10:24      # 7   chromedriver                        0x0000000103a82eca chromedriver + 4734666 09:10:24      # 8   chromedriver                        0x0000000103a82b81 chromedriver + 4733825 09:10:24      # 9   chromedriver                        0x0000000103a5820e chromedriver + 4559374 09:10:24      # 10  chromedriver                        0x0000000103a833f1 chromedriver + 4735985 09:10:24      # 11  chromedriver                        0x0000000103a69dea chromedriver + 4632042 09:10:24      # 12  chromedriver                        0x0000000103601824 chromedriver + 10276 09:10:24      # 13  libdyld.dylib                       0x00007fff63765ea9 start + 1 09:10:24      # 14  ???                                 0x0000000000000003 0x0 + 3 09:10:24      # ./gems/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/remote/response.rb:72:in `assert_ok' 09:10:24      # ./gems/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/remote/response.rb:34:in `initialize' 09:10:24      # ./gems/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/remote/http/common.rb:88:in `new' 09:10:24      # ./gems/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/remote/http/common.rb:88:in `create_response' 09:10:24      # ./gems/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/remote/http/default.rb:114:in `request' 09:10:24      # ./gems/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/remote/http/common.rb:64:in `call' 09:10:24      # ./gems/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/remote/bridge.rb:167:in `execute' 09:10:24      # ./gems/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/remote/w3c/bridge.rb:567:in `execute' 09:10:24      # ./gems/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/remote/w3c/bridge.rb:395:in `upload' 09:10:24      # ./gems/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/remote/w3c/bridge.rb:379:in `block in send_keys_to_element' 09:10:24      # ./gems/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/remote/w3c/bridge.rb:379:in `map' 09:10:24      # ./gems/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/remote/w3c/bridge.rb:379:in `send_keys_to_element' 09:10:24      # ./gems/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/common/element.rb:156:in `send_keys' 09:10:24      # ./gems/gems/capybara-3.33.0/lib/capybara/selenium/node.rb:362:in `block in set_file' 09:10:24      # ./gems/gems/capybara-3.33.0/lib/capybara/selenium/node.rb:375:in `with_file_detector' 09:10:24      # ./gems/gems/capybara-3.33.0/lib/capybara/selenium/node.rb:357:in `set_file' 09:10:24      # ./gems/gems/capybara-3.33.0/lib/capybara/selenium/nodes/chrome_node.rb:26:in `set_file' 09:10:24      # ./gems/gems/capybara-3.33.0/lib/capybara/selenium/node.rb:72:in `set' 09:10:24      # ./gems/gems/capybara-3.33.0/lib/capybara/node/element.rb:123:in `block in set' 09:10:24      # ./gems/gems/capybara-3.33.0/lib/capybara/node/base.rb:83:in `synchronize' 09:10:24      # ./gems/gems/capybara-3.33.0/lib/capybara/node/element.rb:123:in `set' 09:10:24      # ./gems/gems/capybara-3.33.0/lib/capybara/node/actions.rb:303:in `attach_file' 09:10:24      # ./pages/sections/xing_id_module.rb:18:in `upload' 09:10:24      # ./spec/image_upload_spec.rb:63:in `block (4 levels) in ' 09:10:24      # ./gems/bundler/gems/page_objects_dsl-91f04084e372/lib/page_objects/dsl.rb:39:in `instance_eval' 09:10:24      # ./gems/bundler/gems/page_objects_dsl-91f04084e372/lib/page_objects/dsl.rb:39:in `evaluate' 09:10:24      # ./gems/bundler/gems/page_objects_dsl-91f04084e372/lib/page_objects/dsl.rb:56:in `visit_page' 09:10:24      # ./spec/image_upload_spec.rb:59:in `block (3 levels) in ' 09:10:24      # ./gems/gems/rspec-retry-0.6.2/lib/rspec/retry.rb:124:in `block in run' 09:10:24      # ./gems/gems/rspec-retry-0.6.2/lib/rspec/retry.rb:110:in `loop' 09:10:24      # ./gems/gems/rspec-retry-0.6.2/lib/rspec/retry.rb:110:in `run' 09:10:24      # ./gems/gems/rspec-retry-0.6.2/lib/rspec_ext/rspec_ext.rb:12:in `run_with_retry' 09:10:24      # ./gems/gems/rspec-retry-0.6.2/lib/rspec/retry.rb:37:in `block (2 levels) in setup' ```  ## Expected behavior  The session should call for the W3C compatible command without '/se'  Incorrect eg: `session/057a6f6332b92799b785cb73f414d279/se/file`  Correct eg: `session/057a6f6332b92799b785cb73f414d279/file`  ## Test script or set of commands reproducing this issue  Its not easy to reproduce as this issue only occurs when executing the tests on a remote web driver like Saucelabs in W3C compatible mode  ## Environment  OS: Windows 10  Browser: Chrome Browser version: 85 Browser Driver version: 85.0.4183.38 Selenium Grid version (if applicable): 3.142.7","closed","OS-mac,","abhisheksawant16","2020-09-25T16:16:23Z","2021-09-05T08:33:58Z"
"","8217","UnreachableBrowserException when implicitlyWait > 60s","## üêõ Bug Report  UnreachableBrowserException instead of NoSuchElementException when implicitlyWait greater than 60s   ## To Reproduce  run this test(selenium 4.0.0-alpha-5)      @Test     public void test() {         WebDriverManager.chromedriver().setup();         ChromeOptions options = new ChromeOptions();         WebDriver driver = new ChromeDriver(options);         driver.manage().timeouts().implicitlyWait(61, TimeUnit.SECONDS);         driver.get(""https://google.com"");         driver.findElement(By.id(""identifierId""));         driver.quit();     }  I get an error message:  ``` org.openqa.selenium.remote.UnreachableBrowserException: Error communicating with the remote browser. It may have died. Build info: version: '4.0.0-alpha-5', revision: 'b3a0d621cc' System info: host: 'MacBook-Pro-2', ip: 'fe80:0:0:0:31:8ff8:ab39:5031%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.3', java.version: '1.8.0_191' Driver info: driver.version: RemoteWebDriver Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 81.0.4044.113, chrome: {chromedriverVersion: 80.0.3987.106 (f68069574609..., userDataDir: /var/folders/hd/yrwc8tsx1tv...}, goog:chromeOptions: {debuggerAddress: localhost:50634}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify} Session ID: 8cbbf47848747b325357288d3e32a0d9 ```  	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:603) 	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:333) 	at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:381) 	at org.openqa.selenium.By$ById.findElement(By.java:194) 	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:325)   ## Expected behavior  I am expecting an error: NoSuchElementException   when implicitlyWait less than 60 second  is ok, I get NoSuchElementException   ## Environment  OS: OSX 10.15.3 Browser: Chrome  Browser version:  81.0.4044.113 Browser Driver version:  ChromeDriver 80.0.3987.106","closed","C-java,","mmajcherczyk","2020-04-18T21:08:52Z","2021-09-05T08:19:11Z"
"","7911","Proxy Authentication Does Not Work","## üêõ Bug Report  Unable to use proxy with username / password  ## To Reproduce  Documentation      https://github.com/SeleniumHQ/selenium/wiki/DesiredCapabilities#proxy-json-object  Error thrown      Message: Invalid proxy configuration entry: socksPassword  ## Expected behavior  To retrieve the website without errors  ## Test script or set of commands reproducing this issue  Code - Python      fireFoxOptions = webdriver.FirefoxOptions()     fireFoxOptions.set_headless()      PROXY = ""myproxy.com:8080""      webdriver.DesiredCapabilities.FIREFOX['proxy']={         ""httpProxy"":PROXY,         ""ftpProxy"":PROXY,         ""sslProxy"":PROXY,         ""socksProxy"":PROXY,         ""socksUsername"":""proxyusername"",         ""socksPassword"":""proxypassword"",         ""noProxy"":[],         ""proxyType"":""MANUAL""     }      browser = webdriver.Firefox(firefox_options=fireFoxOptions)     browser.get('https://www.google.com/')  Error thrown      Message: Invalid proxy configuration entry: socksPassword  ## Environment  OS: Debian Browser: Latest version of Firefox and Chrome Browser version: Latest as of 2020-01-03 Browser Driver version: Latest as of 2020-01-03 Language Bindings version: Python Latest as of 2020-01-03","closed","D-chrome,","nomaam","2020-01-04T03:45:41Z","2022-06-11T00:11:03Z"
"","8563","IE not working with reactor","## üêõ Bug Report  Unable to run complete test on IE while running jar with `-Dwebdriver.http.factory=reactor` in case of 4.0.0-alpha-6, working fine with `okhttp`. Failing to open url.  OS:  Windows 10 Browser: Internet Explorer Browser version: 11 Browser Driver version: 3.141.5.0  Selenium Grid version (if applicable): 4.0.0-aplha-6","closed","D-IE,","sparsh00","2020-07-23T12:16:40Z","2021-09-05T08:34:06Z"
"","8237","Selenium server node failed to start new session for MS edge CHROMIUM","## üêõ Bug Report  Unable to create new service: EdgeDriverService    ## To Reproduce    Detailed steps to reproduce the behavior:  ## Expected behavior  A clear and concise description of what you expected to happen.  ## Test script or set of commands reproducing this issue edgeOptions.AddAdditionalCapability(CapabilityType.EnableProfiling, true); edgeOptions.AddAdditionalCapability(""BrowserExecutableLocation"", ""C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\81.0.416.64\\msedge.exe""); edgeOptions.AddAdditionalCapability(""UseChromium"", ""true""); Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS:  Windoe 10 Browser:  MS Edge  Browser version:  81.0.416.64 Browser Driver version:  81.0.416.64 Language Bindings version:   jdk-14 Selenium Grid version (if applicable):  checked both selenium-server-standalone-3.14.0, selenium-server-standalone-3.141.59","closed","needs-triaging,","ShizaTariq18","2020-04-24T15:38:06Z","2021-09-05T10:02:48Z"
"","8117","No Health Check URL for Nodes.","## üêõ Bug Report  Trying to run any selenium node containers in a k8s cluster you can get into a state where the node is not accepting any more tests. Normally this is what a health endpoint is for, helping us know when the node is not working.  ## To Reproduce  Try to use the hub health check url on a node. http://$HOST:$PORT/wd/hub/status   Tell us the detailed steps to reproduce it: Try using curl on this URL on a node and you get connection refused.   ## Expected behavior  What do you expect to happen? How should have it worked? I expected to get back a JSON response just like the hub would provide.  ## Environment  Your grid-node containers are what I am using. https://hub.docker.com/u/selenium","closed","R-awaiting answer,","burninmedia","2020-03-17T21:19:25Z","2021-09-05T09:43:51Z"
"","8671","Unable to add Microsoft Edge Chromium browser in Selenium Grid","## üêõ Bug Report  Trying to add Edge Chromium browser in selenium Grid. But I see Edge legacy after adding the below code.   ## To Reproduce I am adding the below code in node.json ``` { 	""capabilities"": 	[ 		{ 			""platform"": ""Windows"", 			""browserName"": ""MicrosoftEdge"", 			""maxInstances"": 5, 			""seleniumProtocol"": ""WebDriver"" 		} 	], 	""proxy"": ""org.openqa.grid.selenium.proxy.DefaultRemoteProxy"", 	""maxSession"": 1, 	""port"": 5555, 	""host"": """", 	""register"": true, 	""registerCycle"": 5000, 	""cleanUpCycle"":2000, 	""hubPort"": 4444, 	""hubHost"": """", 	""nodeTimeout"":120, 	""nodePolling"":2000 } ```  I am giving the below code in batch file  _`start java -Dwebdriver.edge.driver=""../../Drivers/msedgedriver.exe"" -jar ""%SELSERV%"" -role node -nodeConfig ..\ConfigFiles\NodeConfig.json`_  Here _msedgedriver.exe_ is a edge chromium driver  ## Expected behavior I see the Edge legacy browser in grid console after launching grid But I am trying to add Edge chromium browser ![image](https://user-images.githubusercontent.com/57172607/92129936-c2ef1000-ee21-11ea-9c62-ba808b56b486.png)   ## Environment  OS: Windows 10 Browser: Microsoft Edge Browser version: latest (85.0.564.44) Browser Driver version: 85 Language Bindings version: Java 1.8 Selenium version (if applicable): 3.141.59","closed","C-grid,","VijayVarmaKethe","2020-09-03T14:40:06Z","2021-09-05T08:34:40Z"
"","8321","WebDrive can't render https://login.proficio.com","## üêõ Bug Report  Tried following code to navigate to https://login.proficio.com but the page isn't rendered properly. Same for ChromeDirver and Firefox Driver too.  ## To Reproduce Use following code.  package webtest;  import org.openqa.selenium.By; import org.openqa.selenium.JavascriptExecutor; import org.openqa.selenium.WebDriver; import org.openqa.selenium.chrome.ChromeDriver; import org.openqa.selenium.safari.SafariDriver;  class WebTest {  public static void main(String[] args) { //WebDriver driver = new ChromeDriver(); WebDriver driver = new SafariDriver();  // Launch Website   driver.navigate().to(""https://login.proficio.com"");    //Maximize the browser driver.manage().window().maximize(); } }  ## Expected behavior  It should render the site properly.  ## Test script or set of commands reproducing this issue  See reproduce section  ## Environment  OS: Windows and macOS Browser: Chrome, Safari and Firefox Browser version: Chrome 81.0.4044.138 and Safari 13.0.5 Browser Driver version: Same as browser version Language Bindings version: Java Selenium Grid version (if applicable):","closed","R-awaiting answer,","marcozj","2020-05-19T09:47:05Z","2021-09-05T10:02:46Z"
"","8207","Timeout error in chrome browser while launching any URL through webdriver","## üêõ Bug Report  Throwing Timeout error when trying to open any url in chrome browser through selenium webdriver as ""[1587062820.974][SEVERE]: Timed out receiving message from renderer: 0.100""    ## To Reproduce  when i try launch google url in chrome browser get page title through webdriver, session is created successfully, chrome launched and Google page also opened. but web driver is throwing timeout error as ""[1587063271.018][SEVERE]: Timed out receiving message from renderer: 0.100"". Even the browser getting closed successfully.    ## Expected behavior Google page should be opened and page title should be retrieved and displayed in console.  ## Actual behavior Google page is opened successfully but page title is not getting retrieved and displayed in console. its throwing timeout error as below  [1587063271.018][SEVERE]: Timed out receiving message from renderer: 0.100  ## Test script or set of commands reproducing this issue public class Chromelaunch {  	public static void main(String[] args) throws InterruptedException {  		System.setProperty(""webdriver.chrome.driver"", ""C:\\Selenium - Drivers\\chromedriver.exe""); 		WebDriver driver = new ChromeDriver(); 		 		//dynamic wait 		driver.manage().timeouts().pageLoadTimeout(60, TimeUnit.SECONDS); 		driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS); 		 		driver.get(""https://www.google.com""); 		//Thread.sleep(20000); 		driver.getTitle(); 		driver.quit(); 	}    ## Environment  OS: Windows 7 Browser: Chrome Browser version: 81.0.4044.113 (Official Build) (32-bit) Browser Driver version: 81.0.4044.69 Language Bindings version: Java 8 update 241 Selenium Grid version (if applicable):  3.141.59","closed","needs-triaging,","balametly","2020-04-16T19:23:48Z","2020-05-20T19:07:48Z"
"","8377","Javadoc pointed to should be for the same major version of Selenium as the primary code examples in documentation","## üêõ Bug Report  This should be consistent.  ## To Reproduce  E.g.: Javadoc is for Selenium v3: https://seleniumhq.github.io/selenium/docs/api/java/index.html Starter code example is for Selenium v4 (& doesn't compile with v3): https://github.com/SeleniumHQ/seleniumhq.github.io/issues/448  ## Expected behavior  Either both should be for v3 or both for v4.  ## Environment  OS: Any Browser: Any Browser version: Any Browser Driver version: Any Language Bindings version: Java any  Selenium Grid version (if applicable): Any","closed","C-docs,","haqer1","2020-06-01T08:22:52Z","2021-09-05T08:30:19Z"
"","8762","Selenium 3 is incompatible with Python 3.9","## üêõ Bug Report  There may be more issues than just this one, but in running tests on Python 3.9 I've encountered this error:  ``` Traceback (most recent call last):   File ""/builds/cemetech/7/archives/tests/test_create_file.py"", line 293, in testAutofillsFilename     file_input.send_keys(tempfile1.name)   File ""/builds/cemetech/7/.venv/lib/python3.9/site-packages/selenium/webdriver/remote/webelement.py"", line 475, in send_keys     value = self._upload(local_file)   File ""/builds/cemetech/7/.venv/lib/python3.9/site-packages/selenium/webdriver/remote/webelement.py"", line 695, in _upload     content = base64.encodestring(fp.getvalue()) AttributeError: module 'base64' has no attribute 'encodestring' ```  This appears to have been fixed in #7446, but is not present in any stable releases on pypi.  Either the 3.x series on PyPi should be marked as incompatible with Python 3.9, or #7446 should be backported and a new Python release cut.  ## Environment  OS: Linux Browser: Firefox Language Bindings version: Python 3.141.0","closed","needs-triaging,","tari","2020-10-07T01:00:30Z","2021-09-05T08:08:31Z"
"","8315","[rb] Deprecation warnings for Ruby 2.7.1 (webdriver chrome)","## üêõ Bug Report  There are deprecation warnings left for Selenium in Ruby 2.7.1 on OSX Mac OS. They're all from [this change](https://www.ruby-lang.org/en/news/2019/12/12/separation-of-positional-and-keyword-arguments-in-ruby-3-0/) to position arguments/kwargs. Some has been fixed in the past in the following issue : [Ruby 2.7 deprecations #7870 ](https://github.com/SeleniumHQ/selenium/issues/7870)  ``` /lib/selenium/webdriver/chrome/options.rb:77:     warning:        Using the last argument as keyword parameters is deprecated;       maybe ** should be added to the call /lib/selenium/webdriver/common/options.rb:25:    warning:       The called method `initialize' is defined here ```  ## Expected behavior  I had expect no deprecation warnings.  ## Test script or set of commands reproducing this issue  Detailed steps to reproduce the behavior:  ``` require 'bundler/inline' gemfile(true) do   source 'https://rubygems.org'   ruby '2.7.1'   gem 'selenium-webdriver', '4.0.0.alpha5' # Warnings present   #gem 'selenium-webdriver', '3.142.7' # Warning free end Selenium::WebDriver::Chrome::Options.new ```","closed","C-rb,","navidemad","2020-05-16T21:52:11Z","2021-09-05T09:36:50Z"
"","7870","Ruby 2.7 deprecations","## üêõ Bug Report  There are deprecation warnings for Selenium in Ruby 2.7, which comes out next week. They're all from [this change](https://www.ruby-lang.org/en/news/2019/12/12/separation-of-positional-and-keyword-arguments-in-ruby-3-0/) to position arguments/kwargs.  The deprecation warning includes the callsite and the method being called:  ``` /Users/connorshea/.rbenv/versions/2.7.0-preview3/lib/ruby/gems/2.7.0/gems/selenium-webdriver-3.142.6/lib/selenium/webdriver/chrome/driver.rb:43: warning: The last argument is used as the keyword parameter /Users/connorshea/.rbenv/versions/2.7.0-preview3/lib/ruby/gems/2.7.0/gems/selenium-webdriver-3.142.6/lib/selenium/webdriver/remote/bridge.rb:44: warning: for `handshake' defined here  /Users/connorshea/.rbenv/versions/2.7.0-preview3/lib/ruby/gems/2.7.0/gems/selenium-webdriver-3.142.6/lib/selenium/webdriver/remote/bridge.rb:62: warning: The last argument is used as the keyword parameter /Users/connorshea/.rbenv/versions/2.7.0-preview3/lib/ruby/gems/2.7.0/gems/selenium-webdriver-3.142.6/lib/selenium/webdriver/remote/w3c/bridge.rb:35: warning: for `initialize' defined here ```  These are the only two I'm seeing in my test suite, but there are probably others.  ## To Reproduce  Detailed steps to reproduce the behavior:  It should be possible to reproduce this by just running the selenium-rb test suite on Ruby 2.7. I'm not sure exactly how to trigger these, short of running my app's test suite, unfortunately.  ## Expected behavior  I'd expect no deprecation warnings.  ## Environment  OS: macOS 10.14.6 Mojave Browser: Chrome Browser version: Chrome 79 Browser Driver version: ChromeDriver 79 Language Bindings version: Ruby 3.142.6","closed","C-rb,","connorshea","2019-12-18T02:48:13Z","2020-01-26T16:47:14Z"
"","8622","Static scope of variables are lost inside the Function interface in Selenium Alpha6","## üêõ Bug Report  The static variables are not accessible inside the Function interface in Selenium alpha6.  ## To Reproduce  I've created a sample project(https://github.com/saritapol13/staticScopeIssueInSelenium) to demonstrate the issue.  Detailed steps to reproduce the behavior:  In build.gradle file comment the line for 'selenium-java', version: '3.141.59' and use the one for 'selenium-java', version: '4.0.0-alpha-6'. Just run the test ""**about_tab_is_on_home_page**"" from the RemoteBrowserTests class. This will fail as below: `org.opentest4j.AssertionFailedError: The test failed due to: Expected condition failed: waiting for website.HomePage$1@7293e463 (tried for 30 second(s) with 500 milliseconds interval) Build info: version: '4.0.0-alpha-6', revision: '5f43a29cfc' os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11' Driver info: driver.version: unknown 	at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:39) 	at org.junit.jupiter.api.Assertions.fail(Assertions.java:109) 	at product1.RemoteBrowserTests.about_tab_is_on_home_page(RemoteBrowserTests.java:27) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.base/java.lang.reflect.Method.invoke(Method.java:566) 	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:675) 	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:117) 	at `  If you now run the same test using selenium 3.141.59 (uncommenting the line in build.gradle and vice-versa) it works fine  ## Expected behavior  Scope of the static variables should be retained in the Function interface.  ## Test script or set of commands reproducing this issue  I've given the steps above. The scope of Multibrowser.getActiveBrowser() which returns the active browser is lost and it returns null. The issue is not related to any browser version like Chrome, Edge and so on but selenium version.  The other way to run test is from the main project(cloned from the github) **gradlew clean test**  ## Environment  OS: Windows 10 Browser:  Chrome Browser version: 84.0.4147.105 Browser Driver version: ChromeDriver 84.0.4147.30 Language Bindings version: Java Selenium: 4.0.0-alpha-6 Selenium Grid version (if applicable):  e.g.:","closed","R-awaiting answer,","saritapol13","2020-08-10T14:21:44Z","2021-09-05T08:36:03Z"
"","7907","The SendKeys not working on gecko driver and chrome driver.","## üêõ Bug Report  The SendKeys not working.  ## To Reproduce ``` using OpenQA.Selenium; using OpenQA.Selenium.Firefox;  FirefoxDriver driver = new FirefoxDriver(); driver.Navigate().GoToUrl(""https://www.google.com"");  // None of the options below work:  driver.FindElement(By.CssSelector(""body"")).SendKeys(OpenQA.Selenium.Keys.F12);  //Actions action = new Actions(driver); action.SendKeys(OpenQA.Selenium.Keys.F12); action.Perform();  //Actions action = new Actions(driver); action.KeyDown(OpenQA.Selenium.Keys.Control).SendKeys(OpenQA.Selenium.Keys.F12).KeyUp(OpenQA.Selenium.Keys.Control).Perform();  ```  Detailed steps to reproduce the behavior:  ## Expected behavior  Open the developer panel.  What I did is just a test to make sure it was working or not. What I need to do is press shift, alt + 1 on the page. To enable an extension I need in the browser.  In the end I need the page source but not the rendered one, where javascript ran, and modified something. I need him gross. Don't have any way to retrieve the direct response instead of calling .PageSource? That would solve my problem.  ## Environment  OS: Windows 10 Browser: Firefox Browser version: 71.0 (64-bits) Browser Driver version: GeckoDriver 0.26.0 Language Bindings version: C#","closed","needs-triaging,","dan-developer","2020-01-02T00:17:02Z","2020-04-15T08:48:20Z"
"","8712","selenuim server 3.141.59 node failed to create a new service for Microsoft Edge (Chromium)","## üêõ Bug Report  The selenuim server 3.141.59 node failed to create a new service for Microsoft Edge (Chromium)   ## To Reproduce  **_Prerequisite:_** - Download 'java -jar selenium-server-standalone-3.141.59.jar' file - Download Microsoft Edge Driver version: 85.0.564.51 - Install Edge browser version: 85.0.564.51  **_Steps to reproduce the behavior:_** 1. Start a hub -> java -jar selenium-server-standalone-3.141.59.jar -role hub 2. Start a node -> java -jar selenium-server-standalone-3.141.59.jar -role node -nodeConfig nodeConfig.json  'nodeConfig.json' file: ``` {   ""capabilities"":   [     {       ""browserName"": ""MicrosoftEdge"",       ""maxInstances"": 5,       ""seleniumProtocol"": ""WebDriver"",       ""webdriver.edge.driver"": ""msedgedriver""     }   ],   ""proxy"": ""org.openqa.grid.selenium.proxy.DefaultRemoteProxy"",   ""maxSession"": 20,   ""port"": -1,   ""register"": true,   ""registerCycle"": 5000,   ""hub"": ""http://localhost:4444"",   ""nodeStatusCheckTimeout"": 5000,   ""nodePolling"": 5000,   ""role"": ""node"",   ""unregisterIfStillDownAfter"": 60000,   ""downPollingLimit"": 5,   ""debug"": false,   ""servlets"" : [],   ""withoutServlets"": [],   ""custom"": {} } ```  3. Run a simple test ``` @Test     public void edgeTest() throws InterruptedException, MalformedURLException {         EdgeOptions options = new EdgeOptions();         WebDriver driver = new RemoteWebDriver(new URL(""http://localhost:4444/wd/hub""), options);         driver.get(""https://www.selenium.dev/"");     } ``` ## Actual behavior The test fails with the below error  ``` **org.openqa.selenium.SessionNotCreatedException: Unable to create new service: EdgeDriverService** Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53' System info: host: '3638-Panduka-Punchihewa.local', ip: '127.0.0.1', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.6', java.version: '11.0.2' Driver info: driver.version: unknown Command duration or timeout: 237 milliseconds  	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490) 	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214) 	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166) 	at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$errorHandler$0(JsonWireProtocolResponse.java:54) 	at org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30) 	at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126) 	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) 	at java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958) 	at java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127) 	at java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502) 	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488) 	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) 	at java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150) 	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) 	at java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:131) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:144) 	at org.example.WebTest.edgeTest(WebTest.java:48) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.base/java.lang.reflect.Method.invoke(Method.java:566) 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86) 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643) 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820) 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128) 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129) 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112) 	at org.testng.TestRunner.privateRun(TestRunner.java:782) 	at org.testng.TestRunner.run(TestRunner.java:632) 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366) 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361) 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319) 	at org.testng.SuiteRunner.run(SuiteRunner.java:268) 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86) 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244) 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169) 	at org.testng.TestNG.run(TestNG.java:1064) 	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66) 	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109) Caused by: org.openqa.selenium.SessionNotCreatedException: Unable to create new service: EdgeDriverService Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53' System info: host: '3638-Panduka-Punchihewa.local', ip: '127.0.0.1', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.6', java.version: '11.0.2' Driver info: driver.version: unknown Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03' System info: host: '3638-Panduka-Punchihewa.local', ip: '127.0.0.1', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.6', java.version: '11.0.2' Driver info: driver.version: unknown 	at org.openqa.selenium.grid.session.remote.ServicedSession$Factory.lambda$get$0(ServicedSession.java:135) 	at org.openqa.selenium.grid.session.remote.ServicedSession$Factory.apply(ServicedSession.java:152) 	at org.openqa.selenium.remote.server.ActiveSessionFactory.lambda$apply$12(ActiveSessionFactory.java:180) 	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) 	at java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:442) 	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) 	at java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958) 	at java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127) 	at java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502) 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488) 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) 	at java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150) 	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) 	at java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543) 	at org.openqa.selenium.remote.server.ActiveSessionFactory.apply(ActiveSessionFactory.java:183) 	at org.openqa.selenium.remote.server.NewSessionPipeline.lambda$null$2(NewSessionPipeline.java:66) 	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) 	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) 	at java.util.Collections$2.tryAdvance(Collections.java:4745) 	at java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127) 	at java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502) 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488) 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) 	at java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150) 	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) 	at java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543) 	at org.openqa.selenium.remote.server.NewSessionPipeline.lambda$createNewSession$3(NewSessionPipeline.java:69) 	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) 	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) 	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) 	at java.util.stream.DistinctOps$1$2.accept(DistinctOps.java:175) 	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) 	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) 	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) 	at java.util.stream.Streams$StreamBuilderImpl.tryAdvance(Streams.java:397) 	at java.util.stream.Streams$ConcatSpliterator.tryAdvance(Streams.java:720) 	at java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127) 	at java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502) 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488) 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) 	at java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150) 	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) 	at java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543) 	at org.openqa.selenium.remote.server.NewSessionPipeline.createNewSession(NewSessionPipeline.java:72) 	at org.openqa.selenium.remote.server.commandhandler.BeginSession.execute(BeginSession.java:65) 	at org.openqa.selenium.remote.server.WebDriverServlet.lambda$handle$0(WebDriverServlet.java:235) 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515) 	at java.util.concurrent.FutureTask.run(FutureTask.java:264) 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) 	at java.lang.Thread.run(Thread.java:834) ```  ## Expected behavior The test should open up in the Edge browser navigating to the expected url   ## Environment  OS: macOS Catalina Browser: Microsoft Edge (Chromium) Browser version: 85.0.564.51 Browser Driver version: Microsoft Edge Driver 85.0.564.51 Selenium Grid version: 3.141.59","closed","","panduka777","2020-09-17T21:47:38Z","2021-10-01T00:07:25Z"
"","8483","(Multiple) webElement.sendKeys(Keys.LEFT) do(es)n't work on a Quill(JS.com) editor","## üêõ Bug Report  The selection (position) doesn't change.   ## To Reproduce  Detailed steps to reproduce the behavior:  ``` editor.sendKeys(""bfmtv.frest""); for (byte j = 0; j < 3; j++)  	editor.sendKeys(Keys.LEFT); editor.sendKeys("" ""); ```   ## Expected behavior  The cursor should move left by 2, but doesn't. The next character typed is positioned as if these left keys hadn't been pressed at all. Result:  ""bfmtv.frest "" instead of  ""bfmtv.fr est""  ## Environment  OS: Linux Browser: Chrome Browser version: 83 Browser Driver version: 83.0.4103.39 (ccbf011cb2d2b19b506d844400483861342c20cd-refs/branch-heads/4103)   Language Bindings version: Java 3.13.0   ## Work-around I used Quill's .updateContents(...) instead to send an event simulating what's happening in real user session.","closed","R-awaiting answer,","haqer1","2020-07-06T10:16:27Z","2021-09-05T09:12:30Z"
"","8760","Screenshot.SaveAsFile exception when not PNG in .NET Standard / Core","## üêõ Bug Report  The screenshot [SaveAsFile](https://github.com/SeleniumHQ/selenium/blob/54831d3945f9b05601ff90055e1b9332a5f57ff5/dotnet/src/webdriver/Screenshot.cs#L111) method takes in a ScreenshotImageFormat which in .NET Framework is used to determine what to save the image as (png, bmp, jpg, etc). In .NET Standard and Core, this parameter is only used to determine if an exception is thrown as the screenshot is _always_ saved as a png. If this is the route desired, this overload should be marked obsolete and point to the SaveAsFile(string) method.  The exception thrown also no longer seems accurate for .NET Core 3.1, as we can copy the internals of the method and save as a bmp using the nuget package System.Drawing.Common from Microsoft. I have not tested other versions of core or standard.  ## To Reproduce  The exception thrown is pretty obvious from the code linked above. An example of this working in .NET Core 3.1 can be seen via:  ```csharp var driver = new ChromeDriver(new ChromeOptions()); driver.Navigate().GoToUrl(new Uri(""https://www.google.com"")); var path = Path.Combine(Directory.GetCurrentDirectory(), ""screenshot.bmp""); var screenshot = driver.TakeScreenshot();  //.net framework's definition of SaveAsFile, with minor changes to run as is using (var memoryStream = new MemoryStream(screenshot.AsByteArray)) {     using var fileStream = new FileStream(path, FileMode.Create);     using var image = Image.FromStream(memoryStream);     image.Save(fileStream, ImageFormat.Bmp); }  driver.Quit(); ```  Using the following nuget packages: * Selenium.Support 3.141.0 * Selenium.WebDriver 3.141.0 * Selenium.WebDriver.ChromeDriver 85.0.4183.8700 * System.Drawing.Common 4.7.0  ## Expected behavior  ScreenshotImageFormat should be used and respected in .NET Core / Standard and should support more than just png.  ## Test script or set of commands reproducing this issue  See code in To Reproduce.  ## Environment  OS: Windows 10 Browser: Chrome Browser version: 85.0.4183.121 Browser Driver version: 85.0.4183.87 Language Bindings version: C# 8 Selenium Grid version (if applicable): N/A","closed","C-dotnet,","headlessgargoyle","2020-10-02T23:46:37Z","2021-09-05T07:59:01Z"
"","8394","Selenium not setting HTTPS proxy","## üêõ Bug Report  The proxy running on localhost:8080 cannot intercept the traffic generated by Selenium. Instead, if I browse manually, the proxy is able to intercept the traffic with no issuse.  -->  ## To Reproduce  I tried setting the proxy both with the org.openqa.selenium.Proxy object, setting Proxy.setHttpProxy() and Proxy.setSslProxy()  `WebDriver driver;          Proxy proxy = new Proxy(); proxy.setHttpProxy(PROXY_SOCKET); // 127.0.0.1:8080 proxy.setSslProxy(PROXY_SOCKET); // 127.0.0.1:8080  System.setProperty(""webdriver.chrome.driver"", filePath); ChromeOptions opt = new ChromeOptions(); opt.setCapability(""proxy"", proxy); opt.setHeadless(false);  driver = new ChromeDriver(opt); `  but also with the command line argument  `WebDriver driver;  System.setProperty(""webdriver.chrome.driver"", filePath);  ChromeOptions opt = new ChromeOptions(); opt.addArguments(""--proxy-server=\""http="" + PROXY_SOCKET + "";https="" + PROXY_SOCKET + ""\""""); opt.setHeadless(false); driver = new ChromeDriver(opt); `  Detailed steps to reproduce the behavior:  My code is part of a Burp plugin, and Burp itself is the proxy I am using and listening on localhost:8080.  The code is this one https://pastebin.com/GEjfT24D and it is triggered by a clicked button. Note that when I remove the HTTPS-related settings, pages are loaded but obviously not intercepted by Burp.  ## Expected behavior  The proxy should be able to intercept the network traffic, as it does when I am manually surfing Internet.  ## Test script or set of commands reproducing this issue  There is no script related to this issue, since it times out even loading a simple page.  ## Environment  OS: Windows 10 Browser: Chrome and Firefox Browser version: Chrome 83.0.4103.97, Firefox 76.0.1 Browser Driver version: ChromeDriver 83.0.4103.39, GeckoDriver 0.26 Language Bindings version: Java 8 and 11 Selenium version: 3.141.59","closed","R-awaiting answer,","stefano-facchini","2020-06-06T18:10:50Z","2021-09-05T08:21:41Z"
"","8407","Firefox WebDriver start is very slow","## üêõ Bug Report  The part of ""webdriver.Firefox"" command takes very long time to start (1 whole minute or so) whereas Chrome starts pretty much instantly.  ## To Reproduce  I provided a minimalistic Python code, which alone is enough to reproduce the problem (scroll down to the ""Test script"" section for reference). This problem was encountered on 2 separate machines (each being a different user).  Detailed steps to reproduce the behavior: 0. Meet all preconditions (Have python 3 installed, have python pip installed, install with python pip the ""selenium"" package) 1. Paste the provided Python code in a new python script file 2. Execute this python script file  ## Expected behavior  The Firefox web browser (computer controlled) opens pretty much instantly after executing the python script.  ## Test script or set of commands reproducing this issue  ``` from selenium import webdriver import time  # The argument ""C:\\Program Files\\Python37"" assumes, that this is the location of the 'geckodriver.exe' webdriver_instance_1 = webdriver.Firefox(""C:\\Program Files\\Python37"") webdriver_instance_1.maximize_window() webdriver_instance_1.implicitly_wait(10) webdriver_instance_1.get('https://github.com/seleniumhq')  time.sleep(3) sign_in = webdriver_instance_1.find_element_by_xpath('/html/body/div[1]/header/div/div[2]/div[2]/a[1]') sign_in.click() time.sleep(3) webdriver_instance_1.quit()  print('Done!') ```  ## Environment  OS: Windows 10 Browser: Mozilla Firefox Browser version: 77.0.1 (64-bit) Browser Driver version: geckodriver 0.26.0 (e9783a644016 2019-10-10 13:38 +0000) Language Bindings version: Python 3.7  This bug was reported here before - https://github.com/seleniumhq/selenium/issues/2441#issue-164619948  That's pretty much it. Is any more information required?","closed","needs-triaging,","CRYPTO-7CA","2020-06-09T15:18:23Z","2021-09-05T09:36:48Z"
"","8682","Standalone Server jQuery is 3.1.1 outdated","## üêõ Bug Report  The latest stable version 3.141.59 comes with jQuery 3.1.1 built-in (`http://localhost:4444/assets/jquery-3.1.1.min.js`) , which has some XSS vulnerabilities that were fixed in [3.5.0](https://www.infoq.com/news/2020/04/jquery-35-xss-vulnerability-fix/). I'm not sure if Selenium is impacted at all by this vulnerability, but some of our customers have expressed concerns about the outdated jQuery, which is why I have filed this issue.  Would it be possible to have a minor release that has the latest jQuery version builtin (3.5.1), or maybe a patch? Thank you.  ## To Reproduce  Detailed steps to reproduce the behavior:  Check `http://localhost:4444/assets/jquery-3.1.1.min.js` while server is running.  ## Expected behavior  Have latest version of jQuery.  ## Test script or set of commands reproducing this issue  N/A  ## Environment  OS: All Browser: All Browser version: All Browser Driver version: All Language Bindings version: 3.141.59 (?) Selenium Grid version (if applicable): N/A","closed","needs-triaging,","chibicitiberiu","2020-09-08T09:31:34Z","2021-09-05T08:36:02Z"
"","7910","Java client is missing minimize function","## üêõ Bug Report  The latest release version (3.141.59) of the selenium Java client is missing the minimize command.    ## To Reproduce  Detailed steps to reproduce the behavior:  1. Try to use  driver.manage().window().minimize() 2. Find that the minimize() function is not defined  ## Expected behavior  I would expect that the Java client has a minimize() function defined clients for other languanges would have (for example: https://selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/lib/webdriver_exports_Window.html#minimize ).    ## Test script or set of commands reproducing this issue  1. Try to use  driver.manage().window().minimize() 2. Find that the minimize() function is not defined  ## Environment  OS: Mac OS Browser: All Browser version: All Browser Driver version: All Language Bindings version: Java 3.141.59 Selenium Grid version (if applicable): 3.141.59","closed","C-java,","mhufford","2020-01-03T19:27:11Z","2020-05-20T23:22:55Z"
"","8258","ChromeDriver leaves alive threads that prevent normal termination of Java applications","## üêõ Bug Report  The Java method ChromeDriver.quit() leaves alive non-daemon threads. This keeps the JVM running. Every Java application that makes use of ChromeDriver is forced to explicitely quit the JVM. JUnit tests only terminate because of JUnit's explicit use of  System.exit.  ## To Reproduce  Execute the following Java program. It will not stop, because multiple non-daemon threads are still alive:  ``` import org.openqa.selenium.chrome.ChromeDriver;  public class Application {    public static void main(String[] args) {     ChromeDriver driver = new ChromeDriver();     driver.quit();   }  } ```  ## Expected behavior  After calling org.openqa.selenium.chromium.ChromiumDriver.quit() all non-daemon threads that were started by ChromiumDriver are stopped.  ## Test script or set of commands reproducing this issue  ``` import static org.assertj.core.api.Assertions.assertThat;  import java.io.IOException; import java.util.Set; import java.util.stream.Collectors; import org.junit.jupiter.api.Test; import org.openqa.selenium.chrome.ChromeDriver;  public class ChromeDriverTest {    @Test   public void noNonDeamonThreadsAliveAfterQuit() throws IOException {      Set threadsBefore = getRunningNonDaemonThreads();      ChromeDriver driver = new ChromeDriver();     driver.quit();      Set threadsAfter = getRunningNonDaemonThreads();      assertThat(threadsAfter).containsOnlyElementsOf(threadsBefore);   }    private Set getRunningNonDaemonThreads() {     return Thread.getAllStackTraces().keySet().stream()         .filter((thread) -> thread.isAlive() && !thread.isDaemon()).collect(Collectors.toSet());   }  } ``` The following threads are still alive:     Thread[AsyncHttpClient-3-1,5,main],     Thread[AsyncHttpClient-3-3,5,main],     Thread[AsyncHttpClient-3-2,5,main],     Thread[AsyncHttpClient-timer-1-1,5,main  **Potential root cause:** Class org.openqa.selenium.remote.http.netty.NettyClient creates an instance of AsyncHttpClient that is never closed. AsyncHttpClient implements java.io.Closable. Depending on the actual implementation, this may also lead to other kinds of resource leaks.  ## Environment  OS: Windows 10 Browser: Chrome Browser Driver version: ChromeDriver 81.0.4044.69 Language Bindings version: 4.0.0-alpha-5.jar","closed","C-java,","rmunge","2020-04-28T15:10:22Z","2020-06-24T18:56:49Z"
"","8116","getTitle() method does not support UTF8 character set","## üêõ Bug Report  The getTitle() method does not seem to support UTF8 characters. The example below is based on the Russian character set.  ## To Reproduce Navigate to Russian page: https://2020census.gov/ru Make a call to getTitle() and you get Russian Link:  [03/17/2020 12:37:32 PM]: 	Russian Title: ???????? ????????? 2020 ???? | ???? ???????? ????????? ???  Detailed steps to reproduce the behavior:  ## Expected behavior I expect the  string to be returned correctly as:  –ü–µ—Ä–µ–ø–∏—Å—å –Ω–∞—Å–µ–ª–µ–Ω–∏—è 2020 –≥–æ–¥–∞ | –ë—é—Ä–æ –ø–µ—Ä–µ–ø–∏—Å–∏ –Ω–∞—Å–µ–ª–µ–Ω–∏—è –°–®–ê not ???????? ????????? 2020 ???? | ???? ???????? ????????? ???      ## Test script or set of commands reproducing this issue Fairly simple code: driver.get(""https://2020census.gov/ru"");  System.out.println(""Russian Title: "" + driver.getTitle() );   ## Environment OS: Windows 10 Browser: Firefox Browser version: 68.4.1 Browser Driver version: GeckoDriver 0.23 Language Bindings version: Java 1.8.0.241 Selenium Grid version (if applicable): N/A </td>               <td>closed</td><td>C-java,  </td>               <td>coneal20 </td>               <td>2020-03-17T18:00:38Z</td>               <td>2020-04-17T12:15:43Z</td>               </tr><tr>               <td></td>               <td>8115</td>               <td>Grid code setup on windows</td>               <td>## üí¨ Questions and Help Trying to setup the selenium code on my eclipse I think I am missing some documentation. Can anyone point me to the documentation for the same ? The current steps which I found i.e. run ""bazel build grid"" and it is searching for Visual Studio C++. I think when I am using Java based build and building grid jar it should not be searching for VSC++  Also tried slack but did not find any response. Please let me know if there is a specific channel for developers. I think the selenium channel is for selenium users. ### Please note that this issue tracker is not a help form and this issue will be closed.  </td>               <td>closed</td><td> </td>               <td>aamol </td>               <td>2020-03-17T03:29:29Z</td>               <td>2021-09-05T10:20:36Z</td>               </tr><tr>               <td></td>               <td>8114</td>               <td>Add: Same site cookie feature in python bindings</td>               <td> ### Description Adding sameSite Cookie feature to python bindings  ### Types of changes <!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: --> - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist <!--- Go over all the following points, and put an `x` in all the boxes that apply. --> <!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! --> - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed. <!--- Provide a general summary of your changes in the Title above --> </td>               <td>closed</td><td> </td>               <td>harsha509 </td>               <td>2020-03-16T14:32:17Z</td>               <td>2020-03-17T15:17:08Z</td>               </tr><tr>               <td></td>               <td>8113</td>               <td>loggingPrefs</td>               <td>## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group </td>               <td>closed</td><td> </td>               <td>tinybright </td>               <td>2020-03-16T07:37:46Z</td>               <td>2020-04-15T08:41:44Z</td>               </tr><tr>               <td></td>               <td>8112</td>               <td>""Chromedriver.exe has stopped working"" message needs to be more communicative</td>               <td>Some days, my selenium tests makes a popup come up saying that chromedriver.exe has stopped working.  Is it possible to get a more descriptive error message? Developers are used to better error messages than this.</td>               <td>closed</td><td> </td>               <td>AndersBillLinden </td>               <td>2020-03-16T07:37:41Z</td>               <td>2020-04-15T08:40:54Z</td>               </tr><tr>               <td></td>               <td>8111</td>               <td>TestCase to reproduce NPE when remote driver no-arg constucor used</td>               <td>** DO NOT Merge**  This is just to reproduce issue and added in to other pull request https://github.com/SeleniumHQ/selenium/pull/8110 that fixes this issue.  Test case to ensure capabilities initialize to empty when no arg constructor called. If not initialized then it will throw null pointer exception when executeScript() or isJavascriptEnabled() method called  <!-- NOTE Please be aware that the Selenium Grid 3.x is being deprecated in favour of the upcoming version 4.x. We won't be receiving any PRs related to the Grid 3.x code. Thanks! -->  **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.   <!--- Provide a general summary of your changes in the Title above -->  ### Description <!--- Describe your changes in detail -->  ### Motivation and Context <!--- Why is this change required? What problem does it solve? -->  ### Types of changes <!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: --> - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist <!--- Go over all the following points, and put an `x` in all the boxes that apply. --> <!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! --> - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed. <!--- Provide a general summary of your changes in the Title above --> </td>               <td>closed</td><td>C-java,  </td>               <td>cjayswal </td>               <td>2020-03-14T18:13:22Z</td>               <td>2020-04-09T11:44:59Z</td>               </tr><tr>               <td></td>               <td>8110</td>               <td>Fixed null pointer exception</td>               <td>When remote Webdriver initialized using no-arg constructor from sub class, capabilities is null, results in null pointer exception in executeScript().  <!-- NOTE Please be aware that the Selenium Grid 3.x is being deprecated in favour of the upcoming version 4.x. We won't be receiving any PRs related to the Grid 3.x code. Thanks! -->  **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.   <!--- Provide a general summary of your changes in the Title above -->  ### Description <!--- Describe your changes in detail -->  ### Motivation and Context <!--- Why is this change required? What problem does it solve? -->  ### Types of changes <!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: --> - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist <!--- Go over all the following points, and put an `x` in all the boxes that apply. --> <!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! --> - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed. <!--- Provide a general summary of your changes in the Title above --> </td>               <td>closed</td><td>C-java,  </td>               <td>cjayswal </td>               <td>2020-03-14T00:22:41Z</td>               <td>2021-01-24T16:24:00Z</td>               </tr><tr>               <td></td>               <td>8109</td>               <td>[JAVA] {WebElement}.getAttribute(""value"") returns 0</td>               <td>## üí¨ Questions and Help  I am interacting with an element within a webpage:  `<li class=""MuiButtonBase-root MuiListItem-root MuiMenuItem-root jss524 MuiMenuItem-gutters jss525 MuiListItem-gutters MuiListItem-divider MuiListItem-button"" tabindex=""-1"" role=""menuitem"" aria-disabled=""false"" data-quid=""SelectListItem-2"" value=‚Äú{URL}‚Äù><div class=""jss519""><div class=""jss520""><div>{TEXT}</div></div><div class=""jss522""></div></div><span class=""MuiTouchRipple-root""></span></li>`  Within my code, I have this snippet: ```             System.out.println(x.getAttribute(""role""));             System.out.println(x.getAttribute(""aria-disabled""));             System.out.println(x.getAttribute(""data-quid""));             System.out.println(x.getAttribute(""class""));             System.out.println(x.getText());             System.out.println(x.getAttribute(""value"")); ```  However, the last line `System.out.println(x.getAttribute(""value""));` prints out 0 instead of the actual value.  I am using selenium 3.141.59  </td>               <td>closed</td><td> </td>               <td>aaa-jake </td>               <td>2020-03-13T17:43:45Z</td>               <td>2020-04-15T07:36:44Z</td>               </tr><tr>               <td></td>               <td>8108</td>               <td>[JAVA] {WebElement}.getAttribute(""value"") returns 0</td>               <td>I am interacting with an element within a webpage:  `<li class=""MuiButtonBase-root MuiListItem-root MuiMenuItem-root jss524 MuiMenuItem-gutters jss525 MuiListItem-gutters MuiListItem-divider MuiListItem-button"" tabindex=""-1"" role=""menuitem"" aria-disabled=""false"" data-quid=""SelectListItem-2"" value=‚Äú{URL}‚Äù><div class=""jss519""><div class=""jss520""><div>{TEXT}</div></div><div class=""jss522""></div></div><span class=""MuiTouchRipple-root""></span></li>`  Within my code, I have this snippet: ```             System.out.println(x.getAttribute(""role""));             System.out.println(x.getAttribute(""aria-disabled""));             System.out.println(x.getAttribute(""data-quid""));             System.out.println(x.getAttribute(""class""));             System.out.println(x.getText());             System.out.println(x.getAttribute(""value"")); ```  However, the last line `System.out.println(x.getAttribute(""value""));` prints out 0 instead of the actual value.  I am using selenium 3.141.59</td>               <td>closed</td><td> </td>               <td>aaa-jake </td>               <td>2020-03-13T17:40:33Z</td>               <td>2021-09-05T10:20:36Z</td>               </tr><tr>               <td></td>               <td>8107</td>               <td>open a normal window, then open a incognito window, then driver.quit()</td>               <td>## üöÄ Feature Proposal  A clear and concise description of what the feature is.  ## Motivation  Please outline the motivation for the proposal. 1. start chrome normal 2. open a incognito window, login user a, get cookie, close window 3. open a incognito window, login user b, get cookie, close window 4. driver quit 5. got 2 useable cookie with start chrome just one times  ## Example  Please provide an example for how this feature would be used. </td>               <td>closed</td><td>needs-triaging,  </td>               <td>gMan1990 </td>               <td>2020-03-13T12:46:07Z</td>               <td>2020-04-15T07:36:12Z</td>               </tr><tr>               <td></td>               <td>8106</td>               <td>cookie</td>               <td>## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group </td>               <td>closed</td><td> </td>               <td>thomasehayes </td>               <td>2020-03-12T20:58:04Z</td>               <td>2020-04-15T07:37:18Z</td>               </tr><tr>               <td></td>               <td>8105</td>               <td>[java] Use a capability to switch engines for Edge</td>               <td>### Description Based on the discussion in #7977 we've decided to use a new ""ms:edgeChromium"" boolean capability key for EdgeDriver which tells the driver service whether to launch Edge Legacy or Chromium. This change updates the EdgeOptions class to check this capability in addition to the webdriver.edge.edgehtml system property when deciding which service to launch. Calling code can override the system property using EdgeOptions.setChromium().  Also updated the DriverInfo for EdgeHTML and Chromium Edge to score based on this new capability.  ### Motivation and Context Using a capability key allows EdgeOptions to work with a RemoteWebDriver. A client can now configure the EdgeOptions for either Legacy or Chromium, and the remote Selenium server can make use of the capability to launch the correct Edge driver service.  ### Types of changes <!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: --> - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist <!--- Go over all the following points, and put an `x` in all the boxes that apply. --> <!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! --> - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed. <!--- Provide a general summary of your changes in the Title above --> </td>               <td>closed</td><td>C-java,  </td>               <td>bwalderman </td>               <td>2020-03-12T19:59:50Z</td>               <td>2020-03-20T11:41:14Z</td>               </tr><tr>               <td></td>               <td>8104</td>               <td>Add: Adding sameSite cookie feature to python bindings</td>               <td>  ### Description Adding sameSite Cookie feature to python bindings  ### Types of changes <!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: --> - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist <!--- Go over all the following points, and put an `x` in all the boxes that apply. --> <!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! --> - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [ ] All new and existing tests passed. <!--- Provide a general summary of your changes in the Title above --> </td>               <td>closed</td><td> </td>               <td>harsha509 </td>               <td>2020-03-12T17:23:00Z</td>               <td>2020-03-12T18:29:31Z</td>               </tr><tr>               <td></td>               <td>8103</td>               <td>Fix some variable declarations due to > es6</td>               <td>**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.   <!--- Provide a general summary of your changes in the Title above -->  ### Description i want to propose you change all variables declaration due to > es6, remove functions what are used only in test files (and tests too). I want to ask you about some code style (jslint, eslint etc).  ### Motivation and Context I checked selenium code, and see that in current version engine is ' ""node"": "">=  10.15.0""', from package.json. Many modules still using ""var"" declaration variables.  Some functions required in tests files only.  ### Types of changes <!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: --> - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist <!--- Go over all the following points, and put an `x` in all the boxes that apply. --> <!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! --> - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed. <!--- Provide a general summary of your changes in the Title above --> </td>               <td>closed</td><td>C-nodejs,  </td>               <td>potapovDim </td>               <td>2020-03-12T15:12:56Z</td>               <td>2020-11-30T20:42:42Z</td>               </tr><tr>               <td></td>               <td>8102</td>               <td>Add non-nullable modifier to return type of functions never returning null</td>               <td>- [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed. </td>               <td>closed</td><td>C-nodejs,  </td>               <td>vrana </td>               <td>2020-03-12T13:45:43Z</td>               <td>2020-03-25T16:06:20Z</td>               </tr><tr>               <td></td>               <td>8101</td>               <td>Add new invisibilityOf***Any***Elements ExpectedCondition</td>               <td>## üöÄ Feature Proposal  New action with slighty altered behaviour to the already existing 'invisibilityOfAllElements'. Use .anyMatch in place of .allMatch  `return elements.stream().allMatch(ExpectedConditions::isInvisible);`  `return elements.stream().anyMatch(ExpectedConditions::isInvisible);`  ## Motivation  Having a filter on a set of search results. This new check would allow the search step to know when the results have been filtered. Have tried ExpectedConditions.refreshed on the result container but it doesn't work for android.  Eg   Given a result list of 'One, Two, Three, Four, Five, Six' When a text containing filter of 'i' is applied Then the displayed results should be 'Five, Six'   ## Example  This would allow the filter step to know when the filter has been applied in an expected conditions.  `ExpectedConditions.or(         ExpectedConditions.invisibilityOfAnyElements(results),         ExpectedConditions.textToBePresentInElement(noResultsLabel, ""No matches"")   )` </td>               <td>closed</td><td>C-java,  </td>               <td>Auto81 </td>               <td>2020-03-12T13:02:33Z</td>               <td>2021-09-05T08:12:12Z</td>               </tr><tr>               <td></td>               <td>8100</td>               <td>disconnected: received Inspector.detached event</td>               <td>## üêõ Bug Report  Getting the error ,since i upgraded my PC to Windows [Version 10.0.18362.476]    ## To Reproduce Run in  OS---Windows NT 10.0.18362 x86_64 Chrome----80.0.3987.132 Chrome driver----80.0.3987.106 java.version: '11.0.5' selenium 3.141.59     Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  ``` O``` S that its executing on : windows 10 Browser that its executing on : chrome Starting ChromeDriver 80.0.3987.106** (f68069574609230cf9b635cd784cfb1bf81bb53a-refs/branch-heads/3987@{#882}) on port 37369 Only local connections are allowed. Please protect ports used by ChromeDriver and related test frameworks to prevent access by malicious code. [1583968399.984][WARNING]: Timed out connecting to Chrome, retrying... Mar. 12, 2020 10:13:22 AM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: OSS [1583968403.036][SEVERE]: Timed out receiving message from renderer: 0.100 [1583968403.137][SEVERE]: Timed out receiving message from renderer: 0.100 [1583968403.276][SEVERE]: Timed out receiving message from renderer: 0.100 [1583968403.544][SEVERE]: Timed out receiving message from renderer: 0.100  org.openqa.selenium.WebDriverException: disconnected: received Inspector.detached event   (Session info: chrome=80.0.3987.132)   (Driver info: chromedriver=80.0.3987.106(f68069574609230cf9b635cd784cfb1bf81bb53a-refs/branch-heads/3987@{#882}),platform=**Windows NT 10.0.18362 x86_64**) (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 0 milliseconds Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03' System info: host: 'HP5CD9322W8K', ip: '10.58.81.51', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.5' Driver info: org.openqa.selenium.chrome.ChromeDriver Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 80.0.3987.106 (f68069574609..., userDataDir: C:\Users\1077863\AppData\Lo...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:63139}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), rotatable: false, setWindowRect: true, strictFileInteractability: false, takesHeapSnapshot: true, takesScreenshot: true, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unexpectedAlertBehaviour: ignore, unhandledPromptBehavior: ignore, version: 80.0.3987.132, webStorageEnabled: true} Session ID: 0dd30b7e78f808ab1ae06f048678ee8b 	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490) 	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214) 	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166) 	at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40) 	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80) 	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552) 	at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:277) 	at pages.homePage.NavigateTo(homePage.java:108)` ```     The script ``` System.setProperty(""webdriver.chrome.driver"", System.getProperty(""user.dir"") + ""/drivers/chrome/chromedriver.exe"");                      ChromeOptions options = new ChromeOptions();                     //options.setBinary(System.getProperty(""user.dir"") + ""/drivers/chrome/chromedriver.exe"");                    options.addArguments(""--start-maximized"");                     addChromeGeoLocationPreferences(options);                                          if (configfile.readProperty(""docker"").toLowerCase().equals(""true"")) {                         driver = new RemoteWebDriver(new URL(""http://127.0.0.1:4444/wd/hub""), options);                         setRemoteChromeGeoLocation(driver);                     } else {                         driver = new ChromeDriver(options);                         setLocalChromeGeoLocation(driver);                     } ```  ## Environment OS---Windows NT 10.0.18362 x86_64 Chrome----80.0.3987.132 Chrome driver----80.0.3987.106 java.version: '11.0.5' selenium 3.141.59  </td>               <td>closed</td><td>needs-triaging,  </td>               <td>Andy2010a </td>               <td>2020-03-11T23:23:52Z</td>               <td>2020-04-15T07:44:24Z</td>               </tr><tr>               <td></td>               <td>8099</td>               <td>disconnected: received Inspector.detached event</td>               <td>Getting this since i upgraded my PC to Windows [Version 10.0.18362.476]    OS---Windows NT 10.0.18362 x86_64 Chrome----80.0.3987.132 Chrome driver----80.0.3987.106  java.version: '11.0.5'   ``` `OS that its executing on : windows 10 Browser that its executing on : chrome Starting ChromeDriver 80.0.3987.106** (f68069574609230cf9b635cd784cfb1bf81bb53a-refs/branch-heads/3987@{#882}) on port 37369 Only local connections are allowed. Please protect ports used by ChromeDriver and related test frameworks to prevent access by malicious code. [1583968399.984][WARNING]: Timed out connecting to Chrome, retrying... Mar. 12, 2020 10:13:22 AM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: OSS [1583968403.036][SEVERE]: Timed out receiving message from renderer: 0.100 [1583968403.137][SEVERE]: Timed out receiving message from renderer: 0.100 [1583968403.276][SEVERE]: Timed out receiving message from renderer: 0.100 [1583968403.544][SEVERE]: Timed out receiving message from renderer: 0.100  org.openqa.selenium.WebDriverException: disconnected: received Inspector.detached event   (Session info: chrome=80.0.3987.132)   (Driver info: chromedriver=80.0.3987.106(f68069574609230cf9b635cd784cfb1bf81bb53a-refs/branch-heads/3987@{#882}),platform=**Windows NT 10.0.18362 x86_64**) (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 0 milliseconds Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03' System info: host: 'HP5CD9322W8K', ip: '10.58.81.51', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.5' Driver info: org.openqa.selenium.chrome.ChromeDriver Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 80.0.3987.106 (f68069574609..., userDataDir: C:\Users\1077863\AppData\Lo...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:63139}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), rotatable: false, setWindowRect: true, strictFileInteractability: false, takesHeapSnapshot: true, takesScreenshot: true, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unexpectedAlertBehaviour: ignore, unhandledPromptBehavior: ignore, version: 80.0.3987.132, webStorageEnabled: true} Session ID: 0dd30b7e78f808ab1ae06f048678ee8b 	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490) 	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214) 	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166) 	at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40) 	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80) 	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552) 	at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:277) 	at pages.homePage.NavigateTo(homePage.java:108)` ```  I even downgraded chrome and chrome drivers for bunch of combinations , still getting the same error</td>               <td>closed</td><td> </td>               <td>Andy2010a </td>               <td>2020-03-11T23:15:26Z</td>               <td>2020-04-15T07:45:44Z</td>               </tr><tr>               <td></td>               <td>8098</td>               <td>Fixed typos in EdgeDriverService.cs</td>               <td>### Description Fixed typos in EdgeDriverService.cs  ### Motivation and Context Fixes typos in EdgeDriverService.cs  ### Types of changes <!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: --> - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist <!--- Go over all the following points, and put an `x` in all the boxes that apply. --> <!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! --> - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed. <!--- Provide a general summary of your changes in the Title above --> </td>               <td>closed</td><td>C-dotnet,  </td>               <td>icnocop </td>               <td>2020-03-10T21:52:04Z</td>               <td>2020-03-10T23:20:59Z</td>               </tr><tr>               <td></td>               <td>8097</td>               <td>new Actions(_context.WebDriver).MoveToElement is throwing  Target element cannot be converted to IWebElementReference</td>               <td>## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  OS: Windows 7 Selenium Version: Selenium.WebDriver 3.141, .net4.61 Chrome Driver Version :79.0.0 Browser: Chrome Browser Version: 79.0.3945.88  (64-bit)  Selenium WebDriver and Chrome Driver were installed from nuget package solution  We are facing the following error Target element cannot be converted to IWebElementReference when we try to access any element   In #5231 the resolution given was to implement IWrapsElement class.  We are already extending our WebElementBase class from IWrapsElement  public abstract class WebElementBase : IWrapsElement, IWebElement </td>               <td>closed</td><td> </td>               <td>Prathima23 </td>               <td>2020-03-10T04:55:11Z</td>               <td>2020-04-15T07:56:50Z</td>               </tr><tr>               <td></td>               <td>8096</td>               <td>[py] Use a capability to switch engines for Edge</td>               <td>### Description Based on the discussion in #7977 we've decided to use a new ""ms:edgeChromium"" boolean capability key for EdgeDriver which tells the driver service whether to launch Edge Legacy or Chromium. This change updates the Edge .Options class to use this capability in place of the previous is_legacy constructor parameter.  The change also includes some cleanup in the Edge and Chromium drivers. The 'verbose' flag is now used all the time instead of being legacy-only. The duplicate page_load_strategy getter/setter has been removed since the base ChromiumDriver class takes care of this. The Chromium driver no longer takes the deprecated 'executable_path' parameter. The subclasses will always provide a service object, so this param shouldn't be needed. This shouldn't be a breaking change since ChromiumDriver is fairly new and isn't present in a stable release yet.  Lastly, added bazel test targets for Edge and Edge Chromium.  ### Motivation and Context Using a capability key allows EdgeOptions to work with a RemoteWebDriver. A python client can now configure the EdgeOptions for either Legacy or Chromium, and the remote Selenium server can make use of the capability to launch the correct Edge driver service. Previously, the is_legacy property on the EdgeOptions controlled how the EdgeOptions were serialized, but the serialized capabilities didn't carry any information about what flavor of Edge the client wants to use. This meant that the client could only safely send EdgeOptions to a remote server if they knew that a compatible Edge service was already running on that server.  ### Types of changes <!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: --> - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist <!--- Go over all the following points, and put an `x` in all the boxes that apply. --> <!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! --> - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed. <!--- Provide a general summary of your changes in the Title above --> </td>               <td>closed</td><td> </td>               <td>bwalderman </td>               <td>2020-03-09T19:31:08Z</td>               <td>2020-03-10T11:12:52Z</td>               </tr><tr>               <td></td>               <td>8095</td>               <td>Use ProxyManager instead of PoolManager in remote_connection</td>               <td>Currently urllib3.PoolManager is used in creating remote connection to the grid. If a proxy is required to connect to the grid, we have to use urllib3.ProxyManager instead of urllib3.PoolManager.  We have to pass grid_conn_proxy_url as part of the Webdriver constructor such that when WebDriver creates a remote_connction, it can be passed to the RemoteConnection class and can be used to create the connection to the grid. If proxy is passed, ProxyManager will be used to create the connection. Otherwise PoolManager will be used.  Fixes #8053  <!-- NOTE Please be aware that the Selenium Grid 3.x is being deprecated in favour of the upcoming version 4.x. We won't be receiving any PRs related to the Grid 3.x code. Thanks! -->  **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.   <!--- Provide a general summary of your changes in the Title above -->  ### Description <!--- Describe your changes in detail -->  ### Motivation and Context <!--- Why is this change required? What problem does it solve? -->  ### Types of changes <!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: --> - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist <!--- Go over all the following points, and put an `x` in all the boxes that apply. --> <!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! --> - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [ ] All new and existing tests passed. <!--- Provide a general summary of your changes in the Title above --> </td>               <td>closed</td><td> </td>               <td>pkvprakash </td>               <td>2020-03-09T18:08:28Z</td>               <td>2020-03-09T21:47:45Z</td>               </tr><tr>               <td></td>               <td>8094</td>               <td>Support functions for message in driver.wait()</td>               <td><!-- NOTE Please be aware that the Selenium Grid 3.x is being deprecated in favour of the upcoming version 4.x. We won't be receiving any PRs related to the Grid 3.x code. Thanks! -->  **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.   ### Supporting functions for `message` in `driver.wait()`. <!--- Provide a general summary of your changes in the Title above -->  ### Description This change allows users to pass a function that resolves an error message when the `driver.wait()` condition fails. Currently a `string` can be passed to the `wait()` method, now `() => string` can also be passed.  ### Motivation and Context Currently a user only has the ability to pass a message containing information about the step at the beginning of the test. Giving a user the ability to pass a function that resolves a message allows the message to contain information that is made available at the end of the test. The motivation for this PR is to be able to write out information about the current state of the test results after a timeout period has expired.  ### Types of changes <!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: --> - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist <!--- Go over all the following points, and put an `x` in all the boxes that apply. --> <!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! --> - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed. <!--- Provide a general summary of your changes in the Title above --> </td>               <td>closed</td><td>C-nodejs,  </td>               <td>jackall3n </td>               <td>2020-03-09T15:11:55Z</td>               <td>2020-03-31T15:10:43Z</td>               </tr><tr>               <td></td>               <td>8093</td>               <td>FindBy doesn't work properly with Kotlin List</td>               <td>## üêõ Bug Report  Selenium `@FindAll` Annotation doesn't work with Kotlin's `List`  ## To Reproduce  You can clone [this](https://github.com/R1DEN/SeleniumKotlinBug) repo and see for yourself.   The underlying problem is that  ```  Type listType = ((ParameterizedType) genericType).getActualTypeArguments()[0];     if (!WebElement.class.equals(listType)) {       return false;     } ``` the listType is `WebElement` in Java list, but `? extends WebElement` in Kotlin resulting in `WebElement.class.equals(listType)` to be false  ## Environment  OS:Win 10 Browser: Chrome Browser version: 80.0.3987.132 Browser Driver version: 80.0.3987.106 Language Bindings version: Kotlin 1.3.70 </td>               <td>closed</td><td>needs-triaging,  </td>               <td>R1DEN </td>               <td>2020-03-09T06:13:26Z</td>               <td>2020-04-15T08:06:54Z</td>               </tr><tr>               <td></td>               <td>8092</td>               <td>certificate</td>               <td>## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group </td>               <td>closed</td><td> </td>               <td>chetanbiourja </td>               <td>2020-03-06T12:08:56Z</td>               <td>2020-04-15T08:43:55Z</td>               </tr><tr>               <td></td>               <td>8091</td>               <td>Issues accessing stripe iframe over capybara/selenium hub</td>               <td>## üêõ Bug Report  We're setting up functional tests for our payment journeys using the Stripe widget. Our application is a ruby application, and our tests use these gems:  * capybara 3.31.0 * selenium-webdriver 3.142.7 * cucumber 3.1.2  Our CI pipeline runs tests using docker-compose. We're using the image `selenium/standalone-chrome-debug:3.141.59-oxygen` to load selenium, and we setup hub communication using the following configuration for ruby:  ```ruby Capybara.javascript_driver = :selenium_remote_chrome Capybara.match = :prefer_exact Capybara.default_max_wait_time = 15  Capybara.register_driver :selenium_remote_chrome do |app|   arguments = %w[no-default-browser-check start-maximized auto-open-devtools-for-tabs ignore-certificate-errors]   arguments = %w[headless disable-gpu disable-dev-shm-usage no-sandbox window-size=1920,1200] if ENV[""HEADLESS""] == ""true""    capabilities = Selenium::WebDriver::Remote::Capabilities.chrome(     ""chromeOptions"" => { ""args"" => arguments }     # acceptInsecureCerts: true,   )      Capybara::Selenium::Driver.new(     app,     browser: :remote,     url: ""http://selenium:4444/wd/hub"",     desired_capabilities: capabilities   ) end ```  ## The problem  Accessing elements within the stripe widget iframe isn't working. We use something similar to the following snippet:  ```ruby def pay_stripe     sleep(0.7) # wait for the js to create the popup in response to pressing the button     within_frame '__privateStripeFrame5' do # must be selenium       # fill_in 'card_number', with: '4242424242424242' no longer works       4.times {page.driver.browser.find_element(:name, 'cardnumber').send_keys('4242')}        # fill_in 'cc-exp', with: '5/2018' no longer works       page.driver.browser.find_element(:name, 'exp-date').send_keys '5/24'       page.driver.browser.find_element(:id, 'cvc').send_keys '18'     end   end ```  however, this fails with the following error:  ``` no such element: Unable to locate element: {""method"":""name"",""selector"":""cardnumber""}         (Session info: chrome=74.0.3729.169)         (Driver info: chromedriver=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}),platform=Linux 4.19.76-linuxkit x86_64) (Selenium::WebDriver::Error::NoSuchElementError) ```  As far as I could tell, the remote driver sends http requests to selenium hub, which performs the `find` on demand, and hub can't look into the iframe.  We could verify that running selenium locally and running the selenium driver, we could fill in fields within the iframe.   So, this either seems like a limitation of hub, or can we configure it so that we can access elements within the iframe? </td>               <td>closed</td><td>C-rb,  </td>               <td>HoneyryderChuck </td>               <td>2020-03-05T12:19:02Z</td>               <td>2021-09-05T10:20:29Z</td>               </tr><tr>               <td></td>               <td>8090</td>               <td>Edge driver HttpCommandExecutor.MakeHttpRequest() failing </td>               <td>## üí¨ Questions and Help  Constructing the edge driver has all of a sudden stopped working. Was working two days ago.  Message: OpenQA.Selenium.WebDriverException : A exception with a null response was thrown sending an HTTP request to the remote WebDriver server for URL http://localhost:51920/session. The status of the exception was ReceiveFailure, and the message was: The underlying connection was closed: An unexpected error occurred on a receive. ----> System.Net.WebException : The underlying connection was closed: An unexpected error occurred on a receive. ----> System.IO.IOException : Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host. ----> System.Net.Sockets.SocketException : An existing connection was forcibly closed by the remote host TearDown : System.NullReferenceException : Object reference not set to an instance of an object. Stack Trace: HttpCommandExecutor.MakeHttpRequest(HttpRequestInfo requestInfo) HttpCommandExecutor.Execute(Command commandToExecute) DriverServiceCommandExecutor.Execute(Command commandToExecute) RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters) RemoteWebDriver.StartSession(ICapabilities desiredCapabilities) RemoteWebDriver.ctor(ICommandExecutor commandExecutor, ICapabilities desiredCapabilities) EdgeDriver.ctor(EdgeOptions options)  The way I'm constructing the driver `driver = new EdgeDriver();  driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(10); driver.Manage().Window.Maximize();` </td>               <td>closed</td><td> </td>               <td>RostumAhady </td>               <td>2020-03-05T10:47:43Z</td>               <td>2020-04-04T11:50:54Z</td>               </tr><tr>               <td></td>               <td>8089</td>               <td>Edge driver HttpCommandExecutor.MakeHttpRequest() failing</td>               <td>Constructing the edge driver has all of a sudden stopped working. Was working two days ago.   Message:      OpenQA.Selenium.WebDriverException : A exception with a null response was thrown sending an HTTP request to the remote WebDriver server for URL http://localhost:51920/session. The status of the exception was ReceiveFailure, and the message was: The underlying connection was closed: An unexpected error occurred on a receive.       ----> System.Net.WebException : The underlying connection was closed: An unexpected error occurred on a receive.       ----> System.IO.IOException : Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host.       ----> System.Net.Sockets.SocketException : An existing connection was forcibly closed by the remote host     TearDown : System.NullReferenceException : Object reference not set to an instance of an object.   Stack Trace:      HttpCommandExecutor.MakeHttpRequest(HttpRequestInfo requestInfo)     HttpCommandExecutor.Execute(Command commandToExecute)     DriverServiceCommandExecutor.Execute(Command commandToExecute)     RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)     RemoteWebDriver.StartSession(ICapabilities desiredCapabilities)     RemoteWebDriver.ctor(ICommandExecutor commandExecutor, ICapabilities desiredCapabilities)     EdgeDriver.ctor(EdgeOptions options)  The way I'm constructing the driver ` driver = new EdgeDriver();                     driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(10);                     driver.Manage().Window.Maximize();`</td>               <td>closed</td><td> </td>               <td>RostumAhady </td>               <td>2020-03-05T10:44:11Z</td>               <td>2020-04-04T11:50:57Z</td>               </tr><tr>               <td></td>               <td>8088</td>               <td>java.lang.IllegalStateException: The path to the driver executable must be set by the webdriver.chrome.driver system property;</td>               <td>## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group </td>               <td>closed</td><td> </td>               <td>Bhavani-bh9 </td>               <td>2020-03-05T04:45:36Z</td>               <td>2020-04-04T07:33:23Z</td>               </tr><tr>               <td></td>               <td>8087</td>               <td>[dotnet] use a capability to switch engines for EdgeOptions/EdgeDriverService.</td>               <td>### Description Based on the discussion in https://github.com/SeleniumHQ/selenium/pull/7977 we've decided to use a new ""ms:edgeChromium"" boolean capability key for EdgeDriver which tells the driver service whether to launch Edge Legacy or Chromium. This change updates the EdgeOptions class, replacing the previous ""isLegacy"" constructor param with a property that can be used to set the capability. The various EdgeDriver constructor overloads have also been modified to ensure the EdgeDriverService and EdgeOptions agreee about which flavor of Edge to use. Before this change, the user had to create and manage their own EdgeDriverService in order to use Edge Chromium. Now they can just do:  ```csharp var driver = new EdgeDriver(new EdgeOptions() { UseChromium = true }); ```   ### Motivation and Context Using a capability key allows EdgeOptions to work with a RemoteWebDriver. A .NET test can now configure the EdgeOptions for either Legacy or Chromium, and the remote Selenium server can make use of the capability to launch the correct Edge driver service. Previously, the isLegacy property on the EdgeOptions controlled how the EdgeOptions were serialized, but the serialized capabilities didn't carry any information about what flavor of Edge the client wants to use. This meant that the client could only safely send EdgeOptions to a remote server if they knew that a compatible Edge service was already running on that server.   ### Types of changes <!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: --> - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist <!--- Go over all the following points, and put an `x` in all the boxes that apply. --> <!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! --> - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed. <!--- Provide a general summary of your changes in the Title above --> </td>               <td>closed</td><td>C-dotnet,  </td>               <td>bwalderman </td>               <td>2020-03-04T21:56:50Z</td>               <td>2020-03-17T15:44:37Z</td>               </tr><tr>               <td></td>               <td>8086</td>               <td>RemoteWebDriver to get LogType=performance produces exception, works fine with ChromeDriver</td>               <td>## üêõ Bug Report While trying to retrieve the performance logs using RemoteWebDriver, getting the exception that - log type 'peformance' not found.   However, looks like this issue was fixed in an earlier version: https://github.com/SeleniumHQ/selenium/issues/407 but I can still reproduce this.  However as in the master, I can see that the ""Performance"" capability is not present at all: https://github.com/SeleniumHQ/selenium/blob/master/java/client/src/org/openqa/selenium/remote/DesiredCapabilities.java  However, when using the chromeDriver, the same thing works just fine and all the performance logs are retrieved successfully.  ## To Reproduce ``` DesiredCapabilities desiredCapabilites = DesiredCapabilities.chrome(); LoggingPreferences logPrefs = new LoggingPreferences(); logPrefs.enable(LogType.PERFORMANCE, Level.ALL); desiredCapabilites.setCapability(CapabilityType.LOGGING_PREFS, logPrefs);  desiredCapabilites.setCapability(ChromeOptions.CAPABILITY, options); ChromeDriver driver = new ChromeDriver(desiredCapabilites); //==> Works fine // RemoteWebDriver driver = new RemoteWebDriver(new URL(""https://www.google.com"" desiredCapabilites); //==> Issue is here try { 	System.out.println(driver.manage().logs().getAvailableLogTypes()); 	driver.get(""http://google.com""); 	for (LogEntry logEntry : driver.manage().logs().get(LogType.PERFORMANCE) 			.getAll()) { 		System.out.println(logEntry); 	} } finally { 	driver.quit(); } ```  What is the expected output? To get a list (possibly empty) of performance logs    What do you see instead? org.openqa.selenium.WebDriverException: unknown error: log   type 'performance' not found  ## Environment  OS: Windows 10 Browser: Chrome Browser version: chrome=80.0.3987.122 Browser Driver version: 80.0.3987.106 Language Bindings version: java version ""1.8.0_201"" </td>               <td>closed</td><td>needs-triaging,  </td>               <td>raviguptasmarsh </td>               <td>2020-03-04T09:45:55Z</td>               <td>2020-04-04T11:50:52Z</td>               </tr><tr>               <td></td>               <td>8085</td>               <td>Update python_requires to disable obsolete 3.4 version</td>               <td><!-- NOTE Please be aware that the Selenium Grid 3.x is being deprecated in favour of the upcoming version 4.x. We won't be receiving any PRs related to the Grid 3.x code. Thanks! -->  <!--- Provide a general summary of your changes in the Title above -->  ### Description Due to Python 3.4 is now the highest version of Python, which no longer has official support (3.5 is still supported) and that builds with tests for Pull Requests on Travis are running (for version 3.x) on Python 3.6.7, I changed the requirements for Python: 3.4 is now disabled from acceptable versions. Official statement from python.org (Python Release Schedule for version 3.4): ""Python 3.4 has now reached its end-of-life and has been retired. No more releases will be made.""  ### Motivation and Context Pull request according to the #7462 issue ticket about: ""Deprecating old versions of Python""  ### Types of changes <!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: --> - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist <!--- Go over all the following points, and put an `x` in all the boxes that apply. --> <!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! --> - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed. <!--- Provide a general summary of your changes in the Title above --> </td>               <td>closed</td><td> </td>               <td>codemrkay </td>               <td>2020-03-03T18:45:11Z</td>               <td>2020-03-03T20:53:53Z</td>               </tr><tr>               <td></td>               <td>8084</td>               <td>Parameter to specify custom location for FirefoxProfile webdriver_prefs.json</td>               <td>## üöÄ Feature Proposal  Could you add a parameter to the FirefoxProfile contructor, giving a path where to find the webdriver_prefs.json file for its configuration ?  ## Motivation  I am using the selenium Python module in a frozen software. I am used to zip Python files in the frozen version so that it takes less space, but the FirefoxProfile constructor loads the default configuration from the webdriver_prefs.json file located in the same folder as the Python file containing the class definition (in this case firefox_profile.py). The contructor opens the file with the Python `open` function that returns an error because the file is in a zip folder.  ## Example  Simply add an optional argument like ""custom_preferences"", giving a path to the folder where to find the file, or a full path to the file.  `def __init__(self, profile_directory=None, custom_preferences=None):`</td>               <td>closed</td><td>C-py,  </td>               <td>MarvBob </td>               <td>2020-03-03T17:17:01Z</td>               <td>2021-09-05T08:12:23Z</td>               </tr><tr>               <td></td>               <td>8083</td>               <td>Perform null check when calling Start on DriverService</td>               <td><!-- NOTE Please be aware that the Selenium Grid 3.x is being deprecated in favour of the upcoming version 4.x. We won't be receiving any PRs related to the Grid 3.x code. Thanks! -->  **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.   <!--- Provide a general summary of your changes in the Title above -->  ### Description Implements the null-check found in the Java bindings. For further details on the problem at hand, check out the description and comment thread of #8074  ### Motivation and Context Fixes #8074   ### Types of changes <!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: --> - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist <!--- Go over all the following points, and put an `x` in all the boxes that apply. --> <!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! --> - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [X] My change requires a change to the documentation. - [X] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed. <!--- Provide a general summary of your changes in the Title above --> </td>               <td>closed</td><td> </td>               <td>jordan-mace </td>               <td>2020-03-03T02:13:55Z</td>               <td>2020-03-05T10:14:59Z</td>               </tr><tr>               <td></td>               <td>8082</td>               <td>NunitFramework,C#,Selenium</td>               <td>Looking For Help: Urgent  Hello, I have encountered few issues when running automation scripts using selenium,c#. Issue1: When running multiple scripts in NUnit Framework either using run selected or debug selected. First script is running absolutely fine but after started running second script encountering issue .seeing this Error ""at openqa.selenium.remote.remotewebdriver.unpackandthrowonerror(response errorresponse) at openqa.selenium.remote.remotewebdriver.execute(string drivercommandtoexecute, dictionary`2 parameters) at openqa.selenium.remote.remotetimeouts.executesettimeout(string timeouttype, timespan timetowait) at openqa.selenium.remote.remotetimeouts.set_pageload(timespan value) at ......""  Issue2: Same kind of scenario as above but running through n-unit console runner i am encountering issue seeing "" openqa.selenium.webdriverexception : unexpected error. system.net.webexception: unable to connect to the remote server ---> system.net.sockets.socketexception: no connection could be made because the target machine actively refused""  OS : Windows10</td>               <td>closed</td><td> </td>               <td>uday0804 </td>               <td>2020-03-02T20:15:52Z</td>               <td>2020-04-02T14:32:10Z</td>               </tr><tr>               <td></td>               <td>8081</td>               <td>Issue Running All Tests using Run all tests in Nunit Framework or Batch file</td>               <td>Looking For Help: Urgent  Hello, I have encountered few issues when running automation scripts using selenium,c#. Issue1: When running multiple scripts in NUnit Framework either using run selected or debug selected. First script is running absolutely fine but after started running second script encountering issue .seeing this Error ""at openqa.selenium.remote.remotewebdriver.unpackandthrowonerror(response errorresponse) at openqa.selenium.remote.remotewebdriver.execute(string drivercommandtoexecute, dictionary`2 parameters) at openqa.selenium.remote.remotetimeouts.executesettimeout(string timeouttype, timespan timetowait) at openqa.selenium.remote.remotetimeouts.set_pageload(timespan value) at ......""  Issue2: Same kind of scenario as above but running through n-unit console runner i am encountering issue seeing "" openqa.selenium.webdriverexception : unexpected error. system.net.webexception: unable to connect to the remote server ---> system.net.sockets.socketexception: no connection could be made because the target machine actively refused"" </td>               <td>closed</td><td> </td>               <td>uday0804 </td>               <td>2020-03-02T20:09:20Z</td>               <td>2020-04-02T14:32:14Z</td>               </tr><tr>               <td></td>               <td>8080</td>               <td>Run test case on all nodes.</td>               <td>## üöÄ Feature Proposal  I have requirement of running same set of test cases on all nodes which will create some dynamic data.  ## Motivation  It is required to configure prerequisite data in web application, which should be there for all nodes. And each nodes is running it's own web application instance.  ## Example  Let's say there is some current date specific data should be there to perform some operation. Now for this type of dynamic data, it is not possible to enter as master data so we are inserting as prerequisite data before actual test execution starts. </td>               <td>closed</td><td>needs-triaging,  </td>               <td>Kanti1702 </td>               <td>2020-03-02T17:11:52Z</td>               <td>2020-04-02T14:32:18Z</td>               </tr><tr>               <td></td>               <td>8079</td>               <td>Py wheel WIP</td>               <td></td>               <td>closed</td><td> </td>               <td>AutomatedTester </td>               <td>2020-03-02T14:58:30Z</td>               <td>2020-07-16T20:46:52Z</td>               </tr><tr>               <td></td>               <td>8078</td>               <td>[selenium 4.0.0-alpha-4] Firefox cannot be open by initiating geckodriver.exe on CLI</td>               <td>## üêõ Bug Report Firefox cannot be open by initiating geckodriver.exe thorough selenium 4.0.0-alpha-4 while executing executable JAR on CLI (DOS on Windows)  ## To Reproduce Initiate geckodriver formalities and then make instance of Firefox, followed by any operation. Here, same code is working on programming editor i.e. IntelliJ, but when we make it with executable jar (using Maven shade plugin), it could not be working with selenium 4.0.0-alpha-4. (thought it was working with selenium 3.141.59)  ##Resulted Log: ``` org.openqa.selenium.WebDriverException: Build info: version: 'unknown', revision: 'unknown' System info: host: 'MITUL-DESKTOP', ip: '192.168.1.31', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_202' Driver info: driver.version: FirefoxDriver         at java.util.Optional.orElseThrow(Optional.java:290)         at org.openqa.selenium.firefox.FirefoxDriver.toExecutor(FirefoxDriver.java:184)         at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:156)         at com.malbek.automation.infrastructure.utils.DriverFactory.setDriver(DriverFactory.java:104)         at com.malbek.automation.framework.utils.BaseTest.SetUp(BaseTest.java:35)         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)         at java.lang.reflect.Method.invoke(Method.java:498)         at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)         at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:63)         at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:348)         at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:302)         at org.testng.TestRunner.invokeTestConfigurations(TestRunner.java:619)         at org.testng.TestRunner.beforeRun(TestRunner.java:609)         at org.testng.TestRunner.run(TestRunner.java:580)         at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)         at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)         at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)         at org.testng.SuiteRunner.run(SuiteRunner.java:286)         at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)         at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)         at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)         at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)         at org.testng.TestNG.runSuites(TestNG.java:1039)         at org.testng.TestNG.run(TestNG.java:1007) ``` ## Environment OS: Windows 10 Browser: Firefox Browser version: 73.0.1 (64-bit) Browser Driver version: 0.26.0 Language Bindings version: Java Selenium Grid version (if applicable): NO </td>               <td>closed</td><td>C-java,  </td>               <td>mitul494 </td>               <td>2020-03-02T10:15:59Z</td>               <td>2020-04-25T08:18:11Z</td>               </tr><tr>               <td></td>               <td>8077</td>               <td>Fix method documentation</td>               <td><!-- NOTE Please be aware that the Selenium Grid 3.x is being deprecated in favour of the upcoming version 4.x. We won't be receiving any PRs related to the Grid 3.x code. Thanks! -->  **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.   <!--- Provide a general summary of your changes in the Title above -->  ### Description <!--- Describe your changes in detail -->  ### Motivation and Context Fixed a method documentation  ### Types of changes <!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: --> - [ ] Bug fix (non-breaking change which fixes an issue)  ### Checklist <!--- Go over all the following points, and put an `x` in all the boxes that apply. --> <!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! --> - [x ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ x] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ x] All new and existing tests passed. <!--- Provide a general summary of your changes in the Title above --> </td>               <td>closed</td><td> </td>               <td>MandarJKulkarni </td>               <td>2020-02-28T18:00:23Z</td>               <td>2020-02-29T10:13:58Z</td>               </tr><tr>               <td></td>               <td>8074</td>               <td>FirefoxDriverService ProcessId property getting cleared when creating a FirefoxDriver</td>               <td>## üêõ Bug Report  The ProcessId of a FirefoxDriverService is getting replaced with 0 after creating a FirefoxDriver using the service.   From my investigation, this appears to be caused by `DriverService.IsRunning`. `this.driverServiceProcess.HasExited` begins returning `true` as soon as the FirefoxDriver is created despite the geckodriver process being alive. `IsRunning` therefore returns false, so ProcessId returns 0.  It's worth noting that I have seen this occur on both .NET Core 2.2 and 3.1 (the repro project)  <!-- NOTE FIREFOX 48+ IS ONLY COMPATIBLE WITH GECKODRIVER.  If the issue is with Google Chrome consider logging an issue with chromedriver instead: https://chromedriver.chromium.org/help  If the issue is with Firefox GeckoDriver (aka Marionette) consider logging an issue with Mozilla: https://bugzilla.mozilla.org/buglist.cgi?product=Testing&component=Marionette  If the issue is with Microsoft Edge consider logging an issue with Microsoft instead: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/  If the issue is with Safari, only Safari 10+ is supported. Please log any Safari issue with Apple: https://bugreport.apple.com/  -->  ## To Reproduce  Effectively,  1. Create a `FirefoxDriverService` 2. Using that service, create a new `FirefoxDriver` 3. Access the `ProcessId` property on the `FirefoxDriverService`  ## Expected behavior The FirefoxDriverService ProcessId should not change as long as the geckodriver is running.  ## Test script or set of commands reproducing this issue Repo: https://github.com/jordanm-mel/process-id-bug-repro  ## Environment  OS: Windows 10 Browser: Firefox Browser version: 72.0.2 Browser Driver version: GeckoDriver 0.26.0 Language Bindings version: C# 3.141.0 Selenium Grid version (if applicable): N/A </td>               <td>closed</td><td>needs-triaging,  </td>               <td>jordan-mace </td>               <td>2020-02-28T04:11:11Z</td>               <td>2020-04-04T10:46:22Z</td>               </tr><tr>               <td></td>               <td>8073</td>               <td>Not Possible to add chrome exceptions preferences for images</td>               <td>## üêõ Bug Report  When trying to set a url in `profile.content_settings.exceptions.images` from chrome its not possible to escape the dots  ## To Reproduce  chrome_options = webdriver.ChromeOptions() prefs = {""profile.content_settings.exceptions.images.https://steamcdn-a.akamaihd.net,*.setting"": 2,} chrome_options.add_experimental_option(""prefs"", prefs) driver = webdriver.Chrome(chrome_options=chrome_options)  Output ```json         ""images"": {           ""https://steamcdn-a,*"": {             ""akamaihd"": {               ""net,*"": {                 ""setting"": 2               }             }           }         }, ```  If you add \. prefs = {""profile.content_settings.exceptions.images.https://steamcdn-a\.akamaihd\.net,*.setting"": 2,} ```json         ""images"": {           ""https://steamcdn-a\\"": {             ""akamaihd\\"": {               ""net,*"": {                 ""setting"": 2               }             }           }         }, ```  ## Expected behavior Some clear way to escape . in these types of scenarios ```json         ""images"": {           ""https://steamcdn-a.akamaihd.net,*"": {             ""last_modified"": ""13227321964718308"",             ""setting"": 2           }         }, ```  OS: Linux Fedora 31 Browser: Chrome  Browser version: 77.0.3865.90  Browser Driver version: ChromeDriver Language Bindings version: python 3.7.6 </td>               <td>closed</td><td>needs-triaging,  </td>               <td>CGDoctor8 </td>               <td>2020-02-28T01:13:07Z</td>               <td>2020-04-02T14:32:20Z</td>               </tr><tr>               <td></td>               <td>8072</td>               <td>When using java ChromeDriver on www.amextestsystem.com pageSource returns null</td>               <td>## üêõ Bug Report  When using java ChromeDriver on www.amextestsystem.com pageSource returns null The issue is **not** with ChromeDriver - see details here https://bugs.chromium.org/p/chromedriver/issues/detail?id=3371#c1  _The java bindings are issuing a specific javascript call instead of allowing ChromeDriver to make the correct call_  ## To Reproduce  ``` String driverPath = ""C:\\chromedriver.exe""; System.setProperty(""selenium.chrome.driver"", driverPath); ChromeDriver driver = new ChromeDriver(); driver.navigate().to(""http://amextestsystem.com""); System.out.println(driver.getPageSource()); ```  driver.getPageSource() returns null.  ## Environment  OS: macOs and Windows Browser: Chrome Browser version: 80 Browser Driver version: 80 Language Bindings version: Java </td>               <td>closed</td><td>C-java,  </td>               <td>mstrelex </td>               <td>2020-02-27T23:00:55Z</td>               <td>2020-04-25T08:20:05Z</td>               </tr><tr>               <td></td>               <td>8066</td>               <td>Cleanup temporary directories even if non-empty</td>               <td>Set the unsafeCleanup option to tmp.dir() so that temporary directories are removed even if non-empty.  Running selenium with firefox leaves many profile directories in /tmp which easily cause it to fill up after a few extensive runs.  As a user, I would expect that all temporary directories are removed when selenium is finished.  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.</td>               <td>closed</td><td>I-defect,  </td>               <td>dpalmeiro </td>               <td>2020-02-27T16:57:35Z</td>               <td>2020-03-05T08:48:07Z</td>               </tr><tr>               <td></td>               <td>8064</td>               <td>latest (3.141.59-zirconium) version of node cannot reach the node</td>               <td>latest (3.141.59-zirconium) version of node cannot reach the node. 3.141.59-yttrium version work perfect.  ``` # To start Docker in Swarm mode, you need to run `docker swarm init` # To deploy the Grid, `docker stack deploy -c docker-compose.yml grid` # Stop with `docker stack rm grid`  version: '3.7'  services:   hub:     image: selenium/hub:latest     networks:       - default       - traefik-public     deploy:       labels:         - traefik.frontend.rule=Host:selenium-${DOMAIN?Variable DOMAIN not set}         - traefik.enable=true         - traefik.port=4444         - traefik.tags=${TRAEFIK_PUBLIC_TAG:-traefik-public}         - traefik.docker.network=traefik-public         # Traefik service that listens to HTTP         - traefik.redirectorservice.frontend.entryPoints=http         - traefik.redirectorservice.frontend.redirect.entryPoint=https         # Traefik service that listens to HTTPS         - traefik.webservice.frontend.entryPoints=https    chrome:     image: selenium/node-chrome:latest     volumes:       - /dev/shm:/dev/shm     networks:       - default       - traefik-public     environment:       HUB_HOST: hub       HUB_PORT: 4444     deploy:       mode: global     entrypoint: bash -c 'SE_OPTS=""-host $$HOSTNAME"" /opt/bin/entry_point.sh'  networks:   traefik-public:     external: true ``` Logs:  ``` 12:54:09.713 INFO [Hub.start] - Nodes should register to http://172.18.0.7:4444/grid/register/ 12:54:09.713 INFO [Hub.start] - Clients should connect to http://172.18.0.7:4444/wd/hub 12:54:22.684 INFO [DefaultGridRegistry.add] - Registered a node http://47be09a43cfa:5555 12:54:33.010 INFO [DefaultRemoteProxy.onEvent] - Marking the node http://47be09a43cfa:5555 as down: cannot reach the node for 2 tries 12:55:33.036 INFO [DefaultRemoteProxy.onEvent] - Unregistering the node http://47be09a43cfa:5555 because it's been down for 60027 milliseconds 12:55:33.037 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://47be09a43cfa:5555 ```</td>               <td>closed</td><td> </td>               <td>burtsevyg </td>               <td>2020-02-27T13:33:18Z</td>               <td>2020-04-02T14:32:44Z</td>               </tr><tr>               <td></td>               <td>8063</td>               <td>'isInvisible()' now returns true on 'NoSuchElementException' instead of  causing 'TimeoutException'</td>               <td>The `isInvisible()` method, when encountered with `NoSuchElementException` causes `TimeoutException`, whereas, it should return `true`. Because if the element is not present in DOM, it should be treated as invisible  Fixes #7518  ### Description The `isInvisible()` method now catches `NoSuchElementException` along with  `StaleElementReferenceException` and returns `true` for these exceptions.  ### Motivation and Context Any element not present in the DOM should be treated as invisible.  In case of element located by `@FindBy` locator, the element holds `ProxyElement` and the actual element is looked up only when the element is referenced, and the element is referenced in `isInvisible` method by checking `!element.isDisplayed()` condition, which causes timeout exception when using the element in following manner `new WebDriverWait(driver,Duration.ofSeconds(5)).until(ExpectedConditions.invisibilityOf(element));`  even though element is not present.  ### Types of changes - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed. </td>               <td>closed</td><td> </td>               <td>r-sniper </td>               <td>2020-02-27T12:31:57Z</td>               <td>2020-03-27T15:01:58Z</td>               </tr><tr>               <td></td>               <td>8062</td>               <td>Modify: (doc) getCookie throws 'NoSuchCookieError' and !null </td>               <td> ### Description Updating document for getCookie  As per [webdriver documentation](https://www.w3.org/TR/webdriver/#dfn-no-such-cookie), getCookie should throw **""NoSuchCookieError""** if named cookie is not found.   In the documentation it is mentioned **""null""** will be returned if there is no named cookie in current browsing context.  This resolves issue https://github.com/SeleniumHQ/selenium/issues/6292  ### Types of changes <!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: --> - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist <!--- Go over all the following points, and put an `x` in all the boxes that apply. --> <!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! --> - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed. <!--- Provide a general summary of your changes in the Title above --> </td>               <td>closed</td><td> </td>               <td>harsha509 </td>               <td>2020-02-27T09:09:34Z</td>               <td>2020-02-27T10:50:51Z</td>               </tr><tr>               <td></td>               <td>8061</td>               <td>Selenium WebDriver doesn't open specified URL, opens ""data/"" instead.</td>               <td>## üêõ Bug Report  Chrome WebDriver works with my local installation of Chrome Version 80, with the Selenium WebDriver for version 80. However, it doesn't with Chrome Portable Version 80. Instead it tries to reach one of the following URLs: ""data/"", ""data;"" or ""dat/"", and doesn't abort with an error.  ## Expected behavior  Reaching the specified URL (for example www.google.com).  ## Test script or set of commands reproducing this issue  ```java java.lang.System.setProperty(""webdriver.chrome.driver"", config.getChromeDriver().toString()); //path to driver ChromeOptions options = new ChromeOptions(); options.addExtensions(config.getExtension()); // path to extension options.setBinary(config.getChromePortable()); //path to chrome portable .exe options.addArguments(""--no-sandbox""); options.addArguments(""--no-default-browser-check""); options.addArguments(""--no-first-run'""); options.addArguments(""--disable-dev-shm-usage""); options.addArguments(""--disable-gpu""); this.driver = new ChromeDriver(options); this.driver.get(url); ```  ## Environment  OS: Windows 10  Browser: Chrome   Browser version:  Version 80.0.3987.106 (Offizieller Build) (64-Bit)  Browser Driver version: ChromeDriver 80.0.3987.106  Language Bindings version: Java 12   </td>               <td>closed</td><td>D-chrome,  </td>               <td>vucenovic </td>               <td>2020-02-26T11:53:25Z</td>               <td>2020-04-15T08:04:38Z</td>               </tr><tr>               <td></td>               <td>8060</td>               <td>Chrome Window opens with ""data/"" url instead of the URL specified on Chrome Portable</td>               <td>üêõ Bug Report  ## Expected behavior  Chrome WebDriver works with my local installation of Chrome Version 80, with the Selenium WebDriver for version 80. However, it doesn't with Chrome Portable Version 80. Instead it tries to reach one of the following URLs: ""data/"", ""data;"" or ""dat/"", and doesn't abort with an error.  ## Test script or set of commands reproducing this issue  ```java java.lang.System.setProperty(""webdriver.chrome.driver"", config.getChromeDriver().toString()); //path to driver ChromeOptions options = new ChromeOptions(); options.addExtensions(config.getExtension()); // path to extension options.setBinary(config.getChromePortable()); //path to chrome portable .exe options.addArguments(""--no-sandbox""); options.addArguments(""--no-default-browser-check""); options.addArguments(""--no-first-run'""); options.addArguments(""--disable-dev-shm-usage""); options.addArguments(""--disable-gpu""); this.driver = new ChromeDriver(options); this.driver.get(url); ```  ## Environment  OS: Windows 10  Browser: Chrome   Browser version:  Version 80.0.3987.106 (Offizieller Build) (64-Bit)  Browser Driver version: ChromeDriver 80.0.3987.106  Language Bindings version: Java 12  </td>               <td>closed</td><td> </td>               <td>vucenovic </td>               <td>2020-02-26T11:49:52Z</td>               <td>2020-03-27T12:28:18Z</td>               </tr><tr>               <td></td>               <td>8059</td>               <td>Css flex attribute forces text to be returned with new lines</td>               <td>## üêõ Bug Report  If ""display: flex;"" and ""flex-wrap: wrap;"" are applied on a parent element, then when you want to get it's text, the text from all child elements are separated by new lines. This behavior is the same, regardless if the elements are on the same row or not in the UI.  ## To Reproduce ``` <div style=""display: flex; flex-wrap: wrap;"">    <someElement>text1</someElement>    <someElement>text2</someElement>    <someElement>text3</someElement> </div> ```  Calling GetText() on the parent element return ""text1/r/ntext2/r/ntext3"" even if the elements are on the same line.  ## Expected behavior  If the elements are on the same row to NOT add new line chars between them.  ## Environment  OS: Windows 10 Browser: Chrome Browser version:  80.0.3987.122 Browser Driver version: ChromeDriver 80 Language Bindings version: C# 3.141.0 </td>               <td>closed</td><td>I-stale,  </td>               <td>LyubomirStoimchev </td>               <td>2020-02-26T09:36:53Z</td>               <td>2021-12-03T00:06:50Z</td>               </tr><tr>               <td></td>               <td>8058</td>               <td>drag_and_drop is not working now with selenium version 3.5, and chrome version 80.00, </td>               <td>## üêõ Bug Report  A clear and concise description of what the bug is.  <!-- NOTE FIREFOX 48+ IS ONLY COMPATIBLE WITH GECKODRIVER.  If the issue is with Google Chrome consider logging an issue with chromedriver instead: https://chromedriver.chromium.org/help  If the issue is with Firefox GeckoDriver (aka Marionette) consider logging an issue with Mozilla: https://bugzilla.mozilla.org/buglist.cgi?product=Testing&component=Marionette  If the issue is with Microsoft Edge consider logging an issue with Microsoft instead: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/  If the issue is with Safari, only Safari 10+ is supported. Please log any Safari issue with Apple: https://bugreport.apple.com/  -->  ## To Reproduce  <!-- Please be sure to include an SSCCE (Short, Self Contained, Correct [compilable] example) http://sscce.org/ If you can't provide a link to the page, consider creating a reproducible page on https://jsfiddle.net/ -->  Detailed steps to reproduce the behavior:  ## Expected behavior  A clear and concise description of what you expected to happen.  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS: <!-- Windows 10? OSX? --> Browser: <!-- Chrome? Safari?  --> Browser version: <!-- e.g.: 70.0.3538.110 --> Browser Driver version: <!-- e.g.: ChromeDriver 2.43, GeckoDriver 0.23 --> Language Bindings version: <!-- e.g.: Java 3.141.0 -->  Selenium Grid version (if applicable): <!-- e.g.: 3.141.59 -->  </td>               <td>closed</td><td>needs-triaging,  </td>               <td>appanakarthik </td>               <td>2020-02-26T07:25:42Z</td>               <td>2020-04-04T11:50:46Z</td>               </tr><tr>               <td></td>               <td>8057</td>               <td>Python remote client does not handle 302 redirects as expected</td>               <td>## üêõ Bug Report  The Python RemoteConnection object incorrectly handles 302 redirects.  The `_request` method attempts to handle redirects by issuing a `GET` request to the new url (see https://github.com/SeleniumHQ/selenium/blob/master/py/selenium/webdriver/remote/remote_connection.py#L387-L388)  However, urllib3 also attempts to handle redirects (from https://urllib3.readthedocs.io/en/latest/user-guide.html#retrying-requests): > urllib3 can automatically retry idempotent requests. This same mechanism also handles redirects. You can control the retries using the retries parameter to request(). By default, urllib3 will retry requests 3 times and follow up to 3 redirects.  urllib3 seems to be handling this by sending a POST to the new URL, rather than the expected GET (see https://github.com/psf/requests/pull/269 for more information for why GET is expected).   ## To Reproduce  <!-- Please be sure to include an SSCCE (Short, Self Contained, Correct [compilable] example) http://sscce.org/ If you can't provide a link to the page, consider creating a reproducible page on https://jsfiddle.net/ --> I'm using [this webdriver server](https://github.com/jalian-systems/marathonv5), although it isn't very easy to setup. The relevant redirect behavior is contained to just a few lines though: https://github.com/jalian-systems/marathonv5/blob/master/marathon-javafx/marathon-javafx-agent/src/main/java/net/sourceforge/marathon/javafxagent/server/JavaServer.java#L548-L550  ## Expected behavior  The returned 302 redirect from `POST /session` is followed up by `GET <redirect location>`.  ## Test script or set of commands reproducing this issue  ``` $ cat test.py #!/usr/bin/env python3 import logging from selenium import webdriver  logging.basicConfig(level=logging.DEBUG) driver = webdriver.Remote(command_executor='http://127.0.0.1:12345') ```  ``` $ ./test.py DEBUG:selenium.webdriver.remote.remote_connection:POST http://127.0.0.1:12345/session {""capabilities"": {""firstMatch"": [{}], ""alwaysMatch"": {}}, ""desiredCapabilities"": {}} DEBUG:urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1:12345 DEBUG:urllib3.connectionpool:http://127.0.0.1:12345 ""POST /session HTTP/1.1"" 301 0 DEBUG:urllib3.util.retry:Incremented Retry for (url='http://127.0.0.1:12345/session'): Retry(total=2, connect=None, read=None, redirect=None, status=None) INFO:urllib3.poolmanager:Redirecting http://127.0.0.1:12345/session -> http://127.0.0.1:12345/session/23109313-8476-47f2-8f87-b549120e3548 DEBUG:urllib3.connectionpool:http://127.0.0.1:12345 ""POST /session/23109313-8476-47f2-8f87-b549120e3548 HTTP/1.1"" 404 32 DEBUG:selenium.webdriver.remote.remote_connection:Finished Request Traceback (most recent call last):   File ""test.py"", line 7, in <module>     driver = webdriver.Remote(command_executor='http://127.0.0.1:12345')   File ""/home/johnott/src/scratch/selenium/.venv/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py"", line 157, in __init__     self.start_session(capabilities, browser_profile)   File ""/home/johnott/src/scratch/selenium/.venv/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py"", line 252, in start_session     response = self.execute(Command.NEW_SESSION, parameters)   File ""/home/johnott/src/scratch/selenium/.venv/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py"", line 321, in execute     self.error_handler.check_response(response)   File ""/home/johnott/src/scratch/selenium/.venv/lib/python3.6/site-packages/selenium/webdriver/remote/errorhandler.py"", line 208, in check_response     raise exception_class(value) selenium.common.exceptions.WebDriverException: Message: Not Implemented: (route is null) ```  This specific exception is caused by the webdriver not having a route for POST /session/<id>.   I was able to fix this by adding the parameter `redirect=False` to the http request (eg. `resp = http.request(method, url, body=body, headers=headers, redirect=False)`. This returns 30x status code to the RemoteConnection._request method, which handles this correctly.  ``` $ ./test-with-redirect-false.py DEBUG:selenium.webdriver.remote.remote_connection:POST http://127.0.0.1:12345/session {""capabilities"": {""firstMatch"": [{}], ""alwaysMatch"": {}}, ""desiredCapabilities"": {}} DEBUG:urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1:12345 DEBUG:urllib3.connectionpool:http://127.0.0.1:12345 ""POST /session HTTP/1.1"" 301 0 DEBUG:selenium.webdriver.remote.remote_connection:GET http://127.0.0.1:12345/session/23109313-8476-47f2-8f87-b549120e3548 None DEBUG:urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1:12345 DEBUG:urllib3.connectionpool:http://127.0.0.1:12345 ""GET /session/23109313-8476-47f2-8f87-b549120e3548 HTTP/1.1"" 200 492 DEBUG:selenium.webdriver.remote.remote_connection:Finished Request DEBUG:selenium.webdriver.remote.remote_connection:Finished Request ```  ## Environment  OS: Ubuntu 18.04 Browser: N/A Browser version: N/A Browser Driver version: Marathon v5.2.6.0 Language Bindings version: Python 3.141.0 Selenium Grid version (if applicable): N/A </td>               <td>closed</td><td>I-stale,  </td>               <td>jbott </td>               <td>2020-02-26T01:35:29Z</td>               <td>2021-12-03T00:06:49Z</td>               </tr><tr>               <td></td>               <td>8056</td>               <td>unable to Automate Charts/Graphs</td>               <td>## üí¨ Questions and Help  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group </td>               <td>closed</td><td> </td>               <td>sravya-vagalaboina </td>               <td>2020-02-25T17:13:31Z</td>               <td>2020-03-27T08:13:03Z</td>               </tr><tr>               <td></td>               <td>8055</td>               <td>Grid Hub (3.141.59) - Grid Console and status endpoints unresponsive after node terminated/killed</td>               <td>## üêõ Bug Report  Grid Hub Console (``/grid/console``) and ``/wd/hub/status`` unavailable (times out) for a long time (minutes) after a node is killed/terminated.  Note that the length of unavailability differs by infrastructure; with hub and nodes running on the same host in Docker, this lasts for approximately 30 seconds (reproduction scenario below). With hub and nodes running via Docker images but on separate AWS EC2 instances, this lasts for 2-4 _minutes_.  ## To Reproduce  1. Run a Hub instance, preferably using the 3.141.59 Docker image (though this is _not_ specific to Docker). 2. Run a Node instance, either Chrome or Firefox, using the 3.141.59 Docker image (though once again, this is _not_ specific to Docker). Ensure that the Node registers to the Hub and shows up on the Console. 3. Terminate the Node instance. 4. Hub console (``/grid/console``) and status (``/wd/hub/status``) hang/timeout all connections/requests for ~30 seconds. Note that static pages, such as the 404 page for the ``/`` endpoint, serve normally during this time.  Running the same Docker images, but without docker-compose and on separate AWS EC2 Instances, results in a 120-second outage, a short (~5-second) period of responsiveness, and then another 120-second outage.  ## Expected behavior  Nodes disappearing from the grid will not affect the Hub, specifically the Console and definitely not the ``/wd/hub/status`` endpoint (which is used in the official [docker health check script](https://github.com/SeleniumHQ/docker-selenium/blob/master/Base/check-grid.sh)).  _Alternatively, as a workaround,_ a hub API endpoint exists to forcibly, immediately remove a node from the Grid, which can be called by a node just before it terminates.  ## Test script or set of commands reproducing this issue  I've used a [docker-compose](https://docs.docker.com/compose/) file for this for ease of reproduction, but this issue does not appear to be Docker-specific. However, I happen to be deploying Selenium via Docker and that also seems like the best way to reproduce the issue and eliminate as much variability in system configuration as possible.  To reproduce the issue:  1. Save the below docker-compose file somewhere locally as ``docker-compose.yml``. 2. ``docker-compose up`` to start the containers. Ensure that both start and the node registers; verify via http://127.0.0.1:4444/grid/console and http://127.0.0.1:4444/wd/hub/status 3. In another shell/terminal, run: ``while true; do if curl -s -m 5 -o /dev/null http://127.0.0.1:4444/wd/hub/status; then echo ""OK: $(date)""; else echo ""FAIL: $(date)""; fi; sleep 5; done`` 4. In yet another shell, run: ``docker stop node-chrome``  The output of the curl commands will be something like below, where the first FAIL occurs immediately after the node is stopped:  ``` OK: Tue 25 Feb 2020 09:10:38 AM EST OK: Tue 25 Feb 2020 09:10:43 AM EST OK: Tue 25 Feb 2020 09:10:48 AM EST FAIL: Tue 25 Feb 2020 09:10:58 AM EST FAIL: Tue 25 Feb 2020 09:11:08 AM EST FAIL: Tue 25 Feb 2020 09:11:18 AM EST FAIL: Tue 25 Feb 2020 09:11:28 AM EST OK: Tue 25 Feb 2020 09:11:37 AM EST OK: Tue 25 Feb 2020 09:11:45 AM EST OK: Tue 25 Feb 2020 09:11:53 AM EST OK: Tue 25 Feb 2020 09:12:01 AM EST OK: Tue 25 Feb 2020 09:12:09 AM EST ```  The corresponding log output from docker-compose:  ``` selenium-hub    | 14:02:52.932 INFO [DefaultGridRegistry.add] - Registered a node http://172.18.0.3:5555 chrome_1        | 14:02:52.933 INFO [SelfRegisteringRemote.registerToHub] - The node is registered to the hub and ready to use selenium-hub    | 14:02:52.940 DEBUG [RegistrationServlet.lambda$process$0] - proxy added http://172.18.0.3:5555 chrome_1        | Trapped SIGTERM/SIGINT/x so shutting down supervisord... chrome_1        | 2020-02-25 14:10:52,303 WARN received SIGTERM indicating exit request chrome_1        | 2020-02-25 14:10:52,303 INFO waiting for xvfb, selenium-node to die chrome_1        | 2020-02-25 14:10:52,304 INFO stopped: selenium-node (terminated by SIGTERM) chrome_1        | 2020-02-25 14:10:52,305 INFO stopped: xvfb (terminated by SIGTERM) chrome_1        | Shutdown complete grid-ng_chrome_1 exited with code 143 selenium-hub    | 14:12:01.203 DEBUG [DefaultRemoteProxy.isAlive] - Failed to check status of node: No route to host (Host unreachable) selenium-hub    | 14:12:09.257 DEBUG [DefaultRemoteProxy.isAlive] - Failed to check status of node: No route to host (Host unreachable) selenium-hub    | 14:12:09.257 INFO [DefaultRemoteProxy.onEvent] - Marking the node http://172.18.0.3:5555 as down: cannot reach the node for 2 tries selenium-hub    | 14:12:17.310 DEBUG [DefaultRemoteProxy.isAlive] - Failed to check status of node: No route to host (Host unreachable) selenium-hub    | 14:12:25.363 DEBUG [DefaultRemoteProxy.isAlive] - Failed to check status of node: No route to host (Host unreachable) selenium-hub    | 14:12:33.416 DEBUG [DefaultRemoteProxy.isAlive] - Failed to check status of node: No route to host (Host unreachable) selenium-hub    | 14:12:41.470 DEBUG [DefaultRemoteProxy.isAlive] - Failed to check status of node: No route to host (Host unreachable) selenium-hub    | 14:12:49.523 DEBUG [DefaultRemoteProxy.isAlive] - Failed to check status of node: No route to host (Host unreachable) selenium-hub    | 14:12:57.577 DEBUG [DefaultRemoteProxy.isAlive] - Failed to check status of node: No route to host (Host unreachable) selenium-hub    | 14:13:05.630 DEBUG [DefaultRemoteProxy.isAlive] - Failed to check status of node: No route to host (Host unreachable) selenium-hub    | 14:13:13.683 DEBUG [DefaultRemoteProxy.isAlive] - Failed to check status of node: No route to host (Host unreachable) selenium-hub    | 14:13:13.683 INFO [DefaultRemoteProxy.onEvent] - Unregistering the node http://172.18.0.3:5555 because it's been down for 64426 milliseconds selenium-hub    | 14:13:13.684 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.18.0.3:5555 ```  ### docker compose file  ```yaml version: ""3"" services:   selenium-hub:     image: selenium/hub:3.141.59     container_name: selenium-hub     ports:       - ""4444:4444""     environment:       - SE_OPTS=-debug   chrome:     image: selenium/node-chrome:3.141.59     container_name: node-chrome     volumes:       - /dev/shm:/dev/shm     depends_on:       - selenium-hub     environment:       - HUB_HOST=selenium-hub       - HUB_PORT=4444       - SE_OPTS=-servlets org.openqa.grid.web.servlet.LifecycleServlet ```  ### Alternate Issue Reproduction in AWS EC2  1. Start an EC2 instance from the Amazon Linux 2 AMI, in a private subnet of a VPC. We'll call this ""HUB_INSTANCE"". Apply security groups to allow access to port 4444 from the VPC. 2. On this instance, ``docker run --net bridge -m 0b -e ""SE_OPTS=-debug"" -p 4444:4444 selenium/hub:3.141.59`` 3. Verify that http://HUB_INSTANCE_IP:4444/grid/console and http://HUB_INSTANCE_IP:4444/wd/hub/status are available. 4. Start a second EC2 instance from the Amazon Linux 2 AMI, in the same private subnet of a VPC. We'll call this ""NODE_INSTANCE"". Apply security groups to allow access to port 5555 from the VPC. 5. On this instance, ``docker run --net bridge -m 0b -e ""REMOTE_HOST=http://<NODE_INSTANCE IP>:5555"" -e ""HUB_HOST=<HUB_INSTANCE IP>"" -e ""HUB_PORT=4444"" -p 5555:5555 -v /dev/shm:/dev/shm selenium/node-chrome:3.141.59`` 6. Verify that http://HUB_INSTANCE_IP:4444/grid/console shows the node instance connected and http://HUB_INSTANCE_IP:4444/wd/hub/status is available. 7. On a third instance (or locally if you have VPN into your VPC), run: ``while true; do if curl -s -m 5 -o /dev/null http://<HUB_INSTANCE IP>:4444/wd/hub/status; then echo ""OK: $(date)""; else echo ""FAIL: $(date)""; fi; sleep 5; done`` 8. Terminate NODE_INSTANCE: ``aws ec2 terminate-instances --instance-ids <NODE_INSTANCE ID>``  The ``/wd/hub/status`` endpoint becomes unreachable for XXX seconds, as shown below (output from command in step 7). Requests to ``/grid/console`` similarly timeout.  ``` OK: Tue 25 Feb 2020 11:54:43 AM EST OK: Tue 25 Feb 2020 11:54:48 AM EST OK: Tue 25 Feb 2020 11:54:53 AM EST FAIL: Tue 25 Feb 2020 11:55:03 AM EST FAIL: Tue 25 Feb 2020 11:55:13 AM EST FAIL: Tue 25 Feb 2020 11:55:23 AM EST FAIL: Tue 25 Feb 2020 11:55:33 AM EST FAIL: Tue 25 Feb 2020 11:55:43 AM EST FAIL: Tue 25 Feb 2020 11:55:53 AM EST FAIL: Tue 25 Feb 2020 11:56:03 AM EST FAIL: Tue 25 Feb 2020 11:56:13 AM EST FAIL: Tue 25 Feb 2020 11:56:23 AM EST FAIL: Tue 25 Feb 2020 11:56:33 AM EST FAIL: Tue 25 Feb 2020 11:56:43 AM EST FAIL: Tue 25 Feb 2020 11:56:53 AM EST FAIL: Tue 25 Feb 2020 11:57:03 AM EST FAIL: Tue 25 Feb 2020 11:57:13 AM EST FAIL: Tue 25 Feb 2020 11:57:23 AM EST FAIL: Tue 25 Feb 2020 11:57:33 AM EST FAIL: Tue 25 Feb 2020 11:57:43 AM EST FAIL: Tue 25 Feb 2020 11:57:53 AM EST FAIL: Tue 25 Feb 2020 11:58:03 AM EST FAIL: Tue 25 Feb 2020 11:58:13 AM EST FAIL: Tue 25 Feb 2020 11:58:23 AM EST FAIL: Tue 25 Feb 2020 11:58:33 AM EST FAIL: Tue 25 Feb 2020 11:58:43 AM EST FAIL: Tue 25 Feb 2020 11:58:53 AM EST FAIL: Tue 25 Feb 2020 11:59:03 AM EST FAIL: Tue 25 Feb 2020 11:59:13 AM EST FAIL: Tue 25 Feb 2020 11:59:23 AM EST OK: Tue 25 Feb 2020 11:59:28 AM EST OK: Tue 25 Feb 2020 11:59:33 AM EST OK: Tue 25 Feb 2020 11:59:38 AM EST ```  The hub's logs are as follows:  ``` 11:47:46.541 INFO [DefaultGridRegistry.add] - Registered a node http://10.230.92.112:5555 11:47:46.542 DEBUG [RegistrationServlet.lambda$process$0] - proxy added http://10.230.92.112:5555 # Terminated instance here 11:54:51.851 DEBUG [DefaultRemoteProxy.isAlive] - Failed to check status of node: Failed to connect to /10.230.92.112:5555 11:57:06.811 DEBUG [DefaultRemoteProxy.isAlive] - Failed to check status of node: Failed to connect to /10.230.92.112:5555 11:57:06.811 INFO [DefaultRemoteProxy.onEvent] - Marking the node http://10.230.92.112:5555 as down: cannot reach the node for 2 tries 11:59:21.979 DEBUG [DefaultRemoteProxy.isAlive] - Failed to check status of node: Failed to connect to /10.230.92.112:5555 11:59:21.979 INFO [DefaultRemoteProxy.onEvent] - Unregistering the node http://10.230.92.112:5555 because it's been down for 135168 milliseconds 11:59:21.979 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://10.230.92.112:5555 ```  ## Environment  OS: Amazon Linux 2 Browser: N/A Browser version: N/A Browser Driver version: N/A Language Bindings version: N/A Selenium Grid version (if applicable): 3.141.59  ## PS  I _think_ this issue might be a duplicate of https://github.com/SeleniumHQ/docker-selenium/issues/113 which says, in [this comment](https://github.com/SeleniumHQ/docker-selenium/issues/113#issuecomment-401122046) that it was caused by ""a regression introduced in selenium > 3.8, should be fixed in 3.13"". But 3.13 was quite a while before 3.141.59.</td>               <td>closed</td><td>C-grid,  </td>               <td>jantman </td>               <td>2020-02-25T17:05:46Z</td>               <td>2021-09-05T10:20:30Z</td>               </tr><tr>               <td></td>               <td>8054</td>               <td>Add: Added Missing 'fileUploadDialogTimeout' capability in JS bindings</td>               <td> ### Description While writing the selenium doc, i have observed this capability was missing in JS bindings  ### Types of changes <!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: --> - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist <!--- Go over all the following points, and put an `x` in all the boxes that apply. --> <!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! --> - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed. <!--- Provide a general summary of your changes in the Title above --> </td>               <td>closed</td><td>C-nodejs,  </td>               <td>harsha509 </td>               <td>2020-02-25T16:45:15Z</td>               <td>2020-04-03T08:41:25Z</td>               </tr><tr>               <td></td>               <td>8053</td>               <td>Python remote_connection.py should honour proxy settings. </td>               <td>## üöÄ Feature Proposal  Python `remote_connection.py ` should honour proxy settings.  Currently `selenium/webdriver/remote/remote_connection.py` uses urllib3.PoolManager to create a connection. Instead we should use urllib3.ProxyManager such that the proxy settings can be passed.   ## Motivation  As of now we cannot pass the proxy details to the remote_connection   ## Example  If the client is behind the firewall, we have to make the request through a proxy. As of now, it is not possible if the test cases are in python </td>               <td>closed</td><td>C-py,  </td>               <td>pkvprakash </td>               <td>2020-02-25T10:32:39Z</td>               <td>2021-09-05T10:02:49Z</td>               </tr><tr>               <td></td>               <td>8052</td>               <td>Python remote_connection.py should honour proxy settings</td>               <td>Python `remote_connection.py ` should honour proxy settings.  Currently `selenium/webdriver/remote/remote_connection.py` uses urllib3.PoolManager to create a connection. Instead we should use urllib3.ProxyManager such that the proxy settings can be passed.  </td>               <td>closed</td><td> </td>               <td>pkvprakash </td>               <td>2020-02-25T10:29:22Z</td>               <td>2020-03-27T08:13:14Z</td>               </tr><tr>               <td></td>               <td>8051</td>               <td>Using Selenium in Java (Selenium only Supports v81)</td>               <td>## üí¨ Questions and Help `Exception in thread ""main"" org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 81`  ```     <!-- https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java -->     <dependency>       <groupId>org.seleniumhq.selenium</groupId>       <artifactId>selenium-java</artifactId>       <version>4.0.0-alpha-4</version>     </dependency> ```  But im using v81 ( https://chromedriver.storage.googleapis.com/index.html?path=81.0.4044.20/ ) ? What am i doing wrong?  ```         System.setProperty(""webdriver.chrome.driver"", SeleniumConsts.CHROMEDRIVER);         WebDriver driver = new ChromeDriver(); ```  Chrome gets started so the path is right i guess, but it instant closes when the programm crashes on new ChromeDriver  `    public static final String CHROMEDRIVER = ""C:\\chromedriver_win32\\chromedriver.exe""; `  Ty in advanced</td>               <td>closed</td><td> </td>               <td>NiklasHoltmeyer </td>               <td>2020-02-25T08:52:59Z</td>               <td>2020-03-27T08:13:22Z</td>               </tr><tr>               <td></td>               <td>8050</td>               <td>until TypeError: unsupported operand type(s)</td>               <td>## üêõ Bug Report  I am trying to wait for element clickable.  ```elements.py```  ```python     def wait_for_element_clickable(self, locator: tuple, timeout=25):         return WebDriverWait(self._driver, timeout).until(             exp_con.element_to_be_clickable(locator)) ```  ```login_page.py```  ```python     def to_account(self):             self.wait_for_element_clickable(*LoginPageLocators.ACCOUNT_BUTTON) ```  ```ERROR from console```  ```python     def until(self, method, message=''):         """"""Calls the method provided with the driver as an argument until the \         return value is not False.""""""         screen = None         stacktrace = None      >       end_time = time.time() + self._timeout E       TypeError: unsupported operand type(s) for +: 'float' and 'str'  ```  ## Environment  OS: Windows 10 Browser: Chrome Browser version: 80 Language Bindings version: Python 3.7.5  Selenium Grid version (if applicable): 3.141.59 </td>               <td>closed</td><td>needs-triaging,  </td>               <td>Gadzillion </td>               <td>2020-02-24T19:02:08Z</td>               <td>2020-03-27T08:13:32Z</td>               </tr><tr>               <td></td>               <td>8049</td>               <td>Hang in `within_frame`, specifically `driver.switch_to_frame(:parent)` in nested iframes</td>               <td>## üí• Regression Report  Details from https://github.com/teamcapybara/capybara/issues/2318  ## Last working Selenium version  Worked up to version: chromedriver v79  Stopped working in version: chromedriver v80  ## To Reproduce  Outlined in linked issue.  ## Expected behavior  I'm not really sure. If the parent iframe is gone, how should returning to the parent work?  ## Test script reproducing this issue (when applicable)  Sample code given in linked issue.  ## Environment  OS: Linux Browser: Chrome / ChromeDriver Browser version: chrome=80.0.3987.116 Language Bindings version: Latest Capybara  Maybe related to https://github.com/SeleniumHQ/selenium/issues/8017 </td>               <td>closed</td><td>C-rb,  </td>               <td>ioquatix </td>               <td>2020-02-23T23:28:06Z</td>               <td>2021-09-05T10:20:21Z</td>               </tr><tr>               <td></td>               <td>8048</td>               <td>bad inspector message. Maybe it's an unicode error.</td>               <td>## üêõ Bug Report  https://github.com/SeleniumHQ/selenium/issues/7359#issue-464456503  ## To Reproduce You can reproduce the error on the page below. https://twitter.com/APRIL_DSPmedia/status/1192428952742027264 Go to the page, and print the text. I used python. print(driver.find_element_by_xpath(""//article"").text)  The last character cause the error. Maybe it's U+16910.  ## Expected behavior You can campare the result with that of other page like below. https://twitter.com/APRIL_DSPmedia/status/1230466099193376769    ## Environment  OS: Windows 10 Browser:  Chrome </td>               <td>closed</td><td> </td>               <td>starfruit135 </td>               <td>2020-02-21T11:01:35Z</td>               <td>2020-03-22T12:12:37Z</td>               </tr><tr>               <td></td>               <td>8047</td>               <td>Make ErrorHandling more abstract and extendable to customize the error handling behavior in check_response</td>               <td>## üöÄ Feature Proposal  As a Selenium user, I want to be able to inject my own ErrorHandler into the webdriver or in some way override the default behavior of check_response to throw exceptions so that I can handle errors in a more reactive way than catching the exception at the higher level.   ## Motivation  As modern ui becomes more reactive in DOM state changes, the old model of Selenium re-fetching elements becomes less reliable. As the underlying element can be retroactively added, removed from, or updated underneath the web element. This forces you to have to re-fetch the element. In the context of a page object, the entire page has to be refreshed.   I don't think this is an ideal approach. I should only have to load the one element that I want and only if it does not fit my base conditions for evaluating it. Furthermore, I should only have to fetch the one element I want to evaluate on the page at that time. There are some workarounds to this issue, such as using explicit waits or wrapping the element in a fetch inside the page object, but the Expected Conditions do not handle staleness well in the first place, opting to catch the exception when thrown and fetching functions do not take into count whether or not the element is already been fetched and is still fresh.  I want to be able to use the element to execute higher order operations without having to worry about refetching if the element goes stale. The element should be to refresh itself. From my own prodding around in the code, I can do this with my own wrapper around elements if I can prevent the ErrorHandler from throwing/raising the exception in check_response or by having the option to pass in my own ErrorHandler that does not throw/raise the exception in its own implementation. But looking at the webdriver.py and the error_handler.py, I cannot do either currently. The ErrorHandler is created as a dependency within the RemoteWebDriver rather than injecting via the constructor and the check_response explicitly throws an exception if the server returns one.  I could also just write my own request to the server, but then I would have to re-implement the rest of the logic in webdriver.execute. Reinventing the wheel is not ideal.   ## Example  My best example is touched on in the Motivation. If I can leverage my own custom error handling to not throw the exception, I can then handle stale elements in a more modular way. I do not have to refresh entire page objects and can lazily fetch my element when it's time to fetch it (i.e. when it's gone stale and needs to be re-fetched), abstract away the calls to re-fetch the element, and handle this without throwing/catching exceptions.  Another potential use case for this is NoSuchElementExceptions. So instead of having explicit waits for the presence of an element, the explicit waiting could be abstracted away to make fetching elements more fluent and capable of working in reactive front-ends.</td>               <td>closed</td><td>needs-triaging,  </td>               <td>SVaeth </td>               <td>2020-02-20T22:53:44Z</td>               <td>2020-04-15T08:02:17Z</td>               </tr><tr>               <td></td>               <td>8046</td>               <td>Access Denied, Selenium</td>               <td>PermissionError: [WinError 5] Access is denied  During handling of the above exception, another exception occurred:   File ""C:\Users\Simran Verma\AppData\Local\Programs\Python\Python37-32\lib\site-packages\selenium\webdriver\common\service.py"", line 88, in start     os.path.basename(self.path), self.start_error_message) selenium.common.exceptions.WebDriverException: Message: 'downloads' executable may have wrong permissions.  I am trying to download images, and unable to because of this error</td>               <td>closed</td><td> </td>               <td>simmranvermaa </td>               <td>2020-02-20T15:41:42Z</td>               <td>2020-03-21T20:17:42Z</td>               </tr><tr>               <td></td>               <td>8044</td>               <td>Ruby: `w3c: true` broke entering key combination (like [:control, 'a'])</td>               <td>## üêõ Bug Report  Enabling `w3c: true` will not allow pressing key combination like `[:control, 'a']`  ## To Reproduce  ``` require 'selenium-webdriver'  def browser_action(w3c_disabled)   caps = Selenium::WebDriver::Remote::Capabilities.chrome   caps['chromeOptions'] = { w3c: w3c_disabled }   service = Selenium::WebDriver::Chrome::Service.new(path: '/tmp/chromedriver_80.0.3987.16')   webdriver_options = { options: Selenium::WebDriver::Chrome::Options.new,                         desired_capabilities: caps,                         service: service }   driver = Selenium::WebDriver.for :chrome, webdriver_options   driver.navigate.to('https://github.com/login')   driver.action.send_keys([:control, 'a']).perform   value = driver.find_element(:xpath, '//*[@id=""login_field""]').attribute('value')   driver.quit   value end  puts ""With w3c disabled: #{browser_action(false)}"" puts ""With w3c enabled: #{browser_action(true)}"" ```  ## Result ``` With w3c disabled:  With w3c enabled: a ``` This is simplified test example, but this problem actual for web apps which support hotkeys (for example selecting all files on web document manager)   ## Environment  OS: Kubuntu 18.04 Browser: Chrome  Browser version: 80.0.3987.116-1 Browser Driver version: 80.0.3987.16 Language Bindings version: Ruby 2.6.5p114 </td>               <td>closed</td><td>C-rb,  </td>               <td>ShockwaveNN </td>               <td>2020-02-20T15:19:48Z</td>               <td>2020-05-20T22:45:45Z</td>               </tr><tr>               <td></td>               <td>8043</td>               <td>Fixed typo in JS code in AlertOverride</td>               <td>Changed the __webdriverPrompt to __webdriverPrompts in the window.prompt function.  <!-- NOTE Please be aware that the Selenium Grid 3.x is being deprecated in favour of the upcoming version 4.x. We won't be receiving any PRs related to the Grid 3.x code. Thanks! -->  **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.   <!--- Provide a general summary of your changes in the Title above -->  ### Description <!--- Describe your changes in detail -->  ### Motivation and Context <!--- Why is this change required? What problem does it solve? -->  ### Types of changes <!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: --> - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist <!--- Go over all the following points, and put an `x` in all the boxes that apply. --> <!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! --> - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed. <!--- Provide a general summary of your changes in the Title above --> </td>               <td>closed</td><td> </td>               <td>havja </td>               <td>2020-02-20T15:07:01Z</td>               <td>2020-02-28T09:21:21Z</td>               </tr><tr>               <td></td>               <td>8042</td>               <td>Input With Onchange Event That Triggers A Postback, Fails When Using Selenlium IDE Type Command</td>               <td>Using Type command is causing post-back and removing focus from textbox where testing element for a second time on same test run with Selenium IDE.  .Net Textbox with autopostback=true (page is automatically submitted if the content of the textbox has changed and you are returned to the same page)  Type command causes additional postback if textbox contains data.  await driver.findElement(By.css(.sid-fd2_Q_2)).then(element => { return element.clear().then(() => { return element.sendKeys(2); }); });  Both the element.clear and the element.sendKeys remove focus from the textbox. This will cause a post-back if the content of the textbox has changed. If this post-back fires element for the sendKeys will no longer be valid (different page) The generated code should be allowing the element to be relocated in case of a post-back  await driver.findElement(By.css(.sid-fd2_Q_2)).then(element => { return element.clear(); });  await driver.findElement(By.css(.sid-fd2_Q_2)).then(element => { return element.sendKeys(2); });  Thanks Rocktime.  ## üêõ Bug Report  A clear and concise description of what the bug is.  <!-- NOTE FIREFOX 48+ IS ONLY COMPATIBLE WITH GECKODRIVER.  If the issue is with Google Chrome consider logging an issue with chromedriver instead: https://chromedriver.chromium.org/help  If the issue is with Firefox GeckoDriver (aka Marionette) consider logging an issue with Mozilla: https://bugzilla.mozilla.org/buglist.cgi?product=Testing&component=Marionette  If the issue is with Microsoft Edge consider logging an issue with Microsoft instead: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/  If the issue is with Safari, only Safari 10+ is supported. Please log any Safari issue with Apple: https://bugreport.apple.com/  -->  ## To Reproduce  <!-- Please be sure to include an SSCCE (Short, Self Contained, Correct [compilable] example) http://sscce.org/ If you can't provide a link to the page, consider creating a reproducible page on https://jsfiddle.net/ -->  Detailed steps to reproduce the behavior:  ## Expected behavior  A clear and concise description of what you expected to happen.  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS: <!-- Windows 10? OSX? --> Browser: <!-- Chrome? Safari?  --> Browser version: <!-- e.g.: 70.0.3538.110 --> Browser Driver version: <!-- e.g.: ChromeDriver 2.43, GeckoDriver 0.23 --> Language Bindings version: <!-- e.g.: Java 3.141.0 -->  Selenium Grid version (if applicable): <!-- e.g.: 3.141.59 -->  </td>               <td>closed</td><td> </td>               <td>RocktimeLtd </td>               <td>2020-02-20T14:51:06Z</td>               <td>2020-03-21T20:17:57Z</td>               </tr><tr>               <td></td>               <td>8041</td>               <td>Cannot allocate WebAssembly memory with ulimit set</td>               <td>## üêõ Bug Report  When ulimit -v is set to almost any value smaller than the total amount of system memory, no memory can be allocated for WebAssembly when controlled by selenium-webdriver.  ## To Reproduce  Selenium barebones set-up:  ``` 'use strict'; const webdriver = require('selenium-webdriver'); require('chromedriver'); const chrome = require('selenium-webdriver/chrome');  let init = () => {     let chromeOptions = new chrome.Options().setUserPreferences()         .addArguments('start-maximised')         .addArguments('window-size=1920,1080')         .addArguments('auto-open-devtools-for-tabs');     new webdriver.Builder()         .forBrowser(""chrome"")         .setChromeOptions(chromeOptions)         .build(); };  init(); ```  Run through these steps in two ways, first with `ulimit -v unlimited`, second with a reasonable limit, say 8000000 for a system with 16GB RAM.  1. Launch selenium with the above set-up 2. In devtools, type : `new WebAssembly.Memory({initial: 8})`  With no ulimit -v (unlimited), this should work and return a Memory{}. With ulimit set to reasonable values (say half your total RAM), it will fail with : ``` VM49:1 Uncaught RangeError: WebAssembly.Memory(): could not allocate memory     at <anonymous>:1:1 ```  ## Expected behavior  Reasonable ulimits on virtual memory should allow for WebAssembly memory allocation. In this case, `ulimit -v 8000000` should allow for WebAssembly to allocate an ArrayBuffer of 8 bytes.  ## Environment Reproducible on Firefox & Chrome, so I don't think it's Chromedriver/Geckodriver-specific.  **OS**: Tested on Fedora31, Linux Mint 19.0, Linux Mint 18.2, Ubuntu 16.04 **Browser**: Chrome/Firefox **Browser version**: Chrome 78, Chrome 79, Firefox 73 **Browser Driver version**: ChromeDriver 78.0.3904.70, ChromeDriver 79.0.3945.36, geckodriver 0.26.0 **Language Bindings version**: JavaScript V8 7.8.279.23  </td>               <td>closed</td><td>needs-triaging,  </td>               <td>xml-js-dev </td>               <td>2020-02-20T14:29:02Z</td>               <td>2020-04-04T16:06:49Z</td>               </tr><tr>               <td></td>               <td>8040</td>               <td>Selenium IDE CLR Loss of Focus From Textbox</td>               <td>Using either Type or Sendkeys causing post-back and removing focus from textbox where testing element for a second time on same test run.   .Net Textbox with autopostback=true (page is automatically submitted if the content of the textbox has changed and you are returned to the same page)  Type command causes additional postback if textbox contains data.    await driver.findElement(By.css(`.sid-fd2_Q_2`)).then(element => {     return element.clear().then(() => {       return element.sendKeys(`2`);     });   });  Both the element.clear and the element.sendKeys remove focus from the textbox. This will cause a post-back if the content of the textbox has changed. If this post-back fires element for the sendKeys will no longer be valid (different page) The generated code should be allowing the element to be relocated in case of a post-back    await driver.findElement(By.css(`.sid-fd2_Q_2`)).then(element => {     return element.clear();   });    await driver.findElement(By.css(`.sid-fd2_Q_2`)).then(element => {     return element.sendKeys(`2`);   });  Thanks Rocktime.   ## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group </td>               <td>closed</td><td> </td>               <td>RocktimeLtd </td>               <td>2020-02-20T13:07:22Z</td>               <td>2020-03-21T20:18:07Z</td>               </tr><tr>               <td></td>               <td>8039</td>               <td>gem does not have a tag</td>               <td>## üêõ Bug Report  Released gem `selenium-webdriver-3.142.7` on rubygems.org does not have a corresponding git tag in this repo.  Please create it.  Thanks!</td>               <td>closed</td><td>needs-triaging,  </td>               <td>pvalena </td>               <td>2020-02-18T21:25:25Z</td>               <td>2020-04-25T08:17:32Z</td>               </tr><tr>               <td></td>               <td>8038</td>               <td>InsecureCertificateException rasied with remote firefox (via selenium grid)</td>               <td>## üêõ Bug Report  Attempt to access site with self-signed certificate using Selenium Grid 3.9.1 and Firefox (tried versions 68.5.0esr & 73.0 and Geckodriver 0.26 results in InsecureCertificateException. Issue not seen when running the same test locally (with Firefox 73.0).  <!-- NOTE FIREFOX 48+ IS ONLY COMPATIBLE WITH GECKODRIVER.  If the issue is with Google Chrome consider logging an issue with chromedriver instead: https://chromedriver.chromium.org/help  If the issue is with Firefox GeckoDriver (aka Marionette) consider logging an issue with Mozilla: https://bugzilla.mozilla.org/buglist.cgi?product=Testing&component=Marionette  If the issue is with Microsoft Edge consider logging an issue with Microsoft instead: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/  If the issue is with Safari, only Safari 10+ is supported. Please log any Safari issue with Apple: https://bugreport.apple.com/  -->  ## To Reproduce  Minmal working pytest test that works when run locally but fails when run with Selenium Grid and Firefox.   <!-- Please be sure to include an SSCCE (Short, Self Contained, Correct [compilable] example) http://sscce.org/ If you can't provide a link to the page, consider creating a reproducible page on https://jsfiddle.net/ -->  **Detailed steps to reproduce the behavior:** Requires selenium grid with firefox (geckodriver 0.26), pytest & pytest-selenium.  Execute the pytest test locally with `--driver firefox` and against the grid with `--driver Remote --host mygridserver.local --port 4444 --capability browserName firefox` .   ## Expected behavior  Firefox should accept the self signed ssl certificate when running via Selenium grid.  Passes locally - fails remotely. Note: Chrome works both locally and remotely.  ## Test script or set of commands reproducing this issue  ``` import pytest  """"""Test for issue with remote firefox driver and acceptInsecureCerts Firefox: Local invocation 'pytest test_remote_ssl.py --driver firefox': Pass Remote invocation 'pytest test_remote_ssl.py --driver Remote --host mygridserver.local --port 4444 --capability browserName firefox': Fail  Chrome: Local invocation 'pytest test_remote_ssl.py --driver chrome': Pass Remote invocation 'pytest test_remote_ssl.py --driver Remote --host mygridserver.local --port 4444 --capability browserName chrome': Pass   Fixture for pytest-selenium firefox_options is probably unnecessary as this should be the default behaviour Works with or without when run locally  Fixture for pytest-selenium chrome_options is necessary as test fails when run remotely without """"""   @pytest.fixture def firefox_options(firefox_options):     firefox_options.set_preference('acceptInsecureCerts', True)     return firefox_options   @pytest.fixture def chrome_options(chrome_options):     chrome_options.add_argument('--ignore-certificate-errors')     return chrome_options   def test_self_signed_ssl(selenium):     selenium.get('https://self-signed.host.badssl.com')     assert ""self-signed"" in selenium.title ```  ## Environment  OS: Windows 10 Browser: Firefox Browser version: tried 73.0 & 68.5.0esr Browser Driver version: GeckoDriver 0.26 Language Bindings version: 3.141.0 Selenium Grid version (if applicable): 3.9.1 </td>               <td>closed</td><td>C-remote,  </td>               <td>MarkJB </td>               <td>2020-02-18T17:32:14Z</td>               <td>2020-05-20T19:14:25Z</td>               </tr><tr>               <td></td>               <td>8037</td>               <td>Chromium Profile while Launching</td>               <td>Hi All,   My organisation recently shifted to new Edge Chromium and when I am using Selenium to launch the browser it launches without my profile, and that impacts the SSO.  What could we check on to help fix this?  Thanks. </td>               <td>closed</td><td> </td>               <td>aranya175 </td>               <td>2020-02-18T13:39:20Z</td>               <td>2020-03-21T20:18:17Z</td>               </tr><tr>               <td></td>               <td>8036</td>               <td>Compatibility Check</td>               <td>## üöÄ Feature Proposal  Verifying if the versions of Selenium, Selenium Server, JDK, Browser Drivers, Browsers, etc., are all compatible is always a challenge for the Automation Testers. To throw a warning message saying that the things might not work well because of the incompatible version of any of the respective files/tools. At least having these documented somewhere will surely help.  ## Motivation  There is no single place that documents it. I think we need to have the Selenium to do a quick check before initializing the browser. Make the drivers to mandatory specify what browser versions they support, and then use this information at runtime.  ## Example  This definitely helps since the Browser versions were never constant. </td>               <td>closed</td><td>needs-triaging,  </td>               <td>clingwithderrick </td>               <td>2020-02-18T10:25:50Z</td>               <td>2020-04-04T12:54:43Z</td>               </tr><tr>               <td></td>               <td>8035</td>               <td>Seeing browser start up failures when testing on selenium grid</td>               <td>org.openqa.selenium.remote.UnreachableBrowserException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure. Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03' System info: host: 'DESKTOP-37JVVAA', ip: '199.254.9.005', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181' Driver info: driver.version: Driver at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:573) at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213) at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:131) at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:144) at automationFramework.Driver.startWebDriver(Driver.java:80)  Caused by: java.io.IOException: unexpected end of stream on Connection{grid-selenium-hub.es-selenium-use.us-east-1.acceptance.com:4444, proxy=DIRECT hostAddress=grid-selenium-hub.es-selenium-use.us-east-1.acceptance.com/12.55.42.001:4444 cipherSuite=none protocol=http/1.1} at okhttp3.internal.http1.Http1Codec.readResponseHeaders(Http1Codec.java:208) at okhttp3.internal.http.CallServerInterceptor.intercept(CallServerInterceptor.java:88) at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)  Hub has following config: { ""browserTimeout"": 0, ""capabilityMatcher"": ""org.openqa.grid.internal.utils.DefaultCapabilityMatcher"", ""cleanUpCycle"": 5000, ""custom"": { }, ""debug"": false, ""host"": ""90.395.99.144"", ""jettyMaxThreads"": -1, ""newSessionRequestCount"": 0, ""newSessionWaitTimeout"": -1, ""port"": 4444, ""registry"": ""org.openqa.grid.internal.DefaultGridRegistry"", ""role"": ""hub"", ""servlets"": [ ], ""slotCounts"": { ""free"": 10, ""total"": 10 }, ""success"": true, ""throwOnCapabilityNotPresent"": true, ""timeout"": 1800, ""withoutServlets"": [ ] } Node has following:  browserTimeout: 0 debug: false jettyMaxThreads: -1 host: 90.115.91.25:5555 port: 5555 role: node timeout: 1800 cleanUpCycle: 5000 maxSession: 1 capabilities: Capabilities {applicationName: , browserName: chrome, maxInstances: 1, platform: LINUX, platformName: LINUX, seleniumProtocol: WebDriver, server:CONFIG_UUID: 277ded26-3931-42ec-b9e6-a6b..., version: 79.0.3945.117} downPollingLimit: 2 hub: http://selenium-grid-selenium-hub:4444/grid/register id: http://90.115.91.25:5555 nodePolling: 5000 nodeStatusCheckTimeout: 5000 proxy: org.openqa.grid.selenium.proxy.DefaultRemoteProxy register: true registerCycle: 5000 remoteHost: http://90.115.91.25:5555 unregisterIfStillDownAfter: 60000  Driver has following code          ChromeOptions options = new ChromeOptions();         options.addArguments(""start-maximized"");         options.addArguments(""--disable-infobars"");         options.addArguments(""--disable-extensions"");         options.addArguments(""chrome.switches"", ""--disable-extensions"");         options.addArguments(""--disable-gpu"");         options.addArguments(""--disable-dev-shm-usage"");         options.addArguments(""--no-sandbox"");         options.addArguments(""--disable-notifications"");         options.addArguments(""--disable-popup-blocking"");         options.addArguments(""enable-automation"");         options.addArguments(""--disable-dev-shm-usage"");         options.addArguments(""--disable-browser-side-navigation"");         options.addArguments(""--dns-prefetch-disable"");             options.setExperimentalOption(""useAutomationExtension"", false);             DesiredCapabilities capabilities = DesiredCapabilities.chrome();             capabilities.setCapability(ChromeOptions.CAPABILITY, options);             world.driver = new RemoteWebDriver(new URL(AWS_URL), options); world.driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS); We recently created grid on aws and see this issue for some of the pods(which is working fine earlier), though its same hub URL for all  Note: Changes ip's/urls for security reasons</td>               <td>closed</td><td> </td>               <td>pkundarapu </td>               <td>2020-02-18T05:12:33Z</td>               <td>2020-03-21T20:18:27Z</td>               </tr><tr>               <td></td>               <td>8034</td>               <td>Seeing browser start up failures when testing on grid</td>               <td>org.openqa.selenium.remote.UnreachableBrowserException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure. Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03' System info: host: 'DESKTOP-37JVVAA', ip: '199.254.9.005', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181' Driver info: driver.version: Driver at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:573) at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213) at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:131) at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:144) at automationFramework.Driver.startWebDriver(Driver.java:80)  Caused by: java.io.IOException: unexpected end of stream on Connection{grid-selenium-hub.es-selenium-use.us-east-1.acceptance.com:4444, proxy=DIRECT hostAddress=grid-selenium-hub.es-selenium-use.us-east-1.acceptance.com/12.55.42.001:4444 cipherSuite=none protocol=http/1.1} at okhttp3.internal.http1.Http1Codec.readResponseHeaders(Http1Codec.java:208) at okhttp3.internal.http.CallServerInterceptor.intercept(CallServerInterceptor.java:88) at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)  Hub has following config: {   ""browserTimeout"": 0,   ""capabilityMatcher"": ""org.openqa.grid.internal.utils.DefaultCapabilityMatcher"",   ""cleanUpCycle"": 5000,   ""custom"": {   },   ""debug"": false,   ""host"": ""90.395.99.144"",   ""jettyMaxThreads"": -1,   ""newSessionRequestCount"": 0,   ""newSessionWaitTimeout"": -1,   ""port"": 4444,   ""registry"": ""org.openqa.grid.internal.DefaultGridRegistry"",   ""role"": ""hub"",   ""servlets"": [   ],   ""slotCounts"": {     ""free"": 10,     ""total"": 10   },   ""success"": true,   ""throwOnCapabilityNotPresent"": true,   ""timeout"": 1800,   ""withoutServlets"": [   ] } Node has following:  browserTimeout: 0 debug: false jettyMaxThreads: -1 host: 90.115.91.25:5555 port: 5555 role: node timeout: 1800 cleanUpCycle: 5000 maxSession: 1 capabilities: Capabilities {applicationName: , browserName: chrome, maxInstances: 1, platform: LINUX, platformName: LINUX, seleniumProtocol: WebDriver, server:CONFIG_UUID: 277ded26-3931-42ec-b9e6-a6b..., version: 79.0.3945.117} downPollingLimit: 2 hub: http://selenium-grid-selenium-hub:4444/grid/register id: http://90.115.91.25:5555 nodePolling: 5000 nodeStatusCheckTimeout: 5000 proxy: org.openqa.grid.selenium.proxy.DefaultRemoteProxy register: true registerCycle: 5000 remoteHost: http://90.115.91.25:5555 unregisterIfStillDownAfter: 60000  Driver has following code              ChromeOptions options = new ChromeOptions();             options.addArguments(""start-maximized"");             options.addArguments(""--disable-infobars"");             options.addArguments(""--disable-extensions"");             options.addArguments(""chrome.switches"", ""--disable-extensions"");             options.addArguments(""--disable-gpu"");             options.addArguments(""--disable-dev-shm-usage"");             options.addArguments(""--no-sandbox"");             options.addArguments(""--disable-notifications"");             options.addArguments(""--disable-popup-blocking"");             options.addArguments(""enable-automation"");             options.addArguments(""--disable-dev-shm-usage"");             options.addArguments(""--disable-browser-side-navigation"");             options.addArguments(""--dns-prefetch-disable"");                 options.setExperimentalOption(""useAutomationExtension"", false);                 DesiredCapabilities capabilities = DesiredCapabilities.chrome();                 capabilities.setCapability(ChromeOptions.CAPABILITY, options);                 world.driver = new RemoteWebDriver(new URL(AWS_URL), options); world.driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS); We recently created grid on aws and see this issue for some of the pods(which is working fine earlier), though its same hub URL for all  Note: Changes ip's/urls for security reasons</td>               <td>closed</td><td> </td>               <td>pkundarapu </td>               <td>2020-02-18T05:01:41Z</td>               <td>2020-03-21T20:18:35Z</td>               </tr><tr>               <td></td>               <td>8033</td>               <td>Drop-down menu options not clickable with Actions API</td>               <td>## üêõ Bug Report  Using [Actions](https://selenium.dev/selenium/docs/api/java/org/openqa/selenium/interactions/Actions.html) API to select options from a drop-down menu results in the below exception:  `org.openqa.selenium.JavascriptException: javascript error: Failed to execute 'elementsFromPoint' on 'Document': The provided double value is non-finite.`  This has been explained in detail [here](https://stackoverflow.com/questions/58716902/move-to-webelement-with-opacity-0-via-java-interactions-api-in-selenium).  ## To Reproduce  `test-page.html` ``` <html>  <head>     <title>Simple Test Page                               Apples             Oranges                                One             Two             Four             Still learning how to count, apparently                   ```  `SimpleTest.java` ``` import java.nio.file.Paths;  import org.junit.jupiter.api.AfterEach; import org.junit.jupiter.api.BeforeEach; import org.junit.jupiter.api.Test; import org.openqa.selenium.By; import org.openqa.selenium.Dimension; import org.openqa.selenium.WebDriver; import org.openqa.selenium.WebElement; import org.openqa.selenium.chrome.ChromeDriver; import org.openqa.selenium.interactions.Actions;  public class SimpleTest { 	private WebDriver driver; 	final String url = ""file://"" + Paths.get( ""src/test/resources/pages/test-page.html"" ).toAbsolutePath().toString();  	@BeforeEach 	public void setUp() { 		driver = new ChromeDriver(); 	}  	@AfterEach 	public void tearDown() { 		driver.quit(); 	}  	@Test 	public void should_be_possible_to_click_visible_menu() { 		driver.get( url ); 		driver.manage().window().setSize( new Dimension( 916, 1023 ) ); 		final Actions actions = new Actions( driver );  		final WebElement elementTwo = driver.findElement( By.xpath( ""html[1]/body[1]/form[1]/select[2]"" ) ); 		actions.moveToElement( elementTwo ).click().build().perform(); // Works 	}  	@Test 	public void should_be_possible_to_click_invisible_menu() { 		driver.get( url ); 		driver.manage().window().setSize( new Dimension( 916, 1023 ) ); 		final Actions actions = new Actions( driver );  		final WebElement elementOne = driver.findElement( By.xpath( ""html[1]/body[1]/form[1]/select[1]"" ) ); 		actions.moveToElement( elementOne ).click().build().perform(); // Works 	}  	@Test 	public void should_be_possible_to_click_dropdown_menu_option() { 		driver.get( url ); 		driver.manage().window().setSize( new Dimension( 916, 1023 ) ); 		final Actions actions = new Actions( driver );  		final WebElement dropDownOption = 				driver.findElement( By.xpath( ""html[1]/body[1]/form[1]/select[2]/option[3]"" ) ); 		actions.moveToElement( dropDownOption ).click().build().perform(); // Exception! 	} } ```  Detailed steps to reproduce the behavior: Execute JUnit tests from `SimpleTest` class.  ## Expected behavior  Dropdown menu options should be clickable with Actions API.  ## Actual behavior  Throws ``` org.openqa.selenium.JavascriptException: javascript error: Failed to execute 'elementsFromPoint' on 'Document': The provided double value is non-finite.   (Session info: chrome=80.0.3987.87) Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03' System info: host: 'x', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '5.3.0-28-generic', java.version: '11.0.6' Driver info: org.openqa.selenium.chrome.ChromeDriver Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 80.0.3987.87, chrome: {chromedriverVersion: 80.0.3987.87 (449cb163497b7..., userDataDir: /tmp/.org.chromium.Chromium...}, goog:chromeOptions: {debuggerAddress: localhost:41937}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify} Session ID: 5ed710c386486e7b906a08b478061286 	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552) 	at org.openqa.selenium.remote.RemoteWebDriver.perform(RemoteWebDriver.java:618) 	at org.openqa.selenium.interactions.Actions$BuiltAction.perform(Actions.java:639) 	at xxx.SimpleTest.does_throw_exception(SimpleTest.java:52) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.base/java.lang.reflect.Method.invoke(Method.java:566) 	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:675) 	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60) 	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:125) 	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:132) 	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:124) 	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:74) 	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115) 	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105) 	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:104) 	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:62) 	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:43) 	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:35) 	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104) 	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98) 	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:202) 	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) 	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:198) 	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135) 	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135) 	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125) 	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123) 	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80) 	at java.base/java.util.ArrayList.forEach(ArrayList.java:1540) 	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139) 	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125) 	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123) 	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80) 	at java.base/java.util.ArrayList.forEach(ArrayList.java:1540) 	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139) 	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125) 	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123) 	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80) 	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32) 	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) 	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51) 	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:229) 	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:197) 	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:211) 	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:191) 	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:137) 	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:89) 	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:41) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:541) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:763) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:463) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:209) ```  ## Environment  OS: Ubuntu 18.04.4 LTS Browser: Chrome Browser version: 80.0.3987.87 Browser Driver version: 80.0.3987.87","closed","D-chrome,","varlog23","2020-02-17T14:06:09Z","2020-04-15T07:43:01Z"
"","7883","Randomly get a ""Timed out waiting for driver server to start."" error in CI server","## üêõ Bug Report  The first test in our suite on the CI build cluster _randomly_ fails (~ 5 / 50 runs) with the error: _""Timed out waiting for driver server to start.""_ . The subsequent test features pass however in the same build and triggering another build will lead to this test passing as well.  _Relevant Logs:_ ``` 02:13:25  [main] I| 15:43:25.499 | [i.g.b.wdm.WebDriverManager:1073] | Exporting webdriver.chrome.driver as C:\Users\jenkins\.m2\repository\webdriver\chromedriver\win32\79.0.3945.36\chromedriver.exe 02:13:38  Starting ChromeDriver 79.0.3945.36 (3582db32b33893869b8c1339e8f4d9ed1816f143-refs/branch-heads/3945@{#614}) on port 25116 02:13:38  Only local connections are allowed. 02:13:38  Please protect ports used by ChromeDriver and related test frameworks to prevent access by malicious code. 02:13:47  [ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 121.979 s <<< FAILURE! - in x.y.z.SomeIT 02:13:47  [ERROR] Feature: XYZ Feature  Time elapsed: 121.979 s  <<< ERROR! 02:13:47  org.openqa.selenium.WebDriverException:  02:13:47  _Timed out waiting for driver server to start._ 02:13:47  Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z' 02:13:47  System info: host: 'XYZBUILDW728', ip: '1.2.3.4.5', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_162' 02:13:47  Driver info: driver.version: ChromeDriver 02:13:47  Caused by: org.openqa.selenium.net.UrlChecker$TimeoutException: _Timed out waiting for [http://localhost:25116/status] to be available after **20361** ms_ 02:13:47  Caused by: java.util.concurrent.TimeoutException ```  This appears to be traced to the hard-coding of the 20 second time-out in the _org.openqa.selenium.remote.service.DriverService.waitUntilAvailable(_) :    ``` protected void waitUntilAvailable() throws MalformedURLException {     try {       URL status = new URL(url.toString() + ""/status"");       new UrlChecker().waitUntilAvailable(20, SECONDS, status);     } catch (UrlChecker.TimeoutException e) {       if (process != null && !process.isRunning()) {         process.checkForError();       }       throw new WebDriverException(""Timed out waiting for driver server to start."", e);     }   } ```  if this value can be made configurable, then we can increase the time-out and prevent the build from failing.  ## To Reproduce Since this issue occurs randomly, it is not possible to reproduce it exactly. The randomness appears to depend on how busy our build servers are, hence the longer wait before the test times out and the passing of subsequent tests / builds  Note the previous and subsequent build(s) with the same chrome driver version, chrome version on the same build node pass. Also subsequent tests in the same suite in the failing build pass, so it appears to be a timeout issue  ## Expected behaviour  The test should pass and not fail because the web-driver /status/ page takes longer than 20 seconds to come up.  ## Test script or set of commands reproducing this issue  NA - since this happens randomly probably when the build node is building multiple branches in parallel and is hence loaded.  As mentioned in the report above, the 20 second timeout in the .DriverService.waitUntilAvailable() can be made configurable so that in cases where the build node is busy, an extended time-out can prevent build failure. Maybe reducing this timeout to one second can result in this issue being seen easily.  ## Environment  OS:  Browser: Chrome Browser version: 79.0.3945.88 Browser Driver version: ChromeDriver 79.0.3945.36  Language Bindings version: 1.8.0_162  Selenium Grid version (if applicable): NA","closed","C-java,","deepakab03","2019-12-23T12:28:59Z","2021-09-05T08:15:38Z"
"","8730","Option --max-sessions not clear","## üêõ Bug Report  The documentation is not clear about `--max-sessions`.  `java -jar selenium-server.jar standalone --help` says:  ```     --max-sessions       Maximum number of concurrent sessions.       Default: 2  ```  but doesn't mention that it's limited by the number of processors available on the system. The default value printed is actually the number of processors.  The effective value is calculated on https://github.com/SeleniumHQ/selenium/blob/941dc9c6b2e2aa4f701c1b72be8de03d4b7e996a/java/server/src/org/openqa/selenium/grid/node/config/NodeOptions.java#L78 which takes the `Math.min()` of the given value and the processor count.   ## To Reproduce  `java -jar selenium-server.jar standalone --max-sessions 10`  `curl http://localhost:4444/status` results in (if processor count is 2) ``` {   ""value"": {     ""ready"": true,     ""message"": ""Selenium Grid ready."",     ""nodes"": [       {         ""id"": ""ae418973-c7cd-4b25-b86f-056f8b337531"",         ""uri"": ""http:\u002f\u002f172.18.0.5:4444"",         ""maxSessions"": 2,         ""stereotypes"": [           {             ""capabilities"": {               ""browserName"": ""firefox""             },             ""count"": 2           }         ],         ""sessions"": [         ]       }     ]   } } ```  `java -XX:ActiveProcessorCount=10 -jar selenium-server.jar standalone  --max-sessions 10` `curl http://localhost:4444/status` results in ``` {   ""value"": {     ""ready"": true,     ""message"": ""Selenium Grid ready."",     ""nodes"": [       {         ""id"": ""ae418973-c7cd-4b25-b86f-056f8b337531"",         ""uri"": ""http:\u002f\u002f172.18.0.5:4444"",         ""maxSessions"": 10,         ""stereotypes"": [           {             ""capabilities"": {               ""browserName"": ""firefox""             },             ""count"": 10           }         ],         ""sessions"": [         ]       }     ]   } } ```  ## Expected behavior  I would expect that `--max-sessions xx` is taken into consideration and not capped by the processor count unless it's document. It's ok to have the default value `Runtime.getRuntime().availableProcessors()`  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS: OSX Browser: Firefox Browser version: 80.0.1 Browser Driver version: GeckoDriver 0.27  Language Bindings version: ? using docker image 80.0.1-geckodriver-0.27.0-grid-4.0.0-alpha-7-prerelease-20200921  Selenium Grid version (if applicable): -","closed","I-enhancement,","hanswieheiri","2020-09-24T15:45:00Z","2021-09-05T08:12:19Z"
"","8855","SessionNotCreatedException: Message: session not created from chrome not reachable","## üêõ Bug Report  The bug / error is  SessionNotCreatedException: Message: session not created from chrome not reachable   (Session info: chrome=86.0.4240.183)  The problem being that if i run python file from vs code or jupyter file from vs code i get same error as above .Nut if i run it using terminal like  python3 a.py It works   ## To Reproduce Pre requisite- Google chrome -Version 86.0.4240.183 (Official Build) (64-bit) ChromeDriver 86.0.4240.22 https://chromedriver.storage.googleapis.com/index.html?path=86.0.4240.22/ 1) create 2 files .py and .ipynb  and type this code in the file     Detailed steps to reproduce the behavior:  We should expect a chrome window to open and load instagram for 5 seconds then close.    ## Test script or set of commands reproducing this issue  import time from selenium import webdriver driver = webdriver.Chrome(executable_path='Path of the chrome driver downloaded') base_url = 'https://www.instagram.com/' driver.get(base_url) time.sleep(5) driver.close() driver.quit()    ## Environment  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:    VS CODE 1.51.0 ![Screenshot from 2020-11-09 00-49-52](https://user-images.githubusercontent.com/63336461/98482401-1bc69480-2227-11eb-8558-f00c98de6615.png) ![Screenshot from 2020-11-09 00-48-04](https://user-images.githubusercontent.com/63336461/98482406-1f5a1b80-2227-11eb-85c4-f0472e777748.png) ![Screenshot from 2020-11-09 00-47-32](https://user-images.githubusercontent.com/63336461/98482411-254ffc80-2227-11eb-85fe-27df957f29ec.png)","closed","C-py,","Devanshchowdhury2212","2020-11-08T19:32:19Z","2021-09-05T08:06:36Z"
"","7868","Virtual authenticator member enums should be public","## üêõ Bug Report  The `enum`s on VirtualAuthenticatorOptions are package-private due to an oversight but they should be public instead.  ## To Reproduce  Try setting the Protocol or Transport on VirtualAuthenticatorOptions.  ## Expected behavior  It works.  ## Test script or set of commands reproducing this issue  ```java VirtualAuthenticatorOptions options = new VirtualAuthenticatorOptions().setProtocol(Protocol.U2F); ```  ## Environment  Any.","closed","needs-triaging,","nsatragno","2019-12-17T19:24:28Z","2020-02-06T17:29:52Z"
"","7887","testShouldBeAbleToAccessPagesWithAnInsecureSslCertificate fails in latest ChromeDriver","## üêõ Bug Report  testShouldBeAbleToAccessPagesWithAnInsecureSslCertificate is failing because the ACCEPT_INSECURE_CERTS capability is not set.  ## To Reproduce Run test testShouldBeAbleToAccessPagesWithAnInsecureSslCertificate against ChromeDriver; it will fail.  ## Expected behavior  Test should pass  In version 79, ChromeDriver stopped passing the accept-certificate-errors flag by default; this makes the test fail. We plan to submit a PR to create a driver with the required capability.","closed","C-java,","TriciaCrichton","2019-12-23T23:26:02Z","2020-04-15T08:11:05Z"
"","8155","SwitchPreviuosTab/SwitchNextTab on Safari works incorrectly","## üêõ Bug Report  SwitchPreviousTab/SwitchNextTab work incorrectly on Safari  Step to reproduce:  open 3-4 tabs call switchPreviousTab(2) Actual Observe: It works incorrectly      ## To Reproduce  1. open 4 tabs 2. call switchPreviousTab(3)  ## Actual Observe  It works incorrectly  ## Expected behavior  It should be switch to the first tab. ## Environment OS: macOS Mojave Version: 10.14.6 Browser: Safari Browser version: 13.1 Browser Driver version:  GeckoDriver 0.26  ## NOTE  It‚Äôs only happen on Safari. As I found that SwitchPreviousTab/SwitchNextTab call getWindowHandles. The getWindowHandles api on Safari return an array tabs that is not consistent with the tab display on browser.  e.g.: Tab on Browser: tab1, tab2, tab3, tab4  getWindowHandles return: [tab1, tab4, tab2, tab3]","closed","needs-triaging,","NgoAnhKhoi","2020-04-03T11:10:06Z","2020-05-05T21:14:29Z"
"","8638","Selenium is no longer gracefully interacting with windows when an alert is open on Chrome 85","## üêõ Bug Report  Starting with Chrome 85, Selenium's Chrome webdriver is no longer raising `Selenium::WebDriver::Error::UnexpectedAlertOpenError` when an alert dialog is opened (in my case via `beforeunload`, but likely not specific to this scenario).  ## To Reproduce  I've included what is hopefully a fully reproducible test case below!  ## Expected behavior  This should exit cleanly, with Capybara `rescue`ing `Selenium::WebDriver::Error::UnexpectedAlertOpenError`, closing the dialog, and moving on. However, starting in Chrome 85, Selenium is now raising an `EOFError` exception:  ``` Traceback (most recent call last): 	18: from capybara_chrome_85_alert.rb:40:in `' 	17: from /usr/local/var/rbenv/versions/2.7.1/lib/ruby/gems/2.7.0/gems/capybara-3.32.1/lib/capybara/session.rb:130:in `reset!' 	16: from /usr/local/var/rbenv/versions/2.7.1/lib/ruby/gems/2.7.0/gems/capybara-3.32.1/lib/capybara/selenium/driver_specializations/chrome_driver.rb:49:in `reset!' 	15: from /usr/local/var/rbenv/versions/2.7.1/lib/ruby/gems/2.7.0/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/common/navigation.rb:32:in `to' 	14: from /usr/local/var/rbenv/versions/2.7.1/lib/ruby/gems/2.7.0/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/remote/w3c/bridge.rb:59:in `get' 	13: from /usr/local/var/rbenv/versions/2.7.1/lib/ruby/gems/2.7.0/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/remote/w3c/bridge.rb:567:in `execute' 	12: from /usr/local/var/rbenv/versions/2.7.1/lib/ruby/gems/2.7.0/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/remote/bridge.rb:167:in `execute' 	11: from /usr/local/var/rbenv/versions/2.7.1/lib/ruby/gems/2.7.0/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/remote/http/common.rb:64:in `call' 	10: from /usr/local/var/rbenv/versions/2.7.1/lib/ruby/gems/2.7.0/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/remote/http/default.rb:82:in `request' 	 9: from /usr/local/var/rbenv/versions/2.7.1/lib/ruby/gems/2.7.0/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/remote/http/default.rb:129:in `response_for' 	 8: from /usr/local/var/rbenv/versions/2.7.1/lib/ruby/2.7.0/net/http.rb:1492:in `request' 	 7: from /usr/local/var/rbenv/versions/2.7.1/lib/ruby/2.7.0/net/http.rb:1519:in `transport_request' 	 6: from /usr/local/var/rbenv/versions/2.7.1/lib/ruby/2.7.0/net/http.rb:1519:in `catch' 	 5: from /usr/local/var/rbenv/versions/2.7.1/lib/ruby/2.7.0/net/http.rb:1528:in `block in transport_request' 	 4: from /usr/local/var/rbenv/versions/2.7.1/lib/ruby/2.7.0/net/http/response.rb:31:in `read_new' 	 3: from /usr/local/var/rbenv/versions/2.7.1/lib/ruby/2.7.0/net/http/response.rb:42:in `read_status_line' 	 2: from /usr/local/var/rbenv/versions/2.7.1/lib/ruby/2.7.0/net/protocol.rb:201:in `readline' 	 1: from /usr/local/var/rbenv/versions/2.7.1/lib/ruby/2.7.0/net/protocol.rb:191:in `readuntil' /usr/local/var/rbenv/versions/2.7.1/lib/ruby/2.7.0/net/protocol.rb:225:in `rbuf_fill': end of file reached (EOFError) ```  ## Test script or set of commands reproducing this issue  ```ruby require 'bundler/inline'  gemfile do   source 'https://rubygems.org'   gem 'capybara'   gem 'puma'   gem 'selenium-webdriver'   gem 'webdrivers'   gem 'byebug' end  require 'selenium-webdriver' require 'capybara/dsl'  html = <<~HTML          Hello World                      Hello World     HTML  app = proc { |env| [200, { ""Content-Type"" => ""text/html"" }, [html] ] }  session = Capybara::Session.new(:selenium_chrome, app) session.visit '/' session.click_on 'Hello World' # interact with the page, to get Chrome to fire `beforeunload` session.reset! ```  ## Environment  OS: macOS 10.15.6 Browser: Chrome  Browser version: 85.0.4183.76 Browser Driver version: ChromeDriver 85.0.4183.38 Language Bindings version: Ruby 2.7.1, Capybara 3.33.0","closed","needs-triaging,","agrobbin","2020-08-21T15:31:57Z","2021-09-05T08:37:17Z"
"","8319","Getting org.openqa.selenium.WebDriverException: Build info without any message","## üêõ Bug Report  Sometimes the autotests are failed with exception like below:  ``` org.openqa.selenium.WebDriverException: Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z' System info: host: 'http://someSite.com', ip: '', os.name: 'Linux', os.arch: 'amd64', os.version: '3.10.0-862.3.2.el7.x86_64', java.version: '1.8.0_231' Driver info: org.openqa.selenium.remote.RemoteWebDriver Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 73.0.3683.68 (47787ec04b6e3..., userDataDir: /tmp/.com.google.Chrome.xzrdjQ}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:45068}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, proxy: {}, rotatable: false, setWindowRect: true, strictFileInteractability: false, takesHeapSnapshot: true, takesScreenshot: true, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unexpectedAlertBehaviour: ignore, unhandledPromptBehavior: ignore, version: 73.0.3683.75, webStorageEnabled: true} Session ID: c69fdd3d30156f06b8ca7f470fcd6951e080ea59f684db9e9efeba7472019667 	at sun.reflect.GeneratedConstructorAccessor493.newInstance(Unknown Source) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) 	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214) 	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:577) 	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:276) 	at org.openqa.selenium.remote.RemoteWebElement.getTagName(RemoteWebElement.java:122) ```  From this exception we cannot understand what happened.  Often this issue is happened during execution of the 'GetElementTagName' command:  ``` 2020-05-15T03:22:12.827Z,""filebeat-4xpn4"",""[1589512932.827][INFO]: [e080ea59f684db9e9efeba7472019667] COMMAND GetElementTagName {\\n   """"id"""": """"0.19545048040709112-13""""\\n}""		 2020-05-15T03:22:12.827Z,""filebeat-4xpn4"",""[1589512932.827][INFO]: Waiting for pending navigations...""		 2020-05-15T03:22:12.829Z,""filebeat-4xpn4"",""[1589512932.829][INFO]: Done waiting for pending navigations. Status: ok""		 2020-05-15T03:22:12.832Z,""filebeat-4xpn4"",""[1589512932.833][INFO]: Waiting for pending navigations...""		 2020-05-15T03:22:12.842Z,""filebeat-4xpn4"",""[1589512932.842][INFO]: Done waiting for pending navigations. Status: ok""		 2020-05-15T03:22:12.842Z,""filebeat-4xpn4"",""[1589512932.843][INFO]: [e080ea59f684db9e9efeba7472019667] RESPONSE GetElementTagName """"td"""""" ```  ## To Reproduce  Detailed steps to reproduce the behavior:  ## Expected behavior  The exception contains any more information about issue. E.g. org.openqa.selenium.WebDriverException: unknown error: cannot focus element  ## Test script or set of commands reproducing this issue  We cannot reproduce this issue self. This exception happens on the different cases sometimes. No simple case to reproduce.  ## Environment  OS: Linux Browser: Chrome Browser version: 73, 78 Browser Driver version: ChromeDriver 73.0.3683.68 Language Bindings version: 3.12 Selenium Grid version (if applicable): 3.12","closed","R-awaiting answer,","gouru312","2020-05-18T14:21:30Z","2021-09-05T09:12:39Z"
"","8534","Links on the wiki return 404 because the branch name changed","## üêõ Bug Report  Some links on the wiki no longer work, because the primary branch name changed to trunk. [Here is a patch](https://gist.github.com/johndouthat/cfa7acec0b76e4591a9a7b64e90c116e) that may help fix the issue.  ## To Reproduce  1. Go to https://github.com/SeleniumHQ/selenium/wiki/DotNet-Bindings 2. Click the link at the bottom 3. The target, https://github.com/SeleniumHQ/selenium/blob/master/dotnet/src/webdriver/Remote/RemoteWebDriver.cs returns a 404  ## Expected behavior  Links in the wiki should change the primary branch name to trunk","closed","needs-triaging,","johndouthat","2020-07-15T16:46:10Z","2021-09-05T09:02:59Z"
"","8121","Chromedriver.exe has stopped working"" message needs to be more communicative","## üêõ Bug Report  Some days, my selenium tests makes a popup come up saying that chromedriver.exe has stopped working.  Is it possible to get a more descriptive error message? Developers are used to better error messages than this.  ## To Reproduce  Not possible to produce on demand since the dialog comes up on unexpected events.  ## Expected behavior  I expect some other messages than ""has stopped working""  ## Test script or set of commands reproducing this issue  I am filling out this section just to not have the questionnable selenium assistant bot automatically closing this issue.  ## Environment  OS: Windows 10 Browser: Chrome","closed","needs-triaging,","AndersBillLinden","2020-03-19T07:12:27Z","2020-04-18T22:17:03Z"
"","8624","dragAndDrop work and doesn't work with Java and Chrome","## üêõ Bug Report  Simple drag and drop snippet of code doesn't work with Chrome.  ## To Reproduce You can find here code that works on a demo site and a code that doesn't work in other site, what's the issue? In both case I am using a RemoteWebDriver:  			localDriver = new RemoteWebDriver(new URL(currentHub), capability); 			localDriver.manage().timeouts().implicitlyWait(30000, TimeUnit.SECONDS); 			localDriver.manage().window().maximize();   **SITE AND CODE WORKS** Demo site URL: http://demo.guru99.com/test/drag_drop.html  			WebElement elementFrom=driver.findElementByXPath(""//*[@id='credit2']/a""); 			WebElement elementTo=driver.findElementByXPath(""//*[@id='bank']/li"");			 			Actions dragAndDrop = new Actions(localDriver); 			Action  action      = dragAndDrop.dragAndDrop(elementFrom, elementTo).build(); 			action.perform();			  **SITE AND CODE DOESN'T WORK** Demo site URL: https://www.seleniumeasy.com/test/drag-and-drop-demo.html  			WebElement elementFrom=driver.findElementByXPath(""//div[@id='todrag']//span[1]""); 			WebElement elementTo=driver.findElement(By.id(""mydropzone"")); 			Actions dragAndDrop = new Actions(localDriver); 			Action  action      = dragAndDrop.dragAndDrop(elementFrom, elementTo).build(); 			action.perform();			 			  ##Notes  In both case the code is the same and xpath are valid and correct, I am confused why in the second case doesn't work? Are there some constrains around webelement type or xpath used or html page structure?  ## Environment  OS: Docker Container Browser: Chrome Browser version: all version (tested sure on 77/80/84) Language Bindings version: Java 1.8","closed","D-chrome,","v3g3t4x","2020-08-11T14:42:43Z","2021-09-05T08:18:59Z"
"","8463","Selenium::WebDriver::Platform.wsl? incorrectly reports false for WSL2","## üêõ Bug Report  Selenium::WebDriver::Platform.wsl? incorrectly reports `false` for WSL2  ## To Reproduce  In a WSL2 environment, run `Selenium::WebDriver::Platform.wsl?` from IRB  ## Expected behavior  true  ## Environment  OS: Windows 10 Browser: Chrome  `cat /proc/version` reports `Linux version 4.19.104-microsoft-standard (oe-user@oe-host) (gcc version 8.2.0 (GCC)) #1 SMP Wed Feb 19 06:37:35 UTC 2020`  Looks like Selenium is looking for `Microsoft`. Perhaps it should be a case-insensitive comparison.","closed","C-rb,","AstonDavies","2020-06-26T13:45:13Z","2021-09-05T09:02:52Z"
"","8678","selenium-server-3.141.0 has CVE-2017-18640 vulnerability","## üêõ Bug Report  Selenium server 3.141.0 has CVE-2017-18640 vulnerability - org.yaml_snakeyaml package, which fixed in 1.26 version of org.yaml_snakeyaml.","closed","","aleksandrOranskiy","2020-09-07T13:05:32Z","2021-09-05T08:36:03Z"
"","8379","Selenium throwing TimeoutException with Build info: version: 'unknown', revision: 'unknown', time: 'unknown' then loading correctly the page","## üêõ Bug Report  Selenium run from Burp extension   Issue is encountered using both Firefox and Chrome, both reporting TimeoutException with Build info: version: 'unknown', revision: 'unknown', time: 'unknown'. Once it is thrown, however, the page is loaded correctly.  ## To Reproduce  The code executed by my button, which runs the Selenium part of code, is here https://pastebin.com/GEjfT24D  Detailed steps to reproduce the behavior:  After setting up Burp and configuring Proxy and Certificates, the code I posted needs the File object of the Driver (which I select with a JFileChooser), the seleniumTrack which is not used for now and the boolean isHeadless.  ## Expected behavior  The page should be loaded  after executing the code above.  ## Test script or set of commands reproducing this issue  The issue is not related to a test script, since even loading a simple page fails.  ## Environment  OS: Windows 10 Browser: Chrome and Firefox Browser version: Chrome 83.0.4103.61, Firefox 76.0.1 Browser Driver version: ChromeDriver  83.0.4103.39, GeckoDriver 0.24 Language Bindings version: Java 1.8.0.251 Selenium version: 3.141.59 Burp version: 2020.2.1, since newer ones do not support Java 8  Message of the exception in Firefox  Timeout loading page after 10000ms Build info: version: 'unknown', revision: 'unknown', time: 'unknown' System info: host: 'MSI', ip: '192.168.1.108', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_251' Driver info: org.openqa.selenium.firefox.FirefoxDriver Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 76.0.1, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20200507114007, moz:geckodriverVersion: 0.24.0, moz:headless: false, moz:processID: 11172, moz:profile: C:\Users\Stefano\AppData\Lo..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, platformVersion: 10.0, proxy: Proxy(manual, http=127.0.0...., rotatable: false, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify} Session ID: fde35013-2081-451c-82af-e1568bfc3e13  Message of the exception in Chrome timeout: Timed out receiving message from renderer: -0.000   (Session info: chrome=83.0.4103.61) Build info: version: 'unknown', revision: 'unknown', time: 'unknown' System info: host: 'MSI', ip: '192.168.1.108', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_251' Driver info: org.openqa.selenium.chrome.ChromeDriver Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 83.0.4103.61, chrome: {chromedriverVersion: 83.0.4103.39 (ccbf011cb2d2b..., userDataDir: C:\Users\Stefano\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:56688}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(manual, http=127.0.0...., setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true} Session ID: 4d1c1e73c0b405fbdee3c4403970883e","closed","C-java,","stefano-facchini","2020-06-01T12:03:39Z","2021-09-05T08:12:28Z"
"","8139","Selenium Grid: Session [url] not available","## üêõ Bug Report  Selenium Grid fails to run tests. I want to run tests in Chrome using `karma` runner with `karma-webdriver-launcher`.  ## To Reproduce  All steps are done on the same server (Windows Server 10.0.17763).  Start Grid Hub: ``` java -jar .\selenium-server-standalone-3.141.59.jar -role hub -debug ``` Start Grid Node: ``` java -jar .\selenium-server-standalone-3.141.59.jar -role node -hub http://10.1.1.121:4444 -debug ```  Then try to run tests using this karma configuration: ``` // ...         browsers: [""Selenium""],         customLaunchers: {             ""Selenium"": {                 base: ""WebDriver"",                 browserName: ""chrome"",                 config: {                     hostname: wdserverHostname,                     port: 4444                 }             }         } // ... ```  ## Expected behavior  Karma runner executes all tests.  ## Actual behavior  Karma runner fails to run tests.  In Selenium Hub logs I see the following: ``` 16:15:30.145 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {base: WebDriver, browserName: chrome, javascriptEnabled: true, tags: [], testName: Karma test, version: } 16:15:30.145 DEBUG [ProxySet.getNewSession] - Available nodes: [http://10.1.1.121:32013] 16:15:30.145 DEBUG [BaseRemoteProxy.getNewSession] - Trying to create a new session on node http://10.1.1.121:32013 16:15:30.145 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=b227bc84-e37d-4930-b9d1-8106852860f6, seleniumProtocol=WebDriver, browserName=chrome, maxInstances=5, platformName=XP, platform=XP} 16:15:30.634 DEBUG [ActiveTestSessions.getExistingSession] - Session [url] not available and is not among the last 1000 terminated sessions. Active sessions are[] 2020-03-27 16:15:32.094:WARN:osjs.HttpChannel:qtp18823673-16: /wd/hub/session java.io.IOException: org.openqa.grid.common.exception.GridException: Cannot extract a capabilities from the request: ```  ## Test script or set of commands reproducing this issue  This  is an Angular 8 project. So I run tests with `ng test` command.   ## Environment  OS: `Windows Server 10.0.17763` Selenium Grid version: `3.141.59` (also in `3.9.1`)","closed","R-awaiting answer,","Robot1que","2020-03-27T16:29:53Z","2021-09-05T10:02:41Z"
"","8191","Complex XPATH is not found by Python Selenium","## üêõ Bug Report  Selenium does not find elements with ""too complex"" XPATH.   I supply a testcase (sample HTML document) with two typical cases: one with id selector and second with class selector.    ## To Reproduce    Please look into the following ticket:  #https://github.com/SeleniumHQ/selenium/issues/8190  There is the sample HTML document and Python code that uses Selenium. If you press ""Text XPATH"" button in the page, Javascript code locates the text node and copies its content to new position. In contrary, Selenium-based Python code fails to find it. Please look into issue 8190 for more explanations.   ## Expected behavior  The same text node is found by Selenium.  ## Test script or set of commands reproducing this issue  Copying here the sample HTML:   ```                	  	    	  	¬†¬†¬†  	    		  			Company type: Private Limited Company   			Company number: 123456789   			Company status: Active   		  		  			country of origin: United Kingdom   			incorporation date: 2020.01.01  			has UK establishment:  No     			has appointments:  Yes     			in liquidation:  No    		    		Nature of Business:  		  			  				82990 - Other business support service activities not elsewhere classified  			  					  	          ``` And the Python code:  `from selenium import webdriver` `  ` `driver = webdriver.Chrome()` `driver.set_window_size(1120, 550)` `driver.get(url=""file:///home/user/test.html"")` `path1 = '//*[@id=""tabs-info""]/div[4]/div[1]/text()[2]'` `path2 = '//div[contains(@class,""subject company_info"")]/div[1]/text()[2]'` `e1 = driver.find_element(By.XPATH, path1)` `print(""Path #1: "" + e1.text)` `e2 = driver.find_element(By.XPATH, path2)` `print(""Path #2: "" + e2.text)` `driver.quit()``  My aim is to locate element with text ""Private Limited Company"". According to both Chrome and Firefox Dev tools, its xpath is the following: //*[@id=""tabs-info""]/div[4]/div[1]/text()[1] Javascript does not find this xpath in runtime, however the very similar xpath is found: //*[@id=""tabs-info""]/div[4]/div[1]/text()[2] I opened tickets against the respective browsers about inconsistency between Dev Tools and Javascript engine. However Selenium does not find any of them (NoSuchElementException is raised). The element can be also located by xpath based on a class selector: //div[contains(@class,""subject company_info"")]/div[1]/text()[2] Javascript finds it. Selenium does not find it, too.  Tested with Firefox and Chrome on Linux. Also Selenium IDE playback fails with such kinds of xpath in both Firefox and Chrome on Windows 10.  ## Environment  OS: Windows 10, Linux Browser:  Firefox, Chrome Browser version:  Firefox v74, Chrome v80 Browser Driver version:  ChromeDriver 2.43, GeckoDriver 0.23 Language Bindings version:  Python 3.8.1 Selenium Grid version (if applicable):","closed","needs-triaging,","GBR-613","2020-04-10T14:24:47Z","2020-05-20T21:16:17Z"
"","8018","Cant start a Firefox 72 profile","## üêõ Bug Report  Selenium crashes and exceptions out with error  ``` /home/santa/.local/lib/python3.6/site-packages/selenium/webdriver/firefox/webdriver.py in __init__(self, firefox_profile, firefox_binary, timeout, capabilities, proxy, executable_path, options, service_log_path, firefox_options, service_args, desired_capabilities, log_path, keep_alive)     172                 command_executor=executor,     173                 desired_capabilities=capabilities, --> 174                 keep_alive=True)     175      176         # Selenium remote  /home/santa/.local/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py in __init__(self, command_executor, desired_capabilities, browser_profile, proxy, keep_alive, file_detector, options)     155             warnings.warn(""Please use FirefoxOptions to set browser profile"",     156                           DeprecationWarning, stacklevel=2) --> 157         self.start_session(capabilities, browser_profile)     158         self._switch_to = SwitchTo(self)     159         self._mobile = Mobile(self)  /home/santa/.local/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py in start_session(self, capabilities, browser_profile)     241         """"""     242         import pdb;pdb.set_trace() --> 243         if not isinstance(capabilities, dict):     244             raise InvalidArgumentException(""Capabilities must be a dictionary"")     245         if browser_profile:  /home/santa/.local/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py in execute(self, driver_command, params)     320         response = self.command_executor.execute(driver_command, params)     321         if response: --> 322             self.error_handler.check_response(response)     323             response['value'] = self._unwrap_value(     324                 response.get('value', None))  /home/santa/.local/lib/python3.6/site-packages/selenium/webdriver/remote/errorhandler.py in check_response(self, response)     240                 alert_text = value['alert'].get('text')     241             raise exception_class(message, screen, stacktrace, alert_text) --> 242         raise exception_class(message, screen, stacktrace)     243      244     def _value_or_default(self, obj, key, default):  SessionNotCreatedException: Message: Unable to find a matching set of capabilities ```  ## To Reproduce ``` from selenium import webdriver                                                                                                          import selenium ffw = webdriver.Firefox(firefox_binary=""/home/santa/firefox/"", firefox_profile='/home/santa/.mozilla/firefox/8lj1dc4h.default-release') ```  Detailed steps to reproduce the behavior:  ## Expected behavior  Expect a Firefox instance with the loaded profile.  ## Environment  OS: Linux Browser: Firefox Browser version:72.0 Browser Driver version: geckodriver 0.25.0 (bdb64cf16b68 2019-09-10)  Language Bindings version:  Python  3.141.0   ## Extra Notes The Firefox install not a systemwide package manager install. The Firefox install is not in the system PATH variable. One can open a selenium driven Firefox with a blank profile by not supplying the firefox_profile keyword paramater  The profile is about 155 mbs. Here is a short snippet of what the capabilities object looks like when i had it written to file at the time.  $ cut -b -45 /tmp/capabils.txt  {'acceptInsecureCerts': True,  'browserName': 'firefox',  'marionette': True,  'moz:firefoxOptions': {'binary': '/home/sant                         'profile': 'UEsDBBQAA [...]","closed","D-firefox,","SavSanta","2020-02-10T13:20:35Z","2020-04-25T08:17:38Z"
"","7944","OpenQA.Selenium.Support.UI.SelectElement vanished in 4.0.0-alpha04","## üêõ Bug Report  SelectElement  does not appear in the namespace OpenQA.Selenium.Support.UI.SelectElement downgrading to 4.0.0-alpha03 makes it show up.  to reproduce  ``` class foo { protected OpenQA.Selenium.Support.UI.SelectElement OldStyleSelect { get; set;} } ```  OS: Windows 10 Browser: n/a Browser version: n/a Browser Driver version: n/a Language Bindings version: C# netstandard 2.0 Selenium Grid version (if applicable): n/a","closed","C-dotnet,","BasHamer","2020-01-17T23:07:53Z","2021-09-05T08:31:32Z"
"","8293","Security issue in jQuery dependency","## üêõ Bug Report  Security issue for web is mentioned in - https://nvd.nist.gov/vuln/detail/CVE-2020-11022  ## To Reproduce  Security report points to path -  `selenium-webdriver/lib/test/data/jquery-1.3.2.js`   ## Expected behavior  Should selenium-webdriver still using jquery version below 3.5? I believe it should upgrade internal dependencies","closed","C-nodejs,","varora1406","2020-05-11T12:28:04Z","2021-09-05T10:02:47Z"
"","8376","SafariDriver throws NoSuchElementException attempting to find child of element reference that's gone stale","## üêõ Bug Report  SCENARIO: Invoke the `findElement` method of an element reference that's gone stale EXPECT: StaleElementReferenceException ACTUAL: NoSuchElementException  ## To Reproduce  Detailed steps to reproduce the behavior: * Acquire a reference to an element that has children * Refresh the browser session * Search for a child of the element reference  With the Java code below: * [getTagName] throws `StaleElementReferenceException` * [findElement] throws `NoSuchElementException`  ## Expected behavior  This should produce `StaleElementReferenceException`  ## Actual behavior  **SafariDriver** throws `NoSuchElementException`  ## Test script or set of commands reproducing this issue  ```java package com.nordstrom.automation.selenium.model;  import org.junit.After; import org.junit.Before; import org.junit.Test; import org.openqa.selenium.By; import org.openqa.selenium.WebDriver; import org.openqa.selenium.WebDriverException; import org.openqa.selenium.WebElement; import org.openqa.selenium.safari.SafariDriver;  public class SafariStale {          private WebDriver driver;          @Before     public void before() {         driver = new SafariDriver();     }          @Test     public void testStale() {         driver.get(""https://www.w3schools.com/html/html_tables.asp"");         WebElement table = driver.findElement(By.cssSelector(""table#customers""));         table.getTagName();         table.findElement(By.cssSelector(""tr""));         driver.navigate().refresh();         try {             table.getTagName();         } catch (WebDriverException e) {             System.out.printf(""[getTagName] throws %s\n"", e.getClass().getSimpleName());         }         try {             table.findElement(By.cssSelector(""tr""));         } catch (WebDriverException e) {             System.out.printf(""[findElement] throws %s\n"", e.getClass().getSimpleName());         }     }          @After     public void after() {         driver.quit();     } } ```  ## Environment  OS: MacOS 10.15.4 Browser: Safari Browser version: 13.1 (15609.1.20.111.8) Browser Driver version: Included with Safari 13.1 (15609.1.20.111.8) Language Bindings version: 3.141.59","closed","needs-triaging,","sbabcoc","2020-06-01T08:03:29Z","2021-09-05T08:35:51Z"
"","8415","selenium.common.exceptions.WebDriverException: Message: unknown error: bad inspector message","## üêõ Bug Report  Same story as in this issue https://github.com/SeleniumHQ/selenium/issues/7359  While try to get html from page with some unicode characters get such exception: ```selenium.common.exceptions.WebDriverException: Message: unknown error: bad inspector message```  ## To Reproduce  Install python and selenium. Run this script: ``` from selenium import webdriver from selenium.webdriver.chrome.options import Options  parsed_elem = ['.main', 'div[class=""grid""]'] def find_elem(e):     try:         elem = browser.find_element_by_css_selector(e)         return elem     except:         pass  url = ""https://rajanant.github.io/""  options = Options() options.add_argument(""--no-sandbox"") options.add_argument(""--enable-logging"") options.add_argument(""--v=1"") options.add_argument(""--disable-gpu"") options.add_argument(""--window-size=1920,1080"")  your_exec_path = ""path_to_chromedriver_linux64_83/chromedriver"" browser = webdriver.Chrome(options=options,                           executable_path=your_exec_path) browser.get(url) try:     divs1 = [x for x in map(find_elem, parsed_elem) if x]     page = divs1[0].get_attribute('innerHTML') except Exception as e0:     raise e0 finally:     browser.close() with open('/tmp/file.html', 'w') as tmpf:     tmpf.write(page) ```  Raises excpetion: https://github.com/rajanant/rajanant.github.io/blob/master/selenium_bug.txt  ## Expected behavior  Browser opens web page and save file in /tmp folder. Without any exceptions.  ## Test script or set of commands reproducing this issue  see **To Reproduce** section  ## Environment  OS: Ubuntu 18.04.4 LTS Browser: Chrome Browser version: 83.0.4103.97 Browser Driver version: ChromeDriver 83.0.4103.39 (ccbf011cb2d2b19b506d844400483861342c20cd-refs/branch-heads/4103@{#416}) Language Bindings version: Python 3.8.3 Selenium Grid version (if applicable): None","closed","needs-triaging,","rajanant","2020-06-11T10:23:37Z","2021-09-05T09:36:46Z"
"","8484","SafariDriver can not use `click()` on off-screen elements","## üêõ Bug Report  SafariDriver can not use `click()` on off-screen elements. After a page loads, elements that are immediately visible respond to `click()` events, but elements that would need to be scrolled to first will not. The browser will scroll to the element, but not click on it. A workaround is to use `.sendKeys(Keys.ENTER)` to interact with links, but this isn't ideal when working with a framework.   ## To Reproduce  Detailed steps to reproduce the behavior:  - locate an element that would need to be scrolled to for interaction - use click()  ## Expected behavior  Element is clicked (link traversed, button pressed, etc)  ## Test script or set of commands reproducing this issue  ``` 	public static void main(String[] args) { 		WebDriver driver = new SafariDriver(); 		driver.manage().window().fullscreen(); 		driver.get(""https://github.com/SeleniumHQ/selenium/issues?q=safari""); 		driver.findElement(By.cssSelector(""a[data-ga-click='Footer, go to help, text:help']"")).click(); 		System.out.println(""Expected: 'https://help.github.com/'\nActual  : '"" + driver.getCurrentUrl() + ""'""); 		driver.close(); 	}  ```  ## Environment  OS: Mac OSX 10.15.3 Browser: Safari Browser version: Version 13.0.5 (15608.5.11) Browser Driver version: Version 13.0.5 (15608.5.11) (output from safaridriver --version) Language Bindings version: Java 3.141.0 Selenium Grid version (if applicable): N/A  also reproducible on SauceLabs with Safari 13.1 / OSX 10.15.4 / Selenium 3.141.59","closed","needs-triaging,","ghost","2020-07-06T14:32:25Z","2021-09-05T09:12:36Z"
"","8361","SafariDriver cannot be cast to org.openqa.selenium.html5.LocationContext","## üêõ Bug Report  Safari driver is unable to set Location using LocationContext  **I am using following piece of code:** Location location = new Location(arg1, arg2, arg3); ((LocationContext) driver).setLocation(location);  **Expected:** Driver should navigate to respected page url  **Actual:** Exception occurs:  **java.lang.ClassCastException: org.openqa.selenium.safari.SafariDriver cannot be cast to org.openqa.selenium.html5.LocationContext**   ## Environment  OS: Mac OS Mojave 10.14.4 Browser: Safari Browser version: 12.1 (14607.1.40.1.4) Language Bindings version: Java 3.14","closed","needs-triaging,","ishanm120","2020-05-29T11:44:11Z","2021-09-05T09:12:35Z"
"","8296","Running with Edge creates socket-related ResourceWarnings","## üêõ Bug Report  Running Selenium drivers on Edge produces ResourceWarnings constantly, caused by unclosed sockets while the code is running.   The warnings also point to line 374 of [RemoteConnection.py](https://github.com/SeleniumHQ/selenium/blob/master/py/selenium/webdriver/remote/remote_connection.py) on the statement below: ``` if hasattr(self, 'w3c') and self.w3c and isinstance(params, dict) and 'sessionId' in params: ``` This does not happen in the same quantity as on Chrome or IE.  It seems that there was previous attempts to remedy similar ResourceWarnings with ticket #6878 but there were still edge (hah!) cases.   ## To Reproduce Run the scripts provided in the reproduction script. One is for Chrome, one is for Edge.  ## Expected behavior  ``` DevTools listening on ws://127.0.0.1:61429/devtools/browser/a156e0fb-b5c6-4114-aef7-c2f866434cd4 [17568:4408:0511/105352.876:ERROR:browser_switcher_service.cc(238)] XXX Init() [17568:4408:0511/105353.700:ERROR:edge_auth_errors.cc(341)] EDGE_IDENTITY: Get Default OS Account failed: Error: Primary Error: kTokenRequestFailed, Secondary Error: kTokenFetchUserInteractionRequired, Platform error: -2138701819, hex:80860005, Error string: Error code: 0x80860005, error message:Error C:\Users\user\Anaconda3\lib\site-packages\selenium\webdriver\remote\remote_connection.py:374: ResourceWarning: unclosed    return self._request(command_info[0], url, body=data) ResourceWarning: Enable tracemalloc to get the object allocation traceback C:\Users\user\Anaconda3\lib\site-packages\selenium\webdriver\remote\remote_connection.py:374: ResourceWarning: unclosed    return self._request(command_info[0], url, body=data) ResourceWarning: Enable tracemalloc to get the object allocation traceback ``` In the console, a large amount of ResourceWarnings will appear while the Edge code is running.   ## Test script or set of commands reproducing this issue  Reproduction script can be found [here](https://stackoverflow.com/questions/61687653/why-do-i-get-resourcewarning-more-on-edge-than-chrome).  ## Environment  OS: Windows 10 Browser: Edge Browser version: 81.0.416.72 Browser Driver version: msedgedriver 81.0.410.0 Language Bindings version: Python 3.7","closed","C-py,","sasha-adb","2020-05-11T17:29:13Z","2021-09-05T08:12:24Z"
"","8848","Error: ""The ChromeDriver could not be found on the current PATH."" when chromedriver and chromedriver.cmd in path but not when chromedriver.exe in PATH","## üêõ Bug Report  Running on Windows this error is misleading as it requires the chromedriver.exe to be in the path, not just any link or .cmd that points to it.  PS C:\Downloads> selenium-side-runner *.side info:    Running Test.side  FAIL  ./Default Suite.test.js   ? Test suite failed to run      The ChromeDriver could not be found on the current PATH. Please download the latest version of the ChromeDriver from  http://chromedriver.storage.googleapis.com/index.html and ensure it can be found on your PATH.        at new ServiceBuilder (../node_modules/selenium-webdriver/chrome.js:232:13)       at getDefaultService (../node_modules/selenium-webdriver/chrome.js:321:22)       at Function.createSession (../node_modules/selenium-webdriver/chrome.js:696:44)       at createDriver (../node_modules/selenium-webdriver/index.js:155:33)       at Builder.build (../node_modules/selenium-webdriver/index.js:647:16)       at buildDriver (../node_modules/jest-environment-selenium/dist/index.js:66:17)       at WebdriverEnvironment.setup (../node_modules/jest-environment-selenium/dist/index.js:37:32)  Test Suites: 1 failed, 1 total Tests:       0 total Snapshots:   0 total Time:        0.36s Ran all test suites.  ## To Reproduce  Follow windows install and run instructions from the doco  ## Expected behavior  The error message should be more descriptive such that adding the dire containing the exe to your path is suggested, not just having it runnable in your path  ## Project file reproducing this issue (highly encouraged)  Reproduces without a side file  ## Environment  OS: Windows 7 6.1.7601 Selenium IDE Version:  Bug independant of side  Selenium SIDE Runner Version:  3.5.0-beta.0 and 3.17.0 Node version: 10.14.2 Browser: Browser Version: ChromeDriver 86.0.4240.22","closed","R-awaiting answer,","egadsthefuzz","2020-11-07T01:42:02Z","2021-09-05T08:31:24Z"
"","8839","[py] `send_key` producing an error: `join() takes exactly one argument`","## üêõ Bug Report  Running `send_keys` in the Python environment with variable arguments produces the following error: ``` TypeError: join() takes exactly one argument (2 given) ``` Looks like the bug is fixed by changing the variable expansion `*value` used in the `join` to the plain old tuple, `value`, produced by the variable argument: https://github.com/SeleniumHQ/selenium/blob/trunk/py/selenium/webdriver/remote/webelement.py#L539  ## To Reproduce  Spin up a local Python Webdriver, inject a `` with some text in it, then send cntrl-a, cntrl-c, and cntrl-v: ```python driver.execute_script('var textArea = document.createElement(""textarea"");textArea.textContent = ""my cool text"";document.body.appendChild(textArea);') text_area = driver.find_element_by_tag_name('textarea') text_area.click() text_area.send_keys(Keys.CONTROL, 'a') text_area.send_keys(Keys.CONTROL, 'c') text_area.send_keys(Keys.CONTROL, 'v') ```  ## Expected behavior  The text area should select all text content, copy, then paste the content of the text area (or whatever is in the clipboard). Instead, I get the following error:  ``` TypeError: join() takes exactly one argument (2 given) ```  ## Environment  OS: Linux Browser: Chrome Browser version: 86.0.4240.75 Language Bindings version: Python","closed","needs-triaging,","sufyanAbbasi","2020-11-05T07:35:13Z","2021-09-05T08:31:30Z"
"","8870","LinuxEphemeralPortRangeDetector#getInstance fails on Java 8","## üêõ Bug Report  Root cause: [This recent change](https://github.com/SeleniumHQ/selenium/commit/08fd05c7ba5008cbf7ccbc665d62e5aae90e40c6) added Charset to `new FileReader(...)` which does not have that overloaded constructor in Java 8.  I've just updated my project to `4.0.0-alpha-7` (from `4.0.0-alpha-6`), it's (unfortunately) running with Java 8 but it can no longer start Chrome.  Is Java 11 a requirement for Selenium `4.0.0-alpha-7`?  ## To Reproduce  Detailed steps to reproduce the behaviour:  Try to start chrome but it fails with the following: ``` java.lang.NoSuchMethodError: java.io.FileReader.(Ljava/io/File;Ljava/nio/charset/Charset;)V 	at org.openqa.selenium.net.LinuxEphemeralPortRangeDetector.getInstance(LinuxEphemeralPortRangeDetector.java:36) 	at org.openqa.selenium.net.PortProber.(PortProber.java:42) 	at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:401) 	at org.openqa.selenium.chrome.ChromeDriverService.createServiceWithConfig(ChromeDriverService.java:133) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:139) ```  ## Expected behaviour  Chrome opens (then quits).  ## Test script or set of commands reproducing this issue  With Java 8 compile and run: ```java import org.openqa.selenium.chrome.ChromeDriver;  public class Test {  	public static void main(String[] args) { 		ChromeDriver chromeDriver = new ChromeDriver(); 		chromeDriver.quit(); 	} } ```  ## Environment  OS: Linux (Ubuntu 18.04) Browser: Chrome Browser version: 86 Browser Driver version: Chromedriver 86 Language Bindings version: Java 4.0.0-alpha-7 Selenium Grid version (if applicable): n/a","closed","C-java,","ham1","2020-11-12T14:48:38Z","2021-09-05T08:31:26Z"
"","8326","selenium/standalone-chrome:4.0.0: ‚ÄúHost header or origin header is specified and is not localhost‚Äù","## üêõ Bug Report  Remote WebDriver fails to execute any command through a Selenium 4.0.0 Standalone Server in Chrome if any other (non IP address) hostname than ‚Äúlocalhost‚Äù is used for connecting to the Selenium Server.  Having URLs with other names than ‚Äúlocalhost‚Äù for the host part is a very common scenario in a containerized environment. Using IP addresses ususally is not an option in environments as dynamic as e.g. a Kuberneter cluster.  The root cause may be related to [this Chromium issue](https://bugs.chromium.org/p/chromium/issues/detail?id=813540).  ## Detailed steps to reproduce the behavior: This issue can be reproduced by running basic remote WebDriver commands against a selenium/standalone-chrome:4.0.0 Docker container.  Given you have Docker installed and you have unpacked the attached [selenium.zip file](https://github.com/SeleniumHQ/selenium/files/4652584/selenium.zip).  1. Open a shell. 2. Run `docker-compose up -d`. 3. Run `docker-compose run client python /selenium4.py`. ``` Traceback (most recent call last): File ""/selenium4.py"", line 7, in    driver.get(""http://www.google.com"") File ""/usr/local/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py"", line 333, in get   self.execute(Command.GET, {'url': url}) File ""/usr/local/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py"", line 321, in execute   self.error_handler.check_response(response) File ""/usr/local/lib/python3.8/site-packages/selenium/webdriver/remote/errorhandler.py"", line 208, in check_response   raise exception_class(value) selenium.common.exceptions.WebDriverException: Message: Host header or origin header is specified and is not localhost. ```  For demonstrating that this is not an issue with selenium/standalone-chrome:3.141.59, run: `docker-compose run client python /selenium3.py`  ``` [] ```  The commands in selenium3.py and selenium4.py are as simple as:  ```python driver.get(""http://www.google.com"") print(driver.find_elements_by_tag_name(""body"")) ```  ## Expected behavior  It should be possible to use URLs like http://selenium4:4444 for connecting to the Selenium Server  (i.e. selenium4.py should complete successfully in above scenario).  selenium4.py does complete successfully when being run from the host machine (given Python is installed) with http://localhost:4444, resp. as the Selenium Server URL.  ## Environment Browser: Chrome Browser Version: The one included with selenium/standalone-chrome:4.0.0 Selenium Grid version: 4.0.0","closed","C-grid,","devopsix","2020-05-19T19:03:50Z","2021-09-05T09:44:06Z"
"","8643","hashCode() method in org.openqa.selenium.Cookie doesn't take cookie domain into account","## üêõ Bug Report  Problem:  org.openqa.selenium.manage().getCookies returns a Set of org.openqa.selenium.Cookie. the hashCode() method of org.openqa.selenium.Cookie only takes the cookie name, but not the domain name into account. Thus, two separate cookies with the same name, but different domains overwrite each other in the set.  Proposal:  hashCode() should also take the domain name into account","closed","R-awaiting answer,","hankstenberg","2020-08-24T16:23:23Z","2021-09-05T08:34:46Z"
"","8193","Invalid argument received when navigating to a url without http[s]","## üêõ Bug Report  Probably related to #7789  I am testing the EdgeDriver version 4.0.0-alpha05 and noticed that when trying to navigate to non fully qualified url then I receive the Invalid argument exception.  Navigation code: driver.Navigate().GoToUrl(url);  Url: www.google.com gives the error. Url: https://www.google.com works fine.  ## To Reproduce  Url: www.google.com gives the error. Url: https://www.google.com works fine.  ## Expected behavior  When navigating to www.google.com then it should work or a clear error should be provided.  ## Test script or set of commands reproducing this issue  FAIL: driver.Navigate().GoToUrl(""www.google.com""); PASS: driver.Navigate().GoToUrl(""https://www.google.com"");  ## Environment  OS: Windows 10 Browser: Edge Browser version: 80.0.361.111 Browser Driver version: 4.0.0-alpha05","closed","needs-triaging,","Telavian","2020-04-10T21:57:34Z","2020-05-20T22:24:30Z"
"","8659","System.Net.WebException: The operation has timed out.","## üêõ Bug Report  OS: Ubuntu 20.04 Browser: Chrome Browser version: Version 85.0.4183.83 (64-bit) Browser Driver version: 85.0.4183.83 Language Bindings version: C# Selenium version (if applicable): version = '3.141.0'  I have visited endless SO posts, researched for days, but the only proposed ""solution"" was to increase my timeout value. For me, this doesn't fix the issue. I have changed it to 10 minutes (600 seconds) and I am still receiving the issue.  This error is very sporadic and usually happens every 2-3 hours into the runtime.  I am using the following packages: ``` Selenium.WebDriver.ChromeDriver (85.0.4183.8300) Selenium.WebDriver (3.141.0) ```  `google-chrome --version` returns Google Chrome 85.0.4183.83, and I am using version 85.0.4183.83 of chrome driver, downloaded from https://chromedriver.storage.googleapis.com/85.0.4183.83/chromedriver_linux64.zip  The trigger for this exception seems to be navigating to a URL, like:  `_webDriver.Navigate().GoToUrl(url);`  Although I have experienced the issue when trying to fetch the page source too.   Here is how I set up the browser, ``` var chromeOptions = new ChromeOptions();  chromeOptions.AddArgument(""--disable-notifications""); chromeOptions.AddArgument(""--user-agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.97 Safari/537.36"");  // chromeOptions.AddArgument(""--log-level=3"");  if (!Debugger.IsAttached) {     chromeOptions.AddArgument(""headless""); }  if (RuntimeInformation.IsOSPlatform(OSPlatform.Linux)) {     chromeOptions.AddArgument(""--no-sandbox""); }  this.AddSingleton(provider => new ChromeDriver(Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location), chromeOptions, TimeSpan.FromSeconds(600))); ```  I have tried updating my drivers time out value, up to 10 minutes but the issue is still there  Error message: `The HTTP request to the remote WebDriver server for URL http://localhost:45421/session/34d4b720ec29326e9d11938513f34dc8/url timed out after 600 seconds.`  Stack trace (raw from Bugsnag) `OpenQA.Selenium.WebDriverException: The HTTP request to the remote WebDriver server for URL http://localhost:45421/session/34d4b720ec29326e9d11938513f34dc8/url timed out after 600 seconds. ---> System.Net.WebException: The operation has timed out.    at System.Net.HttpWebRequest.GetResponse()    at OpenQA.Selenium.Remote.HttpCommandExecutor.MakeHttpRequest(HttpRequestInfo requestInfo)   --- End of inner exception stack trace ---    at OpenQA.Selenium.Remote.HttpCommandExecutor.MakeHttpRequest(HttpRequestInfo requestInfo)    at OpenQA.Selenium.Remote.HttpCommandExecutor.Execute(Command commandToExecute)    at OpenQA.Selenium.Remote.DriverServiceCommandExecutor.Execute(Command commandToExecute)    at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(string driverCommandToExecute, Dictionary parameters)    at OpenQA.Selenium.Remote.RemoteWebDriver.set_Url(string value)    at Worker.Social.NavigateToProfile(string profileUrl) in /root/worker/social/SocialEventHandler.cs:line 59    at Worker.Queue.ProcessQueueItem(QueueItem item, ISocialEventHandler eventHandler) in /root/worker/queue/QueueWorker.cs:line 93`","closed","R-awaiting answer,","ketchums","2020-08-31T21:44:00Z","2021-09-05T08:34:54Z"
"","8783","[Selenium 4][Grid] Unknown command: (POST) /session after trying to run my grid tests on a remote machine.","## üêõ Bug Report  org.openqa.selenium.UnsupportedCommandException: **Unknown command: (POST) /session.    ## To Reproduce On Hub machine (Mac OS) run `java -jar selenium-server-4.0.0-alpha-1.jar hub`  On remote Node Machine (Windows 10) run `java -jar selenium-server-4.0.0-alpha-1.jar node --detect-drivers --publish-events tcp://hub:4442 --subscribe-events tcp://hub:4443` .  Drivers are located in the same folder as the  Selenium Server jar   ## Test script  Capabilities:   ``` String nodeURL = ""http://{nodeIP}:5555""; DesiredCapabilities capability = new DesiredCapabilities(); capability.setBrowserName(""chrome""); RemoteWebDriver driver = new RemoteWebDriver(new URL(nodeURL),capability); ``` ## Logs  **HUB**: ``` 16:15:57.470 INFO [EventBusConfig.createBus] - Creating event bus: org.openqa.selenium.events.zeromq.ZeroMqEventBus 16:15:57.566 INFO [BoundZmqEventBus.] - XPUB binding to [binding to tcp://*:4442, advertising as tcp://10.3.5.202:4442], XSUB binding to [binding to tcp://*:4443, advertising as tcp://10.3.5.202:4443] 16:15:57.659 INFO [UnboundZmqEventBus.] - Connecting to tcp://{hubIP}:4442 and tcp://{hubIP}:4443 16:15:57.664 INFO [UnboundZmqEventBus.] - Sockets created 16:15:57.666 INFO [UnboundZmqEventBus.lambda$new$2] - Bus started 16:15:57.770 INFO [BoundZmqEventBus.] - Event bus ready 16:15:57.953 INFO [Log.initialized] - Logging initialized @797ms to org.seleniumhq.jetty9.util.log.JavaUtilLog 16:15:58.103 INFO [Server.doStart] - jetty-9.4.z-SNAPSHOT; built: 2018-08-30T13:59:14.071Z; git: 27208684755d94a92186989f695db2d7b21ebc51; jvm 1.8.0_211-b12 16:15:58.154 INFO [ContextHandler.doStart] - Started o.s.j.s.ServletContextHandler@7f552bd3{/,null,AVAILABLE} 16:15:58.169 INFO [AbstractConnector.doStart] - Started ServerConnector@47920b47{HTTP/1.1,[http/1.1]}{0.0.0.0:4444} 16:15:58.169 INFO [Server.doStart] - Started @1014ms ``` **NODE**: ``` 16:16:24.585 INFO [EventBusConfig.createBus] - Creating event bus: org.openqa.selenium.events.zeromq.ZeroMqEventBus 16:16:25.024 INFO [UnboundZmqEventBus.] - Connecting to tcp://{hubIP}:4442 and tcp://{hubIP}:4443 16:16:25.075 INFO [UnboundZmqEventBus.] - Sockets created 16:16:25.079 INFO [UnboundZmqEventBus.lambda$new$2] - Bus started 16:16:30.125 INFO [NodeOptions.lambda$null$1] - Adding Capabilities {browserName: chrome} 9 times 16:16:30.128 INFO [NodeOptions.lambda$null$1] - Adding Capabilities {browserName: firefox} 9 times 16:16:30.128 INFO [NodeOptions.lambda$null$1] - Adding Capabilities {browserName: internet explorer} 1 times 16:16:30.457 INFO [Log.initialized] - Logging initialized @6337ms to org.seleniumhq.jetty9.util.log.JavaUtilLog 16:16:30.543 INFO [Server.doStart] - jetty-9.4.z-SNAPSHOT; built: 2018-08-30T13:59:14.071Z; git: 27208684755d94a92186989f695db2d7b21ebc51; jvm 1.8.0_171-b11 16:16:30.576 INFO [ContextHandler.doStart] - Started o.s.j.s.ServletContextHandler@7b9a4292{/,null,AVAILABLE} 16:16:30.590 INFO [AbstractConnector.doStart] - Started ServerConnector@6c64cb25{HTTP/1.1,[http/1.1]}{0.0.0.0:5555} 16:16:30.591 INFO [Server.doStart] - Started @6471ms ``` **IDE Error after running test**: ``` org.openqa.selenium.UnsupportedCommandException: Unknown command: (POST) /session Build info: version: '4.0.0-alpha-1', revision: 'd1d3728cae', time: '2019-04-24T16:15:34' System info: host: 'DESKTOP-V1BPR5G', ip: '{nodeip}', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_171' Driver info: driver.version: unknown Build info: version: '4.0.0-alpha-6', revision: '5f43a29cfc' System info: host: 'ci-osx3', ip: '{hubIP}', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.5', java.version: '9' Driver info: driver.version: RemoteWebDriver remote stacktrace: org.openqa.selenium.UnsupportedCommandException: Unknown command: (POST) /session Build info: version: '4.0.0-alpha-1', revision: 'd1d3728cae', time: '2019-04-24T16:15:34' System info: host: 'DESKTOP-V1BPR5G', ip: ''{nodeip}', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_171' Driver info: driver.version: unknown 	at org.openqa.selenium.grid.server.CommandHandlerServlet.lambda$new$0(CommandHandlerServlet.java:46) 	at org.openqa.selenium.grid.server.W3CCommandHandler.execute(W3CCommandHandler.java:48) 	at org.openqa.selenium.grid.server.CommandHandlerServlet.service(CommandHandlerServlet.java:58) 	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790) 	at org.seleniumhq.jetty9.servlet.ServletHolder.handle(ServletHolder.java:865) 	at org.seleniumhq.jetty9.servlet.ServletHandler.doHandle(ServletHandler.java:535) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:146) 	at org.seleniumhq.jetty9.security.SecurityHandler.handle(SecurityHandler.java:548) 	at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:257) 	at org.seleniumhq.jetty9.server.handler.ContextHandler.doHandle(ContextHandler.java:1340) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:203) 	at org.seleniumhq.jetty9.servlet.ServletHandler.doScope(ServletHandler.java:473) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:201) 	at org.seleniumhq.jetty9.server.handler.ContextHandler.doScope(ContextHandler.java:1242) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:144) 	at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132) 	at org.seleniumhq.jetty9.server.Server.handle(Server.java:503) 	at org.seleniumhq.jetty9.server.HttpChannel.handle(HttpChannel.java:364) 	at org.seleniumhq.jetty9.server.HttpConnection.onFillable(HttpConnection.java:260) 	at org.seleniumhq.jetty9.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:305) 	at org.seleniumhq.jetty9.io.FillInterest.fillable(FillInterest.java:103) 	at org.seleniumhq.jetty9.io.ChannelEndPoint$2.run(ChannelEndPoint.java:118) 	at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:333) 	at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:310) 	at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:168) 	at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.produce(EatWhatYouKill.java:132) 	at org.seleniumhq.jetty9.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:765) 	at org.seleniumhq.jetty9.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:683) 	at java.lang.Thread.run(Unknown Source) ```  ## Environment  OS Hub: 10.15.1 OS Node: Win 10 Pro Browser: Chrome Browser version: 86.0.4240.75 Browser Driver version: ChromeDriver 86.0.4240.22 Java version Hub : 1.8.0_211-b12 Java version Node : 1.8.0_171 Selenium Grid version: 4","closed","R-awaiting answer,","jacorgaz","2020-10-13T15:08:08Z","2021-09-05T08:27:48Z"
"","8375","[javascript] Unsure how to fix the failing relative locator test","## üêõ Bug Report  One of the recent tests for the relative locators is failing the JavaScript build in Travis CI. Could you please confirm what the expected behaviour is and if you'd like me to attempt a fix? Perhaps the author @AutomatedTester can provide some insight.  The test is [/javascript/node/selenium-webdriver/test/lib/by_test.js#L90-L102](https://github.com/SeleniumHQ/selenium/blame/df8c0b00426762fcf52d8b50461b0a81d8d6ce2a/javascript/node/selenium-webdriver/test/lib/by_test.js#L90-L102): ```js   describe('RelativeBy', function() {     it('marshalls the RelativeBy object', function() {       let relative = by.withTagName(""p"").above(by.By.name(""foobar""));       let expected = {         'relative': {           'root': ""p"",           'filters': [{ ""kind"": ""near"", ""args"": [{""name"":""foobar""}] }], //                              ^^^^^^                   ^^^^^^^^ //                              ""above""                  ?         }       }       assert.deepEqual(relative.marshall(), expected);     });   }); ```  The test failure looks like the following. This is taken from Travis CI [job 342002768](https://travis-ci.com/github/SeleniumHQ/selenium/jobs/342002768#L335).  ```Failures: 1) by RelativeBy marshalls the RelativeBy object   Message:     AssertionError: Expected values to be loosely deep-equal:          {       relative: {         filters: [           {             args: [               name(name) {         return By.css('*[name=""' + escapeCss(name) + '""]');       } {                 using: 'css selector',                 value: '*[name=""foobar""]'               }             ],             kind: 'above'           }         ],         root: 'p'       }     }          should loosely deep-equal          {       relative: {         filters: [           {             args: [               {                 name: 'foobar'               }             ],             kind: 'near'           }         ],         root: 'p'       }     }   Stack:     error properties: Object({ generatedMessage: true, code: 'ERR_ASSERTION', actual: Object({ relative: Object({ root: 'p', filters: [ Object({ kind: 'above', args: [ By(css selector, *[name=""foobar""]) ] }) ] }) }), expected: Object({ relative: Object({ root: 'p', filters: [ Object({ kind: 'near', args: [ Object({ name: 'foobar' }) ] }) ] }) }), operator: 'deepEqual' })         at          at UserContext. (javascript/node/selenium-webdriver/test/lib/by_test.js:99:14)         at          at processImmediate (internal/timers.js:439:21) ```  It is clear the `kind` should be `""above""`, but I'm not sure about the `name` and if it should be evaluated somewhere along the way. ü§î  ## To Reproduce  Run the tests for JavaScript tests  ``` bazel test //javascript/node/selenium-webdriver:tests ```  ## Expected behavior  * The test should pass locally and on TravisCI. * The JavaScript build should succeed on TravisCI. * We can use feedback from the CI build to evaluate PRs (like my PRs to follow for #8357 üòâ)  ## Actual behaviour  See above.  ## Test script or set of commands reproducing this issue  * Checkout `master` * Install the prerequisites * Run the JavaScript test suite  ## Environment  TravisCI.","closed","needs-triaging,","seanpoulter","2020-06-01T04:31:47Z","2021-09-05T09:12:34Z"
"","8278","Selenium 4.0.0-alpha-5: cannot access org.openqa.selenium.virtualauthenticator.HasVirtualAuthenticator","## üêõ Bug Report  Once upgrading to Selenium 4.0.0-alpha-5, I am seeing the exception of class not found. It is a compile time error.  **There is no issue while working with 3.141.59**  Dependencies used: ```                      io.appium             java-client             7.3.0                                org.seleniumhq.selenium             selenium-java             4.0.0-alpha-5                                org.seleniumhq.selenium             selenium-server             4.0.0-alpha-2          ```  ## Environment  OS: OSX Browser: Not required as compile time error Browser Driver version:  Language Bindings version: Java 4.0.0-alpha-5 Selenium Grid version (if applicable): 4.0.0-alpha-2 Java: 11","closed","needs-triaging,","Naumansh","2020-05-06T16:55:55Z","2021-09-05T09:02:56Z"
"","8554","Once per few hundred tests operation timeout on initializing Chrome driver on Microsoft's agent","## üêõ Bug Report  Once per few hundred times while running on VS2019 Microsoft managed agent I do get timeout on browser startup.  ## To Reproduce  Create ChromeDriver before each test:  ``` driverPath = Environment.GetEnvironmentVariable(""ChromeWebDriver"") ?? Environment.CurrentDirectory;  driver = new ChromeDriver(driverPath); ``` run tests with MS VS2019 agent Detailed steps to reproduce the behavior:  ## Expected behavior  Browser always opens.  ##Actual behaviour Once per few hundred test runs:  OpenQA.Selenium.WebDriverException : The HTTP request to the remote WebDriver server for URL http://localhost:3656/session timed out after 60 seconds. ----> System.Net.WebException : The operation has timed out. TearDown : BoDi.ObjectContainerException : Interface cannot be resolved: OpenQA.Selenium.IWebDriver Stack trace at OpenQA.Selenium.Remote.HttpCommandExecutor.MakeHttpRequest(HttpRequestInfo requestInfo) at OpenQA.Selenium.Remote.HttpCommandExecutor.Execute(Command commandToExecute) at OpenQA.Selenium.Remote.DriverServiceCommandExecutor.Execute(Command commandToExecute) at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters) at OpenQA.Selenium.Remote.RemoteWebDriver.StartSession(ICapabilities desiredCapabilities) at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(ICommandExecutor commandExecutor, ICapabilities desiredCapabilities) at OpenQA.Selenium.Chrome.ChromeDriver..ctor(ChromeDriverService service, ChromeOptions options, TimeSpan commandTimeout)  ## Environment  MS VS2019 Agent OS: Windows 10 Browser: Chrome Browser version: 84 Browser Driver version: 84.0.4147.3001 Language Bindings version: .NET Core 2.1","closed","","Duke4848","2020-07-20T09:15:44Z","2021-09-05T08:36:07Z"
"","7886","Element sendKeys changes does not deliver single newline character","## üêõ Bug Report  Nov 18th change to Element.sendKeys in the Java bindings results in loss of a single newline character. This was introduced in https://github.com/SeleniumHQ/selenium/commit/fc12197e879bbea25e33058444efad46650d2b5b.  If the input to sendKeys is ""\n"", nothing will be sent to the driver. This results in breaking test FormHandlingTest.testShouldSubmitAFormUsingTheNewlineLiteral.  I believe this will also drop a trailing newline, but I haven't confirmed that.  ## To Reproduce Run test FormHandlingTest.testShouldSubmitAFormUsingTheNewlineLiteral. The test code is:    public void testShouldSubmitAFormUsingTheNewlineLiteral() {     driver.get(pages.formPage);     WebElement nestedForm = driver.findElement(By.id(""nested_form""));     WebElement input = nestedForm.findElement(By.name(""x""));     input.sendKeys(""\n"");     wait.until(titleIs(""We Arrive Here""));     assertThat(driver.getCurrentUrl()).endsWith(""?x=name"");   }  The test fails the wait, because the navigation never occurs. the SendKeys command delivers an empty string to ChromeDriver.  This build also shows the failure: https://github.com/SeleniumHQ/selenium/runs/309284705  ## Expected behavior ChromeDriver should receive the text ""\n"".  Instead the text is empty: """".","closed","C-java,","TriciaCrichton","2019-12-23T22:55:14Z","2020-04-18T22:17:06Z"
"","8787","A Node that doesn't send a registration secret will always connect to the Hub","## üêõ Bug Report  Nodes that don't send any registration secret will be always allowed to connect to the hub.    ## To Reproduce    1. Download the `selenium-server-4.0.0-alpha-6.jar` 2. Start a hub instance with a `--registration-secret MY_SECRET_WORD` 3. Start a node instance which connects to the hub. Do not specify the `--registration-secret` in the command line. 4. The hub will register the node (also visible via {HUB_URL}/status).  ## Expected behavior  The hub should reject the node.  ## Test script or set of commands reproducing this issue  N/A  ## Environment  OS: Ubuntu 16.04.6 LTS (Hub) / Windows 10 (Node)  Browser:  Browser version:  Browser Driver version:  Language Bindings version:   Selenium Grid version 4.0.0-alpha-6","closed","C-grid,","hurrikam","2020-10-14T13:21:45Z","2021-09-05T08:34:01Z"
"","8679","Selenium Webdriver can't find Chrome binary after new install of Chrome v85","## üêõ Bug Report  My Python program uses Selenium (v3.141.0) Webdriver to automate web browsing.  It was working with Chrome v84.  However, now, with Chrome v85, it fails with the following error message:         selenium.common.exceptions.WebDriverException: Message: unknown error: cannot find Chrome binary.   My program uses chromedriver_autoinstaller to download the correct version of ChromeDriver to match the version of the Chrome browser.    If I uninstall Chrome v85 and install Chrome v84, the program works just fine.       -->  ## To Reproduce  Detailed steps to reproduce the behavior:  1.)  Created new Windows 10 image on Azure Cloud 2.)  Compiled my ""GoogleSearch.exe"" Python program (listed below) and loaded it to the new Windows 10 Image 3.)  Installed Chrome v85 4.)  Opened cmd window on new windows 10 image and started ""GoogleSearch.exe""  ## Expected behavior  Previously, my ""GoogleSearch.exe"" Python program would open Chrome at the Google search page.  ## Test script or set of commands reproducing this issue  GoogleSearch.py:      import PySimpleGUI as sg, chromedriver_autoinstaller     from selenium.webdriver.chrome.options import Options       from selenium import webdriver      sg.theme('Light Blue 2')      layout = [[sg.Frame('',[[sg.Text('Google Search', size = (20, 1), font = ('', 17)), sg.Button('Start')],                    [sg.Text('Click ""Start"" to open the Google search window.  Click ""Exit"" to close this window and exit', size = (40, 3))]]),],                    [sg.Button('Exit')]]      window = sg.Window('', layout, keep_on_top = True)     event, values = window.read()      if event == 'Start':         while event == 'Start':             options = Options()             options.add_experimental_option('excludeSwitches', ['enable-logging'])                     driver = webdriver.Chrome(options = options, executable_path = chromedriver_autoinstaller.install(cwd = True))             driver.get('http://www.google.com')              event, values = window.read()             driver.quit()     window.close()   Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS:  Windows Version 10 Browser:  Chrome  Browser version:  v85.0.4183.83 Browser Driver version:  ChromeDriver v85.0.4183.38 Language Bindings version:  Python v3.8.5 Selenium Grid version (if applicable):","closed","R-awaiting answer,","DavidGurley","2020-09-07T15:07:58Z","2021-09-05T08:34:07Z"
"","8128","TypeError: __init__() missing 1 required positional argument: 'executable_path'","## üêõ Bug Report  my codeÔºö from selenium import webdriver  driver = webdriver.Ie(executable_path='IEDriverServer.exe') driver.get('http://www.baidu.com') driver.switch_to.new_window('tab') handles = driver.window_handles driver.switch_to.window(handles[-1]) driver.get('http://www.google.com')    ## To Reproduce  Traceback (most recent call last):   File ""e:\Dropbox\17.Develop\2.Code\08.ÁΩëÁªú\selenium\selenium01.py"", line 3, in      driver = webdriver.Ie(executable_path='IEDriverServer.exe')   File ""E:\Dropbox\17.Develop\2.Code\08.ÁΩëÁªú\selenium\env\lib\site-packages\selenium\webdriver\ie\webdriver.py"", line 91, in __init__     service = Service() TypeError: __init__() missing 1 required positional argument: 'executable_path'   ## Environment  OS:  Browser:  IE Browser version: 11 Browser Driver version:  Language Bindings version:  python 3.8.1 Selenium Grid version (if applicable): selenium-4.0.0a1","closed","C-py,","jasonyun","2020-03-23T00:15:43Z","2020-05-05T21:24:57Z"
"","7979","Unable to initialize Microsoft Edge driver on macOS with default capabilities","## üêõ Bug Report  Microsoft Edge browser and Microsoft Edge WebDriver are available on macOS. However, if you write any simple selenium test, driver initialization will fail on macOS because WINDOWS platform is hardcoded in capabilities. Issue affects Python and JavaScript.  ## To Reproduce  1) Use macOS 10.15 (or any other macOS) 2) Initialize Edge driver with default settings on Python ``` def setUp(self):         self.driver = webdriver.Edge() ``` The following errors will appear: ``` selenium.common.exceptions.SessionNotCreatedException: Message: session not created: No matching capabilities found ```  ## Expected behavior  I expect that `msedgedriver` will be initialized successfully with default settings  ## Workaround We can override default EDGE capability ``` def setUp(self):         cap = DesiredCapabilities().EDGE         cap[""platform""] = ""ANY""         self.driver = webdriver.Edge(executable_path=""/usr/local/bin/msedgedriver"", capabilities=cap) ```  ## Environment  OS: macOS Browser: Edge Browser version:  79.0.309.71 (actually, reproduces on any version) Browser Driver version:  79.0.309.71","closed","C-py,","maxim-lobanov","2020-01-29T10:57:47Z","2020-03-10T19:52:19Z"
"","8211","wiki suggestion for IE 11 configuration in Windows 10","## üêõ Bug Report  May I suggest some enhancements to the 2nd paragraph found at https://github.com/SeleniumHQ/selenium/wiki/InternetExplorerDriver#required-configuration?  This is the original text: -On IE 7 or higher on Windows Vista or Windows 7, you must set the Protected Mode settings for each zone to be the same value. The value can be on or off, as long as it is the same for every zone. To set the Protected Mode settings, choose ""Internet Options..."" from the Tools menu, and click on the Security tab. For each zone, there will be a check box at the bottom of the tab labeled ""Enable Protected Mode"".  Here is my suggestion, add one more bullet.  -On IE 7 or higher on Windows Vista or Windows 7, you must set the Protected Mode settings for each zone to be the same value. The value can be on or off, as long as it is the same for every zone. -On Windows 10, you must set the Protected Mode for each zone to be disabled. To set the Protected Mode settings, choose ""Internet Options..."" from the Tools menu, and click on the Security tab. For each zone, there will be a check box at the bottom of the tab labeled ""Enable Protected Mode"".","closed","R-awaiting answer,","jpratt2","2020-04-17T23:16:41Z","2021-09-05T10:20:33Z"
"","8488","IEDriverServer hangs (3.150.1.0)","## üêõ Bug Report  Lately the IEDriverServer seems to hang. My tests time out and when I take a look at the remote machine I see a bunch of empty open IEs (""...should connect to "") together with a bunch of IE server processes (and conhost). The tests themselves haven't changed since the last time they were working fine. I've restarted both machines involved. No error messages except the timeouts.  > Error forwarding the new session new session request for webdriver should contain a location header or an 'application/json;charset=UTF-8' response body with the session ID. Command duration or timeout: 600.03 seconds  Had to stop the test suite because it's too flaky atm.  This is probably hard to reproduce and hard to debug. Please let me know if I can provide more information. The test details and the page under test are confidential but this doesn't seem to be an issue with the page.  ## To Reproduce  Detailed steps to reproduce the behavior:  Sadly, it's hard to reproduce. It works sometimes, sometimes it doesn't.  Simple test ```java DesiredCapabilities dc = DesiredCapabilities.internetExplorer(); dc.setCapability(InternetExplorerDriver.IE_ENSURE_CLEAN_SESSION, true); dc.setCapability(""browser_version"", ""11.0""); dc.setCapability(""requireWindowFocus"", true); dc.setCapability(InternetExplorerDriver.INTRODUCE_FLAKINESS_BY_IGNORING_SECURITY_DOMAINS, true); try {     driver = new RemoteWebDriver(new URL(remoteMachineUrl), dc); } catch (MalformedURLException e) {     fail(""Bad remote machine URL? "" + remoteMachineUrl);     return; }  // ... nothing fancy in the tests - they don't even load the inital URL  driver.get(url);  // ... ```  ## Expected behavior  An IE11 should pop up on the remote machine and start loading the URL.  ## Test script or set of commands reproducing this issue  s. a.  ## Environment  OS: debian 9 (running the selenium tests) - Windows 7 x64 (running the hub and nodes) Browser: IE 11 Browser version: 11.0.9600.19230 Browser Driver version: 3.150.1.0 x32 Language Bindings version: œÄ (3.141.59) Selenium Grid version (if applicable): œÄ","closed","D-IE,","black-snow","2020-07-07T09:03:12Z","2021-09-05T08:08:37Z"
"","8135","Jenkins started in the back desk service mode, and selenium could not find the element","## üêõ Bug Report  Jenkins started in the back desk service mode, and selenium could not find the element.    ## To Reproduce    Detailed steps to reproduce the behavior:  ## Expected behavior  A clear and concise description of what you expected to happen.  ## Test script or set of commands reproducing this issue ```java package DailyStatus;  import java.awt.AWTException; import java.io.BufferedReader; import java.io.File; import java.io.FileInputStream; import java.io.InputStreamReader; import java.text.SimpleDateFormat; import java.util.Date; import java.util.Set;  import org.openqa.selenium.Cookie; import org.apache.logging.log4j.LogManager; import org.apache.logging.log4j.Logger; import org.openqa.selenium.By; import org.openqa.selenium.JavascriptExecutor; import org.openqa.selenium.Keys; import org.openqa.selenium.TakesScreenshot; import org.openqa.selenium.WebDriver; import org.openqa.selenium.WebElement; import org.openqa.selenium.firefox.FirefoxDriver; import org.openqa.selenium.firefox.FirefoxOptions; import org.openqa.selenium.firefox.FirefoxProfile; import org.openqa.selenium.firefox.ProfilesIni; import org.openqa.selenium.support.ui.ExpectedConditions; import org.openqa.selenium.support.ui.WebDriverWait; import org.testng.Assert; import org.testng.annotations.Test; import org.openqa.selenium.interactions.Actions;      public class CheckDailyStatus { 	private static Logger logger = LogManager.getLogger(CheckDailyStatus.class); 	public static void main(String[] args) throws InterruptedException,AWTException { 		System.out.println(""Run from main..."");  		test(); 	} 	public static WebDriver mydriver () throws InterruptedException,AWTException{ 		String dirPath = System.getProperty(""user.dir""); 		String firefoxPath = null; 		try { 			BufferedReader br = new BufferedReader( 					new InputStreamReader( 							new FileInputStream( 									new File( 											dirPath + ""\\autoHealthCheckEmailConfig.csv"")),""UTF-8"")); 			String lineTxt = null; 			lineTxt = br.readLine(); 			String[] names = lineTxt.split("",""); 			firefoxPath = names[3]; 			br.close(); 		} catch (Exception e) { 			logger.error(""Error reading configuration file:"", e); 		} 		WebDriver driver; 	 		ProfilesIni pi=new ProfilesIni(); 	    FirefoxProfile profile=pi.getProfile(""default""); 	    //FirefoxProfile profile = new FirefoxProfile(); 	    profile.setPreference(""browser.download.folderList"", 2); 	    		profile.setPreference(""browser.download.dir"",firefoxPath + ""\\Dashboard_Screenshooting""); 		profile.setPreference(""browser.download.manager.showWhenStarting"", false); 		profile.setPreference(""browser.helperApps.neverAsk.saveToDisk"",""application/zip,text/plain,application/vnd.ms-excel,text/csv,text/comma-separated-values,application/octet-stream,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,application/vnd.openxmlformats-officedocument.wordprocessingml.document"");		 	    FirefoxOptions options=new FirefoxOptions(); 	  	    //options.addArguments(""-headless""); 	    options.setProfile(profile); 		String pathIeExe = String.valueOf(firefoxPath + ""\\MozillaFirefox\\firefox.exe""); 	    String pathIeGecko = String.valueOf(firefoxPath + ""\\MozillaFirefox\\geckodriver.exe""); 	    System.setProperty(""webdriver.firefox.bin"", pathIeExe); 	    System.setProperty(""webdriver.gecko.driver"", pathIeGecko); 	    driver = new FirefoxDriver(options); 	    Set coo = driver.manage().getCookies(); 	    System.out.println(coo); 	    driver.manage().deleteAllCookies();		 		return driver; 	}  	@Test 	public static void test() throws InterruptedException,AWTException{ 		//System.setProperty(""java.awt.headless"",""true""); 		String photoPath = System.getProperty(""user.dir""); 		// set the waiting time to 120s 		WebDriver my_dr1=CheckDailyStatus.mydriver(); 		WebDriverWait wait = new WebDriverWait(my_dr1, 180); 		SimpleDateFormat currentTime = new SimpleDateFormat(""yyyy-MM-dd HH:mm:ss""); 		SimpleDateFormat current_Time = new SimpleDateFormat(""yyyy-MM-dd_HHmmss""); 		SimpleDateFormat currentDate = new SimpleDateFormat(""yyyy-MM-dd""); 		// The following section reads the url, login name and password from the target file 		String url = null; 		String loginName = null; 		String password = null; 		try { 			BufferedReader br = new BufferedReader( 					new InputStreamReader( 							new FileInputStream( 									new File( 											photoPath + ""\\autoHealthCheckEmailConfig.csv"")),""UTF-8"")); 			String lineTxt = null; 			lineTxt = br.readLine(); 			String[] names = lineTxt.split("",""); 			url = names[0]; 			loginName = names[1]; 			password = names[2]; 			br.close(); 		} catch (Exception e) { 			logger.error(""Error reading configuration file:"", e); 			my_dr1.quit(); 			System.exit(0); 		}  		try { 			// Login Console 			my_dr1.get(url); 			my_dr1.manage().window().maximize(); 			WebElement userElement = my_dr1.findElement(By.id(""userid"")); 			userElement.clear(); 			userElement.sendKeys(loginName); 			my_dr1.findElement(By.id(""next-btn"")).click(); 			wait.until(ExpectedConditions.presenceOfElementLocated(By.id(""password""))); 			WebElement pasElement = my_dr1.findElement(By.id(""password"")); 			pasElement.clear(); 			pasElement.sendKeys(password); 			my_dr1.findElement(By.id(""loginSubmitButton"")).click(); 			// Thread.sleep(8000); 			//wait.until(ExpectedConditions.frameToBeAvailableAndSwitchToIt(By.id(""mainContent""))); 			wait.until(ExpectedConditions.presenceOfElementLocated(By.id(""mainContent""))).isDisplayed(); 			//reduce the Zoom jarÂåÖÂêØÁî® ÔºåJenkinsÂÖ≥Èó≠ 			//keyboardOperation.reduceZoom(); 			//keyboardOperation.reduceZoom(); 			//keyboardOperation.reduceZoom(); 			my_dr1.switchTo().defaultContent(); 			my_dr1.switchTo().frame(""mainContent""); 			wait.until(ExpectedConditions.presenceOfElementLocated(By.id(""SystemList""))).isDisplayed(); 		} catch (Exception e) { 			logger.error(""====Exception occurs================""); 			if (CommonActions.doesWebElementExist(my_dr1, By.id(""errorLogin"")) == true) { 				//System.out.println(""Login Failed, Please check the UserName and Password.""); 				logger.error(""Login Failed, Please check the UserName and Password:""); 				return; 			} else { //				System.out.println(""Exception reason: ""); //				e.printStackTrace(); 				logger.error(""Exception reason:"", e); 			} 		} 		try { 			// Dashboard Snapshot 			wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(""//*[@id=\""SystemList\""]/li[1]/div""))).isDisplayed();			 			CommonActions.ExportDashBoardToTxt(my_dr1,current_Time); 			System.out.println(currentTime.format(new Date()) + "" Start Snapshot***""); 			System.out.println(currentTime.format(new Date()) + ""for Dashboard*****""); 			String filePath_Dashboard = CommonActions.snapshot( (TakesScreenshot) my_dr1, ""Dashboard_"" + current_Time.format(new Date()) + "".jpg"");			 			JavascriptExecutor js; 			js = (JavascriptExecutor) my_dr1;			 			js.executeScript(""window.scrollTo(0,document.body.scrollHeight)""); 			Thread.sleep(3000); 			String filePath_Dashboard2 = CommonActions.snapshot( (TakesScreenshot) my_dr1, ""Dashboard2_"" + current_Time.format(new Date()) + "".jpg""); 			CommonActions.scaleImage( filePath_Dashboard, photoPath + ""\\Dashboard_Screenshooting\\"" + ""Dashboard_"" + current_Time.format(new Date()) + "".jpg"", 0.8, ""jpg""); 			CommonActions.scaleImage( filePath_Dashboard2, photoPath + ""\\Dashboard_Screenshooting\\"" + ""Dashboard2_"" + current_Time.format(new Date()) + "".jpg"", 0.8, ""jpg""); 			// Queue Manager Status Snapshot 			System.out.println(currentTime.format(new Date()) + "" Current Window Handle: "" + my_dr1.getWindowHandle()); 			my_dr1.switchTo().defaultContent(); 			System.out.println(currentTime.format(new Date()) + "" Page Title: "" + my_dr1.getTitle()); 			Assert.assertEquals(my_dr1.getTitle(), ""ESB Management System""); 			// Launch the page of Queue Manager Status 			my_dr1.findElement(By.linkText(""Queue Manager Status"")).click(); 			wait.until(ExpectedConditions.presenceOfElementLocated(By.id(""mainContent""))).isDisplayed();		 			//wait.until(ExpectedConditions.frameToBeAvailableAndSwitchToIt(By.id(""mainContent""))); 			my_dr1.switchTo().frame(""mainContent"");// Switch to another frame  			System.out.println(currentTime.format(new Date()) + ""for Queue Manager Status*****""); 			System.out.println(currentTime.format(new Date()) + ""Queue Manager Status_ACBC0041*******""); 			// Click ACBC0051 and then click back to ACBC0041 to refresh the data 			// Wait until the data displayed in the table (By check if the table has the sixth row) 			try { 				while (CommonActions 						.doesWebElementExist( 								my_dr1, 								By.xpath(""/html/body/div[2]/div/div[3]/div/div/table/tbody/tr[5]"")) != true) { 					my_dr1.findElement( 							By.xpath(""/html/body/div[2]/div/div[3]/p/span[2]"")) 							.click(); 					my_dr1.findElement( 							By.xpath(""/html/body/div[2]/div/div[3]/p/span[1]"")) 							.click(); 				} 				wait.until(ExpectedConditions.presenceOfElementLocated(By 						.xpath(""/html/body/div[2]/div/div[3]/div/div/table/tbody/tr[5]""))); 				String filePath_QMSACBC0041 = CommonActions.snapshot( 						(TakesScreenshot) my_dr1, ""QStatus_ACBC0041_"" 								+ current_Time.format(new Date()) + "".jpg""); 				CommonActions.scaleImage(filePath_QMSACBC0041, 						""Dashboard_Screenshooting/"" + ""QStatus_ACBC0041_"" 								+ current_Time.format(new Date()) + "".jpg"", 1, 						""jpg""); 			} catch (Exception e) { 				logger.error(currentTime.format(new Date()) 						+ ""Failed to capture ACBC0041.""); 				logger.error(""Exception reason:"",e); 			}  			System.out.println(currentTime.format(new Date()) 					+ ""Queue Manager Status_ACBC0051*******""); 			my_dr1.findElement( 					By.xpath(""/html/body/div[2]/div/div[3]/p/span[2]"")).click(); 			try { 				while (CommonActions 						.doesWebElementExist( 								my_dr1, 								By.xpath(""/html/body/div[2]/div/div[3]/div/div/table/tbody/tr[5]"")) != true) { 					my_dr1.findElement( 							By.xpath(""/html/body/div[2]/div/div[3]/p/span[3]"")) 							.click(); 					my_dr1.findElement( 							By.xpath(""/html/body/div[2]/div/div[3]/p/span[2]"")) 							.click(); 				} 				wait.until(ExpectedConditions.presenceOfElementLocated(By 						.xpath(""/html/body/div[2]/div/div[3]/div/div/table/tbody/tr[5]""))); 				String filePath_QMSACBC0051 = CommonActions.snapshot( 						(TakesScreenshot) my_dr1, ""QStatus_ACBC0051_"" 								+ current_Time.format(new Date()) + "".jpg""); 				CommonActions.scaleImage(filePath_QMSACBC0051, 						""Dashboard_Screenshooting/"" + ""QStatus_ACBC0051_"" 								+ current_Time.format(new Date()) + "".jpg"", 1, 						""jpg""); 			} catch (Exception e) { 				logger.error(currentTime.format(new Date()) 						+ ""Failed to capture ACBC0051.""); 				logger.error(""Exception reason:"",e); 			}  			System.out.println(currentTime.format(new Date()) 					+ ""Queue Manager Status_ACBC0061*******""); 			my_dr1.findElement( 					By.xpath(""/html/body/div[2]/div/div[3]/p/span[3]"")).click(); 			try { 				while (CommonActions 						.doesWebElementExist( 								my_dr1, 								By.xpath(""/html/body/div[2]/div/div[3]/div/div/table/tbody/tr[5]"")) != true) { 					my_dr1.findElement( 							By.xpath(""/html/body/div[2]/div/div[3]/p/span[1]"")) 							.click(); 					my_dr1.findElement( 							By.xpath(""/html/body/div[2]/div/div[3]/p/span[3]"")) 							.click(); 				} 				wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(""/html/body/div[2]/div/div[3]/div/div/table/tbody/tr[5]""))); 				String filePath_QMSACBC0061 = CommonActions.snapshot( 						(TakesScreenshot) my_dr1, ""QStatus_ACBC0061_"" 								+ current_Time.format(new Date()) + "".jpg""); 				CommonActions.scaleImage(filePath_QMSACBC0061, 						""Dashboard_Screenshooting/"" + ""QStatus_ACBC0061_"" 								+ current_Time.format(new Date()) + "".jpg"", 1, 						""jpg""); 			} catch (Exception e) { 				logger.error(currentTime.format(new Date()) 						+ ""Failed to capture ACBC0061.""); 				logger.error(""Exception reason:"",e); //				System.out.println(""====Exception occurs================""); //				System.out.println(currentTime.format(new Date()) //						+ ""Failed to capture ACBC0061.""); //				System.out.println(""Exception reason: ""); //				e.printStackTrace(); 			} 			// Health Check Events Snapshot 			my_dr1.switchTo().defaultContent(); 			// Launch the page of Queue Manager Status 			my_dr1.findElement(By.linkText(""Health Check Events"")).click(); 			wait.until(ExpectedConditions.presenceOfElementLocated(By.id(""mainContent""))).isDisplayed();	 			//wait.until(ExpectedConditions.frameToBeAvailableAndSwitchToIt(By.id(""mainContent""))); 			my_dr1.switchTo().frame(""mainContent"");// Switch to another frame 			Thread.sleep(3000); 			System.out.println(currentTime.format(new Date()) 					+ ""for Health Check Events*****"");		 			CommonActions.SnapHealthCheck(my_dr1, wait,currentTime,current_Time, ""chkGC.sh""); 			CommonActions.SnapHealthCheck(my_dr1, wait,currentTime,current_Time, ""chkMount.sh""); 			CommonActions.SnapHealthCheck(my_dr1, wait,currentTime,current_Time, ""chkStuckFile.sh"");	 			System.out.println(currentTime.format(new Date()) 					+ "" Finish Dashboard Snapshot***"");	 			Thread.sleep(1000); 			System.out.println(currentTime.format(new Date()) 					+ "" Current Window Handle: "" + my_dr1.getWindowHandle()); 			my_dr1.switchTo().defaultContent(); 			System.out.println(currentTime.format(new Date()) + "" Page Title: "" 					+ my_dr1.getTitle()); 			Assert.assertEquals(my_dr1.getTitle(), ""ESB Management System""); 			// Launch the page of Standard Service Log 			wait.until(ExpectedConditions.presenceOfElementLocated(By.linkText(""Standard Service Log""))); 			my_dr1.findElement(By.linkText(""Standard Service Log"")).click(); 			wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(""//*[@id=\""mainContent\""]""))); 			//wait.until(ExpectedConditions.frameToBeAvailableAndSwitchToIt(By.id(""mainContent""))); 			my_dr1.switchTo().frame(""mainContent""); 			// Set Condition & Search 			my_dr1.findElement(By.id(""startTime"")).sendKeys( 					currentDate.format(new Date()) + "" 00:00:00""); 			System.out.println(""StartTime: "" + currentDate.format(new Date()) 					+ "" 00:00:00""); 			my_dr1.findElement(By.id(""endTime"")).sendKeys( 					currentTime.format(new Date())); 			System.out.println(""End Time: "" + currentTime.format(new Date())); 			WebElement StatusBttnScrpt = my_dr1 					.findElement(By 							.xpath(""//html/body/div[@class='sta_rightim add_m30']/form/div[@id='filterlist']/div[@class='sta_i1']/p[@id='wrap']/input[@value='1']"")); 			((JavascriptExecutor) my_dr1).executeScript(""arguments[0].click();"", 					StatusBttnScrpt); 			System.out.println(""Select Status""); 			my_dr1.findElement(By.id(""btnSearch"")); 			System.out.println(""Click 'Search' button""); 			Thread.sleep(5000); 			System.out.println(""Click Export ""); 			my_dr1.findElement(By.id(""export"")).click(); 			// Get all fault 			my_dr1.switchTo().defaultContent(); 			wait.until(ExpectedConditions.presenceOfElementLocated(By.id(""mainContent""))).isDisplayed(); 			//wait.until(ExpectedConditions.frameToBeAvailableAndSwitchToIt(By.id(""mainContent""))); 			my_dr1.switchTo().frame(""mainContent""); 			// Export Function for Error Transaction Log 			Thread.sleep(1000);  			WebElement OKBttnScrpt = my_dr1 					.findElement(By 							.xpath(""//html/body/div[@class='deldiv']/div[@class='add_dbtn']/input[@id='subdel']"")); 			System.out.println(currentTime.format(new Date()) 					+ "" Find the Pop-up Window!!!""); 			((JavascriptExecutor) my_dr1).executeScript(""arguments[0].click();"", 					OKBttnScrpt);// Click OK on the Pop-up Window 			System.out.println(currentTime.format(new Date()) 					+ "" Wait the System Finish Export""); 			Thread.sleep(20000); 			// Save the Export File(Can not change the file path) 			my_dr1.switchTo().defaultContent(); 			String winHndle = my_dr1.getWindowHandle();  			if (winHndle == """") { 				System.out.println(currentTime.format(new Date()) 						+ ""Press F5 to refresh the page""); 			}  			System.out.println(currentTime.format(new Date()) 					+ "" Current Window Handle: "" + winHndle); 			//recover the Zoom 			keyboardOperation.recoverZoom(); 			Thread.sleep(5000); 			//logger.error(""ÊµãËØïÂÜôÂÖ•Êó•ÂøóÊñá‰ª∂""); 			my_dr1.quit(); 			System.exit(0);  		} catch (Exception e) { 			logger.error(""Exception reason:"", e); 		} 	} } ```  ####jenkins error########## ``` [testng] org.openqa.selenium.TimeoutException: Expected condition failed: waiting for presence of element located by: By.xpath: //*[@id=""SystemList""]/li[1]/div (tried for 180 second(s) with 500 milliseconds interval) ```  ## Environment  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:   Selenium Grid version (if applicable):","closed","C-java,","zhao173205","2020-03-25T02:04:09Z","2020-05-05T21:25:11Z"
"","8704","Vulnerability: Selenium Node default configuration appears to allow uploading and downloading files.","## üêõ Bug Report  I‚Äôm not sure if this is the right place for this, but I don‚Äôt see any other vulnerability disclosure process on www.selenium.dev. I have some POC python tester code that uses the remote web driver to download and upload files to a Selenium test node. These examples are not exactly rocket science, and its not as much of an exploit as a use of a documented feature inside of some inline html. But just to be safe, if a Selenium maintainer could reach out to me; I can grant read access to my examples so they can take a quick look.","closed","I-needs investigation,","JonStratton","2020-09-16T16:46:49Z","2021-09-05T08:34:54Z"
"","8134","Python webdriver methods not working on Edge Chromium","## üêõ Bug Report  I‚Äôm getting an ‚Äúinvalid locator‚Äù error from the selenium webdriver when running tests on Edge Chromium. I‚Äôm using the python webdriver, the browser opens fine and goes to a page, just using google.co.uk to test. The test works when using the XPath to find the search bar, but when I try to use the element name ‚Äòq‚Äô, the test fails and gives me this:  selenium.common.exceptions.InvalidArgumentException: Message: invalid argument: invalid locator  Edge version: 80.0.361.66 With relevant msedgedriver from https://developer.microsoft.com/en-us/microsoft-edge/tools/webdriver/ selenium   4.0.0a3 Python 3.7.3  The same method works fine when I choose to run on Chrome. Is this a known issue with the new Edge browser?  Thanks.   ## To Reproduce  This method works: query_field_name = '//*[@id=""tsf""]/div[2]/div[1]/div[1]/div/div[2]/input' webdriver.find_element_by_xpath(self.query_field_name)  This method does not work: webdriver.find_element_by_name(‚Äòq‚Äô)  ## Environment  OS: Windows 10 Browser: Edge Browser version: 80.0.361.66 Browser Driver version: msedgedriver 80.0.361.66 Language Bindings version: Python 3.7.3","closed","D-edge,","simon-crooks","2020-03-24T14:19:02Z","2020-05-05T21:21:57Z"
"","8542","getText return value is not equal to what a human sees for a capitalilzed strings with an apostrophe","## üêõ Bug Report  It's very similar to the bug https://bugs.chromium.org/p/chromedriver/issues/detail?id=2155, but this time with an apostrophe.  Let's suppose we have an element `Bla b'la`  The user sees its text as ""Bla B'la"", but getText returns ""Bla B'La""  ## Environment  OS: macOS 10.15.5 Browser: Chrome 83.0.4103.116 (Official Build) (64-bit) Browser Driver version: ChromeDriver 3.141.59 Language Bindings version: Java(TM) SE Runtime Environment (build 1.8.0_251-b08) Selenium version: 3.141.59","closed","I-stale,","tranductrinh","2020-07-17T03:21:56Z","2021-12-26T00:08:08Z"
"","8756","There are no Selenium tests for the new Grid UI","## üêõ Bug Report  It's too easy to accidentally break the Grid UI. There should be unit tests and selenium tests to verify that the UI is working as intended  ## To Reproduce  Inspect the source code of Selenium to find the tests to be run.  ## Expected behavior  The tests should exist and be easy to run using bazel.  ## Environment  OS: macOS Browser: Firefox Browser version: The latest one Browser Driver version: Also the latest one Language Bindings version: HEAD of trunk Selenium Grid version (if applicable): N/A","closed","C-grid,","shs96c","2020-10-01T15:49:19Z","2021-09-05T08:31:33Z"
"","8873","move_to_element_with_offset sometimes moves to wrong location","## üêõ Bug Report  It's possible for a call like `chain.move_to_element_with_offset(driver.find_element(By.TAG_NAME, ""canvas""), 0, 0)` to miss the canvas entirely and move to a different element.  ## To Reproduce  HTML:  ```                    Repro           html * {       box-sizing: border-box;     }                           Header                                                  ```  Python script (using selenium==4.0.0a7):  ``` from time import sleep from selenium import webdriver from selenium.webdriver.common.by import By from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as EC from selenium.webdriver import ActionChains  driver = webdriver.Chrome() # Or Firefox  driver.get(""http://localhost:8002/repro.html"") # The HTML file above  driver.set_window_size(780, 600) # Broken #driver.set_window_size(780, 670) # Works  # Log the locations of all the clicks so we can see if things are behaving driver.execute_script(""""""     window.clicks = [];     document.addEventListener(""click"", (event) => {          window.clicks.push([event.clientX, event.clientY]);     }); """""")  # Almost certainly not necessary, just to demonstrate it's not a race condition sleep(2)  WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.TAG_NAME, ""canvas"")))  # The canvas rect is always correct rect = driver.find_element(By.TAG_NAME, ""canvas"").rect  chain = ActionChains(driver) chain.move_to_element_with_offset(driver.find_element(By.TAG_NAME, ""canvas""), 0, 0) chain.click() chain.move_by_offset(200, 200) chain.click() chain.perform()  clicks = driver.execute_script(""return window.clicks"") print(""Rect"", rect) print(""Clicks"", clicks)  # Depending on the window size, this is correct or not assert clicks[0] == [rect['x'], rect['y']] assert clicks[1] == [clicks[0][0] + 200, clicks[0][1] + 200] ```  ## Expected behavior  The script should click the top left of the canvas and then the point (200, 200) from the top left of the canvas.  Instead, the actual points clicked vary.  With a large window size, the behaviour is correct. With smaller window sizes (it seems that the existence of a vertical scrollbar on the page can trigger the issue), different coordinates are clicked. The x-coordinate is always correct, the y-coordinate varies but is always smaller than the real y-coordinate of the canvas, so that the header is clicked and not the canvas.  This can be verified using `document.addEventListener(""click"")` as above, and also by observing that the text ""Header"" on the page gets selected if a drag operation is used.  In all cases the actual position of the canvas is identical, and Selenium reports the rect of the canvas correctly.  Reproduced with Chrome and Firefox, though they report different y-coordinates.  ## Environment  OS: Ubuntu 20.04 Browser: Reproduced on Firefox and Chrome Browser version: Firefox 82.0.3, Chrome 86.0.4240.198 Browser Driver version: ChromeDriver 86.0.4240.22, geckodriver 0.28.0 Language Bindings version: Python: selenium==4.0.0a7","closed","G-w3c,","amagee","2020-11-15T00:52:49Z","2022-01-26T00:09:43Z"
"","8549","CoreRT AOT Execution Incompatibility","## üêõ Bug Report  It is not possible to run a CoreRT compiled program using Selenium + FirefoxDriver. An exception occurs when trying to create instances of FirefoxOptions and FirefoxDriver.    ## To Reproduce    Simply follow the instructions to create a console executable from the CoreRT repo and call some constructor for the FirefoxProfile and FirefoxDriver classes.  Compiling the program using CoreRT and when executing, an exception will appear in the lines of the call of said constructors due to the use of System.Reflection.Assembly.GetCallingAssembly () since it is not supported in the AOT environment of CoreRT.  Detailed steps to reproduce the behavior:  ## Expected behavior  It was expected to be able to instantiate objects using the constructors of the FirefoxDriver and FirefoxProfile classes without getting any kind of exception or at least any solvable from the rd.xml file.  ## Test script or set of commands reproducing this issue  	using System; 	using System.Runtime.InteropServices; 	using System.Text; 	using OpenQA.Selenium; 	using OpenQA.Selenium.Firefox; 	using System.Linq; 	using System.Threading;  	namespace ConsoleApp1 	{ 		class Program 		{ 			static Boolean isEncodingRegistered = !RuntimeInformation.FrameworkDescription.Contains(""Core"");  			static FirefoxDriverService service; 			static IWebDriver webDriver;  			private static void RegisterEncoding() 			{ 				if (!isEncodingRegistered) 				{ 					Encoding.RegisterProvider(CodePagesEncodingProvider.Instance); 					isEncodingRegistered = true; 				} 			}  			static Program() 			{ 				RegisterEncoding(); 				string driverPath = $@""{AppDomain.CurrentDomain.BaseDirectory}"";  				service = FirefoxDriverService.CreateDefaultService(driverPath); 				Console.WriteLine(""SERVICE""); 				FirefoxOptions options = new FirefoxOptions(); 				Console.WriteLine(""OPTIONS""); 				options.AcceptInsecureCertificates = true; 				options.UseLegacyImplementation = true; 				options.Profile = new FirefoxProfile(); 				Console.WriteLine(""PROFILE""); 				webDriver = new FirefoxDriver(service, options); 				Console.WriteLine(""DRIVER""); 				webDriver.Navigate().GoToUrl(""https://www.selenium.dev/"");			 				webDriver.FindElements(By.ClassName(""nav-item"")).FirstOrDefault().Click(); 				webDriver.FindElement(By.Name(""search"")).SendKeys(""Nothing""); 				webDriver.FindElement(By.Name(""search"")).SendKeys(Keys.Enter); 			}  			static void Main(string[] args) 			{ 				Thread.Sleep(250); 				try 				{ 					webDriver.FindElement(By.ClassName(""gsc-search-button-v2"")); 					Console.WriteLine(""Element found""); 				} 				catch (Exception ex) 				{ 					Console.WriteLine(ex); 					Console.WriteLine(""Element not found""); 				}   				Console.WriteLine(""Press any key to exit.""); 				Console.ReadKey();  				webDriver.Close(); 				service.Dispose(); 			} 		} 	} Execution results:  	SERVICE 	OPTIONS 	Unhandled Exception: System.TypeInitializationException: A type initializer threw an exception. To determine which type, inspect the InnerException's StackTrace property. 	 ---> System.PlatformNotSupportedException: Operation is not supported on this platform. 	   at System.Reflection.Assembly.GetCallingAssembly() + 0x5e 	   at OpenQA.Selenium.Internal.ResourceUtilities.GetResourceStream(String, String) + 0xd0 	   at OpenQA.Selenium.Firefox.FirefoxProfile.ReadDefaultPreferences() + 0x2b 	   at OpenQA.Selenium.Firefox.FirefoxProfile..ctor(String, Boolean) + 0x73 	   at ConsoleApp1.Program..cctor() + 0x14b 	   at System.Runtime.CompilerServices.ClassConstructorRunner.EnsureClassConstructorRun(StaticClassConstructionContext*) + 0xd3 	   --- End of inner exception stack trace --- 	   at System.Runtime.CompilerServices.ClassConstructorRunner.EnsureClassConstructorRun(StaticClassConstructionContext*) + 0x186 	   at System.Runtime.CompilerServices.ClassConstructorRunner.CheckStaticClassConstructionReturnNonGCStaticBase(StaticClassConstructionContext*, IntPtr) + 0xd 	   at ConsoleApp1.Program.Main(String[]) + 0x10 	   at ConsoleApp1!+0x6a1d15  ## Environment  OS: Windows 10 LTSC 2019  Browser: Firefox x64  Browser version: 52.8.0  Browser Driver version: GeckoDriver 0.26.0  Language Bindings version: C# NetCoreApp 3.1","closed","","josephmoresena","2020-07-19T00:58:12Z","2021-09-05T08:12:28Z"
"","8806","Python: Inconsistent find_element(s)_by_* deprecation warning and command documentation","## üêõ Bug Report  In the python [remote/webdriver.py](https://github.com/SeleniumHQ/selenium/blob/c785b1f14120e43859cbddd1e08e27cf0bf3cada/py/selenium/webdriver/remote/webdriver.py) code, `find_element_by_id()` and many similar commands have [this warning](https://github.com/SeleniumHQ/selenium/blob/c785b1f14120e43859cbddd1e08e27cf0bf3cada/py/selenium/webdriver/remote/webdriver.py#L411): ```python warnings.warn(""find_element_by_* commands are deprecated. Please use find_element() instead"") ```  `find_element()` and `find_elements()` have this contradicting  [documentation comment](https://github.com/SeleniumHQ/selenium/blob/c785b1f14120e43859cbddd1e08e27cf0bf3cada/py/selenium/webdriver/remote/webdriver.py#L1116): ```python     """"""     Find an element given a By strategy and locator. Prefer the find_element_by_* methods when     possible.     """""" ```  ## To Reproduce  Look at the code links above.  ## Expected behavior  Personally, I don't see why the find_element(s)\_by\_\* commands have been deprecated.  So I didn't expect to see that warning.  If someone has a pointer to a conversation that lead to this decision, I'd like to see it.  At a minimum, I'd like the documentation and code be consistent.  ## Test script or set of commands reproducing this issue  NA  ## Environment  [github source](https://github.com/SeleniumHQ/selenium/blob/c785b1f14120e43859cbddd1e08e27cf0bf3cada/py/selenium/webdriver/remote/webdriver.py)","closed","needs-triaging,","bonafideduck","2020-10-18T16:44:45Z","2021-09-05T08:33:59Z"
"","8337","Selenium loads an URL using a HTTP POST request POST /session/:sessionId/url but in doc it is written as GET","## üêõ Bug Report  In official selenium doc, for get() method below is written :-  Load a new web page in the current browser window. This is done using an HTTP GET operation, and the method will block until the load is complete (with the default 'page load strategy'.  I think it is a type mistake as per GitHub page, it should be a POST and that works as well.    ## To Reproduce Please launch linked official document.    ## Expected behavior Doc should be updated with correct HTTP method i.e. POST  ## Test script or set of commands reproducing this issue  WebDriver drive r= new ChromeDriver(); driver.get(""https://www.google.com/"");  ## Environment  OS: Windows 10 Browser: Chrome Browser version: 81 Browser Driver version:  Language Bindings version: Java Selenium Grid version (if applicable):  3.141.59","closed","R-awaiting answer,","amodmahajan2016","2020-05-23T04:24:25Z","2020-06-24T18:42:42Z"
"","8727","Open multiple instances of a wait page in a multi-threaded state and a communication death occurs.","## üêõ Bug Report  In multi-threaded state, open multiple instances and wait for the page to die of communication, and it seems that he will not open multiple pages at the same time    ## To Reproduce  exception code :  ```java import cn.hutool.core.io.FileUtil; import cn.hutool.core.util.IdUtil; import org.openqa.selenium.By; import org.openqa.selenium.chrome.ChromeDriver; import org.openqa.selenium.chrome.ChromeOptions; import org.openqa.selenium.support.ui.ExpectedConditions; import org.openqa.selenium.support.ui.WebDriverWait;  import java.io.File; import java.time.Duration; import java.util.concurrent.CompletableFuture;  /**  * Hello world!  */ public class App {     public static void main(String[] args) {         System.setProperty(""webdriver.chrome.driver"", ""/tmp/chromedriver"");         System.setProperty(""webdriver.chrome.silentOutput"", ""true"");          CompletableFuture[] fs = new CompletableFuture[5];         for (int i = 0; i < fs.length; i++) {             fs[i] = CompletableFuture.runAsync(() -> {                 ChromeOptions options = new ChromeOptions();                 options.addArguments(""--user-data-dir="" + FileUtil.getTmpDirPath() + File.separator + IdUtil.fastSimpleUUID());                 ChromeDriver driver = new ChromeDriver(options);                 WebDriverWait wait = new WebDriverWait(driver, Duration.ofMinutes(1));                  driver.get(""https://www.google.com"");                 wait.until(ExpectedConditions.presenceOfElementLocated(By.id(""test"")));             });         }         CompletableFuture.allOf(fs).join();     } }  ```  pom.xml :  ```xml      cn.hutool     hutool-core     5.4.3           org.seleniumhq.selenium     selenium-java     4.0.0-alpha-6  ```    Detailed steps to reproduce the behavior:  ## Expected behavior  He should output a wait timeout exception instead of communication dead.  ## Test script or set of commands reproducing this issue  Run the above code to reproduce  ## Environment  OS: Manjaro 20.1 Mikah  Browser: Chrome Browser version: 85.0.4183.121 Browser Driver version: 85.0.4183.87 Language Bindings version: Java 1.8.0_265-b01 Selenium Grid version (if applicable):","closed","C-java,","zoain-it","2020-09-23T07:33:50Z","2021-09-05T08:33:55Z"
"","8868","In Edge(IE mode), I can't get the handle of window which opened by window.open","## üêõ Bug Report  In Edge(IE mode), I can't get the handle of window which opened by window.open. It's no problem in IE.  ## To Reproduce  1. Use Edge in IE mode https://docs.microsoft.com/en-us/deployedge/edge-ie-mode-policies  2. Follow the directions for the ‚ÄúRequired Configuration‚Äù https://github.com/SeleniumHQ/selenium/wiki/InternetExplorerDriver  3. In html page, make a button to open a new window  4. In test script, use Edge in IE mode by the following code ieOptions = webdriver.IeOptions() ieOptions.add_additional_option(""ie.edgechromium"", True) ieOptions.add_additional_option(""ie.edgepath"",'C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe') driver = webdriver.Ie(executable_path='./driver_machine/IEDriverServer.exe', options=ieOptions)  5. In test script, click the button to open a new window  6. In test script, get the handle of window by driver.window_handles    the result is  1. before click driver.window_handles:['3d24e02d-2013-44d6-bf64-c8800d999903'] 2. after click driver.window_handles:['3d24e02d-2013-44d6-bf64-c8800d999903']  only get the handle of old window, can't get the handle of new window  ## Expected behavior  in the step 6, two handle of old and new window can be geted  In IE the result is OK.  1. before click driver.window_handles:['730db730-41be-45c5-9bed-1491f3ac0f8d'] 2. after click driver.window_handles:['730db730-41be-45c5-9bed-1491f3ac0f8d','4bc6f24a-f672-4bfe-9919-fd343410b58a']  ## Test script or set of commands reproducing this issue  test.py: from selenium import webdriver import time  #Edge(IE mode) ieOptions = webdriver.IeOptions() ieOptions.add_additional_option(""ie.edgechromium"", True) ieOptions.add_additional_option(""ie.edgepath"",'C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe') driver = webdriver.Ie(executable_path='./driver_machine/IEDriverServer.exe', options=ieOptions) #IE #driver = webdriver.Ie(executable_path='./driver_machine/IEDriverServer.exe')  driver.implicitly_wait(30) driver.maximize_window() driver.get('http://localhost:8021/test/test1.html') time.sleep(5) print(""1. before click driver.window_handles:"" + str(driver.window_handles))  _btn1 = driver.find_element_by_id('_btn1') _btn1.click() time.sleep(5) print(""2. after click driver.window_handles:"" + str(driver.window_handles))   test1.html: <!DOCTYPE html> <html> <head>     <title>test1</title>     <script type=""text/javascript"">     function testWindowOpen() {         window.open('test2.html', 'test2window', 'width=800px, height=600px, menubar=no,toolbar=no,status=no,location=no,resizable=yes,scrollbars=no,titlebar=no');     }     </script> </head> <body>     <input id=""_btn1"" type=""button"" value=""window.open"" onclick=""testWindowOpen();"" /> </body> </html>  test2.html: <!DOCTYPE html> <html> <head>     <title>test2</title> </head> <body>     test2 </body> </html>  ## Environment  OS: Windows 10 2004 Browser: Edge IE11 Browser version: Edge(85.0.564.51) IE11(11.329.19041.0) Browser Driver version: IEDriverServer 3.150.1 Language Bindings version: Python 3.141.0  Selenium Grid version (if applicable):","closed","G-msedgedriver,","fqlei","2020-11-12T03:29:58Z","2022-05-29T00:12:56Z"
"","8184","potential null pointer dereference in NetworkInterface.java","## üêõ Bug Report  In ```NetworkInterface.java``` (/java/client/src/org/openqa/selenium/net/NetworkInterface.java ), line 62 when ```networkInterface ``` is checked against ```null``` we guess it can be a null value. If that's indeed the case, then at line 74, the expression ```networkInterface.getInetAddresses()``` will throw a null pointer dereferencing.  ## To Reproduce Detected by our static analysis tool.   ## Expected behavior null pointer is not thrown  ## Test script or set of commands reproducing this issue Again it's detected our static analysis algorithm  ## Environment Any environment  We are developing a new static analysis tool for catching bugs in Java code. Would you please take a look and confirm this is indeed a bug? Thanks a million!!!","closed","","HermioneSW","2020-04-09T01:26:39Z","2020-05-20T21:31:31Z"
"","8571","ImportError: sys.meta_path is None, Python is likely shutting down when calling self.driver.quit() within __del__(self)","## üêõ Bug Report  ImportError: sys.meta_path is None, Python is likely shutting down error is observed when calling `self.driver.quit()` within `__del__(self)`  ## To Reproduce  Detailed steps to reproduce the behavior:  If we pass `self.driver.quit()` within `def __del__(self):` the following error is observed:  ``` Exception ignored in: > Traceback (most recent call last):   File ""C:\Users\Soma Bhattacharjee\Desktop\Debanjan\PyPrograms\init_del_in_python_class.py"", line 17, in __del__   File ""C:\Python\lib\site-packages\selenium\webdriver\chrome\webdriver.py"", line 158, in quit   File ""C:\Python\lib\site-packages\selenium\webdriver\common\service.py"", line 151, in stop   File ""C:\Python\lib\site-packages\selenium\webdriver\common\service.py"", line 122, in send_remote_shutdown_command ImportError: sys.meta_path is None, Python is likely shutting down ```  Where as if we do `self.driver.close()` no errors are observed.  Seems, earlier similar issue was reported in #3330 and the #3263 merge addressed the issue. However, the same issue seems to prevail when using python classes.  ## Test script or set of commands reproducing this issue  Sample Python Code:  ``` from selenium import webdriver from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.common.by import By from selenium.webdriver.support import expected_conditions as EC  class PythonBot:     def __init__(self,my_string):         self.my_string = my_string         self.driver = webdriver.Chrome(executable_path=r'C:\WebDrivers\chromedriver.exe')      def send_text(self):         driver = self.driver         driver.get('https://www.google.com/')         WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.NAME, ""q""))).send_keys(self.my_string)      def __del__(self):         self.driver.quit()  run = PythonBot('Selenium') run.send_text() ```  ## Environment  OS: Windows 10 Browser: Chrome Browser version:  v84.0.4147.89 Browser Driver version: ChromeDriver 84.0.4147.30 Language Bindings version: Python 3.6.3 Selenium version (if applicable): selenium==3.141.0","closed","I-question,","Debanjan-B","2020-07-24T15:21:51Z","2021-09-05T08:37:28Z"
"","8530","IEDriverServer does not receive parameters","## üêõ Bug Report  Im using WebdriverIO together with the IEDriver 3.150.1.0, somehow the driver does not receive the correct parameters, although WDIO sends it out in the right way. All required configurations are set.  [ie.log](https://github.com/SeleniumHQ/selenium/files/4924302/ie.log)  I created this issue https://github.com/webdriverio/webdriverio/issues/5576 over at WebdriverIO, I got the information that WDIO passes the correct parameters to the driver... I assume that somewhere in the driver or in between the parameters are not handled properly. When using IEDriver versions 3.4 - 3.9 this misbehavior was not present, the driver received the parameters (Although I encountered different errors with these versions.).   ## To Reproduce `const { remote } = require(""webdriverio""); let browsers = []  callTests(new Array(10)).then(erg => {   console.log(""Done"") }) async function main(nsc, i) {     //console.log(`Started test: ${testcase}@${nsc} (${i+1}/${allNSC.length})`)     const browser = await remote({         capabilities : {             browserName: ""internet explorer"",         },         port:4448,         logLevel: ""error"",         outputDir: __dirname + ""../../../logs/""     }).catch(err => console.log(err));     browsers[i] = browser     global.browser = browser;     let url = ""https://www.nytimes.com/""     await browser.url(url)     await browser.deleteSession()     await delete browser     await delete browsers[i] }  function callTests(arr, i) {     return new Promise(res => {         if (i == undefined) i = 0         let error = false         main(arr[i], i).catch(async e => {             console.error(e, arr[i])             error = e             await browsers[i].deleteSession();             await delete browsers[i]         }).then(async erg => {             if (i < arr.length - 1) return res(callTests(arr, ++i))             else res()         });     }) }`  Detailed steps to reproduce the behavior:  - Start the IEDriver: `.\IEDriverServer.exe --port=4448 --log-level=DEBUG` - Create new folder, inside here: `npm install webdriverio`  - Create a new file inside this folder and paste in the code above - Start the code.  ## Expected behavior  The IEDriver receives the outgoing parameters.  ## Environment  OS: Windows 10 Browser:  Internet Explorer Browser version: 11.836.18362.0 Browser Driver version: IEDriver 3.150.1.0 Language Bindings version: NodeJS 13.10.1","closed","D-IE,","Westsaid","2020-07-15T09:50:58Z","2021-09-05T08:37:24Z"
"","8295","scroll-behavior: smooth breaks click","## üêõ Bug Report  If you use following style: ` html {     scroll-behavior: smooth !important; } `  and Robot Framework command `Scroll Element Into View` you get `MoveTargetOutOfBoundsException: Message: move target out of bounds` error. Also if you use `Click Element` command which is  out of screen and Selenium needs to scroll to this element you get ` Element is not clickable at point`.    ## To Reproduce    Smooth scrolling example page: https://jsfiddle.net/o8eg7dwh/  Detailed steps to reproduce the behavior: Try to click button with id='test'  ## Expected behavior  Click button  ## Environment  OS: Windows 10 Browser: Chrome Browser version: 81.0.4044.129 Browser Driver version: ChromeDriver robotframework-selenium2library==3.0.0 robotframework-seleniumlibrary==4.4.0","closed","R-awaiting answer,","mihalikv","2020-05-11T16:42:18Z","2021-09-05T08:06:40Z"
"","8216","UnreachableBrowserException instead of NoSuchElementException","## üêõ Bug Report  if xpath is not found in selenium 3.141.59 i have NoSuchElementException  `org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {""method"":""xpath"",""selector"":""//span[normalize-space()='Supply of alcoholic beverages']""}   (Session info: chrome=80.0.3987.163) For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03' System info: host: 'MacBook-Pro-2', ip: 'fe80:0:0:0:31:8ff8:ab39:5031%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.3', java.version: '1.8.0_191' Driver info: org.openqa.selenium.chrome.ChromeDriver Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 80.0.3987.163, chrome: {chromedriverVersion: 80.0.3987.106 (f68069574609..., userDataDir: /var/folders/hd/yrwc8tsx1tv...}, goog:chromeOptions: {debuggerAddress: localhost:54873}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify} Session ID: 9f3edbf8bffe4ecc9cdab54334afdb11 *** Element info: {Using=xpath, value=//span[normalize-space()='Supply of alcoholic beverages']}`  in selenium 4.0.0-alpha-5 i have UnreachableBrowserException `org.openqa.selenium.remote.UnreachableBrowserException: Error communicating with the remote browser. It may have died. Build info: version: '4.0.0-alpha-5', revision: 'b3a0d621cc' System info: host: 'MacBook-Pro-2', ip: 'fe80:0:0:0:31:8ff8:ab39:5031%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.3', java.version: '1.8.0_191' Driver info: driver.version: EventFiringWebDriver Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 80.0.3987.163, chrome: {chromedriverVersion: 80.0.3987.106 (f68069574609..., userDataDir: /var/folders/hd/yrwc8tsx1tv...}, goog:chromeOptions: {debuggerAddress: localhost:64232}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify} Session ID: 70bfedc25acebcb23113f787f4480fc8`   ## Environment  OS: OSX 10.15.3 Browser: Chrome  Browser version:  80.0.3987.163 Browser Driver version:  ChromeDriver 80.0.3987.106","closed","needs-triaging,","mmajcherczyk","2020-04-18T12:59:04Z","2020-05-20T19:00:01Z"
"","8550","SlowLoadableComponent ignores UnableToLoadMessage","## üêõ Bug Report  If a component load fails, the message will default to ""Timed out after x seconds.""  ## To Reproduce  Create a `SlowLoadableComponent` and set the `UnableToLoadMessage` property.  ## Expected behavior  If the property  `UnableToLoadMessage` is set, the `WebDriverTimeoutException` should include it  ## Test script or set of commands reproducing this issue  ```csharp using System; using System.Diagnostics; using Microsoft.VisualStudio.TestTools.UnitTesting; using OpenQA.Selenium; using OpenQA.Selenium.Chrome; using OpenQA.Selenium.Support.UI;  namespace selenium_pruebas {     [TestClass]     public class UnitTest1     {         IWebDriver driver;          [TestMethod]         public void TestMethod1()         {             driver = new ChromeDriver();              driver.Manage().Window.Maximize();              driver.Url = ""https://www.google.com/"";              try             {                 new GoogleAccountInformationComponent(driver).Load();             }             catch (WebDriverException e)             {                 string exception = e.Message;                 string innerException = (e.InnerException != null) ? $""{e.InnerException.Message}"" : string.Empty;                  Debug.WriteLine($""{exception}"");                 Debug.WriteLine($""{innerException}"");                  throw;             }         }          [TestCleanup]         public void TestCleanup()         {             if (driver != null)             {                 driver.Quit();                 driver.Dispose();             }         }          class GoogleAccountInformationComponent : SlowLoadableComponent         {             private IWebDriver driver;              public GoogleAccountInformationComponent(IWebDriver driver) : base(TimeSpan.FromSeconds(5))             {                 this.driver = driver;             }              protected IWebElement AccountInfo => driver.FindElement(By.CssSelector(""div[aria-label = 'Account Information']""));             protected IWebElement OpenAccountInfoButton => driver.FindElement(By.CssSelector(""gb_0f.gb_Za.gb_Pg.gb_i""));             public override string UnableToLoadMessage => ""Could not load 'Account Information'"";              protected override bool EvaluateLoadedStatus() => AccountInfo.Displayed;              protected override void ExecuteLoad() => OpenAccountInfoButton.Click();         }     } } ```  ## Environment  OS: Windows 10 Browser: Google Chrome Browser version: 83.0.4103 Browser Driver version: ChromeDriver 83.0.4103 Language Bindings version: C# 3.141.0 Selenium Grid version (if applicable): N/A","closed","C-dotnet,","elgatov","2020-07-19T04:57:57Z","2021-11-12T00:06:57Z"
"","7986","[IEDriver] Error: No property named 'capabilities' or 'desiredCapabilities' found in new session request body. if Content-Length is not set","## üêõ Bug Report  If `Content-Length` header is not set in request then IEDriver is not able to [process ](https://github.com/SeleniumHQ/selenium/blob/400c32a457b883dbb20066314788b97508547b99/cpp/webdriver-server/server.cc#L323)the request. The other problem is that the [check ](https://github.com/SeleniumHQ/selenium/blob/400c32a457b883dbb20066314788b97508547b99/cpp/webdriver-server/server.cc#L305)for `Content-Lenght` is case sensitive. This is not inline with [HTTP specification](https://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.2).  I am happy to contribute the improvements if you agree with fixing this. But my C++ experience is very limited :(   ## Environment  OS: Windows 10 Browser: Internet Explorer Browser version:  11 Browser Driver version: 3.14.0.0 (64-bit) Language Bindings version: NodeJS","closed","D-IE,","mucsi96","2020-02-02T11:10:10Z","2021-09-05T08:37:29Z"
"","7995","IE doesn't work on windows 10 x32","## üêõ Bug Report  IEDriver doesn't work on Windows 10 x32. As I see in logs driver is going in the infinity loop when I run any code. it is stuck on driver.get. Also I tried the older version of driver and bindings, in this case, test throws NOSuchWinowException exception.   [log](https://pastebin.com/UQsARbfP)  ## To Reproduce Use  Windows 10 x32 on x64 all is ok. Just use the last IE driver(3.150.1) and selenium-java 3.141.59 and follow the instruction for [IE11](https://github.com/SeleniumHQ/selenium/wiki/InternetExplorerDriver)  ## Expected behavior  Load page and find an element.  ## Test script or set of commands reproducing this issue ```         System.setProperty(""webdriver.ie.driver"", ""C:\\Users\\GVGUA\\.proof\\drivers\\IEDriverServer.exe"");     	System.setProperty(""webdriver.ie.driver.loglevel"", ""TRACE""); 		WebDriver driver = new InternetExplorerDriver();         try {             driver.get(""https://google.com"");             driver.findElement(By.name(""q"")).sendKeys(""cheese"" + Keys.ENTER);             System.out.println(""found"");         } finally {             driver.quit();         } ``` ## Environment  OS: Windows 10 x32 Browser: Internet explorer Browser version: 11.592.18362.0IS Browser Driver version: 3.150.1 Language Bindings version: Java 3.141.59  Selenium Grid version (if applicable): not used","closed","needs-triaging,","V-Honcharov","2020-02-04T09:50:52Z","2020-03-10T19:36:10Z"
"","7892","IE clicks the button to download the file, the process will be stuck","## üêõ Bug Report  IE clicks the button to download the file, the process will be stuck.    ## To Reproduce   IE browser clicks the button to download the file, and then clicks other buttons, the process will be stuck  Detailed steps to reproduce the behavior:  1. clicks the button to download the file  2. save the file   3. clicks other buttons 4. stuck   ## Expected behavior  Not stuck.  ## Test script or set of commands reproducing this issue  `WebDriverWait(self.browser, 10).until(EC.element_to_be_clickable((by, xpath))).click()`  ## Environment  OS: Windows 7 Browser: IE Browser version: 11 Browser Driver version: IEDriverServer 3.141.0.0  Language Bindings version: python 3.6.3  Selenium Grid version (if applicable):","closed","R-awaiting answer,","xiehongguang","2019-12-26T08:42:21Z","2020-04-15T07:40:10Z"
"","8709","SessionNotCreatedException: with firefox 80.0+","## üêõ Bug Report  I've upgraded firefox to 80.0 and now to 80.0.1 and started to receive error:  ``` >>> from selenium import webdriver >>> webdriver.Firefox() Traceback (most recent call last):   File """", line 1, in    File ""/home/peter/.local/lib/python3.7/site-packages/selenium/webdriver/firefox/webdriver.py"", line 191, in __init__     keep_alive=True)   File ""/home/peter/.local/lib/python3.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 184, in __init__     self.start_session(capabilities, browser_profile)   File ""/home/peter/.local/lib/python3.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 281, in start_session     response = self.execute(Command.NEW_SESSION, parameters)   File ""/home/peter/.local/lib/python3.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 350, in execute     self.error_handler.check_response(response)   File ""/home/peter/.local/lib/python3.7/site-packages/selenium/webdriver/remote/errorhandler.py"", line 240, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.SessionNotCreatedException: Message: Unable to find a matching set of capabilities  ```     ## To Reproduce    Detailed steps to reproduce the behavior: $ python >>> from selenium import webdriver >>> webdriver.Firefox()  ## Expected behavior  A clear and concise description of what you expected to happen.  Something should work.  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  >>> from selenium import webdriver >>> webdriver.Firefox()  ## Environment  OS: Gentoo Linux, Debian 10 Browser: Firefox  Browser version: 80.0.1 geckodriver 0.26.0 Language Bindings version: python 3.7  ## Additional important information  My distribution is Gentoo Linux while I found similar reports for Debian: https://stackoverflow.com/questions/63820763/debian-10-selenium-firefox-driver-incompatible-with-firefox-esr/63934063  I've tried selenium 3.141.0-r1 and now I built from git, selenium-4.0.0.a6-py2.py3-none-any.whl, and still have the same problem. I've tried to update geckodriver to 0.27.0, still same issue (binary from https://github.com/mozilla/geckodriver/releases).  **FF downgrade to 68.12.0 fixed** this problem.","closed","R-awaiting answer,","pva","2020-09-17T10:00:41Z","2021-09-05T08:33:57Z"
"","7863","Please protect ports used by ChromeDriver and related test frameworks to prevent access by malicious code.","## üêõ Bug Report  I've updated my chrome to version 79.0.3945.79. My chrome driver's version is 79.0.3945.36. When I run it I receive this error:  > Please protect ports used by ChromeDriver and related test frameworks to prevent access by malicious code.  When I looked it up, in StackOverflow I read that both versions should be the same and I have to download the latest version form NuGet. I went to NuGet, but the latest version of ChromeDriver is what I have. What should I do now?  ## To Reproduce  Create a project. Have ChromeDrive and Google Chrome by the versions specified at the end of this bug report. Create an instance of IWebDriver using the code provided below. Command IWebDriver to go to any page. You'll see this output:  ![image](https://user-images.githubusercontent.com/12782347/70861267-d6c7ae80-1f40-11ea-9c15-ed02ddaa2c0e.png)   ## Expected behavior  A code that was working with previous versions of ChromeDriver & Google Chrome, keep working after updating ChromeDriver and Google Chrome.  ## Test script or set of commands reproducing this issue  This is my code. Please note that this code was working before I update Google Chrome.   ``` public static IWebDriver SetupProxy() { 	int port = 18882; 	proxyServer = new ProxyServer 	{ 	}; 	proxyServer.CertificateManager.CertificateEngine = Titanium.Web.Proxy.Network.CertificateEngine.DefaultWindows; proxyServer.CertificateManager.EnsureRootCertificate(); 	proxyServer.CertificateManager.TrustRootCertificate(true); 	var explicitEndPoint = new ExplicitProxyEndPoint(System.Net.IPAddress.Any, port, true); 	proxyServer.AddEndPoint(explicitEndPoint); 	proxyServer.Start(); 	proxyServer.SetAsSystemHttpProxy(explicitEndPoint); 	proxyServer.SetAsSystemHttpsProxy(explicitEndPoint); 	proxyServer.BeforeRequest += OnRequestEventHandler; 	proxyServer.BeforeResponse += (sender, e) => 	{ 		ResponseHandler?.Invoke(e); 		return Task.CompletedTask; 	}; 	var proxy = new OpenQA.Selenium.Proxy 	{ 		HttpProxy = $""http://localhost:{port}"", 		SslProxy = $""http://localhost:{port}"", 		FtpProxy = $""http://localhost:{port}"" 	}; 	var options = new ChromeOptions 	{ 		Proxy = proxy 	}; 	return new ChromeDriver(options); } ```   ## Environment  OS: Windows 10 Browser: Chrome Browser version:  79.0.3945.79 Browser Driver version: ChromeDriver 79.0.3945.36 Language Bindings version: C# v4.0.30319","closed","R-awaiting answer,","Nefcanto","2019-12-15T10:15:32Z","2020-04-15T07:37:59Z"
"","7862","Please protect ports used by ChromeDriver and related test frameworks to prevent access by malicious code.","## üêõ Bug Report  I've updated my chrome to version 79.0.3945.79. My chrome driver's version is 79.0.3945.36. When I run it I receive this error:  > Please protect ports used by ChromeDriver and related test frameworks to prevent access by malicious code.  When I looked it up, in StackOverflow I read that both versions should be the same and I have to download the latest version form NuGet. I went to NuGet, but the latest version of ChromeDriver is what I have. What should I do now?","closed","needs-triaging,","Nefcanto","2019-12-15T09:47:54Z","2020-01-14T12:12:41Z"
"","8764","Node.js+selenium-webdriver: sendDevToolsCommand always returns null","## üêõ Bug Report  I'm using https://www.npmjs.com/package/selenium-webdriver to run tests against Google Chrome I want to get a result from an arbitrary Chrome's devtools command execution. No matter which command is sent, `driver.sendDevtoolsCommand` always returns `null`;  I've found a merged PR with a relevant feature https://github.com/SeleniumHQ/selenium/pull/7482 But feature seems gone from the current version of selenium-webdriver I've tried to replace `sendDevtoolsCommand` with `sendDevToolsCommandAndGetReturn` in custom command names (locally, inside `node_modules/selenium-webdriver/chromium.js`), but to no avail - I still get `null` as the result.     ## To Reproduce I've thrown together a reproduction case https://github.com/RomanDavlyatshin/send-devtools-command-repro-case Prerequisites: Node.js installed, Selenium server installed, chromedriver.exe added to PATH (see specific versions in reproduction repo linked above) 1. run `npm install selenium-webdriver` 2. Add the following lines to index.js ``` const { Builder, By, Key } = require(""selenium-webdriver""); async function start() {   let driver = await (new Builder).forBrowser(""chrome"").build();      // try to obtain browser version   const browserVersion = await driver.sendDevToolsCommand('Browser.getVersion', {});   console.log('browserVersion', browserVersion); // null, but browser version expected } start(); ``` 3. run `node index.js`   ## Expected behavior  Expected to get browser version or any other result from an arbitrary devtools command  ## Environment  OS: Windows 10 Browser: Chrome Browser version: 86.0.4240.75 64 bit Browser Driver version: ChromeDriver 86.0.4240.22 Language Bindings version: [selenium-webdriver 4.0.0-alpha.7](https://www.npmjs.com/package/selenium-webdriver) Selenium Grid version (if applicable):","closed","needs-triaging,","RomanDavlyatshin","2020-10-07T14:26:11Z","2021-09-05T08:15:43Z"
"","8292","ChromeDriver didn't exit full screen when performing ESC key from Selenium","## üêõ Bug Report  I'm trying to simulate exit fullscreen by pressing ESC key.  When manually press ESC button in my keyboard, it can exit fullscreen. But when perform ESC by using `sendKeys(Key.ESCAPE)`, it can't exit fullscreen.  Didn't know if the issue is in chromedriver side or in selenium side.  ## To Reproduce Detailed steps to reproduce the behavior:  - Run the scripts provided below - When browser loaded the HTML file, click the fullscreen button in the video player - In 5 seconds, Selenium will fire `ESC` key  ## Expected behavior  Should be able to exit fullscreen when `ESC` key is sent.  ## Test script or set of commands reproducing this issue HTML file: ```html                                  ```  JS file: ```javascript (async function() { „ÄÄ„ÄÄawait driver.get('YOUR LOCAL SERVER');     await driver.sleep(5000);    // Manually click the fullscreen button here     await driver.actions().sendKeys(Key.ESCAPE).perform();     await driver.sleep(5000); })(); ```  ## Environment  OS: MacOS High Sierra (10.13.6) Browser: Chrome and Firefox Browser version: Chrome 81.0.4044.138 Browser Driver version: ChromeDriver 81.0.4044.138 Language Bindings version: NodeJS 12.10.0 Selenium Grid version (if applicable): -","closed","needs-triaging,","Tae69","2020-05-11T04:55:18Z","2021-09-05T10:02:53Z"
"","8651","Setting Chrome flags with headless doesn't seem to work","## üêõ Bug Report  I'm trying to set the flags `same-site-by-default-cookies@2` and `cookies-without-same-site-must-be-secure@2` as the defaults recently changed, causing some of my tests to fail.  If I do:  ```ruby Capybara.register_driver :headless_chrome do |app|   capabilities = Selenium::WebDriver::Remote::Capabilities.chrome(     'goog:chromeOptions' => {         args: ['verbose', 'disable-gpu', 'no-sandbox', 'disable-dev-shm-usage', 'window-size=1400,1400'],         # Turn off SameSite cookies requirement as that requires HTTPS.         localState: { ""browser.enabled_labs_experiments"" => ['same-site-by-default-cookies@2','cookies-without-same-site-must-be-secure@2'] },     },     'goog:loggingPrefs' => { browser: 'ALL' },   )    Capybara::Selenium::Driver.new app,                                  browser: :chrome,                                  desired_capabilities: capabilities end ```  Then it works. If I go to chrome:flags, I can see they have been changed. However, if if I use headless mode:  ```ruby Capybara.register_driver :headless_chrome do |app|   capabilities = Selenium::WebDriver::Remote::Capabilities.chrome(     'goog:chromeOptions' => {         args: ['verbose', 'disable-gpu', 'no-sandbox', 'disable-dev-shm-usage', 'window-size=1400,1400', 'headless'],         # Turn off SameSite cookies requirement as that requires HTTPS.         localState: { ""browser.enabled_labs_experiments"" => ['same-site-by-default-cookies@2','cookies-without-same-site-must-be-secure@2'] },     },     'goog:loggingPrefs' => { browser: 'ALL' },   )    Capybara::Selenium::Driver.new app,                                  browser: :chrome,                                  desired_capabilities: capabilities end ```  Then changing the flags doesn't seem to take effect; I get the same result in my test as before I added the flags. (Not sure how to demonstrate the flags aren't applied in headless mode.)  ## Environment  OS: Ubuntu 20.04 Browser: Chrome Browser version: 85.0.4183.83 Browser Driver version: ChromeDriver 85.0.4183.83 Language Bindings version: Ruby 2.6.6","closed","needs-triaging,","JasonBarnabe","2020-08-27T15:16:23Z","2021-09-05T08:30:15Z"
"","8312","Screenshot with Firefox WebDriver doesn't return image with respective font in html (python)","## üêõ Bug Report  I'm trying to generate images from html files which contain different fonts with Selenium WebDriver. But when I take the screenshot, the image I got always returns the same font, but not with the font in html file. Does anyone know how to deal with this problem?  ## To Reproduce    Example of code in python Font in html: **Parkavenue, cursive** but the font in image we got from screenshot is **Arial**.  ## python  ``` html =""""""                            html{background-color: white}             table{font-family:Parkavenue, cursive, serif;text-align:center;border-collapse:inherit; border-spacing: 0}             td,th{width: 339px; height : 50px;border:3px dotted black;}                                         shipments % S.A. sher,AD.; common              %              .KAZG.O.,,, C AND S.A.              WARD, S.L.              Gross body Buena Contains ¬† AT ¬† Sciences surface                 """""" driver = Firefox()  driver.get(""data:text/html,"" + html) png = driver.get_screenshot_as_png()  ``` returned image: ![image](https://user-images.githubusercontent.com/56027282/82030109-45e43300-9698-11ea-8566-017d5e74f1d4.png)  ## Expected behavior  Image output should have the font **Parkavenue, cursive**. ![image](https://user-images.githubusercontent.com/56027282/82030266-804dd000-9698-11ea-802e-ed6b83edf3d8.png)  ## Environment  OS: Linux  Browser: Firefox Selenium version: 3.141.0","closed","needs-triaging,","mrtunguyen","2020-05-15T08:39:12Z","2021-09-05T10:02:49Z"
"","8030","A exception with a null response was thrown sending an HTTP request to the remote WebDriver server for URL http://localhost:62968/session/5c1df802a19fab49b6a894b3db1af643/url","## üêõ Bug Report  I'm trying to automate a process, and I need to:  - Load a URL  - Find an element, and check it's inner text  - Wait for inner text to be populated through AJAX (loop, check, sleep)  - Then when it has value, read that value and save it in database  I have near 50 thousand URLs, and this process works just fine for the first 5 or 10 (non-deterministic) and then I get this error:  ``` A exception with a null response was thrown sending an HTTP request to the remote WebDriver server for URL http://localhost:62968/session/5c1df802a19fab49b6a894b3db1af643/url. The status of the exception was UnknownError, and the message was: An error occurred while sending the request. Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..      at OpenQA.Selenium.Remote.HttpCommandExecutor.MakeHttpRequest(HttpRequestInfo requestInfo)    at OpenQA.Selenium.Remote.HttpCommandExecutor.Execute(Command commandToExecute)    at OpenQA.Selenium.Remote.DriverServiceCommandExecutor.Execute(Command commandToExecute)    at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)    at OpenQA.Selenium.Remote.RemoteWebDriver.set_Url(String value) ```  ## To Reproduce  ``` public static void Main(string[] args) { 	GetValues(); }  private static void GetValues() { 	var entities = GetListOfEntities(); // to be read from database, in an internal system 	var browser = SetupBrowser(); 	SetTimeout(browser, 60); 	foreach (var entity in entities) 	{ 		try 		{ 			GetValue(browser, entity); 		} 		catch (Exception ex) 		{ 			Logger.Log(ex); // simple home-made logger 			Logger.LogError($""Error getting value for entity {entity.Id}""); 		} 	} }  private static void GetValue(IWebDriver browser, Recipe entity) { 	browser.Url = entity.Url; 	var valueDom = browser.FindElement(By.CssSelector("".value-count span[ng-bind]"")); 	while (valueDom.Text.IsNothing()) 	{ 		Logger.LogWarning($""Waiting for value to be loaded...""); 		Thread.Sleep(500); 	} 	entity.Value = valueDom.Text.ToInt(); 	Logger.LogSuccess($""Value is {entity.Value} for entity {entity.Id}""); 	new EntityBusiness().Update(entity); }  public static IWebDriver SetupBrowser() { 	int port = 18882; 	var proxy = new OpenQA.Selenium.Proxy 	{ 		HttpProxy = $""http://localhost:{port}"", 		SslProxy = $""http://localhost:{port}"", 		FtpProxy = $""http://localhost:{port}"" 	}; 	var options = new ChromeOptions 	{ 	}; 	driver = new ChromeDriver(options); 	return driver; }  public static void SetTimeout(IWebDriver driver, int timeoutInSeconds) { 	driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(timeoutInSeconds); } ```  Please note that I can't create a SSCCE, since a lot of code relates to internal system. But, as the error stack trace shows, it's not related to our code. It's an exception of internal connections between Selenium and ChromeDriver I guess.  The code is simple, get a list of URLs of a dynamic website. For each URL, load it and in a loop-check-sleep structure wait for its inner text to be loaded, and read/store that value, and move to the next URL. After a couple of times the internal connection is lost.  ## Expected behavior  Deterministic behavior. Once a connection is made between internal modules, then it has to persist. I mean, if a port that Selenium is trying to use is already occupied with another software, then it's understandable why it doesn't work. But as soon as it gets everything up and running, then it shouldn't fail in the middle.  Otherwise, I think having a bunch of clues in the exception message would be very informative. Why the connection is closed and what are the possibilities?  ## Test script or set of commands reproducing this issue  Test script is attached.  [Program.txt](https://github.com/SeleniumHQ/selenium/files/4209502/Program.txt)  Please run it with this `.csproj` configuration:  ```          Exe     netcoreapp3.1                            ```  ## Environment  OS: Version 1903 (OS Build 18.362.295) Browser: Google Chrome Browser version:  Version 80.0.3987.106 (Official Build) (64-bit) Browser Driver version: 80.0.3987.1600 Language Bindings version: C# 8 (.NET Core 3.1.1)","closed","C-dotnet,","Nefcanto","2020-02-16T08:25:15Z","2022-06-19T00:12:01Z"
"","8314","High CPU (400%) on selenium/hub:3.141.59 startup","## üêõ Bug Report  I'm seeing an intermittent issue where the selenium-hub consumes 400% cpu immediately after the container starts. This renders the grid useless. While I've opened this ticket at SeleniumHQ/docker-selenium#1040 . The root seems to be within the java code under this repo.  So also creating a ticket here.   ## To Reproduce  Detailed steps to reproduce the behavior:  Run the attached docker-compose file. It seems to hit about 1 in 10 starts. Its occurred on several machines, not just mine. I can find no pattern for why it hits when it hits. exec'ing into the running container and running top show the Java process consuming all the cpu. I see no error in the output log. just the normal hub startup messages.   ## Expected behavior  The hub in my experience never runs above 10% cpu.  ## Test script or set of commands reproducing this issue  Please run attache docker-compose file.  Note, I had up upload the file as .txt, please rename with a .yml extension to run with docker-compose  docker-compose -f selenium_grid_native_stage_prod.yml up -d docker stats  [selenium_grid_native_stage_prod.txt](https://github.com/SeleniumHQ/selenium/files/4636766/selenium_grid_native_stage_prod.txt)  ## Environment  OS: OSX 10.14.6 selenium/hub:3.141.59  Docker version: 2.1.0.5 Docker-Compose version (if applicable): docker-compose version 1.25.1, build a82fef07  Debugging I've done  I've done a custom image build of the selenium/hub with a java profiler installed. It looks like when it hits the node registration threads are running red hot an in a infinite loop. I see the nodes attempt to register but never get a response from the hub.  ![Screen Shot 2020-05-13 at 11 31 47 AM](https://user-images.githubusercontent.com/338000/82088506-bf831d80-96a6-11ea-8b11-a556597edf1c.png)   Here is one of the 4 registration thread stack traces. (they were all stuck at this point)  ``` java.util.TreeMap.get(Object) TreeMap.java:278   org.openqa.selenium.AbstractCapabilities.getCapability(String) AbstractCapabilities.java:61   org.openqa.selenium.MutableCapabilities.getCapability(String) MutableCapabilities.java:26   org.openqa.grid.internal.utils.configuration.GridNodeConfiguration.lambda$fixUpCapabilities$11(Platform, MutableCapabilities) GridNodeConfiguration.java:400   org.openqa.grid.internal.utils.configuration.GridNodeConfiguration$$Lambda$265.accept(Object)   java.util.stream.ReferencePipeline$11$1.accept(Object) ReferencePipeline.java:439   java.util.ArrayList$ArrayListSpliterator.forEachRemaining(Consumer) ArrayList.java:1382   java.util.stream.AbstractPipeline.copyInto(Sink, Spliterator) AbstractPipeline.java:482   java.util.stream.AbstractPipeline.wrapAndCopyInto(Sink, Spliterator) AbstractPipeline.java:472   java.util.stream.ReduceOps$ReduceOp.evaluateSequential(PipelineHelper, Spliterator) ReduceOps.java:708   java.util.stream.AbstractPipeline.evaluate(TerminalOp) AbstractPipeline.java:234   java.util.stream.ReferencePipeline.collect(Collector) ReferencePipeline.java:566   org.openqa.grid.internal.utils.configuration.GridNodeConfiguration.fixUpCapabilities() GridNodeConfiguration.java:410   org.openqa.grid.common.RegistrationRequest.(GridNodeConfiguration, String, String) RegistrationRequest.java:92   org.openqa.grid.common.RegistrationRequest.(GridNodeConfiguration) RegistrationRequest.java:59   org.openqa.grid.common.RegistrationRequest.() RegistrationRequest.java:48   org.openqa.grid.common.RegistrationRequest.fromJson(Map) RegistrationRequest.java:123   org.openqa.grid.web.servlet.RegistrationServlet.process(HttpServletRequest, HttpServletResponse) RegistrationServlet.java:100   org.openqa.grid.web.servlet.RegistrationServlet.doPost(HttpServletRequest, HttpServletResponse) RegistrationServlet.java:70   javax.servlet.http.HttpServlet.service(HttpServletRequest, HttpServletResponse) HttpServlet.java:707   javax.servlet.http.HttpServlet.service(ServletRequest, ServletResponse) HttpServlet.java:790   org.seleniumhq.jetty9.servlet.ServletHolder.handle(Request, ServletRequest, ServletResponse) ServletHolder.java:865   org.seleniumhq.jetty9.servlet.ServletHandler.doHandle(String, Request, HttpServletRequest, HttpServletResponse) ServletHandler.java:535   org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(String, Request, HttpServletRequest, HttpServletResponse) ScopedHandler.java:146   org.seleniumhq.jetty9.security.SecurityHandler.handle(String, Request, HttpServletRequest, HttpServletResponse) SecurityHandler.java:548   org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(String, Request, HttpServletRequest, HttpServletResponse) HandlerWrapper.java:132   org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(String, Request, HttpServletRequest, HttpServletResponse) ScopedHandler.java:257   org.seleniumhq.jetty9.server.session.SessionHandler.doHandle(String, Request, HttpServletRequest, HttpServletResponse) SessionHandler.java:1595   org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(String, Request, HttpServletRequest, HttpServletResponse) ScopedHandler.java:255   org.seleniumhq.jetty9.server.handler.ContextHandler.doHandle(String, Request, HttpServletRequest, HttpServletResponse) ContextHandler.java:1340   org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(String, Request, HttpServletRequest, HttpServletResponse) ScopedHandler.java:203   org.seleniumhq.jetty9.servlet.ServletHandler.doScope(String, Request, HttpServletRequest, HttpServletResponse) ServletHandler.java:473   org.seleniumhq.jetty9.server.session.SessionHandler.doScope(String, Request, HttpServletRequest, HttpServletResponse) SessionHandler.java:1564   org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(String, Request, HttpServletRequest, HttpServletResponse) ScopedHandler.java:201   org.seleniumhq.jetty9.server.handler.ContextHandler.doScope(String, Request, HttpServletRequest, HttpServletResponse) ContextHandler.java:1242   org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(String, Request, HttpServletRequest, HttpServletResponse) ScopedHandler.java:144   org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(String, Request, HttpServletRequest, HttpServletResponse) HandlerWrapper.java:132   org.seleniumhq.jetty9.server.Server.handle(HttpChannel) Server.java:503   org.seleniumhq.jetty9.server.HttpChannel.handle() HttpChannel.java:364   org.seleniumhq.jetty9.server.HttpConnection.onFillable() HttpConnection.java:260   org.seleniumhq.jetty9.io.AbstractConnection$ReadCallback.succeeded() AbstractConnection.java:305   org.seleniumhq.jetty9.io.FillInterest.fillable() FillInterest.java:103   org.seleniumhq.jetty9.io.ChannelEndPoint$2.run() ChannelEndPoint.java:118   org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.runTask(Runnable) EatWhatYouKill.java:333   org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.doProduce(boolean) EatWhatYouKill.java:310   org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.tryProduce(boolean) EatWhatYouKill.java:168   org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.run() EatWhatYouKill.java:126   org.seleniumhq.jetty9.util.thread.ReservedThreadExecutor$ReservedThread.run() ReservedThreadExecutor.java:366   org.seleniumhq.jetty9.util.thread.QueuedThreadPool.runJob(Runnable) QueuedThreadPool.java:765   org.seleniumhq.jetty9.util.thread.QueuedThreadPool$2.run() QueuedThreadPool.java:683   java.lang.Thread.run() Thread.java:748```  Here is one of the nodes attempting to register but timing out as the hub is blocked [selenium_grid_native_stage_prod.txt](https://github.com/SeleniumHQ/selenium/files/4636733/selenium_grid_native_stage_prod.txt)  ```2020-05-13 18:18:50,965 INFO success: xvfb entered RUNNING state, process has stayed up for > than 0 seconds (startsecs) 2020-05-13 18:18:50,965 INFO success: fluxbox entered RUNNING state, process has stayed up for > than 0 seconds (startsecs) 2020-05-13 18:18:50,965 INFO success: vnc entered RUNNING state, process has stayed up for > than 0 seconds (startsecs) 2020-05-13 18:18:50,965 INFO success: selenium-node entered RUNNING state, process has stayed up for > than 0 seconds (startsecs) 18:18:51.753 INFO [GridLauncherV3.parse] - Selenium server version: 3.141.0, revision: 2ecb7d9a 18:18:52.279 INFO [GridLauncherV3.lambda$buildLaunchers$7] - Launching a Selenium Grid node on port 5555 2020-05-13 18:18:52.585:INFO::main: Logging initialized @1648ms to org.seleniumhq.jetty9.util.log.StdErrLog 18:18:53.053 INFO [WebDriverServlet.] - Initialising WebDriverServlet 18:18:53.185 INFO [SeleniumServer.boot] - Selenium Server is up and running on port 5555 18:18:53.185 INFO [GridLauncherV3.lambda$buildLaunchers$7] - Selenium Grid node is up and ready to register to the hub 18:18:53.306 INFO [SelfRegisteringRemote$1.run] - Starting auto registration thread. Will try to register every 5000 ms. 18:18:53.718 WARN [SelfRegisteringRemote.registerToHub] - Error getting the parameters from the hub. The node may end up with wrong timeouts.Failed to connect to selenium-hub/172.28.0.6:4444 18:18:53.718 INFO [SelfRegisteringRemote.registerToHub] - Registering the node to the hub: http://selenium-hub:4444/grid/register 18:18:53.735 INFO [SelfRegisteringRemote$1.run] - Couldn't register this node: Error sending the registration request: Failed to connect to selenium-hub/172.28.0.6:4444 18:18:58.809 INFO [SelfRegisteringRemote.registerToHub] - Registering the node to the hub: http://selenium-hub:4444/grid/register```","closed","C-java,","danonorato","2020-05-15T19:21:01Z","2021-09-05T10:02:47Z"
"","8313","High CPU (400%) on selenium/hub:3.141.59 startup","## üêõ Bug Report  I'm seeing an intermittent issue where the selenium-hub consumes 400% cpu immediately after the container starts. This renders the grid useless.  While I've open this ticket at https://github.com/SeleniumHQ/docker-selenium/issues/1040 .   The root seem to be within the java code under this repo.    ## To Reproduce  Run the attached docker-compose file. It seems to hit about 1 in 10 starts. Its occurred on several machines, not just mine. I can find no pattern for why it hits when it hits. exec'ing into the running container and running top show the Java process consuming all the cpu. I see no error in the output log. just the normal hub startup messages.  ## Expected behavior The hub in my experience never runs above 10% cpu.  Environment OS: OSX 10.14.6 selenium/hub:3.141.59  Docker version: 2.1.0.5 Docker-Compose version (if applicable): docker-compose version 1.25.1, build a82fef07  docker-compose -f selenium_grid_native_stage_prod.yml up -d docker stats  I've done a custom image build of the selenium/hub with a java profiler installed. It looks like when it hits the node registration threads are running red hot an in a infinite loop. I see the nodes attempt to register but never get a response from the hub.  ![Screen Shot 2020-05-13 at 11 12 20 AM](https://user-images.githubusercontent.com/338000/82086727-ccead880-96a3-11ea-9e6c-5576ec39011d.png)  Here is the stack trace:  ```java.util.TreeMap.getEntry(Object) TreeMap.java:359   java.util.TreeMap.get(Object) TreeMap.java:278   org.openqa.selenium.AbstractCapabilities.getCapability(String) AbstractCapabilities.java:61   org.openqa.selenium.MutableCapabilities.getCapability(String) MutableCapabilities.java:26   org.openqa.grid.internal.utils.configuration.GridNodeConfiguration.lambda$fixUpCapabilities$11(Platform, MutableCapabilities) GridNodeConfiguration.java:400   org.openqa.grid.internal.utils.configuration.GridNodeConfiguration$$Lambda$265.accept(Object)   java.util.stream.ReferencePipeline$11$1.accept(Object) ReferencePipeline.java:439   java.util.ArrayList$ArrayListSpliterator.forEachRemaining(Consumer) ArrayList.java:1382   java.util.stream.AbstractPipeline.copyInto(Sink, Spliterator) AbstractPipeline.java:482   java.util.stream.AbstractPipeline.wrapAndCopyInto(Sink, Spliterator) AbstractPipeline.java:472   java.util.stream.ReduceOps$ReduceOp.evaluateSequential(PipelineHelper, Spliterator) ReduceOps.java:708   java.util.stream.AbstractPipeline.evaluate(TerminalOp) AbstractPipeline.java:234   java.util.stream.ReferencePipeline.collect(Collector) ReferencePipeline.java:566   org.openqa.grid.internal.utils.configuration.GridNodeConfiguration.fixUpCapabilities() GridNodeConfiguration.java:410   org.openqa.grid.common.RegistrationRequest.(GridNodeConfiguration, String, String) RegistrationRequest.java:92   org.openqa.grid.common.RegistrationRequest.(GridNodeConfiguration) RegistrationRequest.java:59   org.openqa.grid.common.RegistrationRequest.() RegistrationRequest.java:48   org.openqa.grid.common.RegistrationRequest.fromJson(Map) RegistrationRequest.java:123   org.openqa.grid.web.servlet.RegistrationServlet.process(HttpServletRequest, HttpServletResponse) RegistrationServlet.java:100   org.openqa.grid.web.servlet.RegistrationServlet.doPost(HttpServletRequest, HttpServletResponse) RegistrationServlet.java:70   javax.servlet.http.HttpServlet.service(HttpServletRequest, HttpServletResponse) HttpServlet.java:707   javax.servlet.http.HttpServlet.service(ServletRequest, ServletResponse) HttpServlet.java:790   org.seleniumhq.jetty9.servlet.ServletHolder.handle(Request, ServletRequest, ServletResponse) ServletHolder.java:865   org.seleniumhq.jetty9.servlet.ServletHandler.doHandle(String, Request, HttpServletRequest, HttpServletResponse) ServletHandler.java:535   org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(String, Request, HttpServletRequest, HttpServletResponse) ScopedHandler.java:146   org.seleniumhq.jetty9.security.SecurityHandler.handle(String, Request, HttpServletRequest, HttpServletResponse) SecurityHandler.java:548   org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(String, Request, HttpServletRequest, HttpServletResponse) HandlerWrapper.java:132   org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(String, Request, HttpServletRequest, HttpServletResponse) ScopedHandler.java:257   org.seleniumhq.jetty9.server.session.SessionHandler.doHandle(String, Request, HttpServletRequest, HttpServletResponse) SessionHandler.java:1595   org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(String, Request, HttpServletRequest, HttpServletResponse) ScopedHandler.java:255   org.seleniumhq.jetty9.server.handler.ContextHandler.doHandle(String, Request, HttpServletRequest, HttpServletResponse) ContextHandler.java:1340   org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(String, Request, HttpServletRequest, HttpServletResponse) ScopedHandler.java:203   org.seleniumhq.jetty9.servlet.ServletHandler.doScope(String, Request, HttpServletRequest, HttpServletResponse) ServletHandler.java:473   org.seleniumhq.jetty9.server.session.SessionHandler.doScope(String, Request, HttpServletRequest, HttpServletResponse) SessionHandler.java:1564   org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(String, Request, HttpServletRequest, HttpServletResponse) ScopedHandler.java:201   org.seleniumhq.jetty9.server.handler.ContextHandler.doScope(String, Request, HttpServletRequest, HttpServletResponse) ContextHandler.java:1242   org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(String, Request, HttpServletRequest, HttpServletResponse) ScopedHandler.java:144   org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(String, Request, HttpServletRequest, HttpServletResponse) HandlerWrapper.java:132   org.seleniumhq.jetty9.server.Server.handle(HttpChannel) Server.java:503   org.seleniumhq.jetty9.server.HttpChannel.handle() HttpChannel.java:364   org.seleniumhq.jetty9.server.HttpConnection.onFillable() HttpConnection.java:260   org.seleniumhq.jetty9.io.AbstractConnection$ReadCallback.succeeded() AbstractConnection.java:305   org.seleniumhq.jetty9.io.FillInterest.fillable() FillInterest.java:103   org.seleniumhq.jetty9.io.ChannelEndPoint$2.run() ChannelEndPoint.java:118   org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.runTask(Runnable) EatWhatYouKill.java:333   org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.doProduce(boolean) EatWhatYouKill.java:310   org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.tryProduce(boolean) EatWhatYouKill.java:168   org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.run() EatWhatYouKill.java:126   org.seleniumhq.jetty9.util.thread.ReservedThreadExecutor$ReservedThread.run() ReservedThreadExecutor.java:366   org.seleniumhq.jetty9.util.thread.QueuedThreadPool.runJob(Runnable) QueuedThreadPool.java:765   org.seleniumhq.jetty9.util.thread.QueuedThreadPool$2.run() QueuedThreadPool.java:683   java.lang.Thread.run() Thread.java:748``````  here is a node stuck trying to register  2020-05-13 18:18:50,965 INFO success: xvfb entered RUNNING state, process has stayed up for > than 0 seconds (startsecs) 2020-05-13 18:18:50,965 INFO success: fluxbox entered RUNNING state, process has stayed up for > than 0 seconds (startsecs) 2020-05-13 18:18:50,965 INFO success: vnc entered RUNNING state, process has stayed up for > than 0 seconds (startsecs) 2020-05-13 18:18:50,965 INFO success: selenium-node entered RUNNING state, process has stayed up for > than 0 seconds (startsecs) 18:18:51.753 INFO [GridLauncherV3.parse] - Selenium server version: 3.141.0, revision: 2ecb7d9a 18:18:52.279 INFO [GridLauncherV3.lambda$buildLaunchers$7] - Launching a Selenium Grid node on port 5555 2020-05-13 18:18:52.585:INFO::main: Logging initialized @1648ms to org.seleniumhq.jetty9.util.log.StdErrLog 18:18:53.053 INFO [WebDriverServlet.] - Initialising WebDriverServlet 18:18:53.185 INFO [SeleniumServer.boot] - Selenium Server is up and running on port 5555 18:18:53.185 INFO [GridLauncherV3.lambda$buildLaunchers$7] - Selenium Grid node is up and ready to register to the hub 18:18:53.306 INFO [SelfRegisteringRemote$1.run] - Starting auto registration thread. Will try to register every 5000 ms. 18:18:53.718 WARN [SelfRegisteringRemote.registerToHub] - Error getting the parameters from the hub. The node may end up with wrong timeouts.Failed to connect to selenium-hub/172.28.0.6:4444 18:18:53.718 INFO [SelfRegisteringRemote.registerToHub] - Registering the node to the hub: http://selenium-hub:4444/grid/register 18:18:53.735 INFO [SelfRegisteringRemote$1.run] - Couldn't register this node: Error sending the registration request: Failed to connect to selenium-hub/172.28.0.6:4444 18:18:58.809 INFO [SelfRegisteringRemote.registerToHub] - Registering the node to the hub: http://selenium-hub:4444/grid/register```  docker-compose file attached::  had to upload as .txt rename to .yml to run [selenium_grid_native_stage_prod.txt](https://github.com/SeleniumHQ/selenium/files/4636653/selenium_grid_native_stage_prod.txt)","closed","","danonorato","2020-05-15T19:08:33Z","2021-09-05T10:02:48Z"
"","8548","Problem with some special key and sending key with firefox driver","## üêõ Bug Report  I was trying making zoom for a long time and just saw that some special key do not work. For example in python :  driver.get(""http://www.google.fr"") elm = driver.find_element_by_name(""body"")  ActionChains(driver).key_down(Keys.CONTROL).send_keys(Keys.NUMPAD2).perform() <= Work OK (scroll down) ActionChains(driver).key_down(Keys.CONTROL).send_keys(Keys.ADD).perform()           <= Do not work (no zoom-in...)  So CTRL+page down work but CTRL++ no...   If someone know how to make zoom ? Thanks !  OS: Windows 10 Browser : Firefox Browser version: 78.02 64bits Browser Driver version: Geckodriver","closed","needs-triaging,","rdpdo","2020-07-18T21:19:49Z","2021-09-05T09:02:51Z"
"","7932","System.IO.FileNotFoundException : Could not load file or assembly 'netstandard2.0assembly with Selenium 4.0.0-alpha04 and .NET Core","## üêõ Bug Report  I using `.NET Core` with `C#` and I got this error when upgraded to Selenium `4.0.0-alpha04`   `System.IO.FileNotFoundException : Could not load file or assembly 'netstandard2.0assembly, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null'. The system cannot find the file specified. ` and the browser didn't open it failed from the beginning.  ## To Reproduce    Detailed steps to reproduce the behavior:  ## Expected behavior  The browser should be opened and run the script   ## Test script or set of commands reproducing this issue  ``` using NUnit.Framework; using OpenQA.Selenium; using OpenQA.Selenium.Chrome;  namespace Selenium4 {     public class RelativeLocators     {         private IWebDriver _driver;          [SetUp]         public void Setup()         {             _driver = new ChromeDriver();             _driver.Navigate().GoToUrl(""https://the-internet.herokuapp.com/"");             _driver.Manage().Window.Maximize();         }          [Test]         public void ClickLoginLink()         {             _driver.FindElement((RelativeBy.                 WithTagName(""li"")                 .Below(By.LinkText(""Forgot Password""))                 .Above(By.LinkText(""Frames"")))).Click();             Assert.IsTrue(_driver.Url.Contains(""login""));         }     } } ``` ## Screenshot    ## Environment OS: OSX 10.14.6 Browser: Chrome Browser version:  79 Browser Driver version: ChromeDriver 2.37 Language Bindings version: C#","closed","needs-triaging,","moatazeldebsy","2020-01-12T14:32:20Z","2020-02-28T07:12:42Z"
"","8384","IEDriver 3.150.+ sendKeys() slow as hell","## üêõ Bug Report  I upgraded from IEDriver `3.14.0` to `3.150.1` (hoping to fix some weird bug) but now `sendKeys()` is slow af - it takes ~30 sec to enter a single character. Thus filling out a form takes like 10 minutes.  ## To Reproduce  * Have IEDriver `3.150.1` set up with a hub and a single node (all on the same machine). * Load any page with a form.  ```java final DesiredCapabilities dc = DesiredCapabilities.internetExplorer(); dc.setCapability(InternetExplorerDriver.IE_ENSURE_CLEAN_SESSION, true); dc.setCapability(""browser_version"", ""11.0""); dc.setCapability(""requireWindowFocus"", true); dc.setCapability(InternetExplorerDriver.INTRODUCE_FLAKINESS_BY_IGNORING_SECURITY_DOMAINS, true); driver = new RemoteWebDriver(new URL(remoteMachineUrl), dc); ```  Get some input field and send some input: ```java driver.findElement(By.cssSelector(""input[id^=\""someId\""]"")).sendKeys(""some input""); ```  ## Expected behavior  Input entered in human-like speed.  ## Test script or set of commands reproducing this issue  s.a.  ## Environment  OS: Windows 7 SP1 64 bit Browser: IE 11 Browser version: 11.0.9600.19230 Browser Driver version: 3.150.1 64 bit Language Bindings version: Java 3.141.59 Selenium Grid version (if applicable): Selenum server 3.141.59 rev e82be7d358","closed","needs-triaging,","black-snow","2020-06-03T08:17:47Z","2021-09-05T09:43:52Z"
"","7873","Bug when trying to unzipFile","## üêõ Bug Report  I think there is an issue on line 116 of Zip.java : ""if (!canonicalDestinationFile.startsWith(canonicalDestinationDirPath + File.separator))""  The canonicalDestinationFile will never have the last file separator, so checking of it starts with canonicalDestinationDirPath + File.separator will always be false.  Detailed steps to reproduce the behavior: Add an extension to firefox driver, then when doing init, in the installExtensions method it will try to unzip the xpi file in a temp folder, we will have :  canonicalDestinationFile = C:\Users\user\AppData\Local\Temp\unzip5523712136696278807stream and :  canonicalDestinationDirPath = C:\Users\user\AppData\Local\Temp\unzip5523712136696278807stream  so for the test ""if (!canonicalDestinationFile.startsWith(canonicalDestinationDirPath + File.separator)) {"" we will have :  if (!""C:\Users\user\AppData\Local\Temp\unzip5523712136696278807stream"".startsWith(""C:\Users\user\AppData\Local\Temp\unzip5523712136696278807stream\\"")) {  With the extra file separator the startWith test is false and we get an IOException ""Entry is outside of the target dir""   ## Environment  OS: Windows 10 Browser: Firefox Browser Driver version: GeckoDriver 0.26 Language Bindings version: Java 1.8","closed","R-awaiting answer,","bambino","2019-12-18T09:40:30Z","2020-02-14T05:40:44Z"
"","8247","Couldn't register this node: The hub is down or not responding","## üêõ Bug Report  I started `Selenium/Hub` with port default 4444 and `selenium/node-firefox-debug` with port 5900. I use C# to control the selenium. Okay, It's working fine. But, My job to control have a lot of time (maybe 5 minutes). And it's throw a expection: ` Selenium Error - The HTTP request to the remote WebDriver timed out after 60 seconds ` Okay, next.  And after that, the `firefox` can't connect to `selenium-hub` anymore, although the container is **still up** and I still can `docker exec -it selenium-hub bash` to go to my hub container Firefox loop throw message: `firefox         | 09:00:38.478 INFO [SelfRegisteringRemote$1.run] - Couldn't register this node: The hub is down or not responding: Failed to connect to selenium-hub/192.168.64.2:4444` I try to go console (with port 4444), and it's not response. What happended? Thank you! ## Environment  OS: LINUX Browser: Firefox Browser version: 75 Browser Driver version: 0.26.0.1 Language Bindings version:  C#  Selenium Grid version (if applicable): latest","closed","R-awaiting answer,","mikenlanggio","2020-04-26T09:01:15Z","2020-06-24T22:02:06Z"
"","8329","Sporadic org.openqa.selenium.WebDriverException: connection refused","## üêõ Bug Report  I have this setup using docker images: 1 Selenium grid hub docker image, 1 Chrome docker image, 1 Firefox docker image-- specified in docker-compose.yml Occasionally when I try to execute a suite of tests via testNG, I will see this error in my beforeMethod setup and the rest of the test will not execute:  ``` java.lang.Exception: org.openqa.selenium.WebDriverException: connection refused Build info: version: '3.141.5', revision: 'd54ebd709a', time: '2018-11-06T11:58:47' System info: host: 'fd204f6bd509', ip: '172.20.0.4', os.name: 'Linux', os.arch: 'amd64', os.version: '4.19.76-linuxkit', java.version: '1.8.0_181' Driver info: driver.version: unknown remote stacktrace: Command duration or timeout: 85.38 seconds  	at automation.setup.BaseTestSetup.startDriver(BaseTestSetup.java:113) 	at automation.setup.selenium.WebTestSetup.beforeMethod(WebTestSetup.java:29) 	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.base/java.lang.reflect.Method.invoke(Method.java:567) 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134) 	at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:63) 	at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:348) 	at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:302) 	at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:695) 	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:523) 	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173) 	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46) 	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816) 	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146) 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146) 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128) 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) 	at java.base/java.lang.Thread.run(Thread.java:835) ```  ## To Reproduce    Detailed steps to reproduce the behavior: clone the repo: https://github.com/gorbysbm/grid-node-bug docker-compose -f src/main/resources/config/selenium/docker-compose.yml up run the testNG suite: src/test/resources/webtestsuites/RemoteBrowserDebug.testng.xml  ## Expected behavior No Errors when trying to connect driver nodes to grid node  ## Test script or set of commands reproducing this issue  Please see the repo: https://github.com/gorbysbm/grid-node-bug and launch test suite using the instructions above  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  Language Bindings version: 3.141.5  Selenium Grid version (if applicable): 3.141.5  but reproduced it with latest version as well.","closed","R-awaiting answer,","gorbysbm","2020-05-20T18:03:21Z","2021-09-05T09:43:58Z"
"","8447","Safari and IE 11: MoveToElement() is not performing any action.","## üêõ Bug Report  I have some scenario, where I need to check the before and after hover action on the element, Below code is working as expected in chrome, In safari and IE 11 it's not performing any action. var actions= new Actions(Driver); actions.MoveToElement(element).Build().Perform();","closed","R-awaiting answer,","kumarswamy123","2020-06-22T10:40:58Z","2021-09-05T09:12:40Z"
"","7955","selenium node version 3.141.59 behind NAT registers with local IP address","## üêõ Bug Report  I have selenium node running on server with local private IP address 172.17.0.7. When it connects to selenium hub it must be routed through NAT IP address 10.45.1.1  When I run the node with selenium-server-standalone-3.12.0.jar and with the configuration below the hub registers the NAT IP(10.45.1.1) address and everything works fine.  When I upgraded to selenium-server-standalone-3.141.59.jar, the node is registered with local IP(172.17.0.7) which is not reachable from HUB. So the HUB reports the node as not reachable.  16:13:32.916 INFO [DefaultGridRegistry.add] - Registered a node http://172.17.0.7:13002 16:15:48.920 INFO [DefaultRemoteProxy.onEvent] - Marking the node http://172.17.0.7:13002 as down: cannot reach the node for 2 tries  This is the part of the nodeconfig we use :  ** ""port"": 13002, ""external_ip"": ""10.45.1.1"", ""remoteHost"": ""http://10.45.1.1:13002"", **  Is version 3.141.59 expecting some new parameters in the config?","closed","R-awaiting answer,","holubm","2020-01-22T16:29:04Z","2020-04-15T07:41:34Z"
"","8494","Selenium Chromedriver HttpCommandExecutor.MakeHttpRequest() failing with Timeout","## üêõ Bug Report  I have my tests automated through Selenium. The automated build runs the tests which are more than 1000. Once or twice a week I see few tests failing with the following error:  OpenQA.Selenium.WebDriverException: The HTTP request to the remote WebDriver server for URL **http://localhost:6659/session** timed out after 60 seconds. ---> System.Net.WebException: The operation has timed out at System.Net.HttpWebRequest.GetResponse() at OpenQA.Selenium.Remote.HttpCommandExecutor.MakeHttpRequest(HttpRequestInfo requestInfo) ‚Äî End of inner exception stack trace ‚Äî at OpenQA.Selenium.Remote.HttpCommandExecutor.MakeHttpRequest(HttpRequestInfo requestInfo) at OpenQA.Selenium.Remote.HttpCommandExecutor.Execute(Command commandToExecute) at OpenQA.Selenium.Remote.DriverServiceCommandExecutor.Execute(Command commandToExecute) at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters) at OpenQA.Selenium.Remote.RemoteWebDriver.StartSession(ICapabilities desiredCapabilities) at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(ICommandExecutor commandExecutor, ICapabilities desiredCapabilities) at OpenQA.Selenium.Chrome.ChromeDriver..ctor(ChromeDriverService service, ChromeOptions options, TimeSpan commandTimeout)  The error is always the same in the sense it always fails when trying to create a new session (never after creating a session). Hence the Url is always this: http://localhost:6659/session (different port numbers, and no session id or anything)  ## To Reproduce  ``` var chromeOptions = new ChromeOptions(); chromeOptions.AddUserProfilePreference(""disable-popup-blocking"", ""true"");  ChromeDriverService driverService = ChromeDriverService.CreateDefaultService();  if (EnableWebDriverLog) {      driverService.EnableVerboseLogging = true; }  //This is where the exception is thrown driver = new ChromeDriver(driverService, chromeOptions, TimeSpan.FromSeconds(60));  ``` On my analysis I found that the exception happens on the https://github.com/SeleniumHQ/selenium/blob/trunk/dotnet/src/webdriver/Remote/HttpCommandExecutor.cs#L150 with a Timeout WebException. I believe the reason could be :  1) The free port that was opened by the socket in the utility class might not be closed properly by the time it tries to create a session hence the request is timing out. 2) The TaskFactory creates a task to run in a threadpool thread although it is holding on to it synchronously. This could cause deadlocks when server is under load (but in this case I doubt that is the cause, since the error always happened at the same exact call for a new session)  ## Expected behavior  New ChromeDriver instance should be created.  ## Environment  OS: Windows Server 2016 Browser: Google Chrome Browser version: 73.0.3683.68 Browser Driver version: 73.0.3683.68 Language Bindings version: C# 7.0 Selenium WebDriver 2.1.1","closed","C-dotnet,","krishnan-unni","2020-07-09T17:40:46Z","2021-09-05T09:03:05Z"
"","8208","IJavaScriptExecutor.ExecuteScript() throws Access Violation Exception","## üêõ Bug Report  I have an app that runs 50+ ChromeDriver browsers in different threads. Each thread quits browser in the end. I was trying to stop chromedriver lose processes, so I've made a wrapper around chromedriver with custom Quit() method:  ``` public void Quit()         {             try             {                 ((IJavaScriptExecutor)webDriver).ExecuteScript(""return window.stop"");             }             catch { }              Sleep(5000);              try             {                 webDriver.Quit();             }             catch { }              webDriver = null;         } ```  Sometimes my app crashes and here is an error:  > Unhandled Exception: System.AccessViolationException: Attempted to read or write protected memory. This is often an indication that other memory is corrupt. >    at System.Net.UnsafeNclNativeMethods.OSSOCK.recv(IntPtr socketHandle, Byte* pinnedBuffer, Int32 len, SocketFlags socketFlags) >    at System.Net.Sockets.Socket.Receive(Byte[] buffer, Int32 offset, Int32 size, SocketFlags socketFlags, SocketError& errorCode) >    at System.Net.Sockets.Socket.Receive(Byte[] buffer, Int32 offset, Int32 size, SocketFlags socketFlags) >    at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size) >    at System.Net.PooledStream.Read(Byte[] buffer, Int32 offset, Int32 size) >    at System.Net.Connection.SyncRead(HttpWebRequest request, Boolean userRetrievedStream, Boolean probeRead) >    at System.Net.ConnectStream.ProcessWriteCallDone(ConnectionReturnResult returnResult) >    at System.Net.HttpWebRequest.WriteCallDone(ConnectStream stream, ConnectionReturnResult returnResult) >    at System.Net.ConnectStream.CallDone(ConnectionReturnResult returnResult) >    at System.Net.ConnectStream.ResubmitWrite(ConnectStream oldStream, Boolean suppressWrite) >    at System.Net.HttpWebRequest.EndWriteHeaders_Part2() >    at System.Net.HttpWebRequest.EndWriteHeaders(Boolean async) >    at System.Net.HttpWebRequest.WriteHeadersCallback(WebExceptionStatus errorStatus, ConnectStream stream, Boolean async) >    at System.Net.ConnectStream.WriteHeaders(Boolean async) >    at System.Net.HttpWebRequest.EndSubmitRequest() >    at System.Net.HttpWebRequest.CheckDeferredCallDone(ConnectStream stream) >    at System.Net.HttpWebRequest.GetResponse() >    at OpenQA.Selenium.Remote.HttpCommandExecutor.MakeHttpRequest(HttpRequestInfo requestInfo) >    at OpenQA.Selenium.Remote.HttpCommandExecutor.Execute(Command commandToExecute) >    at OpenQA.Selenium.Remote.DriverServiceCommandExecutor.Execute(Command commandToExecute) >    at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters) >    at OpenQA.Selenium.Remote.RemoteWebDriver.ExecuteScriptCommand(String script, String commandName, Object[] args) >    at OpenQA.Selenium.Remote.RemoteWebDriver.ExecuteScript(String script, Object[] args) >    at ConsoleApplication.Class.Browser.Quit() >    at ConsoleApplication.Processor.Finish() >    at ConsoleApplication.Processor.Start() >    at ConsoleApplication.Processor..ctor(WorkEntity entity) >    at ConsoleApplication.MainAction.ProcessingRoutine(WorkEntity entity) >    at ConsoleApplication.MainAction.<>c__DisplayClass11_0.b__0() >    at System.Threading.ThreadHelper.ThreadStart_Context(Object state) >    at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx) >    at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx) >    at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state) >    at System.Threading.ThreadHelper.ThreadStart()  I've commented line: ((IJavaScriptExecutor)webDriver).ExecuteScript(""return window.stop""); And that has helped.   ## To Reproduce C# .NET 4.7.1 https://github.com/ZigmundL/selenium_repro/blob/master/Program.cs  ## Expected behavior  I expect current chrome window will stop loading page.  ## Test script or set of commands reproducing this issue I've made a simple app to reproduce, but it could be alittle buggy in section of web-surfing: https://github.com/ZigmundL/selenium_repro/blob/master/Program.cs  ## Environment  OS: Windows 10, Windows Server 2019 Browser: Chrome Browser version: 81.0.4044.92 (Official Build) (64-bit) Browser Driver version: Selenium.WebDriver - 3.141 (nuget) and Selenium.WebDriver.ChromeDriver - 81.0.4044.6900 (nuget) Language Bindings version: C# .NET 4.7.1 Selenium Grid version (if applicable): none","closed","I-stale,","ZigmundL","2020-04-16T21:30:02Z","2021-12-03T00:06:52Z"
"","8123","Selenium can't find element by @FindBys annotation in case of two conditions","## üêõ Bug Report  I have a text element on the page with properties: ```  Downloads  ``` And I'm trying to get this element using FindBys annotation: ```     @FindBys({@FindBy(tagName = ""h3""),@FindBy(id = ""sites-page-title-header"")})     private WebElement PageTitleHeader; ``` but getting error: org.openqa.selenium.NoSuchElementException: Cannot locate an element using By.chained({By.tagName: h3,By.id: sites-page-title-header})  At the same time element is found properly if use just one condition: ```     @FindBys({@FindBy(id = ""sites-page-title-header"")})     private WebElement PageTitleHeader; ``` or ``` @FindBys({@FindBy(tagName = ""h5"")}) private WebElement EmailLabel; ```  ## Expected behavior  I expect to get the element   ## Test script or set of commands reproducing this issue ``` public class TestClass {     protected WebDriver driver;          @FindBys({@FindBy(tagName = ""h3""),@FindBy(id = ""sites-page-title-header"")})     private WebElement PageTitleHeader;          public TestClass(){         driver=new ChromeDriver();         driver.get(""https://chromedriver.chromium.org/downloads"");         PageFactory.initElements(driver, this);     }          public String getFontWeight(){         return PageTitleHeader.getCssValue(""font-Weight"");     }        } ``` ## Environment  OS:  Windows 10 Browser: Chrome Browser version: 80.0.3987.149 (Official Build) (64-bit) Browser Driver version: ChromeDriver 80.0.3987.106 (https://chromedriver.chromium.org/downloads) Language Bindings version: Java 3.141.59","closed","needs-triaging,","dh0d","2020-03-20T15:17:03Z","2020-04-25T08:20:51Z"
"","8283","SeleniumGrid: Unable to connect nodes to a hub that is only accessible via a hostname","## üêõ Bug Report  I have a Selenium Hub hosted on Openshift and exposed via a route, meaning that it is accessible via a hostname.   When I attempt to launch and register a node on a different machine, I find that I am unable to register the nodes successfully if we define the hostname instead of an `:` in the nodeConfig.json.   It seems like the selenium-standalone-server-3.141.59.jar file requires a direct connection of `ip_address:4444` and cannot support hostname as a value.  The stacktrace: ``` Registering the node to the hub: http://myhostname:-1/grid/register Couldn't register this node: Error sending the registration request: Unable to parse URL: http://myhostname:-1/grid/registerhttp://myhostname:-1/grid/register Couldn't register this node: The hub is down or not responding: Unable to parse URL: http://myhostname:-1/grid/registerhttp://myhostname:-1/grid/api/proxyhttp://myhostname:-1/grid/registerhttp://myhostname:-1/grid/api/proxy?http://:80 ```  I am using the node config defined here: https://github.com/SeleniumHQ/selenium/blob/selenium-3.141.59/java/server/src/org/openqa/grid/common/defaults/DefaultNodeWebDriver.json  ## To Reproduce  Detailed steps to reproduce the behavior: Step 1: Launch a Selenium Hub on Openshift, and expose this via a Route Step 2: Launch a Selenium node on VDI Step 3: In the nodeConfig.json file, define the ""hub"" to use the DNS instead of a port, with the syntax as `http://myhostname`  ## Expected behavior  The nodes should successfully connect to the hub even if hostname instead of an ip address is defined   ## Test script or set of commands reproducing this issue  I am using the nodeConfig defined here, and replacing the value of `hub` with my hostname (without port): https://github.com/SeleniumHQ/selenium/blob/selenium-3.141.59/java/server/src/org/openqa/grid/common/defaults/DefaultNodeWebDriver.json  ## Environment  OS: Openshift (Hub) / Windows 10 (Node) Browser: Google Chrome Browser version: Version 80 Browser Driver version:  80.0.3987.106 Language Bindings version: OpenJDK11 Selenium Grid version (if applicable): 3.141.59","closed","R-awaiting answer,","timothyjmtan","2020-05-08T08:03:23Z","2021-09-05T09:02:50Z"
"","7954","screenshot_as_base64, TypeError: 'str' object is not callable","## üêõ Bug Report  I got error ~~~ Traceback (most recent call last):     ...     elem.screenshot_as_base64() TypeError: 'str' object is not callable ~~~  ## Test script or set of commands reproducing this issue  ~~~ opts = webdriver.ChromeOptions() opts.add_argument('start-maximized') brws = webdriver.Chrome(chrome_options=opts, executable_path='/opt/chromedriver-79.0.3945.36/chromedriver') brws.get('https://google.com/') elem = brws.find_element_by_tag_name('body') elem.screenshot_as_base64() brws.quit() ~~~  ## Environment  Used vnc-server  for run Google Chrome.  OS: Ubuntu 18.04.3 LTS (Server) Browser: Chrome  Browser version: Google Chrome 79.0.3945.88 Browser Driver version: chromedriver-79.0.3945.36 Language Bindings version: Python 3.6.9  > pip3 show selenium                                                                                                                                                                                                                                                                                      ~~~ Name: selenium Version: 3.141.0 Summary: Python bindings for Selenium Home-page: https://github.com/SeleniumHQ/selenium/ Author: UNKNOWN Author-email: UNKNOWN License: Apache 2.0 Location: /usr/local/lib/python3.6/dist-packages Requires: urllib3 ~~~  ---------------------------------------- if using 'screenshot_as_png' ~~~ Traceback (most recent call last):     ...    elem.screenshot_as_png() TypeError: 'bytes' object is not callable ~~~","closed","needs-triaging,","vkatochka","2020-01-21T22:41:02Z","2020-02-21T22:13:29Z"
"","7948","[BUG]Can't import 'selenium.webdriver.remote.webelement' because of 'SyntaxError: invalid escape sequence \_'","## üêõ Bug Report  I found this invalid symbol ``E   SyntaxError: invalid escape sequence \_`` , can't execute pytest testcase what is using this file ``from selenium.webdriver.remote.webelement import WebElement``  ## To Reproduce  I generated a poc on github to be easily to ensure that behaviour can be reproduced **https://github.com/netzulo/selenium-issue-7948**  ## Expected behavior  Can use **windows 10 (x64)** , **Python 3.6.8** to import this  ``from selenium.webdriver.remote.webelement import WebElement`` and use on a pytest testcase **without syntax erros**  ## Test script or set of commands reproducing this issue  ``` git clone https://github.com/netzulo/maybeissue cd maybeissue mkvirtualenv maybeissue workon maybeissue python setup.py clean build install pip install -r requirements-tests.txt py.test tests/test_poc.py ```  I waste 3 hours installing 1 by 1 posible deffect between pytest, tox and own install dependencies :'), before to search along all selenium python code, i should ensure with community what i say it's not wrong   I can PR this too , if validated :D  ## Environment  OS: **Windows 10** Browser: **Chrome** Browser version: **79.0.3945.117 (Build oficial) (64 bits)** Browser Driver version: [chromedriver_32	[qadrivers] update chromedrivers to v78.0.3904.11](https://github.com/netzulo/qadrivers/blob/master/chromedriver_32) Language Bindings version: **Python 3.6.8** Selenium Grid version (if applicable): [version build 3.141.59](https://github.com/netzulo/qalab/blob/cb7e204de89343a354e36f91f537bb54b0ff6bb0/qalab/configs/settings.py#L48-L49)  ### As additional notes  That commands results on this installation dependencies  ``` atomicwrites==1.3.0 attrs==19.3.0 colorama==0.4.3 importlib-metadata==1.4.0 maybeissue==0.0.0 more-itertools==8.1.0 packaging==20.0 pluggy==0.13.1 py==1.8.1 pyparsing==2.4.6 pytest==5.3.4 selenium==3.141.0 six==1.14.0 urllib3==1.25.7 wcwidth==0.1.8 zipp==2.0.0 ```  i found this lanes   https://github.com/SeleniumHQ/selenium/blob/b300c358f65f33c0cf43177316f433601c027bdb/py/selenium/webdriver/remote/webdriver.py#L348  https://github.com/SeleniumHQ/selenium/blob/b300c358f65f33c0cf43177316f433601c027bdb/py/selenium/webdriver/remote/webdriver.py#L368","closed","C-py,","netzulo","2020-01-20T20:56:27Z","2021-09-05T10:02:46Z"
"","8636","excludeSwitches doesn't work in nodejs","## üêõ Bug Report  I can't disable plugin ""enable-automation"" and remove navigator.webdriver from loaded page. For nodejs.  ## To Reproduce  ```javascript const proxy = require('selenium-webdriver/proxy'); const chrome = require('selenium-webdriver/chrome'); const webdriver = require('selenium-webdriver');  		let options = new chrome.Options()  		options.addArguments('--disable-web-security') 		options.addArguments('--disable-notifications') 		options.addArguments('--autoplay-policy=no-user-gesture-required') 		options.addArguments('--disable-popup-blocking');  		options.addArguments('--disable-bundled-ppapi-flash') 		options.setUserPreferences({ 			'plugins.plugins_disabled': ['Shockwave Flash'], 			'profile.default_content_setting_values.notifications': 2, 			'profile.password_manager_enabled': false, 			'credentials_enable_service': false, 		})  		let chromeCapabilities = webdriver.Capabilities.chrome() 		let chromeOptions = { 			acceptSslCerts: true, 			acceptInsecureCerts: true, 			excludeSwitches: ['--enable-automation'], 			ignoreDefaultArgs: [""--enable-automation""], 			useAutomationExtension: false, 		}; 		chromeCapabilities.set('chromeOptions', chromeOptions);  		const serviceBuilder = new chrome.ServiceBuilder(this.driverPath);  		const driver = new webdriver.Builder() 			.forBrowser('chrome') 			.withCapabilities(chromeCapabilities) 			.setChromeOptions(options) 			.setChromeService(serviceBuilder) 			.build()  		await driver.executeScript('Network.setUserAgentOverride', {""userAgent"": 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.53 Safari/537.36'}) 		await this.driver.executeScript(""Object.defineProperty(navigator, 'webdriver', {get: () => undefined})"")  		await driver.get('https://soundcloud.com/')  ```  ## Expected behavior  Disable message ""chrome is being controlled by automated software"" and remove navigator.webdriver from loaded page.  ## Environment  OS: MacOS Catalina Browser: Chrome Browser version: 84.0.4147.125 Browser Driver version: 84.0.4147.30 Language Bindings version: JavaScript","closed","needs-triaging,","markolofsen","2020-08-20T07:21:50Z","2021-09-05T08:27:43Z"
"","8234","javascript error: jQuery is not defined error on using workaround of draganddrophelper.js to simulate drag and drop on HTML5 through selenium C#","## üêõ Bug Report  I am using the workaround mentioned in Issue https://github.com/SeleniumHQ/selenium-google-code-issue-archive/issues/3604 to simulate drag and drop on Chrome using jquery/javascript.  ## Expected behavior  jquery to load and drag and drop performed  ## Test script or set of commands reproducing this issue  public void WaitForJQuery(IWebDriver driver)         {             int num = 100;             bool status = false;             do             {                 IJavaScriptExecutor js = (IJavaScriptExecutor)driver;                 status = (bool)js.ExecuteScript(""return !!window.jQuery && window.jQuery.active == 0"");                 num--;             } while (num > 1 && status == false);         }          public void **DragAndDropElement(IWebElement elementFrom, IWebElement elementTo)         {             WaitForJQuery(WebDriver);             string path = Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location)+""/Helper/drag_and_drop_helper.js"";             string javaScript = File.ReadAllText(path);             string ab = elementFrom.ToString();              IJavaScriptExecutor js = (IJavaScriptExecutor)WebDriver;             js.ExecuteScript(javaScript + @""$('div[data-testid=req]:nth-child(2)').simulateDragDrop({ dropTarget:'div[data-testid=slot]:nth-child(40)'});"");  ## Environment  OS: Windows 10 Pro; 10.0.17763 Browser: Chrome Browser version: Version 81.0.4044.113 (Official Build) (64-bit) Browser Driver version: Selenium.WebDriver.ChromeDriver.80.0.3987.10600 Language Bindings version: C# 3.141.0  [drag_and_drop_helper.txt](https://github.com/SeleniumHQ/selenium/files/4527867/drag_and_drop_helper.txt)","closed","needs-triaging,","shirink28","2020-04-24T09:22:36Z","2021-09-05T10:20:25Z"
"","8300","High CPU processor usage with firefox-v61,gecko-0.23 and selenium 3.14.0","## üêõ Bug Report  I am using selenium with firefox-v61 and geckodriver-0.23 for crawling. I am running it with heavy scale -around 50 simultaneous processes of firefox every time in a new window. but firefox is using very high processor usage- around 3 processes(including 2 child-Id) for every site opening and rendering . And my total cpu usage of machine is becoming around 60 to 70. I am opening every time a new firefox instance to open the site due to some project criteria.  Earlier i used the older version of firefox-v40 and for opening a site only one process(no child-Id) is used per site for opening in firefox.And total processor usage in that case was around 25 to 30. Now i have upgraded selenium and firefox in my project and due to this issue i am not able to go ahead with my project. Can you please let me know how can i overcome the process usage of firefox with such scenario?  ## To Reproduce  If you open mulitple firefox with v40 and v61, you can see the difference in processor usage.  ## Expected behavior  The processor usage in firefox-v61.0 should be same or somewhat more than what it used to be at firefox-v40, but not such a heavy difference.  ## Test script or set of commands reproducing this issue ``` my $max_processes = 50; my $disply = 100 + (int(rand 30) * 3); my $ROOT_PATH = /home/developer/crawler; my $JSpiderVersion = v4.1.0; my cmd=""xvfb-run -n $disply -a -s '-screen 0 1024x768x24' $ROOT_PATH/jdk1.8.0_181/bin/java -Xmx2g -XX:ParallelGCThreads=2 -Dwebdriver.gecko.driver=$ROOT_PATH/etc/geckoDriver_0.23/geckodriver -cp $ROOT_PATH/release/$JSpiderVersion/JSpider-$JSpiderVersion.jar com.naukri.crawler.driver.Srp --config $ROOT_PATH/release/$JSpiderVersion/etc/crawler.srp.config""; ```  ## Environment OS: ubunt 18.0.4 Browser: firefox Browser version: 61,0 Browser Driver version: GeckoDriver 0.23 Language Bindings version: Java 8 Selenium Grid version (if applicable): 3.14.0","closed","needs-triaging,","siddhant42","2020-05-13T06:24:38Z","2021-09-05T10:02:52Z"
"","7989","RemoteDriver.Quit() doesn't finish cromedriver.exe process via selenium-server-4.0.0-alpha-X.jar","## üêõ Bug Report  I am using Selenium server in standalone mode. After running tests, I have not finished chromedriver.exe sessions.   ## To Reproduce  Run new grid with: java -jar selenium-server-4.0.0-alpha-4.jar standalone  Run simple test (C#): var gcOptions = new ChromeOptions(); // disable browser graphical interface gcOptions.AddArgument(""--headless""); var capabilities = gcOptions.ToCapabilities(); var RemoteDriver = new RemoteWebDriver(new Uri(""http://localhost:4444""), capabilities); var Browser = new EventFiringWebDriver(RemoteDriver); Browser.Navigate().GoToUrl(myURL);//https://www.google.com/ RemoteDriver.Quit();  As a result: browser is closed correctly, but chromedriver.exe is still running.   This code works correctly with selenium-server-standalone-4.0.0-alpha-2.jar (Hub URL = http://localhost:4444/wd/hub)   ## Environment  OS: Windows 10 Browser: Google Chrome Browser version: 79.0.3945.130 (Official Build) (64-bit) Browser Driver version: ChromeDriver 79.0.3945.36 Language Bindings version: MS VS 2019  (Selenium.WebDriver NuGet package v 3.141.0) Selenium Grid version (if applicable): selenium-server-4.0.0-alpha-4.jar standalone","closed","C-java,","daniilmeranov","2020-02-03T13:38:19Z","2020-04-15T07:47:01Z"
"","8510","Last letter getting erased after inputting text into a textbox","## üêõ Bug Report  I am using Selenium driver version 3.141.0 in my Visual Studio 2019, C# NUnit Core test project. The code runs on the Chrome browser using the Chromedriver  and clears out the existing Shipping Address fields of a Salesforce Account object and assigns new values.                `                                IWebElement shCity = driver.FindElement(By.XPath(""//input[@placeholder='Shipping City']""));                 shCity.Clear();                 shCity.SendKeys(shippingCity);                                IWebElement shState = driver.FindElement(By.XPath(""//input[@placeholder='Shipping State/Province']""));                 shState.Clear();                 shState.SendKeys(shippingState);                                IWebElement shZip = driver.FindElement(By.XPath(""//input[@placeholder='Shipping Zip/Postal Code']""));                 shZip.Clear();                 shZip.SendKeys(shippingZip);                                IWebElement shCountry = driver.FindElement(By.XPath(""//input[@placeholder='Shipping Country']""));                 shCountry.Clear();                 shCountry.SendKeys(shippingCountry);` It clears out the city textbox and puts in Toronto, but when it moves to the state textboc, the lest letter in Toronto is deleted, and we end up with ""Toront"". This happens for state and zip code as well so we end up with ""Toront"", ""O"", ""8765"" in the 3 textboxes. I can get around this issue by adding a space after each value, but was wondering if there is a better fix.  Please see the attached screenshot. ![screenshot](https://user-images.githubusercontent.com/64550358/87247817-19dcf800-c424-11ea-92ff-e680184fa5e4.jpg)","closed","needs-triaging,","burakqa","2020-07-12T13:43:15Z","2021-09-05T09:12:28Z"
"","8486","Mouse over event is not working in IE11","## üêõ Bug Report  I am using below code to do some mouse over actions for IE, but thats not happening. Tried Robot classes as well still it didnt help.  if(BrowserType.INTERNETEXPLORER.equals(BrowserManager.INSTANCE.getBrowserType())) { 			  JLog.write(""Navigating to menu items.."");     		  new WebDriverWait(browser(), 100)     		    .until(ExpectedConditions.titleContains(""Console""));     		    new Actions(browser())     		    .moveToElement(     		        new WebDriverWait(browser(), 100)     		        .until(     		            ExpectedConditions.elementToBeClickable(menu)))     		    .build().perform();     		         		    **new WebDriverWait(browser(), 40) 		        .until( 		            ExpectedConditions.elementToBeClickable(menu)).click();**     		  	     		    JLog.write(""Successfully moved to Menu: ""+menu.toString());     		    new Actions(browser())     		    .moveToElement(     		        new WebDriverWait(browser(), 40)     		        .until(     		            ExpectedConditions.elementToBeClickable(     		                menuItem)))     		    .build().perform();     		         		    new WebDriverWait(browser(), 40)     		    .until(     		        ExpectedConditions.elementToBeClickable(     		            menuItem))     		    .click();     		    JLog.write(""Successfully moved to MenuItem: ""+menuItem.toString());     		  return true; 		  	}  Detailed steps to reproduce the behavior:  ## Expected behavior  The cursor should be moved to the menu item on the web page.  ## Test script or set of commands reproducing this issue  Provided the code above  ## Environment  OS: Windows 10 Browser: IE11 Browser version: 11.1932.16299.0 Browser Driver version:  Language Bindings version: JDK 11   ![image](https://user-images.githubusercontent.com/67944965/86728973-92217300-c04a-11ea-8648-8226b57a8a11.png)","closed","D-IE,","arunvaidya","2020-07-07T06:48:57Z","2021-09-05T08:34:45Z"
"","8781","Unable to set Proxy on Safari Webdriver?","## üêõ Bug Report  I am Unable to set proxy on IWebdriver. Here is my code: `SafariOptions safariOptions = new SafariOptions();` `Proxy proxy = new OpenQA.Selenium.Proxy();` `proxy.HttpProxy = ""zproxy.lum-superproxy.io:22225"";` `proxy.SslProxy = ""zproxy.lum-superproxy.io:22225"";` `safariOptions.AddAdditionalCapability(CapabilityType.Proxy, proxy);` `IWebDriver driver = new SafariDriver(safariOptions);`  After running this code it throws an exception which is like  > FATAL UNHANDLED EXCEPTION: OpenQA.Selenium.WebDriverException: Unknown value in 'proxy' capability: 'proxyType' = 'MANUAL'  ## Environment  OS: Mac OS Catalina Browser: Safai Browser version: 14.0 Language Bindings version: C#","closed","needs-triaging,","IhChowdhury","2020-10-13T11:46:45Z","2021-09-05T08:19:00Z"
"","7992","Cannot Create Edge Driver","## üêõ Bug Report  I am unable to create an Edge Driver.  The driver the error says to download is not available for download.   ## To Reproduce  ```typescript static async CreateEdgeDriverTry1():Promise {       	var service = new edge.ServiceBuilder() 	.setPort(5555) 	.build();  	var options = new edge.Options(); 	// configure browser options ...  	var driver = edge.Driver.createSession(options, service);  	return driver; } ```  ```typescript static async CreateEdgeDriverTry2():Promise {       	var driver = await new Builder().forBrowser(""edge"").build();  	return driver; } ```   **It throws this error:** Error: The MicrosoftWebDriver.exe could not be found on the current PATH. Please download the latest version of the MicrosoftEdgeDriver from https://www.microsoft.com/en-us/download/details.aspx?id=48212 and ensure it can be found on your PATH.    **When I go to that download page, the page says:** *We're sorry, this download is no longer available.*   ## Expected behavior  The driver can be created  ## Test script or set of commands reproducing this issue  See above  ## More Information * I have both msedgedriver.exe and IEDriverServer.exe in my path that I downloaded from here:  https://developer.microsoft.com/en-us/microsoft-edge/tools/webdriver/ * I noticed in your selenium-webdriver/edge.js file that the EDGEDRIVER_EXE is MicrosoftWebDriver.exe     * I tried changing it to msedgedriver.exe and that did not help either.   ## Environment  * **OS:** Windows 10 * **Browser:** Microsoft Edge  * **Browser version:** 44.17763.831.0 * **Browser Driver version:** 81.0.411.0  * **Language Bindings version:** nodejs selenium-webdriver 4.0.0-alpha.5  * **Selenium Grid version (if applicable):** n/a","closed","needs-triaging,","gfinzerScotts","2020-02-03T18:54:37Z","2020-05-05T21:19:36Z"
"","8342","Looks like ActionChains is not working with iframe in Python","## üêõ Bug Report  I am trying to move an element from outside of iframe to inside iframe but it seems that never worked.   ## To Reproduce  This is a website URL where I executed below code: https://grapesjs.com/demo.html  ``` element_source = self._selenium.find_element(By.XPATH,                                           '//div[@class=""gjs-block-label""][contains(.,""Tooltip"")]')     element_target=self._selenium.find_element(By.CLASS_NAME,'gjs-frame')     actions = ActionChains(self._driver)     actions.drag_and_drop(element_source, element_target).perform()     time.sleep(5) ```  ## Expected behavior  Expecting that element from the right panel should move to left iframe.  ## Environment  * OS: Windows * Browser: Chrome * Browser version: 81.0.4044.138","closed","needs-triaging,","QA-Rahul","2020-05-25T15:04:27Z","2021-09-05T09:12:36Z"
"","8335","ERROR:page_load_metrics_update_dispatcher.cc(165)] Invalid first_paint 7.247 s for first_image_paint 6.456 s","## üêõ Bug Report  I am trying to get screenshots of certain elements in Python. However, the screenshots are saved with no content in it. Also, It is producing these errors:  [18404:16988:0522/054626.537:ERROR:page_load_metrics_update_dispatcher.cc(165)] Invalid first_paint 7.247 s for first_image_paint 6.456 s [18404:16988:0522/054523.353:ERROR:page_load_metrics_update_dispatcher.cc(165)] Invalid first_paint 7.247 s for first_image_paint 6.456 s [18404:16988:0522/054524.945:ERROR:page_load_metrics_update_dispatcher.cc(165)] Invalid first_paint 7.247 s for first_image_paint 6.456 s [18404:16988:0522/054525.953:ERROR:page_load_metrics_update_dispatcher.cc(165)] Invalid first_paint 7.247 s for first_image_paint 6.456 s [18404:16988:0522/054527.721:ERROR:page_load_metrics_update_dispatcher.cc(165)] Invalid first_paint 7.247 s for first_image_paint 6.456 s [18404:16988:0522/054529.233:ERROR:page_load_metrics_update_dispatcher.cc(165)] Invalid first_paint 7.247 s for first_image_paint 6.456 s  -->  ## To Reproduce from selenium import webdriver from PIL import Image import os from io import BytesIO from webdriver_manager.chrome import ChromeDriverManager import time #driver = webdriver.Chrome(ChromeDriverManager().install()) driver = webdriver.Chrome(executable_path=r""chromedriver.exe""); driver.get(""------""); i = 1 while(i <=10):     name = ""//*[@id='-------']/div["" + str(i) + ""]/div[2]/div[2]/table/tbody""     tbody = driver.find_element_by_xpath(name)     location = tbody.location;     size = tbody.size;     png = tbody.screenshot_as_png     #.screenshot_as_png     im = Image.open(BytesIO(png)) # uses PIL library to open image in memory     left = location['x']     top = location['y']     right = location['x'] + size['width']     bottom = location['y'] + size['height']     im = im.crop((left, top, right, bottom)) # defines crop points     im.save('element_image' + str(i) + '.png') # saves new cropped image     i = i+1     time.sleep(5)  Environment: OS: Windows 10 Browser: Chrome Browser Driver version: ChromeDriver 2.43 Language Bindings version: Python","closed","R-awaiting answer,","rvallari1","2020-05-22T00:30:04Z","2021-09-05T09:36:37Z"
"","8776","reset_actions() does not seem to work","## üêõ Bug Report  I am seeing an issue similar to the one reported in #6837 (which has been closed). I tested the code given in #6837, which seems to work now, but there are other situations where reset_actions() does not seem to work.  To reproduce the issue that I am seeing, I modified the code included in #6837 as below  from selenium.webdriver.chrome.options import Options from selenium import webdriver from selenium.webdriver import ActionChains  def action_chains_test():     options = Options()     driver = webdriver.Chrome(executable_path=r""C:\Users\Admin\Downloads\chromedriver86_win32\chromedriver.exe"",options=options)     driver.get('https://developer.mozilla.org/en-US/')      mouse = ActionChains(driver)          for x in range(3):         print('Iteration - {iter}'.format(iter=x))         elem = driver.find_element_by_id('technologies-button')         mouse.click(elem).perform()         mouse.reset_actions()         mouse.pause(2)                  elem = driver.find_element_by_id('references-guides-button')         mouse.click(elem).perform()         mouse.reset_actions()         mouse.pause(2)                  elem = driver.find_element_by_id('feedback-button')         mouse.click(elem).perform()         mouse.reset_actions()         mouse.pause(2)                  driver.close()   if __name__ == ""__main__"":     action_chains_test()  In this code, I am opening https://developer.mozilla.org/en-US/ and clicking on ""Technologies"", ""References & Guides"", ""Feedback"" at the top of that page, in that order, in a loop of 3 iterations. After clicking on each item, I do reset_actions() to clean up the actions queue. I was expecting these there items to be clicked 3 items one after the other. But if you run the code, you can see 1) Each item is clicked many more times than three 2) Sometimes ""Technologies"" get clicked after ""Reference & Guides"" which is not in line with the code 3) First iteration has fewer clicks, second has few more and the third iteration has even more. So later iterations are having more number of click This shows the reset_actions() does not seem to work and the actions get piled up in the queue.    ## Environment  OS: Windows 10 Browser: Chrome  Browser version: Version 86.0.4240.75 (Official Build) (64-bit) Browser Driver version: ChromeDriver 86.0.4240.22 Language Bindings version: Python 3.7.6  Selenium Grid version (if applicable): NA","closed","C-py,","peterjv26","2020-10-12T17:50:33Z","2021-09-05T08:15:42Z"
"","8665","complex key combination does not register in Firefox","## üêõ Bug Report  I am on `Firefox 80.0.1` and am trying to open the console from selenium with the `Ctrl+Shift+K` combination. This does not have the desired effect of opening the console (instead, the page opens without the console).    ## To Reproduce    My full script is   ```js var webdriver = require('selenium-webdriver'),     By = webdriver.By,     until = webdriver.until;  var firefox = require('selenium-webdriver/firefox'); var inpt = require('selenium-webdriver/lib/input');  var options = new firefox.Options();  var driver = new webdriver.Builder()     .forBrowser('firefox')     .setFirefoxOptions(options)     .build();  (async function(){     await driver.get('about:blank');          const actions = driver.actions();      await actions 	.keyDown(inpt.Key.CONTROL) 	.keyDown(inpt.Key.SHIFT) 	.sendKeys('k') 	.keyUp(inpt.Key.SHIFT) 	.keyUp(inpt.Key.CONTROL) 	.perform();   })();  ``` I run it with `node `.  ## Expected behavior  `about:blank` page open in a new window in Firefox, with the Web Console open at the bottom.   Instead, the `about:blank` page opens, but not the console. By contrast, if I `sendKeys(inpt.Key.TAB)` I do trigger a Tab (I cannot trigger multiple Tabs in succession though).   ## Test script or set of commands reproducing this issue  Script provided above.   ## Environment  OS: Arch Linux Browser: Firefox  Browser version: 80.0.1 Browser Driver version: geckodriver 0.26.0 Language Bindings version: Javascript (node) Selenium Grid version (if applicable): n/a","closed","","stuart-little","2020-09-02T05:06:21Z","2021-09-05T08:36:07Z"
"","8780","Elements with linked style not selectable and lead to TimeoutException","## üêõ Bug Report  I am having an issue selecting certain elements on a webpage.  The issue happens on a page that loads in a new tab after logging in. On that page, I try to select an element in the nav bar and I always get a `TimeoutException`. I have used both `XPATH` and `CSS_SELECTOR` strings to try to select an element and both fail. I have also used many different utilities (Ranorex Selocity, Selenium IDE, etc) to find these values. I can find the elements I want to select when using these browser tools, but I still get a `TimeoutException` with Selenium.  I did some troubleshooting and I found out the following.  This simple nav element at the top is selectable. ``  This nav element gives a TimeoutException. ``  The only difference in the code used to try and select each element was the `CSS_SELECTOR` string.  **Working selector** `WebDriverWait(driver, delay).until(EC.presence_of_element_located((By.CSS_SELECTOR, ""nav[class='shell-sidebar']"")))`  **Non-working selector** `WebDriverWait(driver, delay).until(EC.presence_of_element_located((By.CSS_SELECTOR, ""nav[class='left-nav-body']"")))`  I'm not sure if it's useful, but `_ngcontent-asw-c5` is for the style and the contents are located in ``.   ## To Reproduce  As stated above, the less complicated nav element is selectable using `class`. The more complicated is not selectable using `class` and produces a `TimeoutException`. Selecting any element that includes any style code related to what is listed in `` will cause a `TimeoutException`.    ## Expected behavior  I expected `` to be selectable.   ## Test script or set of commands reproducing this issue  The code I used to test this is as follows: `WebDriverWait(driver, delay).until(EC.presence_of_element_located((By.CSS_SELECTOR, ""nav[class='CLASS_NAME']"")))`  A copy of the code of the website can be found [here](https://github.com/cp-community/Cut-and-Paste/blob/main/To%20Screen%20Scrape).   ## Environment  OS X Version: 10.14.6  Chrome Version 86.0.4240.75 (Official Build) (x86_64) ChromeDriver Version: 85.0.4183.87 VS Code Version: 1.50.0 Python Version: v2020.9.114305 Selenium Version: 3.141.0","closed","R-awaiting answer,","cp-community","2020-10-13T02:30:20Z","2021-09-05T08:21:41Z"
"","8867","Mismatching version log | org.openqa.selenium.SessionNotCreatedException: session not created","## üêõ Bug Report  I am getting a weird message while running selenium locally: `This version of OperaDriver only supports Opera version 86` and `Current browser version is 60.0.3112.107 with binary path C:\Users\xxx\AppData\Local\Programs\Opera\72.0.3815.320\opera.exe`  How can it be `60.0.3112.107` if the provided binary is `72.0.3815.320`?  Full trace here: ``` Starting OperaDriver 86.0.4240.80 (7ed88b53bda45a2d19efb4f8706dd6b6cad0d3af-refs/branch-heads/4240@{#1183}) on port 15955 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping OperaDriver safe. OperaDriver was started successfully. [WARNING] org.openqa.selenium.SessionNotCreatedException: session not created: This version of OperaDriver only supports Opera version 86 Current browser version is 60.0.3112.107 with binary path C:\Users\xxx\AppData\Local\Programs\Opera\72.0.3815.320\opera.exe   (Driver info: operadriver=86.0.4240.80 (7ed88b53bda45a2d19efb4f8706dd6b6cad0d3af-refs/branch-heads/4240@{#1183}),platform=Windows NT 10.0.18362  x86_64) (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 6.30 seconds     Build info: version: '4.0.0-alpha-6', revision: '5f43a29cfc' System info: host: 'xxx', ip: 'xxx', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.1' Driver info: driver.version: OperaDriver     at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0 (Native Method)     at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance (NativeConstructorAccessorImpl.java:64)     at jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance (DelegatingConstructorAccessorImpl.java:45)     at java.lang.reflect.Constructor.newInstanceWithCaller (Constructor.java:500)     at java.lang.reflect.Constructor.newInstance (Constructor.java:481)     at org.openqa.selenium.remote.ErrorHandler.createThrowable (ErrorHandler.java:217)     at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed (ErrorHandler.java:169)     at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$errorHandler$0 (JsonWireProtocolResponse.java:54)     at org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0 (HandshakeResponse.java:30)     at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$1 (ProtocolHandshake.java:126)     at java.util.stream.ReferencePipeline$3$1.accept (ReferencePipeline.java:195)     at java.util.Spliterators$ArraySpliterator.tryAdvance (Spliterators.java:958)     at java.util.stream.ReferencePipeline.forEachWithCancel (ReferencePipeline.java:127)     at java.util.stream.AbstractPipeline.copyIntoWithCancel (AbstractPipeline.java:502)     at java.util.stream.AbstractPipeline.copyInto (AbstractPipeline.java:488)     at java.util.stream.AbstractPipeline.wrapAndCopyInto (AbstractPipeline.java:474)     at java.util.stream.FindOps$FindOp.evaluateSequential (FindOps.java:150)     at java.util.stream.AbstractPipeline.evaluate (AbstractPipeline.java:234)     at java.util.stream.ReferencePipeline.findFirst (ReferencePipeline.java:543)     at org.openqa.selenium.remote.ProtocolHandshake.createSession (ProtocolHandshake.java:128)     at org.openqa.selenium.remote.ProtocolHandshake.createSession (ProtocolHandshake.java:75)     at org.openqa.selenium.remote.HttpCommandExecutor.execute (HttpCommandExecutor.java:138)     at org.openqa.selenium.remote.service.DriverCommandExecutor.execute (DriverCommandExecutor.java:83)     at org.openqa.selenium.remote.RemoteWebDriver.execute (RemoteWebDriver.java:582)     at org.openqa.selenium.remote.RemoteWebDriver.startSession (RemoteWebDriver.java:216)     at org.openqa.selenium.remote.RemoteWebDriver. (RemoteWebDriver.java:136)     at org.openqa.selenium.opera.OperaDriver. (OperaDriver.java:173)     at org.openqa.selenium.opera.OperaDriver. (OperaDriver.java:160)     at org.openqa.selenium.opera.OperaDriver. (OperaDriver.java:149)     at com.example.App.main (App.java:10)     at org.codehaus.mojo.exec.ExecJavaMojo$1.run (ExecJavaMojo.java:254)     at java.lang.Thread.run (Thread.java:832) ```    ## To Reproduce    Detailed steps to reproduce the behavior: Create and execute any command on `OperaDriver` Java instance.  ## Expected behavior  It should not give the mismatching version  ## Test script or set of commands reproducing this issue  Script `mvn exec:java`  ## Environment  OS: Windows 10 Browser: Opera Browser version: 72 Browser Driver version: 86","closed","needs-triaging,","msanfilippof","2020-11-11T11:24:29Z","2021-09-05T08:31:26Z"
"","8521","[py] https://github.com/SeleniumHQ/selenium/pull/8096 broke RemoteConnection subclass selection for chrome","## üêõ Bug Report  https://github.com/SeleniumHQ/selenium/blob/trunk/py/selenium/webdriver/remote/webdriver.py#L106  get_remote_connection checks for browser_name #8096 removed it from class    ## To Reproduce    Detailed steps to reproduce the behavior:  ## Expected behavior  A clear and concise description of what you expected to happen.  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:   Selenium Grid version (if applicable):","closed","R-awaiting answer,","saunaants","2020-07-14T09:40:34Z","2021-09-05T09:02:54Z"
"","8154","'NewConnectionError' or 'the site can't be reached error'","## üêõ Bug Report  HTTPConnectionPool(host='127.0.0.1', port=55765): Max retries exceeded with url: /session/ed5fd5455c079b8b18ea48a4a5e7d306/element/da86ad69-23ed-4515-92e7-8a600c31df5c/text (Caused by NewConnectionError(': Failed to establish a new connection: [Errno 61] Connection refused'))   or   This site can‚Äôt be reached www.instagram.com took too long to respond.  Try: Checking the connection Checking the proxy and the firewall ERR_TIMED_OUT   -- This simply ends up with the part of the comments not being grasped from the links and I end up with the list with less comments than being actually present there   ## To Reproduce  Check the code below.   ## Expected behavior  My goal is to build the instagram comment crawler.  There are the steps that I've done so far: I have built the code that extracts links to the instagram posts first, then add all the comments to the list. With this code I managed to grasp the comments for first six, however after that it keeps showing ""This site can't be reached"" resulting in HTTPConnectionPool(host='127.0.0.1', port=55765): Max retries exceeded with url: error .  This method seems to be very inefficient (down below) , so I am wondering what's wrong with my code since it poorly works for first 6 but can't really handle large volumes. If there are any other methods and good guides, please refer me.  ## Test script or set of commands reproducing this issue  ``` from http_request_randomizer.requests.proxy.requestProxy import RequestProxy req_proxy = RequestProxy()  proxies = req_proxy.get_proxy_list() #this will create proxy list   notSorted = [] index_proxy = 0 PROXY = proxies[index_proxy].get_address() webdriver.DesiredCapabilities.CHROME['proxy']={     ""httpProxy"":PROXY,     ""ftpProxy"":PROXY,     ""sslProxy"":PROXY,     ""noProxy"":None,     ""proxyType"":""MANUAL"",     ""class"":""org.openqa.selenium.Proxy"",     ""autodetect"":False      } driver = webdriver.Chrome(executable_path=""/Users/maria/desktop/chromedriver"") for index, link in enumerate(links, 1):     if index % 6 == 0:         driver.quit()         index_proxy +=1         PROXY = proxies[index_proxy].get_address()         webdriver.DesiredCapabilities.CHROME['proxy']={             ""httpProxy"":PROXY,             ""ftpProxy"":PROXY,             ""sslProxy"":PROXY,             ""noProxy"":None,             ""proxyType"":""MANUAL"",             ""class"":""org.openqa.selenium.Proxy"",             ""autodetect"":False         }         driver = webdriver.Chrome(executable_path=""/Users/maria/desktop/chromedriver"")         driver.get(link)         allComments = driver.find_elements_by_xpath(f""//div[@class='C4VMK']"")         for comment in allComments:             print(comment.text)             notSorted.append(comment.text.split('–û—Ç–≤–µ—Ç–∏—Ç—å'))     else:          driver.get(link)         allComments = driver.find_elements_by_xpath(f""//div[@class='C4VMK']"")         for comment in allComments:             print(comment.text)             notSorted.append(comment.text.split('–û—Ç–≤–µ—Ç–∏—Ç—å'))  ```  ## Environment  OS: MacOS Catalina 10.15.4 Browser: Chrome Browser version: 80.0.3987.162 Browser Driver version: ChromeDriver Version 80 Language Bindings version: Python 3.7.6 Using: Python, Selenium package, urllib3, http_request_randomizer.requests.proxy.requestProxy","closed","needs-triaging,","MariaLavrovskaya","2020-04-01T18:33:45Z","2020-05-05T21:17:51Z"
"","8475","""hostsEntries"" capability don't work","## üêõ Bug Report  Hi. We are tried to use the 'hostsEntries' capability, but not successful. Please help us to understand that wrong. The java code of test case: ``` ChromeOptions options = new ChromeOptions(); options.addArguments(""--no-sandbox""); options.setCapability(""version"",""80.0""); options.setCapability(""enableVNC"",true); options.setCapability(""hostsEntries"", new String[] {""test.com:1.2.3.4""}); RemoteWebDriver driver = new RemoteWebDriver(new URL(""http://selenoid.test.com/wd/hub""), options); driver.get(""http://test.com:8080/somePage""); ``` The browser log: ``` 2020-07-02T05:35:05.701Z,""filebeat-f2ldg"",""Waiting X server... Waiting X server..."" 2020-07-02T05:35:05.937Z,""filebeat-f2ldg"",""2020/07/02 05:35:05 [INIT] [Listening on :7070] Waiting X server... Logging to: /home/selenium/fluxbox.log Waiting X server... Waiting X server... Waiting X server... Waiting X server... Waiting X server... Waiting X server... Waiting X server... Waiting X server... Waiting X server... Waiting X server... Waiting X server... Waiting X server... Waiting X server... Waiting X server... Waiting X server... Waiting X server... Waiting X server... Waiting X server... Waiting X server... Starting ChromeDriver 80.0.3987.106 (f68069574609230cf9b635cd784cfb1bf81bb53a-refs/branch-heads/3987@{#882}) on port 4444 All remote connections are allowed. Use a whitelist instead! Please protect ports used by ChromeDriver and related test frameworks to prevent access by malicious code.   --- x11vnc loop: 1 ---"" 2020-07-02T05:35:08.319Z,""filebeat-f2ldg"",""[1593668108.319][INFO]: [4594544edeb68a9cf543d23cae744fb2] COMMAND InitSession {    """"capabilities"""": {       """"desiredCapabilities"""": {          """"browserName"""": """"chrome"""",          """"enableVNC"""": true,          """"goog:chromeOptions"""": {             """"args"""": [ """"--no-sandbox"""" ],             """"extensions"""": [  ]          },          """"hostsEntries"""": [ """"test.com:1.2.3.4"""" ],          """"version"""": """"80.0""""       },       """"firstMatch"""": [ {          """"browserName"""": """"chrome"""",          """"goog:chromeOptions"""": {             """"args"""": [ """"--no-sandbox"""" ],             """"extensions"""": [  ]          }       } ]    },    """"desiredCapabilities"""": {       """"browserName"""": """"chrome"""",       """"enableVNC"""": true,       """"goog:chromeOptions"""": {          """"args"""": [ """"--no-sandbox"""" ],          """"extensions"""": [  ]       },       """"hostsEntries"""": [ """"test.com:1.2.3.4"""" ],       """"version"""": """"80.0""""    } }"" 2020-07-02T05:35:08.319Z,""filebeat-f2ldg"",""[1593668108.319][INFO]: Populating Preferences file: {    """"alternate_error_pages"""": {       """"enabled"""": false    },    """"autofill"""": {       """"enabled"""": false    },    """"browser"""": {       """"check_default_browser"""": false    },    """"distribution"""": {       """"import_bookmarks"""": false,       """"import_history"""": false,       """"import_search_engine"""": false,       """"make_chrome_default_for_user"""": false,       """"skip_first_run_ui"""": true    },    """"dns_prefetching"""": {       """"enabled"""": false    },    """"profile"""": {       """"content_settings"""": {          """"pattern_pairs"""": {             """"https://*,*"""": {                """"media-stream"""": {                   """"audio"""": """"Default"""",                   """"video"""": """"Default""""                }             }          }       },       """"default_content_setting_values"""": {          """"geolocation"""": 1       },       """"default_content_settings"""": {          """"geolocation"""": 1,          """"mouselock"""": 1,          """"notifications"""": 1,          """"popups"""": 1,          """"ppapi-broker"""": 1       },       """"password_manager_enabled"""": false    },    """"safebrowsing"""": {       """"enabled"""": false    },    """"search"""": {       """"suggest_enabled"""": false    },    """"translate"""": {       """"enabled"""": false    } }"" 2020-07-02T05:35:08.319Z,""filebeat-f2ldg"",""[1593668108.320][INFO]: Populating Local State file: {    """"background_mode"""": {       """"enabled"""": false    },    """"ssl"""": {       """"rev_checking"""": {          """"enabled"""": false       }    } }"" 2020-07-02T05:35:08.320Z,""filebeat-f2ldg"",""[1593668108.320][INFO]: Launching chrome: /usr/bin/google-chrome --disable-background-networking --disable-client-side-phishing-detection --disable-default-apps --disable-hang-monitor --disable-popup-blocking --disable-prompt-on-repost --disable-sync --enable-automation --enable-blink-features=ShadowDOMV0 --enable-logging --load-extension=/tmp/.com.google.Chrome.jfVAXL/internal --log-level=0 --no-first-run --no-sandbox --password-store=basic --remote-debugging-port=0 --test-type=webdriver --use-mock-keychain --user-data-dir=/tmp/.com.google.Chrome.flXTB8 data:,  --- x11vnc loop: waiting for: 127  PORT=5900"" 2020-07-02T05:35:09.821Z,""filebeat-f2ldg"",""[1593668109.821][INFO]: resolved localhost to [""""::1"""",""""127.0.0.1""""]"" 2020-07-02T05:35:10.223Z,""filebeat-f2ldg"",""[1593668110.223][INFO]: [4594544edeb68a9cf543d23cae744fb2] RESPONSE InitSession {    """"capabilities"""": {       """"acceptInsecureCerts"""": false,       """"browserName"""": """"chrome"""",       """"browserVersion"""": """"80.0.3987.132"""",       """"chrome"""": {          """"chromedriverVersion"""": """"80.0.3987.106 (f68069574609230cf9b635cd784cfb1bf81bb53a-refs/branch-heads/3987@{#882})"""",          """"userDataDir"""": """"/tmp/.com.google.Chrome.flXTB8""""       },       """"goog:chromeOptions"""": {          """"debuggerAddress"""": """"localhost:44907""""       },       """"networkConnectionEnabled"""": false,       """"pageLoadStrategy"""": """"normal"""",       """"platformName"""": """"linux"""",       """"proxy"""": {        },       """"setWindowRect"""": true,       """"strictFileInteractability"""": false,       """"timeouts"""": {          """"implicit"""": 0,          """"pageLoad"""": 300000,          """"script"""": 30000       },       """"unhandledPromptBehavior"""": """"dismiss and notify""""    },    """"sessionId"""": """"4594544edeb68a9cf543d23cae744fb2"""" }"" 2020-07-02T05:35:10.770Z,""filebeat-f2ldg"",""[1593668110.770][INFO]: [4594544edeb68a9cf543d23cae744fb2] COMMAND Navigate {    """"url"""": """"http://test.com:8080/somePage"""" }"" 2020-07-02T05:35:10.770Z,""filebeat-f2ldg"",""[1593668110.770][INFO]: Waiting for pending navigations..."" 2020-07-02T05:35:10.771Z,""filebeat-f2ldg"",""[1593668110.772][INFO]: Done waiting for pending navigations. Status: ok"" 2020-07-02T05:35:11.024Z,""filebeat-f2ldg"",""[1593668111.024][INFO]: Waiting for pending navigations..."" 2020-07-02T05:35:11.136Z,""filebeat-f2ldg"",""[1593668111.137][INFO]: Done waiting for pending navigations. Status: ok"" 2020-07-02T05:35:11.137Z,""filebeat-f2ldg"",""[1593668111.137][INFO]: [4594544edeb68a9cf543d23cae744fb2] RESPONSE Navigate"" ``` Detailed steps to reproduce the behavior:  ## Expected behavior  The 'test.com' host is resolved  and the navigation to 'http://test.com:8080/somePage' is succesful.  ## Environment  OS: Ubuntu 18.04.1 LTS Browser: Chrome Browser version: 80.0.3987.132 Browser Driver version: ChromeDriver 80.0.3987.132 Selenium : 3.12","closed","needs-triaging,","gouru312","2020-07-02T07:39:22Z","2021-09-05T09:12:35Z"
"","8279","Selenium is stuck in sequence of two Alerts when using a FirefoxProfile","## üêõ Bug Report  Hi,  The page I'm testing with Selenium has a button. When I tell Selenium to click on it, I expect an Alert to open. Then I tell Selenium to click on the OK button of the prompt using accept(). Then, I expect another Alert to open, and I tell Selenium to click on its OK button using accept().  The problem is that Selenium hangs or stays stuck, blocked, on the first call on accept(). The execution never finishes. But it has correctly accepted the first alert, and the second one is now shown.  I have tried several ways of declaring the alert, but they all work, the problem is not located at the declaration or detection of the first alert, it is located inside the accept() method. I have tried several ways of initializing the Firefox browser, and it looks like this issue happens only when there is a FirefoxProfile (see code below, with code v1 and v2). It seems also that the visual appearance of the alert is not the same in both modes. The problem happens whatever the type of the alert is (window.alert() or window.prompt()).  Any idea? Is it a bug? (in Selenium or in geckodriver?) Or is there a FirefoxProfile option which I should provide in its constructor for it to behave like the default one?  Thanks in advance   ## To Reproduce  Detailed steps to reproduce the behavior: Execute the python file and see that execution of the test never completes when v2 code is active, but completes correctly when v1 code is active.  ## Expected behavior  Execute the python file and see that execution of the test always completes, in v1 and in v2 code.  ## Test script or set of commands reproducing this issue  Python code:  ``` #!/usr/bin/python # coding: utf-8 import unittest from selenium import webdriver from selenium.webdriver.common.alert import Alert   def initialize_browser():     # v1: works     # browser = webdriver.Firefox()      # v2: does not work     profile = webdriver.FirefoxProfile()     browser = webdriver.Firefox(profile)      return browser   class TestSeleniumAlert(unittest.TestCase):     def test_selenium_alert(self):         browser = initialize_browser()         browser.get(""http://localhost/test_alert/index.html"")         hi_button = browser.find_element_by_id(""hi_button"")         hi_button.click()         first_modal = Alert(browser)         first_modal.accept()         second_modal = Alert(browser)         second_modal.accept()         browser.quit()   if __name__ == ""__main__"":     unittest.main()  ```  HTML page: ```    	Test Selenium alert      hi    ```  ## Environment  OS: Ubuntu 16.04 Browser: Firefox Browser version: 75.0 Browser Driver version: GeckoDriver 0.26.0 Language Bindings version: Python 3.6.10 Selenium Grid version (if applicable): Selenium 3.141.0 for Python","closed","D-firefox,","swergas","2020-05-06T17:19:35Z","2021-09-05T08:15:41Z"
"","7963","Issue while performing actions on elements with CSS locators","## üêõ Bug Report  Hi Team,  We are seeing below response when we perform an action (moveTo using actions class) on the elements located with CSS locators. But this issue is not seen when the same element is located (using ""findElement"" method) with XPath (able to perform the actions). Error Message: HTTP Status: 200 { ""message"": ""unknown error: failed to parse value of getElementRegion\n (Session info: MicrosoftEdge=79.0.309.65)\n (Driver info: MSEdgeDriver=79.0.309.65 (3e1b7a4d68b8e16706c84693b2e5c630d35c4533),platform=Windows NT 10.0.10586 x86_64)"" }  OS: Windows 10 Browser: MicrosoftEdge=79  Note: The elements are of Salesforce Lighting.  Please verify the issue and suggest.  Thanks & Regards, Anusha","closed","","Anusha07","2020-01-27T14:05:54Z","2020-02-28T07:12:33Z"
"","7965","Issue while performing actions on elements with CSS locators","## üêõ Bug Report  Hi Team,  We are seeing below response when we perform an action (moveTo using actions class) on the elements located with CSS locators. But this issue is not seen when the same element is located (using ""findElement"" method) with XPath (able to perform the actions). Error Message: HTTP Status: 200 { ""message"": ""unknown error: failed to parse value of getElementRegion\n (Session info: MicrosoftEdge=79.0.309.65)\n (Driver info: MSEdgeDriver=79.0.309.65 (3e1b7a4d68b8e16706c84693b2e5c630d35c4533),platform=Windows NT 10.0.10586 x86_64)"" }  ## To Reproduce  Try to locate an element built on Salesforce Lightning with customized CSS  locator and perform ""moveTo"" action on it using actions class (cannot share actual AUT details as it has restricted access).  ## Expected behavior  Able to perform ""moveTo"" action and proceed with the succeeding actions like ""click""  ## Test script or set of commands reproducing this issue  AUT details cannot be shared as we have restricted access.  ## Environment  OS: Windows 10 Browser: Edge Chromium Browser version: 79.0.309.65 Browser Driver version: 79.0.309.65 Language Bindings version:  Java 3.141.0   Selenium Grid version (if applicable): 3.141.59  Please verify the issue and help to solve it.  Thanks & Regards","closed","needs-triaging,","Anusha07","2020-01-27T17:26:33Z","2020-04-15T08:17:47Z"
"","8302","Office 365 - Excel Online Automation with C#","## üêõ Bug Report  HI All,  We are writing UI test automation scripts, where, we need to add some contents to excel online opened in the browser. We are using Selenium Automation. Please let us know if we can access excel online through C# code.  I tried below. But, getting element not found exception when finding the name box.  Please suggest whether it can be supported or not. If supported, please help us to achieve,  **Environment Details** - Chrome: Version 81.0.4044.138 (Official Build) (64-bit) - Selenium.Chrome.WebDriver version: 81.0.0 - Selenium.WebDriver Version: 3.141.0 - OS: Windows 10  **Sample Code** ` IWebDriver webDriver = new ChromeDriver(); webDriver.Manage().Window.Maximize(); webDriver.Navigate().GoToUrl(""Online-Excel-URL""); var nameBox = webDriver.FindElement(By.Id(""m_excelWebRenderer_ewaCtl_NameBox"")); nameBox.SendKeys(""B250""); nameBox.SendKeys(Keys.Enter); var formulaBar = webDriver.FindElement(By.Id(""formulaBarTextDivId_textElement"")); `  ![image](https://user-images.githubusercontent.com/65273444/81780371-0bea2400-9514-11ea-9532-bac5251a3047.png)  **Stack Trace** ![image](https://user-images.githubusercontent.com/65273444/81780639-7d29d700-9514-11ea-8663-2cca93b14e97.png)  **Message** ![image](https://user-images.githubusercontent.com/65273444/81780686-93379780-9514-11ea-9362-2bdcafc5dd84.png)","closed","","kiran-ch","2020-05-13T07:04:48Z","2021-09-05T10:02:52Z"
"","8842","Selenium 4.0.0a6.post2 - Cant launch firefox (profile problem)","## üêõ Bug Report  Hello,   I'm trying to use firefox with the SeleniumLib version 5.0.0b1 and Selenium 4.0.0a6.post2, but i have this error : FileNotFoundError: [Errno 2] No such file or directory: 'c:\\users\\qtjw6357\\appdata\\local\\programs\\python\\python38-32\\lib\\site-packages\\selenium\\webdriver\\firefox\\webdriver_prefs.json  This file just doesnt exist.  Im not using any profile  If i use selenium 3.14.1 its working perfectly.   Here the full log üëç   DEBUG : Traceback (most recent call last):   File ""c:\users\qtjw6357\appdata\local\programs\python\python38-32\lib\site-packages\SeleniumLibrary\__init__.py"", line 490, in run_keyword     return DynamicCore.run_keyword(self, name, args, kwargs)   File ""c:\users\qtjw6357\appdata\local\programs\python\python38-32\lib\site-packages\robotlibcore.py"", line 103, in run_keyword     return self.keywords[name](*args, **(kwargs or {}))   File ""c:\users\qtjw6357\appdata\local\programs\python\python38-32\lib\site-packages\SeleniumLibrary\keywords\browsermanagement.py"", line 292, in open_browser     return self._make_new_browser(   File ""c:\users\qtjw6357\appdata\local\programs\python\python38-32\lib\site-packages\SeleniumLibrary\keywords\browsermanagement.py"", line 323, in _make_new_browser     driver = self._make_driver(   File ""c:\users\qtjw6357\appdata\local\programs\python\python38-32\lib\site-packages\SeleniumLibrary\keywords\browsermanagement.py"", line 715, in _make_driver     driver = self._webdriver_creator.create_driver(   File ""c:\users\qtjw6357\appdata\local\programs\python\python38-32\lib\site-packages\SeleniumLibrary\keywords\webdrivertools\webdrivertools.py"", line 83, in create_driver     return creation_method(   File ""c:\users\qtjw6357\appdata\local\programs\python\python38-32\lib\site-packages\SeleniumLibrary\keywords\webdrivertools\webdrivertools.py"", line 187, in create_firefox     profile = self._get_ff_profile(ff_profile_dir)   File ""c:\users\qtjw6357\appdata\local\programs\python\python38-32\lib\site-packages\SeleniumLibrary\keywords\webdrivertools\webdrivertools.py"", line 211, in _get_ff_profile     return webdriver.FirefoxProfile()   File ""c:\users\qtjw6357\appdata\local\programs\python\python38-32\lib\site-packages\selenium\webdriver\firefox\firefox_profile.py"", line 58, in __init__     with open(os.path.join(os.path.dirname(__file__), -->  ## To Reproduce  Launch firefox via selenium 4.0.0a6.post2  Detailed steps to reproduce the behavior:  ## Expected behavior  Launching Firefox.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS: Windows10 Browser: Firefox Browser version: 72.0.2 Browser Driver version: 0.27.0 Selenium Grid version (if applicable): 4.0.0a6.post2","closed","needs-triaging,","chenry35","2020-11-05T08:36:02Z","2021-09-05T08:31:36Z"
"","8177","[Selenium-webdriver] Retry request not use the same hostname and path when proxy configured","## üêõ Bug Report  Hello, In my project, I use selenium-webdriver throw protractor to connect to a remoted Selenium-grid. To connect to this remote grid, I use a proxy (squid). The remote selenium-grid can take some time to answer, and selenium-webdriver should retry some requests. During the execution, my squid proxy response to the retry request ""The requested URL could not be retrieved"". So I investigate, fork selenium-webdriver and put some log on the code (http/index.js) to know which request as been sent. I remark, on the beginning of the sendRequest() function, hostname and path are different, if it's the first time, or a retry request after connexion error. (`request.on('error' [...]` triggered)  When sendRequest() is called by the `request.on('error' [...]` , hostname is modified with my squid proxy url instead of grid url, and path not contain only the selenium endpoint /wd/hub/session, but the full url included grid hostname path.  ``` [chrome LINUX #01-0] [SELENIUM-WEBDRIVER-#1]  sendRequest on hostname: my_grid_url.com ; path: /wd/hub/session [chrome LINUX #01-0] [SELENIUM-WEBDRIVER-#2] error detected  [chrome LINUX #01-0] [SELENIUM-WEBDRIVER-#4] network error ECONNRESET [chrome LINUX #01-0] Error: socket hang up [chrome LINUX #01-0]     at connResetException (internal/errors.js:570:14) [chrome LINUX #01-0]     at Socket.socketOnEnd (_http_client.js:440:23) [chrome LINUX #01-0]     at Socket.emit (events.js:228:7) [chrome LINUX #01-0]     at endReadableNT (_stream_readable.js:1185:12) [chrome LINUX #01-0]     at processTicksAndRejections (internal/process/task_queues.js:81:21) { [chrome LINUX #01-0]   code: 'ECONNRESET' [chrome LINUX #01-0] } [chrome LINUX #01-0] [SELENIUM-WEBDRIVER-#3] Retry request  [chrome LINUX #01-0] [SELENIUM-WEBDRIVER-#1]  sendRequest on hostname: my_squid_proxy_url.com ; path: https://my_grid_url.com/wd/hub/session  ``` Please see my logs add on the original code : ""https://github.com/albanlorillard/selenium-webdriver/blob/master/http/index.js""  As you can see :  First request :  sendRequest on hostname: **my_grid_url.com** ; path: **/wd/hub/session** Retry request : sendRequest on hostname: **my_squid_proxy_url.com** ; path: **https://my_grid_url.com/wd/hub/session**   ## To Reproduce This step should reproduce the error. 1. Launch a protractor project on a grid throw a proxy ( webDriverProxy configured ) 2. Failed the connection in order the request is retried 3. Check the retryRequest.  ## Expected behavior  When a proxy is configured, retry request should be the same request with same hostname and same path that the originally request.  ## Test script or set of commands reproducing this issue  I don't know how to reproduce this bug on a scratch project...  ## Environment  OS: Linux Browser: Chrome Selenium web-driver : 4.0.0-alpha.7 (tested also with last stable version 3.6.0) Protractor: 5.4.3  Selenium Grid version (if applicable): 3.141.59   Thank you","closed","I-stale,","albanlorillard","2020-04-07T10:04:30Z","2021-12-03T00:06:51Z"
"","8789","[Java] Cannot build multimodule maven project as selenium.api doesn't export org.openqa.selenium.internal","## üêõ Bug Report  Hello, I'm using Selenium 4 alpha 6 and Java 11 in a multi-module maven 3.6.3 project. One of my modules requires in its module-info,java the following selenium modules:      requires org.seleniumhq.selenium.api;     requires org.seleniumhq.selenium.chrome_driver;     requires org.seleniumhq.selenium.support; Everything compiles fine if I remove all the code that needs the support module and the requires statement, but adding it back produces a compile time error:      [ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.8.1:compile (default-compile) on project     shared: Compilation failure: Compilation failure:     [ERROR] C:/Users/alaut/IdeaProjects/AliexpressBot/shared/src/main/java/com.fabifont.aliexpress/account/AccountWorker.java:    [76,29] cannot access org.openqa.selenium.internal.FindsById  It looks like the support module needs some classes located in org.openqa.selenium.internal, this package though is only available in the api module. The support module requires the api module as visible from its maven-info.java, though the api module doesn't export org.openqa.selenium.internal as visible from its maven-info.java:                  requires transitive java.logging;         exports org.openqa.selenium;         exports org.openqa.selenium.html5;         exports org.openqa.selenium.interactions;         exports org.openqa.selenium.interactions.touch;         exports org.openqa.selenium.logging;         exports org.openqa.selenium.logging.profiler;         exports org.openqa.selenium.mobile;         exports org.openqa.selenium.net;         exports org.openqa.selenium.virtualauthenticator; which leads to an error.  ## Environment  OS: Windows 10 Browser: Chrome Browser version: 86.0.4240.75","closed","","Auties00","2020-10-14T14:25:02Z","2021-09-05T08:34:00Z"
"","8715","Alert proxy authentication ""No such alert""","## üêõ Bug Report  Hello! I am using ChromeDriver version 85.0.4183.8700. When I have chrome opened and there is a proxy authentication alert opened (screenshot attached), when I execute code  `Driver.SwitchTo().Alert().SetAuthenticationCredentials(""username"", ""password"");` If I execute this code, I just get a timeout after 10 seconds (even if alert is there): ``` var wait = new WebDriverWait(acc.Wb.Driver, new TimeSpan(0, 0, 10)); IAlert alert = wait.Until(ExpectedConditions.AlertIsPresent()); ``` This throws exception `{""no such alert\n  (Session info: chrome=85.0.4183.102)""}` Is this a problem that chrome driver has or selenium? Am I doing something wrong? Thanks!  ![Screenshot_1](https://user-images.githubusercontent.com/18037362/93494606-80433280-f90d-11ea-8cbc-c50ff5dca211.png)  ## To Reproduce Any way of interacting with the Authentication Alert box will fail.  ## Expected behavior  Driver should set credentials.  ## Test script or set of commands reproducing this issue  `Driver.SwitchTo().Alert().SetAuthenticationCredentials(""username"", ""password"");` If I execute this code, I just get a timeout after 10 seconds (even if alert is there): ``` var wait = new WebDriverWait(acc.Wb.Driver, new TimeSpan(0, 0, 10)); IAlert alert = wait.Until(ExpectedConditions.AlertIsPresent()); ```  ## Environment  OS:  Windows 10 Browser: Chrome Browser version: Version 85.0.4183.102 (Official Build) (64-bit) Browser Driver version: Chrome driver 85.0.4183.8700 Language Bindings version: C#","closed","R-awaiting answer,","Erol444","2020-09-18T07:48:28Z","2021-09-05T08:34:08Z"
"","8268","IWebDriver does not find new IWebElement location when the browser zoom level not set to 100%","## üêõ Bug Report  Given an IWebElement that is easily found by the IWebDriver, if the browser zoom level is not the default value of 100% the IWebElement is still considered to be in the same location, but an exception is thrown when performing actions on the IWebElement.  Note: This issue exists if you attempt to call `.Click()` on the IWebElement directly, or if you attempt to move to the center of the IWebElement to perform a click action.  Example: A button is located at X = 100, Y = 100 with a id='TestButton' Locate the button and click on it: `IWebElement testButton = _driver.FindElement(By.Xpath(""//*[@id='TestButton']"")); testButton.Click()` Zoom the browser out to 50-75% zoom `IWebElement testButton2 = _driver.FindElement(By.Xpath(""//*[@id='TestButton']"")); testButton2.Click()`  Exception is thrown: `OpenQA.Selenium.ElementClickInterceptedException: element click intercepted: Element <... class=""button"" id=""testButton"">button is not clickable at point (253, 185). Other element would receive the click: ...`  ## To Reproduce 1. Create a test that attempts to click a button 2. Zoom the browser out to 50-75% zoom either manually, or with a IJavascriptExecutor 3. Create a new IWebElement variable and find the button again 4. Attempt to click the button 5. Exception is thrown  ## Expected behavior  Selenium should be able to be used while the browser zoom level is not set to 100% as there are valid test scenarios that need to be verified via automation.  ## Test script or set of commands reproducing this issue Test Code:  ``` driver.RenderHtml(sampleHtml); var testButton = driver.FindElement(By.XPath(""//*[@id='testButton']"")); testButton.Click();                  IJavaScriptExecutor javascriptExecutor = (IJavaScriptExecutor)driver; javascriptExecutor .ExecuteScript(""document.body.style.zoom = '0.50'"");  var testButton2 = driver.FindElement(By.XPath(""//*[@id='testButton']"")); testButton2.Click(); ``` Test HTML ```        .button {         width: auto;         height: auto;     }     .textArea {         width: auto;         height: auto;     }     .div_container{         margin: auto;         padding: 1%;         display: grid;     }     .div {         float: left;         display: flex;         justify-content:left;         text-align: center;         vertical-align: middle;         width: 100%;     }     .div_testObjects {         display: flex;     }     .div_buffer {         text-align: center;         vertical-align: middle;         margin: 1%;     }     .div_bufferRight {         text-align: center;         vertical-align:middle;         width: 60%;         margin: 1%;     }            Test HTML stuff                This Area Intentionally Left Blank                      Buffer Area Left                              button                                           Buffer Area Right                  This Area Intentionally Left Blank        ```   ## Environment OS: Windows 10 Browser: Chrome Browser version: Chrome 81.0.4044.129 Browser Driver version: chromedriver 81.0.4044.6900 Language Bindings version: C#","closed","needs-triaging,","CodyJLeeApps","2020-05-04T19:13:20Z","2021-09-05T10:02:48Z"
"","8620","Getting Error- DevToolsActivePort file doesn't exist while automating electron app using selenium webdriver","## üêõ Bug Report  Getting below mentioned error org.openqa.selenium.WebDriverException: unknown error: DevToolsActivePort file doesn't exist  Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03' System info: host: 'LAPTOP-1UNI7991', ip: '192.168.0.139', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_231' Driver info: driver.version: ChromeDriver remote stacktrace: Backtrace: 	Ordinal0 [0x005C87E3+2852835] 	Ordinal0 [0x004B5BB1+1727409] 	Ordinal0 [0x0038E4B9+517305] 	Ordinal0 [0x00320215+66069] 	Ordinal0 [0x0031D31C+54044] 	Ordinal0 [0x0033D9F7+186871] 	Ordinal0 [0x0033D7FD+186365] 	Ordinal0 [0x0033B70B+177931] 	Ordinal0 [0x00322584+75140] 	Ordinal0 [0x00323650+79440] 	Ordinal0 [0x003235E9+79337] 	Ordinal0 [0x004CAD5C+1813852] 	GetHandleVerifier [0x006EC616+1075574] 	GetHandleVerifier [0x006EC367+1074887] 	GetHandleVerifier [0x006F7497+1120247] 	GetHandleVerifier [0x006ECC16+1077110] 	Ordinal0 [0x004C3206+1782278] 	Ordinal0 [0x004CC3BB+1819579] 	Ordinal0 [0x004CC523+1819939] 	Ordinal0 [0x004E2B45+1911621] 	BaseThreadInitThunk [0x75A76359+25] 	RtlGetAppContainerNamedObjectPath [0x77747C24+228] 	RtlGetAppContainerNamedObjectPath [0x77747BF4+180]  	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source) 	at java.lang.reflect.Constructor.newInstance(Unknown Source) 	at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62) 	at org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30) 	at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126) 	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source) 	at java.util.Spliterators$ArraySpliterator.tryAdvance(Unknown Source) 	at java.util.stream.ReferencePipeline.forEachWithCancel(Unknown Source) 	at java.util.stream.AbstractPipeline.copyIntoWithCancel(Unknown Source) 	at java.util.stream.AbstractPipeline.copyInto(Unknown Source) 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source) 	at java.util.stream.FindOps$FindOp.evaluateSequential(Unknown Source) 	at java.util.stream.AbstractPipeline.evaluate(Unknown Source) 	at java.util.stream.ReferencePipeline.findFirst(Unknown Source) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:131) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:181) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:147) 	at BasicCommands.ElectronAppTest.setup(ElectronAppTest.java:24) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) 	at java.lang.reflect.Method.invoke(Unknown Source) 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85) 	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:521) 	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213) 	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:140) 	at org.testng.TestRunner.beforeRun(TestRunner.java:645) 	at org.testng.TestRunner.run(TestRunner.java:613) 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357) 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352) 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310) 	at org.testng.SuiteRunner.run(SuiteRunner.java:259) 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86) 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1200) 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1125) 	at org.testng.TestNG.run(TestNG.java:1033) 	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111) 	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204) 	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)   ## To Reproduce Detailed steps to reproduce the behavior: 1. Refer https://applitools.com/blog/automating-electron-applications-using-selenium/ 2. Download the electron app from the link- https://github.com/electron/electron-api-demos/releases 3. Download the chrome driver exe for Chrome v84.0.4147.105 . 4. Add the path of electron app .exe  in the selenium program which is attached to this issue. 5. Add the path of the chrome driver exe in the selenium program which is  attached to this issue. 6. Run the selenium program.      ## Expected behavior  The action mentioned in the selenium java program should be executed without any issue.  ## Test script or set of commands reproducing this issue Refer below attachment  [Attachment.zip](https://github.com/SeleniumHQ/selenium/files/5049206/Attachment.zip)   ## Environment  OS: Windows 10 Home 64 bit  Browser: Chrome Browser version: 84.0.4147.105 (Official Build) (64-bit Browser Driver version: ChromeDriver v 84.0.4147.30 Language Bindings version: Java 1.8.0.231 Selenium Grid version (if applicable): None.","closed","needs-triaging,","vasantverma","2020-08-10T05:45:21Z","2021-09-05T08:12:14Z"
"","8231","RemoteWebDriver proxy issue with Selenium 3.10-3.141","## üêõ Bug Report  Getting ""The remote name could not be resolved: hub-cloud.browserstack.com"" while trying to connect behind proxy,  ![image](https://user-images.githubusercontent.com/38624103/80092040-c36dc500-856a-11ea-89fd-7b9dbd62969a.png)  ## To Reproduce ``` static void Main(string[] args)         {             ChromeOptions cO = new ChromeOptions();              IWebDriver driver;             cO.AddAdditionalCapability(""browser"", ""Chrome"");             cO.AddAdditionalCapability(""browser_version"", ""80.0"");             cO.AddAdditionalCapability(""os"", ""Windows"");             cO.AddAdditionalCapability(""os_version"", ""10"");             cO.AddAdditionalCapability(""resolution"", ""1024x768"");             cO.AddAdditionalCapability(""browserstack.user"", ""user"");             cO.AddAdditionalCapability(""browserstack.key"", ""key"");             cO.AddAdditionalCapability(""name"", ""Bstack-[C_sharp] Sample Test"");              driver = new RemoteWebDriver(new Uri(""http://hub-cloud.browserstack.com/wd/hub/""), cO);             driver.Navigate().GoToUrl(""http://www.google.com"");             Console.WriteLine(driver.Title);              IWebElement query = driver.FindElement(By.Name(""q""));             query.SendKeys(""Browserstack"");             query.Submit();             Console.WriteLine(driver.Title);              driver.Quit();         } ```  App.config:  ```                                                       ```  ## Expected behavior  Need to connect to BrowserStack in our company's network (behind proxy). How these proxy settings could be added?  I'm using Selenium 3.14   Thanks in advance!","closed","needs-triaging,","GKarolis","2020-04-23T11:01:44Z","2021-09-05T10:20:29Z"
"","8466","Error: argument --profile requires a path","## üêõ Bug Report  Geckodriver Version: 0.26.0 (e9783a644016 2019-10-10 13:38 +0000) Platform: Windows 10 WSL Ubuntu Firefox: 77.0.1 (64-bit) Selenium: 3.141.0  Copying issue [#1738 from submitted mozilla/geckodriver/issues](https://github.com/mozilla/geckodriver/issues/1738), since I now believe this related to my Selenium webdriver configs...  I am getting this error from my geckodriver.log files, indicating a PATH is required for my --profile argument (which it is clearly showing in the command line statement):  ``` 1593268331229	mozrunner::runner	INFO	Running command: ""/mnt/c/Program Files/Mozilla Firefox/firefox.exe"" ""-marionette"" ""-headless"" ""-foreground"" ""-no-remote"" ""-profile"" ""/tmp/rust_mozprofileBErRMS"" 1593268331231	geckodriver::marionette	DEBUG	Waiting 60s to connect to browser on 127.0.0.1:2828 *** You are running in headless mode. Error: argument --profile requires a path ```  However, I am definitely supplying a valid FirefoxProfile option with a path to my FF ""selenium"" profile...   description of my options.profile attribute: ``` {     ""default_preferences"": ""{'browser.dom.window.dump.enabled': True, 'browser (<<<---truncated at 50 chars)"",     ""extensionsDir"": ""/tmp/tmpkv88gje1/webdriver-py-profilecopy/extensions"",     ""profile_dir"": ""/tmp/tmpkv88gje1/webdriver-py-profilecopy"",     ""tempfolder"": ""/tmp/tmpkv88gje1"",     ""userPrefs"": ""/tmp/tmpkv88gje1/webdriver-py-profilecopy/user.js"" } ```  Thanks for the support - not sure what Im missing...  -->  ## To Reproduce  n/a  ## Expected behavior  valid webdriver object is returned  ## Test script or set of commands reproducing this issue  ``` profile = FirefoxProfile('/mnt/c/Users/User/AppData/Roaming/Mozilla/Firefox/Profiles/random.selenium') options = FirefoxOptions()  print(""*** Using profile: {}"".format(profile))  def run_test():     options.headless = True     options.log.level = ""trace""     options.profile = profile     options.binary = binary          driver = webdriver.Firefox(         options=options,         capabilities=capabilities,         executable_path=""/usr/bin/geckodriver"",         service_args=[""--marionette-port"", ""2828""]) ```  ## Environment Geckodriver Version: 0.26.0 (e9783a644016 2019-10-10 13:38 +0000) Platform: Windows 10 WSL Ubuntu Firefox: 77.0.1 (64-bit) Selenium: 3.141.0","closed","needs-triaging,","rbed23","2020-06-27T16:04:31Z","2021-09-05T09:12:44Z"
"","8813","python: Inconsistency on InvalidSelectorException","## üêõ Bug Report  For python client, the selenium exception `InvalidSelectorException` is not raised in expected_conditions as it would be on find_element methods.  This problem happens on the latest version (`3.141.0`) and `4.0.0a6.post2` version.  ## To Reproduce  Example 1: `driver.find_element(By.XPATH, ""//*[contains(@id,'something'"").click()`  Returns `InvalidSelectorException`  Example 2: ``` condition = EC.invisibility_of_element_located((By.XPATH, selector)) WebDriverWait(self.driver, 15).until(condition) ``` Not returns `InvalidSelectorException`  ## Expected behavior  As both XPATHs are invalid, both should return `InvalidSelectorException`  ## Test script or set of commands reproducing this issue  An example based on unittest can be found [here](https://github.com/jmartinezpoq/SeleniumInvalidSelectorException/blob/master/test_selenium.py)  ## Environment  OS: Ubuntu Browser: Chrome Browser version: 74.0.3729.131 Browser Driver version: ChromeDriver 74.0.3729.6 Language Bindings version: Python 3.141.0 and Python 4.0.0a6.post2","closed","C-py,","jmartinezpoq","2020-10-21T15:58:04Z","2021-12-03T00:06:42Z"
"","8676","Not able to start the router on GRID 4","## üêõ Bug Report  Following this document: https://github.com/SeleniumHQ/selenium/wiki/Selenium-Grid-4 One of the steps is how to start the **router** piece of Grid 4, but during all trials, I was not able to start it.  The step I failed from this document is: > And front the system with a router (the bit you would normally expose to the Web): java -jar selenium-server-4.0.0-alpha-1.jar router --sessions http://localhost:5556 --distributor http://localhost:5553  ## To Reproduce  1. Download seleninum-server-4.0.0-alpha-6 from: https://www.selenium.dev/downloads/ 2. Change directory to the location where you download your file. 3. Run the following commands: `java -jar selenium-server-4.0.0-alpha-6.jar sessions` **[WORKED]** `java -jar selenium-server-4.0.0-alpha-6.jar distributor --sessions http://localhost:5556` **[WORKED]** `java -jar selenium-server-4.0.0-alpha-6.jar router --sessions http://localhost:5556 --distributor http://localhost:5553` **[ISSUE]**  ## Expected behavior  I was expecting the router to start and it to be listening on **http://localhost:4444** after running the last command.  ## Current behavior  It shows this message **""Found the option --distributor-host multiple times""** and it's not listening http://localhost:4444 _(I attached some screenshots below, the third one shows this message)_  ## Screenshots  Sessions **[WORKED]**: ![sessions](https://user-images.githubusercontent.com/13931163/92354060-fa76ea00-f0b7-11ea-9d15-481ed1ef0dd4.PNG)  Distributor **[WORKED]**: ![distributor](https://user-images.githubusercontent.com/13931163/92354077-02cf2500-f0b8-11ea-8eea-4425971272cb.PNG)  Router **[ISSUE]**: ![router](https://user-images.githubusercontent.com/13931163/92354087-0662ac00-f0b8-11ea-8f49-c440b3205a8c.PNG)  ## Environment  OS: Windows 10 Selenium Grid version: 4.0.0-alpha-6","closed","needs-triaging,","SpencerMelo","2020-09-07T06:26:34Z","2021-09-05T08:36:03Z"
"","8004","[IEDriver] Send Keys send to ""IE"" characters without respecting the capital letters","## üêõ Bug Report  First of all, sorry if it's not the correct place to open the issue and and sorry for any inconvenience  We are using RobotFramework w/ Selenium Library to execute some `Test Cases` over remote `IEWebDriver (32bits)`. Webpages are done for `IE9`, so `IE11` is set up with compatibility mode over our domain.  Due to confidentiality we cannnot provide exact information about real text or screenshots.  We need to perform a login action so we use `send_keys` feature to set the `username` and `password`. It seems that sometimes (avg. 15% of the time) some characters do not respect the capital letters. As we have seen, it affects on all characters randomly  The text wanted to send is:  ```yml Username: USERXXXX #(all capitalized) Password: P4sword #(only the first letter is capitalized) ```  So:  - Why are the keys populating to IE without respecting capitalize characters?  ### Expected behavior  We expect that keys sent respect capital letters and it would perform correctly the login:  ```yml Username: USERXXXX Password: P4sword ```  ## Actual behaviour  Retriving the logs from webdriver seems to send the correct keys, but taking an screenshot from login, seems that populated into the browser incorrectly, uncapitalizing random character:  ```yml Username: USERxXXX #<-- the first x is being uncapitalized Password: P4sword ```  ### Webdriver Logs  The following lines are the log directly from webdriver on debug mode. As I commented, it seems to send correct keys to IE:  ```log #################### # Username section ###################  D 2020-01-30 16:03:57:362 C:\Projects\webdriver\cpp\webdriver-server\server.cc(338) Command: POST /session/042135f6-c4cc-41cf-9f28-d4f557fc3da7/elements {""using"": ""xpath"", ""value"": ""(.//input[@name='username'])""} D 2020-01-30 16:03:57:364 C:\Projects\webdriver\cpp\webdriver-server\command.cc(36) Raw JSON command: { ""name"" : ""findElements"", ""locator"" : { ""sessionid"" : ""042135f6-c4cc-41cf-9f28-d4f557fc3da7"" }, ""parameters"" : {""using"": ""xpath"", ""value"": ""(.//input[@name='username'])""} } D 2020-01-30 16:03:57:364 C:\Projects\webdriver\cpp\webdriver-server\command.cc(36) Raw JSON command: { ""name"" : ""findElements"", ""locator"" : { ""sessionid"" : ""042135f6-c4cc-41cf-9f28-d4f557fc3da7"" }, ""parameters"" : {""using"": ""xpath"", ""value"": ""(.//input[@name='username'])""} } D 2020-01-30 16:03:57:367 C:\Projects\webdriver\cpp\iedriver\IECommandExecutor.cpp(833) Checking for alert before executing findElements command D 2020-01-30 16:03:57:368 C:\Projects\webdriver\cpp\iedriver\IECommandExecutor.cpp(1035) No alert handle is found D 2020-01-30 16:03:57:369 C:\Projects\webdriver\cpp\iedriver\IECommandExecutor.cpp(880) Executing command: findElements D 2020-01-30 16:03:57:369 C:\Projects\webdriver\cpp\iedriver\ElementFinder.cpp(143) Using FindElements atom to locate element having xpath = (.//input[@name='username']) I 2020-01-30 16:03:57:370 C:\Projects\webdriver\cpp\iedriver\Browser.cpp(215) No child frame focus. Focus is on top-level frame D 2020-01-30 16:03:57:948 C:\Projects\webdriver\cpp\iedriver\VariantUtilities.cpp(105) Result type is JScriptTypeInfo D 2020-01-30 16:03:57:966 C:\Projects\webdriver\cpp\iedriver\VariantUtilities.cpp(105) Result type is JScriptTypeInfo D 2020-01-30 16:03:57:993 C:\Projects\webdriver\cpp\iedriver\VariantUtilities.cpp(105) Result type is JScriptTypeInfo D 2020-01-30 16:03:58:006 C:\Projects\webdriver\cpp\iedriver\VariantUtilities.cpp(105) Result type is JScriptTypeInfo D 2020-01-30 16:03:58:033 C:\Projects\webdriver\cpp\iedriver\VariantUtilities.cpp(105) Result type is JScriptTypeInfo D 2020-01-30 16:03:58:047 C:\Projects\webdriver\cpp\iedriver\VariantUtilities.cpp(401) -2147352570 [Unknown name.]: Unable to get dispatch ID (dispid) for property toJSON D 2020-01-30 16:03:58:047 C:\Projects\webdriver\cpp\iedriver\VariantUtilities.cpp(325) No toJSON property found on IDispatch D 2020-01-30 16:03:58:073 C:\Projects\webdriver\cpp\iedriver\VariantUtilities.cpp(105) Result type is JScriptTypeInfo D 2020-01-30 16:03:58:114 C:\Projects\webdriver\cpp\iedriver\ElementRepository.cpp(68) Element is already managed D 2020-01-30 16:03:58:118 C:\Projects\webdriver\cpp\iedriver\IECommandExecutor.cpp(883) Command execution for findElements complete D 2020-01-30 16:03:58:119 C:\Projects\webdriver\cpp\iedriver\IECommandExecutor.cpp(935) Setting serialized response to {         ""value"" :         [                 {                         ""element-6066-11e4-a52e-4f735466cecf"" : ""80f75b4b-982b-4962-80da-419bb55022fd""                 }         ] } D 2020-01-30 16:03:58:120 C:\Projects\webdriver\cpp\iedriver\IECommandExecutor.cpp(936) Is waiting flag: 0 D 2020-01-30 16:03:58:148 C:\Projects\webdriver\cpp\webdriver-server\server.cc(421) Response: {         ""value"" :         [                 {                         ""element-6066-11e4-a52e-4f735466cecf"" : ""80f75b4b-982b-4962-80da-419bb55022fd""                 }         ] } D 2020-01-30 16:03:58:207 C:\Projects\webdriver\cpp\webdriver-server\server.cc(338) Command: POST /session/042135f6-c4cc-41cf-9f28-d4f557fc3da7/actions {""actions"": [{""type"": ""pointer"", ""parameters"": {""pointerType"": ""mouse""}, ""id"": ""mouse"", ""actions"": [{""type"": ""pointerMove"", ""duration"": 250, ""x"": 0, ""y"": 0, ""origin"": {""element-6066-11e4-a52e-4f735466cecf"": ""80f75b4b-982b-4962-80da-419bb55022fd""}}, {""type"": ""pointerDown"", ""duration"": 0, ""button"": 0}, {""type"": ""pointerUp"", ""duration"": 0, ""button"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}]}, {""type"": ""key"", ""id"": ""key"", ""actions"": [{""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""keyDown"", ""value"": ""U""}, {""type"": ""keyUp"", ""value"": ""U""}, {""type"": ""keyDown"", ""value"": ""S""}, {""type"": ""keyUp"", ""value"": ""S""}, {""type"": ""keyDown"", ""value"": ""E""}, {""type"": ""keyUp"", ""value"": ""E""}, {""type"": ""keyDown"", ""value"": ""R""}, {""type"": ""keyUp"", ""value"": ""R""}, {""type"": ""keyDown"", ""value"": ""X""}, {""type"": ""keyUp"", ""value"": ""X""}, {""type"": ""keyDown"", ""value"": ""X""}, {""type"": ""keyUp"", ""value"": ""X""}, {""type"": ""keyDown"", ""value"": ""X""}, {""type"": ""keyUp"", ""value"": ""X""}, {""type"": ""keyDown"", ""value"": ""X""}, {""type"": ""keyUp"", ""value"": ""X""}]}]} D 2020-01-30 16:03:58:210 C:\Projects\webdriver\cpp\webdriver-server\command.cc(36) Raw JSON command: { ""name"" : ""performActions"", ""locator"" : { ""sessionid"" : ""042135f6-c4cc-41cf-9f28-d4f557fc3da7"" }, ""parameters"" : {""actions"": [{""type"": ""pointer"", ""parameters"": {""pointerType"": ""mouse""}, ""id"": ""mouse"", ""actions"": [{""type"": ""pointerMove"", ""duration"": 250, ""x"": 0, ""y"": 0, ""origin"": {""element-6066-11e4-a52e-4f735466cecf"": ""80f75b4b-982b-4962-80da-419bb55022fd""}}, {""type"": ""pointerDown"", ""duration"": 0, ""button"": 0}, {""type"": ""pointerUp"", ""duration"": 0, ""button"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}]}, {""type"": ""key"", ""id"": ""key"", ""actions"": [{""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""keyDown"", ""value"": ""U""}, {""type"": ""keyUp"", ""value"": ""U""}, {""type"": ""keyDown"", ""value"": ""S""}, {""type"": ""keyUp"", ""value"": ""S""}, {""type"": ""keyDown"", ""value"": ""E""}, {""type"": ""keyUp"", ""value"": ""E""}, {""type"": ""keyDown"", ""value"": ""R""}, {""type"": ""keyUp"", ""value"": ""R""}, {""type"": ""keyDown"", ""value"": ""X""}, {""type"": ""keyUp"", ""value"": ""X""}, {""type"": ""keyDown"", ""value"": ""X""}, {""type"": ""keyUp"", ""value"": ""X""}, {""type"": ""keyDown"", ""value"": ""X""}, {""type"": ""keyUp"", ""value"": ""X""}, {""type"": ""keyDown"", ""value"": ""X""}, {""type"": ""keyUp"", ""value"": ""X""}]}]} } D 2020-01-30 16:03:58:220 C:\Projects\webdriver\cpp\webdriver-server\command.cc(36) Raw JSON command: { ""name"" : ""performActions"", ""locator"" : { ""sessionid"" : ""042135f6-c4cc-41cf-9f28-d4f557fc3da7"" }, ""parameters"" : {""actions"": [{""type"": ""pointer"", ""parameters"": {""pointerType"": ""mouse""}, ""id"": ""mouse"", ""actions"": [{""type"": ""pointerMove"", ""duration"": 250, ""x"": 0, ""y"": 0, ""origin"": {""element-6066-11e4-a52e-4f735466cecf"": ""80f75b4b-982b-4962-80da-419bb55022fd""}}, {""type"": ""pointerDown"", ""duration"": 0, ""button"": 0}, {""type"": ""pointerUp"", ""duration"": 0, ""button"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}]}, {""type"": ""key"", ""id"": ""key"", ""actions"": [{""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""keyDown"", ""value"": ""U""}, {""type"": ""keyUp"", ""value"": ""U""}, {""type"": ""keyDown"", ""value"": ""S""}, {""type"": ""keyUp"", ""value"": ""S""}, {""type"": ""keyDown"", ""value"": ""E""}, {""type"": ""keyUp"", ""value"": ""E""}, {""type"": ""keyDown"", ""value"": ""R""}, {""type"": ""keyUp"", ""value"": ""R""}, {""type"": ""keyDown"", ""value"": ""X""}, {""type"": ""keyUp"", ""value"": ""X""}, {""type"": ""keyDown"", ""value"": ""X""}, {""type"": ""keyUp"", ""value"": ""X""}, {""type"": ""keyDown"", ""value"": ""X""}, {""type"": ""keyUp"", ""value"": ""X""}, {""type"": ""keyDown"", ""value"": ""X""}, {""type"": ""keyUp"", ""value"": ""X""}]}]} } D 2020-01-30 16:03:58:225 C:\Projects\webdriver\cpp\iedriver\IECommandExecutor.cpp(833) Checking for alert before executing performActions command D 2020-01-30 16:03:58:235 C:\Projects\webdriver\cpp\iedriver\IECommandExecutor.cpp(1035) No alert handle is found D 2020-01-30 16:03:58:252 C:\Projects\webdriver\cpp\iedriver\IECommandExecutor.cpp(880) Executing command: performActions D 2020-01-30 16:03:58:253 C:\Projects\webdriver\cpp\iedriver\InputManager.cpp(237) Mutex acquired for user interaction. D 2020-01-30 16:03:58:274 C:\Projects\webdriver\cpp\iedriver\Element.cpp(1094) Element is a block element, using IHTMLElement2::getBoundingClientRect D 2020-01-30 16:03:58:442 C:\Projects\webdriver\cpp\iedriver\Element.cpp(1176) Element is not in a frame D 2020-01-30 16:03:58:613 C:\Projects\webdriver\cpp\iedriver\InputManager.cpp(451) Queueing SendInput structure for mouse move (origin: 80f75b4b-982b-4962-80da-419bb55022fd, x: 983, y: 491) D 2020-01-30 16:03:58:622 C:\Projects\webdriver\cpp\iedriver\InputManager.cpp(510) Queueing SendInput structure for mouse button down D 2020-01-30 16:03:58:623 C:\Projects\webdriver\cpp\iedriver\InputManager.cpp(533) Queueing SendInput structure for mouse button up D 2020-01-30 16:03:58:624 C:\Projects\webdriver\cpp\iedriver\InputManager.cpp(696) Queueing SendInput structure for key down (key: U) D 2020-01-30 16:03:58:627 C:\Projects\webdriver\cpp\iedriver\InputManager.cpp(696) Queueing SendInput structure for key up (key: U) D 2020-01-30 16:03:58:629 C:\Projects\webdriver\cpp\iedriver\InputManager.cpp(696) Queueing SendInput structure for key down (key: S) D 2020-01-30 16:03:58:630 C:\Projects\webdriver\cpp\iedriver\InputManager.cpp(696) Queueing SendInput structure for key up (key: S) D 2020-01-30 16:03:58:631 C:\Projects\webdriver\cpp\iedriver\InputManager.cpp(696) Queueing SendInput structure for key down (key: E) D 2020-01-30 16:03:58:633 C:\Projects\webdriver\cpp\iedriver\InputManager.cpp(696) Queueing SendInput structure for key up (key: E) D 2020-01-30 16:03:58:634 C:\Projects\webdriver\cpp\iedriver\InputManager.cpp(696) Queueing SendInput structure for key down (key: R) D 2020-01-30 16:03:58:643 C:\Projects\webdriver\cpp\iedriver\InputManager.cpp(696) Queueing SendInput structure for key up (key: R) D 2020-01-30 16:03:58:647 C:\Projects\webdriver\cpp\iedriver\InputManager.cpp(696) Queueing SendInput structure for key down (key: X) D 2020-01-30 16:03:58:648 C:\Projects\webdriver\cpp\iedriver\InputManager.cpp(696) Queueing SendInput structure for key up (key: X) D 2020-01-30 16:03:58:650 C:\Projects\webdriver\cpp\iedriver\InputManager.cpp(696) Queueing SendInput structure for key down (key: X) D 2020-01-30 16:03:58:653 C:\Projects\webdriver\cpp\iedriver\InputManager.cpp(696) Queueing SendInput structure for key up (key: X) D 2020-01-30 16:03:58:657 C:\Projects\webdriver\cpp\iedriver\InputManager.cpp(696) Queueing SendInput structure for key down (key: X) D 2020-01-30 16:03:58:664 C:\Projects\webdriver\cpp\iedriver\InputManager.cpp(696) Queueing SendInput structure for key up (key: X) D 2020-01-30 16:03:58:665 C:\Projects\webdriver\cpp\iedriver\InputManager.cpp(696) Queueing SendInput structure for key down (key: X) D 2020-01-30 16:03:58:667 C:\Projects\webdriver\cpp\iedriver\InputManager.cpp(696) Queueing SendInput structure for key up (key: X) D 2020-01-30 16:03:58:675 C:\Projects\webdriver\cpp\iedriver\InputManager.cpp(155) Processing a total of 58 input events D 2020-01-30 16:03:59:875 C:\Projects\webdriver\cpp\iedriver\IECommandExecutor.cpp(883) Command execution for performActions complete D 2020-01-30 16:03:59:875 C:\Projects\webdriver\cpp\iedriver\IECommandExecutor.cpp(935) Setting serialized response to {         ""value"" : null } D 2020-01-30 16:03:59:884 C:\Projects\webdriver\cpp\iedriver\IECommandExecutor.cpp(936) Is waiting flag: 0 D 2020-01-30 16:03:59:888 C:\Projects\webdriver\cpp\webdriver-server\server.cc(421) Response: {         ""value"" : null }  #################### # Password section ###################  D 2020-01-30 16:03:59:896 C:\Projects\webdriver\cpp\webdriver-server\server.cc(338) Command: POST /session/042135f6-c4cc-41cf-9f28-d4f557fc3da7/elements {""using"": ""xpath"", ""value"": ""(.//input[@name='password'])""} D 2020-01-30 16:03:59:897 C:\Projects\webdriver\cpp\webdriver-server\command.cc(36) Raw JSON command: { ""name"" : ""findElements"", ""locator"" : { ""sessionid"" : ""042135f6-c4cc-41cf-9f28-d4f557fc3da7"" }, ""parameters"" : {""using"": ""xpath"", ""value"": ""(.//input[@name='password'])""} } D 2020-01-30 16:03:59:898 C:\Projects\webdriver\cpp\webdriver-server\command.cc(36) Raw JSON command: { ""name"" : ""findElements"", ""locator"" : { ""sessionid"" : ""042135f6-c4cc-41cf-9f28-d4f557fc3da7"" }, ""parameters"" : {""using"": ""xpath"", ""value"": ""(.//input[@name='password'])""} } D 2020-01-30 16:03:59:898 C:\Projects\webdriver\cpp\iedriver\IECommandExecutor.cpp(833) Checking for alert before executing findElements command D 2020-01-30 16:03:59:899 C:\Projects\webdriver\cpp\iedriver\IECommandExecutor.cpp(1035) No alert handle is found D 2020-01-30 16:03:59:899 C:\Projects\webdriver\cpp\iedriver\IECommandExecutor.cpp(880) Executing command: findElements D 2020-01-30 16:03:59:900 C:\Projects\webdriver\cpp\iedriver\ElementFinder.cpp(143) Using FindElements atom to locate element having xpath = (.//input[@name='password']) I 2020-01-30 16:03:59:900 C:\Projects\webdriver\cpp\iedriver\Browser.cpp(215) No child frame focus. Focus is on top-level frame D 2020-01-30 16:04:00:263 C:\Projects\webdriver\cpp\iedriver\VariantUtilities.cpp(105) Result type is JScriptTypeInfo D 2020-01-30 16:04:00:452 C:\Projects\webdriver\cpp\iedriver\VariantUtilities.cpp(105) Result type is JScriptTypeInfo D 2020-01-30 16:04:00:516 C:\Projects\webdriver\cpp\iedriver\VariantUtilities.cpp(105) Result type is JScriptTypeInfo D 2020-01-30 16:04:00:544 C:\Projects\webdriver\cpp\iedriver\VariantUtilities.cpp(105) Result type is JScriptTypeInfo D 2020-01-30 16:04:00:619 C:\Projects\webdriver\cpp\iedriver\VariantUtilities.cpp(105) Result type is JScriptTypeInfo D 2020-01-30 16:04:00:633 C:\Projects\webdriver\cpp\iedriver\VariantUtilities.cpp(401) -2147352570 [Unknown name.]: Unable to get dispatch ID (dispid) for property toJSON D 2020-01-30 16:04:00:633 C:\Projects\webdriver\cpp\iedriver\VariantUtilities.cpp(325) No toJSON property found on IDispatch D 2020-01-30 16:04:00:656 C:\Projects\webdriver\cpp\iedriver\VariantUtilities.cpp(105) Result type is JScriptTypeInfo D 2020-01-30 16:04:00:681 C:\Projects\webdriver\cpp\iedriver\ElementRepository.cpp(58) Element is not yet managed D 2020-01-30 16:04:00:687 C:\Projects\webdriver\cpp\iedriver\IECommandExecutor.cpp(883) Command execution for findElements complete D 2020-01-30 16:04:00:687 C:\Projects\webdriver\cpp\iedriver\IECommandExecutor.cpp(935) Setting serialized response to {         ""value"" :         [                 {                         ""element-6066-11e4-a52e-4f735466cecf"" : ""3d534c82-e472-41ab-8376-46deaa880808""                 }         ] } D 2020-01-30 16:04:00:688 C:\Projects\webdriver\cpp\iedriver\IECommandExecutor.cpp(936) Is waiting flag: 0 D 2020-01-30 16:04:00:703 C:\Projects\webdriver\cpp\webdriver-server\server.cc(421) Response: {         ""value"" :         [                 {                         ""element-6066-11e4-a52e-4f735466cecf"" : ""3d534c82-e472-41ab-8376-46deaa880808""                 }         ] } D 2020-01-30 16:04:00:761 C:\Projects\webdriver\cpp\webdriver-server\server.cc(338) Command: POST /session/042135f6-c4cc-41cf-9f28-d4f557fc3da7/actions {""actions"": [{""type"": ""pointer"", ""parameters"": {""pointerType"": ""mouse""}, ""id"": ""mouse"", ""actions"": [{""type"": ""pointerMove"", ""duration"": 250, ""x"": 0, ""y"": 0, ""origin"": {""element-6066-11e4-a52e-4f735466cecf"": ""3d534c82-e472-41ab-8376-46deaa880808""}}, {""type"": ""pointerDown"", ""duration"": 0, ""button"": 0}, {""type"": ""pointerUp"", ""duration"": 0, ""button"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}]}, {""type"": ""key"", ""id"": ""key"", ""actions"": [{""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""keyDown"", ""value"": ""P""}, {""type"": ""keyUp"", ""value"": ""P""}, {""type"": ""keyDown"", ""value"": ""4""}, {""type"": ""keyUp"", ""value"": ""4""}, {""type"": ""keyDown"", ""value"": ""s""}, {""type"": ""keyUp"", ""value"": ""s""}, {""type"": ""keyDown"", ""value"": ""w""}, {""type"": ""keyUp"", ""value"": ""w""}, {""type"": ""keyDown"", ""value"": ""o""}, {""type"": ""keyUp"", ""value"": ""o""}, {""type"": ""keyDown"", ""value"": ""r""}, {""type"": ""keyUp"", ""value"": ""r""}, {""type"": ""keyDown"", ""value"": ""d""}, {""type"": ""keyUp"", ""value"": ""d""}]}]} D 2020-01-30 16:04:00:764 C:\Projects\webdriver\cpp\webdriver-server\command.cc(36) Raw JSON command: { ""name"" : ""performActions"", ""locator"" : { ""sessionid"" : ""042135f6-c4cc-41cf-9f28-d4f557fc3da7"" }, ""parameters"" : {""actions"": [{""type"": ""pointer"", ""parameters"": {""pointerType"": ""mouse""}, ""id"": ""mouse"", ""actions"": [{""type"": ""pointerMove"", ""duration"": 250, ""x"": 0, ""y"": 0, ""origin"": {""element-6066-11e4-a52e-4f735466cecf"": ""3d534c82-e472-41ab-8376-46deaa880808""}}, {""type"": ""pointerDown"", ""duration"": 0, ""button"": 0}, {""type"": ""pointerUp"", ""duration"": 0, ""button"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}]}, {""type"": ""key"", ""id"": ""key"", ""actions"": [{""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""keyDown"", ""value"": ""P""}, {""type"": ""keyUp"", ""value"": ""P""}, {""type"": ""keyDown"", ""value"": ""4""}, {""type"": ""keyUp"", ""value"": ""4""}, {""type"": ""keyDown"", ""value"": ""s""}, {""type"": ""keyUp"", ""value"": ""s""}, {""type"": ""keyDown"", ""value"": ""w""}, {""type"": ""keyUp"", ""value"": ""w""}, {""type"": ""keyDown"", ""value"": ""o""}, {""type"": ""keyUp"", ""value"": ""o""}, {""type"": ""keyDown"", ""value"": ""r""}, {""type"": ""keyUp"", ""value"": ""r""}, {""type"": ""keyDown"", ""value"": ""d""}, {""type"": ""keyUp"", ""value"": ""d""}]}]} } D 2020-01-30 16:04:00:772 C:\Projects\webdriver\cpp\webdriver-server\command.cc(36) Raw JSON command: { ""name"" : ""performActions"", ""locator"" : { ""sessionid"" : ""042135f6-c4cc-41cf-9f28-d4f557fc3da7"" }, ""parameters"" : {""actions"": [{""type"": ""pointer"", ""parameters"": {""pointerType"": ""mouse""}, ""id"": ""mouse"", ""actions"": [{""type"": ""pointerMove"", ""duration"": 250, ""x"": 0, ""y"": 0, ""origin"": {""element-6066-11e4-a52e-4f735466cecf"": ""3d534c82-e472-41ab-8376-46deaa880808""}}, {""type"": ""pointerDown"", ""duration"": 0, ""button"": 0}, {""type"": ""pointerUp"", ""duration"": 0, ""button"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}]}, {""type"": ""key"", ""id"": ""key"", ""actions"": [{""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""pause"", ""duration"": 0}, {""type"": ""keyDown"", ""value"": ""P""}, {""type"": ""keyUp"", ""value"": ""P""}, {""type"": ""keyDown"", ""value"": ""4""}, {""type"": ""keyUp"", ""value"": ""4""}, {""type"": ""keyDown"", ""value"": ""s""}, {""type"": ""keyUp"", ""value"": ""s""}, {""type"": ""keyDown"", ""value"": ""w""}, {""type"": ""keyUp"", ""value"": ""w""}, {""type"": ""keyDown"", ""value"": ""o""}, {""type"": ""keyUp"", ""value"": ""o""}, {""type"": ""keyDown"", ""value"": ""r""}, {""type"": ""keyUp"", ""value"": ""r""}, {""type"": ""keyDown"", ""value"": ""d""}, {""type"": ""keyUp"", ""value"": ""d""}]}]} } D 2020-01-30 16:04:00:775 C:\Projects\webdriver\cpp\iedriver\IECommandExecutor.cpp(833) Checking for alert before executing performActions command D 2020-01-30 16:04:00:777 C:\Projects\webdriver\cpp\iedriver\IECommandExecutor.cpp(1035) No alert handle is found D 2020-01-30 16:04:00:778 C:\Projects\webdriver\cpp\iedriver\IECommandExecutor.cpp(880) Executing command: performActions D 2020-01-30 16:04:00:778 C:\Projects\webdriver\cpp\iedriver\InputManager.cpp(237) Mutex acquired for user interaction. D 2020-01-30 16:04:00:809 C:\Projects\webdriver\cpp\iedriver\Element.cpp(1094) Element is a block element, using IHTMLElement2::getBoundingClientRect D 2020-01-30 16:04:01:046 C:\Projects\webdriver\cpp\iedriver\Element.cpp(1176) Element is not in a frame D 2020-01-30 16:04:01:205 C:\Projects\webdriver\cpp\iedriver\InputManager.cpp(451) Queueing SendInput structure for mouse move (origin: 3d534c82-e472-41ab-8376-46deaa880808, x: 983, y: 515) D 2020-01-30 16:04:01:210 C:\Projects\webdriver\cpp\iedriver\InputManager.cpp(510) Queueing SendInput structure for mouse button down D 2020-01-30 16:04:01:216 C:\Projects\webdriver\cpp\iedriver\InputManager.cpp(533) Queueing SendInput structure for mouse button up D 2020-01-30 16:04:01:216 C:\Projects\webdriver\cpp\iedriver\InputManager.cpp(696) Queueing SendInput structure for key down (key: P) D 2020-01-30 16:04:01:218 C:\Projects\webdriver\cpp\iedriver\InputManager.cpp(696) Queueing SendInput structure for key up (key: P) D 2020-01-30 16:04:01:220 C:\Projects\webdriver\cpp\iedriver\InputManager.cpp(696) Queueing SendInput structure for key down (key: 4) D 2020-01-30 16:04:01:221 C:\Projects\webdriver\cpp\iedriver\InputManager.cpp(696) Queueing SendInput structure for key up (key: 4) D 2020-01-30 16:04:01:222 C:\Projects\webdriver\cpp\iedriver\InputManager.cpp(696) Queueing SendInput structure for key down (key: s) D 2020-01-30 16:04:01:224 C:\Projects\webdriver\cpp\iedriver\InputManager.cpp(696) Queueing SendInput structure for key up (key: s) D 2020-01-30 16:04:01:226 C:\Projects\webdriver\cpp\iedriver\InputManager.cpp(696) Queueing SendInput structure for key down (key: w) D 2020-01-30 16:04:01:227 C:\Projects\webdriver\cpp\iedriver\InputManager.cpp(696) Queueing SendInput structure for key up (key: w) D 2020-01-30 16:04:01:228 C:\Projects\webdriver\cpp\iedriver\InputManager.cpp(696) Queueing SendInput structure for key down (key: o) D 2020-01-30 16:04:01:231 C:\Projects\webdriver\cpp\iedriver\InputManager.cpp(696) Queueing SendInput structure for key up (key: o) D 2020-01-30 16:04:01:239 C:\Projects\webdriver\cpp\iedriver\InputManager.cpp(696) Queueing SendInput structure for key down (key: r) D 2020-01-30 16:04:01:240 C:\Projects\webdriver\cpp\iedriver\InputManager.cpp(696) Queueing SendInput structure for key up (key: r) D 2020-01-30 16:04:01:241 C:\Projects\webdriver\cpp\iedriver\InputManager.cpp(696) Queueing SendInput structure for key down (key: d) D 2020-01-30 16:04:01:242 C:\Projects\webdriver\cpp\iedriver\InputManager.cpp(696) Queueing SendInput structure for key up (key: d) D 2020-01-30 16:04:01:245 C:\Projects\webdriver\cpp\iedriver\InputManager.cpp(155) Processing a total of 42 input events D 2020-01-30 16:04:02:884 C:\Projects\webdriver\cpp\iedriver\IECommandExecutor.cpp(883) Command execution for performActions complete D 2020-01-30 16:04:02:885 C:\Projects\webdriver\cpp\iedriver\IECommandExecutor.cpp(935) Setting serialized response to {         ""value"" : null } D 2020-01-30 16:04:02:892 C:\Projects\webdriver\cpp\iedriver\IECommandExecutor.cpp(936) Is waiting flag: 0 D 2020-01-30 16:04:02:898 C:\Projects\webdriver\cpp\webdriver-server\server.cc(421) Response: {         ""value"" : null } ```","closed","D-IE,","sbengo","2020-02-06T10:37:08Z","2021-09-05T08:10:35Z"
"","8560","ASP.NET Core | Cannot dispose Firefox driver when disposing from ApplicationStopping delegate.","## üêõ Bug Report  Firefox driver fails to dispose when called from within of ApplicationStopping delegate. The driver process stays running.  ## To Reproduce  [ASP.NET Core 3.1 reproduce project.](https://github.com/SeleniumHQ/selenium/files/4956849/SeleniumDisposeIssue.zip)  Using reproduce project: 1. Start project. 2. Watch the firefox process start. 3. Perform a graceful shutdown by using **ctrl + c** when started using Kestrel or stop site using IIS Express from system tray. 4. Watch the firefox process stay running.  By yourself: 1. Create a ASP.NET Core 3.1 project 2. Create a service that uses Firefox driver, register delegate that disposes driver when ApplicationStopping. 3. Start project. 4. Watch the firefox process start. 5. Perform a graceful shutdown by using **ctrl + c** when started using Kestrel or stop site using IIS Express from system tray. 6. Application shut down. 7. Watch the firefox process stay running.  ## Expected behavior  Using reproduce project: 1. Project started. 2. Firefox process started. 3. Apllication stopping. 4. Firefox driver disposed. 5. Application shut down.  ## Environment  OS: Windows 10 Browser: Firefox Browser version: 79.0b9 Language Bindings version: 3.141.0 for .NET","closed","","Nazarion","2020-07-21T23:18:48Z","2021-09-05T08:36:07Z"
"","8285","Firefox extension is not installed via builder","## üêõ Bug Report  Firefox does not install an extension passed via `addExtensions`.  ## To Reproduce  See this repo: https://github.com/slhck/web-extension-selenium-test  When I run:  ``` yarn run build:chrome yarn run test:integration:chrome ```  The extension is installed from its source folder. I do not have a CRX file to test, so I have to use the command line arg instead.  For Firefox:  ``` yarn run build:firefox yarn run test:integration:firefox ```  It opens Firefox and the test runs, but the add-on is not installed.  See the file `setupSimpleTest.test.ts` ‚Äì here the Firefox XPI should be installed, but it is not:  ```js let driver: webdriver.WebDriver; const firefoxExt = path.resolve(__dirname, '..', '..', 'extension', 'firefox.xpi'); const firefoxOptions = new firefox.Options().addExtensions(firefoxExt); driver = new webdriver.Builder().forBrowser('firefox').setFirefoxOptions(firefoxOptions).build(); ```  ## Expected behavior  I am expecting Firefox to launch and install `firefox.xpi` as an add-on.  There is no issue with the XPI itself, as the XPI can be installed manually, as a temporary extension, without issues.  ## Test script or set of commands reproducing this issue  See https://github.com/slhck/web-extension-selenium-test/blob/master/test/integration/setupSimpleTest.test.ts  ## Environment  OS: Ubuntu 19.10 Browser: Chrome 81.0.4044.129 and Firefox 75.0 (64-bit Browser Driver version: Chromedriver 81.0.0 and Geckodriver 1.19.1 Language Bindings version: Selenium-Webdriver 4.0.0-alpha.7","open","D-firefox,","slhck","2020-05-08T09:09:03Z","2021-12-26T20:29:47Z"
"","7940","Firefox 72.0.1 ignores options set by GeckoDriver. via Java. Used to work fine for Firefox 72.0 and older.","## üêõ Bug Report  Firefox 72.0.1 ignores options set by GeckoDriver. via Java. Used to work fine for Firefox 72.0 and older. This worked all right before I got Firefox 72.0.1. With 72.0.1 the PDF is opened in the pdf view of FireFox. I checked the FireFox option ""pdfjs.disabled"" in about:config and it is set to false. Any ideas how to fix this?    ## To Reproduce package manuals_hpesc_test;  import java.io.File; import org.openqa.selenium.WebDriver; import org.openqa.selenium.firefox.FirefoxDriver; import org.openqa.selenium.firefox.FirefoxOptions; import org.openqa.selenium.firefox.FirefoxProfile;  public class Manuals_HPESC_Test {      /**      * @param args the command line arguments      */     public static void main(String[] args) {         Manuals_HPESC_Test m = new Manuals_HPESC_Test();         m.dowork();     }      private void dowork() {         firefox();     }      private void firefox() {         System.setProperty(""webdriver.gecko.driver"", ""< path to geckodriver.exe >"");          String fileDownloadPath = ""< directory >"";          Map prefsMap = new HashMap();         prefsMap.put(""profile.default_content_settings.popups"", 0);         prefsMap.put(""download.default_directory"", fileDownloadPath);          FirefoxProfile profile = new FirefoxProfile();         profile.setPreference(""browser.download.folderList"", 2);         File tempfile = new File(fileDownloadPath);         profile.setPreference(""browser.download.dir"", tempfile.getAbsolutePath());         profile.setPreference(""browser.helperApps.neverAsk.saveToDisk"", ""application/zip,application/octet-stream,application/pdf"");         profile.setPreference(""pdfjs.disabled"", true);         FirefoxOptions options = new FirefoxOptions();         WebDriver driver = new FirefoxDriver(options);         // page contains an iframe for a pdf         driver.get(""https://support.hpe.com/hpsc/doc/public/display?docLocale=en_US&docId=emr_na-a00045838en_us&withFrame"");         driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);         driver.manage().window().maximize();         try {             Thread.sleep(30000);         } catch (InterruptedException ex) {         }         System.out.println(""Downloaded"");         if (driver != null) {             try {                 driver.quit();             } catch (Exception e) {                 e.printStackTrace();             }          }      } }  ## Environment  OS: Windows 10 1909 64-bit Browser: FireFox 64-bit Browser version: 72.0.1 Browser Driver version: GeckoDriver V026.0 Language Bindings version: Java openjdk version ""1.8.0_222"" Selenium Grid version (if applicable):","closed","needs-triaging,","RobertScharpf","2020-01-16T10:14:21Z","2020-02-29T16:58:30Z"
"","8253","[4.0.0.alpha5] Failed start IE with empty port","## üêõ Bug Report  Failed start IE, using Python if port not set. Reason is: ```         RemoteWebDriver.__init__(             self,             command_executor='http://localhost:%d' % self.port,   # <== DEFAULT_PORT there (0)             desired_capabilities=capabilities,             keep_alive=keep_alive) ```  service will be started with another port (free_port)  ## To Reproduce from selenium import webdriver driver = webdriver.Ie()    ## Expected behavior  IE started without errors  ## Test script or set of commands reproducing this issue ``` from selenium import webdriver driver = webdriver.Ie() Traceback (most recent call last):   File """", line 1, in    File ""selenium\webdriver\ie\webdriver.py"", line 108, in __init__     keep_alive=keep_alive)   File ""selenium\webdriver\remote\webdriver.py"", line 172, in __init__     self.start_session(capabilities, browser_profile)   File ""selenium\webdriver\remote\webdriver.py"", line 269, in start_session     response = self.execute(Command.NEW_SESSION, parameters)   File ""selenium\webdriver\remote\webdriver.py"", line 338, in execute     self.error_handler.check_response(response)   File ""selenium\webdriver\remote\errorhandler.py"", line 204, in check_response     raise exception_class(value) selenium.common.exceptions.WebDriverException: Message: File not found  ``` ## Environment  OS: Windows 10 Browser: IE Browser version: 11.719.18362.0 Browser Driver version: IEDriverServer 3.150.1.0 Language Bindings version: Python 4.0.0.alpha5 Selenium Grid version (if applicable): N/A","closed","needs-triaging,","FrySabotage","2020-04-28T07:26:43Z","2021-09-05T10:20:20Z"
"","7959","executeCdpCommand is not present in remote_connection.py#L114","## üêõ Bug Report  Executing ""executeCdpCommand"" results in the following exception ``` File ""/usr/local/lib/python3.6/dist-packages/selenium/webdriver/remote/webdriver.py"", line 316, in execute response = self.command_executor.execute(driver_command, params) File ""/usr/local/lib/python3.6/dist-packages/selenium/webdriver/remote/remote_connection.py"", line 340, in execute command_info = self._commands[command] KeyError: 'executeCdpCommand' ``` pip freeze | grep ""selenium"":  selenium==4.0.0a3    ## To Reproduce    ``` session = webdriver.Remote(command_executor=f'{SELENIUM}:4444/wd/hub',                                                options=SELENIUM_OPTIONS,                                                desired_capabilities=webdriver.DesiredCapabilities.CHROME)   session.execute(     'executeCdpCommand',     {         'cmd': 'Page.addScriptToEvaluateOnNewDocument',         'params':         {             'source': '''                 Object.defineProperty(navigator, ""webdriver"", {                 get: () => undefined                 })             '''         }     } ) ``` Detailed steps to reproduce the behavior:  ### Background It seems that the base class ""RemoteConnection"" class is used for all connection regardless of the browser passed in desired_capabilities, So for instance IF the user passes ```desired_capabilities=webdriver.DesiredCapabilities.CHROME``` while initializing the session, The generic RemoteConnection is still used, despite not supporting the commands specific to Chromium.  ### Expectation I expect a suitable RemoteConnection subclass (ChromiumRemoteConnection, FirefoxRemoteConnection, SafariRemoteConnection, etc...) to be used based on the specified desired_capabilities.   ### Workaround Current workaround requires explicitly passing a RemoteConnection object (of ChromiumRemoteConnection subclass), Which seems redundant given that I have explicitly specified Chrome/Chromium as being the desired driver) ``` session = webdriver.Remote(command_executor=ChromiumRemoteConnection(f'{SELENIUM}:4444/wd/hub'),                             desired_capabilities=webdriver.DesiredCapabilities.CHROME,                             options=SELENIUM_OPTIONS) ```  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.","closed","C-py,","abdelrahman-t","2020-01-25T17:14:32Z","2020-04-25T08:17:56Z"
"","8459","Edge crashes when passing service_log_path","## üêõ Bug Report  Edge crashes when passing service_log_path in python.  ## To Reproduce ``` from selenium.webdriver import Edge driver = Edge(service_log_path=""C:/temp/foo.log"") ``` results in ``` WebDriverException: Message: Service MicrosoftWebDriver.exe unexpectedly exited. Status code was: 1 ```  ## Expected behavior  No Exception  ## Note * Works fine for currently released selenium version. * Works fine when omitting service log path  * I tried using log_path in a Service() object this also results in a crash  When initializing the service object  https://github.com/SeleniumHQ/selenium/blob/master/py/selenium/webdriver/edge/webdriver.py#L63 It looks like the service_args are passed at the wrong position https://github.com/SeleniumHQ/selenium/blob/master/py/selenium/webdriver/edge/service.py#L23 This could be avoided by initializing with key value pairs. Like it was done in the current release: https://github.com/SeleniumHQ/selenium/blob/selenium-3.141.59/py/selenium/webdriver/edge/webdriver.py#L55 But I don't know if this is the reason for the crash.  ## Environment  OS: Windows 10 Browser: Microsoft Edge 44.17763.831.0 Browser version:  44.17763.831.0 Browser Driver version: Feature on demand (automatically installed by windows) Language Bindings version: python 4.0.0a6.post2","closed","D-edge,","PhilippSelenium","2020-06-25T11:47:07Z","2021-09-05T08:12:25Z"
"","8119","dragAndDrop and moveToElement are not working with Selenium 3.5.3","## üêõ Bug Report  dragAndDrop and moveToElement are not working with Selenium 3.5.3  ## To Reproduce We are trying to drag and drop one element to another element but dragAndDrop mrthod does not work and it is not able to drag the first element to another element.  PSB the code for the same:  Actions ac =new Actions(driver);  ac.dragAndDrop(contract1,contract2).build().perform();  The above code did not work so we tried to do the same with the moveToElement method but it did not work too , it holds the first contract but it does not drag and drop it on to the second element but it selects the second element too without droping on it.  ac.clickAndHold(contract1).build().perform();    common.fnWait(""3000""); ac.moveToElement(contract2).release(contract2).build().perform();         ## Environment  OS: Windows 10 Browser: Chrome Browser version: 79.0.3945.130 Browser Driver version: ChromeDriver  2.35.528161  Language Bindings version: Open Jdk 1.8.0_232 Selenium Grid version (if applicable): 3.3.1","closed","R-awaiting answer,","shagupta92042","2020-03-18T12:09:40Z","2020-04-25T08:18:21Z"
"","8528","Drag and drop is not working in selenium automation with SVG tag : ElementNotInteractableException","## üêõ Bug Report  Drag and drop is not working in selenium automation with SVG tag : ElementNotInteractableException   ## To Reproduce  ""div class=""entry csf-icon hive-source"" draggable=""true"" data-action=""create.dfle-HiveSource"" title=""Create HiveSource""  Trying to drag above div element inside below SVG element in automation. But we are getting error ""ElementNotInteractableException: Message: element not interactable""  ""svg width=""100%"" height=""100%"" style=""touch-action: none; user-select: none; -webkit-user-drag: none; -webkit-tap-highlight-color: rgba(0, 0, 0, 0);"" data-element-id=""DataFlow"" class=""""  g class=""viewport"" transform=""matrix(1,0,0,1,87.00000256299973,-273.5000081807375)"" /g /svg""  ## Expected behavior On drag on drop , it should populate the new ""g"" rectangle inside ""g class=""viewport"" ""   ## Environment  Browser: Chrome","closed","needs-triaging,","RamjiRamachandran","2020-07-15T09:35:05Z","2021-09-05T09:03:02Z"
"","8345","Drag and Drop [Python]","## üêõ Bug Report  Drag and drop don't release Web Element.  ## To Reproduce  Run code in section  ## Expected behavior  Move element to another element  ## Test script or set of commands reproducing this issue ```python from selenium.webdriver import Firefox from selenium.webdriver.common.action_chains import ActionChains  browser = Firefox('http://selenium.dunossauro.live/drag.html')  browser.get(url) ac = ActionChains(browser)  def drag_and_drop(target, release):     """"""Brute force testing.""""""     ac = ActionChains(browser)     ac.click_and_hold(target)     ac.move_to_element(release)     ac.release(release)     ac.perform()  drag_and_drop(     browser.find_element_by_id('dragA'),     browser.find_element_by_id('dropBox') )  ac.drag_and_drop(     browser.find_element_by_id('dragA'),     browser.find_element_by_id('dropBox') ).perform() ``` ## Environment  OS: ArchLinux Browser: Firefox and Chrome Browser version: Firefox 76.0.1 / 81.0.4044.138 (64bits) Browser Driver version: geckodriver 0.26.0  /ChromeDriver 81.0.4044.138 Language Bindings version: Python 3.8.1 Selenium Versions: tested on 3.141.0 and 4.0.0a5 Selenium Grid version (if applicable): N/A   # gecko log  ``` 1590483590906	addons.webextension.doh-rollout@mozilla.org	WARN	Loading extension 'doh-rollout@mozilla.org': Reading manifest: Invalid extension permission: networkStatus 1590483591080	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons 1590483591080	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry 1590483591080	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/ 1590483591080	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader* 1590483592119	Marionette	INFO	Listening on port 35757 1590483592202	Marionette	WARN	TLS certificate errors will be ignored for this session 1590483592289	Marionette	WARN	TimedPromise timed out after 0 ms: stacktrace: TimedPromise/<@chrome://marionette/content/sync.js:245:13 TimedPromise@chrome://marionette/content/sync.js:230:10 Sleep@chrome://marionette/content/sync.js:283:10 dispatchPause@chrome://marionette/content/action.js:1482:10 toEvents/<@chrome://marionette/content/action.js:1156:16 action.dispatchTickActions@chrome://marionette/content/action.js:1060:35 action.dispatch/chainEvents<@chrome://marionette/content/action.js:1028:20 action.dispatch@chrome://marionette/content/action.js:1034:5 performActions@chrome://marionette/content/listener.js:853:16 dispatch/","closed","I-defect,","dunossauro","2020-05-26T09:07:29Z","2021-11-20T00:06:32Z"
"","8572","First CSS selector after using a CSS selector returns incorrect values.","## üêõ Bug Report  CSS selectors don't work correctly on the first object returned by `find_elements_by_css_selector`.  (**Note**: actual order and numbers subject to change)  Expected output:  ```none 8: Close Votes 0: First Posts 0: Late Answers 0: Low Quality Posts 0: Reopen Votes 0: Suggested Edits ``` Actual output:  ``` 8 questions: 8 questions 0: First Posts 0: Late Answers 0: Low Quality Posts 0: Reopen Votes 0: Suggested Edits ```  Notice that the first result is nothing like the rest.  ## To Reproduce  Below is attached a basic Python script that I consistently reproduce the error on. I have tested both Chrome and Firefox which can be found in the `get_driver` function.  ```python from selenium import webdriver from selenium.webdriver.firefox.firefox_binary import FirefoxBinary  _REVIEW_QUEUES = '#content > :nth-child(2) > :nth-child(1) > .grid' _REVIEW_QUEUE_AMOUNT = ':nth-child(1) > :nth-child(1)' _REVIEW_QUEUE_TITLE = ':nth-child(2) > :nth-child(1) > :nth-child(1) > :nth-child(1)'   def get_queues(driver):     driver.get('https://codereview.stackexchange.com/review')     queues = driver.find_elements_by_css_selector(_REVIEW_QUEUES)     for queue in queues:         amount = queue.find_element_by_css_selector(_REVIEW_QUEUE_AMOUNT)         title = queue.find_element_by_css_selector(_REVIEW_QUEUE_TITLE)         print(f'{amount.text}: {title.text}')   def get_driver():     # binary = FirefoxBinary('/usr/bin/firefox')     # return webdriver.Firefox(firefox_binary=binary)     options = webdriver.ChromeOptions()     options.add_argument('--ignore-certificate-errors')     options.add_argument(""--test-type"")     return webdriver.Chrome(options=options)   def main():     driver = get_driver()     get_queues(driver)   if __name__ == '__main__':     main() ```  ## Expected behaviour  I have shown the expected behaviour and I have verified that this is how both Chrome and Firefox work when using JQuery's `$` with the following script.  If you run the following in either browsers console it will output the expected values.  ```javascript let _REVIEW_QUEUES = '#content > :nth-child(2) > :nth-child(1) > .grid'; let _REVIEW_QUEUE_AMOUNT = ':nth-child(1) > :nth-child(1)'; let _REVIEW_QUEUE_TITLE = ':nth-child(2) > :nth-child(1) > :nth-child(1) > :nth-child(1)';  let queues = $(_REVIEW_QUEUES); for (let queue of queues) {     let amount = $(_REVIEW_QUEUE_AMOUNT, queue)[0];     let title = $(_REVIEW_QUEUE_TITLE, queue)[0];     console.log(`${amount.textContent}: ${title.textContent}`); } ```  ## Environment  OS: Arch Linux Kernel: 5.7.9-arch1-1 Language Bindings version: Python 3.141.0  Browser: Firefox Browser version: 78.0.2 (64-bit) Browser Driver version: geckodriver 0.26.0  Browser: Chromium Browser version: 84.0.4147.89 (Official Build) (64-bit) Browser Driver version: ChromeDriver 84.0.4147.89","closed","I-question,","Peilonrayz","2020-07-25T14:15:06Z","2021-09-05T08:37:27Z"
"","8823","Headless Chrome WebDriverException ""...page crash from unknown error""","## üêõ Bug Report  Created a simple ""Login"" test on Yandex email website. After I login successfully any command to the driver will throw the WebDriverException, any further command will throw an exception stating the sessionId no longer exists (probably driver is closing/crashing) after the WebDriverException. This happens when executing my test on **chrome headless!** Works fine on regular chrome and on firefox/headless-firefox.  ## Expected behavior  Expecting the driver to keep responding to commands.  ## Test script or set of commands reproducing this issue  ``` public static void main(String[] args) {          WebDriverManager.chromedriver().setup();          // Start Selenium         StandaloneConfiguration configuration = new StandaloneConfiguration();         SeleniumServer server = new SeleniumServer(configuration);         server.boot();          ChromeOptions options = new ChromeOptions();         options.setHeadless(true);          ChromeDriver driver = new ChromeDriver(options);         driver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);         try {             // Do some actions with the driver...             driver.navigate().to(""https://mail.yandex.com"");             driver.findElementByXPath(""//div[4]/a[. = 'Log in']"").click();             WebElement login = driver.findElementByXPath(""//button[. = 'Log in']"");             login.click();             TimeUnit.SECONDS.sleep(2);             driver.findElementByCssSelector(""#passp-field-login"").sendKeys(""YOUR_USER_NAME"");             login.click();             TimeUnit.SECONDS.sleep(2);             WebElement password = driver.findElementByCssSelector(""#passp-field-passwd"");             password.sendKeys(""YOUR_PASSWORD"");             WebElement login2 = driver.findElementByXPath(""//*[@id=\""root\""]/div/div/div[2]/div/div/div[2]/div[3]/div/div/div/form/div[3]/button"");             login2.click();             // AFTER THIS LINE - on chrome headless any command to the driver will reveal the bug.             password.sendKeys(""zaq123edc"");         } catch (Throwable e) {             e.printStackTrace();         } finally {             driver.quit();         }         server.stop();         System.exit(0);     } ```  ## Environment  OS: Windows 10 Browser: Chrome Browser version: 86.0.4240.111 Browser Driver version: 86.0.4240.22 Language Bindings version: 3.141.59","closed","R-awaiting answer,","tzah4748","2020-10-28T13:22:53Z","2021-09-05T08:31:23Z"
"","8693","cookies cannot be sent for the first HTTP request","## üêõ Bug Report  Cookies cannot be sent for the first HTTP request. Another HTTP request needs to be done to send cookies.  ## To Reproduce  I tried the Selenium WebDriver example using Google Search from https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Your_own_automation_environment#Setting_up_Selenium_in_Node but with an IP address coming from an ISP in France, we first need to click a button to accept cookies, which creates a `CONSENT` cookie with a value like `YES+FR.en+V9+BX` on the `.google.com` domain. So to avoid having to click on the consent button everytime I run the script, I need to add this cookie before opening the English version of Google https://www.google.com/?hl=en. However, I noticed that the cookie is not sent the first time I load the Google homepage and I have to do the request again.  ## Expected behavior  Cookies should be sent by doing one HTTP request only.  ## Test script or set of commands reproducing this issue  Here is the code (you may have to increase the sleep 6000 if you have errors): ``` var webdriver = require(""selenium-webdriver""), 	By = webdriver.By;  var firefox = require(""selenium-webdriver/firefox"");  var options = new firefox.Options(); options.addArguments(""-headless"");  var driver = new webdriver.Builder() 	.forBrowser(""firefox"") 	.setFirefoxOptions(options) 	.build();  driver.get(""https://www.google.com/?hl=en""); // setting cookies does not work when not doing this request without cookies first  driver.manage().addCookie({name:""CONSENT"", value: ""YES+FR.en+V9+BX"", domain: "".google.com""});  driver.sleep(1000).then(function() { 	driver.get(""https://www.google.com/?hl=en"");  	driver.findElement(By.name(""q"")).sendKeys(""webdriver""); });  driver.sleep(6000).then(function() { 	driver.findElement(By.name(""btnK"")).click();  	driver.sleep(1000).then(function() { 		driver.getTitle().then(function(title) { 			console.log(title); 			if (title === ""webdriver - Google Search"") { 				console.log(""Test passed""); 			} else { 				console.log(""Test failed""); 			} 			driver.quit(); 		}); 	}); }); ```  ## Environment  OS: Linux (Lubuntu 20.04) Browser: Firefox Browser version: 80.0.1 (64-bit) Browser Driver version: geckodriver 0.27.0 (7b8c4f32cdde 2020-07-28 18:16 +0000) Language Bindings version: Node.js v10.19.0 + Selenium WebDriver 4.0.0-alpha.7 Selenium Grid version (if applicable): N/A","closed","","baptx","2020-09-12T10:40:01Z","2021-09-05T08:35:55Z"
"","8574","osx edge ServiceBuilder bug in constructor() on javascript node selenium-webdriver 4.0.0-alpha.7","## üêõ Bug Report  const EDGE_CHROMIUM_BROWSER_NAME = ""msedge""; function locateSynchronously(browserName) {   browserName = browserName || Browser.EDGE;  # üêõ Browser.EDGE is ""MicrosoftEdge""  not  ""msedge""   if (browserName === EDGE_CHROMIUM_BROWSER_NAME) {     return io.findInPath(EDGEDRIVER_CHROMIUM_EXE, true);   }   return process.platform === 'win32'       ? io.findInPath(EDGEDRIVER_LEGACY_EXE, true) : null; }  ## Environment  OS:  OSX Browser:  EDGE Browser version:  84.0.522.44 Browser Driver version:  msedgedriver_mac64_84.0.522.44 Language Bindings version:   Selenium Grid version (if applicable):","closed","","CcSimple","2020-07-27T03:04:29Z","2021-09-05T08:37:17Z"
"","7926","""Unable to take screenshot"" error on web console","## üêõ Bug Report  Clicking ""take screenshot"" button for an active session causing an error. And no screenshot displays on the browser. The error is:  ``` Unable to take screenshot. UnknownError: iVBORw0KGgoAAAANSUhEUgAAA/AAAAJ8CAYAAABZWkoZAAAAAXNSR0IArs4c6QAAIABJREFUeJzs3Xl8VOXB9vFrZpIJCVkgGwwEAmEJO4Z... ``` Screenshot: ![Capture](https://user-images.githubusercontent.com/770179/72154237-2921b100-33c1-11ea-950e-cd4e517e889a.JPG)    ## To Reproduce Use selenium standalone server 3.141.59. Create a remote session with a java client. Click Take Screenshot button for that session from web console.   Detailed steps to reproduce the behavior:  ## Expected behavior  Display the screen shot.  ## Environment  OS: Windows 10 Browser: Chrome Browser version: 79.0.3945.117 Browser Driver version: 78.0.3904.70 Language Bindings version: Java 8","closed","D-chrome,","rdonuk","2020-01-10T12:54:25Z","2021-09-05T10:20:32Z"
"","8803","chrome not reachable exception when ExpressVPN is connected","## üêõ Bug Report  chrome not reachable exception when ExpressVPN is connected.    ## To Reproduce  Connect the Express VPN All firewalls disabled Run the below code -  `from selenium.webdriver.chrome.options import Options from selenium import webdriver driver = webdriver.Chrome(options=options, executable_path='D:/chromedriver_win32/chromedriver.exe')`    ## Expected behavior  driver.get should be successful without any exceptions.  ## Actual Behavior  Below exception is thrown -   ```     D:\Assignment>python add_to_cart_v3.py  DevTools listening on ws://127.0.0.1:59948/devtools/browser/b3bea32b-25a1-47ff-800c-162e0200566a Traceback (most recent call last):   File ""add_to_cart_v3.py"", line 67, in      driver = webdriver.Chrome(options=options, executable_path=r'D:/chromedriver_win32/chromedriver.exe')   File ""C:\Users\pc\AppData\Local\Programs\Python\Python36-32\lib\site-packages\selenium\webdriver\chrome\webdriver.py"", line 81, in __init__     desired_capabilities=desired_capabilities)   File ""C:\Users\pc\AppData\Local\Programs\Python\Python36-32\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 157, in __init__     self.start_session(capabilities, browser_profile)   File ""C:\Users\pc\AppData\Local\Programs\Python\Python36-32\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 252, in start_session     response = self.execute(Command.NEW_SESSION, parameters)   File ""C:\Users\pc\AppData\Local\Programs\Python\Python36-32\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 321, in execute     self.error_handler.check_response(response)   File ""C:\Users\pc\AppData\Local\Programs\Python\Python36-32\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.WebDriverException: Message: chrome not reachable ```  ## Additional Information  When Express VPN is disconnected, everything works fine. Same issue observed in case of Firefox.  ## Environment  OS: Windows 10 Pro Browser: Chrome, Firefox Browser version: 86.0.4240.75 Browser Driver version: ChromeDriver 86.0.4240.22 Language Bindings version: python 3.6.6 32 bit  Selenium Grid version (if applicable): 3.141.0 Express VPN connected","closed","C-py,","jaspreetsinghrawel","2020-10-17T13:52:01Z","2021-09-05T08:31:22Z"
"","8322","WebSocketException in DevToolsSession","## üêõ Bug Report  Chrome Dev Tools closing web socket connection when WebDriver DevToolsSession uses default KeepAliveInterval for ClientWebSocket instance  ## To Reproduce  `var driver = new ChromeDriver();` `var session = driver.CreateDevToolsSession();` `session.Network.WebSocketFrameError += Network_WebSocketFrameError;` `session.Network.WebSocketCreated += Network_WebSocketCreated;` `session.Network.WebSocketClosed += Network_WebSocketClosed;` `session.Network.WebSocketFrameReceived += Network_WebSocketFrameReceived;` `session.Network.WebSocketFrameSent += Network_WebSocketFrameSent;` `await session.Network.Enable(new EnableCommandSettings());` `driver.Url = ""https://www.websocket.org/echo.html"";` `Console.ReadLine();` `driver.Quit();`  After some time inactivity (5-30 sec) m_sessionSocket (DevToolsSession.cs ) throw WebSocketException ""The remote party closed the WebSocket connection without completing the close handshake"" and ReceiveMessage listener catching this exception and silently terminating  ## Fix Set zero keep alive interval in DevToolsSession constructor: `m_sessionSocket = new ClientWebSocket();` `m_sessionSocket.Options.KeepAliveInterval = TimeSpan.Zero;`  ## Environment  OS: Windows 10 and Ubuntu 20.04 Browser: Chrome Browser version: 81.0.4044.138 (Official Build) (64-bit) Browser Driver version: ChromeDriver 81.0.4044.13800 Language Bindings version: .NetCore 3.1.202","closed","C-dotnet,","sergius-msv","2020-05-19T13:10:15Z","2021-09-05T08:31:33Z"
"","8331","MutableCapabilities' merge() method doesn't change proxy settings with ChromeDriver (Java)","## üêõ Bug Report  Changing proxy settings at runtime with `ChromeDriver` doesn't work as the proxy settings remain the same.  ## To Reproduce  ``` ChromeDriver driver = new ChromeDriver(new ChromeOptions().setBinary(browserBinary)     .setProxy(new Proxy().setSocksProxy(""localhost:9050"")         .setSocksVersion(5)));  driver.get(""https://example-ip-checker-service.com""); System.out.println(driver.findElement(By.id(""ip"")).getText()); //example IP: 89.76.23.1  driver.getCapabilities()     .merge(new ChromeOptions().setProxy(new Proxy().setSocksProxy(""localhost:9060"")         .setSocksVersion(5)));  driver.get(""https://example-ip-checker-service.com""); System.out.println(driver.findElement(By.id(""ip"")).getText()); //same IP as before: 89.76.23.1 ```  ## Expected behavior  I would expect the browser to change proxy server, but this doesn't happen as the IP is the same as before (the two proxies have different external IPs  ## Test script or set of commands reproducing this issue  Same as above  ## Environment  OS: Windows 10 Browser: Chrome Browser version: 81.0.4044.138 Browser Driver version: Chromedriver 81.0.4044.138 Language Bindings version: Java 4.0.0-alpha-5","closed","","deci1","2020-05-21T10:47:33Z","2020-06-24T22:17:28Z"
"","8464","Caused by: java.net.ConnectException: Failed to connect to localhost/127.0.0.1:4444","## üêõ Bug Report  Caused by: java.net.ConnectException: Failed to connect to localhost/127.0.0.1:4444 when Jenkin's job is triggered. (looks a networking issue between the containers)  ## To Reproduce 1. run Zalenium container   0.0.0.0:4444->4444/tcp, 4445/tcp  2. run Jenkins container  0.0.0.0:8080->8080/tcp, 0.0.0.0:50000->50000/tcp  3. create a maven project and push in git.  4. trigger job from Jenkins.  ##Logs org.openqa.selenium.remote.UnreachableBrowserException:  Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure. Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03' System info: host: 'da63d4e52cee', ip: '172.18.0.3', os.name: 'Linux', os.arch: 'amd64', os.version: '5.3.0-51-generic', java.version: '1.8.0_212' Driver info: driver.version: RemoteWebDriver 	at 	at com.hldoc.scenarios.Test.test(Test.java:26) Caused by: java.net.ConnectException: Failed to connect to localhost/127.0.0.1:4444 	at 	at com.hldoc.scenarios.Test.test(Test.java:26) Caused by: java.net.ConnectException: Connection refused (Connection refused) 	at com.hldoc.scenarios.Test.test(Test.java:26)  ## Expected behavior 1. Tests should run.   ## Environment OS: Linux 18 Browser:  Browser version:  Browser Driver version:  Language Bindings version:   Selenium Grid version (if applicable):","closed","needs-triaging,","shravanrai","2020-06-27T04:27:47Z","2021-09-05T09:36:34Z"
"","8212","Cannot get 'assert' messages from the 'browser' logs.","## üêõ Bug Report  Cannot get 'assert' messages from the 'browser' logs.  ## To Reproduce According to page https://github.com/SeleniumHQ/selenium/wiki/Logging Enable all levels for 'browser'  log type, then try to get 'browser' type logs by following java code  `LogEntries logs = webdriver.manage().logs().get(""browser"");`  against a page running the following javascript code  ``` function printConsoleLogs() {     console.debug('debug message');     console.info('info message');     console.warn('warn message');     console.error('error message');     console.log('log message');     console.trace('trace message');     console.assert(false, 'assert message %s', 'false'); } ```  ## Expected behavior **Get all browser's log messages (debug, info, warn, error, log, trace, assert).**  But the actual log messages are as below (the trace and assert message are missing): FINE: http://xxx/Test/testConsoleLogs.htm 8:12 ""debug message"" INFO: http://xxx/Test/testConsoleLogs.htm 9:12 ""info message"" WARNING: http://xxx/Test/testConsoleLogs.htm 10:12 ""warn message"" SEVERE: http://xxx/Test/testConsoleLogs.htm 11:12 ""error message"" INFO: http://xxx/Test/testConsoleLogs.htm 12:12 ""log message""   ## Test script or set of commands reproducing this issue  ``` LogEntries logs = WebDriver().manage().logs().get(""browser""); List entries = logs.getAll(); for(LogEntry le: entries){     System.out.println(le.getLevel()+"": ""+le.getMessage()); } ```  ## Environment  OS: Windows 10 Browser: Chrome Browser version: 80.0.3987.149 Browser Driver version: ChromeDriver 80.0.3987.149 Language Bindings version: Java 3.14.0","closed","needs-triaging,","leiwang008","2020-04-18T10:19:31Z","2021-09-05T10:20:34Z"
"","8824","WebElement.sendKeys fails to send @ sign","## üêõ Bug Report  Cannot fill inputfield with '@' sign. Instead, it pastes text from clipboard.  **element(by.name(""username"")).sendKeys(""email@address.com"");**  This way does the same: **element(by.name(""username"")).sendKeys(protractor.Key.chord(protractor.Key.CONTROL, protractor.Key.ALT, ""v""));**  This way also: **browser.actions().sendKeys(""@"").perform();**     ## To Reproduce   0. copy any text to clipboard (e.g.: 'GitHub') 1. open chrome 2. navigate to https://www.sinasave.siemens.com/en/efficientsimoticsmotors (or any other angular) 3. fill any inputfield (e.g.: motorCastingText) with something@else.com using WebElement.sendkeys() 4. check result  ## Expected behavior   EXPECTED: **something@else.com**  ERROR:  **somethingGitHubelse.com** is enterred  ## Test script or set of commands reproducing this issue  describe(""sendKeys"", () => {     it('should be able to send @ sign', async () => {         // before run, copy something to clipboard. E.g.: GitHub         // actual output: 'testGitHubemail.hu'         // expected output: 'test@email.hu'         let emailAddress = ""test@email.hu"";         let myInputfieldLocator = element(by.id(""motorCastingText""));         await browser.get(""https://www.sinasave.siemens.com/en/efficientsimoticsmotors"");         await myInputfieldLocator.sendKeys(emailAddress);         await expect(await myInputfieldLocator.getAttribute(""value"")).toBe(emailAddress);     }); }) ## Environment  OS:  Windows 10 Enterprise Browser:  Chrome  Browser version: Version 86.0.4240.111 (Official Build) (32-bit) Browser Driver version:  chromedriver_86.0.4240.22 Language Bindings version:  ZuluFX JRE 8.46.0.20 (8u252) Selenium Grid version (if applicable):   Protractor 7.0.0 webdriver-manager 12.1.7 selenium-server-standalone-3.141.59","closed","R-awaiting answer,","potej","2020-10-28T20:27:37Z","2021-09-05T08:25:08Z"
"","8226","[4.0.0-alpha5] FluentWait.java broken","## üêõ Bug Report  Both problems related with - FluentWait.until execute not in main thread.  Two problems: 1) If an error occurs in WebDriverWait - then we not have full error callstack. this is very bad. ![1_1](https://user-images.githubusercontent.com/12604192/79942062-28a0b800-8490-11ea-9092-9f4817321333.jpg) 2) From now I should pass WebDriver parameter to all methods in FluentWait.until. Because ThreadLocal variables not exist in ForkJoinPool Thread. It is very uncomfortable. ![2_selenium3](https://user-images.githubusercontent.com/12604192/79942326-c6948280-8490-11ea-8050-4b430ebda325.jpg) ![2_selenium4](https://user-images.githubusercontent.com/12604192/79942338-cb593680-8490-11ea-99fa-0c394f4f51bb.jpg)     May be it is related with following commit? https://github.com/SeleniumHQ/selenium/commit/51de5363808d6ee3c5c93cc5f36f91e17aed4ceb","closed","C-java,","kovalev007","2020-04-22T05:03:51Z","2021-09-05T08:27:40Z"
"","8356","Bluetooth Adapter Getting Default Adapter failed","## üêõ Bug Report  Bluetooth Error even if my device does have any bluetooth devices  Error Code ``` DevTools listening on ws://127.0.0.1:50591/devtools/browser/61f268a7-a72c-4f64-8c21-95eaa2be85a7  [9380:14356:0528/105523.753:ERROR:device_event_log_impl.cc(208)] [10:55:23.753] Bluetooth: bluetooth_adapter_winrt.cc:1060 Getting Default Adapter failed. ```    ## To Reproduce    Detailed steps to reproduce the behavior:  Just Copy the code and run it with chrome v 83 and selenium for chrome v83  ## Expected behavior  Should not close browser when running script  ## Test script or set of commands reproducing this issue  Here is my sample code in testing the url that i want to scrape ``` from selenium import webdriver from selenium.webdriver.common.keys import Keys from selenium.webdriver.chrome.options import Options import urllib import urllib.request import string from bs4 import BeautifulSoup import mysql.connector  options = Options() options.add_argument('--incognito') # options.add_argument('--headless') chrome_path = r""C:\chromedriver.exe"" driver = webdriver.Chrome(chrome_path,options=options)  driver.implicitly_wait(2) url = ""https://www.squarefoot.com.sg/trends-and-analysis/hdb"" driver.get(url)  login_button = driver.find_element_by_xpath('//*[@id=""ja-social""]/div/div/table/tbody/tr/td[1]/a').click()  username = driver.find_element_by_xpath('//*[@id=""username""]') password = driver.find_element_by_xpath('//*[@id=""password""]')  username.send_keys('******') password.send_keys('******')  password = driver.find_element_by_xpath('//*[@id=""password""]').send_keys(Keys.ENTER)  driver.implicitly_wait(10) ```  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS:  Windows 10 Browser:  Chrome v 83 Browser version:  Chrome v 83 Browser Driver version:  Chromedriver for v 83 Language Bindings version:  python 3.6.x Selenium Grid version (if applicable):","closed","needs-triaging,","VinceSanityyy","2020-05-28T03:12:19Z","2021-09-05T09:43:57Z"
"","8359","Attribute error when importing EventFiringWebDriver","## üêõ Bug Report  Attribute error on latest alpha in python bindings when importing EventFiringWebDriver  ## To Reproduce  ``` In [1]: from selenium.webdriver.support.event_firing_webdriver import EventFiringWebDriver --------------------------------------------------------------------------- AttributeError                            Traceback (most recent call last)  in  ----> 1 from selenium.webdriver.support.event_firing_webdriver import EventFiringWebDriver  \lib\site-packages\selenium\webdriver\support\event_firing_webdriver.py in      356     357 --> 358 WebElement.register(EventFiringWebElement)  AttributeError: type object 'WebElement' has no attribute 'register' ```  ## Expected behavior  * No import error * Unittest that catches this behavior  ## Test script or set of commands reproducing this issue  See above  ## Environment  OS:  any Browser: any Browser version: latest Browser Driver version: any Language Bindings version:  python 4.0.0a6.post1 Selenium Grid version (if applicable): None","closed","C-py,","PhilippSelenium","2020-05-29T10:17:49Z","2021-09-05T09:12:43Z"
"","8800","The 'get' timeouts command is failing when using Selenium Server","## üêõ Bug Report  Attempting to get the current timeout values is failing using seleniumServer.  I'm running a Nightwatch test with the command 'this.timeouts((result) => { console.log('timeouts:', result) })'.  In the verbose output I see this ...  ```  ‚Üí Running command: timeouts ([Function])    Request GET  /wd/hub/session/010f6e32-51c9-4509-89d0-fece900d2679/timeouts      Response 500 GET /wd/hub/session/010f6e32-51c9-4509-89d0-fece900d2679/timeouts (7ms)    {      value: {        stacktrace: '',        message: 'GET /session/010f6e32-51c9-4509-89d0-fece900d2679/timeouts\n' +          ""Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53'\n"" +          ""System info: host: 'CA01000JWL2P13L', ip: '10.17.242.242', os.name: 'Windows 10', os.arch: 'x86', os.version: '10.0', java.version: '1.8.0_201'\n"" +          'Driver info: driver.version: unknown',        error: 'unknown command'      },      status: 9 }  Error while running .getTimeouts() protocol action: unknown command ‚Äì GET /session/010f6e32-51c9-4509-89d0-fece900d2679/timeouts  timeouts: {   status: -1,   code: '',   state: '',   value: {     stacktrace: '',     message: 'GET /session/010f6e32-51c9-4509-89d0-fece900d2679/timeouts\n' +       ""Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53'\n"" +       ""System info: host: 'CA01000JWL2P13L', ip: '10.17.242.242', os.name: 'Windows 10', os.arch: 'x86', os.version: '10.0', java.version: '1.8.0_201'\n"" +       'Driver info: driver.version: unknown',     error: 'unknown command'   },   errorStatus: 9,   error: 'unknown command ‚Äì GET /session/010f6e32-51c9-4509-89d0-fece900d2679/timeouts',   httpStatusCode: 500 }   ‚Üí Completed command: timeouts ([Function]) (30ms) ```  I only have this issue when I use the standalone selenium server ...     ```  firefox_selenium: {       selenium: {         start_process: true,         port: 5555,         server_path: ""node_modules/selenium-server/lib/runner/selenium-server-standalone-3.141.59.jar""       },       desiredCapabilities: {         browserName: 'firefox',         acceptInsecureCerts: true       }     }, ```  I have no such issue when I use webdriver/geckodriver ...  ```     firefox_webdriver: {       webdriver: {         start_process: true,         server_path: 'node_modules/geckodriver/geckodriver.exe'       },       desiredCapabilities: {         browserName: 'firefox',         alwaysMatch: {           acceptInsecureCerts: true // doesn't work in Jenkins         },       }     }, ```  ## Environment  OS:  Windows 10 Browser: Chrome or Firefox (fails in both) Browser version: Chrome 85 / Firefox 81.0.2 Browser Driver version: ChromeDriver 85.0.4183.87 / GeckoDriver 0.27.0 Nightwatch version: 1.4.2","closed","","kretschmannj","2020-10-16T18:11:34Z","2021-09-05T08:27:49Z"
"","8480","Selenium Java latest (3.141.59) using okhttp3 - 3.11.0 which for Security vulnerability. Other okhttp3 versions not properly working (Under specific condition only)","## üêõ Bug Report  As you may know Selenium Java latest (3.141.59) and past versions marked okhttp3 - 3.11.0 as a transitive dependency and above issue is preventing us using Selenium Java for our project. Link: https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java/3.141.59 version  Hi Team  I am not expecting any specific action on this report. Logging this to help your team and the community. Three of my team members worked around 8 hours to come to this conclusion and putting it out there hoping it will help others......This is very specific edge case and execution env. like this may not happen to all but it's a BLOCKER for us currently.  SETUP: We are currently doing an automation project for a government client and all the Maven packages are coming via NEXUS Artifactory. It got a upstream link to Maven Central and all packages from Maven Central is scanned for known security vulnerabilities. Unfortunately the okhttp3 - 3.11.0 is blocking by Nexus to have security vulnerabilities and getting blocked.  Issue: As you may know Selenium Java latest (3.141.59) and past versions marked okhttp3 - 3.11.0 as a transitive dependency and above issue is preventing us using Selenium Java for our project. Link: https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java/3.141.59 version  Why we can't change the version: We did test latest and other versions of OKHTTP versions including 4.72 but it's not properly integrating with Selenium and test are failing for ALL Click() function as once the click is done it's not sending the result back to selenium and tests getting timeout and failing.  Above is only reproducible under very specific conditions and as below. Unfortunately this is the setup we got to work with for our execution and no way around it.  Environment Mode: HEADLESS Type: Docker container running on OpenShift IP Version: IPV6 OS: Linux REDHAT Browser: Chrome Browser version: 83.0.4103.116 Browser Driver version: 83.0.4103.39 (Linux Version) Language Bindings version: OPENJDK 8 Maven: 3.5  NOTE 1: Issue is ONLY with CLICK and all other actions are working. We have bypass the NEXUS and used selenium-java/3.141.59 with recommended okhttp3 - 3.11.0 under above conditions / Environment and all tests are working including the clicka() function.  When we change the okhttp3 version to another than 3.11.0, under above environment, and they are failing. Hence the conclusion that issue is with okhttp3. We have tested with 4.72 / 3.14.6.  -->  ## To Reproduce   Issue is ONLY with CLICK and all other actions are working. We have bypass the NEXUS and used selenium-java/3.141.59 with recommended okhttp3 - 3.11.0 under above conditions / Environment and all tests are working including the clicka() function.  When we change the okhttp3 version to another than 3.11.0, under above environment, and they are failing. Hence the conclusion that issue is with okhttp3. We have tested with 4.72 / 3.14.6.  Detailed steps to reproduce the behavior:  ## Expected behavior  Click() should work  ## Test script or set of commands reproducing this issue  Click()   ## Environment  Environment Mode: HEADLESS Type: Docker container running on OpenShift IP Version: IPV6 OS: Linux REDHAT Browser: Chrome Browser version: 83.0.4103.116 Browser Driver version: 83.0.4103.39 (Linux Version) Language Bindings version: OPENJDK 8 Maven: 3.5","closed","needs-triaging,","DannMendis","2020-07-04T23:31:29Z","2021-09-05T09:12:34Z"
"","7865","Cannot click on elements via Actions","## üêõ Bug Report  As reported [here](https://github.com/SeleniumHQ/selenium/issues/7049), the latest selenium (3.141.59) cannot click on elements when using Actions:  ``` new Actions(world.getWebDriver()).moveToElement(world.getWebDriver().findElement(By.id(""map"")), (int) x, (int) y)                                          .click()                                          .perform(); ``` We are only testing chrome so I am unsure if this affects other platforms. Reproducible both locally and on selenium grid. Not reproducible on 3.141.5.  ## To Reproduce Run the above snippet (modified appropriately) where you use `Actions` to click on an element.  ## Expected behavior The element is clicked on correctly in the browser.  ## Actual behavior Nothing is clicked.  ## Environment  OS: Ubuntu and dockerised selenium grid. Browser: Chrome, possibly others) Browser version: 79.0.3945.79 Browser Driver version: ChromeDriver 79.0.3945.36 and selenium grid Language Bindings version: Java 3.141.59 Selenium Grid version (if applicable): 3.141.59","closed","R-awaiting answer,","JamJar00","2019-12-16T10:48:56Z","2020-04-18T22:17:11Z"
"","8347","[Python] ActionChains click().perform() clicking previous elements","## üêõ Bug Report  As I asked here on StackOverflow - https://stackoverflow.com/questions/62029676/selenium-action-clicking-on-every-element-before-current Basically, if you get a list of elements and run through them in a loop, action click().perform() will click on every previous element before clicking the current one. Tested on Chromium and Firefox, same result.  ## How it should behave action.move_to_element(element).click().perform() should only click the current item of the looped list.  ## Steps to reproduce The following code is the one I'm using  ``` import time from selenium import webdriver from selenium.webdriver.common.keys import Keys from selenium.webdriver.common.action_chains import ActionChains  browser = webdriver.Chrome() browser.get(""https://getbootstrap.com/docs/4.0/examples/checkout/"") action = ActionChains(browser)  inputs = browser.find_elements_by_tag_name(""input"")  for currentInput in inputs: 	if currentInput.get_attribute(""type"") == ""text"": 		action.move_to_element(currentInput).move_by_offset(5,5).click().perform() 		currentInput.send_keys(""this is text thing"") 	time.sleep(0.2)  assert ""No results found."" not in browser.page_source time.sleep(2) browser.close() ``` Save it with any .py name and execute it with python. For firefox, add `browser.execute_script(""arguments[0].scrollIntoView(true);"", currentInput);` before the if, or it'll throw ""out of bounds exception"" on the first try. Changing the if to catch only ""radio"" type inputs will have the same problem, it'll select the first option, then 1-2, then 1-2-3.  ## Environment OS:  Ubuntu 20.04 Browser: Chromium and Firefox Browser version: 83 (Chromium) and 76 (Firefox) Browser Driver version:  Language Bindings version: Python 3.7.0  Selenium Grid version (if applicable):","closed","needs-triaging,","mistermano","2020-05-26T20:52:17Z","2021-09-05T08:34:41Z"
"","8545","Argument to open a maximized window is not preserved when opening a new window through newWindow(WindowType.WINDOW) command.","## üêõ Bug Report  Argument to open a maximized window is not preserved when opening a new window through `newWindow(WindowType.WINDOW)` command.  ## To Reproduce  When the argument `--start-maximized` is passed through an instance of `ChromeOptions` the first window opens maximized but the second window doesn't opens maximized.  ## Expected behavior  The first and the second, both the window should be opened being maximized.  ## Test script or set of commands reproducing this issue  Sample Java code:  ``` import java.util.ArrayList; import java.util.Collections; import java.util.List; import java.util.Set;  import org.openqa.selenium.WebDriver; import org.openqa.selenium.WindowType; import org.openqa.selenium.chrome.ChromeDriver; import org.openqa.selenium.chrome.ChromeOptions; import org.testng.annotations.Test;  public class OpenNewWindow { 	@Test 	public void openNewTab() { 		 		System.setProperty(""webdriver.chrome.driver"",""C:\\WebDrivers\\chromedriver.exe""); 		ChromeOptions options = new ChromeOptions(); 		options.addArguments(""--start-maximized""); 		options.setExperimentalOption(""excludeSwitches"", Collections.singletonList(""enable-automation"")); 		options.setExperimentalOption(""useAutomationExtension"", false); 		WebDriver driver = new ChromeDriver(options); 		try { 			driver.get(""https://www.google.com/""); 			driver.switchTo().newWindow(WindowType.WINDOW).get(""https://in.yahoo.com/?p=us""); 			Set handles = driver.getWindowHandles(); 			List list = new ArrayList(handles); 			System.out.println(""Window Handles are: ""+list); 		} catch (Exception e) { 			System.out.println(e.getMessage()); 		} 	} } ```  ## Environment  OS: Windows 10 Browser: Chrome  Browser version: 83.0 Browser Driver version: ChromeDriver 83.0.4103.39 Language Bindings version: Java v4.0.0-alpha-6 ![WindowType WINDOW](https://user-images.githubusercontent.com/26503213/87836675-95202d00-c8ae-11ea-8599-a089bdf75c8e.png)  Selenium Grid version (if applicable): N/A","closed","","Debanjan-B","2020-07-17T22:55:10Z","2021-09-05T08:36:06Z"
"","8845","[rb] Failed to set preferences: Unable to read profile preferences file","## üêõ Bug Report  An error occurred while initializing a firefox driver.  ## To Reproduce ``` profile = Selenium::WebDriver::Firefox::Profile.new options = Selenium::WebDriver::Firefox::Options.new(profile: profile) driver = Selenium::WebDriver.for :firefox, options: options driver.navigate.to ""https://www.google.com"" ``` ## Error ``` Failed to set preferences: Unable to read profile preferences file (Selenium::WebDriver::Error::SessionNotCreatedError) ```  Detailed steps to reproduce the behavior:  ## Expected behavior  I want to run the test on latest versions but I can't seem to pass profile argument to options. Although the document has not changed anything   ## Environment  OS: ubuntu 18.04 Browser: Firefox Browser version: 72.0.1 Browser Driver version: GeckoDriver 0.26.0  Language Bindings version: ruby 2.6.2p47 (2019-03-13 revision 67232) [x86_64-linux] Selenium Webdriver: 4.0.0.alpha6","closed","C-rb,","anhkhang2304","2020-11-05T19:05:00Z","2021-09-05T08:19:11Z"
"","7966","Chromedriver still alive after driver.close()","## üêõ Bug Report  After the driver was closed, chromedriver v. 78 still alive, but it shouldn't    ## To Reproduce    ``` from selenium import webdriver driver = webdriver.Chrome() driver.get('https://github.com/') driver.close() ```  ## Expected behavior  Chromedriver will close after `driver.close()`  ## Test script or set of commands reproducing this issue  ``` from selenium import webdriver driver = webdriver.Chrome() driver.get('https://github.com/') driver.close() ```  ## Environment  OS: Ubunru 19.04 Browser: Chrome Browser version: 78 Browser Driver version: 78.0.3904.105  Language Bindings version: Python 3.7","closed","","amarynets","2020-01-28T06:18:24Z","2020-02-28T07:12:00Z"
"","7919","Unable to interact with elements on some specific iframes due to: {InvalidArgumentException}Message: invalid argument: Unsupported locator strategy: null","## üêõ Bug Report  After switching to a specific iframe, if I'll try to interact with any element within it, it would be noticed that the following error is received: {InvalidArgumentException}Message: invalid argument: Unsupported locator strategy: null    ## To Reproduce Switch to an iframe Try to interact with elements   ## Expected behavior  The user is able to interact with elements while using chrome driver  ## Environment  OS: Windows 10 Browser: Chrome Browser version: .: 79.0.3945.88 Browser Driver version:  ChromeDriver 79 Language Bindings version: Python 3.6.7","closed","needs-triaging,","CusHoria","2020-01-09T09:14:27Z","2020-04-15T08:45:51Z"
"","8159","[4.0.0-alpha5] Selenium creates never ending Thread","## üêõ Bug Report  After simply starting and quiting the webdriver, the browser started and quitted normally. But just the program never ends after running all the steps. I found that there is dead thread (AsyncHttpClient) left running.  ## Detail steps  My simple program: ```java import org.openqa.selenium.WebDriver; import org.openqa.selenium.firefox.FirefoxDriver; public class SeleniumTestChromiumEdge {     public static void main(String[] args) {         WebDriver driver = new FirefoxDriver();         System.out.println(""Before quit"");         driver.quit();         System.out.println(""After quit"");     } } ```  Callstack before `WebDriver driver = new xxxxDriver();`: ![image](https://user-images.githubusercontent.com/25053707/78382173-fa565800-7608-11ea-9a83-37ca6d5acbc6.png)  Callstack after `WebDriver driver = new xxxxDriver();`: ![image](https://user-images.githubusercontent.com/25053707/78382373-57eaa480-7609-11ea-8ccc-49e86a2158ab.png)  Callstack after `driver.quit();`: ![image](https://user-images.githubusercontent.com/25053707/78382958-30480c00-760a-11ea-9aa2-8de5a9b29014.png)  After program ends: ![image](https://user-images.githubusercontent.com/25053707/78383684-5b7f2b00-760b-11ea-8006-b0e7d8727535.png)  Console output: (e.g. Firefox driver) ``` 1585930423908   mozrunner::runner       INFO    Running command: ""C:\\Program Files\\Mozilla Firefox\\firefox.exe"" ""-marionette"" ""-foreground"" ""-no-remote"" ""-profile"" ""C:\\Users\\TSZCHU~1\\AppData\\Local\\Temp\\rust_mozprofilezIRvii"" 1585930424530   addons.webextension.doh-rollout@mozilla.org     WARN    Loading extension 'doh-rollout@mozilla.org': Reading manifest: Invalid extension permission: networkStatus 1585930425313   addons.webextension.screenshots@mozilla.org     WARN    Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons 1585930425314   addons.webextension.screenshots@mozilla.org     WARN    Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry 1585930425314   addons.webextension.screenshots@mozilla.org     WARN    Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/ 1585930425314   addons.webextension.screenshots@mozilla.org     WARN    Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader* JavaScript error: resource://gre/modules/XULStore.jsm, line 66: Error: Can't find  profile directory. 1585930428409   Marionette      INFO    Listening on port 49442 1585930428628   Marionette      WARN    TLS certificate errors will be ignored for this session 4Êúà 04, 2020 12:13:48 ‰∏äÂçà org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: W3C Before quit After quit ```  I have tried for ChromeDriver, FirefoxDriver and EdgeDriver, in VS Code and Eclipse. Still the same problem.  This problem does not exist when running the same code with v3.14159.  Compare to the callstack from v3.14159 (after starting the driver): ![image](https://user-images.githubusercontent.com/25053707/78385988-56bc7600-760f-11ea-8b3e-4b1483fa957e.png)  ## Expected behavior  The program should ends.  ## Environment  OS: Windows 10 Browser: - Chrome Version 80.0.3987.163 (Official Build) (64-bit) - Firefox 74.0 (64-bit) - Microsoft Edge 80.0.361.109 (Official build) (64-bit) Browser Driver version: All in respective versions Language Bindings version: 4.0.0-alpha-5 IDE: Tried in VS Code and Eclipse","closed","C-java,","carsonwah","2020-04-03T16:45:36Z","2021-09-05T08:15:38Z"
"","8271","[NodeJS] ie.ensureCleanSession not working","## üêõ Bug Report  Adding capability `ie.ensureCleanSession` for IE is not working.  Don't know if it's related, but I've tried: - Run command prompt in Administrator Mode - Uncheck 'Enable Protected Mode' in all tab/section  ## To Reproduce Detailed steps to reproduce the behavior:  - Run the script below, it will output driver capability.  ## Expected behavior  `ie.ensureCleanSession` should be `true`  ## Test script or set of commands reproducing this issue  ```javascript  const webdriver = require('selenium-webdriver');  (async function () {     let driver = await new webdriver.Builder()         .withCapabilities({             'ie.ensureCleanSession': true,         })         .forBrowser('internet explorer', '11')         .build();      console.log(await driver.getCapabilities()); })(); ```  ## Environment  OS: Windows 10 v1903 build 18362.778 64-bit Browser: Internet Explorer Browser version: IE 11.778.18362.0 Browser Driver version: IEDriverServer.exe 3.150.1.0 (32-bit) Language Bindings version: NodeJS v12.16.3 Selenium Grid version (if applicable): -","closed","needs-triaging,","Tae69","2020-05-05T10:58:27Z","2021-09-05T10:02:56Z"
"","7913","ActionChains does not reset actions","## üêõ Bug Report  ActionChains does not reset actions.  ## To Reproduce  Drag and drop  Detailed steps to reproduce the behavior:  All elements drag and drop every loop iteration  ## Expected behavior  Reset actions and do one drag and drop for each iteration  ## Test script or set of commands reproducing this issue  ``` from selenium import webdriver from selenium.webdriver.common.action_chains import ActionChains  driver = webdriver.Chrome() actions = ActionChains(driver)  driver.get('http://www.dhtmlgoodies.com/scripts/drag-drop-custom/demo-drag-drop-3.html')  countries = {     ""Italy"": ""Rome"",     ""Spain"": ""Madrid"",     ""Norway"": ""Oslo"",     ""Denmark"": ""Copenhagen"",     ""South Korea"": ""Seoul"",     ""Sweden"": ""Stockholm"",     ""United States"": ""Washington"", }  for country in countries:     country_box = driver.find_element_by_xpath(f""//div[.='{country}']"")     capital_box = driver.find_element_by_xpath(f""//div[.='{countries[country]}' and contains(@id, 'box')]"")     actions.drag_and_drop(capital_box, country_box).perform()     actions.reset_actions() ```  ## Environment  **OS**: macOS Catalina Version 10.15.2  **Language Bindings version**: Python 3.141.0  **Browser**: Chrome **Browser version**: 79.0.3945.88 (Official Build) (64-bit) **Browser Driver version**: ChromeDriver 79.0.3945.36  **Browser**: Firefox **Browser version**: 72.0.1 (64-bit) **Browser Driver version**: geckodriver v0.26.0, v0.21.0","closed","needs-triaging,","bayilyas","2020-01-05T16:06:36Z","2020-03-17T14:06:28Z"
"","8324","Nodes can be registered more than once","## üêõ Bug Report  A node can be registered more than one time to a distributor/hub in Selenium Grid 4.x    ## To Reproduce  Start the whole Grid:  ``` java -jar selenium_server_deploy.jar router --sessions http://localhost:5556 --distributor http://localhost:5553 java -jar selenium_server_deploy.jar distributor --sessions http://localhost:5556 java -jar selenium_server_deploy.jar sessions java -jar selenium_server_deploy.jar node ```  Then kill the node and start it again, the distributor logs will show this:  ``` 17:01:14.656 INFO [DistributorServer.execute] - Started Selenium distributor 4.0.0-alpha-5 (revision 72e76499a6*): http://192.168.1.7:5553 17:02:43.991 INFO [LocalDistributor.refresh] - Creating a new remote node for http://192.168.1.7:5555 17:02:44.252 INFO [LocalDistributor.add] - Added node 0c71058d-60af-43ef-9317-9796ce28606f. 17:02:44.262 INFO [Host.lambda$new$0] - Changing status of node 0c71058d-60af-43ef-9317-9796ce28606f from DOWN to UP. Reason: http://192.168.1.7:5555 is ok 18:36:53.898 INFO [LocalDistributor.refresh] - Creating a new remote node for http://192.168.1.7:5555 18:36:54.048 INFO [LocalDistributor.add] - Added node 7c5d6853-ebb2-43fa-99f7-6ecd1bea0d8f. 18:36:54.057 INFO [Host.lambda$new$0] - Changing status of node 7c5d6853-ebb2-43fa-99f7-6ecd1bea0d8f from DOWN to UP. Reason: http://192.168.1.7:5555 is ok 18:37:32.055 INFO [LocalDistributor.refresh] - Creating a new remote node for http://192.168.1.7:5555 18:37:32.202 INFO [LocalDistributor.add] - Added node a4a8e046-af99-4b64-aedb-36cf315b3710. 18:37:32.210 INFO [Host.lambda$new$0] - Changing status of node a4a8e046-af99-4b64-aedb-36cf315b3710 from DOWN to UP. Reason: http://192.168.1.7:5555 is ok ```  and the status endpoint will look like this: ```json {   ""value"": {     ""ready"": true,     ""message"": ""Selenium Grid ready."",     ""nodes"": [       {         ""id"": ""a4a8e046-af99-4b64-aedb-36cf315b3710"",         ""uri"": ""http:\u002f\u002f192.168.1.7:5555"",         ""maxSessions"": 37,         ""stereotypes"": [           {             ""capabilities"": {               ""browserName"": ""operablink""             },             ""count"": 12           },           {             ""capabilities"": {               ""browserName"": ""safari""             },             ""count"": 1           },           {             ""capabilities"": {               ""browserName"": ""chrome""             },             ""count"": 12           },           {             ""capabilities"": {               ""browserName"": ""firefox""             },             ""count"": 12           }         ],         ""sessions"": [         ]       },       {         ""id"": ""a4a8e046-af99-4b64-aedb-36cf315b3710"",         ""uri"": ""http:\u002f\u002f192.168.1.7:5555"",         ""maxSessions"": 37,         ""stereotypes"": [           {             ""capabilities"": {               ""browserName"": ""operablink""             },             ""count"": 12           },           {             ""capabilities"": {               ""browserName"": ""safari""             },             ""count"": 1           },           {             ""capabilities"": {               ""browserName"": ""chrome""             },             ""count"": 12           },           {             ""capabilities"": {               ""browserName"": ""firefox""             },             ""count"": 12           }         ],         ""sessions"": [         ]       },       {         ""id"": ""a4a8e046-af99-4b64-aedb-36cf315b3710"",         ""uri"": ""http:\u002f\u002f192.168.1.7:5555"",         ""maxSessions"": 37,         ""stereotypes"": [           {             ""capabilities"": {               ""browserName"": ""operablink""             },             ""count"": 12           },           {             ""capabilities"": {               ""browserName"": ""safari""             },             ""count"": 1           },           {             ""capabilities"": {               ""browserName"": ""chrome""             },             ""count"": 12           },           {             ""capabilities"": {               ""browserName"": ""firefox""             },             ""count"": 12           }         ],         ""sessions"": [         ]       }     ]   } } ```  ## Expected behavior  A node should be registered only once  ## Environment  OS: Any Browser: N/A Browser version: N/A Browser Driver version: N/A Language Bindings version: N/A Selenium Grid version (if applicable): 4 Alpha 5","closed","C-grid,","diemol","2020-05-19T16:42:10Z","2021-09-05T09:43:59Z"
"","7900","C#. A GetLog(LogType.Browser); throw an error 'object reference not set to an instance of an object'","## üêõ Bug Report  A GetLog(LogType.Browser); throw an error 'object reference not set to an instance of an object'  -->  ## To Reproduce ChromeOptions copts = new ChromeOptions(); copts.SetLoggingPreference(LogType.Browser, LogLevel.All); var service = ChromeDriverService.CreateDefaultService(browserpath); service.LogPath = browserpath+""\chromedriver.log""; service.EnableVerboseLogging = true; WebDriver = new ChromeDriver(service, copts)  var logEntry = WebDriver.Manage().Logs.GetLog(LogType.Browser); ChromeDriver version 79.0.3945.3600 Please help  ## Environment  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:   Selenium Grid version (if applicable):","closed","I-stale,","manbadalyan","2019-12-30T13:03:39Z","2022-03-16T00:09:42Z"
"","8259","Cross-Site Scripting (XSS) in hub's web interface","## üêõ Bug Report  A cross-site scripting (XSS) vulnerability exists in Selenium Grid hub's web interface. The vulnerability is located in /grid/console page where unvalidated user input from node's configuration is displayed back to the users.   ## To Reproduce A node can register to a hub using the following configuration file, where an XSS payload is given in the hub parameter. Since the payload is written as a URL GET parameter value, the node is still be able to register to the hub. ![selenium_xss3](https://user-images.githubusercontent.com/19292195/80546145-99c6fa80-89bd-11ea-9da9-fa33f13aaae7.png) Once the hub's web interface is opened, injected JavaScript code is executed on the user's browser, as shown below. ![selenium_xss1](https://user-images.githubusercontent.com/19292195/80546316-fde9be80-89bd-11ea-96dd-3507be8f72ea.png) Also, injected JavaScript code can be seen by inspecting the page source. ![selenium_xss2](https://user-images.githubusercontent.com/19292195/80546344-0b9f4400-89be-11ea-9fab-906903a7766d.png)  ## Expected behavior  The contents of configuration file should be encoded before being displayed to users.  ## Environment  The vulnerability exists regardless of the environment.  The test is done using Selenium Grid v3.141.59.","closed","C-grid,","mleblebici","2020-04-28T23:09:44Z","2020-06-24T21:40:07Z"
"","8201","Insecure Certificate error with Geckodriver","## üêõ Bug Report  A clear and concise description of what the bug is. I am unable to bypass Insecure Certificate issue.  ## To Reproduce C# from selenium dotnet 3.14, webdriver net45 (I tried also net35)  	OpenQA.Selenium.Firefox.FirefoxProfile ffProfile = new OpenQA.Selenium.Firefox.FirefoxProfile(); 	ffProfile.AcceptUntrustedCertificates = true; 	ffProfile.AssumeUntrustedCertificateIssuer = false; 	     OpenQA.Selenium.Firefox.FirefoxOptions ffOptions = new OpenQA.Selenium.Firefox.FirefoxOptions();  	ffOptions.SetPreference(""AcceptInsecureCerts"", true);         ffOptions.SetPreference(""AcceptUntrustedCertificates"", true); 	ffOptions.SetPreference(""AssumeUntrustedCertificateIssuer"", false);	 	ffOptions.Profile = ffProfile; 	 	OpenQA.Selenium.Firefox.FirefoxDriverService service = OpenQA.Selenium.Firefox.FirefoxDriverService.CreateDefaultService(); 	service.HideCommandPromptWindow = false; 	 	     OpenQA.Selenium.Firefox.FirefoxDriver driver = new OpenQA.Selenium.Firefox.FirefoxDriver(service, ffOptions, TimeSpan.FromSeconds(120));  driver.Navigate().GoToUrl(Url); ## I navigate towards my companies internal web. I was asked to automate voucher upload there.  What is strange is that it seems to work. When i go to the profile directory in AppData and open user.js I see this:  user_pref(""webdriver_accept_untrusted_certs"", true); user_pref(""webdriver_assume_untrusted_issuer"", false); user_pref(""AcceptInsecureCerts"", true); user_pref(""AcceptUntrustedCertificates"", true); user_pref(""AssumeUntrustedCertificateIssuer"", false);  In pref.js is this: user_pref(""webdriver_accept_untrusted_certs"", true); user_pref(""webdriver_assume_untrusted_issuer"", false); user_pref(""AcceptInsecureCerts"", true); user_pref(""AcceptUntrustedCertificates"", true); user_pref(""AssumeUntrustedCertificateIssuer"", false);  But this has no impact on behaviour once Mozzila starts up and navigates toward the company page it crashes.  ## Expected behavior It's expected that when I sett accept inseucre certs to true and don't assume insecure issuer to false, that geckodriver doesn't throw InsecureCertificate error and stops code execution.   ## Environment  OS: Windows 10 Browser: Firefox 75 (64bit) Browser Driver version: GeckoDriver 0.26 Win64 Language Bindings version: C#  Questions: 1. What am I doing wrong? 2. Can I load security exceptions on startup? I wouldn't mind such a workaround if nobody knows what is wrong wiht my approach :)","closed","needs-triaging,","stefko18","2020-04-16T09:34:29Z","2021-09-05T10:20:32Z"
"","8229","Empty logs for Selenium 4 alpha 5 when using RemoteWebdriver","## üêõ Bug Report  A clear and concise description of what the bug is.  When using latest Selenium 4 image with RemoteWebdriver and chrome standalone  4.0.0-alpha-5-20200326 docker image all kind of logs are empty. Problem does not exists in case of using local chrome browser (ver  80.0.3987.149 ).  ## To Reproduce  1. Run standalone chrome docker image from docker hub with selenium 4 2. Run tests against image using RemoteWebdriver 3. Get logs AvailableLogTypes  count returns 0  Detailed steps to reproduce the behavior:  ## Expected behavior  There should be 5 types of logs, and at least 2 of them shouldn't be empty (Browser and Driver) - like in case of running this against regular Chrome browser.  ## Test script or set of commands reproducing this issue      public class RemoteWebriverTests : IDisposable     {         private readonly IWebDriver _driver;          public RemoteWebriverTests()         {             var chromeOptions = new ChromeOptions();             _driver = new RemoteWebDriver(new Uri(""http://localhost:4444/""), chromeOptions);         }          [Fact]         public void GetLogsFromChrome()         {             _driver.Navigate().GoToUrl(""http://www.youtube.com"");             Thread.Sleep(5000);             Assert.True(_driver.Manage().Logs.AvailableLogTypes.Count > 0);         }          public void Dispose()         {             _driver.Quit();         }     }  ## Environment  OS: Windows 10 Browser: Chrome Browser version: 80.0.3987.149 Docker image version: 4.0.0-alpha-5-20200326 Browser Driver version: 80.0.3987.10600 Language Bindings version: .net core 3.1 Selenium Grid version : 4.0.0-alpha-5","closed","C-remote,","szamacz","2020-03-27T11:40:16Z","2022-06-25T00:11:39Z"
"","8303","Office 365 - Excel Online Automation with C#","## üêõ Bug Report  A clear and concise description of what the bug is.  We are writing UI test automation scripts, where, we need to add some contents to excel online opened in the browser. We are using Selenium Automation. Please let us know if we can access excel online through C# code.  I tried below. But, getting element not found exception when finding the name box.  Please suggest whether it can be supported or not. If supported, please help us to achieve,  ## To Reproduce  ` IWebDriver webDriver = new ChromeDriver(); webDriver.Manage().Window.Maximize(); webDriver.Navigate().GoToUrl(""Online-Excel-URL""); var nameBox = webDriver.FindElement(By.Id(""m_excelWebRenderer_ewaCtl_NameBox"")); nameBox.SendKeys(""B250""); nameBox.SendKeys(Keys.Enter); var formulaBar = webDriver.FindElement(By.Id(""formulaBarTextDivId_textElement"")); `  Detailed steps to reproduce the behavior:  ## Expected behavior  A clear and concise description of what you expected to happen.  ## Test script or set of commands reproducing this issue   ![image](https://user-images.githubusercontent.com/65273444/81780371-0bea2400-9514-11ea-9532-bac5251a3047.png)  **Stack Trace** ![image](https://user-images.githubusercontent.com/65273444/81780639-7d29d700-9514-11ea-8663-2cca93b14e97.png)  **Message** ![image](https://user-images.githubusercontent.com/65273444/81780686-93379780-9514-11ea-9362-2bdcafc5dd84.png)   ## Environment  OS: Windows 10 Browser: Chrome Browser version: 81.0.4044.138 (Official Build) (64-bit) Browser Driver version: ChromeDriver  81.0.0 Language Bindings version: C# Selenium Grid version (if applicable): NA","closed","needs-triaging,","kiran-ch","2020-05-13T07:11:51Z","2021-09-05T10:02:51Z"
"","8805","grid/api/ not working in Selenium alpha 6","## üêõ Bug Report  A clear and concise description of what the bug is.  In previous Selenium versions, after I start selenium web driver, I programatically got the IP of the node on which the tests is currently executed  ## Expected behavior return the IP of the node on which the test is being executed  ## Test script or set of commands reproducing this issue  HttpHost host = new HttpHost(hostName, port);   CloseableHttpClient client = HttpClientBuilder.create().build();  URI testSessionURI = URI.create(String.format(""http://%s:%s/grid/api/testsession?session=%s"", hostName, port, ((RemoteWebDriver) driver).getSessionId()));   HttpGet r = new HttpGet(testSessionURI); String responseString=  EntityUtils.toString(client.execute(host,r).getEntity());  Or refer to: https://rationaleemotions.wordpress.com/2016/01/15/where-did-my-test-run/  ## Environment  OS: Windows 7 Browser:  Browser version:  Browser Driver version: 3.150.1 Language Bindings version: IE 11.0.9600.19356 Selenium Grid version : Grid 4 [(4.0.0-alpha-6)](url)","closed","needs-triaging,","hnestorova","2020-10-18T09:51:58Z","2021-09-05T08:25:06Z"
"","8726","shadowroot via execute script not working in powershell.","## üêõ Bug Report  A clear and concise description of what the bug is.  If the issue is with Google Chrome consider logging an issue with chromedriver instead: https://chromedriver.chromium.org/help ^i have also done this just in case...  ## Expected behavior  A clear and concise description of what you expected to happen. When trying to get a shadowroot within powershell it always returns null even though the path has been verified and is correct..  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ExecuteScript is not working in powershell? i have tried quite a few different versions of selenium using the latest .net frameworks possible for each version.  ``` function expandShadow($element){[OpenQA.Selenium.Remote.RemoteWebElement]$s_root = $ChromeDev.ExecuteScript(""return arguments[0].shadowroot"", $element); return $s_root;} $initRoot = $ChromeDev.FindElementByTagName(""sn-workspace-content"") #<---works $shadow1 = expandShadow($initRoot) $shadow1.gettype() #<---null???? ```  ``` html is like this:     #shadow-root (open) <---can't see in here... ```  ``` a more direct approach with the same result: $ChromeDev.ExecuteScript(""return document.getElementsByTagName('sn-workspace-content').shadowroot"" ^ returns null $ChromeDev.ExecuteScript(""return document.getElementsByTagName('sn-workspace-content')"" ^returns correctly "".shadowroot is not working in powershell!"" ```  ## Environment  OS: Windows 10 Browser: Chrome Browser version: 85.0.4183.121 64-bit Browser Driver version: 85.0.4183.37 (latest avaiable...) Language Bindings version: PowerShell Win 10  Selenium Grid version (if applicable): TRIED TONS OF VERSIONS","closed","needs-triaging,","ziron999","2020-09-22T23:54:03Z","2021-09-05T08:34:44Z"
"","8272","Importing 'SeleniumLibrary' into RobotFramework failed with syntaxError: invalid syntax (StringIO.py)","## üêõ Bug Report  A clear and concise description of what the bug is.    ## To Reproduce [ ERROR ] Error in file 'I:\development\robot-scripts\first-script\Resources\Common.robot' on line 2: Importing test library 'SeleniumLibrary' failed: SyntaxError: inva lid syntax (StringIO.py, line 40) Traceback (most recent call last): File ""i:\python\lib\site-packages\SeleniumLibrary_init_.py"", line 28, in from SeleniumLibrary.keywords import (AlertKeywords, File ""i:\python\lib\site-packages\SeleniumLibrary\keywords_init_.py"", line 17, in from .alert import AlertKeywords File ""i:\python\lib\site-packages\SeleniumLibrary\keywords\alert.py"", line 18, in from selenium.webdriver.support import expected_conditions as EC File ""i:\python\lib\site-packages\selenium\webdriver_init_.py"", line 18, in from .firefox.webdriver import WebDriver as Firefox # noqa File ""i:\python\lib\site-packages\selenium\webdriver\firefox\webdriver.py"", line 29, in from selenium.webdriver.remote.webdriver import WebDriver as RemoteWebDriver File ""i:\python\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 26, in from .webelement import WebElement File ""i:\python\lib\site-packages\selenium\webdriver\remote\webelement.py"", line 37, in from StringIO import StringIO as IOStream PYTHONPATH: I:\Python\Scripts\robot.exe i:\python\python38.zip i:\python\DLLs i:\python\lib i:\python i:\python\lib\site-packages   Detailed steps to reproduce the behavior:  ## Expected behavior  A clear and concise description of what you expected to happen.  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment Robotframework 3.2.1, Python 3.8.2, Seleniumlibrary 4.4.0, Windows10, browser drivers up-to-date. In Pycharm, Settings, Python Interpreter, updates all libs (May 5) 7 or 8 days ago it still worked (~April 27-28)  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:   Selenium Grid version (if applicable):","closed","C-py,","TimKoomen","2020-05-05T11:29:49Z","2021-09-05T10:02:57Z"
"","7915","We are getting an error with Action Class","## üêõ Bug Report  A clear and concise description of what the bug is.    ## To Reproduce    Detailed steps to reproduce the behavior: Select any element and move to the element using Action Class.  ## Expected behavior Page should focus on the element and take us to the element if the element is found.  ## Test script or set of commands reproducing this issue Actions act = new Actions(driver); act.MoveToElement(element); act.Perform();  **Error occurs on Perform()**  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS: Windows 10 Browser:  Chrome Browser version:  Browser Driver version: ChromeDriver 79.0.3945.3600 Language Bindings version:  C# Selenium Grid version (if applicable):  NO  We were using Action Class to move to the element which was working fine till 1 or 2 days ago. Now, we are getting an error related to DOM. Actions act = new Actions(driver); act.MoveToElement(element); act.Perform(); ** -- Error at this**  Error:  error: javascript error: Failed to execute 'elementsFromPoint' on 'Document': The provided double value is non-finite.   (Session info: chrome=79.0.3945.88)","closed","","dasre21","2020-01-07T05:22:02Z","2020-02-09T05:11:05Z"
"","7958","Selenium WebDriver some url is not working","## üêõ Bug Report  A clear and concise description of what the bug is.    ## To Reproduce    Detailed steps to reproduce the behavior: ``` driver.get(                 'https://www.ccp.my-hosting-panel.com/Default.aspx?pid=Login&ReturnUrl=%2fDefault.aspx%3fpid%3dSpaceMailAccounts%26mid%3d102%26ctl%3dedit_item%26ItemID%3d1927293%26SpaceID%3d89439') ``` For more info please follow below link https://stackoverflow.com/questions/33945853/selenium-webdriver-some-url-is-not-working ## Expected behavior  A clear and concise description of what you expected to happen. It only display error page  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS:  OSX Browser:  : Browser version:  Browser Driver version: https://pypi.org/project/webdriver-manager/ Language Bindings version:  Python Selenium Grid version (if applicable):","closed","needs-triaging,","saileshkush95","2020-01-24T06:03:59Z","2020-02-23T18:56:40Z"
"","8718","Selenium 3 gives extension error when trying with edge Chromium","## üêõ Bug Report  A clear and concise description of what the bug is.    ## To Reproduce    Detailed steps to reproduce the behavior:  ## Expected behavior  Still being selenium 4 alpha version , selenium 3 not supporting edge chromium which gets automated extension issur  ## Test script or set of commands reproducing this issue  Please provide experimental option in selenium 3 with chromium adaption since selenium 4 not released yet we need to use selenium 3 only  ## Environment  OS:  Browser: edge chromium Browser version: 84 Browser Driver version: msedgedriver Language Bindings version:   Selenium Grid version (if applicable):","closed","needs-triaging,","aarthi30","2020-09-19T04:28:44Z","2021-09-05T08:34:57Z"
"","8601","Some elements in interface - free mode have null values, which are normal if not used","## üêõ Bug Report  A clear and concise description of what the bug is.    ## To Reproduce    Detailed steps to reproduce the behavior:  ## Expected behavior  A clear and concise description of what you expected to happen.  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:   Selenium Grid version (if applicable):","closed","needs-triaging,","vvanglro","2020-08-04T09:37:56Z","2021-09-05T09:02:47Z"
"","8156","RemoteWebDriverÊÆã‰ΩôÂ§ßÈáèÊú™ÂÖ≥Èó≠ÊµèËßàÂô®ËøõÁ®ãÂØºËá¥Êú∫Âô®Âç°Ê≠ª","## üêõ Bug Report  A clear and concise description of what the bug is.    ## To Reproduce    Detailed steps to reproduce the behavior:  ## Expected behavior  A clear and concise description of what you expected to happen.  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:   Selenium Grid version (if applicable):","closed","needs-triaging,","jjqi92","2020-04-03T11:16:07Z","2020-05-05T21:18:43Z"
"","7898","org.openqa.selenium.JavascriptException: javascript error: Cannot read property 'left' of undefined","## üêõ Bug Report  A clear and concise description of what the bug is.    ## To Reproduce    Detailed steps to reproduce the behavior:  ## Expected behavior  A clear and concise description of what you expected to happen.  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:   Selenium Grid version (if applicable):","closed","needs-triaging,","xiaojieonly","2019-12-30T06:48:34Z","2020-01-29T07:52:21Z"
"","8759","Actions not working when PageFactory initElements using FieldDecorator with EventFiringWebDriver with eventListener","## üêõ Bug Report  A clear and concise description of what the bug is.  ## To Reproduce A very easy case: start google home page and click on logo picture. // public class SeleniumTest {     protected WebDriver driver;      @FindBy(id = ""hplogo"")     private WebElement logo;      public SeleniumTest() {         System.setProperty(""webdriver.chrome.driver"", ""D:/chromedriver_810.exe"");         driver = new ChromeDriver();         EventFiringWebDriver eventHandler = new EventFiringWebDriver(driver);         driver = eventHandler.register(new WebDriverEventCapture());         PageFactory.initElements(new DefaultFieldDecorator(new DefaultElementLocatorFactory(driver)), this);     }      public void checkFields() {         driver.get(""https://www.google.com"");         new Actions(driver).moveToElement(logo).click(logo).build().perform();     }      public static void main(String[] args) {         new SeleniumTest().checkFields();     } }  // --> Regardless what in the listener, the Programm fails after run immediately by Action Perform. Starting ChromeDriver 81.0.4044.138 (8c6c7ba89cc9453625af54f11fd83179e23450fa-refs/branch-heads/4044@{#999}) on port 26480 Only local connections are allowed. Please protect ports used by ChromeDriver and related test frameworks to prevent access by malicious code. Okt 02, 2020 6:07:10 PM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: W3C ******************* Exception in thread ""main"" java.lang.ClassCastException: com.sun.proxy.$Proxy6 cannot be cast to org.openqa.selenium.interactions.internal.Locatable 	at org.openqa.selenium.interactions.Actions.moveToElement(Actions.java:388) 	at testFramework.SeleniumTest.checkFields(SeleniumTest.java:30) 	at testFramework.SeleniumTest.main(SeleniumTest.java:34)  Process finished with exit code 1 ******************  ## Environment  OS:  Windows 10 64bit Browser: Chrome Browser version:  81.0.4044.113 Browser Driver version: ChromeDriver  81.0.4044.138 Language Bindings version: Java 3.141.59","closed","needs-triaging,","sleod","2020-10-02T16:12:53Z","2021-09-05T08:34:41Z"
"","8809","It seems a bug for chrome driver","## üêõ Bug Report  A clear and concise description of what the bug is.  ## To Reproduce 1. In Ruby IDE ,RubyMine,select the Ruby SDK version 2.7 2. the code snippet is simply as follows require ""selenium-webdriver"" Selenium::WebDriver::Chrome::Service.driver_path = ""D:/Ruby-Project/Hello-World/chromedriver.exe"" driver = Selenium::WebDriver.for :chrome  driver.navigate.to ""http://www.baidu.com""  driver.quit  Detailed steps to reproduce the behavior:  ## Expected behavior  The chrome browser will start and close again  ## Environment  OS:  Browser: Chrome Browser version: Version 85.0.4183.121 (Official Build) (64-bit) Browser Driver version: Chrome Driver version 85 Language Bindings version: Ruby 2.7 Selenium Grid version (if applicable):selenium-webdriver (3.142.7, 3.142.3) ## ERROR Behavior:  Traceback (most recent call last):         9: from D:/Ruby-Project/Hello-World/demo.rb:16:in `'         8: from D:/Ruby/Ruby27-x64/lib/ruby/gems/2.7.0/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver.rb:88:in `for'         7: from D:/Ruby/Ruby27-x64/lib/ruby/gems/2.7.0/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/common/driver.rb:46:in `for'         6: from D:/Ruby/Ruby27-x64/lib/ruby/gems/2.7.0/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/common/driver.rb:46:in `new'         5: from D:/Ruby/Ruby27-x64/lib/ruby/gems/2.7.0/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/chrome/driver.rb:40:in `initialize'         4: from D:/Ruby/Ruby27-x64/lib/ruby/gems/2.7.0/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/common/driver.rb:303:in `service_url'         3: from D:/Ruby/Ruby27-x64/lib/ruby/gems/2.7.0/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/common/service.rb:108:in `start'         2: from D:/Ruby/Ruby27-x64/lib/ruby/gems/2.7.0/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/common/socket_lock.rb:41:in `locked'         1: from D:/Ruby/Ruby27-x64/lib/ruby/gems/2.7.0/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/common/service.rb:111:in `block in start' D:/Ruby/Ruby27-x64/lib/ruby/gems/2.7.0/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/common/service.rb:200:in `connect_until_stable': unable to connect to chromedriver 127.0.0.1:9515 (Selenium::WebDriver::Error::WebDriverError)  Process finished with exit code 1   Firefox does NOT have this problem, working perfectly","closed","R-awaiting answer,","ThomasSun001","2020-10-20T10:16:29Z","2021-09-05T08:30:24Z"
"","8185","potential null pointer dereference in UploadFile.java","## üêõ Bug Report  A clear and concise description of what the bug is.   In ```UploadFile.java``` (/java/server/src/org/openqa/selenium/remote/server/handler/UploadFile.java), line 50 if ```allFiles``` equals to ```null``` the expression ```allFiles.length``` will throw a null pointer at line 52  ## To Reproduce Detected by our static analysis tool.   ## Expected behavior null pointer is not thrown  ## Test script or set of commands reproducing this issue Again it's detected our static analysis algorithm  ## Environment Any environment  We are developing a new static analysis tool for catching bugs in Java code. Would you please take a look and confirm this is indeed a bug? Thanks a million!!!","closed","needs-triaging,","HermioneSW","2020-04-09T01:27:46Z","2020-05-20T22:18:17Z"
"","8183","potential null pointer dereference in DeviceRotation.java","## üêõ Bug Report  A clear and concise description of what the bug is.   In ```DeviceRotation.java``` (/java/client/src/org/openqa/selenium/DeviceRotation.java), line 52 ```DeviceRotation``` function when ```map``` is ```null``` at line 53, the if body will be executed which will trigger a bug in ```map.toString()``` at line 55.  ## To Reproduce Detected by our static analysis tool.   ## Expected behavior null pointer is not thrown  ## Test script or set of commands reproducing this issue Again it's detected our static analysis algorithm  ## Environment Any environment  We are developing a new static analysis tool for catching bugs in Java code. Would you please take a look and confirm this is indeed a bug? Thanks a million!!!","closed","needs-triaging,","HermioneSW","2020-04-09T01:24:57Z","2020-05-20T22:21:29Z"
"","8738","Relative locators doesnt work in alpha 6 - throws IllegalArgumentException , but works fine till alpha5 java bindings","## üêõ Bug Report  A clear and concise description of what the bug is.   ## To Reproduce Here is the code --> https://gist.github.com/ShamaUgale/0a30751f285a5e479467882492e2bcc6   The above code works fine and the prints the id of an element located with ""4.0.0-alpha-5"" selenium java bindings. Whereas it throws the below exception for 4.0.0-alpha-6   Starting ChromeDriver 85.0.4183.87 (cd6713ebf92fa1cacc0f1a598df280093af0c5d7-refs/branch-heads/4183@{#1689}) on port 29952 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. [1601072744.821][WARNING]: FromSockAddr failed on netmask ChromeDriver was started successfully. Sep 26, 2020 3:55:46 AM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: W3C Exception in thread ""main"" java.lang.IllegalArgumentException: Argument is of an illegal type: org.openqa.selenium.By$ByTagName 	at org.openqa.selenium.remote.internal.WebElementToJsonConverter.apply(WebElementToJsonConverter.java:85) 	at org.openqa.selenium.remote.internal.WebElementToJsonConverter.apply(WebElementToJsonConverter.java:79) 	at org.openqa.selenium.remote.internal.WebElementToJsonConverter.apply(WebElementToJsonConverter.java:79) 	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) 	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948) 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482) 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472) 	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708) 	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) 	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:566) 	at org.openqa.selenium.remote.RemoteWebDriver.executeScript(RemoteWebDriver.java:514) 	at org.openqa.selenium.support.locators.RelativeLocator$RelativeBy.findElements(RelativeLocator.java:176) 	at org.openqa.selenium.By.findElement(By.java:132) 	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:325) 	at RelativeLocatorsExample.main(RelativeLocatorsExample.java:14)    ## Expected behavior Should be able to get the id of the element located on line 18.   ## Test script or set of commands reproducing this issue Here is the code --> https://gist.github.com/ShamaUgale/0a30751f285a5e479467882492e2bcc6    ## Environment OS:  'Mac OS X', os.version: '10.13.6',  Browser: Chrome  Browser version:  85 Browser Driver version: ChromeDriver 85.0.4183.87 Language Bindings version: 4.0.0-alpha-6","closed","needs-triaging,","ShamaUgale","2020-09-25T22:28:44Z","2021-09-05T08:34:46Z"
"","8861","NullPointerException in LoggingOptions.java:194","## üêõ Bug Report  A clear and concise description of what the bug is.   ## To Reproduce  Start Selenium Grid server more than once.   Detailed steps to reproduce the behavior: 1. `git clone --branch upgrade-to-selenium4-alpha5 https://github.com/selenide/selenide.git` 2. cd selenide 3. `./gradlew grid`  Expected result: green tests  Actual result:  ``` java.lang.NullPointerException 	at org.openqa.selenium.grid.log.LoggingOptions.configureLogging(LoggingOptions.java:194) 	at org.openqa.selenium.grid.TemplateGridCommand.lambda$configure$2(TemplateGridCommand.java:96) 	at org.openqa.selenium.grid.Main.launch(Main.java:154) 	at org.openqa.selenium.grid.Main.go(Main.java:88) 	at org.openqa.selenium.grid.Main.main(Main.java:54) 	at grid.AbstractGridTest.setUpGrid(AbstractGridTest.java:24) ```  See for example: https://travis-ci.org/github/selenide/selenide/jobs/742761304  ## Environment  OS: Any (I used MacOS) Browser: Any (I used Chrome) Browser version: Any (I used Chrome 86) Browser Driver version: Any (I used `chromedriver 86.0.4240.22`) Language Bindings version: `4.0.0-alpha-7` Selenium Grid version (if applicable): `org.seleniumhq.selenium:selenium-grid:4.0.0-alpha-7`","closed","C-java,","asolntsev","2020-11-10T22:09:54Z","2021-09-05T08:30:21Z"
"","8460","isDisplayed doesn't take into account collapsed/expanded details tag","## üêõ Bug Report  A `` tag will typically hide the elements within it (except for the content of ``) until the user clicks on it; however, elements within the `` tag will be reported as visible by `isDisplayed()` no matter what.  I have checked this issue with Firefox, Chrome, and HtmlUnitDriver, which makes me think that the problem is probably browser-independent (this is why I'm reporting here). Apologies if my conclusion is wrong.  ## To Reproduce  Consider the following HTML snippet:  ```html      Click me!     This element will be hidden or not...  ```  1. Open the page and verify that only the text ""Click me!"" is visible.  2. After obtaining a suitable `webDriver`, try this:  ```java final WebElement text = webDriver.findElement(By.tagName(""p"")); assertFalse(text.isDisplayed()); ```   ## Expected behavior  Expected result: the assertion should work, because `isDisplayed()` should return false Actual result: the assertion fails, because `isDisplayed()` reports the text as visible.  ## Test script or set of commands reproducing this issue  I guess the issue is simple enough for it to be self-contained; happy to create additional resources if my assumption is wrong.  ## Environment  OS: macOS 10.15.5 (19F101) Browser: Chrome / Firefox / HtmlUnitDriver Browser version: 83.0.4103.116 / 77.0.1 / 2.40.0 Browser Driver version: 3.141.59 / 3.141.59 / 2.40.0 Language Bindings version:Java 13.0.2+8 Selenium Grid version (if applicable): N/A","open","D-atoms,","quiram","2020-06-25T17:34:44Z","2022-07-28T23:25:10Z"
"","8502",".Text returns empty-string","## üêõ Bug Report  `WebElement.Text` returns `""""`. In my very limited testing, it looks like this _may_ be because the title tag of my website (the site I'm testing against) contains slashes.  ## To Reproduce  Minimal, complete example:  Detailed steps to reproduce the behavior:  * Add the `.cs` file given below in the test script section to a clean MSTest project, and install the required nuget packages. * Run the tests  ## Expected behavior  * That all tests should pass  ## Actual behavior  * the test on line 69 (testing against ``.Text``) fails (commenting out line 69 leaves all tests passing) * the use of ``.Text`` with the `h1` (which does not contain slashes) returns the expected string * the use of the less-standard `innerHTML` attribute returns the expected text  ## Test script or set of commands reproducing this issue  ```csharp using Microsoft.VisualStudio.TestTools.UnitTesting; using OpenQA.Selenium; using OpenQA.Selenium.Chrome; using OpenQA.Selenium.Firefox; using System;  // cf. https://dzone.com/articles/developer-tips-c-selenium-with-mstest-basics  namespace selenium {     public enum BrowserDriver     {         Chrome,         Firefox     }      internal static class WebDriverFactory     {         public static IWebDriver Create(BrowserDriver driver, string seleniumWebDriversPath)         {             return driver switch             {                 BrowserDriver.Chrome => new ChromeDriver(seleniumWebDriversPath),                 BrowserDriver.Firefox => new FirefoxDriver(seleniumWebDriversPath),                 _ => throw new ArgumentOutOfRangeException(nameof(driver), driver, null),             };         }     }      [TestClass]     public class PageLoadsTest     {         public string DriverPath { get; }         public string URL { get; }          public PageLoadsTest()         {             DriverPath = AppDomain.CurrentDomain.SetupInformation.ApplicationBase;             URL = ""https://halosgho.st"";         }          [TestMethod]         [DataRow(BrowserDriver.Chrome)]         [DataRow(BrowserDriver.Firefox)]         public void PageLoads(BrowserDriver engine)         {             using var driver = WebDriverFactory.Create(engine, DriverPath);             driver.Navigate().GoToUrl(URL);              var title = driver.FindElement(By.TagName(""title""));             Assert.AreEqual(""/home/halosghost"", title.GetAttribute(""innerHTML""));             Assert.AreEqual(""/home/halosghost"", title.Text);              var heading = driver.FindElement(By.TagName(""h1""));             Assert.AreEqual(""Sam Stuewe (halosghost)"", heading.GetAttribute(""innerHTML""));             Assert.AreEqual(""Sam Stuewe (halosghost)"", heading.Text);              driver.Quit();         }     } } ```  ## Environment  OS: Windows 10 Browser: latest versions of Chromium and Firefox Browser Driver version: latest versions of geckodriver and chromedriver Language Bindings version: C# 3.141.0","closed","needs-triaging,","HalosGhost","2020-07-10T18:29:22Z","2021-09-05T09:03:00Z"
"","8770","webdriverio: Content-Type header does not indicate utf-8 encoded json: application/json","## üêõ Bug Report  `webdriverio-6.3.6` works well against `selenium-4-alpha.6`, but it fails to start sessions when working with the nightly build of trunk.  Here is the error message ```  Error {         message: `Failed to create session.‚êä         Content-Type header does not indicate utf-8 encoded json: application/json`,       } ``` I guess the content-type header of some responses isn't set properly.  ## To Reproduce  Using `webdriverio` to start a session.  ## Test script or set of commands reproducing this issue ```typescript // run with ts-node test.ts import { remote } from ""webdriverio"";  const opt = {   hostname: 'localhost',   port: 4444,   path: '/wd/hub',   capabilities: {     browserName: 'chrome',   } };  void (async () => { const driver = await remote(opt); })(); ```  ## Environment  OS: OSX Browser: Any Browser version: Any Browser Driver version: Any Selenium Grid version (if applicable): trunk","closed","","link89","2020-10-09T16:11:48Z","2021-09-05T08:34:40Z"
"","8863","Python selenium 4.0.0.a7 and Python 3.6","## üêõ Bug Report  `pip install selenium==4.0.0.a7` works on Python 3.6 even though it should not as it requires Python 3.7.  The setup.py [correctly specifies this limitation](https://github.com/SeleniumHQ/selenium/blob/selenium-4.0.0-alpha-7/py/setup.py#L35), but the metadata seems to be missing on PyPI and in the package. Something probably went wrong when creating the release.  Compare https://pypi.org/project/selenium/4.0.0.a7/ and https://pypi.org/project/selenium/4.0.0a6.post2/  ## To Reproduce  Detailed steps to reproduce the behavior:  ``` virtualenv .venv-3.6  --python python3.6 .venv-3.6/bin/activate pip install selenium==4.0.0.a7 ```  ## Expected behavior  The installation should fail:  ``` ERROR: Package 'selenium' requires a different Python: 3.6.12 not in '~=3.7' ```  ## Test script or set of commands reproducing this issue  See reproducer.  ## Environment  OS: any Browser: none Browser version: none Browser Driver version: N/A Language Bindings version: Python 3.6.12 Selenium Grid version (if applicable): N/A","closed","C-py,","nijel","2020-11-11T08:55:23Z","2021-09-05T08:31:27Z"
"","8875","[rb] - Minor - Specific Error type not initialized","## üêõ Bug Report  ``` 0> Selenium::WebDriver::Error::ServerError => uninitialized constant Selenium::WebDriver::Error::ServerError Did you mean?  Selenium::WebDriver::Error::WebDriverError ```  This error is thrown in a few places. Primarily when the webdriver connection is timed out during debug phase or a few other areas (Such as using the new experimental JS - See other issue)  ## To Reproduce  Just try throw the error above. It will say it doesn't recognise it.  ## Expected behavior  The error exists  ## Test script or set of commands reproducing this issue  ``` driver = Selenium::WebDriver.for :chrome driver.get('www.google.com') raise Selenium::WebDriver::Error::ServerError ``` ## Environment  OS: Bionic 18.04 Browser: Chrome/Firefox in remote Browser version: 83/79 Browser Driver version: Valid Language Bindings version: Alpha6 Ruby Selenium Grid version (if applicable): Alpha 6","closed","C-rb,","luke-hill","2020-11-16T15:48:54Z","2021-09-18T00:05:12Z"
"","8264","Incorrect error is thrown when platform does not match any capabilites [Selenium 4.0.5]","## üêõ Bug Report  _driver.version: unknown_ is incorrectly thrown when the platform supplied does not match any node.  selenium/hub:4.0.0-alpha-5-20200409 and node-chrome:4.0.0-alpha-5-20200409 ## To Reproduce  Steps Run the above commands on Mac Attempt a connection supplying 'windows' as the platform.  ## Expected behavior  More meaningful error message is shown  ## Test script or set of commands reproducing this issue  Attempt a connection supplying 'windows' as the platform.  ## Environment  OS: OSX Browser: Chrome Browser version: Latest Browser Driver version: 4.0.5 Alpha Language Bindings version: Java 1.8 Selenium Grid version (if applicable): selenium/hub:4.0.0-alpha-5-20200409 and node-chrome:4.0.0-alpha-5-20200409","closed","selenium-4,","mburns02","2020-05-01T14:28:59Z","2021-09-05T08:37:20Z"
"","7917","Setting up download folder is not working at selenium 3.142.7","## üêõ Bug Report  @p0deje   I am using Ruby Selenium Binding, I have been using Selenium-webdriver 3.142.3. Setting up download folder works fine so far. But now I moved to the recent version selenium-webdriver 3.142.7.  Here in this version, setting up downloading folder is not working.         client = Selenium::WebDriver::Remote::Http::Default.new       client.read_timeout = @Page_Load # seconds       prefs = {           download: {               prompt_for_download: false,               default_directory: custom_download_dir           }       }       begin         @browser = Watir::Browser.new :chrome, http_client: client, args: [""user-data-dir=C:\\ChromeProfile\\#{@profile}""], options: {prefs: prefs}","closed","C-rb,","Rajagopalan-M","2020-01-09T05:35:53Z","2020-05-20T23:04:10Z"
"","7916","Deadlock when running xunit selenium tests with parallelism","## üêõ Bug Report    ## To Reproduce  ``` using System; using OpenQA.Selenium.Chrome; using Xunit;  [assembly:CollectionBehavior(MaxParallelThreads = 2)]  namespace Selenium4Freeze {     public class TestClass     {         [Fact]         public void Test()         {             var driver = new ChromeDriver(Environment.CurrentDirectory, new ChromeOptions());             driver.Url = ""http://www.google.com"";             driver.Navigate();         }     }          public class TestClass2     {         [Fact]         public void Test()         {             var driver = new ChromeDriver(Environment.CurrentDirectory, new ChromeOptions());             driver.Url = ""http://www.amazon.com"";             driver.Navigate();         }     } } ```  Detailed steps to reproduce the behavior:  - Run all tests - Observe deadlock, neither google or amazon pages are opened. - Turn off parallelism (comment out [assembly:CollectionBehavior(MaxParallelThreads = 2)]) - Observe tests now pass  ## Expected behavior  When tests are run, both of them pass.   ## Test script or set of commands reproducing this issue  Please run the code above  ## Environment  OS: Windows 10 Browser: Chrome Browser version: Version 79.0.3945.117  Browser Driver version: 79.0.3945.3600 Language Bindings version: C# 4.0.0-alpha03, .net core 2.2","closed","C-dotnet,","macpak","2020-01-08T14:10:35Z","2021-09-05T08:12:28Z"
"","8205","Selenium server node failed to start new session for edge CHROMIUM","## üêõ Bug Report  **Unable to create new service: EdgeDriverService** Selenium server node failed to start new session for Edge **Chromium**  ## To Reproduce  Test is started Test failed with message: ``` Unable to create new service: EdgeDriverService Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53' System info: host: 'qh-automationV3', ip: '10.0.0.5', os.name: 'Windows Server 2016', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_251' Driver info: driver.version: unknown (SessionNotCreated) Stack Trace: System.InvalidOperationException: Unable to create new service: EdgeDriverService Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53' ```  ## Expected behavior  New session starts for edge chromium browser.  ## Test script or set of commands reproducing this issue  Run selenium-standalone-server.jar as hub: ```bash java -jar selenium-server-standalone-3.141.59.jar -role hub -hubConfig DefaultHub.json -debug ```  DefaultHub.json contens: ```json { ""port"": 4444, ""newSessionWaitTimeout"":-1, ""servlets"":[], ""withoutServlets"": [], ""capabilityMatcher"":""org.openqa.grid.internal.utils.DefaultCapabilityMatcher"", ""throwOnCapabilityNotPresent"":true, ""cleanUpCycle"":5000, ""role"": ""hub"", ""debug"": false, ""browserTimeout"":240, ""timeout"":360, ""maxSession"":20 } ``` Run selenium-standalone-server.jar as node: ```bash java -jar selenium-server-standalone-3.141.59.jar -role node -nodeConfig DefaultNodeWebDriver.json ```  DefaultNodeWebDriver.json contents: ```json { ""capabilities"": [ { ""browserName"": ""firefox"", ""maxInstances"": 5, ""seleniumProtocol"": ""WebDriver"" }, { ""browserName"": ""chrome"", ""maxInstances"": 20, ""seleniumProtocol"": ""WebDriver"" }, { ""browserName"": ""MicrosoftEdge"" ""maxInstances"": 20, ""seleniumProtocol"": ""WebDriver"", ""webdriver.edge.driver"": ""C:/SeleniumGrid/msedgedriver.exe"" }, { ""platform"": ""WINDOWS"", ""browserName"": ""internet explorer"", ""maxInstances"": 2, ""seleniumProtocol"": ""WebDriver"" } ], ""proxy"": ""org.openqa.grid.selenium.proxy.DefaultRemoteProxy"", ""maxSession"": 20, ""port"": 3334, ""register"": true, ""registerCycle"": 7000, ""nodePolling"": 8000, ""unregisterIfStillDownAfter"": 60000, ""downPollingLimit"": 3, ""debug"": false, ""role"": ""node"", ""hub"": ""http://localhost:4444"", ""servlets"" : [], ""withoutServlets"": [], ""custom"": {} } ``` I can not find tutorial to setup selenium grid for use with Edge Chromium so I am not sure in this setting: ``` ""webdriver.edge.driver"": ""C:/SeleniumGrid/msedgedriver.exe"" ```  ## Environment  OS:  Windows 10 Browser: Edge Chromium Browser version: 81.0.416.53 (Official build) (64-bit) Browser Driver version: 81.0.416.53 Language Bindings version: C#  4.6.2 Selenium Grid version (if applicable): 3.141.59","closed","needs-triaging,","orifn1","2020-04-16T14:20:43Z","2021-09-05T09:12:31Z"
"","8457","RemoteWebDriver: Multiple files uploading method looks for files on local machine instead Selenium container","## üêõ Bug Report  **RemoteWebDriver**: Multiple files uploading via SendKeys method looks for files on local machine instead Selenium container  ## To Reproduce  1.we use RemoteWebDriver to run tests on Selenoid 2.run tests from Windows 10 with nunit-console 3.filenames to upload, splitted by ""\n"" contains in string variable and puts into method SendKeys 4.Got exception : System.InvalidOperationException: invalid argument: File not found  ## Expected behavior  Files uploaded on Selenoid container and after that, uploaded to tested web application  ## Test script or set of commands reproducing this issue    ``` private void SendFilesToServer(string fileNames, bool framedInput = false) {   if (driver is IAllowsFileDetection allowsDetection)   {     allowsDetection.FileDetector = new OpenQA.Selenium.Remote.LocalFileDetector();   }   ((OpenQA.Selenium.Remote.RemoteWebElement)Input).Clear();   ((OpenQA.Selenium.Remote.RemoteWebElement)Input).SendKeys(fileNames); } ```   ## Environment  OS: Selenoid on Linux Browser: Chrome Browser version: 70.0.3538.67 Browser Driver version: WebDriver 3.141,  Language Bindings version: C# 3.141.0   ## Possible Solution  file to improve : selenium/dotnet/src/webdriver/Remote/RemoteWebElement.cs   new using : using System.Text;  improved SendKeys method:  ``` ///          /// Simulates typing text into the element.         ///          /// The text to type into the element.         /// The text to be typed may include special characters like arrow keys,         /// backspaces, function keys, and so on. Valid special keys are defined in         /// .         ///          /// Thrown when the target element is not enabled.         /// Thrown when the target element is not visible.         /// Thrown when the target element is no longer valid in the document DOM.         public virtual void SendKeys(string text)         {             if (text == null)             {                 throw new ArgumentNullException(""text"", ""text cannot be null"");             }             var fileNames = text.Split(""\n"");             foreach (var fileName in fileNames)             {                if (this.driver.FileDetector.IsFile(fileName))                {                  fileName = this.UploadFile(fileName));                }                                 }             text = String.Join(""\n"",fileNames);             // N.B. The Java remote server expects a CharSequence as the value input to             // SendKeys. In JSON, these are serialized as an array of strings, with a             // single character to each element of the array. Thus, we must use ToCharArray()             // to get the same effect.             // TODO: Remove either ""keysToSend"" or ""value"" property, whichever is not the             // appropriate one for spec compliance.             Dictionary parameters = new Dictionary();             parameters.Add(""id"", this.elementId);             parameters.Add(""text"", text);             parameters.Add(""value"", text.ToCharArray());              this.Execute(DriverCommand.SendKeysToElement, parameters);         }  ```","closed","C-remote,","DvoryadkinPavel","2020-06-25T10:50:44Z","2021-09-05T08:34:06Z"
"","8869","element.rect returning different properties on different devices/browsers","## üêõ Bug Report  ## To Reproduce  Step 1)  Navigate to https://citizensadvice.github.io/design-system/iframe.html?id=components-oisc-warning--sticky&viewMode=story and scroll down to the bottom of the page  Step 2)  Locate the heading however you want. Call it `heading`  Step 3)  Problem with `rect` property. ``` iPhone 8 iOS 13  heading.rect => #  Chrome Linux  heading.rect => # ```  Detailed steps to reproduce the behavior:  ## Expected behavior  The rect should be identical cross browsers?  ## Test script or set of commands reproducing this issue  As above  ## Environment  OS: Specified Browser: Specified Browser version: Specified Browser Driver version: valid ones Language Bindings version: selenium ruby 4 alpha 6 Selenium Grid version (if applicable): 4 alpha 6","closed","","luke-hill","2020-11-12T10:51:45Z","2021-09-05T08:31:27Z"
"","8395","[Ruby] What version range is supported?","## üêõ Bug Report  ## To Reproduce  Read the docs, and one issue.  | Version | URL | |-|-| | 2.0 through 2.2 | https://github.com/SeleniumHQ/selenium/tree/master/rb | | 2.0 through 2.2 | https://www.selenium.dev/selenium/docs/api/rb/index.html | | >= 2.3 | https://rubygems.org/gems/selenium-webdriver | | 2.1 through 2.4 | https://github.com/SeleniumHQ/selenium/wiki/Ruby-Bindings | | 2.5 | https://github.com/SeleniumHQ/selenium/blob/master/rb/.rubocop.yml#L6 | | 2.5.1 | https://github.com/SeleniumHQ/selenium/blob/master/rb/ruby.iml#L9 | | 2.7.1 | #8315 - The issue author confirms 2.7.1 is working well for him | | Minimum 2.5 | https://github.com/SeleniumHQ/selenium/blob/master/.travis.yml#L27 | | JRuby 9.2.6.0 | https://github.com/SeleniumHQ/selenium/blob/master/.travis.yml#L113 |  ## Expected behavior  The docs and code contain a clear and concise version range.  ## Test script or set of commands reproducing this issue  N/A  ## Environment  N/A  ----  **Edits**: - Add versions from TravisCI - Add testimonial from #8315","closed","C-rb,","seanpoulter","2020-06-07T04:18:53Z","2021-09-05T08:25:06Z"
"","8320","Capturing Chrome screenshot in alpha 5 - failed","## üêõ Bug Report  ## To Reproduce  I wrote a snippet to capture the screenshot of www.google.com site using selenium-webdriver alpha5 in ruby language. The script was hanging until timeout then throwing an error. Whereas the same code snippet was working fine in Window 10  ## Expected behavior  Webdriver should successfully capture the screenshot of webpage without any error  ## Test script or set of commands reproducing this issue   `require 'selenium-webdriver'  `export PATH=$PATH:/opt/WebDriver/bin >> ~/.profile`  begin     Selenium::WebDriver.logger.level = :debug     browser = Selenium::WebDriver.for :chrome     browser.manage.timeouts.implicit_wait = 30     browser.get(""https://www.google.com"")     browser.save_screenshot(""image_#{Time.now.to_i}.png"") rescue => e     puts e.message     puts e.backtrace ensure     browser.close end`  ## Environment  OS: Ubuntu 18.04.1 Browser: Chrome Browser version: 81.0.4044.138 Browser Driver version: ChromeDriver v81.0.4044.138 Language Bindings version: ruby 2.5.1p57 (2018-03-29 revision 63029) [x86_64-linux-gnu] Selenium - 4.0.0alpha5 Selenium Grid version (if applicable): Not applicable  _Note: Attaching debug log for reference_  [chrome_Ubuntu_debug_log.txt](https://github.com/SeleniumHQ/selenium/files/4646656/chrome_Ubuntu_debug_log.txt)","closed","C-rb,","evnraja32","2020-05-18T20:58:34Z","2021-09-05T09:43:56Z"
"","8846","[rb] Selenium::Webdriver::Logger pollutes stdout when failing to log to file.","## üêõ Bug Report  ## To Reproduce  Grab test on this page. Rough psuedo code below  ``` Selenium::Webdriver::Logger.level = :DEBUG Selenium::Webdriver::Logger.output = '/path/to/file.log' driver = Selenium::Webdriver.for :chrome driver.navigate_to('https://www.citizensadvice.org.uk/') driver.find_element(:css, '.main-footer__content p').text ```  ## Expected behavior  A warning that it could not write to the log file **is written in the log file**  ## Actual behaviour  A warning that it could not write to the log file is sent to $stdout.  I think the (C) text isn't writable. Which is fine. But I get like 100 warnings akin to this when running my tests which is annoying.  ## Environment  OS: Windows 7/10 Browser: Chrome / Firefox Browser version: Chrome 83+ / Firefox 68+ Browser Driver version: Legit ones Language Bindings version: Ruby alpha 6 Selenium Grid version (if applicable): Alpha 6","closed","C-rb,","luke-hill","2020-11-06T11:54:00Z","2021-09-05T08:25:02Z"
"","8289","After refresh(), driver not able to execute any javascript for IE (inside hostile iframes)","## üêõ Bug Report  ## To Reproduce  Detailed steps to reproduce the behavior: 1.launch IE browser and go to youtube.com (through selenium's webdriver) 2.in YT , search for any video (b/27326081) and click on play (main goal to click on play from hostile iframe) 3.once video starts , wait for 3 sec and refresh browser{driver.refresh()} 4. now ,use driver.execute_script(Any javascript command)  ## Expected behavior at step 4 , driver should be able to execute any javascript after refresh, throws javascriptError.  ##Actual behavior at step4 , selenium driver throws error : javascript error. after driver's refresh(), all javascript commands fail after that only for IE (hostile iframes)  ## Test script or set of commands reproducing this issue at step4 , selenium driver throws error : javascript error. after driver's refresh(), all javascript commands fail after that only for IE (hostile iframes)  ## Environment  OS: Windows 10 Browser: internet explorer Browser version: IE11 Browser Driver version: IEdriver 3.14 Language Bindings version:  python 3.141.0  Selenium Grid version :3.14.0","closed","I-stale,","Kakanii","2020-05-09T14:23:00Z","2021-12-03T00:06:54Z"
"","7909","C#: Unable to add firefox extension","## üêõ Bug Report  ## To Reproduce  ``` using System; using OpenQA.Selenium; using OpenQA.Selenium.Firefox; using OpenQA.Selenium.Remote;  namespace sel_cs {     class MainClass     {         public static void Main(string[] args)         {             IWebDriver driver = null;             try             {                 FirefoxOptions options = new FirefoxOptions();                 FirefoxProfile profile = new FirefoxProfile();                 profile.AddExtension(""/path/to/firefox-ext.xpi"");                 options.Profile = profile;                 ICapabilities capabilities = options.ToCapabilities();                 driver = new RemoteWebDriver(new Uri(""http://localhost:4444/wd/hub""), capabilities);                 driver.Navigate().GoToUrl(""http://www.google.com"");                 Console.WriteLine(""hello"");                 driver.Quit();             }             catch(Exception e)             {                 Console.Write(e);             }         }     } } ```  Detailed steps to reproduce the behavior:  1. Create/ download any .xpi file 2. Make sure the xpi is working 3. Replace the path to .xpi file given in the program with the path to xpi in your machine  ## Expected behavior  A ""hello"" getting printed in my console  ## Actual behavior  I am getting the exception:  ``` System.ArgumentOutOfRangeException: Year, Month, and Day parameters describe an un-representable DateTime.   at System.DateTime.DateToTicks (System.Int32 year, System.Int32 month, System.Int32 day) [0x0006c] in :0    at System.DateTime..ctor (System.Int32 year, System.Int32 month, System.Int32 day, System.Int32 hour, System.Int32 minute, System.Int32 second) [0x00000] in :0    at System.IO.Compression.ZipStorer.DosTimeToDateTime (System.UInt32 dosTime) [0x00000] in <19027cc8501444099501b87290061165>:0    at System.IO.Compression.ZipStorer.ReadCentralDirectory () [0x00167] in <19027cc8501444099501b87290061165>:0    at OpenQA.Selenium.Firefox.FirefoxExtension.Install (System.String profileDirectory) [0x00063] in <19027cc8501444099501b87290061165>:0    at OpenQA.Selenium.Firefox.FirefoxProfile.InstallExtensions () [0x00027] in <19027cc8501444099501b87290061165>:0    at OpenQA.Selenium.Firefox.FirefoxProfile.WriteToDisk () [0x00038] in <19027cc8501444099501b87290061165>:0    at OpenQA.Selenium.Firefox.FirefoxProfile.ToBase64String () [0x00006] in <19027cc8501444099501b87290061165>:0    at OpenQA.Selenium.Firefox.FirefoxOptions.GenerateFirefoxOptionsDictionary () [0x00019] in <19027cc8501444099501b87290061165>:0    at OpenQA.Selenium.Firefox.FirefoxOptions.ToCapabilities () [0x00015] in <19027cc8501444099501b87290061165>:0    at sel_cs.MainClass.Main (System.String[] args) [0x00057] in /home/local/prasanth/Projects/sel_cs/sel_cs/Program.cs:20 ``` ## Environment  OS: Ubuntu 18.04 Browser: Firefox Browser version: 70.0 Gechodriver version: >= 0.24.0 Language Bindings version: WebDriver.dll (.NET 4.5, Version: 3.141.0) Selenium Grid version (if applicable): 3.9.1","closed","needs-triaging,","prasanth-G24","2020-01-03T11:47:16Z","2020-02-23T18:56:43Z"
"","8832","[rb] Cannot create Local Firefox Driver (alpha6) - camelCasing of browserName not happening","## üêõ Bug Report  ## To Reproduce  ``` # frozen_string_literal: true  module Drivers   class Local     def register       Capybara.register_driver :selenium do |app|         Capybara::Selenium::Driver.new(           app,           browser: browser, # This is ""firefox""           service: service,           capabilities: [desired_capabilities, options]         )       end     end      private      def service       return     end      def desired_capabilities       Selenium::WebDriver::Remote::Capabilities.new     end   end end ``` Detailed steps to reproduce the behavior:  ## Expected behavior  Browser to be created. Actual issue is  ``` # In bridge.rb - create_session 0> capabilities => {""browser_name""=>""firefox"", ""moz:firefoxOptions""=>{""log""=>{""level""=>""info""}}}  response = execute(:new_session, {}, {capabilities: {firstMatch: [capabilities]}}) => browser_name is not the name of a known capability or extension capability ```  For Chrome this works because chrome camelcases the name ``` 0> capabilities => {""browserName""=>""chrome"", ""goog:chromeOptions""=>{}} ```  ## Environment  OS: Any - Locally it's Ubuntu Bionic Browser: Firefox v78+ Browser Driver version: geckodriver 0.25+ Language Bindings version: Ruby alpha 6 Selenium Grid version (if applicable): N/A","closed","needs-triaging,","luke-hill","2020-11-03T12:29:35Z","2021-09-05T08:31:35Z"
"","8409","Unable to instantiate firefox on selenium grid","## üêõ Bug Report  ## Detailed Description  We have selenium grid setup with HUB and NODES architecture. Architecture includes 1 HUB machine and 10 Node machines all are running on Windows 7. Each node is provisioned with 5 instances of chrome and Firefox web drivers. When i target my selenium tests to selenium grid remotely  choosing chrome as the browser, am able to instantiate the chrome web driver and my tests are passing, but when i choose Firefox as my browser am unable to instantiate the firefox web driver  Detailed steps to reproduce the behavior:  ## Expected behavior  Should be able to instantiate Firefox web driver  ## Test script or set of commands reproducing this issue  **Followed the below URLs for grid setup**: https://www.selenium.dev/documentation/en/grid/setting_up_your_own_grid/ https://www.guru99.com/introduction-to-selenium-grid.html#11  **Node Configuration** ``` {    ""capabilities"":[       {          ""browserName"":""firefox"", 		 ""marionette"":true,          ""maxInstances"":5,          ""seleniumProtocol"":""WebDriver"",          ""platform"":""WINDOWS"",          ""webdriver.gecko.driver"":""D:\\selenium\\webdrivers\\geckodriver.exe"",          ""acceptSslCerts"":true,          ""javascriptEnabled"":true,          ""takesScreenshot"":false,          ""firefox_profile"":"""",          ""firefox_binary"":""C:\\Program Files\\Mozilla Firefox\\firefox.exe"",          ""cleanSession"":true       } 	  {         ""browserName"": ""chrome"",         ""maxInstances"": 5,         ""seleniumProtocol"": ""WebDriver"",         ""platform"": ""WINDOWS"",         ""webdriver.chrome.driver"":""D:\\selenium\\webdrivers\\chromedriver.exe""       }    ],    ""proxy"":""org.openqa.grid.selenium.proxy.DefaultRemoteProxy"",    ""register"":true,    ""registerCycle"":5000,    ""timeout"":1000,    ""browserTimeout"":1000,    ""nodeTimeout"":120,    ""hub"":"""",    ""nodePolling"":2000,    ""cleanUpCycle"":2000,    ""maxSession"":10 } ```  **HUB configuration** ``` {   ""port"": 4444,   ""newSessionWaitTimeout"": -1,   ""servlets"" : [],   ""withoutServlets"": [],   ""custom"": {},   ""capabilityMatcher"": ""org.openqa.grid.internal.utils.DefaultCapabilityMatcher"",   ""throwOnCapabilityNotPresent"": true,   ""cleanUpCycle"": 5000,   ""role"": ""hub"",   ""debug"": false,   ""browserTimeout"": 600,   ""timeout"": 1800 } ```  **Node Service Setup** ``` nssm install selenium-node D:\selenium\scripts\start_selenium_node.cmd nssm set selenium-node DisplayName Selenium grid node nssm set selenium-node Start SERVICE_AUTO_START nssm set selenium-node ObjectName LocalSystem nssm set selenium-node Type SERVICE_INTERACTIVE_PROCESS nssm set selenium-node AppThrottle 1500 nssm set selenium-node AppExit Default Restart nssm set selenium-node AppRestartDelay 0 nssm set selenium-node AppStdout D:\selenium\log\selenium-stdout.log rem nssm set selenium-node AppStderr D:\selenium\log\selenium-stderr.log nssm start selenium-node ```  **HUB service Setup** ``` nssm install seleniumHub D:\selenium\scripts\start_selenium_hub.cmd nssm set seleniumHub DisplayName Selenium grid hub nssm set seleniumHub Start SERVICE_AUTO_START nssm set seleniumHub ObjectName LocalSystem nssm set seleniumHub AppThrottle 1500 nssm set seleniumHub AppExit Default Restart nssm set seleniumHub AppRestartDelay 0 nssm set seleniumHub AppStdout D:\selenium\log\selenium-stdout.log nssm set seleniumHub AppStderr D:\selenium\log\selenium-stderr.log nssm start seleniumHub ```  **Error  Stack** ``` 13:09:09.216 INFO [GridLauncherV3.parse] - Selenium server version: 3.141.59, revision: e82be7d358 13:09:09.386 INFO [GridLauncherV3.lambda$buildLaunchers$7] - Launching a Selenium Grid node on port 17018 2020-06-08 13:09:09.637:INFO::main: Logging initialized @687ms to org.seleniumhq.jetty9.util.log.StdErrLog 13:09:09.888 INFO [WebDriverServlet.] - Initialising WebDriverServlet 13:09:09.971 INFO [SeleniumServer.boot] - Selenium Server is up and running on port 17018 13:09:09.971 INFO [GridLauncherV3.lambda$buildLaunchers$7] - Selenium Grid node is up and ready to register to the hub 13:09:10.054 INFO [SelfRegisteringRemote$1.run] - Starting auto registration thread. Will try to register every 5000 ms. 13:09:10.331 INFO [SelfRegisteringRemote.registerToHub] - Registering the node to the hub: http://:4444/grid/register 13:09:10.380 INFO [SelfRegisteringRemote.registerToHub] - The node is registered to the hub and ready to use 13:09:26.964 INFO [ActiveSessionFactory.apply] - Capabilities are: {   ""browserName"": ""chrome"",   ""chromeOptions"": {     ""args"": [       ""headless"",       ""user-agent=Chrome\u002f60.0.3112.50"",       ""disable-gpu"",       ""--disable-browser-side-navigation"",       ""--window-size=2048,1050"",       ""--disable-infobars"",       ""--disable-notifications"",       ""--disable-web-security"",       ""--allow-file-access"",       ""--allow-insecure-localhost"",       ""--allow-running-insecure-content"",       ""--disableChecks""     ]   },   ""count"": 1,   ""exclude"": [     "".\u002fdist\u002fqa\u002fflows\u002fE2E\u002fTablet\u002fBooking\u002fDomestic\u002f*.js"",     "".\u002fdist\u002fqa\u002fflows\u002fE2E\u002fTablet\u002fBooking\u002fInternational\u002f*.js"",     "".\u002fdist\u002fqa\u002fflows\u002fE2E\u002fTablet\u002fBooking\u002fCar\u002f*.js"",     "".\u002fdist\u002fqa\u002fflows\u002fE2E\u002fTablet\u002fBooking\u002fAffinity\u002f*.js"",     "".\u002fdist\u002fqa\u002fflows\u002fE2E\u002fTablet\u002fBooking\u002fDomestic\u002fQF_Mercury_Commercial_Cash_BPAY_InsuranceCreditCard_Tradesite.js"",     "".\u002fdist\u002fqa\u002fflows\u002fE2E\u002fTablet\u002fBooking\u002fInternational\u002fQF_Mercury_SelectInternational_E2E_FilterReward_PointsOnly.js"",     "".\u002fdist\u002fqa\u002fflows\u002fE2E\u002fTablet\u002fBooking\u002fInternational\u002fQF_Mercury_SelectInternational_E2E_Logged_ChangeFlight.js"",     "".\u002fdist\u002fqa\u002fflows\u002fE2E\u002fTablet\u002fBooking\u002fAffinity\u002fQF_Mercury_Affinity_Histogram_E2E_Mix_Logged_Tablet.js"",     "".\u002fdist\u002fqa\u002fflows\u002fE2E\u002fTablet\u002fBooking\u002fCar\u002fQF_Mercury_Car_E2E_CashAUINT_Tablet.js"",     "".\u002fdist\u002fqa\u002fflows\u002fE2E\u002fTablet\u002fBooking\u002fCar\u002fQF_Mercury_Car_E2E_Domestic_2Cars_Tablet.js"",     "".\u002fdist\u002fqa\u002fflows\u002fE2E\u002fMobile\u002fBooking\u002fInternational\u002f*.js"",     "".\u002fdist\u002fqa\u002fflows\u002fE2E\u002fMobile\u002fBooking\u002fAffinity\u002f*.js"",     "".\u002fdist\u002fqa\u002fflows\u002fE2ESanity\u002fBooking\u002fShoppingCart\u002f*.js"",     "".\u002fdist\u002fqa\u002fflows\u002fE2ESanity\u002fBooking\u002fShoppingCart\u002fQF_Mercury_ShoppingCart_ChangeLinkPassenger_Mobile.js"",     "".\u002fdist\u002fqa\u002fflows\u002fE2ESanity\u002fBooking\u002fShoppingCart\u002fQF_Mercury_ShoppingCart_SelectPage_AUDOM_RT_Mobile.js"",     "".\u002fdist\u002fqa\u002fflows\u002fE2E\u002fMobile\u002fBooking\u002fInternational\u002fQF_Mercury_SelectInternational_E2E_ChangeDate_PayLater_AUINT.js"",     "".\u002fdist\u002fqa\u002fflows\u002fE2E\u002fMobile\u002fBooking\u002fAffinity\u002fQF_Mercury_Affinity_ClassicRewards.js"",     "".\u002fdist\u002fqa\u002fflows\u002fE2E\u002fMobile\u002fBooking\u002fAffinity\u002fQF_Mercury_Affinity_FullCommercial_notLogged.js""   ],   ""maxInstances"": ""20"",   ""shardTestFiles"": true } 13:09:26.965 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) Starting ChromeDriver 83.0.4103.39 (ccbf011cb2d2b19b506d844400483861342c20cd-refs/branch-heads/4103@{#416}) on port 48736 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. 13:09:29.324 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C 13:09:29.348 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session b33a3d9c7f33f52c0976209c80a2b988 (org.openqa.selenium.chrome.ChromeDriverService) 13:09:45.974 INFO [ActiveSessionFactory.apply] - Capabilities are: {   ""browserName"": ""firefox"" } 13:09:45.974 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.firefox.GeckoDriverService) 1591618186492	mozrunner::runner	INFO	Running command: ""C:\\Program Files\\Mozilla Firefox\\firefox.exe"" ""-marionette"" ""-foreground"" ""-no-remote"" ""-profile"" ""D:\\TMP\\rust_mozprofilexO2UvS"" 1591618187075	addons.webextension.doh-rollout@mozilla.org	WARN	Loading extension 'doh-rollout@mozilla.org': Reading manifest: Invalid extension permission: networkStatus 1591618187501	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons 1591618187501	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry 1591618187501	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/ 1591618187501	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader* [Parent 14652, Gecko_IOThread] WARNING: pipe error: 232: file /builds/worker/checkouts/gecko/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 522 A content process crashed and MOZ_CRASHREPORTER_SHUTDOWN is set, shutting down console.warn: services.settings: main/cfr-fxa sync interrupted by shutdown 1591618189461	addons.xpi-utils	WARN	Error: XPI database modified after shutdown began(resource://gre/modules/addons/XPIDatabase.jsm:1545:17) JS Stack trace: saveChanges@XPIDatabase.jsm:1545:17 makeAddonVisible@XPIDatabase.jsm:2348:10 addToDatabase@XPIDatabase.jsm:2275:12 install@XPIInstall.jsm:4320:27 _activateAddon@XPIInstall.jsm:4347:7 observe@AsyncShutdown.jsm:554:16 observe@ContentCrashHandlers.jsm:178:28 1591618189461	addons.xpi-utils	WARN	Error: XPI database modified after shutdown began(resource://gre/modules/addons/XPIDatabase.jsm:1545:17) JS Stack trace: saveChanges@XPIDatabase.jsm:1545:17 addToDatabase@XPIDatabase.jsm:2278:10 install@XPIInstall.jsm:4320:27 _activateAddon@XPIInstall.jsm:4347:7 observe@AsyncShutdown.jsm:554:16 observe@ContentCrashHandlers.jsm:178:28 JavaScript error: resource://gre/modules/AsyncShutdown.jsm, line 554: uncaught exception: 2147500036 JavaScript error: resource://gre/modules/AsyncShutdown.jsm, line 554: uncaught exception: 2147500036 JavaScript error: resource://gre/modules/AsyncShutdown.jsm, line 554: uncaught exception: 2147500036 JavaScript error: resource://gre/modules/AsyncShutdown.jsm, line 554: uncaught exception: 2147500036 JavaScript error: resource://gre/modules/SearchService.jsm, line 2402: NS_ERROR_ABORT: SearchService initialization failed JavaScript error: resource://gre/modules/AsyncShutdown.jsm, line 554: uncaught exception: 2147500036 console.warn: services.settings: main/cfr sync interrupted by shutdown console.warn: services.settings: main/whats-new-panel sync interrupted by shutdown JavaScript error: resource:///modules/sessionstore/SessionStore.jsm, line 2231: TypeError: subject.QueryInterface is not a function JavaScript error: resource:///modules/sessionstore/SessionStore.jsm, line 2231: TypeError: subject.QueryInterface is not a function JavaScript error: resource:///modules/sessionstore/SessionStore.jsm, line 2231: TypeError: subject.QueryInterface is not a function JavaScript error: resource:///modules/sessionstore/SessionStore.jsm, line 2231: TypeError: subject.QueryInterface is not a function A content process crashed and MOZ_CRASHREPORTER_SHUTDOWN is set, shutting down Extension error: extension.persistentListeners is undefined resource://gre/modules/ExtensionCommon.jsm:2357 :: clearPrimedListeners@resource://gre/modules/ExtensionCommon.jsm:2357:39 build@chrome://extensions/content/parent/ext-backgroundPage.js:73:20 observe@resource://gre/modules/AsyncShutdown.jsm:554:16 observe@resource:///modules/ContentCrashHandlers.jsm:178:28  Extension error: extension.persistentListeners is undefined resource://gre/modules/ExtensionCommon.jsm:2357 :: clearPrimedListeners@resource://gre/modules/ExtensionCommon.jsm:2357:39 build@chrome://extensions/content/parent/ext-backgroundPage.js:73:20 observe@resource://gre/modules/AsyncShutdown.jsm:554:16 observe@resource:///modules/ContentCrashHandlers.jsm:178:28  Extension error: extension.persistentListeners is undefined resource://gre/modules/ExtensionCommon.jsm:2357 :: clearPrimedListeners@resource://gre/modules/ExtensionCommon.jsm:2357:39 build@chrome://extensions/content/parent/ext-backgroundPage.js:73:20 observe@resource://gre/modules/AsyncShutdown.jsm:554:16 observe@resource:///modules/ContentCrashHandlers.jsm:178:28  Extension error: extension.persistentListeners is undefined resource://gre/modules/ExtensionCommon.jsm:2357 :: clearPrimedListeners@resource://gre/modules/ExtensionCommon.jsm:2357:39 build@chrome://extensions/content/parent/ext-backgroundPage.js:73:20 observe@resource://gre/modules/AsyncShutdown.jsm:554:16 observe@resource:///modules/ContentCrashHandlers.jsm:178:28  1591618189932	addons.xpi	WARN	Exception running bootstrap method startup on formautofill@mozilla.org: TypeError: extension.persistentListeners is undefined(resource://gre/modules/ExtensionCommon.jsm:2357:39) JS Stack trace: clearPrimedListeners@ExtensionCommon.jsm:2357:39 build@ext-backgroundPage.js:73:20 observe@AsyncShutdown.jsm:554:16 observe@ContentCrashHandlers.jsm:178:28 1591618189933	addons.xpi	WARN	Exception running bootstrap method startup on screenshots@mozilla.org: TypeError: extension.persistentListeners is undefined(resource://gre/modules/ExtensionCommon.jsm:2357:39) JS Stack trace: clearPrimedListeners@ExtensionCommon.jsm:2357:39 build@ext-backgroundPage.js:73:20 observe@AsyncShutdown.jsm:554:16 observe@ContentCrashHandlers.jsm:178:28 1591618189933	addons.xpi	WARN	Exception running bootstrap method startup on webcompat@mozilla.org: TypeError: extension.persistentListeners is undefined(resource://gre/modules/ExtensionCommon.jsm:2357:39) JS Stack trace: clearPrimedListeners@ExtensionCommon.jsm:2357:39 build@ext-backgroundPage.js:73:20 observe@AsyncShutdown.jsm:554:16 observe@ContentCrashHandlers.jsm:178:28 1591618189934	addons.xpi	WARN	Exception running bootstrap method startup on doh-rollout@mozilla.org: TypeError: extension.persistentListeners is undefined(resource://gre/modules/ExtensionCommon.jsm:2357:39) JS Stack trace: clearPrimedListeners@ExtensionCommon.jsm:2357:39 build@ext-backgroundPage.js:73:20 observe@AsyncShutdown.jsm:554:16 observe@ContentCrashHandlers.jsm:178:28 [Parent 14652, Gecko_IOThread] WARNING: file /builds/worker/checkouts/gecko/ipc/chromium/src/base/process_util_win.cc, line 166 [Parent 14652, Gecko_IOThread] WARNING: file /builds/worker/checkouts/gecko/ipc/chromium/src/base/process_util_win.cc, line 166 JavaScript error: resource:///modules/sessionstore/SessionStore.jsm, line 2231: TypeError: subject.QueryInterface is not a function JavaScript error: resource:///modules/sessionstore/SessionStore.jsm, line 2231: TypeError: subject.QueryInterface is not a function A content process crashed and MOZ_CRASHREPORTER_SHUTDOWN is set, shutting down [Parent 14652, Gecko_IOThread] WARNING: file /builds/worker/checkouts/gecko/ipc/chromium/src/base/process_util_win.cc, line 166 ```  ## Environment  OS: Windows 7, 64-bit Browser: Firefox Browser version: 76.0.1 Browser Driver version: GeckoDriver v0.26 Selenium Grid version 3.141.59","closed","R-awaiting answer,","aravindtv","2020-06-09T16:52:56Z","2021-09-05T09:02:57Z"
"","8158","log level severe not working","## üêõ Bug Report          LogEntries logEntries = driver.manage().logs().get(LogType.BROWSER);         List errorLogs = logEntries.filter(Level.SEVERE);  I still get warnings included in my test.   OS: Windows 10 PRO Browser: Chrome  Browser version: 80.0.3987.149 Browser Driver version: ChromeDriver 3.141.59","closed","needs-triaging,","PinkyPanda","2020-04-03T12:47:19Z","2020-05-05T21:15:01Z"
"","8711","IE Driver Server Crashes When Trying to Get Cookies .","## üêõ Bug Report   While the specific line of code to get the cookies from the current browser session appears to work, upon trying to get a specific cookie from said collection, the IE Driver Server executable crashes.    ## To Reproduce    Our tests get cookies out from browser session to perform some API calls on the background for additional verification. Tests are able to get cookies in Chrome, FF, Safari and also in Safari on IOS, Chrome on Android, but tests are failed on IE  Code:  ```  public static Set getCookies() {         return Browser.getWebDriver().manage().getCookies();     } ```  ## Expected behavior  IE Driver Server successfully gets the cookies for the current session and a specific cookie can be retrieved.  ## Test script or set of commands reproducing this issue ```   public static Set getCookies() {         return Browser.getWebDriver().manage().getCookies();     } ```  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS: Windows 10 Enterprise (64 bit) Version 1909 Build: 18363.1016  Selenium Version: 3.141.59  Browser: Internet Explorer  Browser Version: 11.1016.18362.0  iedriverVersion: 3.141.0 3.150.1  Same issue on the following SauceLabs configuration: Browser: iexplore Browser Version: 11.285.17134.0. Server OS: Windows 10 iedriverVersion: 3.141.0 3.150.1   ssue is reproducible running tests on SL, and locally  part of Log.json from SL: { ""screenshot"": null, ""suggestion_values"": [], ""start_time"": 1600341800.56, ""request"": null, ""result"": ""{here page title goes}"", ""duration"": 0.031000137329101562, ""path"": ""title"", ""hide_from_ui"": false, ""between_commands"": 0.06200003623962402, ""visual_command"": false, ""HTTPStatus"": 200, ""suggestion"": null, ""in_video_timeline"": 201.55999994277954, ""method"": ""GET"", ""statusCode"": 0 }, { ""screenshot"": null, ""suggestion_values"": [], ""start_time"": 1600341800.638, ""request"": null, ""result"": ""https:{here url goes}"", ""duration"": 0.04699993133544922, ""path"": ""url"", ""hide_from_ui"": false, ""between_commands"": 0.04699993133544922, ""visual_command"": false, ""HTTPStatus"": 200, ""suggestion"": null, ""in_video_timeline"": 201.6380000114441, ""method"": ""GET"", ""statusCode"": 0 } { ""screenshot"": null, ""suggestion_values"": [], ""start_time"": 1600341800.748, ""request"": null, ""result"": { ""message"": ""java.net.ConnectException: Connection refused: connect"", ""error"": ""unknown error"", ""stackTrace"": [ { ""className"": ""org.openqa.selenium.remote.server.WebDriverServlet"", ""lineNumber"": 240, ""methodName"": ""lambda$handle$0"", ""fileName"": ""WebDriverServlet.java"" }, { ""className"": ""java.util.concurrent.Executors$RunnableAdapter"", ""lineNumber"": -1, ""methodName"": ""call"", ""fileName"": null }, { ""className"": ""java.util.concurrent.FutureTask"", ""lineNumber"": -1, ""methodName"": ""run"", ""fileName"": null }, { ""className"": ""java.util.concurrent.ThreadPoolExecutor"", ""lineNumber"": -1, ""methodName"": ""runWorker"", ""fileName"": null }, { ""className"": ""java.util.concurrent.ThreadPoolExecutor$Worker"", ""lineNumber"": -1, ""methodName"": ""run"", ""fileName"": null }, { ""className"": ""java.lang.Thread"", ""lineNumber"": -1, ""methodName"": ""run"", ""fileName"": null } ] }, ""duration"": 34.54200005531311, ""path"": ""cookie"", ""hide_from_ui"": false, ""between_commands"": 0.06299996376037598, ""visual_command"": false, ""HTTPStatus"": 500, ""suggestion"": null, ""in_video_timeline"": 201.74799990653992, ""method"": ""GET"", ""statusCode"": 13 }  part from server-log from SL: 11:23:20.748 DEBUG [WebDriverServlet.handle] - Found handler: 7743021c-237f-4bdf-b8c7-45a8f01f756a (org.openqa.selenium.ie.InternetExplorerDriverService) 11:23:20.748 DEBUG [WebDriverServlet.lambda$handle$0] - Handler thread for session 7743021c-237f-4bdf-b8c7-45a8f01f756a (internet explorer): Executing GET on /session/7743021c-237f-4bdf-b8c7-45a8f01f756a/cookie (handler: ServicedSession) 11:23:20.748 DEBUG [HttpURLConnection.writeRequests] - sun.net.www.MessageHeader@4619b118 pairs: {GET /session/7743021c-237f-4bdf-b8c7-45a8f01f756a/cookie HTTP/1.1: null}{Accept: application/json;charset=UTF-8}{Content-Type: application/json;charset=UTF-8}{Cache-Control: no-cache}{Pragma: no-cache}{User-Agent: Java/1.8.0_131}{Host: localhost:33590}{Connection: keep-alive} 11:23:55.352 DEBUG [WebDriverServlet.handle] - Found handler: 7743021c-237f-4bdf-b8c7-45a8f01f756a (org.openqa.selenium.ie.InternetExplorerDriverService)  there was a similar issue before: #5054  I have tried to downgrade IE driver to version 3.11.1 but have faced the same issue.","closed","R-awaiting answer,","ylupinov","2020-09-17T12:04:27Z","2021-09-05T08:12:13Z"
"","8598","C#: isTextPresent.js is missing","## üêõ Bug Report   Unit tests fail with this error "" OpenQA.Selenium.WebDriverException : Cannot find a file named '\bin\Debug\netcoreapp3.1\isTextPresent.js' or an embedded resource with the id 'isTextPresent.js'.""   ## To Reproduce Create a new unit test in C# and install NUnit, Selenium, and the ChromeDriver and use the IsTextPresent method.  Detailed steps to reproduce the behavior:  ## Expected behavior  I expect the isTextPresent.js file to be included in the directory?   ## Environment  OS:  Windows 10 2004 Browser:  Chrome Browser version:  84.0.4147.105 Browser Driver version:  84.0.4147.3001 Language Bindings version:  C# .Net Core 3.1 Selenium Grid version (if applicable):","closed","R-awaiting answer,","MopsieX","2020-08-03T20:51:15Z","2021-09-05T07:59:11Z"
"","8570","In remote firefox while uploading file it gives error 'HTTP method not allowed'.","## üêõ Bug Report   Unable to upload file with remote firefox on selenoid.  While using rspec, selenium-webdriver, capybara and selenoid for remote firefox, script is failing to upload file with ""JSON::ParserError:    784: unexpected token at 'HTTP method not allowed'"" error message.  ## To Reproduce  Create a rspec scenario using selenium-webdriver and capybara gem. Use selenoid  [https://aerokube.com/selenoid/latest/#_uploading_files_to_browser](url) remote firefox browser and upload file using capybara method attach_file.    ## Expected behavior File should be uploaded  ## Test script or set of commands reproducing this issue In scenario visit page and call `rspec.attach_file(""attach_file_element_id"", file_path)`  In configuration use following: ``` if ENV['BROWSER'] == 'firefox'     caps = Selenium::WebDriver::Remote::Capabilities.new     caps['browserName'] = 'firefox'     # caps['moz:firefoxOptions'] = {w3c: false} ## It is not working   else     caps = Selenium::WebDriver::Remote::Capabilities.new     caps[""browserName""] = ""chrome""     caps[""version""] = ""81.0""     caps['goog:chromeOptions'] = {w3c: false}   end     caps[""enableVNC""] = true     caps[""screenResolution""] = ""1280x800""     caps['sessionTimeout'] = '15m'    Capybara.register_driver :selenium do |app|       Capybara::Selenium::Driver.new(app, browser: :remote,     :desired_capabilities => caps,     :url => ENV[""REMOTE_URL""] || ""http://*.*.*.*:4444/wd/hub""     )   end    Capybara.configure do |config|      config.default_driver = :selenium   end ```    ## Environment  OS: Ubuntu 18 Browser: Firefox Browser version: 77.0 Language Bindings version: ruby-2.5.5   ## Detail  I am using selenoid for remote browser testing in ruby. In that I am using 'selenium-webdriver', 'capybara', 'rspec' for automation. And I am using attach_file method for uploading file to browser I want to upload file on Firefox and Chrome browser but it raises error on both; In chrome: `Selenium::WebDriver::Error::UnknownCommandError: unknown command: unknown command: session/***8d32e045e3***/se/file` In Firefox: ` HTTP method not allowed`  So After searching I found the solution for chrome which is to set w3c option false in caps['goog:chromeOptions'] > `caps['goog:chromeOptions'] = {w3c: false}`  So now chrome is using OSS bridge for handshaking but I don't know how to do it in Firefox. Similar solution is not working for Firefox.","closed","needs-triaging,","hgupta481994","2020-07-24T08:42:18Z","2021-09-05T09:02:54Z"
"","8782","[Selenium 4][Grid] Unknown command: (POST) /session","## üêõ Bug Report   I¬¥m getting _**org.openqa.selenium.UnsupportedCommandException: Unknown command: (POST) /session**_ after trying to run my tests on a remote machine.    ## To Reproduce    1. On Hub machine (Mac OS) run  `java -jar selenium-server-4.0.0-alpha-1.jar hub`  2. On  remote Node Machine (Windows 10) run `java -jar selenium-server-4.0.0-alpha-1.jar node --detect-drivers --publish-events tcp://hub:4442 --subscribe-events tcp://hub:4443` . Drivers are located in the same folder as the Selenium Server  ## Test script or set of commands reproducing this issue  Capabilities in Hub:  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:   Selenium Grid version (if applicable):","closed","needs-triaging,","jacorgaz","2020-10-13T14:26:40Z","2021-09-05T08:34:03Z"
"","8587","WebDriverWait.until throws timeoutexceptioni on wrong thread","## üêõ Bug Report   ## To Reproduce   Detailed steps to reproduce the behavior: 1.   new WebDriverWait(driver, Duration.ofSeconds(1)).until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.cssSelector("".doesntexist""))   ## Expected behavior Exception is thrown on thread that called until()  ## Actual behavior Exception is thrown on forkjoin pool, stacktrace does not indicate where on my actual test code the timeout occured.  Build info: version: '4.0.0-alpha-6', revision: '5f43a29cfc'","closed","needs-triaging,","idontusenumbers","2020-07-30T03:43:57Z","2021-09-05T08:34:58Z"
"","8593","Unable to access methods of WebDriver class when the WebDriver instance is passed to test class from conftest.py","## üêõ Bug Report    ## To Reproduce    1. Create a conftest.py file with below content.  ``` import pytest from selenium.webdriver.chrome import webdriver from webdriver_manager import chrome    @pytest.fixture(scope=""class"") def setup(request):     driver = webdriver.WebDriver(chrome.ChromeDriverManager().install())     driver.get(""https://www.google.com"")     request.cls.driver = driver     yield     driver.close() ```  2.  Create a module named test_e2e.py and paste the below code inside the module.  ``` import pytest  pytest.mark.usefixtures(""setup"")  class TestOne:      def test_func(self, setup):         self.driver.  # Does not show WebDriver methods ```   ## Expected behavior  When I call `self.driver.`, I am expecting all WebdDriver methods to be available.   Note - Interestingly, if I write the methods methods manually, the test is working as expected. For example - `print(self.driver.current.url)` # Returns the url    ## Test script or set of commands reproducing this issue  Already provided in the above steps.  ## Environment  OS:  Windows 10 Browser:  Chrome. But it is not related to the browser. Browser version: 83.0.4103.61 (Official Build) (64-bit) Browser Driver version: ChromeDriver 83.0.4103.39  Language Bindings version: Python 3.8 Selenium Grid version (if applicable): NA","closed","","PrabodhGhosh","2020-08-01T11:42:05Z","2021-09-05T09:02:48Z"
"","8666","Unable to initialize chrome driver with chrome driver 85 and chrome browser version 85","## üêõ Bug Report      If the issue is with Google Chrome consider logging an issue with chromedriver instead: https://chromedriver.chromium.org/help    ## To Reproduce  When executing any Test Script. chrome driver is not getting initialized and throwing null exception in visual studio 2019  Execute any selenium UI test case against goolge.com   here is the error I am getting in my visual studio 2019  ```   Message:      Test method  threw exception:      System.NullReferenceException: Object reference not set to an instance of an object.     TestCleanup method  threw exception. System.NullReferenceException: System.NullReferenceException: Object reference not set to an instance of an object.. ```   `session not created: This version of ChromeDriver only supports Chrome version 83 (SessionNotCreated)`   Detailed steps to reproduce the behavior:  ## Expected behavior  chrome driver should be initialized in visual studio 2019  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK. ```     [TestInitialize]         public static IWebDriver NavigateTo(string browser)         {             //accessing the web driver from the solution directory             var currentPath = Directory.GetCurrentDirectory();                           try                             if (browser.Contains(""Chrome""))                 {                                   ChromeOptions options = new ChromeOptions();                     options.AddArguments(/*""--headless"",*/ ""--disable-gpu"", ""--window-size=1920,1200"", ""--ignore-certificate-errors"", ""--silent"");                     options.PageLoadStrategy = PageLoadStrategy.Default;                                          driver = new ChromeDriver(currentPath, options);                         }                            catch (Exception e)             {                 _ = e.StackTrace;             }             return driver;         }  ``` ## Environment  OS: Windows 10 Browser: Chrome Version 85.0.4183.83 (Official Build) (64-bit) Browser version: Version 85.0.4183.83 (Official Build) (64-bit) Browser Driver version: ChromeDriver  85.0.4183.87 Language Bindings version: C# Visual Studio 2019","closed","needs-triaging,","qaguru1","2020-09-02T20:01:29Z","2021-09-05T08:37:13Z"
"","8742","Grid console reports ""0% free"" on Grid with no sessions","## To Reproduce  1. Start `selenium standalone` 2. Navigate to `http://localhost:4444` 3. Observe the nice circle indicating load on the grid.  ## Expected behavior  Grid should report it's ""100% free"" or ""0% loaded"". Instead it reports ""0% free"", which is incorrect.","closed","C-grid,","shs96c","2020-09-28T11:06:26Z","2021-09-05T08:33:57Z"
"","8849","Selenium works in terminal but not IPython (Process unexpectedly closed with status 11)","## System * IPython: 7.19.0, * OS: Ubuntu 20.10 (x86_64) * Gecko: 0.28.0 * Firefox: 82.0 * Selenium: 3.141.0 * Python3 venv  ## Testcase ``` from selenium import webdriver  driver = webdriver.Firefox(     executable_path='.driver/geckodriver') ``` ## Stacktrace For Gecko 0.28.0 (latest): ``` WebDriverException: Message: Process unexpectedly closed with status 11 ``` For Gecko 0.27.0: ``` WebDriverException: Message: invalid argument: can't kill an exited process ```  ## Description: The testcase works fine in `terminal` but not in `IPython` (from Python extension VSCode). I try to reinstall `python3 venv ` and `geckodriver` but nothing works.  If you need additional info, I would love to provide.","closed","","huytrvan","2020-11-07T08:42:09Z","2021-09-05T08:31:35Z"
"","8850","Selenium works in terminal but not IPython (Process unexpectedly closed with status 11)","## System  * IPython:  7.19.0 * OS: Ubuntu 20.10 (x86_64) * Gecko: 0.28.0 * Firefox: 82.0 * Selenium: 3.141.0  ## Testcase ``` from selenium import webdriver  driver = webdriver.Firefox(     executable_path='.driver/geckodriver') ``` ## Stacktrace For Gecko 0.28.0 (latest): ``` WebDriverException: Message: Process unexpectedly closed with status 11 ``` For Gecko 0.27.0: ``` WebDriverException: Message: invalid argument: can't kill an exited process ```  ## Description: The testcase works fine in `terminal` but not in `IPython` (from Python extension vscode). I try to reinstall `python3 venv ` and `geckodriver` but nothing works.  If you need additional info, I would love to provide.","closed","","huytrvan","2020-11-07T08:44:58Z","2021-09-05T08:31:34Z"
"","8663","switching Javascript-execution context to different iframe","## Switching Javascript-execution context to a (possibly cross-origin) iframe embedded in the main frame.  I would like to emulate Javascript-executing-context changes, as achievable  - in [Chrome DevTools](https://developers.google.com/web/tools/chrome-devtools/console/reference#context) through a drop-down menu; - in the Firefox Web Console, similarly (drop-down menu in the upper-right console corner); - in the Firefox Web Console through the `cd(iframe)` [facility](https://bugzilla.mozilla.org/show_bug.cgi?id=1605327).  ## Motivation  Automating logins that embed a cross-origin iframe for 2fa, for instance.  ## Example  I have a login window as described above, that embeds a prompt requesting an additional passcode. I have tried:  (1) Switching context ""manually"" to the iframe in the console (both Firefox and Chrome); I can then access the relevant buttons and forms through selectors, etc.  (2) Locating the iframe with Firefox headless + `node` + `selenium-webdriver` and switching to it:  ```js ifr = driver.findElement(By.id('frame_id')); driver.switchTo().frame(ifr); ``` This does switch and gives me access to a `DOM`, but it is *not* the one I can see in the console/inspector. In particular there are no buttons to access, etc.  In short: the `switchTo(iframe)` function does not seem to mirror Firefox' `cd(iframe)`.","closed","","stuart-little","2020-09-01T23:42:21Z","2021-09-05T08:37:15Z"
"","7872","chromedriver : AddCookie ERROR invalid cookie domain","## Selenium version python  selenium   3.141.0 ## To Reproduce  Detailed steps to reproduce the behavior:  I want to login in an URL by adcookie The url is `https://10.250.129.10/.....` The cookies  is `{""name"": key, ""value"": value}` But google chrome return the error above I had seen the python code : `Thrown when attempting to add a cookie under a different domain than the current URL.` The question is I didn't set the domain, and It works  well on windows but fails on docker in chromeless.  The code:  ```python def download_report(cookies, download_dir, url):     chrome_options = Options()     prefs = {""download.default_directory"": download_dir, ""download.prompt_for_download"": False, }     chrome_options.add_experimental_option(""prefs"", prefs)     chrome_options.add_argument(""--headless"")     chrome_options.add_argument('--no-sandbox')     chrome_options.add_argument('--disable-dev-shm-usage')     browser = webdriver.Chrome(options=chrome_options, service_log_path=""driver.log"")     try:         browser.get(url)         browser.add_cookie(cookies)         browser.refresh()         time.sleep(3)         element = WebDriverWait(browser, 5).until(             EC.element_to_be_clickable ((By.XPATH, '//span[@class=""export-pdf""][1]'))         )         element.click()         time.sleep(5)     finally:         browser.close() ``` Log: ``` [1576658487.720][INFO]: Starting ChromeDriver 79.0.3945.36 (3582db32b33893869b8c1339e8f4d9ed1816f143-refs/branch-heads/3945@{#614}) [1576658487.720][INFO]: Please protect ports used by ChromeDriver and related test frameworks to prevent access by malicious code. [1576658487.722][SEVERE]: bind() failed: Cannot assign requested address (99) [1576658487.722][INFO]: listen on IPv6 failed with error ERR_ADDRESS_INVALID [1576658488.722][INFO]: [cfd9ae4f563d208ab34192fe40a71a57] COMMAND InitSession {    ""capabilities"": {       ""alwaysMatch"": {          ""browserName"": ""chrome"",          ""goog:chromeOptions"": {             ""args"": [ ""--headless"", ""--no-sandbox"", ""--disable-dev-shm-usage"" ],             ""extensions"": [  ],             ""prefs"": {                ""download.default_directory"": ""/opt/ptd"",                ""download.prompt_for_download"": false             }          },          ""platformName"": ""any""       },       ""firstMatch"": [ {        } ]    },    ""desiredCapabilities"": {       ""browserName"": ""chrome"",       ""goog:chromeOptions"": {          ""args"": [ ""--headless"", ""--no-sandbox"", ""--disable-dev-shm-usage"" ],          ""extensions"": [  ],          ""prefs"": {             ""download.default_directory"": ""/opt/ptd"",             ""download.prompt_for_download"": false          }       },       ""platform"": ""ANY"",       ""version"": """"    } } [1576658488.723][INFO]: Populating Preferences file: {    ""alternate_error_pages"": {       ""enabled"": false    },    ""autofill"": {       ""enabled"": false    },    ""browser"": {       ""check_default_browser"": false    },    ""distribution"": {       ""import_bookmarks"": false,       ""import_history"": false,       ""import_search_engine"": false,       ""make_chrome_default_for_user"": false,       ""skip_first_run_ui"": true    },    ""dns_prefetching"": {       ""enabled"": false    },    ""download"": {       ""default_directory"": ""/opt/ptd"",       ""prompt_for_download"": false    },    ""profile"": {       ""content_settings"": {          ""pattern_pairs"": {             ""https://*,*"": {                ""media-stream"": {                   ""audio"": ""Default"",                   ""video"": ""Default""                }             }          }       },       ""default_content_setting_values"": {          ""geolocation"": 1       },       ""default_content_settings"": {          ""geolocation"": 1,          ""mouselock"": 1,          ""notifications"": 1,          ""popups"": 1,          ""ppapi-broker"": 1       },       ""password_manager_enabled"": false    },    ""safebrowsing"": {       ""enabled"": false    },    ""search"": {       ""suggest_enabled"": false    },    ""translate"": {       ""enabled"": false    } } [1576658488.723][INFO]: Populating Local State file: {    ""background_mode"": {       ""enabled"": false    },    ""ssl"": {       ""rev_checking"": {          ""enabled"": false       }    } } [1576658488.724][INFO]: Launching chrome: /usr/bin/google-chrome --disable-background-networking --disable-client-side-phishing-detection --disable-default-apps --disable-dev-shm-usage --disable-hang-monitor --disable-popup-blocking --disable-prompt-on-repost --disable-sync --enable-automation --enable-blink-features=ShadowDOMV0 --enable-logging --headless --load-extension=/tmp/.com.google.Chrome.YtBb5Z/internal --log-level=0 --no-first-run --no-sandbox --password-store=basic --remote-debugging-port=0 --test-type=webdriver --use-mock-keychain --user-data-dir=/tmp/.com.google.Chrome.NG08I0 data:, [1576658488.831][INFO]: resolved localhost to [""127.0.0.1"",""::1""] [1576658488.894][INFO]: [cfd9ae4f563d208ab34192fe40a71a57] RESPONSE InitSession {    ""capabilities"": {       ""acceptInsecureCerts"": false,       ""browserName"": ""chrome"",       ""browserVersion"": ""79.0.3945.79"",       ""chrome"": {          ""chromedriverVersion"": ""79.0.3945.36 (3582db32b33893869b8c1339e8f4d9ed1816f143-refs/branch-heads/3945@{#614})"",          ""userDataDir"": ""/tmp/.com.google.Chrome.NG08I0""       },       ""goog:chromeOptions"": {          ""debuggerAddress"": ""localhost:40525""       },       ""networkConnectionEnabled"": false,       ""pageLoadStrategy"": ""normal"",       ""platformName"": ""linux"",       ""proxy"": {        },       ""setWindowRect"": true,       ""strictFileInteractability"": false,       ""timeouts"": {          ""implicit"": 0,          ""pageLoad"": 300000,          ""script"": 30000       },       ""unhandledPromptBehavior"": ""dismiss and notify""    },    ""sessionId"": ""cfd9ae4f563d208ab34192fe40a71a57"" } [1576658488.896][INFO]: [cfd9ae4f563d208ab34192fe40a71a57] COMMAND Navigate {    ""url"": ""https://10.250.129.10/alarmReport.html?anchor=head&_id=1&type=active"" } [1576658488.896][INFO]: Waiting for pending navigations... [1576658488.897][INFO]: Done waiting for pending navigations. Status: ok [1576658489.132][INFO]: Waiting for pending navigations... [1576658489.133][INFO]: Done waiting for pending navigations. Status: ok [1576658489.133][INFO]: [cfd9ae4f563d208ab34192fe40a71a57] RESPONSE Navigate [1576658489.135][INFO]: [cfd9ae4f563d208ab34192fe40a71a57] COMMAND AddCookie {    ""cookie"": {       ""name"": ""PTDSYSSIGN"",       ""value"": ""EcLngDp1ZE5LcOQfxnghkOT6xYpG5RwGdKttrpsDL9BzJHSwrZ5WmFwpBBxoj0gywV_ReyhQTdKCmlXQOj0peaqYsHp0J-K_9MMpjb-yZXMiN3tzw6leG0B35VdFIzc3eyj4cXbDBzoepZ-LIJd7Ry5ClFR4CBmAfJyLD46iMXYY-cPYZiOuoj6DUF7a_jF0UZdGW...""    } } [1576658489.135][INFO]: Waiting for pending navigations... [1576658489.135][INFO]: Done waiting for pending navigations. Status: ok [1576658489.139][INFO]: Waiting for pending navigations... [1576658489.140][INFO]: Done waiting for pending navigations. Status: ok [1576658489.140][INFO]: [cfd9ae4f563d208ab34192fe40a71a57] RESPONSE AddCookie ERROR invalid cookie domain   (Session info: headless chrome=79.0.3945.79) [1576658489.141][INFO]: [cfd9ae4f563d208ab34192fe40a71a57] COMMAND CloseWindow {  } [1576658489.199][INFO]: [cfd9ae4f563d208ab34192fe40a71a57] RESPONSE CloseWindow [  ] ```  ## Environment  OS:  docker: centos/python-36-centos7:20191112-3617ffc Browser:  Chrome Browser version: 79.0.3945.79 Browser Driver version: 79.0.3945.36 Language Bindings version: python3.6 Selenium Grid version (if applicable):","closed","needs-triaging,","Amberlyd","2019-12-18T09:33:21Z","2020-01-18T05:02:00Z"
"","8204","Selenium server node failed to start new session for edge chromium","## Selenium server node failed to start new session for edge CHROMIUM  ## Expected Behavior New session starts for edge chromium browser.  ## Actual Behavior  **Test failed with message:**      Unable to create new service: EdgeDriverService     Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53'     System info: host: 'qh-automationV3', ip: '10.0.0.5', os.name: 'Windows Server 2016', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_251'     Driver info: driver.version: unknown (SessionNotCreated)   Stack Trace:      System.InvalidOperationException: Unable to create new service: EdgeDriverService Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53'  hub message: `13:44:27.378 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {browserName: MicrosoftEdge, ms:edgeChromium: true, ms:edgeOptions: {args: [--disable-plugins, disable-infobars, window-size=1920,1080], excludeSwitches: [--enable-automation], prefs: {credentials_enable_service: false, download.default_directory: C:\Downloads, download.prompt_for_download: false, intl.accept_languages: en, profile.password_manager_enabled: false}}} 13:44:27.378 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=d819ee35-9fbb-43aa-885d-c7f5bc91b1e5, webdriver.edgeChromium.driver=C:/SeleniumGrid/msedgedriver.exe, seleniumProtocol=WebDriver, browserName=MicrosoftEdge, maxInstances=20, platformName=XP, platform=XP}`  node message: `13:54:58.652 INFO [ActiveSessionFactory.apply] - Capabilities are: {   ""browserName"": ""MicrosoftEdge"",   ""ms:edgeChromium"": true,   ""ms:edgeOptions"": {     ""args"": [       ""--disable-plugins"",       ""disable-infobars"",       ""window-size=1920,1080""     ],     ""prefs"": {       ""download.default_directory"": ""C:\\Downloads"",       ""intl.accept_languages"": ""en"",       ""download.prompt_for_download"": false,       ""credentials_enable_service"": false,       ""profile.password_manager_enabled"": false     },     ""excludeSwitches"": [       ""--enable-automation""     ]   } } 13:54:58.652 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.edge.EdgeDriverService)`  ## Steps to reproduce  Run selenium-standalone-server.jar as hub java -jar selenium-server-standalone-3.141.59.jar -role hub -hubConfig DefaultHub.json -debug DefaultHub.json contens: {    ""port"": 4444,    ""newSessionWaitTimeout"":-1,    ""servlets"":[],    ""withoutServlets"": [],    ""capabilityMatcher"":""org.openqa.grid.internal.utils.DefaultCapabilityMatcher"",    ""throwOnCapabilityNotPresent"":true,    ""cleanUpCycle"":5000,    ""role"": ""hub"",    ""debug"": false,    ""browserTimeout"":240,    ""timeout"":360,    ""maxSession"":20 }  Run selenium-standalone-server.jar as node java -jar selenium-server-standalone-3.141.59.jar -role node -nodeConfig DefaultNodeWebDriver.json DefaultNodeWebDriver.json contents: {   ""capabilities"":       [         {           ""browserName"": ""firefox"",           ""maxInstances"": 5,           ""seleniumProtocol"": ""WebDriver""         },         {           ""browserName"": ""chrome"",           ""maxInstances"": 20,           ""seleniumProtocol"": ""WebDriver""         },         {           ""browserName"": ""MicrosoftEdge""           ""maxInstances"": 20,           ""seleniumProtocol"": ""WebDriver"",           ""webdriver.edge.driver"": ""C:/SeleniumGrid/msedgedriver.exe""         },         {           ""platform"": ""WINDOWS"",           ""browserName"": ""internet explorer"",           ""maxInstances"": 2,           ""seleniumProtocol"": ""WebDriver""         }       ],     ""proxy"": ""org.openqa.grid.selenium.proxy.DefaultRemoteProxy"",     ""maxSession"": 20,     ""port"": 3334,     ""register"": true,     ""registerCycle"": 7000,     ""nodePolling"": 8000,     ""unregisterIfStillDownAfter"": 60000,     ""downPollingLimit"": 3,     ""debug"": false,     ""role"": ""node"",     ""hub"": ""http://localhost:4444"",     ""servlets"" : [],     ""withoutServlets"": [],     ""custom"": {} }  Test is started  I can not find tutorial to setup selenium grid for use with Edge Chromium so I don`t sure in this setting: ""webdriver.edge.driver"": ""C:/SeleniumGrid/msedgedriver.exe""","closed","","orifn1","2020-04-16T14:10:30Z","2020-05-20T19:10:50Z"
"","8668","Unable to use Chrome options with the selenium 4.0 update","## selenium 4.0 update missing chrome options.  #Unable to use Chrome options with the selenium 4.0 update  >","closed","","Santhosh-SNaik","2020-09-03T03:00:31Z","2021-09-05T08:37:14Z"
"","8667","Chrome options class is not available in selenium 4.0","## selenium 4.0 update missing chrome options.  #Unable to use Chrome options with the selenium 4.0 update","closed","","Santhosh-SNaik","2020-09-03T02:46:01Z","2021-09-05T08:37:14Z"
"","8179","Handle modifier keys in actions sendKeys","## Problem  There is a certain confusion between send keys in actions vs element. Both allow to be used to simulate key chords (e.g. pressing a character key with a modifier key) but the behavior is very much different.  * Calling send keys on the element with a key chord gives a character printed with the **modifier** key pressed * Calling send_keys on the actions with a key chord gives a character printed **without** the modifier key pressed  Should make the behave similar to avoid user confusion and work like OSS dialect used to (it didn't have this problem)?  ## Root cause  The problem is in the way actions sendKeys construct keyDown/keyUp events. It doesn't differentiate between modifier and character keys, so it simply generates a pair of keyDown/keyUp events for every key.  For example, if we wanted to press _shift_ and _a_ using actions sendKeys, it would generate the following events:  * key down _shift_ * key up _shift_ * key down _a_ * key up _a_  If we would like to make actions sendKeys work similar to element sendKeys, it should generate the events in a different order:  * key down _shift_ * key down _a_ * key up _a_ * key up _shift_  ## Sample Code  Here is a sample code using http://the-internet.herokuapp.com/inputs and tested in Chrome/Firefox:  **Python**  ```python driver.find_element_by_tag_name('input').send_keys(Keys.SHIFT, 'a') # types ""A"" to the input  driver.find_element_by_tag_name('input').click() ActionChains(browser).send_keys(Keys.SHIFT, 'a').perform() # types ""a"" to the input ```  **Ruby**  ```ruby driver.find_element(tag_name: 'input').send_keys([:shift, 'a']) # types ""A"" to the input  driver.find_element(tag_name: 'input').click driver.action.send_keys([:shift, 'a']).perform # types ""a"" to the input ```","closed","help wanted,","p0deje","2020-04-08T15:56:07Z","2022-01-25T00:07:31Z"
"","8469","selenium4 beta - firefox_profiles.py 'No such file or directory: webdriver_prefs.json'","## Environment  OS:  win10 1909 Browser:  firefox Browser version:  77.0.1 Browser Driver version:  Geckodriver 0.26.0 Language Bindings version:  Python selenium==4.0.0a6.post1  I'm trying to use a profile, I create a profile using firefox about:profiles and create a new profile. This profile works fine from within firefox.  But when I try to load it with selenium using: ```         elif os.environ['WEBDRIVER'] == 'Firefox':             fp = None             if os.environ.get('WEBDRIVER_PROFILE') and os.environ['WEBDRIVER_PROFILE']:                 if os.path.isdir(os.environ['WEBDRIVER_PROFILE']):                     fp = webdriver.FirefoxProfile(os.environ['WEBDRIVER_PROFILE'])             driver = webdriver.Firefox(firefox_profile=fp) ``` I get this error: ``` conftest.py:109: in wd     driver =tools.selenium.myWebdriver(x, y) tools\selenium.py:127: in myWebdriver     fp = webdriver.FirefoxProfile(os.environ['WEBDRIVER_PROFILE']) ..\..\venvs\ssid-enrollment-client-test\lib\site-packages\selenium\webdriver\firefox\firefox_profile.py:58: in __init__     with open(os.path.join(os.path.dirname(__file__), E   FileNotFoundError: [Errno 2] No such file or directory: 'c:\\dist\\venvs\\ssid-enrollment-client-test\\lib\\site-packages\\selenium\\webdriver\\firefox\\webdriver_prefs.json' ``` The firefox_profile.py under site_packages\\selenium\\webdriver\\firefox\\firefox_profile.py have this: ``` WEBDRIVER_EXT = ""webdriver.xpi"" WEBDRIVER_PREFERENCES = ""webdriver_prefs.json"" EXTENSION_NAME = ""fxdriver@googlecode.com""   class AddonFormatError(Exception):     """"""Exception for not well-formed add-on manifest files""""""   class FirefoxProfile(object):     ANONYMOUS_PROFILE_NAME = ""WEBDRIVER_ANONYMOUS_PROFILE""     DEFAULT_PREFERENCES = None      def __init__(self, profile_directory=None):         """"""         Initialises a new instance of a Firefox Profile          :args:          - profile_directory: Directory of profile that you want to use. If a            directory is passed in it will be cloned and the cloned directory            will be used by the driver when instantiated.            This defaults to None and will create a new            directory when object is created.         """"""         if not FirefoxProfile.DEFAULT_PREFERENCES:             with open(os.path.join(os.path.dirname(__file__),                                    WEBDRIVER_PREFERENCES)) as default_prefs:                 FirefoxProfile.DEFAULT_PREFERENCES = json.load(default_prefs) ``` Was not webdriver.xpi replaced with geckodriver a long long time ago, strange this should show up in selenium4?  Thanks","closed","C-py,","fenchu","2020-06-29T11:40:03Z","2021-09-05T09:12:25Z"
"","8408","Ruby - stop using an obsolete method of Net::HTTP","## Description `Net::HTTP::Proxy` is an obsolete method, so replaced it with `Net::HTTP.new` as the doc says -> https://docs.ruby-lang.org/en/2.7.0/Net/HTTP.html#method-c-Proxy  ### Motivation and Context To keep the code up to date.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [x] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","C-rb,","masakazutakewaka","2020-06-09T16:22:01Z","2020-06-10T11:08:45Z"
"","8467","Selenium throws an InvalidArgumentException when passing a variable as locator to webdriver.find_element()","## Context I am using selenium with python and trying to separate my ```PageObjects``` from my code following the [official selenium documentation][1]: ```  from selenium.webdriver.common.by import By  class MainPageLocators(object):     """"""A class for main page locators. All main page locators should come here""""""     GO_BUTTON = (By.ID, 'submit')  ``` Doing it like above gives me an ```selenium.common.exceptions.InvalidArgumentException: Message: expected value at line 1 column 11``` error.  ## Reproducing I reproduced the error using the Google homepage: ```  from selenium import webdriver from selenium.webdriver.common.by import By   def test():     driver = webdriver.Firefox()     driver.get('https://www.google.com')      element = (By.NAME, ""btnK"")     driver.find_element(element)   if __name__ == ""__main__"":     test() ``` Full error: ``` Traceback (most recent call last):   File ""test.py"", line 14, in      test()   File ""test.py"", line 10, in test     driver.find_element(element)   File ""C:\Users\AppData\Local\Programs\Python\Python36\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 978, in find_element     'value': value})['value']   File ""C:\Users\AppData\Local\Programs\Python\Python36\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 321, in execute     self.error_handler.check_response(response)   File ""C:\Users\AppData\Local\Programs\Python\Python36\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.InvalidArgumentException: Message: expected value at line 1 column 11 ``` Interestingly passing directly passing the argument in the find_element function as follow works fine. ``` def test():     driver = webdriver.Firefox()     driver.get('https://www.google.com')      element = ()     driver.find_element(By.NAME, ""btnK"") ```     [1]: https://selenium-python.readthedocs.io/page-objects.html#locators  ## Environment  OS: Windows 10 Browser: Firefox Browser version: 77.0.1 Browser Driver version: GeckoDriver 0.26 Language Bindings version: Python 3.6 , python-selenium 3.141.0 Selenium Grid version (if applicable):    ## GeckoDriver logs ``` 1593341659616	mozrunner::runner	INFO	Running command: ""C:\\Program Files\\Mozilla Firefox\\firefox.exe"" ""-marionette"" ""-foreground"" ""-no-remote"" ""-profile"" ""C:\\Users\\xxx\\AppData\\Local\\Temp\\rust_mozprofileNZPCZw"" JavaScript error: resource://gre/modules/XULStore.jsm, line 66: Error: Can't find profile directory. 1593341663463	Marionette	INFO	Listening on port 62786 1593341663826	Marionette	WARN	TLS certificate errors will be ignored for this session JavaScript error: resource://gre/modules/NetworkGeolocationProvider.jsm, line 555: TypeError: xhr.response.location is undefined ```","closed","","ghost","2020-06-28T11:00:06Z","2021-09-05T08:31:37Z"
"","7939","Firefox 72.0.1 (64-bit, Windows 10) ignores options set by GeckoDriver (V026.0), Selenium 3.141.59. via Java. Used to work fine for Firefox 72.0 and older.","## ?? Bug Report Firefox 72.0.1 ignores options set by GeckoDriver. via Java. Used to work fine for Firefox 72.0 and older. This worked all right before I got Firefox 72.0.1. With 72.0.1 the PDF is opened in the pdf view of FireFox. I checked the FireFox option ""pdfjs.disabled"" in about:config and it is set to false. Any ideas how to fix this?   ## To Reproduce  package manuals_hpesc_test;  import java.io.File; import org.openqa.selenium.WebDriver; import org.openqa.selenium.firefox.FirefoxDriver; import org.openqa.selenium.firefox.FirefoxOptions; import org.openqa.selenium.firefox.FirefoxProfile;  public class Manuals_HPESC_Test {     public static void main(String[] args) {         Manuals_HPESC_Test m = new Manuals_HPESC_Test();         m.dowork();     }      private void dowork() {         firefox();     }      private void firefox() {         System.setProperty(""webdriver.gecko.driver"", ""< path to geckodriver.exe >"");          String fileDownloadPath = ""< directory >"";          Map prefsMap = new HashMap();         prefsMap.put(""profile.default_content_settings.popups"", 0);         prefsMap.put(""download.default_directory"", fileDownloadPath);          FirefoxProfile profile = new FirefoxProfile();         profile.setPreference(""browser.download.folderList"", 2);         File tempfile = new File(fileDownloadPath);         profile.setPreference(""browser.download.dir"", tempfile.getAbsolutePath());         profile.setPreference(""browser.helperApps.neverAsk.saveToDisk"", ""application/zip,application/octet-stream,application/pdf"");         profile.setPreference(""pdfjs.disabled"", true);         FirefoxOptions options = new FirefoxOptions();         WebDriver driver = new FirefoxDriver(options);         // page contains an iframe for a pdf         driver.get(""https://support.hpe.com/hpsc/doc/public/display?docLocale=en_US&docId=emr_na-a00045838en_us&withFrame"");         driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);         driver.manage().window().maximize();         try {             Thread.sleep(30000);         } catch (InterruptedException ex) {         } //        driver.findElement(By.linkText(""64 bit Windows IE"")).click();         System.out.println(""Downloaded"");         if (driver != null) {             try {                 driver.quit();             } catch (Exception e) {                 e.printStackTrace();             }          }      } }   ## Environment  OS: Windows 10 1909 64-bit Browser: FireFox 64-bit Browser version: 72.0.1 Browser Driver version: GeckoDriver V026.0 Language Bindings version: Java openjdk version ""1.8.0_222"" Selenium Grid version (if applicable):","closed","","RobertScharpf","2020-01-16T10:03:07Z","2020-02-15T10:14:39Z"
"","8325","selenium/standalone-chrome:4.0.0: ‚ÄúHost header or origin header is specified and is not localhost‚Äù","# üêõ Bug Report  Remote WebDriver fails to execute any command through a Selenium 4.0.0 Standalone Server in Chrome if any other (non IP address) hostname than ‚Äúlocalhost‚Äù is used for connecting to the Selenium Server.  Having URLs with other names than ‚Äúlocalhost‚Äù for the host part is a very common scenario in a containerized environment. Using IP addresses ususally is not an option in environments as dynamic as e.g. a Kuberneter cluster.  The root cause may be related to [this Chromium issue](https://bugs.chromium.org/p/chromium/issues/detail?id=813540).  ## Detailed steps to reproduce the behavior:  This issue can be reproduced by running basic remote WebDriver commands against a selenium/standalone-chrome:4.0.0 Docker container.  Given you have Docker installed and you have unpacked the attached  [selenium.zip file](https://github.com/SeleniumHQ/selenium/files/4652544/selenium.zip).  1. Open a shell. 2. Run `docker-compose up -d`. 3. Run `docker-compose run client python /selenium4.py`.   ``` Traceback (most recent call last):   File ""/selenium4.py"", line 7, in      driver.get(""http://www.google.com"")   File ""/usr/local/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py"", line 333, in get     self.execute(Command.GET, {'url': url})   File ""/usr/local/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py"", line 321, in execute     self.error_handler.check_response(response)   File ""/usr/local/lib/python3.8/site-packages/selenium/webdriver/remote/errorhandler.py"", line 208, in check_response     raise exception_class(value) selenium.common.exceptions.WebDriverException: Message: Host header or origin header is specified and is not localhost.   ``` For demonstrating that this is not an issue with selenium/standalone-chrome:3.141.59, run: `docker-compose run client python /selenium3.py`.   ```   []   ```  The commands in selenium3.py and selenium4.py are as simple as:  ```python driver.get(""http://www.google.com"") print(driver.find_elements_by_tag_name(""body"")) ```  ## Expected behavior  selenium4.py should complete successfully.  selenium4.py does complete successfully when being run from the host machine (given Python is installed) with `http://localhost:4444`, resp. as the Selenium Server URL.  ## Environment  Browser: Chrome Browser Version: The one included with selenium/standalone-chrome:4.0.0 Selenium Grid version: 4.0.0","closed","","devopsix","2020-05-19T18:53:56Z","2021-09-05T10:02:40Z"
"","8500","Typo fix-up in dotnet/test/common/VisibilityTest.cs","# Description ""shoudl"" --> ""should""  ### Motivation and Context Typo  ### Types of changes - [x] Bug fix (non-breaking change which fixes an issue)  ### Checklist - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [x] All new and existing tests passed.","closed","","haqer1","2020-07-10T10:50:25Z","2020-07-10T10:59:01Z"
"","8404","[Python] How to escape fileupload modal?","![image](https://user-images.githubusercontent.com/58951614/84145122-48b62600-aa94-11ea-9fdf-a3f34ca92611.png)   I try to 'ActionChains(driver).send_keys(Keys.ESCAPE).perform()' but it is not work.  The driver does not shut down properly because the modal is not shut down properly.  please help","closed","","dontbesatisfied","2020-06-09T12:02:42Z","2021-09-05T09:36:49Z"
"","8420","Level of verbosity","![Eclipse](https://user-images.githubusercontent.com/61809949/84596291-183c0680-ae5d-11ea-81fe-f8b1ac8e34c2.png) ## üí¨ Questions and Help  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","moustafawahba","2020-06-14T14:35:53Z","2021-09-05T09:36:47Z"
"","8299","High CPU processor usage with firefox-v40,gecko-0.23 and selenium-v3.14.0","description:: I am using selenium with firefox-v61 and geckodriver-0.23 for crawling. I am running it with heavy scale -around 50 simultaneous processes of firefox every time in a new window. but firefox is using very high processor usage- around 3 processes(including 2 child-Id) for every site opening and rendering . And my total cpu usage of machine is becoming around 60 to 70. I am opening every time a new firefox instance to open the site due to some project criteria.  Earlier i used the older version of firefox-v40 and for opening a site only one process(no child-Id) is used per site for opening in firefox.And total processor usage in that case was around 25 to 30. Now i have upgraded selenium and firefox in my project and due to this issue i am not able to go ahead with my project. Can you please let me know how can i overcome the process usage of firefox with such scenario?  Detailed steps to reproduce the behavior: If you open mulitple firefox with v40 and v61, you can see the difference in processor usage.  Expected behavior: The processor usage should be same or somewhat more than what it used to be at firefox-v40, but not such a heavy difference.  Script: my $max_processes = 50; my $disply = 100 + (int(rand 30) * 3); my $ROOT_PATH = /home/developer/crawler; my $JSpiderVersion = v4.1.0; my cmd=""xvfb-run -n $disply -a -s '-screen 0 1024x768x24' $ROOT_PATH/jdk1.8.0_181/bin/java -Xmx2g -XX:ParallelGCThreads=2 -Dwebdriver.gecko.driver=$ROOT_PATH/etc/geckoDriver_0.23/geckodriver -cp $ROOT_PATH/release/$JSpiderVersion/JSpider-$JSpiderVersion.jar com.naukri.crawler.driver.Srp --config $ROOT_PATH/release/$JSpiderVersion/etc/crawler.srp.config"";  Environment::  OS: ubunt 18.0.4 Browser: firefox Browser version: 61,0 Browser Driver version: GeckoDriver 0.23 Language Bindings version: Java 8 Selenium Grid version (if applicable):  3.14.0","closed","","siddhant42","2020-05-13T06:17:27Z","2021-09-05T10:02:52Z"
"","8583","[tracing] Structured logging based on Span events","### Description  The changes are related to issue #6694. Current implementation has structured logging in place, the changes provide additional context to the logs by encapsulating the information from span and events to logs by primarily logging events. This is the first iteration to make changes beginning with logging HTTP calls and database calls.  Changes below include: 1. Add logging for events at INFO level as JSON in LoggingOptions. 2. Update in event attribute datatypes to add arrays for String, Long, Double and Boolean. 3. Standardise error events to match OpenTelemetry specification https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/trace/semantic_conventions/exceptions.md. 4. Instrument SpanWrappedHTTPHandler and TracedHTTPClient with events for logging.  5. Instrument HandleSession, ReverseProxyHandler, JDBCBackedSessionMap and RedisBackedSessionMap with events for logging. 6. Instrument DockerSessionFactory and DriverServiceSessionFactory with events for logging. 7. Instrument LocalNode, LocalSessionMap, LocalDistributor. ProtocolConverter and GridStatusHandler with events for logging.  ### Motivation and Context Span events can have attributes which can store all possible information for a particular operation. Leveraging the events, this information can be added to logs to provide rich contextual information in logs. This makes the debugging process easier. Rather than having multiple log statements for a single operation, event can be used to capture all possible context (including high-cardinality values) and used in logging.   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [X] Breaking change (fix or feature that would cause existing functionality to change)   ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2020-07-29T05:35:53Z","2020-08-18T13:15:16Z"
"","8656","update idea project to point to used maven repository names","# A small update to an Intellij IDEA project file ### Description This change will update the ""maven.iml"" file to have all the maven repository names in build file ""maven_deps.bzl"" reflected in the Intellij IDEA project files.   ### Motivation and Context After downloading the Selenium project and opening said project with Intellij IDEA 2020, the IDE was unable to identify external Java dependencies.  Upon investigation, it appears that only one maven repository is referenced even though 4 maven repositories are referenced in the build files.  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","Bioshock667","2020-08-30T20:50:46Z","2020-09-03T13:48:55Z"
"","8527","Drag and drop is not working in selenium automation with SVG tag : ElementNotInteractableException","Trying to drag above element inside below SVG element in automation. But we are getting error ""ElementNotInteractableException: Message: element not interactable""    Need to include any specific library to handle svg elements in automation ?","closed","","RamjiRamachandran","2020-07-15T09:30:30Z","2021-09-05T09:03:02Z"
"","8734","[py] Fix uploading multiple files on remote driver (#7472)","### Description Fix uploading mutliple files on remote driver.  ### Motivation and Context  https://github.com/SeleniumHQ/selenium/issues/7472  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","rsporny","2020-09-25T09:54:22Z","2020-10-28T15:55:59Z"
"","8243","Fix get-location atom for ChromeDriver","### Description ChromeDriver has always expected get-location atom to return the location of an element on page (an old copy of this definition still exists in javascript/atoms/fragments/build.desc). However, after the build system was changed to Bazel, get-location now returns current geo location. This commit restores the old definition for ChromeDriver.  ### Motivation and Context Currently ChromeDriver is using an old copy of the get-location atom, copied and pasted from older version of Selenium code. This fix will allow ChromeDriver to get the right definition of get-location atom.  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","JohnChen0","2020-04-26T03:11:17Z","2020-04-27T15:16:45Z"
"","8556","react grid ui for v4","### Description  The updated grid UI with status filtering and status updates.   ### Motivation and Context   ### Types of changes  - [x] New feature (non-breaking change which adds functionality) - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.  Tests are not fully done. will be adding them in a followup PR.","closed","","phanirithvij","2020-07-21T07:08:00Z","2020-12-18T06:10:02Z"
"","8557","[tracing] Add tracing to JDBC backed sessionmap for calls to the driver.","### Description  The JDBC backed session map makes calls to the respective JDBC driver to store sessions in the database. The changes instrument tracing. It is related to issue #6703.  ### Motivation and Context The changes add tracing and error events to track the calls made to the database.  It will help debug error situations.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2020-07-21T08:19:10Z","2020-07-24T09:35:56Z"
"","8673","New Session Request Queue and Queuer","### Description  Change are for the issue #8558.   - Every new session request goes to the NewSessionQueuer and it checks if capabilities exist or rejects the request. - Every new session request is added to the NewSessionQueue and NewSessionQuerer blocks until it gets a response. - The components communicate via event bus and events. New event objects are added. - LocalDistributor picks up the new session request event via event bus listener. - LocalDistributor checks if the request has timed out and rejects the event.  - LocalDistributor will reject a request if the capabilities do not exist.  - LocalDistributor will retry the request if capabilities exist in the Nodes and all slots are busy. -  /session endpoint and respective methods are removed from the Distributor interface. - Remote and Local counterpart are added for fully distributed mode. - NewSessionQueuerServer is introduced and other Grid commands(RouterServer, Hub, Standalone)  are updated accordingly. - Configurable values of retry interval and request timeout is added.  - Update Bazel BUILD files.  TODO: Add tracing and event log.  ### Motivation and Context Currently, if all slots within the nodes are busy, the new session request is rejected immediately. These requests should be instead added to a queue and handler as the slots become free.   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [X] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [X] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. (TODO) - [X] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2020-09-04T13:50:36Z","2020-09-07T09:36:23Z"
"","8817","[event-bus] Fix the double check for lazy initialisation of EventBus instance in EventBusOptions.","### Description  Adding a local variable in the getEventBus() method of EventBusOptions to make lazy initialisation of EventBus thread-safe.  ### Motivation and Context  SonarLint pointed out a double-checking issue in EventBusOptions. https://sonarcloud.io/component_measures?id=selenium&metric=reliability_rating&selected=selenium%3Ajava%2Fserver%2Fsrc%2Forg%2Fopenqa%2Fselenium%2Fgrid%2Fserver%2FEventBusOptions.java&view=list   In order to provide thread-safety, the issue is fixed by using a local variable inside the method and double-checking on it. The solution is per the suggestion from the Sonar linter.  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2020-10-23T10:47:00Z","2020-10-26T11:14:43Z"
"","8559","Send registration-secret via header for web calls","","closed","","AutomatedTester","2020-07-21T10:38:56Z","2021-09-05T08:15:46Z"
"","8482","Problem with loading https://www.bet365.it . Grey screen","","closed","","marianmelnychuk","2020-07-05T06:40:17Z","2021-09-05T09:12:38Z"
"","8381","Issue with FirefoxProfiles and Selenium 4","","closed","","pedrorubster","2020-06-02T12:16:26Z","2021-09-05T09:43:53Z"
"","8246","Couldn't register this node: The hub is down or not responding","","closed","","mikenlanggio","2020-04-26T08:50:22Z","2021-09-05T10:20:24Z"